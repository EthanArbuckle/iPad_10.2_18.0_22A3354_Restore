void sub_23FC90820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  unsigned int *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;

  sub_23FC061F0();
  v77 = v2;
  v4 = v3;
  sub_23FBFD684(&qword_256F5F5E8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  v75 = v7;
  v76 = sub_23FD727B8();
  v74 = *(_QWORD *)(v76 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC93168(v10, v73[0]);
  sub_23FBFD684(&qword_256F5F5F0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC8FD1C();
  sub_23FBFD684(&qword_256F5F5F8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC061C0();
  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC100D4();
  v19 = v17 - v18;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)v73 - v22;
  sub_23FBFD684(&qword_256F5F5E0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FC10388();
  sub_23FBFD684(&qword_256F65DD0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FC100D4();
  v30 = v28 - v29;
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)v73 - v33;
  v35 = sub_23FD72A28();
  v36 = sub_23FC93118(v35, sel_absoluteTimestamp);
  if (v36)
  {
    v37 = v36;
    sub_23FD713F0();

    v38 = sub_23FD71414();
    v39 = (uint64_t)v34;
    v40 = 0;
  }
  else
  {
    v38 = sub_23FD71414();
    v39 = (uint64_t)v34;
    v40 = 1;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v39, v40, 1, v38);
  sub_23FD729E0();
  sub_23FD713FC();
  sub_23FD71414();
  sub_23FC931FC(v30);
  v41 = sub_23FD729EC();
  v42 = sub_23FC93118(v41, sel_transcriptStatementId);
  if (v42)
  {
    v43 = v42;
    v44 = objc_msgSend(v42, sel_sessionId);

    if (v44)
    {
      sub_23FD7145C();

    }
    v46 = sub_23FBFF104();
    sub_23FC931A0(v46);
    sub_23FC92F94(v19, (uint64_t)v23);
  }
  else
  {
    v45 = sub_23FD71474();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v23, 1, 1, v45);
  }
  v47 = sub_23FD72B30();
  MEMORY[0x24BDAC7A8](v47, v48);
  v73[-2] = (uint64_t)v23;
  sub_23FC93024();
  sub_23FBFEF74((uint64_t)v23, qword_254346A10);
  sub_23FC931B4();
  v49 = sub_23FD729D4();
  v50 = sub_23FC93118(v49, sel_transcriptStatementId);
  v51 = v50;
  if (v50)
  {
    objc_msgSend(v50, sel_statementIndex);

  }
  v78 = v51 == 0;
  sub_23FD72A10();
  switch(objc_msgSend(v4, sel_trigger))
  {
    case 1u:
      v52 = (unsigned int *)MEMORY[0x24BE58CF0];
      break;
    case 2u:
      v52 = (unsigned int *)MEMORY[0x24BE58CE0];
      break;
    default:
      v52 = (unsigned int *)MEMORY[0x24BE58CE8];
      break;
  }
  v53 = *v52;
  sub_23FD72AB8();
  sub_23FC9322C();
  sub_23FC93224(v1, v53, v54);
  sub_23FD72AB8();
  sub_23FC93240();
  v55 = sub_23FD729F8();
  v56 = sub_23FC93118(v55, sel_tupleInteraction);
  if (v56)

  v57 = sub_23FD72A04();
  v58 = sub_23FC93118(v57, sel_tupleInteraction);
  if (v58)
  {
    v59 = v58;
    v60 = v73[1];
    sub_23FD727AC();
    v61 = objc_msgSend(v59, sel_candidateIds);
    sub_23FC8FC50(0, &qword_256F5F590);
    v62 = sub_23FD74CD8();

    MEMORY[0x24BDAC7A8](v63, v64);
    sub_23FC93270();
    sub_23FC8DD04((uint64_t)sub_23FC92F6C, v65, v62);
    sub_23FC5A2A8();
    sub_23FD72794();
    objc_msgSend(v59, sel_userAlignment);
    sub_23FC92784();
    v66 = sub_23FC932C8();
    sub_23FC930A4(v66);
    sub_23FD727A0();

    sub_23FC93224(v0, v60, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 32));
    sub_23FC93064(v0);

  }
  else
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 1, 1, v76);
  }
  v67 = sub_23FD72A1C();
  v68 = sub_23FC93118(v67, sel_candidateInteractions);
  sub_23FC8FC50(0, &qword_256F5F580);
  v69 = sub_23FD74CD8();

  MEMORY[0x24BDAC7A8](v70, v71);
  sub_23FC93270();
  sub_23FC8DD30((uint64_t)sub_23FC92F44, v72, v69);
  swift_bridgeObjectRelease();
  sub_23FD729C8();
  sub_23FC060D4();
}

void sub_23FC90DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23FBFD684(&qword_256F5F5C0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC12F34();
  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC93074();
  sub_23FD72680();
  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  v6 = sub_23FBFF104();
  sub_23FBFF0D8(v0, v7, v8, v6);
  sub_23FD72674();
  sub_23FD74024();
  v9 = sub_23FD726D4();
  sub_23FBFF0D8(v1, v10, v11, v9);
  sub_23FD72668();
  sub_23FC09258();
}

uint64_t sub_23FC90E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  _BYTE *v15;

  v3 = sub_23FBFD684(qword_254346A10);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23FBFD684(&qword_256F5F5E0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_23FD71474();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, a2, v11);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v6, 0, 1, v11);
  v12 = sub_23FD72B30();
  v15 = v6;
  sub_23FD72B3C();
  sub_23FBFEF74((uint64_t)v6, qword_254346A10);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v10, 0, 1, v12);
  return sub_23FD72848();
}

uint64_t sub_23FC90FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = sub_23FBFD684(qword_254346A10);
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC92F18(a2, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), qword_254346A10);
  return sub_23FD72B24();
}

uint64_t sub_23FC91078()
{
  return sub_23FD728B4();
}

void sub_23FC910A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  int v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  sub_23FC061F0();
  v5 = v4;
  v6 = sub_23FD72800();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F5F630);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_23FC0610C();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v11);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC9308C();
  sub_23FBFD684(&qword_256F5F638);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC93074();
  sub_23FD72758();
  v16 = (int *)type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  sub_23FC12ECC(v5 + v16[8], v3, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  v17 = sub_23FBFD684(&qword_256F5D4E8);
  v18 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, 1, v17);
  sub_23FD728A8();
  sub_23FC9322C();
  if (v18 == 1)
  {
    sub_23FC932AC(*MEMORY[0x24BE58AC0], v19);
  }
  else
  {
    sub_23FC932AC(*MEMORY[0x24BE58AC8], v19);
    sub_23FBFEF74(v3, &qword_256F5D4E0);
  }
  sub_23FC931FC(v1);
  MEMORY[0x242676500](v1);
  sub_23FC91688(v5 + v16[9]);
  v20 = sub_23FD72710();
  sub_23FC930A4(v20);
  sub_23FD72734();
  v21 = sub_23FC91798(*(_BYTE *)(v5 + v16[10]), *(_BYTE *)(v5 + v16[10] + 8), *(_QWORD *)(v5 + v16[10] + 16), *(_QWORD *)(v5 + v16[10] + 24));
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v25 = MEMORY[0x24BEE4AF8];
    sub_23FC9B51C();
    v23 = v21 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23FC919B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v25 + 16);
      if (v24 >= *(_QWORD *)(v25 + 24) >> 1)
        sub_23FC9B51C();
      *(_QWORD *)(v25 + 16) = v24 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 32))(v25+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v24, v2, v6);
      v23 += 32;
      --v22;
    }
    while (v22);
  }
  swift_bridgeObjectRelease();
  sub_23FD72740();
  sub_23FC060D4();
}

void sub_23FC91344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;

  sub_23FC061F0();
  v4 = v3;
  sub_23FBFD684(&qword_256F5F618);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  v7 = sub_23FD7286C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5F620);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC8FD1C();
  sub_23FBFD684(&qword_256F5F598);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC10118();
  sub_23FBFD684(&qword_256F5F628);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC061C0();
  sub_23FD7283C();
  v16 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  sub_23FC92000(v4 + v16[5], v2);
  v17 = sub_23FD727C4();
  sub_23FBFF0D8(v2, v18, v19, v17);
  sub_23FD72818();
  sub_23FC92134();
  v20 = sub_23FC932B8();
  sub_23FC932F4(v20);
  sub_23FD72824();
  sub_23FC100A0(v0, **((unsigned int **)&unk_25100F7C8 + *(char *)(v4 + v16[8])), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 104));
  sub_23FC100A0(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  sub_23FC93054(v1);
  sub_23FD7280C();
  v22 = *(_BYTE *)(v4 + v16[9]);
  sub_23FC92228(&v22);
  v21 = sub_23FD72770();
  sub_23FC932D0(v21);
  sub_23FD72830();
  sub_23FC060D4();
}

void sub_23FC914F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23FC061F0();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  sub_23FBFD684(&qword_256F5F5E8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FC061D8();
  sub_23FBFD684(&qword_256F5F598);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FC100D4();
  v34 = v32 - v33;
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&a9 - v37;
  v39 = sub_23FC932B8();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FC0603C();
  v42 = objc_msgSend(v25, sel_candidateId);
  sub_23FC92608();

  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v38, 1, v39) == 1)
  {
    sub_23FBFEF74((uint64_t)v38, &qword_256F5F598);
    v43 = 1;
  }
  else
  {
    sub_23FC100A0(v20, (uint64_t)v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
    sub_23FD72890();
    sub_23FC100A0(v34, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
    sub_23FC93054(v34);
    sub_23FD72878();
    objc_msgSend(v25, sel_userAlignment);
    sub_23FC92784();
    v44 = sub_23FC932C8();
    sub_23FC932D0(v44);
    sub_23FD72884();
    sub_23FC100E4(v20, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    v43 = 0;
  }
  v45 = sub_23FD7289C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v27, v43, 1, v45);
  sub_23FC060D4();
}

void sub_23FC91688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23FD72788();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F5F668);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5F670);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC10388();
  sub_23FD72704();
  sub_23FC91E18(a1);
  v11 = sub_23FC932C0();
  v12 = sub_23FC930A4(v11);
  MEMORY[0x2426764A0](v12);
  v13 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  sub_23FC1046C(v1, **((unsigned int **)&unk_25100F7E8 + *(char *)(a1 + *(int *)(v13 + 20))), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 104));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v1, v4);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, 0, 1, v4);
  MEMORY[0x2426764AC](v2);
  sub_23FC6264C();
}

uint64_t sub_23FC91798(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;

  sub_23FBFD684(&qword_256F5F660);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23FD769D0;
  *(_BYTE *)(v8 + 32) = a1;
  *(_BYTE *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = a3;
  *(_QWORD *)(v8 + 56) = a4;
  v9 = *(_QWORD *)(a4 + 16);
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v8;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  for (i = (uint64_t *)(a4 + 56); ; i += 4)
  {
    v11 = *(i - 1);
    v12 = *i;
    v13 = *((unsigned __int8 *)i - 16);
    v14 = *((unsigned __int8 *)i - 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_23FC91798(v14, v13, v11, v12);
    sub_23FC5A2A8();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v8 + 16);
    if (__OFADD__(v17, v16))
      break;
    if (v17 + v16 > *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23FC99440();
      v8 = v24;
      if (*(_QWORD *)(v15 + 16))
      {
LABEL_6:
        v18 = *(_QWORD *)(v8 + 16);
        if ((*(_QWORD *)(v8 + 24) >> 1) - v18 < v16)
          goto LABEL_23;
        v19 = v8 + 32 * v18 + 32;
        if (v15 + 32 < v19 + 32 * v16 && v19 < v15 + 32 + 32 * v16)
          goto LABEL_25;
        swift_arrayInitWithCopy();
        if (v16)
        {
          v21 = *(_QWORD *)(v8 + 16);
          v22 = __OFADD__(v21, v16);
          v23 = v21 + v16;
          if (v22)
            goto LABEL_24;
          *(_QWORD *)(v8 + 16) = v23;
        }
        goto LABEL_17;
      }
    }
    else if (v16)
    {
      goto LABEL_6;
    }
    if (v16)
      goto LABEL_22;
LABEL_17:
    swift_bridgeObjectRelease();
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  result = sub_23FD75278();
  __break(1u);
  return result;
}

void sub_23FC919B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  unint64_t v46;
  _QWORD v47[2];
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;

  sub_23FC061F0();
  v53 = v5;
  v56 = v6;
  LODWORD(v57) = v7;
  v9 = v8;
  v59 = _s19EvaluatorVoteSourceOMa(0);
  v55 = *(_QWORD *)(v59 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC100D4();
  v14 = (_BYTE *)(v12 - v13);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)v47 - v17;
  v19 = sub_23FD7277C();
  sub_23FC931DC();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FC100D4();
  v58 = v22 - v23;
  MEMORY[0x24BDAC7A8](v24, v25);
  v60 = (char *)v47 - v26;
  sub_23FBFD684(&qword_256F5F640);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FC93184();
  sub_23FD72728();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FC061C0();
  sub_23FBFD684(&qword_256F5F648);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v31, v32);
  sub_23FC061D8();
  sub_23FD727F4();
  sub_23FC100A0(v4, **((unsigned int **)&unk_25100F808 + (char)v56), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  sub_23FC100A0(v0, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_23FC93054(v0);
  MEMORY[0x242676584](v0);
  sub_23FC91F4C(v57);
  v33 = v53;
  v47[1] = v9;
  MEMORY[0x24267659C](v1);
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v61 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23FC9BA3C();
    v35 = v33 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v57 = *(_QWORD *)(v55 + 72);
    v36 = *MEMORY[0x24BE58958];
    v51 = *MEMORY[0x24BE58978];
    v52 = v36;
    v37 = *MEMORY[0x24BE58980];
    v49 = *MEMORY[0x24BE58960];
    v50 = v37;
    v48 = *MEMORY[0x24BE58990];
    LODWORD(v56) = *MEMORY[0x24BE58968];
    v38 = *MEMORY[0x24BE58970];
    v54 = *MEMORY[0x24BE58988];
    LODWORD(v55) = v38;
    do
    {
      sub_23FC12ECC(v35, (uint64_t)v18, _s19EvaluatorVoteSourceOMa);
      sub_23FC12ECC((uint64_t)v18, (uint64_t)v14, _s19EvaluatorVoteSourceOMa);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        _s21ActionExecutionResultOMa(0);
        v43 = (char *)&loc_23FC91C88 + 4 * byte_23FD778C0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      v39 = v58;
      if (*v14)
      {
        if (*v14 == 1)
        {
          v40 = sub_23FC930C8();
          v42 = v56;
        }
        else
        {
          v40 = sub_23FC930C8();
          v42 = v54;
        }
      }
      else
      {
        v40 = sub_23FC930C8();
        v42 = v55;
      }
      sub_23FC5AE8C(v40, v42, v41);
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 32);
      v44(v60, v39, v19);
      sub_23FBFEF18((uint64_t)v18, _s19EvaluatorVoteSourceOMa);
      v45 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9BA3C();
        v45 = v61;
      }
      v46 = *(_QWORD *)(v45 + 16);
      if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_23FC9BA3C();
        v45 = v61;
      }
      *(_QWORD *)(v45 + 16) = v46 + 1;
      v44((char *)(v45+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v46), (uint64_t)v60, v19);
      v61 = v45;
      v35 += v57;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
  }
  sub_23FD727DC();
  sub_23FC060D4();
}

void sub_23FC91E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  char *v7;

  type metadata accessor for FeedbackLearning.TaskStatus(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC93074();
  sub_23FC12ECC(a1, v1, v5);
  v6 = sub_23FBFD684(&qword_256F5D4F8);
  v7 = (char *)sub_23FC91E98
     + 4 * byte_23FD778C5[_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, v6)];
  __asm { BR              X10 }
}

void sub_23FC91E98()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v6 = *MEMORY[0x24BE58848];
      sub_23FC932C0();
      v7 = sub_23FC93284();
      v8(v7, v6);
      goto LABEL_7;
    }
    v2 = (unsigned int *)MEMORY[0x24BE58828];
  }
  else
  {
    v2 = (unsigned int *)MEMORY[0x24BE58830];
  }
  v3 = *v2;
  sub_23FC932C0();
  v4 = sub_23FC93284();
  v5(v4, v3);
  sub_23FBFEF18(v0, type metadata accessor for FeedbackLearning.TaskFailureReason);
LABEL_7:
  sub_23FC09258();
}

void sub_23FC91F4C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23FC91F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x24BE58D30];
  v2 = sub_23FD72AE8();
  sub_23FC93224(v0, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104));
  sub_23FD72AE8();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v2);
}

void sub_23FC92000(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  unsigned int *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v7 = sub_23FD7157C();
  sub_23FC931DC();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC12F34();
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC0603C();
  sub_23FC12ECC(a1, v3, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_23FD728C0();
      sub_23FD728B4();
      v14 = (unsigned int *)MEMORY[0x24BE589E0];
      goto LABEL_7;
    }
    sub_23FC92434();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v7);
    sub_23FC92328();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v7);
  }
  v14 = (unsigned int *)MEMORY[0x24BE589E8];
LABEL_7:
  v15 = *v14;
  sub_23FD727C4();
  sub_23FC9322C();
  v16(a2, v15);
  sub_23FC6264C();
}

void sub_23FC92134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FC061F0();
  sub_23FC932A4();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5F5E0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC0610C();
  v6 = sub_23FD71D80();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC9308C();
  sub_23FD72854();
  sub_23FD72D7C();
  sub_23FD71D74();
  v9 = sub_23FBFF104();
  sub_23FC93030(v9);
  sub_23FC93024();
  sub_23FC93140();
  sub_23FC931B4();
  sub_23FD72848();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v6);
  sub_23FC060D4();
}

uint64_t sub_23FC92228(unsigned __int8 *a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = *a1;
  if (v1 >> 6)
  {
    if (v1 >> 6 == 1)
      __asm { BR              X10 }
    __asm { BR              X10 }
  }
  sub_23FD72770();
  v2 = sub_23FC9320C();
  return sub_23FC06104(v2, v3, v4, v5);
}

void sub_23FC92328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC932A4();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5F5E0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC930D4();
  sub_23FD71570();
  sub_23FD75344();
  sub_23FD74C48();
  swift_bridgeObjectRelease();
  sub_23FC924F4();
  swift_bridgeObjectRelease();
  v4 = sub_23FBFF104();
  sub_23FC93030(v4);
  sub_23FC93024();
  sub_23FC93140();
  sub_23FC930F0();
  sub_23FC6264C();
}

void sub_23FC92434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC932A4();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5F5E0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC930D4();
  sub_23FC924F4();
  v4 = sub_23FBFF104();
  sub_23FC93030(v4);
  sub_23FC93024();
  sub_23FC93140();
  sub_23FC930F0();
  sub_23FC6264C();
}

void sub_23FC924F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23FC061F0();
  v6 = v5;
  v7 = sub_23FD71FFC();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC10274();
  sub_23FD71DF8();
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC0A0A8();
  v12 = sub_23FD71D80();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_23FC061C0();
  sub_23FBFF1E4(v3, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v1, *MEMORY[0x24BE53B08], v7);
  swift_bridgeObjectRetain();
  sub_23FD71FF0();
  sub_23FC10454(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23FD71D8C();
  sub_23FD71D74();
  sub_23FC5B3B0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_23FC060D4();
}

void sub_23FC92608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  sub_23FC061F0();
  v5 = v4;
  v6 = sub_23FD72BF0();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC10274();
  sub_23FD72DB8();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC8FD1C();
  if (v5)
  {
    sub_23FC92828(v5, (SEL *)&selRef_identifier);
    if (v11)
    {
      sub_23FC92828(v5, (SEL *)&selRef_bundleId);
      if (v12)
      {
        sub_23FD72D94();
        sub_23FC92134();
        sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_23FD724DC();
  v13 = sub_23FD72BE4();
  v14 = sub_23FD74F54();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23FBF8000, v13, v14, "Unable to create a candidate identifier", v15, 2u);
    MEMORY[0x2426798D8](v15, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
LABEL_9:
  v16 = sub_23FC932B8();
  sub_23FC931A0(v16);
  sub_23FC060D4();
}

uint64_t sub_23FC92784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23FC932C8();
  v0 = sub_23FC9320C();
  return sub_23FC06104(v0, v1, v2, v3);
}

uint64_t sub_23FC92828(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_23FD74BF4();

  return v4;
}

void sub_23FC92884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23FC061F0();
  v19 = v3;
  v20 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = sub_23FD72A64();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC0A0A8();
  v16 = sub_23FD72A58();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  sub_23FC9314C();
  sub_23FD728C0();
  sub_23FD728B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v2, v1, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x24BE58C90], v13);
  sub_23FC92AEC(v2, v12, v10, v8, v6, v19, v20);
  sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v16);
  sub_23FC060D4();
}

void sub_23FC92974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23FC061F0();
  v29 = v6;
  v30 = v7;
  v9 = v8;
  v11 = v10;
  v28 = v12;
  v14 = v13;
  v27 = *(_QWORD *)(sub_23FD72A64() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC100B8();
  v26 = sub_23FD71DF8();
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC0A0A8();
  v19 = sub_23FD72A34();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FC061C0();
  v25 = v9;
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FC10370();
  (*(void (**)(uint64_t, uint64_t))(v22 + 16))(v0, v11);
  sub_23FD73F94();
  sub_23FD71DEC();
  sub_23FC5A2A8();
  sub_23FC90820();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v26);
  sub_23FBFF1E4(v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_23FC100A0(v3, *MEMORY[0x24BE58C88], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 104));
  sub_23FC92AEC(v3, v14, v28, v0, v29, v25, v30);
  sub_23FC100E4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v19);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0, v25);
  sub_23FC060D4();
}

uint64_t sub_23FC92AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v67 = a2;
  v68 = a7;
  v61 = a5;
  v58 = a1;
  v66 = sub_23FD72644();
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66, v9);
  v62 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FBFD684(&qword_256F5D528);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FD726C8();
  v64 = *(_QWORD *)(v15 - 8);
  v65 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v60 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23FD728F0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_23FD72B00();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v23);
  v52 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FBFD684(&qword_256F5D530);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23FD72A88();
  v30 = *(_QWORD *)(v29 - 8);
  v53 = v29;
  v54 = v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v34 = (char *)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a6;
  v59 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v32, v35);
  v37 = (char *)&v51 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v38 + 16))(v37, a4);
  sub_23FD72A7C();
  v39 = sub_23FD72A64();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v28, v58, v39);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v28, 0, 1, v39);
  sub_23FD72A70();
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v22, v34, v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v22, *MEMORY[0x24BE58B58], v18);
  v40 = v52;
  sub_23FC90568();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  v41 = v55;
  v42 = v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v14, v40, v57);
  v43 = *MEMORY[0x24BE58758];
  v44 = sub_23FD726A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v14, v43, v44);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v14, 0, 1, v44);
  v46 = v62;
  v45 = v63;
  v47 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, *MEMORY[0x24BE58630], v66);
  v48 = v60;
  sub_23FC906E0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  sub_23FBFEF74((uint64_t)v14, &qword_256F5D528);
  v49 = v56;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v56);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v65);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v37, v49);
}

uint64_t sub_23FC92EE8(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC90E8C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23FC92F00(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC90FE4(a1, *(_QWORD *)(v1 + 16));
}

void sub_23FC92F18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23FBFD684(a3);
  sub_23FC12EF8(v3);
  sub_23FBFF0A0();
}

#error "23FC92F5C: call analysis failed (funcsize=10)"

void sub_23FC92F6C()
{
  sub_23FC92608();
  sub_23FC93268();
}

uint64_t sub_23FC92F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(qword_254346A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *_s31IntelligenceFlowTelemetryStreamVMa()
{
  return &_s31IntelligenceFlowTelemetryStreamVN;
}

void sub_23FC92FEC()
{
  sub_23FC91344();
  sub_23FC93268();
}

uint64_t sub_23FC93010(uint64_t a1)
{
  return sub_23FC92F00(a1);
}

uint64_t sub_23FC93024()
{
  return sub_23FD72B3C();
}

uint64_t sub_23FC93030(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, a1);
  return sub_23FD72B30();
}

uint64_t sub_23FC93054(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23FC93064(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23FC930A4(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, a1);
  return v1;
}

uint64_t sub_23FC930C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC930D4()
{
  return sub_23FD728E4();
}

uint64_t sub_23FC930F0()
{
  uint64_t v0;
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v0);
  return sub_23FD72848();
}

id sub_23FC93118(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_23FC93140()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FBFEF74(v1, v0);
}

void sub_23FC93168(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FC93184()
{
  return 0;
}

uint64_t sub_23FC931A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, v1, 1, a1);
}

uint64_t sub_23FC931B4()
{
  uint64_t v0;
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v0);
  return v1;
}

uint64_t sub_23FC931EC(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23FC931FC(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23FC9320C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC93224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FC93238()
{
  return sub_23FD72998();
}

uint64_t sub_23FC93240()
{
  uint64_t v0;
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v0);
  return v1;
}

uint64_t sub_23FC93284()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC932A4()
{
  uint64_t *v0;

  return sub_23FBFD684(v0);
}

uint64_t sub_23FC932AC@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t sub_23FC932B8()
{
  return sub_23FD72860();
}

uint64_t sub_23FC932C0()
{
  return sub_23FD726E0();
}

uint64_t sub_23FC932C8()
{
  return sub_23FD728CC();
}

uint64_t sub_23FC932D0(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, a1);
  return v1;
}

uint64_t sub_23FC932F4(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, a1);
  return v1;
}

unint64_t static IntelligenceFlowDaemon.iOSSandboxProfileName.getter()
{
  return sub_23FC9381C();
}

unint64_t static IntelligenceFlowDaemon.macOSSandboxProfileName.getter()
{
  return sub_23FC9381C();
}

uint64_t static IntelligenceFlowDaemon.enableSIGTERMHandling.getter()
{
  return 1;
}

uint64_t static IntelligenceFlowDaemon.enableDistributedNotificationReposting.getter()
{
  return 1;
}

void static IntelligenceFlowDaemon.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void (*v16)(char *, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  v0 = sub_23FBFD684(&qword_254346D88);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FD72BF0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v20 - v11;
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v13 = sub_23FD72BE4();
  v14 = sub_23FD74F6C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)sub_23FC8FD5C();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23FBF8000, v13, v14, "Starting intelligenceflowd", v15, 2u);
    sub_23FBFEFA0();
  }

  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v12, v4);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v3, 0, 1, v4);
  sub_23FD725A8();
  sub_23FD725B4();
  sub_23FC93760();
  sub_23FD725C0();
  type metadata accessor for InternalXPCServiceServer();
  sub_23FC606B8(&qword_254346D68, (uint64_t (*)(uint64_t))type metadata accessor for InternalXPCServiceServer, (uint64_t)&unk_23FD77BA8);
  sub_23FC93810();
  type metadata accessor for ToolboxXPCServiceServer();
  sub_23FC606B8(&qword_254346D60, (uint64_t (*)(uint64_t))type metadata accessor for ToolboxXPCServiceServer, (uint64_t)&unk_23FD82558);
  sub_23FC93810();
  type metadata accessor for QueryDecorationXPCServiceServer();
  sub_23FC606B8(&qword_254346D70, (uint64_t (*)(uint64_t))type metadata accessor for QueryDecorationXPCServiceServer, (uint64_t)&unk_23FD77FF0);
  sub_23FC93810();
  sub_23FC9379C();
  sub_23FD725C0();
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v17 = sub_23FD72BE4();
  v18 = sub_23FD74F6C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)sub_23FC8FD5C();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_23FBF8000, v17, v18, "Setting up real time event monitors", v19, 2u);
    sub_23FBFEFA0();
  }

  v16(v9, v4);
  sub_23FD627C8();
  sub_23FC93830();
}

uint64_t sub_23FC935DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v15;

  v0 = sub_23FD72BF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FD723C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BE573D8], v5);
  v10 = sub_23FD723BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) == 0)
  {
    sub_23FD72518();
    v11 = sub_23FD72BE4();
    v12 = sub_23FD74F6C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23FBF8000, v11, v12, "XPC Server: IntelligenceFlow feature flag is disabled.", v13, 2u);
      MEMORY[0x2426798D8](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  return v10 & 1;
}

unint64_t sub_23FC93760()
{
  unint64_t result;

  result = qword_254346D58;
  if (!qword_254346D58)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79F40, &unk_251011020);
    atomic_store(result, (unint64_t *)&qword_254346D58);
  }
  return result;
}

unint64_t sub_23FC9379C()
{
  unint64_t result;

  result = qword_254346D80;
  if (!qword_254346D80)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8344C, &type metadata for TranscriptEntityQueryingXPCServiceServer);
    atomic_store(result, (unint64_t *)&qword_254346D80);
  }
  return result;
}

unint64_t sub_23FC937DC()
{
  static IntelligenceFlowDaemon.iOSSandboxProfileName.getter();
  return 0xD00000000000002CLL;
}

ValueMetadata *type metadata accessor for IntelligenceFlowDaemon()
{
  return &type metadata for IntelligenceFlowDaemon;
}

uint64_t sub_23FC93810()
{
  return sub_23FD72524();
}

unint64_t sub_23FC9381C()
{
  return 0xD00000000000002CLL;
}

void sub_23FC93830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v0 = sub_23FD72BF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v5 = sub_23FD72BE4();
  v6 = sub_23FD74F3C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23FBF8000, v5, v6, "IntelligenceFlowDaemonEventHandlers: registerLaunchEvents called: registering for com.apple.notifyd.matching and BiomeLibrary.device.metadata", v7, 2u);
    MEMORY[0x2426798D8](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_23FC605F8();
  v8 = sub_23FD74F9C();
  v23 = sub_23FC93B04;
  v24 = 0;
  v9 = MEMORY[0x24BDAC760];
  v21 = MEMORY[0x24BDAC760];
  v22 = 1107296256;
  v10 = sub_23FC94104((uint64_t)sub_23FC93D38);
  xpc_set_event_stream_handler("com.apple.notifyd.matching", v8, v10);
  _Block_release(v10);

  v11 = objc_msgSend((id)BiomeLibrary(), sel_Device);
  swift_unknownObjectRelease();
  v12 = objc_msgSend(v11, sel_Metadata);
  swift_unknownObjectRelease();
  v13 = (void *)sub_23FD74F9C();
  v14 = objc_allocWithZone(MEMORY[0x24BE0CB48]);
  v15 = sub_23FC94084(0xD000000000000029, 0x800000023FD842A0, v13, 1);
  v16 = objc_msgSend(v12, sel_DSLPublisher);
  v17 = objc_msgSend(v16, sel_subscribeOn_, v15);

  v23 = sub_23FC93D54;
  v24 = 0;
  v21 = v9;
  v22 = 1107296256;
  v18 = sub_23FC94104((uint64_t)sub_23FC93F04);
  v23 = sub_23FC93F54;
  v24 = 0;
  v21 = v9;
  v22 = 1107296256;
  v19 = sub_23FC94104((uint64_t)sub_23FC93D38);
  v20 = objc_msgSend(v17, sel_sinkWithCompletion_receiveInput_, v18, v19);
  _Block_release(v19);
  _Block_release(v18);

}

void sub_23FC93B04(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  const char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = sub_23FD72BF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (const char *)sub_23FD74270();
  if (xpc_dictionary_get_string(a1, v7))
  {
    v8 = sub_23FD74C54();
    v10 = v9;
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    swift_bridgeObjectRetain_n();
    v11 = sub_23FD72BE4();
    v12 = sub_23FD74F3C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v19 = v8;
      v14 = (uint8_t *)v13;
      v15 = swift_slowAlloc();
      v21 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      v20 = sub_23FC9DC40(v19, v10, &v21);
      sub_23FD75044();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23FBF8000, v11, v12, "DaemonEventHandlers: Got Darwin notification: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v15, -1, -1);
      MEMORY[0x2426798D8](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v16 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v17 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_postNotificationName_object_, v17, 0);

  }
}

uint64_t sub_23FC93D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23FC93D4C()
{
  return swift_release();
}

uint64_t sub_23FC93D54(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  _QWORD *v12;
  NSObject *v13;
  uint8_t *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;

  v2 = sub_23FD72BF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v7 = a1;
  v8 = sub_23FD72BE4();
  v9 = sub_23FD74F3C();
  if (os_log_type_enabled(v8, v9))
  {
    v18 = v2;
    v10 = swift_slowAlloc();
    v17 = v3;
    v11 = (uint8_t *)v10;
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v19 = v7;
    v13 = v7;
    sub_23FD75044();
    *v12 = v7;

    v2 = v18;
    _os_log_impl(&dword_23FBF8000, v8, v9, "DaemonEventHandlers: Device upgrade listener completed: %@", v11, 0xCu);
    sub_23FBFD684(&qword_254346A30);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v12, -1, -1);
    v14 = v11;
    v3 = v17;
    MEMORY[0x2426798D8](v14, -1, -1);
  }
  else
  {

    v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_23FC93F04(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_23FC93F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v0 = sub_23FD72BF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v5 = sub_23FD72BE4();
  v6 = sub_23FD74F3C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23FBF8000, v5, v6, "DaemonEventHandlers: Got Device upgrade notification.", v7, 2u);
    MEMORY[0x2426798D8](v7, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_23FC9403C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

id sub_23FC94084(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  void *v4;
  void *v7;
  id v8;

  v7 = (void *)sub_23FD74BE8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v4, sel_initWithIdentifier_targetQueue_waking_, v7, a3, a4 & 1);

  return v8;
}

void *sub_23FC94104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = v1;
  return _Block_copy((const void *)(v2 - 112));
}

uint64_t sub_23FC94110(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23FC9413C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v0 = sub_23FD74F90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FD74F78();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_23FD74ABC();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC605F8();
  sub_23FD74AA4();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_23FC606B8(&qword_254346B68, v6, MEMORY[0x24BEE5698]);
  sub_23FBFD684(&qword_254346B58);
  sub_23FC606F8((unint64_t *)&qword_254346B60, &qword_254346B58);
  sub_23FD75098();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE5750], v0);
  result = sub_23FD74FC0();
  qword_256F7F448 = result;
  return result;
}

uint64_t sub_23FC942F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = sub_23FD734C0();
  v19 = *(_QWORD *)(v0 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FBFF180();
  v5 = v4 - v3;
  v6 = sub_23FD72BF0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FBFF180();
  v11 = v10 - v9;
  sub_23FD72488();
  swift_retain_n();
  v12 = sub_23FD72BE4();
  v13 = sub_23FD74F48();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    *(_DWORD *)v14 = 136315138;
    v15 = sub_23FD74138();
    v17 = sub_23FC950F0(v15, v16);
    sub_23FC101E0(v17);
    sub_23FD75044();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v12, v13, "InteractionStoreServiceSubscriber received event: %s", v14, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  sub_23FD74144();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 88))(v5, v0) == *MEMORY[0x24BE55558])
    sub_23FC94538();
  else
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v5, v0);
  return sub_23FD742D0();
}

void sub_23FC94538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v0 = sub_23FD74A98();
  v32 = *(_QWORD *)(v0 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FBFF180();
  v5 = v4 - v3;
  v6 = sub_23FD74ABC();
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFF180();
  v11 = v10 - v9;
  v12 = sub_23FD74A8C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_23FBFF180();
  v17 = (_QWORD *)(v16 - v15);
  v18 = sub_23FD74AD4();
  v19 = *(_QWORD *)(v18 - 8);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)v29 - v25;
  if (qword_256F5D2C0 != -1)
    swift_once();
  v29[0] = qword_256F7F448;
  sub_23FD74AC8();
  *v17 = 60;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v17, *MEMORY[0x24BEE5420], v12);
  MEMORY[0x242678894](v23, v17);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v17, v12);
  v27 = *(void (**)(char *, uint64_t))(v19 + 8);
  v27(v23, v18);
  aBlock[4] = sub_23FC94F70;
  aBlock[5] = v29[1];
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23FC94110;
  aBlock[3] = &unk_25100F8F8;
  v28 = _Block_copy(aBlock);
  swift_retain();
  sub_23FD74AB0();
  v33 = MEMORY[0x24BEE4AF8];
  sub_23FC606B8(&qword_256F5E800, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23FBFD684(&qword_256F5E808);
  sub_23FC606F8(&qword_256F5E810, &qword_256F5E808);
  sub_23FD75098();
  MEMORY[0x242678D38](v26, v11, v5, v28);
  _Block_release(v28);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v5, v0);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v11, v31);
  v27(v26, v18);
  swift_release();
  sub_23FC060D4();
}

uint64_t sub_23FC947F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v2 = sub_23FBFD684(&qword_254346A28);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD72BF0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD72488();
  v11 = sub_23FD72BE4();
  v12 = sub_23FD74F48();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_23FBF8000, v11, v12, "Start the postInteractionEngagement collection", v13, 2u);
    MEMORY[0x2426798D8](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v14 = sub_23FD74DEC();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v5, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a1;
  swift_retain();
  sub_23FC94B70((uint64_t)v5, (uint64_t)&unk_256F5F750, (uint64_t)v15);
  swift_release();
  return sub_23FC95068((uint64_t)v5);
}

uint64_t sub_23FC94988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_23FD72BF0();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC949E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((int)*MEMORY[0x24BE74BF0] + MEMORY[0x24BE74BF0]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_23FC94A48;
  return sub_23FC5AADC(v3);
}

uint64_t sub_23FC94A48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  return sub_23FC090D8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23FC94AB4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FD72488();
  v1 = sub_23FD72BE4();
  v2 = sub_23FD74F48();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)sub_23FBFEFF4();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23FBF8000, v1, v2, "Completed PSE data collection", v3, 2u);
    sub_23FBFEFA0();
  }
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC94B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FBFD684(&qword_254346A28);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC93074();
  sub_23FC950A8(a1, v3);
  v8 = sub_23FD74DEC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, 1, v8) == 1)
  {
    sub_23FC95068(v3);
  }
  else
  {
    sub_23FD74DE0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v3, v8);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23FD74D80();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_23FC94CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = sub_23FD72BF0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  sub_23FC93074();
  sub_23FD72488();
  v4 = sub_23FD72BE4();
  v5 = sub_23FD74F48();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    *(_DWORD *)v6 = 136315138;
    sub_23FBFD684(&qword_256F5E6F8);
    v7 = sub_23FD74C0C();
    v9 = sub_23FC950F0(v7, v8);
    sub_23FC101E0(v9);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v4, v5, "InteractionStoreServiceSubscriber received completion: %s", v6, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  sub_23FC060D4();
}

uint64_t sub_23FC94E10()
{
  uint64_t v0;

  sub_23FC5FB58(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime33InteractionStoreServiceSubscriber_id);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23FC94E50()
{
  return type metadata accessor for InteractionStoreServiceSubscriber();
}

uint64_t type metadata accessor for InteractionStoreServiceSubscriber()
{
  uint64_t result;

  result = qword_256F5F6B0;
  if (!qword_256F5F6B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FC94E90()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionIdentityPack(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FC94F08()
{
  return sub_23FC942F8();
}

void sub_23FC94F2C()
{
  sub_23FC94CC0();
}

uint64_t sub_23FC94F44()
{
  return sub_23FC606B8(&qword_256F5F740, (uint64_t (*)(uint64_t))type metadata accessor for InteractionStoreServiceSubscriber, (uint64_t)&unk_23FD779C4);
}

uint64_t sub_23FC94F70()
{
  uint64_t v0;

  return sub_23FC947F8(v0);
}

uint64_t sub_23FC94F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23FC94F88()
{
  return swift_release();
}

uint64_t sub_23FC94F90()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FC94FBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23FC95028;
  return sub_23FC94988(a1, v4, v5, v6);
}

uint64_t sub_23FC95028()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23FC95068(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_254346A28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FC950A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_254346A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC950F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t sub_23FC950FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC95134(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BE55BE0]);
}

uint64_t sub_23FC95118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC95134(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BE530F8]);
}

uint64_t sub_23FC95134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23FC9B414();
    v7 = v17;
    a5(0);
    sub_23FC5F570();
    v11 = a3 + v10;
    v13 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_23FC8FD40();
      if (v5)
        break;
      v14 = *(_QWORD *)(v17 + 16);
      if (v14 >= *(_QWORD *)(v17 + 24) >> 1)
        sub_23FC9B414();
      *(_QWORD *)(v17 + 16) = v14 + 1;
      *(_QWORD *)(v17 + 8 * v14 + 32) = v16;
      v11 += v13;
      if (!--v6)
        return v7;
    }
    sub_23FC58C6C();
  }
  return v7;
}

void sub_23FC95240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23FC9542C(a1, a2, a3, a4, MEMORY[0x24BE58A58], (void (*)(BOOL, unint64_t, uint64_t))sub_23FC9B548, (void (*)(_QWORD))type metadata accessor for FeedbackLearning.CandidateEvaluation);
}

void sub_23FC9526C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23FC9542C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE546A8], (void (*)(BOOL, unint64_t, uint64_t))sub_23FC9B5A0, (void (*)(_QWORD))type metadata accessor for FeedbackLearning.CandidateEvaluation);
}

void sub_23FC95298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FC10388();
  v9 = *(_QWORD *)(a3 + 16);
  if (v9)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23FC9B4F0();
    _s15CandidateResultVMa();
    sub_23FC5F570();
    v11 = a3 + v10;
    v14 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_23FC8FD40();
      if (v3)
        break;
      v13 = *(_QWORD *)(v15 + 16);
      if (v13 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_23FC9B4F0();
      *(_QWORD *)(v15 + 16) = v13 + 1;
      sub_23FC0F380(v4, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v13, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      v11 += v14;
      if (!--v9)
        goto LABEL_9;
    }
    sub_23FC58C6C();
  }
LABEL_9:
  sub_23FC06000();
}

void sub_23FC953D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23FC9542C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0], (void (*)(BOOL, unint64_t, uint64_t))sub_23FC9B9F4, (void (*)(_QWORD))type metadata accessor for RetrievedValue);
}

void sub_23FC95400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23FC9542C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0], (void (*)(BOOL, unint64_t, uint64_t))sub_23FC9B4C4, (void (*)(_QWORD))MEMORY[0x24BE56C90]);
}

void sub_23FC9542C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t), void (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(BOOL, unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v27 = a2;
  v25 = a5(0);
  v11 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v12);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    v28 = MEMORY[0x24BEE4AF8];
    v23 = a6;
    a6(0, v15, 0);
    v16 = v28;
    a7(0);
    sub_23FC5F570();
    v18 = a3 + v17;
    v24 = *(_QWORD *)(v19 + 72);
    while (1)
    {
      sub_23FC8FD40();
      if (v7)
        break;
      v28 = v16;
      v21 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      if (v21 >= v20 >> 1)
      {
        v23(v20 > 1, v21 + 1, 1);
        v16 = v28;
      }
      *(_QWORD *)(v16 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v21, v14, v25);
      v18 += v24;
      if (!--v15)
        goto LABEL_9;
    }
    swift_release();
  }
LABEL_9:
  sub_23FC06000();
}

uint64_t sub_23FC95590(void (*a1)(__int128 *__return_ptr, _QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  _QWORD v14[2];
  __int128 v15[2];
  uint64_t v16;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23FC9BD9C();
    v6 = v16;
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v10 = *v9;
      v14[0] = *(v9 - 1);
      v14[1] = v10;
      swift_bridgeObjectRetain();
      a1(v15, v14, &v13);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v16 = v6;
      v11 = *(_QWORD *)(v6 + 16);
      if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_23FC9BD9C();
        v6 = v16;
      }
      v9 += 2;
      *(_QWORD *)(v6 + 16) = v11 + 1;
      sub_23FBFDE28(v15, v6 + 40 * v11 + 32);
      if (!--v5)
        return v6;
    }
    sub_23FC58C6C();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void FeedbackLearning.StandardTupleGenerator.generateInteractionRecordFromEvaluation(evaluation:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE v16[16];

  sub_23FBFD684(&qword_256F5D520);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC12F34();
  sub_23FC957D0();
  v7 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  v8 = *(_QWORD *)(a1 + *(int *)(v7 + 28));
  v15 = a1;
  sub_23FC5B578();
  sub_23FC9542C((uint64_t)sub_23FBFEED0, (uint64_t)v14, v8, (uint64_t)v16, (uint64_t (*)(_QWORD))MEMORY[0x24BE546A8], (void (*)(BOOL, unint64_t, uint64_t))sub_23FC9B5A0, (void (*)(_QWORD))type metadata accessor for FeedbackLearning.CandidateEvaluation);
  v10 = v9;
  sub_23FC5A648();
  v11 = a1 + *(int *)(v7 + 24);
  v12 = sub_23FC98214();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, v11, v12);
  v13 = sub_23FC9823C();
  sub_23FC0EE04(v2, a2 + *(int *)(v13 + 20), &qword_256F5D520);
  *(_QWORD *)(a2 + *(int *)(v13 + 24)) = v10;
}

uint64_t sub_23FC957D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL8 v65;
  uint8_t *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint8_t *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  sub_23FC061F0();
  v128 = v1;
  v129 = v2;
  v120 = v4;
  v121 = v3;
  v5 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFCC();
  v116 = v8;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v9, v10);
  v111 = (uint64_t)&v107 - v11;
  sub_23FC10050();
  v122 = sub_23FD72BF0();
  v119 = *(_QWORD **)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122, v12);
  sub_23FBFEFCC();
  v117 = v13;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v14, v15);
  v112 = (char *)&v107 - v16;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v17, v18);
  v107 = (char *)&v107 - v19;
  sub_23FC10050();
  v124 = sub_23FD72E18();
  v20 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124, v21);
  v125 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC10050();
  sub_23FD72D34();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FBFEFE0();
  v110 = v25;
  sub_23FC10050();
  v109 = sub_23FD72D28();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v26);
  sub_23FBFEFE0();
  v114 = v27;
  sub_23FC10050();
  v28 = sub_23FD72DB8();
  v126 = *(char **)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FBFEFCC();
  v123 = v30;
  sub_23FBFF064();
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v35 = (char *)&v107 - v34;
  MEMORY[0x24BDAC7A8](v33, v36);
  v113 = (char *)&v107 - v37;
  v38 = sub_23FC10050();
  type metadata accessor for FeedbackLearning.ActionValue(v38);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v39, v40);
  sub_23FBFF180();
  v43 = v42 - v41;
  v44 = type metadata accessor for FeedbackLearning.TaskAction(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v45, v46);
  sub_23FBFEFE0();
  v115 = v47;
  v48 = sub_23FC10050();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v48);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v49, v50);
  sub_23FC10388();
  sub_23FBFD684(&qword_256F5D4E0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FC100D4();
  v55 = v53 - v54;
  MEMORY[0x24BDAC7A8](v56, v57);
  v59 = (char *)&v107 - v58;
  v118 = v5;
  v60 = *(int *)(v5 + 32);
  v61 = v121;
  sub_23FC0EDD8(v121 + v60, v0, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  v62 = sub_23FBFD684(&qword_256F5D4E8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v62) == 1)
  {
    sub_23FBFEF18(v0, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
    sub_23FD724DC();
    sub_23FC0EDD8(v61, v116, type metadata accessor for FeedbackLearning.TaskEvaluation);
    v63 = sub_23FD72BE4();
    v64 = sub_23FD74F48();
    v65 = os_log_type_enabled(v63, v64);
    if (v65)
    {
      v66 = (uint8_t *)sub_23FBFEFF4();
      v127 = sub_23FBFEFF4();
      *(_DWORD *)v66 = 136315138;
      sub_23FD7157C();
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v67 = sub_23FC15A5C();
      v69 = sub_23FC1018C(v67, v68);
      sub_23FC98244(v69);
      sub_23FD75044();
      v70 = sub_23FC1002C();
      sub_23FC98234(v70, type metadata accessor for FeedbackLearning.TaskEvaluation);
      _os_log_impl(&dword_23FBF8000, v63, v64, "The final resolution state for statement id %s is incomplete, skipping generating a tuple interaction", v66, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    sub_23FC98234(v65, type metadata accessor for FeedbackLearning.TaskEvaluation);

    sub_23FC981F8();
    goto LABEL_22;
  }
  sub_23FC0EE04(v0, (uint64_t)v59, &qword_256F5D4E0);
  sub_23FC0F3AC((uint64_t)v59, v55, &qword_256F5D4E0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v55, 1, v44) == 1)
  {
    sub_23FBFEF74(v55, &qword_256F5D4E0);
    v71 = v112;
    sub_23FD724DC();
    v72 = v111;
    sub_23FC0EDD8(v121, v111, type metadata accessor for FeedbackLearning.TaskEvaluation);
    v73 = sub_23FD72BE4();
    v74 = sub_23FD74F48();
    v75 = os_log_type_enabled(v73, v74);
    v76 = v122;
    if (v75)
    {
      v77 = sub_23FBFEFF4();
      v126 = v59;
      v78 = (uint8_t *)v77;
      v127 = sub_23FBFEFF4();
      *(_DWORD *)v78 = 136315138;
      sub_23FD7157C();
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v79 = sub_23FC15A5C();
      v81 = sub_23FC1018C(v79, v80);
      sub_23FC98244(v81);
      sub_23FD75044();
      v82 = sub_23FC1002C();
      sub_23FC98234(v82, type metadata accessor for FeedbackLearning.TaskEvaluation);
      _os_log_impl(&dword_23FBF8000, v73, v74, "Statement id %s is not associated with an executed action, skipping generating a tuple interaction", v78, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }

    sub_23FBFEF18(v72, type metadata accessor for FeedbackLearning.TaskEvaluation);
    v96 = ((uint64_t (*)(char *, uint64_t))v119[1])(v71, v76);
LABEL_21:
    sub_23FC9821C(v96, &qword_256F5D4E0);
LABEL_22:
    v102 = 1;
    v103 = v120;
    goto LABEL_23;
  }
  v117 = v44;
  v83 = v115;
  sub_23FC0F380(v55, v115, type metadata accessor for FeedbackLearning.TaskAction);
  v84 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  sub_23FC0EDD8(v83 + *(int *)(v84 + 20), v43, type metadata accessor for FeedbackLearning.ActionValue);
  _s13ActionCreatedCMa(0);
  v85 = swift_allocObject();
  *(_QWORD *)(v85
            + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
  sub_23FC0F380(v43, v85 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, type metadata accessor for FeedbackLearning.ActionValue);
  v86 = sub_23FC0D3D4();
  swift_setDeallocating();
  sub_23FC0E224();
  if (!sub_23FC0EA20((uint64_t)v86))
  {
    v97 = v107;
    sub_23FD724DC();
    v98 = sub_23FD72BE4();
    v99 = sub_23FD74F54();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)sub_23FBFEFF4();
      *(_WORD *)v100 = 0;
      _os_log_impl(&dword_23FBF8000, v98, v99, "The final action parameters are not all candidate id extractable, skipping generating a tuple interaction", v100, 2u);
      sub_23FBFEFA0();
    }

    sub_23FC5A648();
    v101 = ((uint64_t (*)(char *, uint64_t))v119[1])(v97, v122);
    sub_23FC98234(v101, type metadata accessor for FeedbackLearning.TaskAction);
    goto LABEL_21;
  }
  v87 = (uint64_t)v113;
  sub_23FD74468();
  sub_23FBFD684(&qword_256F5DDD0);
  v88 = (v126[80] + 32) & ~(unint64_t)v126[80];
  v122 = *((_QWORD *)v126 + 9);
  v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = xmmword_23FD769D0;
  sub_23FC9828C(v89 + v88, v87);
  sub_23FC795E4();
  swift_bridgeObjectRelease();
  v127 = v89;
  sub_23FC172A4();
  v90 = v127;
  v91 = v121;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16))(v114, v121 + *(int *)(v118 + 24), v109);
  v92 = *(_QWORD *)(v90 + 16);
  if (v92)
  {
    v119 = v86;
    v127 = MEMORY[0x24BEE4AF8];
    sub_23FC9B574();
    v117 = v90;
    v93 = v90 + v88;
    do
    {
      sub_23FC9828C((uint64_t)v35, v93);
      sub_23FC9828C(v123, (uint64_t)v35);
      sub_23FD72DF4();
      (*((void (**)(char *, uint64_t))v126 + 1))(v35, v28);
      v94 = v127;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B574();
        v94 = v127;
      }
      v95 = *(_QWORD *)(v94 + 16);
      if (v95 >= *(_QWORD *)(v94 + 24) >> 1)
      {
        sub_23FC9B574();
        v94 = v127;
      }
      *(_QWORD *)(v94 + 16) = v95 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v94+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v95, v125, v124);
      v127 = v94;
      v93 += v122;
      --v92;
    }
    while (v92);
    swift_bridgeObjectRelease();
    v91 = v121;
  }
  else
  {
    sub_23FC1002C();
  }
  sub_23FC96194(v91 + *(int *)(v118 + 36), v110);
  v103 = v120;
  sub_23FD72D4C();
  sub_23FC5A648();
  (*((void (**)(char *, uint64_t))v126 + 1))(v113, v28);
  sub_23FBFEF18(v115, type metadata accessor for FeedbackLearning.TaskAction);
  sub_23FC9821C(v106, &qword_256F5D4E0);
  v102 = 0;
LABEL_23:
  v104 = sub_23FD72D64();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v103, v102, 1, v104);
}

uint64_t sub_23FC96194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v28;
  int v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a2;
  v3 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23FD72D34();
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v11);
  v12 = sub_23FD72BF0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FBFD684(&qword_256F5F828);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.TaskOutcome(0) + 20));
  if (v21 == 3)
    goto LABEL_14;
  v39 = v12;
  v22 = (uint64_t)&v20[*(int *)(v17 + 48)];
  *v20 = v21;
  sub_23FC0EDD8(a1, v22, type metadata accessor for FeedbackLearning.TaskStatus);
  if (v21)
  {
    v23 = v13;
    if (v21 == 1)
    {
      v24 = sub_23FBFD684(&qword_256F5D4F8);
      v25 = (char *)&loc_23FC96358
          + 4
          * byte_23FD77A50[_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v22, 4, v24)];
      __asm { BR              X10 }
    }
    goto LABEL_7;
  }
  v26 = sub_23FBFD684(&qword_256F5D4F8);
  v23 = v13;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v22, 4, v26) - 1 > 1)
  {
LABEL_7:
    sub_23FD724DC();
    v28 = sub_23FD72BE4();
    v29 = sub_23FD74F6C();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v36 = v23;
      v38 = v29;
      v30 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v44 = v37;
      *(_DWORD *)v30 = 136315138;
      if (v21)
        v31 = 0x6E6F646E6162612ELL;
      else
        v31 = 0x6D7269666E6F632ELL;
      v43 = sub_23FC9DC40(v31, 0xEA00000000006465, &v44);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23FBF8000, v28, (os_log_type_t)v38, "Generating a score based on task outcome, ignoring task confirmation %s", v30, 0xCu);
      v32 = v37;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v32, -1, -1);
      MEMORY[0x2426798D8](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v39);
    }
    sub_23FBFEF74((uint64_t)v20, &qword_256F5F828);
LABEL_14:
    sub_23FC0EDD8(a1, (uint64_t)v9, type metadata accessor for FeedbackLearning.TaskStatus);
    v33 = sub_23FBFD684(&qword_256F5D4F8);
    v34 = (char *)&loc_23FC96590
        + 4
        * byte_23FD77A55[_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 4, v33)];
    __asm { BR              X10 }
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v42, *MEMORY[0x24BE545B8], v41);
}

uint64_t sub_23FC96644(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v23;

  sub_23FD72D34();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC10388();
  v21 = sub_23FD72DB8();
  v7 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v8);
  sub_23FBFF180();
  v11 = v10 - v9;
  sub_23FD72E18();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFF180();
  v14 = sub_23FD72D28();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v17 = sub_23FC8D7B4();
  v18 = type metadata accessor for FeedbackLearning.TaskEvaluation(v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v2, a2 + *(int *)(v18 + 24), v14);
  v19 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, a1 + *(int *)(v19 + 24), v21);
  sub_23FD72DF4();
  v23 = *(_BYTE *)(a1 + *(int *)(v19 + 36));
  sub_23FC967E8(&v23, v3);
  return sub_23FD72DC4();
}

uint64_t type metadata accessor for FeedbackLearningInteractionRecord()
{
  uint64_t result;

  result = qword_256F5F7C0;
  if (!qword_256F5F7C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FC967E8@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
      __asm { BR              X10 }
    __asm { BR              X10 }
  }
  if (*a1)
  {
    if (v3 == 1)
      v4 = (unsigned int *)MEMORY[0x24BE545C0];
    else
      v4 = (unsigned int *)MEMORY[0x24BE545D0];
  }
  else
  {
    v4 = (unsigned int *)MEMORY[0x24BE545B8];
  }
  v5 = *v4;
  v6 = sub_23FD72D34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a2, v5, v6);
}

uint64_t sub_23FC968B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23FC96194(a2, v2);
}

uint64_t sub_23FC968CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  unsigned int *v32;
  unsigned int *v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v3 = sub_23FD72D34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FD71648();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v34 - v19;
  sub_23FC0EDD8(a1, (uint64_t)v11, type metadata accessor for FeedbackLearning.TaskFailureReason);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23FBFEF18((uint64_t)v11, type metadata accessor for FeedbackLearning.TaskFailureReason);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v35, *MEMORY[0x24BE545D0], v3);
  }
  v34 = v3;
  v22 = v35;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v11, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v20, v12);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v17, v12);
  v24 = v12;
  v25 = v20;
  if (v23 != *MEMORY[0x24BE522B0])
  {
    v27 = v4;
    if (v23 == *MEMORY[0x24BE52248])
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
      v29 = *MEMORY[0x24BE545D0];
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
LABEL_7:
      v28 = v34;
      v30(v7, v29, v34);
      goto LABEL_8;
    }
    v31 = v22;
    if (v23 == *MEMORY[0x24BE522B8]
      || v23 == *MEMORY[0x24BE52298]
      || v23 == *MEMORY[0x24BE52268]
      || v23 == *MEMORY[0x24BE522A0]
      || v23 == *MEMORY[0x24BE52250])
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
      v32 = (unsigned int *)MEMORY[0x24BE545D8];
LABEL_15:
      v28 = v34;
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *v32, v34);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v31, v7, v28);
    }
    if (v23 == *MEMORY[0x24BE52258]
      || v23 == *MEMORY[0x24BE522A8]
      || v23 == *MEMORY[0x24BE522C0]
      || v23 == *MEMORY[0x24BE52278]
      || v23 == *MEMORY[0x24BE52290]
      || v23 == *MEMORY[0x24BE522C8])
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
      v32 = (unsigned int *)MEMORY[0x24BE545D0];
      goto LABEL_15;
    }
    if (v23 != *MEMORY[0x24BE52280] && v23 != *MEMORY[0x24BE52260])
    {
      if (v23 == *MEMORY[0x24BE52270])
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
        v33 = (unsigned int *)MEMORY[0x24BE545C0];
LABEL_31:
        v29 = *v33;
        v27 = v4;
        v30 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
        goto LABEL_7;
      }
      if (v23 != *MEMORY[0x24BE52288])
      {
        result = sub_23FD75374();
        __break(1u);
        return result;
      }
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    v33 = (unsigned int *)MEMORY[0x24BE545D0];
    goto LABEL_31;
  }
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v25, v12);
  v27 = v4;
  v28 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BE545D0], v34);
  v26(v17, v24);
LABEL_8:
  v31 = v22;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v31, v7, v28);
}

uint64_t FeedbackLearningInteractionRecord.deviceContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23FC98214();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void FeedbackLearningInteractionRecord.tupleInteraction.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23FC9823C();
  sub_23FC0F3AC(v1 + *(int *)(v3 + 20), a1, &qword_256F5D520);
}

uint64_t FeedbackLearningInteractionRecord.candidateInteractions.getter()
{
  sub_23FC9823C();
  return swift_bridgeObjectRetain();
}

void static FeedbackLearningInteractionRecord.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  char v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  v5 = sub_23FD72D64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_23FBFF180();
  v10 = v9 - v8;
  v11 = sub_23FBFD684(&qword_256F5F758);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F5D520);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC100D4();
  v18 = v16 - v17;
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)v39 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)v39 - v25;
  if ((sub_23FD72D04() & 1) == 0)
    goto LABEL_13;
  v40 = v6;
  v27 = sub_23FC9823C();
  v28 = *(int *)(v27 + 20);
  v39[1] = v4;
  sub_23FC5E694(v4 + v28, (uint64_t)v26);
  v39[0] = v27;
  v29 = *(int *)(v27 + 20);
  v39[2] = v2;
  sub_23FC5E694(v2 + v29, (uint64_t)v23);
  v30 = v0 + *(int *)(v11 + 48);
  sub_23FC5E694((uint64_t)v26, v0);
  sub_23FC5E694((uint64_t)v23, v30);
  sub_23FC752FC(v0);
  if (v32)
  {
    sub_23FC9820C((uint64_t)v23);
    sub_23FC9820C((uint64_t)v26);
    v31 = sub_23FC752FC(v30);
    if (v32)
    {
      sub_23FC9821C(v31, &qword_256F5D520);
LABEL_12:
      sub_23FC97050();
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_23FC0F3AC(v0, v18, &qword_256F5D520);
  sub_23FC752FC(v30);
  if (v32)
  {
    sub_23FBFEF74((uint64_t)v23, &qword_256F5D520);
    sub_23FBFEF74((uint64_t)v26, &qword_256F5D520);
    v33 = sub_23FC98264();
    v31 = v34(v33);
LABEL_10:
    sub_23FC9821C(v31, &qword_256F5F758);
    goto LABEL_13;
  }
  v35 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v10, v30, v5);
  sub_23FBFEE2C(&qword_256F5F760, (uint64_t (*)(uint64_t))MEMORY[0x24BE54610], MEMORY[0x24BE54620]);
  v36 = sub_23FD74BDC();
  v37 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v37(v10, v5);
  sub_23FC9820C((uint64_t)v23);
  sub_23FC9820C((uint64_t)v26);
  v38 = sub_23FC98264();
  ((void (*)(uint64_t))v37)(v38);
  sub_23FC9820C(v0);
  if ((v36 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  sub_23FC060D4();
}

void sub_23FC97034()
{
  sub_23FC97050();
}

void sub_23FC97050()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  unint64_t *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, unint64_t, uint64_t);
  uint64_t v23;
  unint64_t *v24;
  unint64_t *v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = v4(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC100D4();
  MEMORY[0x24BDAC7A8](v12, v13);
  v17 = (char *)&v31 - v16;
  v18 = *(_QWORD *)(v9 + 16);
  if (v18 == *(_QWORD *)(v7 + 16) && v18 && v9 != v7)
  {
    v34 = v15;
    v35 = v14;
    v36 = v5;
    v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v31 = *(_QWORD *)(v14 + 72);
    v32 = v9;
    v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16);
    v20 = v18 - 1;
    v21 = v15;
    do
    {
      v22 = v33;
      v33((uint64_t)v17, v9 + v19, v10);
      v23 = v7;
      v22(v21, v7 + v19, v10);
      v24 = v3;
      v25 = v3;
      v26 = v1;
      sub_23FBFEE2C(v25, v36, v1);
      v27 = sub_23FD74BDC();
      v28 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v28(v21, v10);
      v28((uint64_t)v17, v10);
      v30 = v20-- != 0;
      if ((v27 & 1) == 0)
        break;
      v19 += v31;
      v1 = v26;
      v3 = v24;
      v7 = v23;
      v9 = v32;
    }
    while (v30);
  }
  sub_23FC060D4();
}

void sub_23FC971D0()
{
  sub_23FC97050();
}

void sub_23FC971EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  _s21ActionExecutionResultOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  v59 = v7;
  v63 = sub_23FBFD684(&qword_256F5F818);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_23FC8D7B4();
  v65 = _s19EvaluatorVoteSourceOMa(v10);
  MEMORY[0x24BDAC7A8](v65, v11);
  sub_23FBFEFCC();
  v60 = v12;
  sub_23FBFF064();
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  MEMORY[0x24BDAC7A8](v15, v16);
  v64 = (uint64_t)&v50 - v17;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v18, v19);
  v23 = (char *)&v50 - v20;
  v24 = *(_QWORD *)(v4 + 16);
  if (v24 == *(_QWORD *)(v2 + 16) && v24 && v4 != v2)
  {
    v57 = (char *)&v50 - v20;
    v58 = v22;
    v52 = v24;
    v53 = v21;
    v25 = 0;
    v26 = v4 + 32;
    v27 = v2 + 32;
    v28 = v60;
    v50 = v2 + 32;
    v51 = v4 + 32;
    while (1)
    {
      v29 = (unsigned __int8 *)(v26 + 32 * v25);
      v30 = (unsigned __int8 *)(v27 + 32 * v25);
      if (*v29 != *v30 || v29[8] != v30[8])
        break;
      v32 = *((_QWORD *)v29 + 2);
      v33 = *((_QWORD *)v30 + 2);
      v34 = *(_QWORD *)(v32 + 16);
      if (v34 != *(_QWORD *)(v33 + 16))
        break;
      v35 = *((_QWORD *)v29 + 3);
      v56 = *((_QWORD *)v30 + 3);
      v54 = v25;
      v55 = v35;
      if (v34)
      {
        v36 = *(unsigned __int8 *)(v53 + 80);
        swift_bridgeObjectRetain();
        sub_23FC5B578();
        if (v32 != v33)
        {
          v62 = v34;
          v37 = (v36 + 32) & ~v36;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v38 = 0;
          v61 = *(_QWORD *)(v53 + 72);
          while (1)
          {
            sub_23FC98224(v32 + v37, (uint64_t)v23);
            if (v38 >= *(_QWORD *)(v33 + 16))
              break;
            v39 = v64;
            sub_23FC98224(v33 + v37, v64);
            v40 = (unsigned __int8 *)(v0 + *(int *)(v63 + 48));
            sub_23FC98224((uint64_t)v23, v0);
            sub_23FC98224(v39, (uint64_t)v40);
            if (sub_23FC98278() == 1)
            {
              sub_23FC98224(v0, (uint64_t)v28);
              if (sub_23FC98278() != 1)
                goto LABEL_31;
              if (*v28 != *v40)
              {
LABEL_29:
                sub_23FBFEF18(v0, _s19EvaluatorVoteSourceOMa);
                goto LABEL_32;
              }
            }
            else
            {
              v41 = v32;
              v42 = v33;
              v43 = v58;
              sub_23FC0EDD8(v0, v58, _s19EvaluatorVoteSourceOMa);
              if (sub_23FC98278() == 1)
              {
                sub_23FBFEF18(v43, _s21ActionExecutionResultOMa);
LABEL_31:
                sub_23FBFEF74(v0, &qword_256F5F818);
LABEL_32:
                sub_23FC9825C(v64);
                sub_23FC9825C((uint64_t)v23);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_33;
              }
              v44 = v59;
              sub_23FC0F380((uint64_t)v40, v59, _s21ActionExecutionResultOMa);
              sub_23FD229B8(v43, v44);
              v46 = v45;
              v47 = v44;
              v23 = v57;
              v28 = v60;
              sub_23FBFEF18(v47, _s21ActionExecutionResultOMa);
              sub_23FBFEF18(v43, _s21ActionExecutionResultOMa);
              v33 = v42;
              v32 = v41;
              if ((v46 & 1) == 0)
                goto LABEL_29;
            }
            ++v38;
            sub_23FC98270(v0);
            sub_23FC98270(v64);
            sub_23FC98270((uint64_t)v23);
            v37 += v61;
            if (v62 == v38)
              goto LABEL_25;
          }
          __break(1u);
          return;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_23FC5B578();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_25:
      v48 = sub_23FC98264();
      v49 = sub_23FC971EC(v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23FC1002C();
      swift_bridgeObjectRelease();
      if ((v49 & 1) != 0)
      {
        v25 = v54 + 1;
        v26 = v51;
        v27 = v50;
        if (v54 + 1 != v52)
          continue;
      }
      break;
    }
  }
LABEL_33:
  sub_23FC060D4();
}

void sub_23FC975F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned __int8 *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  _s21ActionExecutionResultOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  v41 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23FBFD684(&qword_256F5F818);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC12F34();
  v10 = _s19EvaluatorVoteSourceOMa(0);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v39 - v15;
  MEMORY[0x24BDAC7A8](v14, v17);
  v46 = (uint64_t)&v39 - v18;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v19, v20);
  v24 = (char *)&v39 - v22;
  v44 = v2;
  v45 = v4;
  v25 = *(_QWORD *)(v4 + 16);
  if (v25 != *(_QWORD *)(v2 + 16) || !v25 || v45 == v44)
    goto LABEL_16;
  v39 = (unsigned __int8 *)v23;
  v26 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v27 = *(_QWORD *)(v21 + 72);
  v42 = v10;
  v40 = (char *)&v39 - v22;
  while (1)
  {
    sub_23FC9822C(v45 + v26, (uint64_t)v24);
    sub_23FC9822C(v44 + v26, v46);
    v28 = (unsigned __int8 *)(v0 + *(int *)(v43 + 48));
    sub_23FC9822C((uint64_t)v24, v0);
    v29 = sub_23FC98264();
    sub_23FC9822C(v29, v30);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    v31 = v39;
    sub_23FC0EDD8(v0, (uint64_t)v39, _s19EvaluatorVoteSourceOMa);
    v32 = sub_23FC98280();
    if ((_DWORD)v32 != 1)
      goto LABEL_14;
    v33 = *v31;
    v34 = *v28;
    sub_23FBFEF18(v0, _s19EvaluatorVoteSourceOMa);
    v35 = v33 == v34;
    v24 = v40;
    if (!v35)
      goto LABEL_15;
LABEL_11:
    sub_23FC98294(v46);
    sub_23FC98294((uint64_t)v24);
    v26 += v27;
    if (!--v25)
      goto LABEL_16;
  }
  sub_23FC9822C(v0, (uint64_t)v16);
  if (sub_23FC98280() != 1)
  {
    v36 = v41;
    sub_23FC0F380((uint64_t)v28, v41, _s21ActionExecutionResultOMa);
    sub_23FD229B8((uint64_t)v16, v36);
    v38 = v37;
    sub_23FBFEF18(v36, _s21ActionExecutionResultOMa);
    sub_23FBFEF18((uint64_t)v16, _s21ActionExecutionResultOMa);
    sub_23FC98294(v0);
    if ((v38 & 1) == 0)
      goto LABEL_15;
    goto LABEL_11;
  }
  sub_23FBFEF18((uint64_t)v16, _s21ActionExecutionResultOMa);
LABEL_14:
  sub_23FC9821C(v32, &qword_256F5F818);
  v24 = v40;
LABEL_15:
  sub_23FC9825C(v46);
  sub_23FC9825C((uint64_t)v24);
LABEL_16:
  sub_23FC060D4();
}

void sub_23FC978B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  BOOL v42;

  sub_23FC061F0();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v26 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v31);
  v34 = (char *)&a9 - v33;
  v35 = *(_QWORD *)(v25 + 16);
  if (v35 == *(_QWORD *)(v23 + 16) && v35 && v25 != v23)
  {
    v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v37 = *(_QWORD *)(v32 + 72);
    v38 = v35 - 1;
    do
    {
      sub_23FC0EDD8(v25 + v36, (uint64_t)v34, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      sub_23FC0EDD8(v23 + v36, (uint64_t)v30, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      static FeedbackLearning.CandidateEvaluation.== infix(_:_:)();
      v40 = v39;
      sub_23FBFEF18((uint64_t)v30, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      sub_23FBFEF18((uint64_t)v34, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      v42 = v38-- != 0;
      if ((v40 & 1) == 0)
        break;
      v36 += v37;
    }
    while (v42);
  }
  sub_23FC060D4();
}

ValueMetadata *type metadata accessor for FeedbackLearning.StandardTupleGenerator()
{
  return &type metadata for FeedbackLearning.StandardTupleGenerator;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearningInteractionRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD72D28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD72D64();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23FBFD684(&qword_256F5D520);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FD72D64();
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FD72D64();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23FBFD684(&qword_256F5D520);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FD72D64();
  v11 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v10);
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23FBFD684(&qword_256F5D520);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FD72D64();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23FBFD684(&qword_256F5D520);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FD72D64();
  v11 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v10);
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23FBFD684(&qword_256F5D520);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearningInteractionRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC97FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = sub_23FC98214();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, a2, v7);
  }
  v9 = sub_23FBFD684(&qword_256F5D520);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, a2, v7);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearningInteractionRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC98078(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_23FC98214();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, a2, a2, v9);
  }
  result = sub_23FBFD684(&qword_256F5D520);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1 + *(int *)(a4 + 20);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, a2, a2, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_23FC98114()
{
  unint64_t v0;
  unint64_t v1;

  sub_23FD72D28();
  if (v0 <= 0x3F)
  {
    sub_23FC981A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23FC981A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256F5F7D0)
  {
    sub_23FD72D64();
    v0 = sub_23FD75038();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256F5F7D0);
  }
}

uint64_t sub_23FC981F8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 152));
}

void sub_23FC9820C(uint64_t a1)
{
  uint64_t *v1;

  sub_23FBFEF74(a1, v1);
}

uint64_t sub_23FC98214()
{
  return sub_23FD72D28();
}

void sub_23FC9821C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FBFEF74(v2, a2);
}

void sub_23FC98224(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0EDD8(a1, a2, v2);
}

void sub_23FC9822C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0EDD8(a1, a2, v2);
}

void sub_23FC98234(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FBFEF18(v2, a2);
}

uint64_t sub_23FC9823C()
{
  return type metadata accessor for FeedbackLearningInteractionRecord();
}

uint64_t sub_23FC98244(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

void sub_23FC9825C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

uint64_t sub_23FC98264()
{
  uint64_t v0;

  return v0;
}

void sub_23FC98270(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

uint64_t sub_23FC98278()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC98280()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC9828C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void sub_23FC98294(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

id sub_23FC9829C(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_23FC982DC(a1, a2);
}

id sub_23FC982DC(uint64_t a1, void *a2)
{
  void *v2;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = v2;
  v7 = sub_23FD725CC();
  v8 = (uint64_t *)&v6[OBJC_IVAR____TtCC23IntelligenceFlowRuntime24InternalXPCServiceServer6Server_clientApplicationIdentifier];
  *v8 = v7;
  v8[1] = v9;

  v13.receiver = v6;
  v13.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v13, sel_init);

  v11 = sub_23FD725D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  return v10;
}

void sub_23FC98380()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23FC983B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23FC98400@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = sub_23FC9829C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FC98424()
{
  return sub_23FD72578();
}

uint64_t sub_23FC9842C()
{
  return sub_23FD72578();
}

uint64_t sub_23FC9843C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InternalXPCServiceServer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for InternalXPCServiceServer.Server()
{
  return objc_opt_self();
}

uint64_t sub_23FC9848C(uint64_t a1, uint64_t a2)
{
  return sub_23FC984E8(&qword_256F5F860, a2, (uint64_t (*)(uint64_t))type metadata accessor for InternalXPCServiceServer.Server, (uint64_t)&unk_23FD77B60);
}

uint64_t sub_23FC984B8()
{
  return sub_23FC984E8(&qword_254346CF8, 255, MEMORY[0x24BE53600], MEMORY[0x24BE535F8]);
}

uint64_t sub_23FC984E8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2426797E8](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23FC98528()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_254346E50;
  v1 = (id)qword_254346E50;
  return v0;
}

void sub_23FC98570(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_254346E50;
  qword_254346E50 = a1;

}

uint64_t (*sub_23FC985BC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23FC985FC()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_23FC98640(uint64_t a1)
{
  swift_beginAccess();
  qword_254346E48 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_23FC9868C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static RuntimeNumericError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) != 0)
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        v7 = sub_23FD75380();
        goto LABEL_17;
      }
LABEL_16:
      v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5)
      goto LABEL_15;
    goto LABEL_16;
  }
  v7 = 0;
LABEL_17:
  sub_23FC987C0();
  sub_23FC987C0();
  sub_23FC987C8();
  sub_23FC987C8();
  return v7 & 1;
}

uint64_t sub_23FC987C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC987C8()
{
  return swift_bridgeObjectRelease();
}

Swift::Float __swiftcall Float.sigmoid()()
{
  float v0;

  return 1.0 / (float)(expf(-v0) + 1.0);
}

Swift::String __swiftcall Float.toString(decimalPlaces:)(Swift::Int decimalPlaces)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v2 = v1;
  sub_23FC9C87C();
  sub_23FD75344();
  sub_23FC9C870();
  sub_23FC15A24();
  sub_23FC9C7EC();
  sub_23FBFD684(&qword_256F5F868);
  v3 = sub_23FC58AA0();
  v4 = MEMORY[0x24BEE14E8];
  *(_OWORD *)(v3 + 16) = xmmword_23FD769D0;
  v5 = MEMORY[0x24BEE1568];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_DWORD *)(v3 + 32) = v2;
  sub_23FC9C83C();
  sub_23FC9C78C();
  sub_23FC9C6B0();
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

Swift::String __swiftcall Double.toString(decimalPlaces:)(Swift::Int decimalPlaces)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v2 = v1;
  sub_23FC9C87C();
  sub_23FD75344();
  sub_23FC9C870();
  sub_23FC15A24();
  sub_23FC9C7EC();
  sub_23FBFD684(&qword_256F5F868);
  v3 = sub_23FC58AA0();
  v4 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v3 + 16) = xmmword_23FD769D0;
  v5 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  sub_23FC9C83C();
  sub_23FC9C78C();
  sub_23FC9C6B0();
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

void Array<A>.dotProduct(with:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC9C760();
  if (v2)
  {
    sub_23FC9C828(v1, MEMORY[0x24BDB31D0], v0);
  }
  else
  {
    sub_23FD750E0();
    sub_23FC9C890();
    sub_23FC9C534();
    sub_23FC9C748();
    sub_23FC103E8();
    sub_23FC9C630();
    sub_23FC9C534();
    sub_23FC9C748();
    sub_23FC15A24();
    sub_23FC98A10();
    v3 = sub_23FC5A704();
    sub_23FC9C5A0(v3, v4);
  }
  sub_23FC9C688();
}

unint64_t sub_23FC98A10()
{
  unint64_t result;

  result = qword_256F5F870;
  if (!qword_256F5F870)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for RuntimeNumericError, &type metadata for RuntimeNumericError);
    atomic_store(result, (unint64_t *)&qword_256F5F870);
  }
  return result;
}

void Array<A>.cosineSimilarity(with:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  float v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  float v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23FC9C760();
  if (v16)
  {
    v17 = v1;
    v18 = v0;
    sub_23FC9C770((const float *)(v1 + 32), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v36, NAN);
    sub_23FC9C770((const float *)(v18 + 32), v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v37, NAN);
    sub_23FC98CA4(v17, v18, MEMORY[0x24BDB31D0]);
  }
  else
  {
    sub_23FD750E0();
    sub_23FC9C890();
    sub_23FC9C534();
    sub_23FD74C48();
    sub_23FC103E8();
    sub_23FC9C630();
    sub_23FC9C534();
    sub_23FD74C48();
    sub_23FC15A24();
    sub_23FC98A10();
    v34 = sub_23FC5A704();
    sub_23FC9C5A0(v34, v35);
  }
}

void Array<A>.euclideanDistance(with:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC9C760();
  if (v2)
  {
    sub_23FC9C828(v1, MEMORY[0x24BDB31C8], v0);
  }
  else
  {
    sub_23FD750E0();
    sub_23FC9C890();
    sub_23FC9C534();
    sub_23FC9C748();
    sub_23FC103E8();
    sub_23FC9C630();
    sub_23FC9C534();
    sub_23FC9C748();
    sub_23FC15A24();
    sub_23FC98A10();
    v3 = sub_23FC5A704();
    sub_23FC9C5A0(v3, v4);
  }
  sub_23FC9C688();
}

float sub_23FC98CA4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, float *))
{
  float v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    __break(1u);
  v4 = NAN;
  a3(a1 + 32, 1, a2 + 32, 1, &v4);
  return v4;
}

void Array<A>.padding(totalSize:padValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = a1 - v5;
  if (a1 <= v5)
  {
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  if (a1 - v5 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a2;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_4;
  }
  sub_23FC9C81C();
  v4 = v9;
LABEL_4:
  v7 = *(_QWORD *)(v4 + 16);
  do
  {
    if (v7 >= *(_QWORD *)(v4 + 24) >> 1)
    {
      sub_23FC9C81C();
      v4 = v8;
    }
    *(_QWORD *)(v4 + 16) = v7 + 1;
    *(_QWORD *)(v4 + 8 * v7++ + 32) = v3;
    --v6;
  }
  while (v6);
LABEL_10:
  sub_23FC17830();
}

void Array<A>.to2D(numRows:numColumns:)(uint64_t a1, int64_t a2, uint64_t a3)
{
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v4 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5 != a1 * a2)
  {
    sub_23FD750E0();
    swift_bridgeObjectRelease();
    sub_23FC9C5FC();
    sub_23FC9C834();
    swift_bridgeObjectRelease();
    sub_23FD74C48();
    sub_23FC9C5FC();
    sub_23FC9C834();
    swift_bridgeObjectRelease();
    sub_23FD74C48();
    sub_23FC9C5FC();
    sub_23FC9C834();
    sub_23FC15A24();
    sub_23FC98A10();
    sub_23FC5A704();
    *(_QWORD *)v19 = 0xD000000000000025;
    *(_QWORD *)(v19 + 8) = 0x800000023FD84590;
    *(_BYTE *)(v19 + 16) = 0;
    swift_willThrow();
    return;
  }
  if (a1 < 0)
    goto LABEL_27;
  if (a1)
  {
    v25 = MEMORY[0x24BEE4AF8];
    sub_23FC9BA68();
    if (v4 < 0)
    {
LABEL_28:
      __break(1u);
      return;
    }
    v6 = 0;
    v7 = 0;
    v8 = v25;
    v9 = a1;
    v10 = MEMORY[0x24BEE4AF8];
    v20 = v4;
    while (v7 != v9)
    {
      if (v4)
      {
        v22 = v6;
        v23 = v8;
        v24 = v10;
        sub_23FC9BA94(0, v4, 0);
        if ((unsigned __int128)(v7 * (__int128)v4) >> 64 != (v7 * v4) >> 63)
          goto LABEL_25;
        v8 = v23;
        v11 = v24;
        v12 = v4;
        v9 = a1;
        v6 = v22;
        v13 = v22;
        v10 = MEMORY[0x24BEE4AF8];
        while (v13 < v5)
        {
          v14 = *(_DWORD *)(a3 + 32 + 4 * v13);
          v16 = *(_QWORD *)(v24 + 16);
          v15 = *(_QWORD *)(v24 + 24);
          if (v16 >= v15 >> 1)
          {
            sub_23FC9BA94((char *)(v15 > 1), v16 + 1, 1);
            v6 = v22;
            v8 = v23;
            v10 = MEMORY[0x24BEE4AF8];
            v9 = a1;
          }
          *(_QWORD *)(v24 + 16) = v16 + 1;
          *(_DWORD *)(v24 + 4 * v16 + 32) = v14;
          ++v13;
          if (!--v12)
          {
            v4 = v20;
            goto LABEL_17;
          }
        }
        __break(1u);
        break;
      }
      v11 = v10;
LABEL_17:
      v26 = v8;
      v17 = *(_QWORD *)(v8 + 16);
      if (v17 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        v18 = v6;
        sub_23FC9BA68();
        v6 = v18;
        v10 = MEMORY[0x24BEE4AF8];
        v9 = a1;
        v8 = v26;
      }
      ++v7;
      *(_QWORD *)(v8 + 16) = v17 + 1;
      *(_QWORD *)(v8 + 8 * v17 + 32) = v11;
      v6 += v4;
      if (v7 == v9)
        return;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
}

void sub_23FC990DC()
{
  sub_23FC99104();
}

void sub_23FC990F0()
{
  sub_23FC99104();
}

void sub_23FC99104()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD);

  sub_23FC9C4F8();
  if ((v5 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v6 != v7)
    {
      sub_23FC9C4EC();
      if (v6)
      {
        __break(1u);
        goto LABEL_18;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C660();
  if (v4)
  {
    sub_23FC9C518(v8, v9, v10, v11, v12);
    sub_23FC9C7B4();
    v13 = (const void *)sub_23FC9C49C();
    sub_23FC9C7BC(v13);
    if (v3)
    {
      sub_23FC9C640();
      v15 = v15 && v3 == -1;
      if (!v15)
      {
        sub_23FC9C540(v14);
        goto LABEL_13;
      }
    }
LABEL_18:
    sub_23FC9C44C();
    sub_23FC9C898();
    __break(1u);
    return;
  }
LABEL_13:
  sub_23FC9C7B4();
  sub_23FC9C79C();
  if ((v1 & 1) != 0)
  {
    sub_23FC9AAB8(v0 + v16, v2);
    sub_23FC9C4E0();
  }
  else
  {
    v17 = sub_23FC9C5B4();
    sub_23FC9A3C8(v17, v18, v19, v20, v21);
  }
  sub_23FC9C670();
}

void sub_23FC99220()
{
  sub_23FC99104();
}

void sub_23FC99234()
{
  sub_23FC99104();
}

void sub_23FC99248()
{
  sub_23FC992E8();
}

void sub_23FC9925C()
{
  sub_23FC99104();
}

void sub_23FC99270()
{
  sub_23FC99104();
}

void sub_23FC99284()
{
  sub_23FC99104();
}

void sub_23FC99298()
{
  sub_23FC99104();
}

void sub_23FC992AC()
{
  sub_23FC99104();
}

void sub_23FC992C0()
{
  sub_23FC99104();
}

void sub_23FC992D4()
{
  sub_23FC992E8();
}

void sub_23FC992E8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;

  sub_23FC9C4F8();
  if ((v5 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v6 != v7)
    {
      sub_23FC9C4EC();
      if (v6)
      {
        __break(1u);
        goto LABEL_18;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C660();
  if (v4)
  {
    sub_23FC9C518(v8, v9, v10, v11, v12);
    sub_23FC6087C();
    v13 = (const void *)sub_23FC9C49C();
    sub_23FC9C7BC(v13);
    if (v3)
    {
      sub_23FC9C640();
      v15 = v15 && v3 == -1;
      if (!v15)
      {
        sub_23FC9C540(v14);
        goto LABEL_13;
      }
    }
LABEL_18:
    sub_23FC9C44C();
    sub_23FC9C898();
    __break(1u);
    return;
  }
LABEL_13:
  sub_23FC6087C();
  sub_23FC9C79C();
  if ((v1 & 1) != 0)
  {
    sub_23FC9A92C(v0 + v16, v2);
    sub_23FC9C4E0();
  }
  else
  {
    v17 = sub_23FC9C5B4();
    sub_23FC9A224(v17, v18, v19, v20, v21);
  }
  sub_23FC9C670();
}

void sub_23FC99404()
{
  sub_23FC99104();
}

void sub_23FC99418()
{
  sub_23FC992E8();
}

void sub_23FC9942C()
{
  sub_23FC99104();
}

void sub_23FC99440()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_23FC9C724();
  if ((v2 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v3 != v4)
    {
      sub_23FC9C4EC();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C590();
  if (v1)
  {
    sub_23FBFD684(&qword_256F5F660);
    v5 = (const void *)sub_23FC58AA0();
    v6 = j__malloc_size(v5);
    sub_23FC9C780((uint64_t)(v6 - 32) / 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_23FC9C6E0();
    sub_23FC9A498(v7, v8, v9);
    sub_23FC9C4E0();
  }
  else
  {
    v10 = sub_23FC9C580();
    sub_23FC99BCC(v10, v11, v12, v13);
  }
  sub_23FC09258();
}

void sub_23FC994E8()
{
  sub_23FC99104();
}

void sub_23FC994FC()
{
  sub_23FC99104();
}

void sub_23FC99510()
{
  sub_23FC99630();
}

void sub_23FC99524()
{
  sub_23FC99104();
}

void sub_23FC99538()
{
  sub_23FC99104();
}

void sub_23FC9954C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_23FC9C724();
  if ((v2 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v3 != v4)
    {
      sub_23FC9C4EC();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C590();
  if (v1)
  {
    sub_23FBFD684(&qword_256F5F8E8);
    v5 = (const void *)sub_23FC58AA0();
    v6 = j__malloc_size(v5);
    sub_23FC9C780((uint64_t)(v6 - 32) / 16);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_23FC9C6E0();
    sub_23FC9A51C(v7, v8, v9);
    sub_23FC9C4E0();
  }
  else
  {
    v10 = sub_23FC9C580();
    sub_23FC99CC0(v10, v11, v12, v13);
  }
  sub_23FC09258();
}

void sub_23FC995F4()
{
  sub_23FC99104();
}

void sub_23FC99608()
{
  sub_23FC992E8();
}

void sub_23FC9961C()
{
  sub_23FC99630();
}

void sub_23FC99630()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  sub_23FC9C4F8();
  if ((v2 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v3 != v4)
    {
      sub_23FC9C4EC();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C650();
  if (v1)
  {
    sub_23FC9C518(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_23FC58AA0();
    sub_23FC9C7C4(v10);
  }
  if ((v0 & 1) != 0)
  {
    v11 = (char *)sub_23FC9C864();
    sub_23FC9A7AC(v11, v12, v13);
    sub_23FC9C4E0();
  }
  else
  {
    v14 = sub_23FC9C5B4();
    sub_23FC99DB4(v14, v15, v16, v17, v18);
  }
  sub_23FC17830();
}

void sub_23FC996C0()
{
  sub_23FC992E8();
}

void sub_23FC996D4()
{
  sub_23FC992E8();
}

void sub_23FC996E8()
{
  sub_23FC99104();
}

void sub_23FC996FC()
{
  sub_23FC99104();
}

void sub_23FC99710()
{
  sub_23FC997F8();
}

void sub_23FC99724()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_23FC9C724();
  if ((v2 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v3 != v4)
    {
      sub_23FC9C4EC();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C590();
  if (v1)
  {
    sub_23FBFD684(&qword_256F5F978);
    v5 = (const void *)sub_23FC58AA0();
    v6 = j__malloc_size(v5);
    sub_23FC9C780((uint64_t)(v6 - 32) / 40);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_23FC9C6E0();
    sub_23FC9A580(v7, v8, v9);
    sub_23FC9C4E0();
  }
  else
  {
    v10 = sub_23FC9C580();
    sub_23FC99E6C(v10, v11, v12, v13);
  }
  sub_23FC17830();
}

void sub_23FC997D0()
{
  sub_23FC99104();
}

void sub_23FC997E4()
{
  sub_23FC997F8();
}

void sub_23FC997F8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;

  sub_23FC9C4F8();
  if ((v2 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v3 != v4)
    {
      sub_23FC9C4EC();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C650();
  if (v1)
  {
    sub_23FC9C518(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_23FC58AA0();
    v11 = j__malloc_size(v10);
    sub_23FC9C540(v11 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v12 = (char *)sub_23FC9C864();
    sub_23FC9AA4C(v12, v13, v14);
    sub_23FC9C4E0();
  }
  else
  {
    v15 = sub_23FC9C5B4();
    sub_23FC99F88(v15, v16, v17, v18, v19);
  }
  sub_23FC17830();
}

void sub_23FC99898()
{
  sub_23FC99104();
}

void sub_23FC998AC()
{
  sub_23FC992E8();
}

void sub_23FC998C0()
{
  sub_23FC99104();
}

void sub_23FC998D4()
{
  sub_23FC99104();
}

void sub_23FC998E8()
{
  sub_23FC992E8();
}

void sub_23FC998FC()
{
  sub_23FC99104();
}

void sub_23FC99910()
{
  sub_23FC99104();
}

void sub_23FC99924()
{
  sub_23FC992E8();
}

void sub_23FC99938()
{
  sub_23FC99104();
}

void sub_23FC9994C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  sub_23FC9C724();
  if ((v2 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v3 != v4)
    {
      sub_23FC9C4EC();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C590();
  if (v1)
  {
    sub_23FBFD684(&qword_256F5F890);
    v5 = (const void *)sub_23FC58AA0();
    v6 = j__malloc_size(v5);
    sub_23FC9C780((uint64_t)(v6 - 32) / 8);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_23FC9C6E0();
    sub_23FC9A728(v7, v8, v9);
    sub_23FC9C4E0();
  }
  else
  {
    v10 = sub_23FC9C580();
    sub_23FC9A048(v10, v11, v12, v13);
  }
  sub_23FC09258();
}

void sub_23FC999F4()
{
  sub_23FC99104();
}

void sub_23FC99A08()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  char *v8;
  size_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  sub_23FC9C724();
  if ((v3 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v4 != v5)
    {
      sub_23FC9C4EC();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C590();
  if (v2)
  {
    sub_23FBFD684(&qword_256F5F920);
    v6 = (_QWORD *)sub_23FC58AA0();
    v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)sub_23FC9C6E0();
    sub_23FC9A8A0(v8, v9, v10);
    sub_23FC9C4E0();
  }
  else
  {
    v11 = sub_23FC9C580();
    sub_23FC9A138(v11, v12, v13, v14);
  }
  sub_23FC09258();
}

void sub_23FC99AA8()
{
  sub_23FC99104();
}

void sub_23FC99ABC()
{
  sub_23FC992E8();
}

void sub_23FC99AD0()
{
  sub_23FC992E8();
}

void sub_23FC99AE4()
{
  sub_23FC99104();
}

void sub_23FC99AF8()
{
  sub_23FC99104();
}

void sub_23FC99B0C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_23FC9C724();
  if ((v2 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v3 != v4)
    {
      sub_23FC9C4EC();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C590();
  if (v1)
  {
    sub_23FBFD684(&qword_256F5F8D0);
    v5 = (const void *)sub_23FC58AA0();
    v6 = j__malloc_size(v5);
    sub_23FC9C780((uint64_t)(v6 - 32) / 48);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_23FC9C6E0();
    sub_23FC9A9C0(v7, v8, v9);
    sub_23FC9C4E0();
  }
  else
  {
    v10 = sub_23FC9C580();
    sub_23FC9A2CC(v10, v11, v12, v13);
  }
  sub_23FC17830();
}

void sub_23FC99BB8()
{
  sub_23FC99104();
}

uint64_t sub_23FC99BCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t sub_23FC99CC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23FD75278();
  __break(1u);
  return result;
}

void sub_23FC99DB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_23FC9C44C();
    sub_23FC9C4C0();
    goto LABEL_11;
  }
  v6 = a4 + 8 * a1 + 32;
  if (v6 >= a3 + 8 * v5 || v6 + 8 * v5 <= a3)
  {
    sub_23FC9C518(a1, a2, a3, a4, a5);
    sub_23FC9C6F4();
    sub_23FC15A24();
    sub_23FC9C69C();
    return;
  }
  sub_23FC9C44C();
  sub_23FC9C4D0();
LABEL_11:
  sub_23FC9C460();
  __break(1u);
}

uint64_t sub_23FC99E6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_23FBFD684(&qword_256F5E578);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23FD75278();
  __break(1u);
  return result;
}

void sub_23FC99F88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_23FC9C44C();
    sub_23FC9C4C0();
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  if (v6 >= a3 + 40 * v5 || v6 + 40 * v5 <= a3)
  {
    sub_23FC9C518(a1, a2, a3, a4, a5);
    sub_23FC9C6F4();
    sub_23FC15A24();
    sub_23FC9C69C();
    return;
  }
  sub_23FC9C44C();
  sub_23FC9C4D0();
LABEL_11:
  sub_23FC9C460();
  __break(1u);
}

char *sub_23FC9A048(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23FD75278();
  __break(1u);
  return result;
}

char *sub_23FC9A138(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23FD75278();
  __break(1u);
  return result;
}

void sub_23FC9A224(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_23FC9C44C();
    sub_23FC9C4C0();
    goto LABEL_11;
  }
  sub_23FC9C518(a1, a2, a3, a4, a5);
  sub_23FC9C550();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    sub_23FC9C7FC();
    sub_23FC15A24();
    sub_23FC9C750();
    return;
  }
  sub_23FC9C44C();
  sub_23FC9C4D0();
LABEL_11:
  sub_23FC9C460();
  __break(1u);
}

uint64_t sub_23FC9A2CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23FD75278();
  __break(1u);
  return result;
}

void sub_23FC9A3C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_23FC9C44C();
    sub_23FC9C4C0();
    goto LABEL_11;
  }
  a5(0);
  sub_23FC9C550();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    sub_23FC9C7FC();
    sub_23FC15A24();
    sub_23FC9C750();
    return;
  }
  sub_23FC9C44C();
  sub_23FC9C4D0();
LABEL_11:
  sub_23FC9C460();
  __break(1u);
}

void sub_23FC9A474(uint64_t a1, uint64_t a2)
{
  sub_23FC9AAB8(a1, a2);
}

void sub_23FC9A480(uint64_t a1, uint64_t a2)
{
  sub_23FC9A92C(a1, a2);
}

void sub_23FC9A48C(uint64_t a1, uint64_t a2)
{
  sub_23FC9AAB8(a1, a2);
}

char *sub_23FC9A498(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_23FC9A51C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23FC9C44C();
    result = (char *)sub_23FC9C460();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_23FC9C508(a3, result);
  }
  return result;
}

char *sub_23FC9A580(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_23FC9A60C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_23FC9A690(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

void sub_23FC9A71C(uint64_t a1, uint64_t a2)
{
  sub_23FC9AAB8(a1, a2);
}

char *sub_23FC9A728(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_23FC9A7AC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23FC9C44C();
    result = (char *)sub_23FC9C460();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_23FC9C508(a3, result);
  }
  return result;
}

char *sub_23FC9A810(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[4 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 4 * a2);
  }
  return __src;
}

void sub_23FC9A894(uint64_t a1, uint64_t a2)
{
  sub_23FC9AAB8(a1, a2);
}

char *sub_23FC9A8A0(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

void sub_23FC9A920(uint64_t a1, uint64_t a2)
{
  sub_23FC9A92C(a1, a2);
}

void sub_23FC9A92C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C460();
    __break(1u);
  }
  else
  {
    sub_23FC9C730();
    if (v5 && (sub_23FBFD684(v4), sub_23FC9C850(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_23FC9C750();
      }
      else
      {
        sub_23FC9C5C8();
        sub_23FC9C5DC();
      }
    }
    else
    {
      sub_23FBFD684(v4);
      sub_23FC9C5C8();
      sub_23FC9C5EC();
    }
  }
}

char *sub_23FC9A9C0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23FD75278();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_23FC9AA4C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23FC9C44C();
    result = (char *)sub_23FC9C460();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_23FC9C508(a3, result);
  }
  return result;
}

void sub_23FC9AAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C460();
    __break(1u);
  }
  else
  {
    sub_23FC9C730();
    if (v5 && (v4(0), sub_23FC9C850(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_23FC9C750();
      }
      else
      {
        sub_23FC9C5C8();
        sub_23FC9C5DC();
      }
    }
    else
    {
      v4(0);
      sub_23FC9C5C8();
      sub_23FC9C5EC();
    }
  }
}

uint64_t sub_23FC9AB4C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C4C0();
  }
  else
  {
    sub_23FC9C708();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      _s13ActionCreatedCMa(0);
      sub_23FC9C520();
      return sub_23FC9C48C();
    }
    sub_23FC9C44C();
    sub_23FC9C4D0();
  }
  result = sub_23FC9C460();
  __break(1u);
  return result;
}

uint64_t sub_23FC9ABD8(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B2A8(a1, a2);
}

uint64_t sub_23FC9ABE4(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B184(a1, a2);
}

uint64_t sub_23FC9ABF0(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B2A8(a1, a2);
}

uint64_t sub_23FC9ABFC(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B2A8(a1, a2);
}

uint64_t sub_23FC9AC08(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C4C0();
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return sub_23FC9C6EC();
    sub_23FC9C44C();
    sub_23FC9C4D0();
  }
  result = sub_23FC9C460();
  __break(1u);
  return result;
}

uint64_t sub_23FC9ACA0(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B2A8(a1, a2);
}

uint64_t sub_23FC9ACAC(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B2A8(a1, a2);
}

uint64_t sub_23FC9ACB8(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B184(a1, a2);
}

uint64_t sub_23FC9ACC4(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B2A8(a1, a2);
}

uint64_t sub_23FC9ACD0(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B2A8(a1, a2);
}

void *sub_23FC9ACDC(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[16 * a2] <= __src || &__src[16 * a2] <= __dst))
    return memcpy(__dst, __src, 16 * a2);
  result = (void *)sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t sub_23FC9ADA4(uint64_t a1, uint64_t a2)
{
  return sub_23FC9B210(a1, a2);
}

uint64_t sub_23FC9ADB0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (v3 = a1 + 24 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_23FD75278();
    __break(1u);
  }
  else
  {
    sub_23FBFD684(&qword_256F5F960);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_23FC9AEA0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_23FD75278();
  __break(1u);
  return result;
}

void *sub_23FC9AF6C(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[8 * a2] <= __src || &__src[8 * a2] <= __dst))
    return memcpy(__dst, __src, 8 * a2);
  result = (void *)sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t sub_23FC9B034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C4C0();
  }
  else
  {
    sub_23FC9C708();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_23FC9C848(v2, v3, v4, v5);
      sub_23FC9C520();
      return sub_23FC9C48C();
    }
    sub_23FC9C44C();
    sub_23FC9C4D0();
  }
  result = sub_23FC9C460();
  __break(1u);
  return result;
}

void *sub_23FC9B0BC(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[4 * a2] <= __src || &__src[4 * a2] <= __dst))
    return memcpy(__dst, __src, 4 * a2);
  result = (void *)sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t sub_23FC9B184(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  char v9;
  BOOL v10;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C4C0();
  }
  else
  {
    sub_23FC9C80C();
    sub_23FC9C848(v3, v4, v5, v6);
    sub_23FC9C6C4();
    if (!v9 & v8)
      v10 = v7 > v2;
    else
      v10 = 0;
    if (!v10)
    {
      sub_23FC9C520();
      return sub_23FC9C48C();
    }
    sub_23FC9C44C();
    sub_23FC9C4D0();
  }
  result = sub_23FC9C460();
  __break(1u);
  return result;
}

uint64_t sub_23FC9B210(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C4C0();
  }
  else
  {
    sub_23FC9C80C();
    v6 = v2 + 40 * v3;
    if (v4 + 40 * v3 > v2)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_23FC9C848(v2, v3, v4, v5);
      sub_23FC9C520();
      return sub_23FC9C48C();
    }
    sub_23FC9C44C();
    sub_23FC9C4D0();
  }
  result = sub_23FC9C460();
  __break(1u);
  return result;
}

uint64_t sub_23FC9B2A8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23FC9C44C();
    sub_23FC9C4C0();
  }
  else
  {
    sub_23FC9C80C();
    v3(0);
    sub_23FC9C6C4();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      sub_23FC9C520();
      return sub_23FC9C48C();
    }
    sub_23FC9C44C();
    sub_23FC9C4D0();
  }
  result = sub_23FC9C460();
  __break(1u);
  return result;
}

void sub_23FC9B338()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B364()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B390()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B3BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B3E8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B414()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BF98();
  *v0 = v1;
}

void sub_23FC9B440()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B46C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BECC();
  *v0 = v1;
}

void sub_23FC9B498()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BECC();
  *v0 = v1;
}

void sub_23FC9B4C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B4F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B51C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B548()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B574()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B5A0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B5CC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B5F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_23FC9C114(a1, a2, a3, *v3, &qword_256F5F8E8, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9A51C, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9AC08);
  *v3 = v4;
}

void sub_23FC9B658()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BF98();
  *v0 = v1;
}

void sub_23FC9B684()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B6B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B6DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BECC();
  *v0 = v1;
}

void sub_23FC9B708()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BECC();
  *v0 = v1;
}

void sub_23FC9B734()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BECC();
  *v0 = v1;
}

void sub_23FC9B760()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B78C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B7B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B7E4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B810()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B83C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B868()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_23FC9C114(a1, a2, a3, *v3, &qword_256F5F950, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9A60C, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9ACDC);
  *v3 = v4;
}

char *sub_23FC9B8C8(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23FC9C02C(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_23FC9B8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_23FC9C114(a1, a2, a3, *v3, &qword_256F5F918, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9A60C, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9AEA0);
  *v3 = v4;
}

void sub_23FC9B918()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BECC();
  *v0 = v1;
}

void sub_23FC9B944()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B970()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B99C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B9C8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9B9F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

char *sub_23FC9BA20(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23FC9C1D4(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_23FC9BA3C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9BA68()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BF98();
  *v0 = v1;
}

char *sub_23FC9BA94(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23FC9C2B4(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

uint64_t destroy for RuntimeNumericError()
{
  return sub_23FC987C8();
}

void _s23IntelligenceFlowRuntime19RuntimeNumericErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23FC987C0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23FC09258();
}

uint64_t assignWithCopy for RuntimeNumericError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23FC987C0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23FC987C8();
  return a1;
}

__n128 initializeWithTake for RuntimeNumericError(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RuntimeNumericError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_23FC987C8();
  return a1;
}

uint64_t getEnumTagSinglePayload for RuntimeNumericError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RuntimeNumericError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23FC9BC34(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23FC9BC3C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RuntimeNumericError()
{
  return &type metadata for RuntimeNumericError;
}

ValueMetadata *type metadata accessor for VectorSimilarity()
{
  return &type metadata for VectorSimilarity;
}

void sub_23FC9BC68()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9BC94()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9BCC0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9BCEC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9BD18()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BECC();
  *v0 = v1;
}

void sub_23FC9BD44()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9BD70()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9C3A8();
  *v0 = v1;
}

void sub_23FC9BD9C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9C3A8();
  *v0 = v1;
}

void sub_23FC9BDC8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FC9BDF4();
  *v0 = v1;
}

void sub_23FC9BDF4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23FC9C4F8();
  if ((v4 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v5 != v6)
    {
      sub_23FC9C4EC();
      if (v5)
        goto LABEL_19;
      sub_23FC9C46C();
    }
  }
  sub_23FC9C660();
  if (v3)
  {
    sub_23FC9C518(v7, v8, v9, v10, v11);
    sub_23FC9C7B4();
    v12 = (const void *)sub_23FC9C49C();
    sub_23FC9C7BC(v12);
    if (v2)
    {
      sub_23FC9C640();
      v14 = v14 && v2 == -1;
      if (!v14)
      {
        sub_23FC9C540(v13);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_13:
  v15 = sub_23FC9C7B4();
  v16 = sub_23FC9C60C(v15);
  if ((v1 & 1) != 0)
  {
    sub_23FC9AAB8(v16, v17);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_23FC9B2A8(v16, v17);
  }
  sub_23FC101F4();
  sub_23FC6264C();
}

void sub_23FC9BEA4()
{
  sub_23FC9BDF4();
}

void sub_23FC9BEB8()
{
  sub_23FC9BECC();
}

void sub_23FC9BECC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23FC9C4F8();
  if ((v4 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v5 != v6)
    {
      sub_23FC9C4EC();
      if (v5)
        goto LABEL_19;
      sub_23FC9C46C();
    }
  }
  sub_23FC9C660();
  if (v3)
  {
    sub_23FC9C518(v7, v8, v9, v10, v11);
    sub_23FC6087C();
    v12 = (const void *)sub_23FC9C49C();
    sub_23FC9C7BC(v12);
    if (v2)
    {
      sub_23FC9C640();
      v14 = v14 && v2 == -1;
      if (!v14)
      {
        sub_23FC9C540(v13);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_13:
  v15 = sub_23FC6087C();
  v16 = sub_23FC9C60C(v15);
  if ((v1 & 1) != 0)
  {
    sub_23FC9A92C(v16, v17);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_23FC9B184(v16, v17);
  }
  sub_23FC101F4();
  sub_23FC6264C();
}

void sub_23FC9BF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23FC9C114(a1, a2, a3, a4, &qword_256F5F8E8, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9A51C, (void (*)(uint64_t, uint64_t, _QWORD *))sub_23FC9AC08);
}

void sub_23FC9BF98()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;

  sub_23FC9C4F8();
  if ((v3 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v4 != v5)
    {
      sub_23FC9C4EC();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C650();
  if (v2)
  {
    sub_23FC9C518(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)sub_23FC58AA0();
    sub_23FC9C7C4(v11);
  }
  v12 = (char *)sub_23FC9C864();
  if ((v1 & 1) != 0)
  {
    sub_23FC9A7AC(v12, v13, v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_23FC9B034((uint64_t)v12, v13);
  }
  sub_23FC101F4();
  sub_23FC17830();
}

char *sub_23FC9C02C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23FBFD684(&qword_256F5F958);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23FC9A690(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23FC9ADB0((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_23FC9C114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, _QWORD *), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  _QWORD *v18;
  uint64_t v19;

  v10 = a1;
  if ((a3 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v12 != v13)
    {
      sub_23FC9C4EC();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    sub_23FC9C518(a1, a2, a3, a4, a5);
    v16 = (_QWORD *)sub_23FC58AA0();
    v17 = j__malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v18 = v16 + 4;
  v19 = a4 + 32;
  if ((v10 & 1) != 0)
  {
    a6(v19, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  sub_23FC101F4();
  sub_23FC17830();
}

char *sub_23FC9C1D4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23FBFD684(&qword_256F5F890);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23FC9A728(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23FC9AF6C(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_23FC9C2B4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23FBFD684(&qword_256F5FA98);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23FC9A810(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23FC9B0BC(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void sub_23FC9C394()
{
  sub_23FC9BECC();
}

void sub_23FC9C3A8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  char *v15;

  sub_23FC9C4F8();
  if ((v3 & 1) != 0)
  {
    sub_23FC9C47C();
    if (v4 != v5)
    {
      sub_23FC9C4EC();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23FC9C46C();
    }
  }
  sub_23FC9C650();
  if (v2)
  {
    sub_23FC9C518(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23FC58AA0();
    v12 = j__malloc_size(v11);
    sub_23FC9C540(v12 - 32);
  }
  v13 = (char *)sub_23FC9C864();
  if ((v1 & 1) != 0)
  {
    sub_23FC9AA4C(v13, v14, v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_23FC9B210((uint64_t)v13, v14);
  }
  sub_23FC101F4();
  sub_23FC17830();
}

uint64_t sub_23FC9C460()
{
  return sub_23FD75278();
}

uint64_t sub_23FC9C48C()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23FC9C49C()
{
  return swift_allocObject();
}

uint64_t sub_23FC9C4E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void *sub_23FC9C508@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t sub_23FC9C518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_23FBFD684(a5);
}

uint64_t sub_23FC9C520()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC9C534()
{
  return sub_23FD75344();
}

void sub_23FC9C540(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t sub_23FC9C580()
{
  return 0;
}

uint64_t sub_23FC9C5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_23FC9C5B4()
{
  return 0;
}

uint64_t sub_23FC9C5C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC9C5DC()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t sub_23FC9C5EC()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t sub_23FC9C5FC()
{
  return sub_23FD75344();
}

uint64_t sub_23FC9C60C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 32) & ~v2);
}

uint64_t sub_23FC9C630()
{
  return sub_23FD74C48();
}

uint64_t sub_23FC9C6E0()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_23FC9C6EC()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23FC9C6F4()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23FC9C748()
{
  return sub_23FD74C48();
}

void sub_23FC9C770(const float *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, float __C, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, float __Ca)
{
  vDSP_Length v18;

  vDSP_svesq(a1, 1, &__Ca, v18);
}

void sub_23FC9C780(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t sub_23FC9C78C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC9C7B4()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

size_t sub_23FC9C7BC(const void *ptr)
{
  return j__malloc_size(ptr);
}

size_t sub_23FC9C7C4(_QWORD *a1)
{
  uint64_t v1;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / 8);
  return result;
}

uint64_t sub_23FC9C7EC()
{
  return sub_23FD74C48();
}

uint64_t sub_23FC9C7FC()
{
  return swift_arrayInitWithCopy();
}

void sub_23FC9C81C()
{
  sub_23FC9994C();
}

float sub_23FC9C828@<S0>(uint64_t a1@<X1>, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, float *)@<X2>, uint64_t a3@<X8>)
{
  return sub_23FC98CA4(a1, a3, a2);
}

uint64_t sub_23FC9C834()
{
  return sub_23FD74C48();
}

uint64_t sub_23FC9C83C()
{
  return sub_23FD74C00();
}

uint64_t sub_23FC9C848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_23FBFD684(a4);
}

uint64_t sub_23FC9C864()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_23FC9C870()
{
  return sub_23FD74C48();
}

uint64_t sub_23FC9C890()
{
  return sub_23FD74C48();
}

uint64_t sub_23FC9C898()
{
  return sub_23FD75224();
}

uint64_t SessionPersistenceManager.init(id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;

  sub_23FC62410(a1, a2);
  v5 = objc_msgSend((id)BiomeLibrary(), sel_Sage);
  swift_unknownObjectRelease();
  v6 = objc_msgSend(v5, sel_Transcript);
  swift_unknownObjectRelease();
  v7 = objc_msgSend(v6, sel_source);

  v8 = type metadata accessor for SessionPersistenceManager();
  *(_QWORD *)(a2 + *(int *)(v8 + 20)) = v7;
  v9 = objc_msgSend((id)BiomeLibrary(), sel_IntelligenceFlow);
  sub_23FC9E99C();
  v10 = objc_msgSend(v2, sel_Transcript);
  swift_unknownObjectRelease();
  v11 = objc_msgSend(v10, sel_Datastream);
  sub_23FC9E99C();
  v12 = objc_msgSend(v2, sel_source);

  result = sub_23FC5FB58(a1);
  *(_QWORD *)(a2 + *(int *)(v8 + 24)) = v12;
  return result;
}

uint64_t type metadata accessor for SessionPersistenceManager()
{
  uint64_t result;

  result = qword_256F5FB78;
  if (!qword_256F5FB78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SessionPersistenceManager.write(event:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  id v99;
  void *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  id v136;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(char *, uint64_t);
  uint64_t v166;
  void (*v167)(uint64_t, uint64_t);
  id v168;
  unint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;

  v173 = a1;
  v172 = sub_23FD7409C();
  v146 = *(_QWORD *)(v172 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FBFEFE0();
  v157 = v4;
  sub_23FBFD684(qword_254346A10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFCC();
  v156 = v7;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC0FFF4();
  v155 = v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v13, v14);
  v151 = (char *)&v138 - v15;
  v153 = sub_23FD7424C();
  v143 = *(_QWORD *)(v153 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v24, v25);
  v142 = (char *)&v138 - v26;
  sub_23FBFD684(&qword_256F65DD0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FBFEFCC();
  v154 = v29;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v30, v31);
  v152 = (uint64_t)&v138 - v32;
  v33 = sub_23FD73850();
  v159 = *(_QWORD *)(v33 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v34, v35);
  sub_23FBFEFE0();
  v171 = v36;
  v37 = sub_23FD71474();
  v161 = *(_QWORD *)(v37 - 8);
  v162 = v37;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v38, v39);
  sub_23FBFF180();
  v42 = v41 - v40;
  v43 = sub_23FD740CC();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v45);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v46, v47);
  sub_23FC0FFF4();
  v166 = v48;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v49, v50);
  v52 = (char *)&v138 - v51;
  v53 = (void (*)(char *, uint64_t))sub_23FD72BF0();
  v164 = *((_QWORD *)v53 - 1);
  v165 = v53;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v54, v55);
  sub_23FBFF180();
  type metadata accessor for SessionIdentityPack(0);
  sub_23FC05FF4();
  v58 = MEMORY[0x24BDAC7A8](v56, v57);
  v60 = (char *)&v138 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v58, v61);
  v63 = (char *)&v138 - v62;
  v158 = v1;
  sub_23FC62410(v1, (uint64_t)&v138 - v62);
  sub_23FD72470();
  v170 = v63;
  sub_23FC62410((uint64_t)v63, (uint64_t)v60);
  v163 = v44;
  v64 = *(void **)(v44 + 16);
  v167 = (void (*)(uint64_t, uint64_t))v43;
  v168 = v64;
  ((void (*)(char *, uint64_t, uint64_t))v64)(v52, v173, v43);
  v65 = sub_23FD72BE4();
  v66 = sub_23FD74F48();
  v67 = v66;
  v68 = os_log_type_enabled(v65, v66);
  v160 = v33;
  v150 = v42;
  if (v68)
  {
    v69 = swift_slowAlloc();
    v140 = swift_slowAlloc();
    v175 = v140;
    *(_DWORD *)v69 = 136315394;
    v139 = v67;
    v70 = SessionIdentityPack.description.getter();
    v174 = sub_23FC9DC40(v70, v71, &v175);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FC5FB58((uint64_t)v60);
    *(_WORD *)(v69 + 12) = 2080;
    v138 = v69 + 14;
    sub_23FD74048();
    sub_23FC606B8((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v72 = v162;
    v73 = sub_23FD75344();
    v75 = v74;
    (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v42, v72);
    v174 = sub_23FC9DC40(v73, v75, &v175);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FC9E948();
    _os_log_impl(&dword_23FBF8000, v65, (os_log_type_t)v139, "[SessionPersistenceManager %s] attempting to write event: %s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  sub_23FC5FB58((uint64_t)v60);
  sub_23FC9E948();

  sub_23FC9E978();
  v76 = v172;
  v77 = v169;
  sub_23FC9E968();
  sub_23FD73838();
  if (!v77)
  {
    sub_23FC606B8((unint64_t *)&unk_256F65DC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE55B10], MEMORY[0x24BE55B08]);
    v78 = sub_23FD723A4();
    v169 = v79;
    v173 = v78;
    v80 = v142;
    sub_23FC9E960();
    v81 = v152;
    sub_23FD74240();
    v165 = *(void (**)(char *, uint64_t))(v143 + 8);
    v165(v80, v153);
    v164 = sub_23FD71414();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v81, 0, 1, v164);
    sub_23FD73F88();
    v82 = v144;
    sub_23FD71420();
    swift_bridgeObjectRelease();
    v83 = v141;
    sub_23FC9E968();
    v84 = v162;
    v85 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v82, 1, v162);
    v86 = v161;
    if (v85 == 1)
    {
      v87 = v42;
      v88 = v151;
      sub_23FD740B4();
      v89 = (uint64_t)v88;
      ((void (*)(uint64_t, uint64_t))v44)(v83, v87);
      sub_23FC9DC00(v82);
    }
    else
    {
      ((void (*)(uint64_t, uint64_t))v44)(v83, v42);
      v90 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 32);
      v89 = (uint64_t)v151;
      v90(v151, v82, v84);
    }
    sub_23FC931FC(v89);
    v91 = v157;
    v92 = v89;
    sub_23FD740A8();
    v93 = sub_23FD74078();
    v95 = v94;
    v167 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
    v167(v91, v76);
    v96 = objc_allocWithZone(MEMORY[0x24BE0C600]);
    v97 = v173;
    v98 = v169;
    sub_23FC577F4(v173, v169);
    v99 = sub_23FC9D4CC(v152, v92, 0x6B73615465676153, 0xE800000000000000, v93, v95, 1, v97, v98);
    v166 = type metadata accessor for SessionPersistenceManager();
    v100 = *(void **)(v158 + *(int *)(v166 + 20));
    v168 = v99;
    objc_msgSend(v100, sel_sendEvent_, v99);
    v101 = v145;
    sub_23FC9E960();
    v102 = v154;
    sub_23FD74240();
    v165(v101, v153);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v102, 0, 1, v164);
    v103 = v147;
    sub_23FC9E960();
    v104 = v155;
    sub_23FD7421C();
    sub_23FC9E988(v103);
    sub_23FC931FC(v104);
    v105 = v148;
    sub_23FC9E960();
    sub_23FD74234();
    sub_23FC9E988(v105);
    v106 = (void *)sub_23FD754AC();
    v107 = v149;
    sub_23FC9E960();
    sub_23FD74228();
    sub_23FC9E988(v107);
    v108 = (void *)sub_23FD754AC();
    v109 = objc_allocWithZone(MEMORY[0x24BE0C578]);
    v165 = (void (*)(char *, uint64_t))sub_23FC9D67C(v104, v106, v108);
    v110 = v156;
    sub_23FD740B4();
    sub_23FC931FC(v110);
    v111 = sub_23FD73FB8();
    v112 = 0;
    if ((v113 & 1) == 0)
      v112 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedLongLong_, v111);
    v114 = sub_23FD73FF4();
    v163 = v115;
    v164 = v114;
    v153 = sub_23FD73F88();
    v152 = v116;
    v117 = sub_23FD74030();
    v119 = v118;
    v120 = sub_23FD73FDC();
    v122 = v121;
    v123 = v155;
    sub_23FD73F70();
    v124 = objc_allocWithZone(MEMORY[0x24BE0C3F8]);
    v125 = sub_23FC9D728(v156, v112, v164, v163, v153, v152, v117, v119, v120, v122, v123);
    v126 = v150;
    sub_23FD74048();
    v127 = sub_23FD7142C();
    v129 = v128;
    (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v126, v162);
    v130 = v157;
    sub_23FD740A8();
    v131 = sub_23FD74078();
    v133 = v132;
    v167(v130, v172);
    objc_allocWithZone(MEMORY[0x24BE0C400]);
    v134 = v173;
    v135 = v169;
    sub_23FC577F4(v173, v169);
    v136 = sub_23FC9D8F0(v154, v165, v125, v127, v129, v131, v133, v134, v135);
    objc_msgSend(*(id *)(v158 + *(int *)(v166 + 24)), sel_sendEvent_, v136);

    sub_23FC577B0(v134, v135);
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v171, v160);
  }
  return sub_23FC5FB58((uint64_t)v170);
}

id sub_23FC9D4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v24;

  v15 = sub_23FD71414();
  v16 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v15) != 1)
  {
    v16 = (void *)sub_23FD713E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  }
  v17 = sub_23FD71474();
  v18 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a2, 1, v17) != 1)
  {
    v18 = (void *)sub_23FD71444();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
  if (a4)
  {
    v19 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  if (a6)
  {
    v20 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  if (a9 >> 60 == 15)
  {
    v21 = 0;
  }
  else
  {
    v21 = (void *)sub_23FD713C0();
    sub_23FC9E934(a8, a9);
  }
  v22 = objc_msgSend(v24, sel_initWithAbsoluteTimestamp_clientSessionID_eventLabel_eventType_serializationFormat_eventPayload_, v16, v18, v19, v20, a7, v21);

  return v22;
}

id sub_23FC9D67C(uint64_t a1, void *a2, void *a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  void *v9;
  id v10;

  v4 = v3;
  v8 = sub_23FD71474();
  v9 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v8) != 1)
  {
    v9 = (void *)sub_23FD71444();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  }
  v10 = objc_msgSend(v4, sel_initWithBootSessionUUID_suspendingNanosecondsSinceBoot_continuousNanosecondsSinceBoot_, v9, a2, a3);

  return v10;
}

id sub_23FC9D728(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v25;

  v16 = sub_23FD71474();
  v17 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v16) != 1)
  {
    v17 = (void *)sub_23FD71444();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
  }
  if (a4)
  {
    v18 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
    if (a6)
    {
LABEL_5:
      v19 = (void *)sub_23FD74BE8();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    v18 = 0;
    if (a6)
      goto LABEL_5;
  }
  v19 = 0;
LABEL_8:
  if (a8)
  {
    v20 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
    if (a10)
    {
LABEL_10:
      v21 = (void *)sub_23FD74BE8();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  else
  {
    v20 = 0;
    if (a10)
      goto LABEL_10;
  }
  v21 = 0;
LABEL_13:
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a11, 1, v16) == 1)
  {
    v22 = 0;
  }
  else
  {
    v22 = (void *)sub_23FD71444();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a11, v16);
  }
  v23 = objc_msgSend(v25, sel_initWithSessionId_spanId_clientRequestId_clientSessionId_clientApplicationId_clientGroupIdentifier_requestEventId_, v17, a2, v18, v19, v20, v21, v22);

  return v23;
}

id sub_23FC9D8F0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v22;

  v15 = sub_23FD71414();
  v16 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v15) != 1)
  {
    v16 = (void *)sub_23FD713E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  }
  if (a5)
  {
    v17 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  if (a7)
  {
    v18 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  if (a9 >> 60 == 15)
  {
    v19 = 0;
  }
  else
  {
    v19 = (void *)sub_23FD713C0();
    sub_23FC9E934(a8, a9);
  }
  v20 = objc_msgSend(v22, sel_initWithAbsoluteTimestamp_monotonicTimestamp_identifiers_eventId_eventType_data_, v16, a2, a3, v17, v18, v19);

  return v20;
}

uint64_t sub_23FC9DA60()
{
  void (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FC9E990();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FBFF180();
  v5 = v4 - v3;
  v0();
  v6 = SessionIdentityPack.description.getter();
  sub_23FC5FB58(v5);
  return v6;
}

uint64_t sub_23FC9DAD4(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  sub_23FC57E74();
  return sub_23FD75068();
}

uint64_t sub_23FC9DB18(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;

  a1(&v3);
  v1 = sub_23FD73214();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23FC9DB70(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC9DB90(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_23FC9DC40(v6, v7, a3);
  v8 = *a1 + 8;
  sub_23FD75044();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_23FC9DC00(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(qword_254346A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FC9DC40(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_23FC9DD10(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23FC9E8F8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23FC9E8F8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_23FC9DD10(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_23FC9DE64((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_23FD75050();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_23FC9DF28(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_23FD75158();
    if (!v8)
    {
      result = sub_23FD75224();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_23FC9DE64(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t sub_23FC9DF28(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23FC9DFBC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_23FC9E190(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_23FC9E190((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23FC9DFBC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_23FD74C60();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_23FC9E12C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_23FD750EC();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_23FD75278();
  __break(1u);
LABEL_14:
  result = sub_23FD75224();
  __break(1u);
  return result;
}

_QWORD *sub_23FC9E12C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23FBFD684(qword_254346B78);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_23FC9E190(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23FBFD684(qword_254346B78);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23FC9A8A0(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23FC9E264(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_23FC9E264(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionPersistenceManager(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for SessionIdentityPack(0) + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[3];
    v9[2] = v10[2];
    v9[3] = v12;
    v13 = v10[5];
    v9[4] = v10[4];
    v9[5] = v13;
    v14 = *(int *)(a3 + 20);
    v15 = *(int *)(a3 + 24);
    v16 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = (uint64_t)v16;
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v16;
    v19 = v17;
  }
  return a1;
}

void destroy for SessionPersistenceManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for SessionIdentityPack(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for SessionPersistenceManager(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for SessionIdentityPack(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  v13 = *(int *)(a3 + 20);
  v14 = *(int *)(a3 + 24);
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v15;
  v18 = v16;
  return a1;
}

uint64_t assignWithCopy for SessionPersistenceManager(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for SessionIdentityPack(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 20);
  v11 = *(void **)(a2 + v10);
  v12 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  v13 = v11;

  v14 = *(int *)(a3 + 24);
  v15 = *(void **)(a2 + v14);
  v16 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v17 = v15;

  return a1;
}

uint64_t initializeWithTake for SessionPersistenceManager(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for SessionIdentityPack(0) + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for SessionPersistenceManager(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for SessionIdentityPack(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  v13 = *(int *)(a3 + 20);
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  v15 = *(int *)(a3 + 24);
  v16 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);

  return a1;
}

uint64_t getEnumTagSinglePayload for SessionPersistenceManager()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC9E790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23FC9E990();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, a2, v6);
  v8 = *(_QWORD *)(v3 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionPersistenceManager()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC9E80C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for SessionIdentityPack(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23FC9E880()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionIdentityPack(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23FC9E8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23FC9E934(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23FC577B0(a1, a2);
  return a1;
}

uint64_t sub_23FC9E948()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v0, *(_QWORD *)(v1 - 152));
}

uint64_t sub_23FC9E960()
{
  return sub_23FD740C0();
}

uint64_t sub_23FC9E968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_23FC9E978()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 168));
}

uint64_t sub_23FC9E988(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FC9E990()
{
  return type metadata accessor for SessionIdentityPack(0);
}

uint64_t sub_23FC9E99C()
{
  return swift_unknownObjectRelease();
}

uint64_t PerURLSingletonLockBox.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PerURLSingletonLockBox.init()();
  return v0;
}

uint64_t PerURLSingletonLockBox.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_23FD71354();
  swift_getTupleTypeMetadata2();
  sub_23FD74D20();
  sub_23FC9F224();
  v3 = sub_23FD74B40();
  v1 = sub_23FD74B70();
  *(_QWORD *)(v0 + 16) = sub_23FC9EA90((uint64_t)&v3, v1);
  return v0;
}

uint64_t sub_23FC9EA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  v7 = sub_23FC9F324((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

uint64_t sub_23FC9EB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;

  v26 = a2;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = sub_23FD75038();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = &v21[-v14];
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)&v21[-v14], 1, 1, v6);
  v16 = v2[2];
  v17 = *(_QWORD *)(v5 + 88);
  v22 = v6;
  v23 = v17;
  v24 = a1;
  v25 = v15;
  sub_23FD71354();
  sub_23FC9F224();
  v18 = sub_23FD74B70();
  sub_23FC9F3FC((void (*)(uint64_t))sub_23FC9F4E4, (uint64_t)v21, v16, v18, MEMORY[0x24BEE4AE0] + 8);
  if (v3)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v15, v7);
  v19 = v26;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v12, v15, v7);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v6) != 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v19, v12, v6);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v15, v7);
  }
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v12, v7);
  result = sub_23FD75230();
  __break(1u);
  return result;
}

uint64_t sub_23FC9ED04(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a5;
  v49 = a3;
  v8 = sub_23FD71354();
  v47 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v44 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v42 - v13;
  v50 = sub_23FD75038();
  v52 = *(_QWORD *)(v50 - 8);
  v16 = MEMORY[0x24BDAC7A8](v50, v15);
  v43 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v46 = (char *)&v42 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v24 = (char *)&v42 - v23;
  v25 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v22, v26);
  v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1;
  v29 = *a1;
  v30 = sub_23FC9F224();
  v31 = v29;
  v32 = v8;
  v42 = v30;
  MEMORY[0x242678930](a2, v31, v8, a4);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v24, 1, a4) == 1)
  {
    v33 = v49;
    v34 = v50;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v50);
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
    v35(v14, a2, v8);
    v36 = (uint64_t)v46;
    v37 = v51;
    result = (*(uint64_t (**)(char *, uint64_t))(v48 + 16))(v14, a4);
    if (!v37)
    {
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v36, 0, 1, a4);
      v39 = v52;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 40))(v33, v36, v34);
      v35(v44, a2, v32);
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v43, v33, v34);
      sub_23FD74B70();
      return sub_23FD74B88();
    }
  }
  else
  {
    v40 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v40(v28, v24, a4);
    v41 = v49;
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v49, v50);
    v40((char *)v41, v28, a4);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v41, 0, 1, a4);
  }
  return result;
}

void sub_23FC9EFE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[16];
  __int128 v5;
  uint64_t v6;

  v2 = v1[2];
  v5 = *(_OWORD *)(*v1 + 80);
  v6 = a1;
  sub_23FD71354();
  sub_23FC9F224();
  v3 = sub_23FD74B70();
  sub_23FC9F3FC((void (*)(uint64_t))sub_23FC9F308, (uint64_t)v4, v2, v3, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t sub_23FC9F070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_23FD75038();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - v3;
  sub_23FD71354();
  sub_23FC9F224();
  sub_23FD74B70();
  sub_23FD74B34();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t PerURLSingletonLockBox.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PerURLSingletonLockBox.__deallocating_deinit()
{
  PerURLSingletonLockBox.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23FC9F174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static PerURLSingletonDatabase.sharedDatabase(url:)(a1, a2, a3, a4);
}

uint64_t static PerURLSingletonDatabase.sharedDatabase(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_23FC9EB20(a1, a4);
  return swift_release();
}

uint64_t static PerURLSingletonDatabase.deinitDatabase(url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_23FC9EFE0(a1);
  return swift_release();
}

unint64_t sub_23FC9F224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5FBB8[0];
  if (!qword_256F5FBB8[0])
  {
    v1 = sub_23FD71354();
    result = MEMORY[0x2426797E8](MEMORY[0x24BDCDAF0], v1);
    atomic_store(result, qword_256F5FBB8);
  }
  return result;
}

uint64_t dispatch thunk of PerURLSingletonable.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PerURLSingletonable.init(url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_23FC9F284()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PerURLSingletonLockBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC7493C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PerURLSingletonLockBox);
}

uint64_t method lookup function for PerURLSingletonLockBox()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PerURLSingletonLockBox.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of static PerURLSingletonDatabase.singletonLockbox.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static PerURLSingletonDatabase.sharedDatabase(url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_23FC9F308()
{
  return sub_23FC9F070();
}

uint64_t sub_23FC9F324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for os_unfair_lock_s(255);
  sub_23FD7514C();
  v4 = sub_23FD75140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t sub_23FC9F3A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2);
}

void sub_23FC9F3FC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_23FC9F464(a3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_23FC9F464(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t sub_23FC9F4E4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23FC9ED04(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_23FC9F500@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FC9F3A8(a1, a2);
}

void sub_23FC9F518(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, _QWORD);
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  char *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  _QWORD v131[2];
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v160 = a2;
  v159 = sub_23FCA0FA8();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFEFCC();
  v148 = v5;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v131 - v8;
  v10 = sub_23FD73670();
  sub_23FBFF0B8(v10, (uint64_t)&v166);
  v134 = v11;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v14);
  v15 = sub_23FD73694();
  sub_23FBFF0B8(v15, (uint64_t)&v168);
  v142 = v16;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFEFE0();
  v20 = sub_23FBFEFAC(v19);
  v145 = _s26PromptStatementStepBuilderV10ResolutionOMa(v20);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v23);
  v24 = sub_23FD7157C();
  sub_23FBFF0B8(v24, (uint64_t)&v169);
  v147 = v25;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v28);
  v29 = sub_23FD73364();
  sub_23FBFF0B8(v29, (uint64_t)&v167);
  v140 = v30;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v31, v32);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v33);
  v149 = sub_23FD72FEC();
  v151 = *(_QWORD *)(v149 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v34, v35);
  sub_23FBFEFE0();
  v150 = v36;
  sub_23FBFD684(&qword_256F5FD10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v37, v38);
  sub_23FBFEFCC();
  v162 = v39;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FBFF218();
  v152 = v42;
  sub_23FBFD684(&qword_256F5EB48);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v43, v44);
  v153 = (uint64_t)v131 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC10050();
  v46 = sub_23FD73604();
  v154 = *(_QWORD *)(v46 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_23FBFEFCC();
  v132 = v49;
  sub_23FBFF064();
  v52 = MEMORY[0x24BDAC7A8](v50, v51);
  v54 = (char *)v131 - v53;
  MEMORY[0x24BDAC7A8](v52, v55);
  sub_23FBFF218();
  v155 = v56;
  v57 = sub_23FC10050();
  v165 = _s9PlanEventVMa(v57);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v58, v59);
  sub_23FBFF180();
  v62 = v61 - v60;
  v164 = sub_23FD72BF0();
  v157 = *(_QWORD *)(v164 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v63, v64);
  sub_23FBFEFCC();
  v156 = v65;
  sub_23FBFF064();
  v68 = MEMORY[0x24BDAC7A8](v66, v67);
  v70 = (char *)v131 - v69;
  MEMORY[0x24BDAC7A8](v68, v71);
  v161 = (char *)v131 - v72;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v73, v74);
  v76 = (char *)v131 - v75;
  sub_23FD724DC();
  v158 = a1;
  sub_23FC0EDD8(a1, v62, _s9PlanEventVMa);
  v77 = sub_23FD72BE4();
  v78 = sub_23FD74F48();
  v79 = os_log_type_enabled(v77, v78);
  v163 = v46;
  v144 = v70;
  v133 = v54;
  if (v79)
  {
    v80 = sub_23FBFEFF4();
    v135 = v9;
    v81 = (uint8_t *)v80;
    v166 = sub_23FBFEFF4();
    *(_DWORD *)v81 = 136315138;
    v131[1] = v81 + 4;
    sub_23FD73F34();
    v82 = MEMORY[0x242678AA4]();
    v84 = v83;
    sub_23FC1002C();
    v85 = sub_23FC9DC40(v82, v84, &v166);
    sub_23FC103F0(v85);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FBFEF18(v62, _s9PlanEventVMa);
    sub_23FBFF114(&dword_23FBF8000, v77, v78, "Evaluating a plan for a dialog response, plan=%s", v81);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FBFEF18(v62, _s9PlanEventVMa);

  v86 = *(_QWORD *)(v157 + 8);
  sub_23FCA0F7C((uint64_t)v76);
  v87 = *(NSObject **)(sub_23FD73F34() + 16);
  swift_bridgeObjectRelease();
  v89 = (uint64_t)v161;
  v88 = v162;
  if (v87 != 1)
    goto LABEL_6;
  v87 = sub_23FD73F34();
  v90 = v153;
  sub_23FD4BE54((uint64_t)v87, v153);
  swift_bridgeObjectRelease();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v90, 1, v163) == 1)
  {
    sub_23FBFEF74(v90, &qword_256F5EB48);
LABEL_6:
    v91 = v156;
    sub_23FD724DC();
    sub_23FD72BE4();
    v92 = sub_23FCA0FA0();
    if (os_log_type_enabled(v87, v92))
    {
      v93 = (uint8_t *)sub_23FBFEFF4();
      *(_WORD *)v93 = 0;
      _os_log_impl(&dword_23FBF8000, v87, v92, "The plan does not contain a dialog response command - expecting a single statement, skipping", v93, 2u);
      sub_23FBFEFA0();
    }

    sub_23FCA0F7C(v91);
    sub_23FBFF0F8(v160, v94, v95, v159);
    goto LABEL_23;
  }
  v96 = v154;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 32))(v155, v90, v163);
  v97 = v150;
  sub_23FD735EC();
  v98 = v151;
  v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 88))(v97, v149);
  if (v99 == *MEMORY[0x24BE54CE8])
  {
    sub_23FCA0F34(*(uint64_t (**)(uint64_t, uint64_t))(v98 + 96));
    v100 = v140;
    v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 32);
    v165 = v86;
    v102 = v139;
    v103 = v141;
    sub_23FC092BC(v139, v97, v101);
    sub_23FCA0F84();
    MEMORY[0x242677100]();
    *v146 = sub_23FD73358();
    sub_23FCA0F5C();
    swift_storeEnumTagMultiPayload();
    sub_23FCA0EE8();
    v104 = v96;
    sub_23FC15A94(v105, _s26PromptStatementStepBuilderV10ResolutionOMa);
    sub_23FCA0ECC();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v102, v103);
  }
  else
  {
    if (v99 == *MEMORY[0x24BE54D30])
    {
      sub_23FCA0F34(*(uint64_t (**)(uint64_t, uint64_t))(v151 + 96));
      v106 = v136;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 32))(v136, v97, v143);
      sub_23FCA0F84();
      MEMORY[0x24267743C]();
      sub_23FCA0F5C();
      swift_storeEnumTagMultiPayload();
      sub_23FCA0EE8();
      v104 = v96;
      sub_23FC15A94(v107, _s26PromptStatementStepBuilderV10ResolutionOMa);
      sub_23FCA0ECC();
      v108 = *(void (**)(uint64_t, _QWORD))(v142 + 8);
      v109 = v106;
      v110 = &v168;
    }
    else
    {
      if (v99 != *MEMORY[0x24BE54D20])
      {
        sub_23FD724DC();
        v123 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
        v124 = v133;
        v123(v133, v155, v163);
        sub_23FD72BE4();
        v125 = sub_23FCA0FA0();
        if (os_log_type_enabled((os_log_t)v96, v125))
        {
          v126 = (uint8_t *)sub_23FBFEFF4();
          v166 = sub_23FBFEFF4();
          v127 = v163;
          v135 = v9;
          *(_DWORD *)v126 = 136315138;
          v165 = (uint64_t)(v126 + 4);
          v123(v132, (uint64_t)v124, v127);
          v128 = sub_23FD74C0C();
          v130 = sub_23FC9DC40(v128, v129, &v166);
          sub_23FC103F0(v130);
          sub_23FD75044();
          swift_bridgeObjectRelease();
          sub_23FC12F58(*(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
          sub_23FBFF114(&dword_23FBF8000, v96, v125, "%s is not a builtin command for a dialog response, skipping", v126);
          sub_23FBFF10C();
          sub_23FBFEFA0();
        }
        (*(void (**)(char *, uint64_t))(v96 + 8))(v124, v163);

        sub_23FCA0F7C(v89);
        v114 = v159;
        v104 = v152;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v152, 1, 1, v159);
        (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v150, v149);
        goto LABEL_17;
      }
      sub_23FCA0F34(*(uint64_t (**)(uint64_t, uint64_t))(v151 + 96));
      v111 = v134;
      v112 = v137;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v137, v97, v138);
      sub_23FCA0F84();
      MEMORY[0x242677418]();
      sub_23FCA0F5C();
      swift_storeEnumTagMultiPayload();
      sub_23FCA0EE8();
      v104 = v112;
      sub_23FC15A94(v113, _s26PromptStatementStepBuilderV10ResolutionOMa);
      sub_23FCA0ECC();
      v108 = *(void (**)(uint64_t, _QWORD))(v111 + 8);
      v109 = v137;
      v110 = &v166;
    }
    v108(v109, *(v110 - 32));
  }
  v114 = v159;
LABEL_17:
  sub_23FCA0E3C(v104, v88);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v88, 1, v114) == 1)
  {
    sub_23FCA0F6C();
    sub_23FBFEF74(v88, &qword_256F5FD10);
  }
  else
  {
    sub_23FC0F380(v88, (uint64_t)v9, _s23StatementStepEvaluationOMa);
    v115 = (uint64_t)v144;
    sub_23FD724DC();
    sub_23FC0EDD8((uint64_t)v9, v148, _s23StatementStepEvaluationOMa);
    sub_23FD72BE4();
    v116 = sub_23FCA0FA0();
    if (sub_23FC15918(v116))
    {
      v117 = (uint8_t *)sub_23FBFEFF4();
      v118 = sub_23FBFEFF4();
      sub_23FCA0FB0(v118);
      v119 = v148;
      *(_DWORD *)v117 = 136315138;
      v165 = (uint64_t)(v117 + 4);
      sub_23FCED848();
      v122 = sub_23FC1018C(v120, v121);
      sub_23FC103F0(v122);
      sub_23FD75044();
      sub_23FC1002C();
      sub_23FBFEF18(v119, _s23StatementStepEvaluationOMa);
      sub_23FBFF114(&dword_23FBF8000, _s23StatementStepEvaluationOMa, (os_log_type_t)v88, "Generated a user dialog response from a plan: %s", v117);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }

    sub_23FBFEF18(v148, _s23StatementStepEvaluationOMa);
    sub_23FCA0F7C(v115);
    sub_23FBFEF18((uint64_t)v9, _s23StatementStepEvaluationOMa);
    sub_23FCA0F6C();
    v104 = v152;
  }
  sub_23FCA0E84(v104, v160);
LABEL_23:
  sub_23FC060D4();
}

void sub_23FC9FFD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  char *v71;
  char *v72;
  void *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  char *v89;
  void *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v6 = v4;
  v124 = a3;
  v143 = a2;
  v140 = a4;
  _s9PlanEventVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFCC();
  v141 = v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFF218();
  sub_23FBFEFAC(v13);
  v14 = sub_23FD72BF0();
  v138 = *(_QWORD *)(v14 - 8);
  v139 = v14;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFEFCC();
  v131 = v17;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFF218();
  sub_23FBFEFAC(v20);
  v132 = sub_23FD71474();
  v123 = *(_QWORD *)(v132 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFEFE0();
  v127 = v23;
  v24 = sub_23FC10050();
  v121 = _s26PromptStatementStepBuilderVMa(v24);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v27);
  v28 = sub_23FD71C84();
  v136 = *(_QWORD *)(v28 - 8);
  v137 = v28;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FBFEFE0();
  v135 = v31;
  sub_23FC10050();
  v134 = sub_23FD73A0C();
  v129 = *(_QWORD *)(v134 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v32, v33);
  v133 = (char *)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23FCA0F14();
  v144 = *(_QWORD *)(v35 - 8);
  v145 = v35;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FBFEFCC();
  v130 = v38;
  sub_23FBFF064();
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v43 = (char *)&v119 - v42;
  v45 = MEMORY[0x24BDAC7A8](v41, v44);
  v47 = (char *)&v119 - v46;
  MEMORY[0x24BDAC7A8](v45, v48);
  v50 = (char *)&v119 - v49;
  sub_23FBFD684(&qword_256F5FD00);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FBFF180();
  v55 = v54 - v53;
  v128 = _s19SystemResponseEventVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v56, v57);
  sub_23FC061C0();
  sub_23FBFD684(&qword_256F5FD08);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v58, v59);
  sub_23FBFF180();
  v62 = v61 - v60;
  v63 = _s20StatementResultEventVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v64, v65);
  sub_23FBFEFE0();
  v142 = v66;
  v67 = (_QWORD *)(v6 + 24);
  v68 = *(_QWORD *)(v6 + 48);
  v69 = v143;
  v70 = sub_23FBFDE40(v67, v68);
  sub_23FCA4BE8(a1, *v70, v62);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v62, 1, v63) == 1)
  {
    sub_23FBFEF74(v62, &qword_256F5FD08);
    v71 = v131;
    sub_23FD724DC();
    v72 = v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v130, a1, v145);
    sub_23FC0EDD8(v69, v141, _s9PlanEventVMa);
    v73 = (void *)sub_23FD72BE4();
    v74 = sub_23FD74F54();
    if (sub_23FC15918(v74))
    {
      v75 = sub_23FBFEFF4();
      v76 = sub_23FBFEFF4();
      sub_23FCA0FB0(v76);
      *(_DWORD *)v75 = 136315394;
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v77 = sub_23FCA0F20();
      v146 = sub_23FC1018C(v77, v78);
      sub_23FCA0F54();
      sub_23FC1002C();
      (*(void (**)(char *, char *))(v144 + 8))(v72, v47);
      *(_WORD *)(v75 + 12) = 2080;
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v79 = v141;
      v80 = sub_23FCA0F94();
      v146 = sub_23FC1018C(v80, v81);
      sub_23FCA0F54();
      sub_23FC1002C();
      sub_23FBFEF18(v79, _s9PlanEventVMa);
      sub_23FCA0F40(&dword_23FBF8000, v82, v83, "Cannot retrieve statement result with id %s referenced in a plan with eventId=%s, skipping");
      sub_23FCA0F04();
      sub_23FBFEFA0();
    }
    (*(void (**)(char *, uint64_t))(v144 + 8))(v72, v145);
    sub_23FBFEF18(v141, _s9PlanEventVMa);

    (*(void (**)(char *, uint64_t))(v138 + 8))(v71, v139);
    v104 = v140;
    v107 = sub_23FCA0FA8();
    v108 = v104;
LABEL_10:
    sub_23FBFF0F8(v108, v105, v106, v107);
    goto LABEL_11;
  }
  v120 = v5;
  v130 = v47;
  v131 = v43;
  v141 = a1;
  sub_23FC0F380(v62, v142, _s20StatementResultEventVMa);
  sub_23FD734D8();
  v84 = v133;
  sub_23FD73508();
  v85 = v135;
  sub_23FD739F4();
  v86 = *(void (**)(char *, uint64_t))(v129 + 8);
  v86(v84, v134);
  sub_23FCA083C((uint64_t)v50, v85, v55);
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v85, v137);
  v87 = *(void (**)(char *, uint64_t))(v144 + 8);
  v87(v50, v145);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v55, 1, v128) == 1)
  {
    sub_23FBFEF74(v55, &qword_256F5FD00);
    v88 = v126;
    sub_23FD724DC();
    v89 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v131, v141, v145);
    sub_23FC0EDD8(v143, v125, _s9PlanEventVMa);
    v90 = (void *)sub_23FD72BE4();
    v91 = sub_23FD74F54();
    v92 = sub_23FC15918(v91);
    v94 = v138;
    v93 = v139;
    if (v92)
    {
      v95 = sub_23FBFEFF4();
      v96 = sub_23FBFEFF4();
      sub_23FCA0FB0(v96);
      *(_DWORD *)v95 = 136315394;
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v97 = sub_23FCA0F20();
      v146 = sub_23FC1018C(v97, v98);
      sub_23FD75044();
      sub_23FC1002C();
      v87(v89, (uint64_t)v47);
      *(_WORD *)(v95 + 12) = 2080;
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v99 = v125;
      v100 = sub_23FCA0F94();
      v146 = sub_23FC1018C(v100, v101);
      sub_23FCA0F54();
      sub_23FC1002C();
      sub_23FBFEF18(v99, _s9PlanEventVMa);
      sub_23FCA0F40(&dword_23FBF8000, v102, v103, "Cannot retrieve system response for a statement result with id %s referenced in a plan with eventId=%s, skipping");
      sub_23FCA0F04();
      sub_23FBFEFA0();
    }

    sub_23FC15A94(v118, _s9PlanEventVMa);
    v87(v89, v145);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v88, v93);
    sub_23FBFEF18(v142, _s20StatementResultEventVMa);
    v107 = sub_23FCA0FA8();
    v108 = v140;
    goto LABEL_10;
  }
  v109 = v120;
  sub_23FC0F380(v55, v120, _s19SystemResponseEventVMa);
  sub_23FD734CC();
  v110 = v130;
  sub_23FD734D8();
  v111 = v123;
  sub_23FC092BC(v127, v109, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 16));
  v112 = v133;
  sub_23FD73508();
  v113 = v135;
  sub_23FD739F4();
  v86(v112, v134);
  v114 = (int *)v121;
  v115 = v122;
  sub_23FC0EDD8(v124, v122 + *(int *)(v121 + 32), _s26PromptStatementStepBuilderV10ResolutionOMa);
  v116 = v145;
  v117 = *(void (**)(uint64_t, char *, uint64_t))(v144 + 32);
  v117(v115, v50, v145);
  v117(v115 + v114[5], v110, v116);
  sub_23FC092BC(v115 + v114[6], v127, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32))(v115 + v114[7], v113, v137);
  sub_23FCA6E54(v140);
  sub_23FBFEF18(v115, _s26PromptStatementStepBuilderVMa);
  sub_23FBFEF18(v109, _s19SystemResponseEventVMa);
  sub_23FBFEF18(v142, _s20StatementResultEventVMa);
LABEL_11:
  sub_23FC060D4();
}

void sub_23FCA083C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[16];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v8 = sub_23FD71C84();
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  sub_23FC05FF4();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  sub_23FBFF218();
  v48 = v15;
  v47 = sub_23FCA0F14();
  v16 = *(_QWORD *)(v47 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC061C0();
  v19 = sub_23FD72BF0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  sub_23FBFEFE0();
  v51 = v22;
  v23 = *(_QWORD *)(v3 + 16);
  v53 = a1;
  v54 = a2;
  swift_bridgeObjectRetain();
  sub_23FD31434((uint64_t (*)(char *))sub_23FCA0E20, (uint64_t)v52, v23);
  if (*(_QWORD *)(v24 + 16) <= 1uLL)
  {
    sub_23FD4BDE0(v24, a3);
    sub_23FC1002C();
  }
  else
  {
    v44 = v13;
    v45 = a3;
    v46 = v19;
    sub_23FC1002C();
    sub_23FD724DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v4, a1, v47);
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
    v25(v48, a2, v50);
    v26 = sub_23FD72BE4();
    v27 = sub_23FD74F54();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = sub_23FBFEFF4();
      v42 = v26;
      v43 = v28;
      v30 = v29;
      v31 = sub_23FBFEFF4();
      sub_23FCA0FB0(v31);
      *(_DWORD *)v30 = 136315394;
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v32 = sub_23FD75344();
      v55 = sub_23FC1018C(v32, v33);
      sub_23FCA0F54();
      sub_23FC1002C();
      sub_23FC12F58(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
      *(_WORD *)(v30 + 12) = 2080;
      v34 = v48;
      v35 = v50;
      v25((uint64_t)v44, v48, v50);
      v36 = sub_23FD74C0C();
      v55 = sub_23FC9DC40(v36, v37, &v56);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v34, v35);
      _os_log_impl(&dword_23FBF8000, v42, (os_log_type_t)v43, "Multiple system responses found for %s matching %s, discarding results", (uint8_t *)v30, 0x16u);
      sub_23FCA0F04();
      sub_23FBFEFA0();
    }
    sub_23FC12F58(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v51, v46);
    v38 = v45;
    v39 = _s19SystemResponseEventVMa(0);
    sub_23FBFF0F8(v38, v40, v41, v39);
  }
  sub_23FC060D4();
}

uint64_t sub_23FCA0B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  _QWORD v30[2];
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a2;
  v40 = a3;
  v41 = sub_23FD71C84();
  v4 = *(_QWORD *)(v41 - 8);
  v6 = MEMORY[0x24BDAC7A8](v41, v5);
  v32 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v30 - v9;
  v11 = sub_23FD72044();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v38 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FD7157C();
  v36 = *(_QWORD *)(v15 - 8);
  v37 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v35 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19SystemResponseEventVMa(0);
  v18 = sub_23FD71BAC();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v30[0] = v18;
    v30[1] = v3;
    v20 = v18 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v34 = *(_QWORD *)(v12 + 72);
    v31 = v11;
    do
    {
      v21 = v35;
      sub_23FD72020();
      v22 = sub_23FD71558();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v37);
      v23 = v38;
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v38, v20, v11);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v40, v41);
      if ((v22 & 1) != 0)
      {
        v24 = v10;
        v25 = v32;
        sub_23FD72038();
        v33 = sub_23FD71C78();
        v26 = v41;
        v27 = *(void (**)(char *, uint64_t))(v4 + 8);
        v28 = v25;
        v10 = v24;
        v11 = v31;
        v27(v28, v41);
        v27(v10, v26);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
        if ((v33 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v41);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
      }
      v20 += v34;
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23FCA0DD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t _s22PlannerPromptEvaluatorCMa()
{
  return objc_opt_self();
}

uint64_t sub_23FCA0E20(uint64_t a1)
{
  uint64_t v1;

  return sub_23FCA0B58(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_23FCA0E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5FD10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCA0E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5FD10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCA0ECC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 272) + 8))(v0, *(_QWORD *)(v1 - 264));
}

void sub_23FCA0EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC9FFD0(v1, v0, v2, *(_QWORD *)(v3 - 216));
}

uint64_t sub_23FCA0F04()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FCA0F14()
{
  return sub_23FD7157C();
}

uint64_t sub_23FCA0F20()
{
  return sub_23FD75344();
}

uint64_t sub_23FCA0F34@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23FCA0F40(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_23FCA0F54()
{
  return sub_23FD75044();
}

uint64_t sub_23FCA0F5C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCA0F6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 200) + 8))(*(_QWORD *)(v0 - 192), *(_QWORD *)(v0 - 128));
}

uint64_t sub_23FCA0F7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FCA0F94()
{
  return sub_23FD75344();
}

uint64_t sub_23FCA0FA0()
{
  return sub_23FD74F48();
}

uint64_t sub_23FCA0FA8()
{
  return _s23StatementStepEvaluationOMa(0);
}

uint64_t sub_23FCA0FB0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t sub_23FCA0FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v3 + 16) && (sub_23FC84C70(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = _s23StatementStepEvaluationOMa(0);
    sub_23FCA108C(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a1);
    v9 = a1;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = _s23StatementStepEvaluationOMa(0);
    v9 = a1;
    v10 = 1;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, v10, 1, v11);
}

uint64_t sub_23FCA1048()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s30PlannerPromptResponseRetrieverCMa()
{
  return objc_opt_self();
}

uint64_t sub_23FCA108C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s23StatementStepEvaluationOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCA10D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FCA3274();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FBFD8B8;
  v2 = sub_23FCA3200();
  return sub_23FCA3138(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_23FCA1128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  v9[19] = a8;
  v9[20] = v8;
  v9[17] = a6;
  v9[18] = a7;
  v9[15] = a4;
  v9[16] = a5;
  v9[13] = a2;
  v9[14] = a3;
  v9[12] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[21] = AssociatedTypeWitness;
  v9[22] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[23] = sub_23FC0901C();
  v11 = sub_23FD74120();
  v9[24] = v11;
  v9[25] = *(_QWORD *)(v11 - 8);
  v9[26] = sub_23FC0901C();
  return swift_task_switch();
}

uint64_t sub_23FCA11C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 144);
  sub_23FCA3338();
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v5, v4);
  sub_23FCA3338();
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 56);
  *(_QWORD *)(v0 + 80) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 88) = swift_getAssociatedConformanceWitness();
  sub_23FBFDDEC((uint64_t *)(v0 + 56));
  v6(v5, v4);
  sub_23FCA3338();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7(v12, v14, v1, v10, v0 + 16, v0 + 56, v2, v3, AssociatedConformanceWitness, v13, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v3);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v17);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 56);
  sub_23FC5A574();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCA138C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = v3 - 1;
    v6 = sub_23FBFD684(&qword_256F5E4A8);
    sub_23FC0F3AC(a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, a2, &qword_256F5E4A8);
    v7 = a2;
    v8 = 0;
    v9 = v6;
  }
  else
  {
    v9 = sub_23FBFD684(&qword_256F5E4A8);
    v7 = a2;
    v8 = 1;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v7, v8, 1, v9);
}

uint64_t sub_23FCA1434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FCA144C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE557B8], a2);
}

uint64_t sub_23FCA1440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FCA144C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0], a2);
}

uint64_t sub_23FCA144C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = v4 - 1;
    v7 = a2(0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6, v7);
    v8 = a3;
    v9 = 0;
    v10 = v7;
  }
  else
  {
    v10 = a2(0);
    v8 = a3;
    v9 = 1;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v8, v9, 1, v10);
}

void sub_23FCA14E4(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  if (a3 >> 1 == a2)
  {
    v5 = sub_23FD740CC();
    v6 = a4;
    v7 = 1;
LABEL_5:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v6, v7, 1, v5);
    return;
  }
  if ((uint64_t)(a3 >> 1) > a2)
  {
    v9 = (a3 >> 1) - 1;
    v10 = sub_23FD740CC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a4, a1 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v9, v10);
    v6 = a4;
    v7 = 0;
    v5 = v10;
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_23FCA1578()
{
  return sub_23FCA1598();
}

uint64_t sub_23FCA159C(uint64_t a1)
{
  return sub_23FCA15C0(a1) & 1;
}

uint64_t sub_23FCA15C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = sub_23FBFD684(&qword_256F5F298);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v16 - v8;
  if (!*(_QWORD *)(a1 + 16))
  {
    v14 = sub_23FD7409C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 1, 1, v14);
    goto LABEL_17;
  }
  sub_23FD740CC();
  sub_23FD740A8();
  v10 = sub_23FD7409C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v10);
  sub_23FC0F3AC((uint64_t)v9, (uint64_t)v6, &qword_256F5F298);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v6, v10);
  if (v12 != *MEMORY[0x24BE56AE0]
    && v12 != *MEMORY[0x24BE56C88]
    && v12 != *MEMORY[0x24BE56AD0]
    && v12 != *MEMORY[0x24BE56C70]
    && v12 != *MEMORY[0x24BE56AC8]
    && v12 != *MEMORY[0x24BE56AF0]
    && v12 != *MEMORY[0x24BE56BC0]
    && v12 != *MEMORY[0x24BE56B20]
    && v12 != *MEMORY[0x24BE56B48]
    && v12 != *MEMORY[0x24BE56C58]
    && v12 != *MEMORY[0x24BE56B98]
    && v12 != *MEMORY[0x24BE56BC8])
  {
    if (v12 == *MEMORY[0x24BE56B70])
      goto LABEL_15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
LABEL_17:
    v13 = 0;
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
LABEL_15:
  v13 = 1;
LABEL_18:
  sub_23FBFEF74((uint64_t)v9, &qword_256F5F298);
  return v13;
}

uint64_t sub_23FCA1820(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_23FCA3394(a1, a2, a3, a4);
  v5 = (_QWORD *)sub_23FC09058();
  *(_QWORD *)(v4 + 16) = v5;
  v6 = sub_23FCA31DC(v5, (uint64_t)sub_23FBFD8B8);
  return sub_23FCA31C8(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_23FCA1864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *);
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)&v7 = 0;
  *((_QWORD *)&v7 + 1) = v3;
  v8 = a1;
  v9 = sub_23FCA21D4;
  v10 = 0;
  swift_bridgeObjectRetain();
  sub_23FCA1D08(&v7);
  v5 = v4;
  sub_23FC15A24();
  sub_23FCA138C(v5, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCA18DC(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(void);
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(void);
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  _QWORD v61[2];
  char *v62;
  _QWORD *v63;
  void (*v64)(char *, char *, uint64_t);
  void (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  _QWORD *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t (*v76)(_QWORD *);
  uint64_t v77;

  v72 = a1;
  v3 = sub_23FD71474();
  v73 = *(_QWORD **)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v71 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v70 = (char *)v61 - v8;
  v9 = sub_23FBFD684(&qword_256F5E460);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (_QWORD *)((char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (_QWORD *)((char *)v61 - v15);
  v17 = sub_23FBFD684(&qword_256F5E4A8);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (_QWORD *)((char *)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (_QWORD *)((char *)v61 - v24);
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v29 = (_QWORD *)((char *)v61 - v28);
  MEMORY[0x24BDAC7A8](v27, v30);
  v32 = (_QWORD *)((char *)v61 - v31);
  sub_23FC0F3AC(a2, (uint64_t)v16, &qword_256F5E460);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, 1, v17) == 1)
  {
    v33 = (uint64_t)v16;
  }
  else
  {
    v34 = (char *)v32 + *(int *)(v17 + 48);
    v35 = *(int *)(v17 + 64);
    v36 = (char *)v32 + v35;
    v37 = (char *)v16 + v35;
    v66 = *v16;
    *v32 = v66;
    v38 = (void (*)(void))v73[4];
    v68 = v34;
    v65 = v38;
    v38();
    v39 = sub_23FD740CC();
    v67 = *(_QWORD *)(v39 - 8);
    v40 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
    v69 = v36;
    v64 = v40;
    v40(v36, v37, v39);
    v41 = sub_23FD73DE4();
    v42 = *(_QWORD *)(v41 + 16);
    *(_QWORD *)&v74 = 0;
    *((_QWORD *)&v74 + 1) = v42;
    v75 = v41;
    v76 = sub_23FCA21D4;
    v77 = 0;
    sub_23FCA1D08(&v74);
    sub_23FCA138C(v43, (uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v13, 1, v17) != 1)
    {
      v45 = *(int *)(v17 + 48);
      v46 = *(int *)(v17 + 64);
      v47 = (char *)v29 + v46;
      v62 = (char *)v29 + v46;
      v63 = v29;
      v48 = (char *)v13 + v46;
      v61[0] = *v13;
      v61[1] = (char *)v29 + v45;
      *v29 = v61[0];
      v65();
      v64(v47, v48, v39);
      v72 = (char *)v25 + *(int *)(v17 + 48);
      v49 = (char *)v25 + *(int *)(v17 + 64);
      *v25 = v66;
      v50 = (void (*)(void))v73[2];
      v50();
      v51 = v67;
      v52 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v52(v49, v69, v39);
      v53 = v70;
      sub_23FD74048();
      v54 = *(void (**)(char *, uint64_t))(v51 + 8);
      v54(v49, v39);
      v55 = (char *)v21 + *(int *)(v17 + 48);
      v56 = (char *)v21 + *(int *)(v17 + 64);
      *v21 = v61[0];
      v57 = v55;
      v50();
      v52(v56, v62, v39);
      v58 = v71;
      sub_23FD74048();
      v54(v56, v39);
      v44 = sub_23FD71450();
      v59 = (void (*)(char *, uint64_t))v73[1];
      v59(v58, v3);
      v59(v53, v3);
      sub_23FBFEF74((uint64_t)v63, &qword_256F5E4A8);
      sub_23FBFEF74((uint64_t)v32, &qword_256F5E4A8);
      v59(v57, v3);
      v59(v72, v3);
      return v44 & 1;
    }
    sub_23FBFEF74((uint64_t)v32, &qword_256F5E4A8);
    v33 = (uint64_t)v13;
  }
  sub_23FBFEF74(v33, &qword_256F5E460);
  v44 = 0;
  return v44 & 1;
}

void sub_23FCA1D08(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t (*v50)(uint64_t);
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;

  v2 = sub_23FBFD684(&qword_256F5E4A8);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v49 = (char **)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_23FBFD684(&qword_256F5D958);
  MEMORY[0x24BDAC7A8](v53, v5);
  v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &qword_256F5EDE0;
  v57 = sub_23FBFD684(&qword_256F5EDE0);
  v9 = MEMORY[0x24BDAC7A8](v57, v8);
  v51 = (char **)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v44 - v13;
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v46 = (uint64_t)&v44 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v45 = (uint64_t *)((char *)&v44 - v19);
  v63 = MEMORY[0x24BEE4AF8];
  sub_23FC9B918();
  v61 = *a1;
  v20 = *((_QWORD *)a1 + 2);
  v50 = (uint64_t (*)(uint64_t))*((_QWORD *)a1 + 3);
  v62 = v20;
  v22 = *((_QWORD *)&v61 + 1);
  v21 = v61;
  v23 = *((_QWORD *)a1 + 4);
  v60 = 0;
  sub_23FCA29A8((uint64_t)&v61);
  v58 = v23;
  swift_retain();
  v24 = 0;
  v59 = v21;
  v55 = v21;
  v56 = v20;
  v54 = v22;
LABEL_2:
  v25 = v59;
  while (1)
  {
    if (v22 == v25)
      goto LABEL_17;
    if (v22 < v21)
      break;
    if (v59 < v21)
      goto LABEL_19;
    if (v25 >= v22)
      goto LABEL_20;
    v26 = *(_QWORD *)(v20 + 16);
    if (v24 == v26)
      goto LABEL_17;
    if (v24 >= v26)
      goto LABEL_21;
    v27 = sub_23FD740CC();
    v28 = v7;
    v29 = *(_QWORD *)(v27 - 8);
    v30 = v20
        + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
        + *(_QWORD *)(v29 + 72) * v24;
    v31 = &v52[*(int *)(v53 + 48)];
    v32 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
    v32(v31, v30, v27);
    v33 = (uint64_t)v14;
    v34 = v51;
    v35 = (char *)v51 + *(int *)(v57 + 48);
    *v51 = v25;
    v36 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v7 = v28;
    v36(v35, v31, v27);
    v37 = (uint64_t)v34;
    v14 = (char *)v33;
    sub_23FC0EE04(v37, v33, v28);
    if ((v50(v33) & 1) != 0)
    {
      v38 = v46;
      sub_23FC0EE04(v33, v46, v28);
      v39 = v45;
      sub_23FC0EE04(v38, (uint64_t)v45, v28);
      v40 = (char *)v39 + *(int *)(v57 + 48);
      v41 = v49;
      v44 = (char *)v49 + *(int *)(v48 + 64);
      v59 = *v39;
      sub_23FD74048();
      v32(v44, (unint64_t)v40, v27);
      *v41 = v59;
      v7 = v28;
      sub_23FBFEF74((uint64_t)v39, v28);
      v42 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B918();
        v42 = v63;
      }
      v43 = *(_QWORD *)(v42 + 16);
      v22 = v54;
      if (v43 >= *(_QWORD *)(v42 + 24) >> 1)
      {
        sub_23FC9B918();
        v42 = v63;
      }
      ++v24;
      v59 = v25 + 1;
      *(_QWORD *)(v42 + 16) = v43 + 1;
      sub_23FC0EE04((uint64_t)v49, v42+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v43, &qword_256F5E4A8);
      v21 = v55;
      v20 = v56;
      if ((v60 & 1) != 0)
      {
LABEL_17:
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_2;
    }
    sub_23FBFEF74(v33, v28);
    ++v24;
    ++v25;
    v21 = v55;
    v20 = v56;
    v22 = v54;
    if ((v60 & 1) != 0)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_23FCA2124()
{
  return 0;
}

uint64_t sub_23FCA2130(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_23FCA2138(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_23FCA3394(a1, a2, a3, a4);
  v5 = (_QWORD *)sub_23FC09058();
  *(_QWORD *)(v4 + 16) = v5;
  v6 = sub_23FCA31DC(v5, (uint64_t)sub_23FBFEF9C);
  return sub_23FCA31C8(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_23FCA217C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FCA3274();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FBFEF9C;
  v2 = sub_23FCA3200();
  return sub_23FCA3138(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_23FCA21D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v2 = sub_23FD74090();
  v28 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v27 - v8;
  v27 = sub_23FD7409C();
  v10 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FBFD684(&qword_256F5EDE0);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (uint64_t *)((char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(int *)(v16 + 48);
  v20 = (char *)v18 + v19;
  v21 = (char *)a1 + v19;
  *v18 = *a1;
  v22 = sub_23FD740CC();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  sub_23FD740A8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
  sub_23FD7406C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v27);
  v24 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v6, *MEMORY[0x24BE56BE0], v2);
  LOBYTE(a1) = sub_23FD74084();
  v25 = *(void (**)(char *, uint64_t))(v24 + 8);
  v25(v6, v2);
  v25(v9, v2);
  return a1 & 1;
}

uint64_t sub_23FCA23A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[17] = a3;
  v5[18] = a5;
  v5[15] = a1;
  v5[16] = a2;
  v7 = sub_23FD7409C();
  v5[19] = v7;
  v5[20] = *(_QWORD *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v8 = sub_23FD734C0();
  v5[22] = v8;
  v5[23] = *(_QWORD *)(v8 - 8);
  v5[24] = swift_task_alloc();
  v9 = sub_23FD72BF0();
  v5[25] = v9;
  v5[26] = *(_QWORD *)(v9 - 8);
  v5[27] = swift_task_alloc();
  v10 = *(_QWORD *)(sub_23FBFD684(&qword_256F5E460) - 8);
  v5[28] = v10;
  v5[29] = *(_QWORD *)(v10 + 64);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  v5[32] = swift_task_alloc();
  v11 = sub_23FD73E08();
  v5[33] = v11;
  v5[34] = *(_QWORD *)(v11 - 8);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v12 = sub_23FD740CC();
  v5[37] = v12;
  v5[38] = *(_QWORD *)(v12 - 8);
  v5[39] = swift_task_alloc();
  v5[10] = type metadata accessor for SessionCoordinatorResponseCallback(0);
  v5[11] = &off_2510101F0;
  v5[7] = a4;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23FCA2538()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v9;
  uint64_t v10;

  sub_23FCA32C0();
  sub_23FD73DE4();
  result = sub_23FCA32FC();
  if (v3 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = v2[16];
  v6 = v2[17];
  v7 = *(_QWORD *)(v0 + 16);
  if (v7 < v5 || (uint64_t)v7 < v6)
    goto LABEL_10;
  if (v6 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_23FCA30E0(v5, v6);
  sub_23FC1002C();
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
  if ((_DWORD)result != 1)
  {
    sub_23FCA317C();
    sub_23FD73D6C();
    sub_23FD73DE4();
    sub_23FCA3458();
    sub_23FCA353C();
    sub_23FCA3524((uint64_t)sub_23FCA21D4);
    sub_23FCA3498();
    sub_23FC1002C();
    sub_23FCA3518();
    sub_23FC15A24();
    sub_23FC1002C();
    v9 = (_QWORD *)swift_task_alloc();
    v2[40] = v9;
    v10 = sub_23FCA3430(v9, (uint64_t)sub_23FCA262C);
    return sub_23FC76C14(v10);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23FCA262C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCA3114();
  if (!v1)
    *(_QWORD *)(v2 + 336) = v0;
  return sub_23FC5A19C();
}

uint64_t sub_23FCA2674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_23FCA3294();
  sub_23FCA34B8();
  sub_23FCA34D8();
  v1 = swift_allocObject();
  sub_23FCA336C(v1);
  sub_23FCA33F0(v2, (uint64_t)sub_23FCA29A4);
  swift_release();
  sub_23FC103E8();
  v3 = sub_23FCA3150();
  sub_23FBFEF74(v3, &qword_256F5E460);
  sub_23FCA3478();
  sub_23FCA3358(v5);
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  swift_task_dealloc();
  sub_23FC5A574();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCA272C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  __n128 *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23FCA32D4();
  sub_23FBFD684(&qword_254346E20);
  sub_23FCA3500();
  sub_23FCA34C8();
  sub_23FCA33C0();
  v5 = (void *)sub_23FD72BE4();
  v6 = sub_23FD74F54();
  if (sub_23FCA34F0(v6))
  {
    sub_23FCA3240();
    sub_23FCA3468();
    v7 = sub_23FCA325C(4.8149e-34);
    v15 = sub_23FCA3488(v7, v8, v9, v10, v11, v12, v13, v14, v34, v35);
    sub_23FCA3224(v15);
    sub_23FCA350C();
    sub_23FCA3310(&dword_23FBF8000, v16, v17, "Planner failed to process new Transcript: %s");
    sub_23FCA3448();
    sub_23FBFEFA0();
  }
  sub_23FCA32E8();

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v4);
  v39 = *(id *)(v2 + 328);
  v18 = *(_QWORD **)(v2 + 192);
  v19 = *(_QWORD *)(v2 + 168);
  v40 = *(_QWORD *)(v2 + 160);
  v41 = *(_QWORD *)(v2 + 152);
  v37 = (*(unsigned __int8 *)(v2 + 344) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 344);
  v38 = *(_QWORD *)(v2 + 304);
  v20 = (_QWORD *)(*(_QWORD *)(v2 + 144) + OBJC_IVAR____TtC23IntelligenceFlowRuntime12DummyPlanner_instrumentationSender);
  v36 = v20[4];
  v21 = sub_23FBFDE40(v20, v20[3]);
  *v18 = v3;
  v18[1] = v42;
  sub_23FCA34A8((uint64_t)v21, *MEMORY[0x24BE55568]);
  sub_23FD7415C();
  sub_23FBFF1C4();
  sub_23FCA33D0();
  sub_23FCA3380();
  swift_release();
  sub_23FBFDE40((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  sub_23FBFD684(&qword_256F5EDD0);
  v22 = (__n128 *)sub_23FCA3344();
  sub_23FCA3324(v22, v23, v24, v25, v26, v27, v28, v29, (__n128)xmmword_23FD769D0, v34, v36, v37, v38, v39);
  sub_23FCA3530();
  v30 = sub_23FD72FD4();
  sub_23FCA30C8(v30);
  v31 = sub_23FD7313C();
  sub_23FCA30C8(v31);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v19, *MEMORY[0x24BE56B00], v41);
  sub_23FCA3410();
  v32 = sub_23FCA3420();
  sub_23FCA33E0(v32, (uint64_t)sub_23FBFF828);
  sub_23FC103E8();

  sub_23FCA31A0();
  sub_23FBFEF74(v40, &qword_256F5E460);
  sub_23FCA3400();
  sub_23FCA3358(v2 + 56);
  sub_23FC5A574();
  swift_task_dealloc();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23FC75334(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23FCA29A8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FCA29D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[17] = a3;
  v5[18] = a5;
  v5[15] = a1;
  v5[16] = a2;
  v7 = sub_23FD7409C();
  v5[19] = v7;
  v5[20] = *(_QWORD *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v8 = sub_23FD734C0();
  v5[22] = v8;
  v5[23] = *(_QWORD *)(v8 - 8);
  v5[24] = swift_task_alloc();
  v9 = sub_23FD72BF0();
  v5[25] = v9;
  v5[26] = *(_QWORD *)(v9 - 8);
  v5[27] = swift_task_alloc();
  v10 = *(_QWORD *)(sub_23FBFD684(&qword_256F5E460) - 8);
  v5[28] = v10;
  v5[29] = *(_QWORD *)(v10 + 64);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  v5[32] = swift_task_alloc();
  v11 = sub_23FD73E08();
  v5[33] = v11;
  v5[34] = *(_QWORD *)(v11 - 8);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v12 = sub_23FD740CC();
  v5[37] = v12;
  v5[38] = *(_QWORD *)(v12 - 8);
  v5[39] = swift_task_alloc();
  v5[10] = type metadata accessor for SessionCoordinatorResponseCallback(0);
  v5[11] = &off_2510101F0;
  v5[7] = a4;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23FCA2B68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v9;
  uint64_t v10;

  sub_23FCA32C0();
  sub_23FD73DE4();
  result = sub_23FCA32FC();
  if (v3 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = v2[16];
  v6 = v2[17];
  v7 = *(_QWORD *)(v0 + 16);
  if (v7 < v5 || (uint64_t)v7 < v6)
    goto LABEL_10;
  if (v6 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_23FCA30E0(v5, v6);
  sub_23FC1002C();
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
  if ((_DWORD)result != 1)
  {
    sub_23FCA317C();
    sub_23FD73D6C();
    sub_23FD73DE4();
    sub_23FCA3458();
    sub_23FCA353C();
    sub_23FCA3524((uint64_t)sub_23FCA21D4);
    sub_23FCA3498();
    sub_23FC1002C();
    sub_23FCA3518();
    sub_23FC15A24();
    sub_23FC1002C();
    v9 = (_QWORD *)swift_task_alloc();
    v2[40] = v9;
    v10 = sub_23FCA3430(v9, (uint64_t)sub_23FCA2C5C);
    return sub_23FCD5B94(v10);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23FCA2C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCA3114();
  if (!v1)
    *(_QWORD *)(v2 + 336) = v0;
  return sub_23FC5A19C();
}

uint64_t sub_23FCA2CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_23FCA3294();
  sub_23FCA34B8();
  sub_23FCA34D8();
  v1 = swift_allocObject();
  sub_23FCA336C(v1);
  sub_23FCA33F0(v2, (uint64_t)sub_23FCA29A4);
  swift_release();
  sub_23FC103E8();
  v3 = sub_23FCA3150();
  sub_23FBFEF74(v3, &qword_256F5E460);
  sub_23FCA3478();
  sub_23FCA3358(v5);
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  swift_task_dealloc();
  sub_23FC5A574();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCA2D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  __n128 *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23FCA32D4();
  sub_23FBFD684(&qword_254346E20);
  sub_23FCA3500();
  sub_23FCA34C8();
  sub_23FCA33C0();
  v5 = (void *)sub_23FD72BE4();
  v6 = sub_23FD74F54();
  if (sub_23FCA34F0(v6))
  {
    sub_23FCA3240();
    sub_23FCA3468();
    v7 = sub_23FCA325C(4.8149e-34);
    v15 = sub_23FCA3488(v7, v8, v9, v10, v11, v12, v13, v14, v34, v35);
    sub_23FCA3224(v15);
    sub_23FCA350C();
    sub_23FCA3310(&dword_23FBF8000, v16, v17, "Planner failed to process new Transcript: %s");
    sub_23FCA3448();
    sub_23FBFEFA0();
  }
  sub_23FCA32E8();

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v4);
  v38 = *(_QWORD *)(v2 + 304);
  v39 = *(void **)(v2 + 328);
  v18 = *(_QWORD **)(v2 + 192);
  v19 = *(_QWORD *)(v2 + 168);
  v40 = *(_QWORD *)(v2 + 160);
  v41 = *(_QWORD *)(v2 + 152);
  v20 = *(_QWORD **)(v2 + 144);
  v36 = v20[21];
  v37 = (*(unsigned __int8 *)(v2 + 344) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 344);
  v21 = sub_23FBFDE40(v20 + 17, v20[20]);
  *v18 = v3;
  v18[1] = v42;
  sub_23FCA34A8((uint64_t)v21, *MEMORY[0x24BE55568]);
  sub_23FD7415C();
  sub_23FBFF1C4();
  sub_23FCA33D0();
  sub_23FCA3380();
  swift_release();
  sub_23FBFDE40((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  sub_23FBFD684(&qword_256F5EDD0);
  v22 = (__n128 *)sub_23FCA3344();
  sub_23FCA3324(v22, v23, v24, v25, v26, v27, v28, v29, (__n128)xmmword_23FD769D0, v34, v36, v37, v38, v39);
  sub_23FCA3530();
  v30 = sub_23FD72FD4();
  sub_23FCA30C8(v30);
  v31 = sub_23FD7313C();
  sub_23FCA30C8(v31);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v19, *MEMORY[0x24BE56B00], v41);
  sub_23FCA3410();
  v32 = sub_23FCA3420();
  sub_23FCA33E0(v32, (uint64_t)sub_23FBFF828);
  sub_23FC103E8();

  sub_23FCA31A0();
  sub_23FBFEF74(v40, &qword_256F5E460);
  sub_23FCA3400();
  sub_23FCA3358(v2 + 56);
  sub_23FC5A574();
  swift_task_dealloc();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23FC75334(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23FCA2FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FBFD684(&qword_256F5E460) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23FBFD684(&qword_256F5E4A8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v3))
  {
    v4 = v2 + *(int *)(v3 + 48);
    v5 = sub_23FD71474();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = sub_23FD740CC();
    sub_23FBFF0E4(v6);
  }
  return swift_deallocObject();
}

uint64_t sub_23FCA3084(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FBFD684(&qword_256F5E460) - 8) + 80);
  return sub_23FCA18DC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_23FCA30C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

void sub_23FCA30E0(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v4 = *(_QWORD *)(v3 + 256);
  v5 = *(_DWORD *)(*(_QWORD *)(v3 + 304) + 80);
  *(_DWORD *)(v3 + 344) = v5;
  sub_23FCA14E4(v2 + ((v5 + 32) & ~(unint64_t)v5), a1, (2 * a2) | 1, v4);
}

uint64_t sub_23FCA3114()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 328) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23FCA3138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_23FCA1128(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_23FCA3150()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 248);
}

uint64_t sub_23FCA317C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[38] + 32))(v0[39], v0[32], v0[37]);
}

uint64_t sub_23FCA31C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_23FCA31DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_23FCA3200()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCA3224(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FCA3240()
{
  return swift_slowAlloc();
}

uint64_t sub_23FCA325C(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_23FCA3294()
{
  uint64_t v0;

  return sub_23FBFDE40((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
}

uint64_t sub_23FCA32C0()
{
  return sub_23FD73D6C();
}

id sub_23FCA32D4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 328);
  *(_QWORD *)(v0 + 104) = v1;
  return v1;
}

uint64_t sub_23FCA32E8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FCA32FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_23FCA3310(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

id sub_23FCA3324(__n128 *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  a1[1] = a9;
  return a14;
}

uint64_t sub_23FCA3338()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_23FCA3344()
{
  return swift_allocObject();
}

uint64_t sub_23FCA3358(uint64_t a1)
{
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1);
  return swift_task_dealloc();
}

void sub_23FCA336C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_23FC0EE04(v2, a1 + v1, v3);
}

uint64_t sub_23FCA3380()
{
  return sub_23FD73100();
}

_QWORD *sub_23FCA3394(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23FBFDE40(a4, a4[3]);
}

uint64_t sub_23FCA33C0()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23FCA33D0()
{
  return sub_23FD74174();
}

void sub_23FCA33E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FCB7480(v2, a2, 0, 0);
}

void sub_23FCA33F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FCB7480(v2, a2, v3, 0);
}

uint64_t sub_23FCA3400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FCA3410()
{
  return sub_23FD74018();
}

uint64_t sub_23FCA3420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23FCA3430@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 120);
}

uint64_t sub_23FCA3448()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FCA3458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FCA3468()
{
  return swift_slowAlloc();
}

uint64_t sub_23FCA3478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23FCA3488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  unint64_t v11;
  va_list va;

  va_start(va, a10);
  return sub_23FC9DC40(v10, v11, (uint64_t *)va);
}

void sub_23FCA3498()
{
  __int128 *v0;

  sub_23FCA1D08(v0);
}

uint64_t sub_23FCA34A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v2, a2, v4);
}

void sub_23FCA34B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_23FC0F3AC(v0, v1, v2);
}

uint64_t sub_23FCA34C8()
{
  return sub_23FD724B8();
}

BOOL sub_23FCA34F0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FCA3500()
{
  return sub_23FD74C0C();
}

uint64_t sub_23FCA350C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FCA3518()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FCA138C(v0, v1);
}

uint64_t sub_23FCA3524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  *(_QWORD *)(v1 + 48) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCA3530()
{
  return sub_23FD71510();
}

void sub_23FCA353C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1[2] = 0;
  v1[3] = v2;
  v1[4] = v0;
}

uint64_t static PSELearningUtil.triggerPSEDataCollection(after:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 + 88) = a2;
  *(_QWORD *)(v2 + 16) = a1;
  v3 = sub_23FD751C4();
  *(_QWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 40) = swift_task_alloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCA35A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);

  if ((*(_BYTE *)(v0 + 88) & 1) != 0)
  {
    sub_23FD72338();
    sub_23FBFF1C4();
    *(_QWORD *)(v0 + 64) = sub_23FCA3B1C();
    v6 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 72) = v6;
    *v6 = v0;
    v6[1] = sub_23FCA379C;
    return v7();
  }
  else
  {
    v1 = sub_23FD754D0();
    v3 = v2;
    sub_23FD751B8();
    v4 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 48) = v4;
    *v4 = v0;
    v4[1] = sub_23FCA3690;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v7)(v1, v3, 0, 0, 1);
  }
}

uint64_t sub_23FCA3690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FCA370C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_23FD72338();
  sub_23FBFF1C4();
  *(_QWORD *)(v0 + 64) = sub_23FCA3B1C();
  v1 = (_QWORD *)sub_23FC09058();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_23FCA379C;
  return sub_23FC5AADC(v3);
}

uint64_t sub_23FCA3770()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCA379C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCA37F4()
{
  uint64_t v0;

  swift_release();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCA3828()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCA385C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_23FD751AC();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_23FCA3900()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_23FD751C4();
  sub_23FC606B8(&qword_256F5FEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_23FD753D4();
  sub_23FC606B8(&qword_256F5FEC0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_23FD751D0();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_23FCA3A18;
  return sub_23FD753E0();
}

uint64_t sub_23FCA3A18()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    sub_23FC5A9A8();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    sub_23FC090D0();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_23FCA3ABC()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

ValueMetadata *type metadata accessor for PSELearningUtil()
{
  return &type metadata for PSELearningUtil;
}

uint64_t type metadata accessor for PSEUserEngagementCollector()
{
  return objc_opt_self();
}

uint64_t sub_23FCA3B1C()
{
  return sub_23FD7232C();
}

double sub_23FCA3B30()
{
  uint64_t v0;
  double result;

  sub_23FBFD684(&qword_256F5FEC8);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v0 + 16) = xmmword_23FD76B70;
  *(_QWORD *)(v0 + 56) = &_s17ActionPromptVoterVN;
  *(_QWORD *)(v0 + 64) = &off_25100A1D8;
  *(_BYTE *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 96) = &_s19TaskCompletionVoterVN;
  *(_QWORD *)(v0 + 104) = &off_251012168;
  *(_BYTE *)(v0 + 72) = 3;
  *(_QWORD *)(v0 + 136) = &unk_251014820;
  *(_QWORD *)(v0 + 144) = &off_2510149F8;
  *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v0 + 128) = 1;
  *(_BYTE *)(v0 + 112) = 0;
  qword_256F7F468 = (uint64_t)&_s17WaterfallMediatorVN;
  unk_256F7F470 = &off_251016680;
  byte_256F7F450 = 4;
  qword_256F7F458 = v0;
  return result;
}

_QWORD *sub_23FCA3BEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  void (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v3 = v2;
  v5 = sub_23FD73424();
  v135 = *(_QWORD *)(v5 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v131 = v8;
  sub_23FC10050();
  v9 = sub_23FD73D0C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_23FC061D8();
  v12 = sub_23FD73418();
  v136 = *(_QWORD *)(v12 - 8);
  v137 = v12;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFEFCC();
  v130 = v15;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC0FFF4();
  v129 = v18;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC0FFF4();
  v122 = v21;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFF218();
  v121 = v24;
  v110 = sub_23FCA6E04();
  v109 = *(_QWORD *)(v110 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FBFEFE0();
  v115 = v27;
  sub_23FC10050();
  v114 = sub_23FD71BB8();
  v113 = *(_QWORD *)(v114 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FBFEFE0();
  v112 = v30;
  v31 = sub_23FC10050();
  v120 = _s9PlanEventVMa(v31);
  v119 = *(_QWORD *)(v120 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FBFEFE0();
  v128 = v34;
  sub_23FC10050();
  v35 = sub_23FD73F64();
  v126 = *(_QWORD *)(v35 - 8);
  v127 = v35;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FBFEFE0();
  v125 = v38;
  v39 = sub_23FCA6E10();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v41);
  v43 = (char *)&v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_23FD740CC();
  MEMORY[0x24BDAC7A8](v145, v44);
  sub_23FCA6D78(v45, v107);
  v46 = *(_QWORD *)(a1 + 16);
  if (!v46)
  {
    v104 = MEMORY[0x24BEE4AF8];
    v103 = MEMORY[0x24BEE4AF8];
    v105 = MEMORY[0x24BEE4AF8];
    goto LABEL_36;
  }
  v108 = v3;
  sub_23FC102C4();
  v47 = a1;
  v49 = a1 + v48;
  v142 = *(_QWORD *)(v50 + 72);
  v143 = v50;
  v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
  v140 = *MEMORY[0x24BE56C70];
  v124 = *MEMORY[0x24BE56AC8];
  v118 = *MEMORY[0x24BE56BC0];
  v111 = *MEMORY[0x24BE56C40];
  v123 = *MEMORY[0x24BE55318];
  v107 = v47;
  swift_bridgeObjectRetain();
  v117 = MEMORY[0x24BEE4AF8];
  v138 = MEMORY[0x24BEE4AF8];
  v139 = MEMORY[0x24BEE4AF8];
  v132 = v5;
  v133 = v10;
  v51 = v135;
  v134 = v39;
  v144 = v40;
  v116 = v9;
  do
  {
    v141(v146, v49, v145);
    sub_23FD740A8();
    v52 = v144;
    v53 = (*(uint64_t (**)(char *, uint64_t))(v144 + 88))(v43, v39);
    if (v53 == v140)
    {
      sub_23FCA6D10();
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v1, v43, v9);
      v54 = v1;
      v55 = v10;
      v56 = v9;
      v57 = v131;
      sub_23FD737F0();
      (*(void (**)(uint64_t, uint64_t))(v51 + 88))(v57, v5);
      sub_23FBFF024();
      if (v77)
      {
        v1 = v54;
        v58 = v56;
        sub_23FC15950(v57, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 96));
        v59 = v136;
        v60 = v129;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32))(v129, v57, v137);
        sub_23FC092BC(v130, v60, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16));
        v61 = v139;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC990F0();
          v61 = v95;
        }
        v9 = v58;
        v62 = *(_QWORD *)(v61 + 16);
        sub_23FCA6DF8();
        if (v64)
        {
          sub_23FCA6D20(v63);
          sub_23FC990F0();
          v61 = v96;
        }
        *(_QWORD *)(v61 + 16) = v58;
        v66 = v136;
        v65 = v137;
        sub_23FC102C4();
        v139 = v67;
        sub_23FCA6E4C(v67 + v68 + *(_QWORD *)(v66 + 72) * v62, v130);
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v129, v65);
        v10 = v133;
        (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v1, v9);
        sub_23FCA6CEC();
        v5 = v132;
        v39 = v134;
        v51 = v135;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
        sub_23FCA6CEC();
        sub_23FC15950(v57, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
        v9 = v56;
        v10 = v55;
        v1 = v54;
      }
    }
    else
    {
      sub_23FBFF024();
      if (v77)
      {
        v69 = v9;
        v70 = v1;
        sub_23FCA6D10();
        v71 = v126;
        v72 = v125;
        sub_23FC092BC(v125, (uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 32));
        v73 = v128;
        sub_23FCA6E44();
        sub_23FC092BC(v73 + *(int *)(v120 + 20), v72, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 16));
        v74 = v138;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC99234();
          v74 = v97;
        }
        v138 = v74;
        sub_23FCA6DF8();
        v1 = v70;
        v39 = v134;
        v9 = v69;
        if (v64)
        {
          sub_23FCA6D20(v75);
          sub_23FC99234();
          v138 = v98;
        }
        v5 = v132;
        v10 = v133;
        *(_QWORD *)(v138 + 16) = v52;
        sub_23FCA6D58();
        sub_23FCA5474(v128, v76, _s9PlanEventVMa);
        (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v125, v127);
LABEL_32:
        sub_23FCA6CEC();
        v51 = v135;
        goto LABEL_33;
      }
      sub_23FBFF024();
      if (!v77)
      {
        sub_23FBFF024();
        if (!v88)
        {
          sub_23FCA6CEC();
          sub_23FC100E4((uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
          goto LABEL_33;
        }
        sub_23FCA6D10();
        v89 = v113;
        v90 = v112;
        sub_23FC092BC(v112, (uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 32));
        v91 = v115;
        sub_23FCA6E44();
        sub_23FC092BC(v91 + *(int *)(v110 + 20), v90, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 16));
        v92 = v117;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC5DF60();
          sub_23FC99220();
          v92 = v101;
        }
        v117 = v92;
        sub_23FCA6DF8();
        v9 = v116;
        v10 = v133;
        v39 = v134;
        if (v64)
        {
          sub_23FCA6D20(v93);
          sub_23FC99220();
          v117 = v102;
        }
        *(_QWORD *)(v117 + 16) = v92;
        sub_23FCA6D58();
        sub_23FCA5474(v115, v94, _s19SystemResponseEventVMa);
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v114);
        goto LABEL_32;
      }
      sub_23FCA6D10();
      v79 = v136;
      v78 = v137;
      v80 = v121;
      sub_23FCA6E4C(v121, (uint64_t)v43);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v122, v80, v78);
      v81 = v139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC5DF60();
        sub_23FC990F0();
        v81 = v99;
      }
      v82 = *(_QWORD *)(v81 + 16);
      v139 = v81;
      sub_23FCA6DF8();
      v39 = v134;
      if (v64)
      {
        sub_23FCA6D20(v83);
        sub_23FC990F0();
        v139 = v100;
      }
      *(_QWORD *)(v139 + 16) = v81;
      v85 = v136;
      v84 = v137;
      sub_23FC102C4();
      sub_23FCA6E4C(v87 + v86 + *(_QWORD *)(v85 + 72) * v82, v122);
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v121, v84);
      sub_23FCA6CEC();
      v5 = v132;
      v10 = v133;
      v51 = v135;
      v9 = v116;
    }
LABEL_33:
    v49 += v142;
    --v46;
  }
  while (v46);
  a1 = v107;
  swift_bridgeObjectRelease();
  v3 = v108;
  v103 = v117;
  v105 = v138;
  v104 = v139;
LABEL_36:
  v3[2] = v103;
  _s29SystemPromptResponseRetrieverCMa();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  v3[3] = sub_23FCF4F34(v103, v104);
  v3[4] = sub_23FCA66D4(v105, v103, a1);
  return v3;
}

void sub_23FCA4438(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  os_log_type_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  os_log_type_t v87;
  _BOOL4 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v114 = a2;
  v102 = sub_23FBFF104();
  v106 = *(_QWORD *)(v102 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFCC();
  v101 = v7;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFF218();
  v98 = v10;
  sub_23FC10050();
  v11 = sub_23FD72BF0();
  v104 = *(_QWORD *)(v11 - 8);
  v105 = v11;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFCC();
  v103 = v14;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFF218();
  v99 = v17;
  v18 = sub_23FC10050();
  v108 = _s26PromptStatementStepBuilderV10ResolutionOMa(v18);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FBFEFE0();
  v112 = v21;
  sub_23FBFD684(&qword_256F60018);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  v100 = (uint64_t)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FC10050();
  v110 = _s26PromptStatementStepBuilderVMa(v25);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFEFE0();
  v111 = v28;
  v107 = sub_23FCA6E04();
  v113 = *(_QWORD *)(v107 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FBFEFCC();
  v109 = v31;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v96 - v34;
  sub_23FBFD684(&qword_256F5FD00);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FC061D8();
  sub_23FBFD684(&qword_256F5FD10);
  sub_23FC05FF4();
  v40 = MEMORY[0x24BDAC7A8](v38, v39);
  v42 = (char *)&v96 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40, v43);
  v45 = (char *)&v96 - v44;
  v46 = _s23StatementStepEvaluationOMa(0);
  sub_23FC05FF4();
  v49 = MEMORY[0x24BDAC7A8](v47, v48);
  v51 = (char *)&v96 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49, v52);
  v54 = (char *)&v96 - v53;
  sub_23FCF5DF8((uint64_t)v45);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v45, 1, v46) != 1)
  {
    sub_23FCA6D34((uint64_t)v45, (uint64_t)v54);
    v63 = v114;
    sub_23FCA6D34((uint64_t)v54, v114);
    v64 = v63;
LABEL_10:
    v66 = 0;
LABEL_11:
    v67 = v46;
    goto LABEL_12;
  }
  v55 = v113;
  v97 = v2;
  sub_23FBFEF74((uint64_t)v45, &qword_256F5FD10);
  sub_23FCA0FBC((uint64_t)v42);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v42, 1, v46) != 1)
  {
    sub_23FCA6D34((uint64_t)v42, (uint64_t)v51);
    v65 = v114;
    sub_23FCA6D34((uint64_t)v51, v114);
    v64 = v65;
    goto LABEL_10;
  }
  v56 = a1;
  sub_23FBFEF74((uint64_t)v42, &qword_256F5FD10);
  v57 = *(_QWORD *)(v3 + 16);
  v58 = *(_QWORD *)(v57 + 16);
  if (v58)
  {
    v96 = v46;
    sub_23FC102C4();
    v60 = v57 + v59;
    v61 = *(_QWORD *)(v55 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23FCA67D8(v60, (uint64_t)v35, _s19SystemResponseEventVMa);
      if ((sub_23FD71450() & 1) != 0)
        break;
      sub_23FBFEF18((uint64_t)v35, _s19SystemResponseEventVMa);
      v60 += v61;
      if (!--v58)
      {
        v62 = 1;
        goto LABEL_16;
      }
    }
    sub_23FCA5474((uint64_t)v35, v97, _s19SystemResponseEventVMa);
    v62 = 0;
LABEL_16:
    v56 = a1;
    v46 = v96;
  }
  else
  {
    swift_bridgeObjectRetain();
    v62 = 1;
  }
  v68 = v109;
  v70 = v111;
  v69 = v112;
  v71 = v110;
  v72 = v107;
  v73 = v97;
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v97, v62, 1, v107);
  swift_bridgeObjectRelease();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v73, 1, v72) == 1)
  {
    sub_23FBFEF74(v73, &qword_256F5FD00);
    v74 = v103;
    sub_23FD724DC();
    v75 = v106;
    v76 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v101, v56, v102);
    v77 = (void *)sub_23FD72BE4();
    v78 = sub_23FD74F54();
    if (sub_23FCA6DA8(v78))
    {
      sub_23FC158C8();
      v115 = sub_23FC15900();
      sub_23FCA6DE8(4.8149e-34);
      v79 = sub_23FD75344();
      v81 = sub_23FC1018C(v79, v80);
      sub_23FCA6D3C(v81);
      swift_bridgeObjectRelease();
      sub_23FC15950(v76, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
      sub_23FCA6D94(&dword_23FBF8000, v82, v83, "Cannot find system response event for systemResponseEventId=%s to mark as abandoned");
      sub_23FCA6DC8();
      sub_23FBFEFA0();
    }
    sub_23FC15950(v76, *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8));

    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v74, v105);
    v64 = v114;
    v66 = 1;
    goto LABEL_11;
  }
  sub_23FCA5474(v73, v68, _s19SystemResponseEventVMa);
  swift_storeEnumTagMultiPayload();
  v84 = v100;
  sub_23FCA7D20(v68, v69, v100);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v84, 1, v71) != 1)
  {
    sub_23FCA6D34(v84, v70);
    sub_23FCA6E54(v114);
    sub_23FBFEF18(v70, _s26PromptStatementStepBuilderVMa);
    goto LABEL_13;
  }
  v96 = v46;
  sub_23FBFEF74(v84, &qword_256F60018);
  v85 = v99;
  sub_23FD724DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v98, v56, v102);
  v86 = (void *)sub_23FD72BE4();
  v87 = sub_23FD74F54();
  v88 = sub_23FCA6DA8(v87);
  v90 = v104;
  v89 = v105;
  if (v88)
  {
    sub_23FC158C8();
    v115 = sub_23FC15900();
    sub_23FCA6DE8(4.8149e-34);
    v91 = sub_23FD75344();
    v93 = sub_23FC1018C(v91, v92);
    sub_23FCA6D3C(v93);
    swift_bridgeObjectRelease();
    sub_23FCA6DD8();
    sub_23FCA6D94(&dword_23FBF8000, v94, v95, "Cannot create a statement step builder for systemResponseEventId=%s");
    sub_23FCA6DC8();
    sub_23FBFEFA0();
  }
  sub_23FCA6DD8();

  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v85, v89);
  v64 = v114;
  v66 = 1;
  v67 = v96;
LABEL_12:
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v64, v66, 1, v67);
LABEL_13:
  sub_23FC060D4();
}

uint64_t sub_23FCA4AE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_23FCA4B10()
{
  sub_23FCA4AE4();
  return swift_deallocClassInstance();
}

uint64_t _s23PromptResponseRetrieverCMa()
{
  return objc_opt_self();
}

void sub_23FCA4B50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_23FCA68E4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE530F8]);
}

uint64_t sub_23FCA4B5C(uint64_t a1, uint64_t a2)
{
  return sub_23FCA697C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE530F8]);
}

void sub_23FCA4B68()
{
  sub_23FCA69EC();
}

void sub_23FCA4B74()
{
  sub_23FCA6A44();
}

void sub_23FCA4B80()
{
  sub_23FCA6A9C();
}

void sub_23FCA4B8C()
{
  sub_23FCA6AE4();
}

uint64_t sub_23FCA4B98()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA4BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6B48(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE530F8]);
}

uint64_t sub_23FCA4BB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA4BBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCA6BC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE530F8]);
}

uint64_t _s19SystemResponseEventVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5FFE0);
}

uint64_t sub_23FCA4BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6C4C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE530F8]);
}

void sub_23FCA4BE8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (**v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t (**v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v114 = a1;
  v5 = sub_23FD73514();
  v105 = *(_QWORD *)(v5 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v100 = v8;
  v9 = sub_23FCA6E10();
  v102 = *(uint64_t (***)(uint64_t, uint64_t))(v9 - 8);
  v103 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  v101 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC10050();
  v115 = sub_23FD740CC();
  v13 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115, v14);
  sub_23FCA6D78(v15, v93);
  sub_23FBFD684(&qword_256F5FD08);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FBFEFCC();
  v112 = v18;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC0FFF4();
  v96 = v21;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC0FFF4();
  v93 = v24;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FBFF218();
  v95 = v27;
  v28 = sub_23FC10050();
  v29 = _s20StatementResultEventVMa(v28);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FBFEFE0();
  v94 = v32;
  sub_23FC10050();
  v33 = sub_23FD7157C();
  v109 = *(_QWORD *)(v33 - 8);
  v110 = v33;
  v34 = *(_QWORD *)(v109 + 64);
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v99 = (char *)&v93 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FBFF218();
  v108 = v38;
  MEMORY[0x24BDAC7A8](v39, v40);
  sub_23FBFF218();
  v106 = v41;
  sub_23FC10050();
  v42 = sub_23FD71474();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v44);
  v46 = (char *)&v93 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a3;
  v48 = *(_QWORD *)(a2 + 16);
  if (!v48)
  {
LABEL_6:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v47, 1, 1, v29);
LABEL_26:
    sub_23FC060D4();
    return;
  }
  v97 = v47;
  v98 = v5;
  v113 = v29;
  sub_23FC102C4();
  v50 = a2 + v49;
  v111 = v13;
  v51 = *(_QWORD *)(v13 + 72);
  v116 = a2;
  swift_bridgeObjectRetain();
  v104 = v51 * (v48 - 2);
  v52 = -v51;
  while (1)
  {
    sub_23FD74048();
    v53 = sub_23FD71450();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
    if ((v53 & 1) != 0)
      break;
    v50 += v52;
    if (!--v48)
    {
      swift_bridgeObjectRelease();
      v47 = v97;
      v29 = v113;
      goto LABEL_6;
    }
  }
  v107 = v52;
  swift_bridgeObjectRelease();
  v55 = v109;
  v54 = v110;
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16);
  v57 = v106;
  v56(v106, v114, v110);
  v56(v108, v57, v54);
  v58 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v114 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v55 + 32))(v114 + v58, v57, v54);
  v59 = v48 - 1;
  if (v48 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_24:
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v97, 1, 1, v113);
    sub_23FCA6E28();
LABEL_25:
    swift_unknownObjectRelease();
    goto LABEL_26;
  }
  v60 = v50 + v104;
  LODWORD(v106) = *MEMORY[0x24BE56B98];
  swift_bridgeObjectRetain();
  v61 = v48 - 1;
  v62 = v105;
  v64 = v102;
  v63 = v103;
  v65 = (uint64_t)v101;
  v66 = v111;
  v104 = v48 - 1;
  while (1)
  {
    v67 = v61 - 1;
    if (v61 - 1 >= v59)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v117, v60, v115);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23FD740A8();
    v68 = v64[11](v65, v63);
    v105 = v61;
    if (v68 == (_DWORD)v106)
    {
      sub_23FC100E4(v65, v64[12]);
      v69 = v65;
      v70 = v62;
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32);
      v72 = v100;
      v73 = v98;
      v71(v100, v69, v98);
      v74 = v99;
      sub_23FD734D8();
      v75 = sub_23FD71558();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v74, v110);
      if ((v75 & 1) != 0)
      {
        v76 = v112;
        sub_23FCA6E44();
        v77 = v71;
        v78 = v113;
        v77(v76 + *(int *)(v113 + 20), v72, v73);
        v79 = v76;
        v80 = 0;
      }
      else
      {
        sub_23FC15950(v72, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
        v76 = v112;
        v78 = v113;
        v79 = v112;
        v80 = 1;
      }
      sub_23FCA6E1C(v79, v80);
      v62 = v70;
      v64 = v102;
      v63 = v103;
      v65 = (uint64_t)v101;
    }
    else
    {
      v76 = v112;
      v78 = v113;
      sub_23FCA6E1C(v112, 1);
      sub_23FC100E4(v65, v64[1]);
    }
    v66 = v111;
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v117, v115);
    sub_23FCA6E28();
    swift_bridgeObjectRelease();
    v81 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v76, 1, v78);
    v82 = v76;
    v83 = v81;
    sub_23FBFEF74(v82, &qword_256F5FD08);
    if (v83 != 1)
      break;
    v60 += v107;
    v61 = v67;
    v59 = v104;
    if (!v67)
      goto LABEL_24;
  }
  if (!v105)
    goto LABEL_24;
  if (v105 >= v48)
    goto LABEL_28;
  v84 = v93;
  v85 = v108;
  sub_23FCA5220(v60, v108, v93);
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v85, v110);
  v86 = v95;
  sub_23FCA5514(v84, v95);
  v87 = v96;
  sub_23FCA555C(v86, v96);
  v88 = v113;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v87, 1, v113) != 1)
  {
    v89 = v87;
    v90 = v94;
    sub_23FCA6D34(v89, v94);
    sub_23FBFEF74(v86, &qword_256F5FD08);
    v91 = v90;
    v92 = v97;
    sub_23FCA6D34(v91, v97);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v92, 0, 1, v88);
    sub_23FCA6E28();
    goto LABEL_25;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_23FCA5220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;

  v28[2] = a2;
  v29 = a3;
  v4 = sub_23FD7157C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FD73514();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD7409C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v18, v14) == *MEMORY[0x24BE56B98])
  {
    v28[1] = a1;
    (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
    v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v13, v18, v9);
    sub_23FD734D8();
    v20 = sub_23FD71558();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v21 = v29;
    if ((v20 & 1) != 0)
    {
      sub_23FD74048();
      v22 = _s20StatementResultEventVMa(0);
      v19((char *)(v21 + *(int *)(v22 + 20)), v13, v9);
      v23 = v21;
      v24 = 0;
      v25 = v22;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      v25 = _s20StatementResultEventVMa(0);
      v23 = v21;
      v24 = 1;
    }
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v23, v24, 1, v25);
  }
  else
  {
    v26 = _s20StatementResultEventVMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, 1, 1, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

unint64_t sub_23FCA5434()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F65DE0;
  if (!qword_256F65DE0)
  {
    v1 = sub_23FD71474();
    result = MEMORY[0x2426797E8](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_256F65DE0);
  }
  return result;
}

void sub_23FCA5474(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23FBFF158(a1, a2, a3);
  sub_23FCA6DB8();
  v5(v3, v4);
  sub_23FBFF0A0();
}

uint64_t _s20StatementResultEventVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60080);
}

uint64_t sub_23FCA54B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23FD7157C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23FCA5514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5FD08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCA555C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5FD08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s9PlanEventVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60110);
}

uint64_t sub_23FCA55B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *inited;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD v103[2];
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t found;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint8_t *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  ValueMetadata *v149;
  _UNKNOWN **v150;
  char v151[8];
  uint64_t v152;
  _QWORD v153[5];

  v113 = a2;
  v5 = sub_23FBFD684(&qword_256F5FD10);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s9PlanEventVMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = _s19ValueStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v131, v14);
  v130 = (char *)v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = _s24ActionConfirmationResultVMa(0);
  MEMORY[0x24BDAC7A8](v129, v16);
  v128 = (char *)v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = _s20ActionStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v127, v18);
  v126 = (char *)v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = _s29ParameterDisambiguationResultVMa(0);
  MEMORY[0x24BDAC7A8](v112, v20);
  v111 = (char *)v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = _s27ParameterConfirmationResultVMa(0);
  MEMORY[0x24BDAC7A8](v110, v22);
  v109 = (char *)v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  found = _s33ParameterCandidatesNotFoundResultVMa(0);
  MEMORY[0x24BDAC7A8](found, v24);
  v107 = (char *)v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = _s25ParameterNotAllowedResultVMa(0);
  MEMORY[0x24BDAC7A8](v106, v26);
  v105 = (char *)v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = _s25ParameterNeedsValueResultVMa(0);
  MEMORY[0x24BDAC7A8](v104, v28);
  v103[1] = (char *)v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = _s19ParameterStepResultOMa(0);
  MEMORY[0x24BDAC7A8](v125, v30);
  v133 = (char *)v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = _s23ParameterStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v124, v32);
  v132 = (char *)v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = _s24ToolDisambiguationResultVMa(0);
  MEMORY[0x24BDAC7A8](v123, v34);
  v122 = (char *)v103 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = _s14ToolStepResultOMa(0);
  MEMORY[0x24BDAC7A8](v36, v37);
  v121 = (char *)v103 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = _s18ToolStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v120, v39);
  v119 = (char *)v103 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_23FD71474();
  v138 = *(_QWORD *)(v139 - 8);
  v42 = MEMORY[0x24BDAC7A8](v139, v41);
  v118 = (char *)v103 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v117 = (char *)v103 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45, v47);
  v136 = (char *)v103 - v49;
  MEMORY[0x24BDAC7A8](v48, v50);
  v145 = (char *)v103 - v51;
  v143 = _s23StatementStepEvaluationOMa(0);
  v135 = *(_QWORD *)(v143 - 8);
  v53 = MEMORY[0x24BDAC7A8](v143, v52);
  v137 = (uint8_t *)v103 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v53, v55);
  v134 = (uint64_t)v103 - v57;
  v59 = MEMORY[0x24BDAC7A8](v56, v58);
  v141 = (char *)v103 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v142 = (uint64_t)v103 - v63;
  MEMORY[0x24BDAC7A8](v62, v64);
  v144 = (char *)v103 - v65;
  v116 = sub_23FD72BF0();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116, v66);
  v114 = (char *)v103 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153[3] = &_s24StatementResultRetrievalVN;
  v153[4] = &off_25100FD40;
  v153[0] = a3;
  sub_23FC60768((uint64_t)v153, (uint64_t)v151);
  v68 = sub_23FCA67B0((uint64_t)v151, v152);
  MEMORY[0x24BDAC7A8](v68, v68);
  v70 = (_QWORD *)((char *)v103 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v71 + 16))(v70);
  v72 = *v70;
  v149 = &_s24StatementResultRetrievalVN;
  v150 = &off_25100FD40;
  v148 = v72;
  _s22PlannerPromptEvaluatorCMa();
  inited = (_QWORD *)swift_initStackObject();
  v74 = sub_23FCA67B0((uint64_t)&v148, (uint64_t)v149);
  MEMORY[0x24BDAC7A8](v74, v74);
  v76 = (_QWORD *)((char *)v103 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v77 + 16))(v76);
  v78 = *v76;
  inited[6] = &_s24StatementResultRetrievalVN;
  inited[7] = &off_25100FD40;
  inited[2] = v113;
  inited[3] = v78;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v148);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v151);
  v79 = *(_QWORD *)(a1 + 16);
  v140 = inited;
  if (v79)
  {
    v80 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v81 = *(_QWORD *)(v10 + 72);
    swift_retain();
    v113 = a1;
    swift_bridgeObjectRetain();
    v82 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_23FCA67D8(v80, (uint64_t)v13, _s9PlanEventVMa);
      sub_23FC9F518((uint64_t)v13, (uint64_t)v8);
      sub_23FBFEF18((uint64_t)v13, _s9PlanEventVMa);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v143) == 1)
      {
        sub_23FBFEF74((uint64_t)v8, &qword_256F5FD10);
      }
      else
      {
        v83 = v134;
        sub_23FCA5474((uint64_t)v8, v134, _s23StatementStepEvaluationOMa);
        sub_23FCA5474(v83, (uint64_t)v137, _s23StatementStepEvaluationOMa);
        v84 = v82;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC990DC();
          v84 = v86;
        }
        v85 = *(_QWORD *)(v84 + 16);
        v82 = v84;
        if (v85 >= *(_QWORD *)(v84 + 24) >> 1)
        {
          sub_23FC990DC();
          v82 = v87;
        }
        *(_QWORD *)(v82 + 16) = v85 + 1;
        sub_23FCA5474((uint64_t)v137, v82+ ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))+ *(_QWORD *)(v135 + 72) * v85, _s23StatementStepEvaluationOMa);
      }
      v80 += v81;
      --v79;
    }
    while (v79);
    swift_release();
    swift_bridgeObjectRelease();
    v88 = v82;
  }
  else
  {
    v88 = MEMORY[0x24BEE4AF8];
  }
  v89 = v114;
  sub_23FD724DC();
  swift_bridgeObjectRetain_n();
  v90 = sub_23FD72BE4();
  v91 = sub_23FD74F3C();
  if (os_log_type_enabled(v90, v91))
  {
    v92 = (uint8_t *)swift_slowAlloc();
    v93 = swift_slowAlloc();
    v147 = v93;
    *(_DWORD *)v92 = 136315138;
    v137 = v92 + 4;
    v94 = swift_bridgeObjectRetain();
    v95 = MEMORY[0x242678AA4](v94, v143);
    v97 = v96;
    swift_bridgeObjectRelease();
    v146 = sub_23FC9DC40(v95, v97, &v147);
    sub_23FD75044();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v90, v91, "Generated statement steps for planner prompt resolutions: %s", v92, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v93, -1, -1);
    MEMORY[0x2426798D8](v92, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v115 + 8))(v89, v116);
  v98 = (uint64_t)v144;
  if (*(_QWORD *)(v88 + 16))
  {
    v99 = v88 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
    v137 = *(uint8_t **)(v135 + 72);
    v135 = v88;
    swift_bridgeObjectRetain();
    sub_23FCA67D8(v99, v98, _s23StatementStepEvaluationOMa);
    sub_23FCA67D8(v98, v142, _s23StatementStepEvaluationOMa);
    v100 = (char *)&loc_23FCA609C + *((int *)qword_23FCA6628 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v101 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v153);
  return v101;
}

uint64_t sub_23FCA664C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  _QWORD v10[5];

  v10[3] = &_s24StatementResultRetrievalVN;
  v10[4] = &off_25100FD40;
  v10[0] = a3;
  v7 = sub_23FBFDE40(v10, (uint64_t)&_s24StatementResultRetrievalVN);
  v8 = sub_23FCA55B8(a1, a2, *v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v10);
  *(_QWORD *)(a4 + 16) = v8;
  return a4;
}

uint64_t sub_23FCA66D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  v13[3] = &_s24StatementResultRetrievalVN;
  v13[4] = &off_25100FD40;
  v13[0] = a3;
  _s30PlannerPromptResponseRetrieverCMa();
  v5 = swift_allocObject();
  v6 = sub_23FCA67B0((uint64_t)v13, (uint64_t)&_s24StatementResultRetrievalVN);
  MEMORY[0x24BDAC7A8](v6, v6);
  v8 = (_QWORD *)((char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v9 + 16))(v8);
  v10 = sub_23FCA664C(a1, a2, *v8, v5);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v13);
  return v10;
}

uint64_t sub_23FCA67B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_23FCA67D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23FBFF158(a1, a2, a3);
  v4 = sub_23FCA6E30();
  v5(v4, v3);
  sub_23FBFF0A0();
}

uint64_t sub_23FCA6800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s23StatementStepEvaluationOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *_s24StatementResultRetrievalVMa()
{
  return &_s24StatementResultRetrievalVN;
}

void sub_23FCA6854(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_23FCA68E4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE555E0]);
}

uint64_t sub_23FCA6860(uint64_t a1, uint64_t a2)
{
  return sub_23FCA697C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE555E0]);
}

void sub_23FCA686C()
{
  sub_23FCA69EC();
}

void sub_23FCA6878()
{
  sub_23FCA6A44();
}

void sub_23FCA6884()
{
  sub_23FCA6A9C();
}

void sub_23FCA6890()
{
  sub_23FCA6AE4();
}

uint64_t sub_23FCA689C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA68A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6B48(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE555E0]);
}

uint64_t sub_23FCA68B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA68C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCA6BC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE555E0]);
}

uint64_t sub_23FCA68CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6C4C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE555E0]);
}

void sub_23FCA68D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_23FCA68E4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56A08]);
}

void sub_23FCA68E4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  if ((*(_DWORD *)(*(_QWORD *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    sub_23FBFF104();
    v7 = sub_23FCA6E30();
    sub_23FC595C4(v7, v8);
    v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    v10 = a4(0);
    sub_23FC595C4(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
  }
  sub_23FC09258();
}

uint64_t sub_23FCA6970(uint64_t a1, uint64_t a2)
{
  return sub_23FCA697C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE56A08]);
}

uint64_t sub_23FCA697C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FBFF104();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

void sub_23FCA69E0()
{
  sub_23FCA69EC();
}

void sub_23FCA69EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23FCA6CD4();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  v3 = sub_23FCA6CFC();
  sub_23FC595C4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23FC09258();
}

void sub_23FCA6A38()
{
  sub_23FCA6A44();
}

void sub_23FCA6A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23FCA6CD4();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  v3 = sub_23FCA6CFC();
  sub_23FC595C4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24));
  sub_23FC09258();
}

void sub_23FCA6A90()
{
  sub_23FCA6A9C();
}

void sub_23FCA6A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t (*v3)(uint64_t, uint64_t);

  sub_23FCA6CD4();
  sub_23FCA6DB8();
  sub_23FC595C4(v1, v2);
  sub_23FCA6CFC();
  sub_23FCA6DB8();
  sub_23FC595C4(v0, v3);
  sub_23FC09258();
}

void sub_23FCA6AD8()
{
  sub_23FCA6AE4();
}

void sub_23FCA6AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23FCA6CD4();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  v3 = sub_23FCA6CFC();
  sub_23FC595C4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23FC09258();
}

uint64_t sub_23FCA6B30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA6B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6B48(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56A08]);
}

uint64_t sub_23FCA6B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23FBFF104();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = a4(0);
    v10 = a1 + *(int *)(a3 + 20);
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, a2, v9);
}

uint64_t sub_23FCA6BB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA6BBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCA6BC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE56A08]);
}

uint64_t sub_23FCA6BC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = sub_23FBFF104();
  if (*(_DWORD *)(*(_QWORD *)(v10 - 8) + 84) == a3)
  {
    v11 = v10;
    v12 = a1;
  }
  else
  {
    v11 = a5(0);
    v12 = a1 + *(int *)(a4 + 20);
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v12, a2, a2, v11);
}

uint64_t sub_23FCA6C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6C4C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE56A08]);
}

uint64_t sub_23FCA6C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  unint64_t v7;

  result = sub_23FD71474();
  if (v6 <= 0x3F)
  {
    result = a4(319);
    if (v7 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23FCA6CD4()
{
  return sub_23FD71474();
}

uint64_t sub_23FCA6CEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 120) + 8))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 104));
}

uint64_t sub_23FCA6CFC()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23FCA6D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

BOOL sub_23FCA6D20@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_23FCA6D34(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FCA5474(a1, a2, v2);
}

uint64_t sub_23FCA6D3C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_23FD75044();
}

void sub_23FCA6D78(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23FCA6D94(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

BOOL sub_23FCA6DA8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FCA6DC8()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FCA6DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

unint64_t sub_23FCA6DE8(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23FCA5434();
}

uint64_t sub_23FCA6E04()
{
  return _s19SystemResponseEventVMa(0);
}

uint64_t sub_23FCA6E10()
{
  return sub_23FD7409C();
}

uint64_t sub_23FCA6E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FCA6E28()
{
  return swift_release();
}

uint64_t sub_23FCA6E30()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCA6E44()
{
  return sub_23FD74048();
}

uint64_t sub_23FCA6E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void sub_23FCA6E54(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v90)(uint64_t, uint64_t);
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  void (*v112)(uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  int EnumCaseMultiPayload;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t, _QWORD);
  void (*v175)(uint64_t, uint64_t, uint64_t);
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD v204[2];
  char v205[8];
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;

  v200 = a1;
  v202 = sub_23FCA9768();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFEFE0();
  v186 = v5;
  v6 = sub_23FC10050();
  v7 = _s26PromptStatementStepBuilderVMa(v6);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFCC();
  v192 = v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  v191 = (uint64_t)&v175 - v13;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v14, v15);
  v190 = (uint64_t)&v175 - v16;
  v17 = sub_23FCA9748();
  v193 = *(_QWORD *)(v17 - 8);
  v194 = v17;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFEFE0();
  v195 = v20;
  sub_23FC10050();
  v21 = sub_23FD71DE0();
  sub_23FBFF0B8(v21, (uint64_t)v204);
  v177 = v22;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FBFEFE0();
  v26 = sub_23FBFEFAC(v25);
  v27 = _s20DisambiguationResultOMa(v26);
  sub_23FBFF0B8(v27, (uint64_t)&v206);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v30);
  v31 = sub_23FD71FE4();
  sub_23FBFF0B8(v31, (uint64_t)v205);
  v178 = v32;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v33, v34);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v35);
  v36 = sub_23FD71F78();
  sub_23FBFF0B8(v36, (uint64_t)&v209);
  v182 = v37;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v38, v39);
  sub_23FBFEFE0();
  v41 = sub_23FBFEFAC(v40);
  _s25ParameterNeedsValueResultV16NeedsValueResultOMa(v41);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v42, v43);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v44);
  v45 = sub_23FD74798();
  sub_23FBFF0B8(v45, (uint64_t)&v207);
  v181 = v46;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v49);
  v50 = sub_23FD71D44();
  v187 = *(_QWORD *)(v50 - 8);
  v188 = v50;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v53);
  v54 = sub_23FD71CFC();
  v196 = *(_QWORD *)(v54 - 8);
  v197 = v54;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v55, v56);
  sub_23FBFEFE0();
  v189 = v57;
  sub_23FC10050();
  v58 = sub_23FD71C84();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v60);
  sub_23FBFEFCC();
  v185 = v61;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v62, v63);
  v176 = (char *)&v175 - v64;
  sub_23FBFF064();
  v67 = MEMORY[0x24BDAC7A8](v65, v66);
  v69 = (char *)&v175 - v68;
  v71 = MEMORY[0x24BDAC7A8](v67, v70);
  v73 = (char *)&v175 - v72;
  v75 = MEMORY[0x24BDAC7A8](v71, v74);
  v77 = (char *)&v175 - v76;
  MEMORY[0x24BDAC7A8](v75, v78);
  v80 = (char *)&v175 - v79;
  sub_23FBFD684(&qword_256F60148);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v81, v82);
  sub_23FC10388();
  v83 = *(int *)(v7 + 28);
  v84 = *(int *)(v7 + 32);
  v198 = v7;
  v199 = v1;
  v85 = v1 + v83;
  v86 = v1 + v84;
  v88 = (uint64_t *)(v2 + *(int *)(v87 + 48));
  v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  v89(v2, v85, v58);
  sub_23FCA8774(v86, (uint64_t)v88, _s26PromptStatementStepBuilderV10ResolutionOMa);
  v201 = v59;
  v90 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 88);
  v203 = v2;
  v91 = v90(v2, v58);
  if (v91 != *MEMORY[0x24BE532D8])
  {
    v95 = v202;
    if (v91 != *MEMORY[0x24BE532E0])
    {
      if (v91 != *MEMORY[0x24BE532E8])
      {
        if (v91 != *MEMORY[0x24BE53300])
        {
          if (v91 != *MEMORY[0x24BE53308])
          {
            v147 = v201;
            if (v91 == *MEMORY[0x24BE532F8])
            {
              v148 = v176;
              v89((uint64_t)v176, v203, v58);
              (*(void (**)(char *, uint64_t))(v147 + 96))(v148, v58);
              v149 = (char *)&loc_23FCA7758 + 4 * word_23FD77F40[sub_23FCA9698()];
              __asm { BR              X10 }
            }
            goto LABEL_45;
          }
          v132 = v89;
          v89((uint64_t)v69, v203, v58);
          v133 = v201;
          (*(void (**)(char *, uint64_t))(v201 + 96))(v69, v58);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
          {
            sub_23FCA94C8();
            v136 = (uint64_t)v179;
            sub_23FCA96A4();
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              sub_23FCA96B4();
              sub_23FCA9784((uint64_t)v69, v174);
              goto LABEL_45;
            }
            v135 = *v88;
            sub_23FCA94C8();
            v136 = (uint64_t)v179;
            *v179 = v135;
            sub_23FCA96A4();
          }
          swift_storeEnumTagMultiPayload();
          sub_23FCA8384(v136, v200);
          sub_23FBFEF18(v136, _s20DisambiguationResultOMa);
          (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t)))(v58 + 8))(v80, v132);
          v173 = sub_23FCA0FA8();
          sub_23FCA95BC(v173);
          v119 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
          goto LABEL_27;
        }
        sub_23FCA96D0((uint64_t)v73);
        sub_23FC5B3B0((uint64_t)v73, *(uint64_t (**)(uint64_t, uint64_t))(v201 + 96));
        v122 = sub_23FCA9698();
        switch(v122)
        {
          case 4:
            sub_23FCA94F4((uint64_t)&v208);
            sub_23FCA9724();
            v124 = 2;
            break;
          case 3:
            sub_23FCA94F4((uint64_t)&v208);
            sub_23FCA9724();
            v124 = 1;
            break;
          case 2:
            sub_23FCA94F4((uint64_t)&v208);
            sub_23FCA9724();
            v124 = 0;
            break;
          default:
            sub_23FCA96B4();
            v151(v73, v183);
            goto LABEL_45;
        }
        sub_23FCA823C(v124, v123);
        sub_23FC595C4((uint64_t)v77, *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8));
        v150 = sub_23FCA0FA8();
        sub_23FCA95BC(v150);
        v119 = *(void (**)(uint64_t, uint64_t))(v201 + 8);
        goto LABEL_27;
      }
      v89((uint64_t)v77, v203, v58);
      v109 = v201;
      sub_23FC5B3B0((uint64_t)v77, *(uint64_t (**)(uint64_t, uint64_t))(v201 + 96));
      v110 = sub_23FCA9698();
      if (v110 == 4)
      {
        v138 = v187;
        v137 = v188;
        v139 = sub_23FCA9770();
        sub_23FC06160(v139, v140, v141);
        v142 = sub_23FBFD684(qword_256F60150);
        v143 = v184;
        sub_23FBFF0F8(v184, v144, v145, v142);
        sub_23FCA8110(v143, v200);
        sub_23FBFEF18(v143, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v58, v137);
      }
      else
      {
        if (v110)
        {
          (*(void (**)(char *, uint64_t))(v187 + 8))(v77, v188);
          goto LABEL_45;
        }
        v111 = sub_23FCA9770();
        v112(v111);
        v113 = v181;
        v114 = v180;
        sub_23FC06160(v180, (uint64_t)v88, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 32));
        v115 = v184;
        sub_23FC06160(v184, v114, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 16));
        v116 = sub_23FBFD684(qword_256F60150);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v115, 0, 1, v116);
        sub_23FCA8110(v115, v200);
        sub_23FBFEF18(v115, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
        sub_23FC595C4(v114, *(uint64_t (**)(uint64_t, uint64_t))(v113 + 8));
        (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v58, v188);
      }
      v146 = sub_23FCA0FA8();
      sub_23FCA95BC(v146);
      v119 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
LABEL_36:
      v130 = v203;
      v131 = v58;
      goto LABEL_37;
    }
    sub_23FCA96D0((uint64_t)v80);
    v96 = v201;
    sub_23FC5B3B0((uint64_t)v80, *(uint64_t (**)(uint64_t, uint64_t))(v201 + 96));
    v97 = swift_getEnumCaseMultiPayload();
    switch(v97)
    {
      case 4:
        v125 = sub_23FCA9560();
        MEMORY[0x242675AA4](v125);
        sub_23FCA95F4();
        sub_23FCA9670();
        v126 = sub_23FBFF104();
        sub_23FCA960C(v126);
        *(_QWORD *)v95 = v69;
        *(_QWORD *)(v95 + 8) = 0;
        *(_BYTE *)(v95 + 16) = 1;
        break;
      case 3:
        v127 = sub_23FCA9560();
        MEMORY[0x242675AA4](v127);
        sub_23FCA95F4();
        sub_23FCA9670();
        v128 = sub_23FBFF104();
        sub_23FCA960C(v128);
        *(_QWORD *)v95 = v69;
        *(_QWORD *)(v95 + 8) = 1;
        *(_BYTE *)(v95 + 16) = 1;
        break;
      case 1:
        v202 = *v88;
        v98 = sub_23FCA9560();
        v99 = MEMORY[0x242675AA4](v98);
        v100 = v199 + *(int *)(v198 + 24);
        v101 = _s18ToolStepEvaluationVMa(0);
        v102 = v200;
        v103 = v200 + *(int *)(v101 + 20);
        v104 = v103 + *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
        v105 = sub_23FBFF104();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v104, v100, v105);
        v106 = v202;
        *(_QWORD *)v103 = v99;
        *(_QWORD *)(v103 + 8) = v106;
        *(_BYTE *)(v103 + 16) = 0;
        sub_23FC06250();
        sub_23FC8A29C();
        sub_23FBFF204(v102, v107);
        sub_23FCA0FA8();
        sub_23FCA9754();
        sub_23FCA9714();
        v108 = v102;
LABEL_26:
        sub_23FCA95E4(v108);
        v119 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
        goto LABEL_27;
      default:
        (*(void (**)(char *, uint64_t))(v196 + 8))(v80, v197);
        goto LABEL_45;
    }
    sub_23FC06250();
    sub_23FC8A29C();
    sub_23FBFF204((uint64_t)v77, v129);
    sub_23FCA0FA8();
    sub_23FCA9754();
    sub_23FCA9714();
    v108 = (uint64_t)v77;
    goto LABEL_26;
  }
  v92 = swift_getEnumCaseMultiPayload();
  if (v92 == 4)
  {
    _s20ActionStepEvaluationVMa(0);
    sub_23FCA95D0();
    v117 = sub_23FBFF104();
    sub_23FCA9578(v117);
    *(_BYTE *)v59 = 2;
    v118 = sub_23FC06250();
    sub_23FBFF204(v86, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 16));
    sub_23FCA0FA8();
    sub_23FCA9650();
    sub_23FCA95E4(v86);
    v119 = *(void (**)(uint64_t, uint64_t))(v201 + 8);
    goto LABEL_36;
  }
  v93 = v201;
  if (v92 == 3)
  {
    sub_23FCA9684();
    sub_23FCA95D0();
    v120 = sub_23FBFF104();
    sub_23FCA9578(v120);
    *(_BYTE *)v59 = 1;
    goto LABEL_17;
  }
  if (v92 == 2)
  {
    sub_23FCA9684();
    sub_23FCA95D0();
    v94 = sub_23FBFF104();
    sub_23FCA9578(v94);
    *(_BYTE *)v59 = 0;
LABEL_17:
    v121 = sub_23FC06250();
    sub_23FBFF204(v86, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 16));
    sub_23FCA0FA8();
    sub_23FCA9650();
    sub_23FCA95E4(v86);
    v119 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
LABEL_27:
    v130 = v203;
    v131 = v58;
LABEL_37:
    v119(v130, v131);
    goto LABEL_48;
  }
LABEL_45:
  v175 = v89;
  v152 = v195;
  sub_23FD724DC();
  v153 = v199;
  v154 = v190;
  sub_23FCA9760(v199, v190);
  v155 = v191;
  sub_23FCA9760(v153, v191);
  v156 = v192;
  sub_23FCA9760(v153, v192);
  v157 = sub_23FD72BE4();
  v158 = sub_23FD74F54();
  v159 = v158;
  if (os_log_type_enabled(v157, v158))
  {
    v160 = sub_23FBFEFF4();
    v201 = sub_23FBFEFF4();
    v204[1] = v201;
    *(_DWORD *)v160 = 136315650;
    v161 = v198;
    LODWORD(v199) = v159;
    sub_23FBFF104();
    sub_23FCA5434();
    v162 = sub_23FD75344();
    v204[0] = sub_23FC5C074(v162, v163);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FBFEF18(v154, _s26PromptStatementStepBuilderVMa);
    *(_WORD *)(v160 + 12) = 2080;
    v175(v185, v155 + *(int *)(v161 + 28), v58);
    v164 = sub_23FD74C0C();
    v166 = sub_23FC5C074(v164, v165);
    sub_23FCA963C(v166);
    swift_bridgeObjectRelease();
    sub_23FBFEF18(v155, _s26PromptStatementStepBuilderVMa);
    *(_WORD *)(v160 + 22) = 2080;
    sub_23FCA8774(v156 + *(int *)(v161 + 32), v186, _s26PromptStatementStepBuilderV10ResolutionOMa);
    v167 = sub_23FD74C0C();
    v169 = sub_23FC5C074(v167, v168);
    sub_23FCA963C(v169);
    swift_bridgeObjectRelease();
    sub_23FBFEF18(v156, _s26PromptStatementStepBuilderVMa);
    _os_log_impl(&dword_23FBF8000, v157, (os_log_type_t)v199, "Cannot make a statement step for system response=%s, outcome=%s, resolution=%s", (uint8_t *)v160, 0x20u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  sub_23FC98270(v154);
  sub_23FC98270(v155);
  sub_23FC98270(v156);

  (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v152, v194);
  v170 = sub_23FCA0FA8();
  sub_23FBFF0F8(v200, v171, v172, v170);
  sub_23FBFEF74(v203, &qword_256F60148);
LABEL_48:
  sub_23FC060D4();
}

void sub_23FCA7BB0()
{
  sub_23FCA96B4();
  JUMPOUT(0x23FCA788CLL);
}

void sub_23FCA7BC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCA94A0();
  sub_23FCA96E0();
  v3 = swift_storeEnumTagMultiPayload();
  MEMORY[0x242675B88](v3);
  sub_23FCA9664();
  sub_23FCA9548();
  sub_23FCA96C0();
  sub_23FCA8774(v0, v4, _s20DisambiguationResultOMa);
  v5 = sub_23FBFF104();
  sub_23FCA9590(v5);
  *v2 = v1;
  v6 = sub_23FC06250();
  sub_23FCA951C(v6);
  sub_23FCA9624();
  sub_23FCA0FA8();
  sub_23FCA95A8();
  sub_23FBFEF18(v0, _s20DisambiguationResultOMa);
  JUMPOUT(0x23FCA7CE8);
}

void sub_23FCA7D20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  BOOL v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a2;
  v48 = a3;
  v7 = sub_23FC76568();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  v45 = v10;
  v11 = sub_23FC10050();
  _s19SystemResponseEventVMa(v11);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFE0();
  v49 = v14;
  v15 = sub_23FCA9748();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  sub_23FBFEFE0();
  v50 = v18;
  sub_23FBFD684(&qword_256F5D538);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD72044();
  sub_23FCA9734();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FC93074();
  v25 = (int *)_s26PromptStatementStepBuilderVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  sub_23FC0AC90();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v22, 1, v4) == 1)
  {
    v47 = v15;
    sub_23FBFEF74((uint64_t)v22, &qword_256F5D538);
    sub_23FD724DC();
    sub_23FCA8774(a1, v49, _s19SystemResponseEventVMa);
    v31 = sub_23FD72BE4();
    v32 = sub_23FD74F54();
    v33 = os_log_type_enabled(v31, v32);
    v34 = v48;
    if (v33)
    {
      v35 = (uint8_t *)sub_23FBFEFF4();
      v36 = sub_23FBFEFF4();
      v46 = v30;
      v53 = v36;
      *(_DWORD *)v35 = 136315138;
      v44 = v35 + 4;
      sub_23FBFF104();
      v45 = v16;
      sub_23FCA5434();
      v37 = v49;
      v38 = sub_23FD75344();
      v52 = sub_23FC9DC40(v38, v39, &v53);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18(v37, _s19SystemResponseEventVMa);
      _os_log_impl(&dword_23FBF8000, v31, v32, "System response event with id %s is not referencing exactly one statement, cannot create a prompt statement step builder", v35, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }

    sub_23FBFEF18(v49, _s19SystemResponseEventVMa);
    sub_23FBFEF18(v51, _s26PromptStatementStepBuilderV10ResolutionOMa);
    sub_23FBFEF18(v30, _s19SystemResponseEventVMa);
    sub_23FCA978C(*(uint64_t (**)(_QWORD, _QWORD))(v16 + 8));
    v43 = 1;
  }
  else
  {
    sub_23FC06160(v3, (uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    sub_23FD72020();
    sub_23FD72020();
    v40 = &v29[v25[6]];
    v41 = sub_23FBFF104();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, a1, v41);
    v42 = v45;
    sub_23FD72038();
    sub_23FBFEF18(a1, _s19SystemResponseEventVMa);
    sub_23FC595C4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(&v29[v25[7]], v42, v47);
    sub_23FBFEEB0(v51, (uint64_t)&v29[v25[8]], _s26PromptStatementStepBuilderV10ResolutionOMa);
    v34 = v48;
    sub_23FBFEEB0((uint64_t)v29, v48, _s26PromptStatementStepBuilderVMa);
    v43 = 0;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v34, v43, 1, (uint64_t)v25);
  sub_23FC060D4();
}

uint64_t sub_23FCA8110@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v5 = _s23ParameterStepEvaluationVMa(0);
  v6 = a2 + *(int *)(v5 + 28);
  sub_23FCA8774(a1, v6, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
  v7 = _s26PromptStatementStepBuilderVMa(0);
  v8 = v2 + *(int *)(v7 + 24);
  v9 = v6 + *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  v11 = sub_23FD7157C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(a2, v2, v11);
  v12(a2 + *(int *)(v5 + 20), v2 + *(int *)(v7 + 20), v11);
  sub_23FD719B4();
  sub_23FD731E4();
  _s19ParameterStepResultOMa(0);
  swift_storeEnumTagMultiPayload();
  _s23StatementStepEvaluationOMa(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FCA823C@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v5 = _s23ParameterStepEvaluationVMa(0);
  v6 = a2 + *(int *)(v5 + 28);
  sub_23FD71F6C();
  v7 = _s26PromptStatementStepBuilderVMa(0);
  v8 = v2 + *(int *)(v7 + 24);
  v9 = _s27ParameterConfirmationResultVMa(0);
  v10 = v6 + *(int *)(v9 + 24);
  v11 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v8, v11);
  *(_BYTE *)(v6 + *(int *)(v9 + 20)) = a1;
  v12 = sub_23FD7157C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(a2, v2, v12);
  v13(a2 + *(int *)(v5 + 20), v2 + *(int *)(v7 + 20), v12);
  sub_23FD719B4();
  MEMORY[0x242675D14]();
  sub_23FD731E4();
  _s19ParameterStepResultOMa(0);
  swift_storeEnumTagMultiPayload();
  _s23StatementStepEvaluationOMa(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FCA8384@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v5 = MEMORY[0x242675D8C]();
  v6 = _s23ParameterStepEvaluationVMa(0);
  v7 = (uint64_t *)(a2 + *(int *)(v6 + 28));
  v8 = _s29ParameterDisambiguationResultVMa(0);
  sub_23FCA8774(a1, (uint64_t)v7 + *(int *)(v8 + 20), _s20DisambiguationResultOMa);
  v9 = _s26PromptStatementStepBuilderVMa(0);
  v10 = v2 + *(int *)(v9 + 24);
  v11 = (char *)v7 + *(int *)(v8 + 24);
  v12 = sub_23FD71474();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  *v7 = v5;
  v13 = sub_23FD7157C();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(a2, v2, v13);
  v14(a2 + *(int *)(v6 + 20), v2 + *(int *)(v9 + 20), v13);
  sub_23FD71FC0();
  MEMORY[0x242675D80]();
  sub_23FD731E4();
  _s19ParameterStepResultOMa(0);
  swift_storeEnumTagMultiPayload();
  _s23StatementStepEvaluationOMa(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FCA84E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  void (*v16)(uint64_t, uint64_t);

  v8 = sub_23FD733DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  sub_23FC10388();
  sub_23FD733E8();
  sub_23FCA9734();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC93074();
  sub_23FC06160((uint64_t)v2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v13 = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 88))(v2, v3);
  if (v13 == *MEMORY[0x24BE55348])
    goto LABEL_2;
  if (v13 == *MEMORY[0x24BE55368])
  {
    sub_23FCA9538();
    sub_23FC595C4((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    v14 = sub_23FD74798();
    sub_23FBFF088(v14);
    sub_23FCA96F8();
    return swift_storeEnumTagMultiPayload();
  }
  if (v13 == *MEMORY[0x24BE55350])
  {
LABEL_2:
    sub_23FCA9538();
    sub_23FC595C4((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (v13 == *MEMORY[0x24BE55360] || v13 == *MEMORY[0x24BE55370])
  {
    sub_23FCA9538();
    sub_23FC595C4((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    *a2 = *v2;
    sub_23FCA96F8();
    return swift_storeEnumTagMultiPayload();
  }
  if (v13 == *MEMORY[0x24BE55358])
  {
    sub_23FC595C4((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v9 + 32))(v4, v2, v8);
    sub_23FD733D0();
    sub_23FCA9538();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
    _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (v13 == *MEMORY[0x24BE55338])
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v16(a1, v3);
    sub_23FCA96F8();
    swift_storeEnumTagMultiPayload();
    return ((uint64_t (*)(_QWORD *, uint64_t))v16)(v2, v3);
  }
  else
  {
    if (v13 == *MEMORY[0x24BE55340])
    {
      sub_23FCA9538();
      _s26PromptStatementStepBuilderV10ResolutionOMa(0);
      return swift_storeEnumTagMultiPayload();
    }
    result = sub_23FD75374();
    __break(1u);
  }
  return result;
}

uint64_t _s26PromptStatementStepBuilderV10ResolutionOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60268);
}

uint64_t _s26PromptStatementStepBuilderVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F601B0);
}

void sub_23FCA8774(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23FBFF158(a1, a2, a3);
  sub_23FC8A29C();
  v5(v3, v4);
  sub_23FBFF0A0();
}

uint64_t *sub_23FCA87A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD7157C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FD71474();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FD71C84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v22 = sub_23FD74798();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v18, v19, v22);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23FCA8904(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23FD7157C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  v7 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_23FD71C84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[8];
  _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v12 = sub_23FD74798();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  return result;
}

uint64_t sub_23FCA89EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD71C84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FCA8B24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD71C84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  if (a1 != a2)
  {
    v16 = a3[8];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_23FBFEF18(a1 + v16, _s26PromptStatementStepBuilderV10ResolutionOMa);
    v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23FCA8C74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD71C84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FCA8DAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD71C84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  if (a1 != a2)
  {
    v16 = a3[8];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_23FBFEF18(a1 + v16, _s26PromptStatementStepBuilderV10ResolutionOMa);
    v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23FCA8EFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA8F08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_23FC06250();
  sub_23FC06178();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    sub_23FBFF104();
    sub_23FC06178();
    if (v9)
    {
      v7 = v10;
      v11 = a3[6];
    }
    else
    {
      sub_23FC76568();
      sub_23FC06178();
      if (v12)
      {
        v7 = v13;
        v11 = a3[7];
      }
      else
      {
        v7 = sub_23FCA9768();
        v11 = a3[8];
      }
    }
    v8 = a1 + v11;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, a2, v7);
}

uint64_t sub_23FCA8F90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCA8F9C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_23FC06250();
  sub_23FC06188();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_23FBFF104();
    sub_23FC06188();
    if (v10)
    {
      v8 = v11;
      v12 = a4[6];
    }
    else
    {
      sub_23FC76568();
      sub_23FC06188();
      if (v13)
      {
        v8 = v14;
        v12 = a4[7];
      }
      else
      {
        v8 = sub_23FCA9768();
        v12 = a4[8];
      }
    }
    v9 = a1 + v12;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, a2, a2, v8);
}

uint64_t sub_23FCA902C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_23FD7157C();
  if (v1 <= 0x3F)
  {
    result = sub_23FD71474();
    if (v2 <= 0x3F)
    {
      result = sub_23FD71C84();
      if (v3 <= 0x3F)
      {
        result = _s26PromptStatementStepBuilderV10ResolutionOMa(319);
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_23FCA90E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_23FD74798();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FCA9198(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_23FD74798();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_23FCA91E0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23FCA9268(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23FBFEF18((uint64_t)a1, _s26PromptStatementStepBuilderV10ResolutionOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_23FCA9308(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23FCA9390(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23FBFEF18((uint64_t)a1, _s26PromptStatementStepBuilderV10ResolutionOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23FCA9430()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74798();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23FCA94A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 368) + 32))();
}

uint64_t sub_23FCA94C8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 352) + 32))(*(_QWORD *)(v1 - 384), v0, *(_QWORD *)(v1 - 344));
}

uint64_t sub_23FCA94F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(a1 - 256) + 32))(*(_QWORD *)(v2 - 320), v1, *(_QWORD *)(v2 - 280));
}

uint64_t sub_23FCA951C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23FCA9538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FCA9548()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  return _s25ValueDisambiguationResultVMa(0);
}

uint64_t sub_23FCA9560()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 168) + 32))(*(_QWORD *)(v1 - 224), v0, *(_QWORD *)(v1 - 160));
}

uint64_t sub_23FCA9578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_23FCA9590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23FCA95A8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FCA95BC(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, a1);
}

uint64_t sub_23FCA95D0()
{
  return _s24ActionConfirmationResultVMa(0);
}

uint64_t sub_23FCA95E4(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v1);
}

uint64_t sub_23FCA95F4()
{
  return _s18ToolStepEvaluationVMa(0);
}

uint64_t sub_23FCA960C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23FCA9624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v2(v3 + *(int *)(v1 + 20), v5 + *(int *)(v4 + 20), v0);
}

uint64_t sub_23FCA963C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FCA9650()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FCA9664()
{
  return _s19ValueStepEvaluationVMa(0);
}

uint64_t sub_23FCA9670()
{
  return _s24ToolDisambiguationResultVMa(0);
}

uint64_t sub_23FCA9684()
{
  return _s20ActionStepEvaluationVMa(0);
}

uint64_t sub_23FCA9698()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FCA96A4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCA96D0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, *(_QWORD *)(v3 - 112), v2);
}

uint64_t sub_23FCA96E0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 328);
}

uint64_t sub_23FCA96F8()
{
  uint64_t v0;

  _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  return v0;
}

uint64_t sub_23FCA9714()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 168) + 8))(v0, *(_QWORD *)(v1 - 160));
}

uint64_t sub_23FCA9724()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCA9748()
{
  return sub_23FD72BF0();
}

uint64_t sub_23FCA9754()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23FCA9760(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FCA8774(a1, a2, v2);
}

uint64_t sub_23FCA9768()
{
  return _s26PromptStatementStepBuilderV10ResolutionOMa(0);
}

uint64_t sub_23FCA9770()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 272);
}

uint64_t sub_23FCA9784@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_23FCA978C@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 136));
}

id sub_23FCA9798(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_23FCA97D8(a1, a2);
}

id sub_23FCA97D8(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_class *ObjectType;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  objc_super v45;
  _OWORD v46[3];
  uint64_t v47[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v42 = sub_23FD725D8();
  v5 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v6);
  sub_23FBFEFE0();
  v38 = v7;
  v37 = sub_23FD72BF0();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v8);
  sub_23FBFEFE0();
  v40 = v9;
  sub_23FBFD684(&qword_254346D90);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFF180();
  v14 = v13 - v12;
  v15 = OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_encoder;
  sub_23FD712B8();
  sub_23FBFF1C4();
  v16 = v2;
  *(_QWORD *)&v2[v15] = sub_23FD712AC();
  v17 = OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_decoder;
  sub_23FD71294();
  sub_23FBFF1C4();
  *(_QWORD *)&v16[v17] = sub_23FD71288();
  sub_23FD72560();
  sub_23FBFF1C4();
  *(_QWORD *)&v16[OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_transaction] = sub_23FD7256C();
  v41 = a1;
  v18 = sub_23FD725CC();
  v19 = (uint64_t *)&v16[OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientApplicationIdentifier];
  *v19 = v18;
  v19[1] = v20;
  sub_23FD72CE0();
  v21 = sub_23FC5F58C();
  sub_23FBFF0F8(v14, v22, v23, v21);
  swift_bridgeObjectRetain();
  sub_23FD72CC8();
  sub_23FD72CD4();
  *(_QWORD *)&v16[OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_queryDecorationCollector] = sub_23FD72CBC();
  v24 = (void *)sub_23FD74BE8();
  v25 = objc_msgSend(a2, sel_valueForEntitlement_, v24);

  if (v25)
  {
    sub_23FD75074();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v46, 0, 32);
  }
  sub_23FCAB54C((uint64_t)v46, (uint64_t)v47);
  if (v47[3])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v26 = &v16[OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientGroupIdentifier];
      *(_QWORD *)v26 = v43;
      *((_QWORD *)v26 + 1) = v44;
      goto LABEL_14;
    }
  }
  else
  {
    sub_23FC6233C((uint64_t)v47, &qword_254346A38);
  }
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v38, v41, v42);
  v27 = sub_23FD72BE4();
  v28 = sub_23FD74F6C();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)sub_23FBFEFF4();
    v47[0] = sub_23FBFEFF4();
    *(_DWORD *)v29 = 136315138;
    v30 = sub_23FD725CC();
    if (v31)
    {
      v32 = v31;
    }
    else
    {
      v30 = 0x6E776F6E6B6E75;
      v32 = 0xE700000000000000;
    }
    *(_QWORD *)&v46[0] = sub_23FC9DC40(v30, v32, v47);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v38, v42);
    sub_23FBFF114(&dword_23FBF8000, v27, v28, "QueryDecorationXPCServiceServer: client %s is missing group-identifier entitlement, setting clientGroupIdentifier to nil.", v29);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v38, v42);

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v40, v37);
  v33 = &v16[OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientGroupIdentifier];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
LABEL_14:

  v45.receiver = v16;
  v45.super_class = ObjectType;
  v34 = objc_msgSendSuper2(&v45, sel_init);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v41, v42);
  return v34;
}

uint64_t sub_23FCA9C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_23FD72BF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v7 = sub_23FD72BE4();
  v8 = sub_23FD74F6C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23FBF8000, v7, v8, "QueryDecorationXPCServiceServer received SIGTERM.", v9, 2u);
    MEMORY[0x2426798D8](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v10 = *MEMORY[0x24BE79840];
  v11 = sub_23FD72554();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
}

uint64_t sub_23FCA9D98(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;

  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFF180();
  v13 = v12 - v11;
  v14 = sub_23FD74DEC();
  sub_23FBFF0F8(v13, v15, v16, v14);
  v17 = sub_23FC58AA0();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  v18 = (_QWORD *)sub_23FC58AA0();
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  swift_retain();
  v19 = v4;
  sub_23FC577F4(a1, a2);
  sub_23FD74E70();
  swift_release();
  swift_release();
  swift_release();
  return sub_23FC6233C(v13, &qword_254346A28);
}

uint64_t sub_23FCA9EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  sub_23FBFD684(&qword_256F60310);
  v4[13] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D90);
  v4[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCA9F34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, _QWORD, _QWORD, uint64_t);

  v1 = v0[11];
  sub_23FCAB86C();
  sub_23FCAB7F4(&qword_256F60318, v2, (uint64_t (*)(uint64_t))MEMORY[0x24BE57BD8], MEMORY[0x24BE57BF0]);
  sub_23FCAB860();
  if (v1)
  {
    swift_task_dealloc();
    sub_23FC090D0();
    v3 = (uint64_t (*)(void))sub_23FCAB854();
    return sub_23FC5D3B4(v3);
  }
  else
  {
    v5 = v0[13];
    v6 = v0[14];
    v7 = v0[7];
    v0[15] = v7;
    v8 = sub_23FC5F58C();
    sub_23FBFF0F8(v6, v9, v10, v8);
    v11 = sub_23FD72458();
    sub_23FCAB7C0(v11);
    v12 = (_QWORD *)sub_23FC752E8();
    v0[16] = v12;
    *v12 = v0;
    v12[1] = sub_23FCAA044;
    return v13(v7, v0[14], v0[13], v5);
  }
}

uint64_t sub_23FCAA044(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*v2;
  v4 = *v2 + 16;
  v3[17] = a1;
  v3[18] = v1;
  swift_task_dealloc();
  v5 = v3[14];
  v6 = sub_23FC6233C(v4, &qword_256F60328);
  sub_23FCAB834(v6, &qword_256F60310);
  sub_23FC6233C(v5, &qword_254346D90);
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FCAA0E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v0[8] = v0[17];
  v1 = v0[18];
  sub_23FD7244C();
  sub_23FCAB7F4(&qword_256F60330, v2, (uint64_t (*)(uint64_t))MEMORY[0x24BE57CD8], MEMORY[0x24BE57CE8]);
  v3 = sub_23FCAB7FC();
  v5 = (void *)v0[17];
  v6 = (void *)v0[15];
  if (v1)
  {

    swift_task_dealloc();
    sub_23FC090D0();
    v7 = (uint64_t (*)(void))sub_23FCAB854();
  }
  else
  {
    v8 = v3;
    v9 = v4;
    v10 = (uint64_t *)v0[9];

    *v10 = v8;
    v10[1] = v9;
    sub_23FC5A574();
    sub_23FC5AB04();
    v7 = (uint64_t (*)(void))v0[1];
  }
  return sub_23FC5D3B4(v7);
}

uint64_t sub_23FCAA1BC()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCAA2B4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;

  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFF180();
  v17 = v16 - v15;
  v18 = sub_23FD74DEC();
  sub_23FBFF0F8(v17, v19, v20, v18);
  v21 = sub_23FC58AA0();
  *(_QWORD *)(v21 + 16) = a5;
  *(_QWORD *)(v21 + 24) = a6;
  v22 = (_QWORD *)sub_23FC58AA0();
  v22[2] = v6;
  v22[3] = a1;
  v22[4] = a2;
  v22[5] = a3;
  v22[6] = a4;
  swift_retain();
  v23 = v6;
  sub_23FC577F4(a1, a2);
  sub_23FC577F4(a3, a4);
  sub_23FD74E70();
  swift_release();
  swift_release();
  swift_release();
  return sub_23FC6233C(v17, &qword_254346A28);
}

uint64_t sub_23FCAA3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  sub_23FBFD684(&qword_254346D90);
  v6[15] = swift_task_alloc();
  sub_23FBFD684(&qword_256F60310);
  v6[16] = swift_task_alloc();
  type metadata accessor for SessionID(0);
  v6[17] = swift_task_alloc();
  v7 = sub_23FD71474();
  v6[18] = v7;
  v6[19] = *(_QWORD *)(v7 - 8);
  v6[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCAA4BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  _QWORD *v5;

  v1 = v0[12];
  sub_23FCAB86C();
  sub_23FCAB7F4(&qword_256F60318, v2, (uint64_t (*)(uint64_t))MEMORY[0x24BE57BD8], MEMORY[0x24BE57BF0]);
  sub_23FCAB860();
  if (v1)
  {
    sub_23FCAB824();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5AB04();
    v4 = (uint64_t (*)(void))sub_23FCAB854();
    return sub_23FC5D3B4(v4);
  }
  else
  {
    v0[21] = v0[7];
    sub_23FCAB7F4(&qword_256F5D700, v3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD7127C();
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[19] + 16))(v0[17], v0[20], v0[18]);
    v5 = (_QWORD *)swift_task_alloc();
    v0[22] = v5;
    *v5 = v0;
    v5[1] = sub_23FCAA604;
    return sub_23FCAA904(v0[16], v0[17]);
  }
}

uint64_t sub_23FCAA604()
{
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCAA640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, uint64_t);

  v1 = v0[15];
  v2 = sub_23FC5F58C();
  sub_23FCAB7C0(v2);
  v3 = (_QWORD *)sub_23FC752E8();
  v0[23] = v3;
  *v3 = v0;
  v3[1] = sub_23FCAA6B8;
  return v5(v0[21], v0[15], v0[16], v1);
}

uint64_t sub_23FCAA6B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)*v2;
  v4 = *v2 + 16;
  v3[24] = a1;
  v3[25] = v1;
  swift_task_dealloc();
  v5 = v3[15];
  sub_23FC6233C(v4, &qword_256F60328);
  sub_23FC6233C(v5, &qword_254346D90);
  sub_23FC5A9A8();
  return sub_23FC75178();
}

uint64_t sub_23FCAA748()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v0[8] = v0[24];
  v1 = v0[25];
  sub_23FD7244C();
  sub_23FCAB7F4(&qword_256F60330, v2, (uint64_t (*)(uint64_t))MEMORY[0x24BE57CD8], MEMORY[0x24BE57CE8]);
  v3 = sub_23FCAB7FC();
  v5 = (void *)v0[24];
  v6 = (void *)v0[21];
  v7 = v0[17];
  if (v1)
  {

    sub_23FCAB834(v8, &qword_256F60310);
    sub_23FCAB66C(v7);
    sub_23FCAB83C();

    sub_23FCAB824();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5AB04();
    v9 = (uint64_t (*)(void))sub_23FCAB854();
  }
  else
  {
    v10 = v3;
    v11 = v4;
    v12 = (uint64_t *)v0[9];

    sub_23FCAB834(v13, &qword_256F60310);
    sub_23FCAB66C(v7);
    sub_23FCAB83C();

    *v12 = v10;
    v12[1] = v11;
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5AB04();
    swift_task_dealloc();
    v9 = (uint64_t (*)(void))v0[1];
  }
  return v9();
}

uint64_t sub_23FCAA878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);

  sub_23FCAB834(v5, &qword_256F60310);
  sub_23FCAB66C(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCAA904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  type metadata accessor for SessionID(0);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v4 = sub_23FD72BF0();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v5 = sub_23FD73E08();
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCAA9E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(char **)(v0 + 72);
  v3 = &v2[OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientGroupIdentifier];
  *(_QWORD *)(v0 + 160) = *(_QWORD *)&v2[OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientGroupIdentifier];
  v4 = *((_QWORD *)v3 + 1);
  *(_QWORD *)(v0 + 168) = v4;
  if (v4)
  {
    if (qword_256F5D2D8 != -1)
      swift_once();
    *(_QWORD *)(v0 + 176) = type metadata accessor for SessionControlActor();
    *(_QWORD *)(v0 + 184) = sub_23FCAB7F4(&qword_256F5E288, v5, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
    sub_23FD74D80();
    return swift_task_switch();
  }
  else
  {
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    v7 = v2;
    v8 = sub_23FD72BE4();
    v9 = sub_23FD74F54();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = *(_QWORD *)(v0 + 72);
      v11 = (uint8_t *)sub_23FBFEFF4();
      v20 = sub_23FBFEFF4();
      *(_DWORD *)v11 = 136315138;
      if (*(_QWORD *)(v10
                     + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientApplicationIdentifier
                     + 8))
      {
        v12 = *(_QWORD *)(v10
                        + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientApplicationIdentifier);
        v13 = *(_QWORD *)(v10
                        + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31QueryDecorationXPCServiceServer6Server_clientApplicationIdentifier
                        + 8);
      }
      else
      {
        v13 = 0xE700000000000000;
        v12 = 0x6E776F6E6B6E75;
      }
      v18 = *(void **)(v0 + 72);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 32) = sub_23FC9DC40(v12, v13, &v20);
      sub_23FD75044();
      swift_bridgeObjectRelease();

      sub_23FBFF114(&dword_23FBF8000, v8, v9, "QueryDecorationXPCServiceServer: client %s is missing group-identifier entitlement, no QueryDecorationLookback can be found as seurity policy check can't be completed without a group identifier.", v11);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    v15 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 96);
    v17 = *(void **)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v19 = sub_23FCAB7A8();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, v19);
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    return sub_23FC75318(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23FCAAC78()
{
  if (qword_256F5D2E0 != -1)
    swift_once();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCAACC8()
{
  sub_23FD74D80();
  return sub_23FC0907C();
}

uint64_t sub_23FCAAD0C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = qword_256F7F4B8;
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FCAAD30()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[21];
  v0[2] = v0[20];
  v0[3] = v1;
  sub_23FD74D80();
  return sub_23FC0907C();
}

uint64_t sub_23FCAAD7C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FCC4D40();
  *(_QWORD *)(v0 + 200) = v1;
  return sub_23FC75178();
}

uint64_t sub_23FCAADE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  sub_23FC08F38(v3, v2);
  v4 = sub_23FD72BE4();
  v5 = sub_23FD74F3C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 88);
    v17 = v6;
    v7 = *(_QWORD *)(v0 + 80);
    v8 = (uint8_t *)sub_23FBFEFF4();
    v18 = sub_23FBFEFF4();
    *(_DWORD *)v8 = 136315138;
    sub_23FC08F38(v6, v7);
    v9 = sub_23FD71438();
    v11 = v10;
    sub_23FCAB66C(v7);
    *(_QWORD *)(v0 + 40) = sub_23FC9DC40(v9, v11, &v18);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FCAB66C(v17);
    sub_23FBFF114(&dword_23FBF8000, v4, v5, "QueryDecorationXPCServiceServer: could not find observable session transcript with SessionID: %s.", v8);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v12 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 104);
  sub_23FCAB66C(*(_QWORD *)(v0 + 88));

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = sub_23FCAB7A8();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, v15);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  return sub_23FC75318(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCAAFA4()
{
  sub_23FCAB490();
  swift_release();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCAAFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v1, *(_QWORD *)(v0 + 144), v2);
  *(_QWORD *)(v0 + 48) = sub_23FD73DE4();
  sub_23FBFD684(&qword_256F5EAD0);
  sub_23FCAB6A8();
  sub_23FD73A30();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = sub_23FCAB7A8();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v3, 0, 1, v4);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23FCAB22C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = sub_23FCA9798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for QueryDecorationXPCServiceServer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for QueryDecorationXPCServiceServer.Server()
{
  return objc_opt_self();
}

uint64_t sub_23FCAB290(uint64_t a1, uint64_t a2)
{
  return sub_23FC984E8(&qword_256F602F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for QueryDecorationXPCServiceServer.Server, (uint64_t)&unk_23FD77FA8);
}

uint64_t sub_23FCAB2BC()
{
  return sub_23FC984E8(&qword_254346D18, 255, MEMORY[0x24BE53B50], MEMORY[0x24BE53B48]);
}

uint64_t sub_23FCAB2EC()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_254346EA0;
  v1 = (id)qword_254346EA0;
  return v0;
}

void sub_23FCAB334(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_254346EA0;
  qword_254346EA0 = a1;

}

uint64_t (*sub_23FCAB380())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23FCAB3C0()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_23FCAB404(uint64_t a1)
{
  swift_beginAccess();
  qword_254346E98 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_23FCAB450())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23FCAB490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_23FD73D9C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  sub_23FD73D6C();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_23FCAB54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_254346A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCAB594()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23FCAB5B8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_23FD68AA0(a1, a2, a3);
}

void sub_23FCAB5C0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FD68A74(a1, a2, *(void (**)(_QWORD, _QWORD, uint64_t))(v2 + 16));
}

uint64_t sub_23FCAB5C8()
{
  uint64_t v0;

  sub_23FC577B0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_23FC577B0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23FCAB5FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = sub_23FCAB80C(v5);
  return sub_23FCAA3EC(v6, v7, v8, v2, v3, v4);
}

uint64_t sub_23FCAB66C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SessionID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23FCAB6A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5EAD8;
  if (!qword_256F5EAD8)
  {
    v1 = sub_23FBFEDE8(&qword_256F5EAD0);
    result = MEMORY[0x2426797E8](MEMORY[0x24BE57088], v1);
    atomic_store(result, (unint64_t *)&qword_256F5EAD8);
  }
  return result;
}

uint64_t sub_23FCAB6EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FCAB710()
{
  uint64_t v0;

  sub_23FC577B0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23FCAB73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_23FCAB80C(v3);
  return sub_23FCA9EB0(v4, v5, v6, v2);
}

uint64_t sub_23FCAB7A8()
{
  return sub_23FD72458();
}

double sub_23FCAB7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
  *(_QWORD *)(v2 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_23FCAB7F4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_23FC984E8(a1, 255, a3, a4);
}

uint64_t sub_23FCAB7FC()
{
  return sub_23FD712A0();
}

uint64_t sub_23FCAB80C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FCAB824()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCAB834(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_23FC6233C(v2, a2);
}

uint64_t sub_23FCAB83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FCAB84C()
{
  return swift_release();
}

uint64_t sub_23FCAB854()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23FCAB860()
{
  return sub_23FD7127C();
}

uint64_t sub_23FCAB86C()
{
  return sub_23FD72440();
}

uint64_t *sub_23FCAB878(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 6u:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
        v8 = sub_23FD73730();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_9;
      case 4u:
        v9 = sub_23FD7157C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_9;
      case 5u:
        v10 = sub_23FD73340();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23FCABA18(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 6:
      return swift_bridgeObjectRelease();
    case 3:
      v3 = sub_23FD73730();
      goto LABEL_6;
    case 4:
      v3 = sub_23FD7157C();
      goto LABEL_6;
    case 5:
      v3 = sub_23FD73340();
LABEL_6:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_23FCABAA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 6u:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      v6 = sub_23FD73730();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_7;
    case 4u:
      v7 = sub_23FD7157C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_7;
    case 5u:
      v8 = sub_23FD73340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_23FCABC20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23FCABDC8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        v6 = sub_23FD73730();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 4u:
        v7 = sub_23FD7157C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_8;
      case 5u:
        v8 = sub_23FD73340();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23FCABDC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RuntimeError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RuntimeError()
{
  uint64_t result;

  result = qword_256F603C8;
  if (!qword_256F603C8)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_23FCABE3C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      v8 = sub_23FD73340();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      break;
    case 4:
      v9 = sub_23FD7157C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      break;
    case 3:
      v7 = sub_23FD73730();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_23FCABF38(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23FCABDC8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        v8 = sub_23FD73340();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        break;
      case 4:
        v9 = sub_23FD7157C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        break;
      case 3:
        v7 = sub_23FD73730();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FCAC044()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23FD73730();
  if (v1 <= 0x3F)
  {
    result = sub_23FD7157C();
    if (v2 <= 0x3F)
    {
      result = sub_23FD73340();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_23FCAC0F0()
{
  return sub_23FCACB4C(&qword_256F5EAC0, (uint64_t)&unk_23FD78138);
}

void sub_23FCAC114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  sub_23FC75764();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC061D8();
  sub_23FCACB8C(v1, v0);
  v4 = (char *)sub_23FCAC178 + 4 * byte_23FD7807C[sub_23FCACC2C()];
  __asm { BR              X10 }
}

uint64_t sub_23FCAC178()
{
  sub_23FCACC1C();
  return 1;
}

void sub_23FCAC204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  sub_23FCACC24();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FBFEFE0();
  v3 = sub_23FCA0F14();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFF180();
  v5 = sub_23FC76840();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFF180();
  sub_23FC75764();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFF180();
  sub_23FCACB8C(v0, v10 - v9);
  v11 = (char *)sub_23FCAC304 + 4 * byte_23FD78087[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FCAC304()
{
  return sub_23FD74B40();
}

void sub_23FCAC630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  sub_23FCACC24();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFEFE0();
  sub_23FCA0F14();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  sub_23FC76840();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFEFE0();
  sub_23FC75764();
  sub_23FC05FF4();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFD684(&qword_256F60408);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FC061D8();
  v26 = v2 + *(int *)(v25 + 48);
  sub_23FCACB8C(a1, v2);
  sub_23FCACB8C(a2, v26);
  v27 = (char *)sub_23FCAC804 + 4 * byte_23FD78092[sub_23FCACC2C()];
  __asm { BR              X10 }
}

uint64_t sub_23FCAC804()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;

  sub_23FCACB8C(v0, (uint64_t)v1);
  v4 = *v1;
  v3 = v1[1];
  if (sub_23FCACC10())
  {
    swift_bridgeObjectRelease();
    sub_23FCACBD0(v0);
LABEL_11:
    v7 = 0;
    return v7 & 1;
  }
  if (v4 == *v2 && v3 == v2[1])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = sub_23FD75380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      sub_23FCACC1C();
      goto LABEL_11;
    }
  }
  sub_23FCACC1C();
  v7 = 1;
  return v7 & 1;
}

uint64_t sub_23FCACA9C()
{
  sub_23FCACB4C(&qword_256F60400, (uint64_t)&unk_23FD780D0);
  return sub_23FD753F8();
}

uint64_t sub_23FCACAD4()
{
  sub_23FCACB4C(&qword_256F60400, (uint64_t)&unk_23FD780D0);
  return sub_23FD753EC();
}

uint64_t sub_23FCACB10()
{
  uint64_t v0;

  v0 = *(_QWORD *)aRuntimeerror_0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_23FCACB4C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RuntimeError();
    result = MEMORY[0x2426797E8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23FCACB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RuntimeError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCACBD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F60408);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FCACC10()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FCACC1C()
{
  uint64_t v0;

  return sub_23FCABDC8(v0);
}

uint64_t sub_23FCACC24()
{
  return sub_23FD73340();
}

uint64_t sub_23FCACC2C()
{
  return swift_getEnumCaseMultiPayload();
}

ValueMetadata *type metadata accessor for SearchResultUnwrapper()
{
  return &type metadata for SearchResultUnwrapper;
}

uint64_t sub_23FCACC48@<X0>(void (*a1)(uint64_t *, uint64_t, uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  void (*v69)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  void (*v78)(_QWORD, uint64_t, void (*)(uint64_t, uint64_t));
  void (*v79)(uint64_t, uint64_t);
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t *, _QWORD, uint64_t);
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  char *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  _BOOL4 v97;
  uint8_t *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t *v119;
  uint64_t *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void (*v124)(uint64_t, char *, uint64_t);
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t);
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  void (*v152)(char *, uint64_t);
  unsigned int v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  void (*v161)(uint64_t, char *, uint64_t);
  void (*v162)(uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  void (*v172)(uint64_t *, uint64_t, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176[2];

  v171 = a2;
  v172 = a1;
  v167 = sub_23FD746D8();
  v163 = *(_QWORD *)(v167 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FBFEFCC();
  v158 = v4;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC0FFF4();
  v155 = v7;
  sub_23FBFF064();
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v149 - v11;
  MEMORY[0x24BDAC7A8](v10, v13);
  v165 = (char *)&v149 - v14;
  sub_23FD747F8();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFEFE0();
  v164 = v17;
  v162 = (void (*)(uint64_t, uint64_t))sub_23FD74744();
  v166 = *((_QWORD *)v162 - 1);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFEFE0();
  v161 = v20;
  sub_23FBFD684(&qword_256F5EB98);
  sub_23FC05FF4();
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (uint64_t *)((char *)&v149 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v23, v26);
  sub_23FC0FFF4();
  v160 = v27;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v149 - v30;
  v32 = sub_23FD74798();
  v173 = *(_QWORD *)(v32 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v33, v34);
  sub_23FBFEFCC();
  v175 = v35;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FC0FFF4();
  v169 = v38;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v39, v40);
  sub_23FC0FFF4();
  v174 = v41;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v42, v43);
  sub_23FC0FFF4();
  v168 = (uint64_t *)v44;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v45, v46);
  v170 = (uint64_t)&v149 - v47;
  v48 = sub_23FD72BF0();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v50);
  sub_23FBFEFCC();
  v159 = v51;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v52, v53);
  sub_23FC0FFF4();
  v156 = v54;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v55, v56);
  sub_23FC0FFF4();
  v157 = v57;
  sub_23FBFF064();
  v60 = MEMORY[0x24BDAC7A8](v58, v59);
  v62 = (char *)&v149 - v61;
  MEMORY[0x24BDAC7A8](v60, v63);
  v65 = (char *)&v149 - v64;
  sub_23FD724D0();
  v66 = sub_23FD72BE4();
  v67 = sub_23FD74F48();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)sub_23FBFEFF4();
    v154 = v12;
    *(_WORD *)v68 = 0;
    _os_log_impl(&dword_23FBF8000, v66, v67, "Unwrapping SearchTool results", v68, 2u);
    sub_23FBFEFA0();
  }

  v69 = *(void (**)(char *, uint64_t))(v49 + 8);
  v69(v65, v48);
  sub_23FCAEAE8((uint64_t)v172, (uint64_t)v31);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v31, 1, v32) == 1)
  {
    sub_23FCAEB30((uint64_t)v31);
    return sub_23FCAEBE4();
  }
  v71 = (uint64_t)v62;
  v154 = (char *)v48;
  v72 = v173;
  v73 = v170;
  sub_23FCAEBF8(v170, (uint64_t)v31);
  v74 = v168;
  v172 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v72 + 16);
  v172(v168, v73, v32);
  v75 = (*(uint64_t (**)(uint64_t *, uint64_t))(v72 + 88))(v74, v32);
  v76 = v75;
  if (v75 != *MEMORY[0x24BEB99E0])
  {
    if (v75 != *MEMORY[0x24BEB9988])
    {
      v103 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v103(v73, v32);
      sub_23FCAEBE4();
      return ((uint64_t (*)(uint64_t *, uint64_t))v103)(v168, v32);
    }
    v89 = v168;
    sub_23FC595C4((uint64_t)v168, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 96));
    v168 = (uint64_t *)*v89;
    v90 = swift_projectBox();
    v91 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 16);
    v92 = v12;
    v93 = v165;
    v94 = v167;
    v91(v165, v90, v167);
    sub_23FD724D0();
    v161 = (void (*)(uint64_t, char *, uint64_t))v91;
    v91(v92, (uint64_t)v93, v94);
    v166 = v71;
    v95 = sub_23FD72BE4();
    v96 = sub_23FD74F48();
    v97 = sub_23FC09114(v96);
    v152 = v69;
    v153 = v76;
    if (v97)
    {
      v151 = v95;
      v98 = (uint8_t *)sub_23FBFEFF4();
      v150 = sub_23FBFEFF4();
      v176[0] = v150;
      v160 = v25;
      *(_DWORD *)v98 = 136315138;
      v162 = (void (*)(uint64_t, uint64_t))(v98 + 4);
      sub_23FD746CC();
      v99 = MEMORY[0x242678AA4]();
      v101 = v100;
      swift_bridgeObjectRelease();
      v102 = sub_23FC9DC40(v99, v101, v176);
      sub_23FC103F0(v102);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FCAEBCC();
      sub_23FBFF114(&dword_23FBF8000, v151, (os_log_type_t)v71, "Attempting to unwrap collection values: %s", v98);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FCAEBCC();

    v69((char *)v166, (uint64_t)v154);
    v104 = *(_QWORD *)(sub_23FD746CC() + 16);
    swift_bridgeObjectRelease();
    if (v104)
    {
      v166 = sub_23FD746CC();
      v105 = *(_QWORD *)(v166 + 16);
      if (v105)
      {
        v106 = v173;
        v107 = (*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80);
        v108 = v166 + v107;
        v109 = *(_QWORD *)(v173 + 72);
        v110 = MEMORY[0x24BEE4AF8];
        do
        {
          v71 = v174;
          v172((uint64_t *)v174, v108, v32);
          sub_23FCAD8D0(v71, (uint64_t)v25);
          sub_23FC595C4(v71, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v25, 1, v32) == 1)
          {
            sub_23FCAEB30((uint64_t)v25);
          }
          else
          {
            v111 = v169;
            sub_23FCAEBF8(v169, (uint64_t)v25);
            sub_23FCAEBF8(v175, v111);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23FCAEC00();
              v110 = v113;
            }
            v112 = *(_QWORD *)(v110 + 16);
            v71 = v112 + 1;
            if (v112 >= *(_QWORD *)(v110 + 24) >> 1)
            {
              sub_23FCAEC00();
              v110 = v114;
            }
            *(_QWORD *)(v110 + 16) = v71;
            sub_23FCAEBF8(v110 + v107 + v112 * v109, v175);
            v106 = v173;
          }
          v108 += v109;
          --v105;
        }
        while (v105);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v110 = MEMORY[0x24BEE4AF8];
        v106 = v173;
      }
      v121 = v167;
      v122 = v165;
      v123 = v159;
      v124 = v161;
      if (!*(_QWORD *)(v110 + 16))
      {
        swift_bridgeObjectRelease();
        v133 = v156;
        sub_23FD724D0();
        v134 = v155;
        v124(v155, v122, v121);
        v135 = (void (*)(uint64_t, uint64_t, uint64_t))v124;
        v136 = sub_23FD72BE4();
        v137 = sub_23FD74F54();
        if (os_log_type_enabled(v136, v137))
        {
          v138 = (uint8_t *)sub_23FBFEFF4();
          v176[0] = sub_23FBFEFF4();
          *(_DWORD *)v138 = 136315138;
          v135(v158, v134, v121);
          v139 = sub_23FD74C0C();
          v141 = sub_23FC9DC40(v139, v140, v176);
          sub_23FC103F0(v141);
          sub_23FD75044();
          swift_bridgeObjectRelease();
          v162(v134, v121);
          sub_23FBFF114(&dword_23FBF8000, v136, v137, "Unable to unwrap SearchTool collection:\n %s", v138);
          sub_23FBFF10C();
          sub_23FBFEFA0();
        }

        v148 = (void (*)(char *, uint64_t))v162;
        v162(v134, v121);
        sub_23FCAEBB8(v133);
        v148(v122, v121);
        sub_23FC595C4(v170, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
        v120 = v171;
        v147 = 1;
        goto LABEL_35;
      }
      sub_23FD724D0();
      swift_bridgeObjectRetain_n();
      v125 = sub_23FD72BE4();
      v126 = sub_23FD74F48();
      if (sub_23FC09114(v126))
      {
        v127 = (uint8_t *)sub_23FBFEFF4();
        v176[0] = sub_23FBFEFF4();
        *(_DWORD *)v127 = 136315138;
        v128 = swift_bridgeObjectRetain();
        v129 = MEMORY[0x242678AA4](v128, v32);
        v131 = v130;
        swift_bridgeObjectRelease();
        v132 = sub_23FC9DC40(v129, v131, v176);
        sub_23FC103F0(v132);
        sub_23FD75044();
        sub_23FCAEC0C();
        swift_bridgeObjectRelease();
        sub_23FBFF114(&dword_23FBF8000, v125, (os_log_type_t)v71, "Unwrapped SearchTool Collection values: %s", v127);
        sub_23FBFF10C();
        sub_23FBFEFA0();
      }

      sub_23FCAEC0C();
      v142 = sub_23FCAEBB8(v123);
      MEMORY[0x242678474](v142);
      v143 = v158;
      sub_23FD746B4();
      v162((uint64_t)v122, v121);
      sub_23FC595C4(v170, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
      v144 = swift_allocBox();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 32))(v145, v143, v121);
      v146 = v171;
      *v171 = v144;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v106 + 104))(v146, v153, v32);
      v120 = v146;
    }
    else
    {
      v115 = v157;
      sub_23FD724D0();
      v116 = sub_23FD72BE4();
      v117 = sub_23FD74F6C();
      if (os_log_type_enabled(v116, v117))
      {
        v118 = (uint8_t *)sub_23FBFEFF4();
        *(_WORD *)v118 = 0;
        _os_log_impl(&dword_23FBF8000, v116, v117, "Received empty list from search tool. Returning as is.", v118, 2u);
        sub_23FBFEFA0();
      }

      sub_23FCAEBB8(v115);
      v162((uint64_t)v93, v94);
      v119 = v171;
      sub_23FCAEBF8((uint64_t)v171, v170);
      v120 = v119;
    }
    v147 = 0;
LABEL_35:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v120, v147, 1, v32);
    return swift_release();
  }
  sub_23FC595C4((uint64_t)v74, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 96));
  v153 = v76;
  v175 = *v74;
  v77 = swift_projectBox();
  v78 = *(void (**)(_QWORD, uint64_t, _QWORD *))(v166 + 16);
  v80 = v161;
  v79 = v162;
  v78(v161, v77, v162);
  v174 = swift_allocBox();
  MEMORY[0x2426784EC]();
  sub_23FBFD684(&qword_256F5F9B0);
  v81 = v72;
  v82 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_23FD769D0;
  v84 = (uint64_t *)(v83 + v82);
  v85 = swift_allocBox();
  v78(v86, (uint64_t)v80, v79);
  *v84 = v85;
  v87 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v81 + 104);
  v87(v84, v153, v32);
  sub_23FD746B4();
  v88 = (uint64_t)v160;
  *v160 = v174;
  v87((uint64_t *)v88, *MEMORY[0x24BEB9988], v32);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v88, 0, 1, v32);
  sub_23FCACC48(v88);
  sub_23FCAEB30(v88);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), _QWORD *))(v166 + 8))(v80, v79);
  sub_23FC595C4(v170, *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8));
  return swift_release();
}

uint64_t sub_23FCAD8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t *, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  void (*v109)(char *, char *);
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  void (*v119)(char *, char *);
  BOOL v120;
  char *v121;
  char *v122;
  char *v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  BOOL v131;
  char *v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  char v137;
  char *v138;
  char *v139;
  NSObject *v140;
  os_log_type_t v141;
  uint8_t *v142;
  uint64_t v143;
  unint64_t v144;
  void (*v145)(char *, uint64_t);
  char *v146;
  char *v147;
  NSObject *v148;
  os_log_type_t v149;
  uint8_t *v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  unsigned int (*v169)(char *, uint64_t);
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176[2];

  v173 = a2;
  v3 = sub_23FD72BF0();
  v171 = *(_QWORD *)(v3 - 8);
  v172 = v3;
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v174 = (char *)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v164 = (char *)&v152 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v155 = (char *)&v152 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v156 = (char *)&v152 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v157 = (char *)&v152 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v158 = (char *)&v152 - v21;
  MEMORY[0x24BDAC7A8](v20, v22);
  v161 = (char *)&v152 - v23;
  v160 = sub_23FBFD684(&qword_256F5EB98);
  v25 = MEMORY[0x24BDAC7A8](v160, v24);
  v159 = (uint64_t)&v152 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v168 = (char *)&v152 - v29;
  MEMORY[0x24BDAC7A8](v28, v30);
  v170 = (char *)&v152 - v31;
  v32 = sub_23FD746FC();
  v33 = *(_QWORD *)(v32 - 8);
  v165 = v32;
  v166 = v33;
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v154 = (char *)&v152 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35, v37);
  v167 = (char *)&v152 - v38;
  v39 = sub_23FD74798();
  v40 = *(_QWORD *)(v39 - 8);
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v162 = (char *)&v152 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v47 = (char *)&v152 - v46;
  v49 = MEMORY[0x24BDAC7A8](v45, v48);
  v51 = (uint64_t *)((char *)&v152 - v50);
  MEMORY[0x24BDAC7A8](v49, v52);
  v54 = (char *)&v152 - v53;
  v55 = sub_23FD74744();
  v56 = *(_QWORD *)(v55 - 8);
  v58 = MEMORY[0x24BDAC7A8](v55, v57);
  v163 = (char *)&v152 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v58, v60);
  v62 = (char *)&v152 - v61;
  v63 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v63(v54, a1, v39);
  v169 = *(unsigned int (**)(char *, uint64_t))(v40 + 88);
  if (v169(v54, v39) != *MEMORY[0x24BEB99E0])
  {
    v74 = *(void (**)(char *, uint64_t))(v40 + 8);
    v74(v54, v39);
    sub_23FD724D0();
    v63(v47, a1, v39);
    v75 = sub_23FD72BE4();
    v76 = sub_23FD74F54();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      v176[0] = v78;
      *(_DWORD *)v77 = 136315138;
      v170 = (char *)(v77 + 4);
      v63(v162, (uint64_t)v47, v39);
      v79 = sub_23FD74C0C();
      v175 = sub_23FC9DC40(v79, v80, v176);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      v74(v47, v39);
      _os_log_impl(&dword_23FBF8000, v75, v76, "Unable to unwrap SearchTool entity:\n %s", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v78, -1, -1);
      MEMORY[0x2426798D8](v77, -1, -1);
    }
    else
    {
      v74(v47, v39);
    }

    (*(void (**)(char *, uint64_t))(v171 + 8))(v174, v172);
    v81 = v173;
    v82 = v39;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v81, 1, 1, v82);
  }
  v64 = *(void (**)(char *, uint64_t))(v40 + 96);
  v174 = (char *)v39;
  v64(v54, v39);
  v65 = swift_projectBox();
  v153 = v56;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  v162 = (char *)v55;
  v66(v62, v65, v55);
  swift_release();
  v67 = v62;
  v68 = sub_23FD7472C();
  if (*(_QWORD *)(v68 + 16))
  {
    v69 = sub_23FC84D84(1701869940, 0xE400000000000000);
    v70 = (uint64_t)v170;
    if ((v71 & 1) != 0)
    {
      v72 = (uint64_t)v174;
      v63(v170, *(_QWORD *)(v68 + 56) + *(_QWORD *)(v40 + 72) * v69, (uint64_t)v174);
      v73 = 0;
    }
    else
    {
      v73 = 1;
      v72 = (uint64_t)v174;
    }
    v83 = (uint64_t)v168;
  }
  else
  {
    v73 = 1;
    v72 = (uint64_t)v174;
    v83 = (uint64_t)v168;
    v70 = (uint64_t)v170;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v70, v73, 1, v72);
  sub_23FCAEB70(v70, v83);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v83, 1, v72) == 1)
  {
    v84 = sub_23FD74768();
    v85 = swift_allocBox();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v84 - 8) + 104))(v86, *MEMORY[0x24BEB9940], v84);
    *v51 = v85;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v40 + 104))(v51, *MEMORY[0x24BEB9A00], v72);
    sub_23FCAEB30(v83);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 32))(v51, v83, v72);
  }
  v87 = (unsigned int (*)(uint64_t *, uint64_t))v169;
  swift_bridgeObjectRelease();
  if (v87(v51, v72) != *MEMORY[0x24BEB9990])
  {
    (*(void (**)(uint64_t *, uint64_t))(v40 + 8))(v51, v72);
    v98 = v164;
    sub_23FD724D0();
    v99 = v162;
    v100 = v163;
    v66(v163, (uint64_t)v67, (uint64_t)v162);
    v101 = sub_23FD72BE4();
    v102 = sub_23FD74F54();
    if (os_log_type_enabled(v101, v102))
    {
      v103 = swift_slowAlloc();
      v170 = v67;
      v104 = (uint8_t *)v103;
      v105 = swift_slowAlloc();
      v176[0] = v105;
      *(_DWORD *)v104 = 136315138;
      v169 = (unsigned int (*)(char *, uint64_t))(v104 + 4);
      v106 = sub_23FD7472C();
      sub_23FCC3BF8(1701869940, 0xE400000000000000, v106, v159);
      swift_bridgeObjectRelease();
      v107 = sub_23FD74C0C();
      v175 = sub_23FC9DC40(v107, v108, v176);
      v72 = (uint64_t)v174;
      sub_23FD75044();
      swift_bridgeObjectRelease();
      v109 = *(void (**)(char *, char *))(v153 + 8);
      v109(v100, v99);
      _os_log_impl(&dword_23FBF8000, v101, v102, "'type' key did not return a TypedValue.EnumerationValue from the property dictionary as expected.\n properties['type']: %s", v104, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v105, -1, -1);
      MEMORY[0x2426798D8](v104, -1, -1);

      (*(void (**)(char *, uint64_t))(v171 + 8))(v98, v172);
      v109(v170, v99);
    }
    else
    {

      v119 = *(void (**)(char *, char *))(v153 + 8);
      v119(v100, v99);
      (*(void (**)(char *, uint64_t))(v171 + 8))(v98, v172);
      v119(v67, v99);
    }
LABEL_28:
    v81 = v173;
    v82 = v72;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v81, 1, 1, v82);
  }
  v64((char *)v51, v72);
  v88 = swift_projectBox();
  v90 = v166;
  v89 = v167;
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 16);
  v92 = v165;
  v91(v167, v88, v165);
  swift_release();
  v93 = sub_23FD746E4();
  if (v93 != 0x6C61626F6C67 || v94 != 0xE600000000000000)
  {
    v96 = v93;
    v97 = v94;
    if ((sub_23FD75380() & 1) == 0)
    {
      v120 = v96 == 0x726577736E61 && v97 == 0xE600000000000000;
      v121 = v162;
      v122 = v67;
      if (v120 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v123 = v158;
        sub_23FD724D0();
        v124 = sub_23FD72BE4();
        v125 = sub_23FD74F48();
        if (os_log_type_enabled(v124, v125))
        {
          v126 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v126 = 0;
          _os_log_impl(&dword_23FBF8000, v124, v125, "Extracting answer:SearchAnswerEntity", v126, 2u);
          MEMORY[0x2426798D8](v126, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v171 + 8))(v123, v172);
        v127 = sub_23FD7472C();
        v128 = v173;
        v129 = 0x726577736E61;
        v130 = 0xE600000000000000;
LABEL_38:
        sub_23FCAE7C0(v127, v129, v130, v128);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v92);
        return (*(uint64_t (**)(char *, char *))(v153 + 8))(v122, v121);
      }
      v131 = v96 == 0x6867696C746F7073 && v97 == 0xE900000000000074;
      if (v131 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v132 = v157;
        sub_23FD724D0();
        v133 = sub_23FD72BE4();
        v134 = sub_23FD74F48();
        if (os_log_type_enabled(v133, v134))
        {
          v135 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v135 = 0;
          _os_log_impl(&dword_23FBF8000, v133, v134, "Extracting spotlight:SearchSpotlightEntity", v135, 2u);
          MEMORY[0x2426798D8](v135, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v171 + 8))(v132, v172);
        v127 = sub_23FD7472C();
        v128 = v173;
        v129 = 0x6867696C746F7073;
        v130 = 0xEF746C7573655274;
        goto LABEL_38;
      }
      if (v96 == 0x7469746E45707061 && v97 == 0xE900000000000079)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v137 = sub_23FD75380();
        swift_bridgeObjectRelease();
        if ((v137 & 1) == 0)
        {
          v138 = v155;
          sub_23FD724D0();
          v139 = v154;
          v91(v154, (uint64_t)v167, v92);
          v140 = sub_23FD72BE4();
          v141 = sub_23FD74F54();
          if (os_log_type_enabled(v140, v141))
          {
            v142 = (uint8_t *)swift_slowAlloc();
            v170 = (char *)swift_slowAlloc();
            v176[0] = (uint64_t)v170;
            *(_DWORD *)v142 = 136315138;
            v143 = sub_23FD746E4();
            v175 = sub_23FC9DC40(v143, v144, v176);
            v72 = (uint64_t)v174;
            sub_23FD75044();
            swift_bridgeObjectRelease();
            v145 = *(void (**)(char *, uint64_t))(v166 + 8);
            v145(v139, v92);
            _os_log_impl(&dword_23FBF8000, v140, v141, "Unknown SearchResult Type found. Unable to handle type: %s.", v142, 0xCu);
            v146 = v170;
            swift_arrayDestroy();
            MEMORY[0x2426798D8](v146, -1, -1);
            MEMORY[0x2426798D8](v142, -1, -1);

            (*(void (**)(char *, uint64_t))(v171 + 8))(v155, v172);
            v145(v167, v92);
          }
          else
          {

            v151 = *(void (**)(char *, uint64_t))(v166 + 8);
            v151(v139, v92);
            (*(void (**)(char *, uint64_t))(v171 + 8))(v138, v172);
            v151(v167, v92);
          }
          (*(void (**)(char *, char *))(v153 + 8))(v122, v121);
          goto LABEL_28;
        }
      }
      v147 = v156;
      sub_23FD724D0();
      v148 = sub_23FD72BE4();
      v149 = sub_23FD74F48();
      if (os_log_type_enabled(v148, v149))
      {
        v150 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v150 = 0;
        _os_log_impl(&dword_23FBF8000, v148, v149, "Extracting appEntity:SearchAppEntity", v150, 2u);
        MEMORY[0x2426798D8](v150, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v171 + 8))(v147, v172);
      v127 = sub_23FD7472C();
      v128 = v173;
      v129 = 0x7469746E45707061;
      v130 = 0xE900000000000079;
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRelease();
  v111 = v161;
  v110 = v162;
  v112 = v67;
  v113 = v153;
  sub_23FD724D0();
  v114 = sub_23FD72BE4();
  v115 = sub_23FD74F48();
  if (os_log_type_enabled(v114, v115))
  {
    v116 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v116 = 0;
    _os_log_impl(&dword_23FBF8000, v114, v115, "Extracting globalResult:SearchGlobalEntity", v116, 2u);
    MEMORY[0x2426798D8](v116, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v171 + 8))(v111, v172);
  v117 = sub_23FD7472C();
  sub_23FCAE7C0(v117, 0x65526C61626F6C67, 0xEC000000746C7573, v173);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v92);
  return (*(uint64_t (**)(char *, char *))(v113 + 8))(v112, v110);
}

uint64_t sub_23FCAE7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_23FD72BF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FBFD684(&qword_256F5EB98);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v17 = sub_23FC84D84(a2, a3);
    if ((v18 & 1) != 0)
    {
      v19 = v17;
      v20 = *(_QWORD *)(a1 + 56);
      v21 = sub_23FD74798();
      (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v19, v21);
      v22 = (uint64_t)v16;
      v23 = 0;
    }
    else
    {
      v21 = sub_23FD74798();
      v22 = (uint64_t)v16;
      v23 = 1;
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v22, v23, 1, v21);
    swift_bridgeObjectRelease();
    sub_23FD74798();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, 1, v21) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a4, v16, v21);
      v31 = a4;
      v32 = 0;
      v33 = v21;
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v31, v32, 1, v33);
    }
  }
  else
  {
    v24 = sub_23FD74798();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v16, 1, 1, v24);
  }
  sub_23FCAEB30((uint64_t)v16);
  sub_23FD724D0();
  swift_bridgeObjectRetain_n();
  v25 = sub_23FD72BE4();
  v26 = sub_23FD74F54();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v36 = a4;
    v29 = v28;
    v38 = v28;
    v35 = v8;
    *(_DWORD *)v27 = 136315138;
    swift_bridgeObjectRetain();
    v37 = sub_23FC9DC40(a2, a3, &v38);
    sub_23FD75044();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23FBF8000, v25, v26, "No SearchResult exists for key %s", v27, 0xCu);
    swift_arrayDestroy();
    v30 = v29;
    a4 = v36;
    MEMORY[0x2426798D8](v30, -1, -1);
    MEMORY[0x2426798D8](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v35);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v33 = sub_23FD74798();
  v31 = a4;
  v32 = 1;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v31, v32, 1, v33);
}

uint64_t sub_23FCAEAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5EB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCAEB30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F5EB98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FCAEB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5EB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCAEBB8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 296))(a1, *(_QWORD *)(v1 - 280));
}

uint64_t sub_23FCAEBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8);
  *(_QWORD *)(v2 - 216) = v3;
  return v3(v1, v0);
}

uint64_t sub_23FCAEBE4()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v1 - 144), 1, 1, v0);
}

uint64_t sub_23FCAEBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void sub_23FCAEC00()
{
  sub_23FC998D4();
}

uint64_t sub_23FCAEC0C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t *sub_23FCAEC18()
{
  if (qword_256F5D2D8 != -1)
    swift_once();
  return &qword_256F7F480;
}

uint64_t sub_23FCAEC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v0 = sub_23FD74F90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  sub_23FBFF180();
  v5 = v4 - v3;
  v6 = sub_23FD74F78();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FBFF180();
  v9 = sub_23FD74ABC();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFF180();
  sub_23FC605F8();
  sub_23FD74AB0();
  sub_23FC984E8(&qword_254346B68, 255, v7, MEMORY[0x24BEE5698]);
  sub_23FBFD684(&qword_254346B58);
  sub_23FCAEF20();
  sub_23FD75098();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v5, *MEMORY[0x24BEE5750], v0);
  sub_23FD74FC0();
  objc_opt_self();
  result = swift_dynamicCastObjCClassUnconditional();
  qword_256F7F478 = result;
  return result;
}

uint64_t sub_23FCAEE1C()
{
  if (qword_256F5D2D0 != -1)
    swift_once();
  return sub_23FD75008();
}

uint64_t sub_23FCAEE68()
{
  uint64_t result;

  type metadata accessor for SessionControlActor();
  result = swift_allocObject();
  qword_256F7F480 = result;
  return result;
}

uint64_t type metadata accessor for SessionControlActor()
{
  return objc_opt_self();
}

uint64_t sub_23FCAEEB0(uint64_t a1, uint64_t a2)
{
  return sub_23FC984E8(&qword_256F5E288, a2, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
}

uint64_t sub_23FCAEEDC()
{
  return sub_23FCAEE18();
}

uint64_t sub_23FCAEEF0()
{
  sub_23FCAEC18();
  return swift_retain();
}

uint64_t sub_23FCAEF0C()
{
  return sub_23FCAEE1C();
}

unint64_t sub_23FCAEF20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254346B60;
  if (!qword_254346B60)
  {
    v1 = sub_23FBFEDE8(&qword_254346B58);
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254346B60);
  }
  return result;
}

uint64_t sub_23FCAEF64(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v7 = *(_QWORD *)(sub_23FD740CC() - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = *(_QWORD *)(v7 + 72);
    --v4;
    v10 = a3 + ((v8 + 32) & ~v8) + v9 * v4;
    v11 = -v9;
    while (1)
    {
      v12 = a1(v10);
      if (v3 || (v12 & 1) != 0)
        break;
      --v4;
      v10 += v11;
      if (v4 == -1)
        return 0;
    }
  }
  return v4;
}

uint64_t sub_23FCAF018()
{
  return sub_23FD73D6C();
}

void sub_23FCAF040()
{
  uint64_t v0;

  *(_BYTE *)(v0
           + OBJC_IVAR____TtCO23IntelligenceFlowRuntime29SessionCoordinatorConversions17ConversionContext_statementIdIsInert) = 1;
}

void sub_23FCAF054()
{
  uint64_t v0;

  *(_BYTE *)(v0
           + OBJC_IVAR____TtCO23IntelligenceFlowRuntime29SessionCoordinatorConversions17ConversionContext_statementIdIsInert) = 0;
}

uint64_t sub_23FCAF064()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime29SessionCoordinatorConversions17ConversionContext_statementIdIsInert) & 1) != 0)
    return sub_23FD71564();
  sub_23FD73D84();
  sub_23FD73F04();
  return swift_release();
}

uint64_t sub_23FCAF0CC()
{
  uint64_t v0;

  v0 = sub_23FD73D9C();
  sub_23FBFF0E4(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_23FCAF10C()
{
  return type metadata accessor for SessionCoordinatorConversions.ConversionContext();
}

uint64_t type metadata accessor for SessionCoordinatorConversions.ConversionContext()
{
  uint64_t result;

  result = qword_256F604D8;
  if (!qword_256F604D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FCAF14C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD73D9C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FCAF1C0()
{
  return sub_23FCAF018();
}

uint64_t sub_23FCAF1E0()
{
  return sub_23FCAF064();
}

void sub_23FCAF200()
{
  sub_23FCAF054();
}

void sub_23FCAF220()
{
  sub_23FCAF040();
}

uint64_t sub_23FCAF240(uint64_t a1, int64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t *v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  int v292;
  unsigned int *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  unint64_t v299;
  unint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char v307;
  char v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  void (**v319)(uint64_t, uint64_t, _QWORD);
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t (*v324)(uint64_t, uint64_t, _QWORD);
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void (*v332)(uint64_t, uint64_t);
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  unint64_t v339;
  uint64_t (*v340)(uint64_t, uint64_t, uint64_t);
  uint64_t v341;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t (*v346)(uint64_t, uint64_t, uint64_t);
  uint64_t v347;
  uint64_t v348;
  uint64_t (*v349)(uint64_t, unint64_t);
  uint64_t v350;
  BOOL v351;
  BOOL v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  void (*v358)(uint64_t, uint64_t, uint64_t);
  uint64_t v359;
  uint64_t v360;
  NSObject *v361;
  os_log_type_t v362;
  uint8_t *v363;
  uint64_t v364;
  unint64_t v365;
  uint64_t v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t (*v369)(uint64_t, uint64_t, uint64_t);
  unint64_t v370;
  _DWORD *v371;
  uint64_t v372;
  uint64_t (*v373)(uint64_t, uint64_t, _QWORD);
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  unint64_t v379;
  unint64_t v380;
  uint64_t v381;
  _QWORD *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  unint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t (*v399)(uint64_t, uint64_t, uint64_t);
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t (*v407)(uint64_t, uint64_t, uint64_t);
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  void (*v414)(uint64_t, uint64_t);
  unint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t (*v419)(uint64_t, _QWORD);
  uint64_t v420;
  uint64_t *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t (*v425)(uint64_t, uint64_t, uint64_t);
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  _QWORD *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t (*v441)(uint64_t, uint64_t, uint64_t);
  uint64_t v442;
  uint8_t *v443;
  _QWORD *v444;
  unint64_t v445;
  uint64_t (*v446)(uint64_t, uint64_t, uint64_t);
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t (*v451)(uint64_t, uint64_t, _QWORD);
  NSObject *v452;
  os_log_type_t v453;
  uint8_t *v454;
  void (*v455)(uint64_t, uint64_t);
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint8_t *v460;
  uint64_t *v461;
  char *v462;
  uint64_t (**v463)(uint64_t, uint64_t, uint64_t);
  char *v464;
  uint64_t v465;
  unint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  void (*v470)(unint64_t, uint64_t, uint64_t);
  uint8_t *v471;
  BOOL v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  _QWORD *(*v483)(_QWORD *__return_ptr, uint64_t *);
  uint64_t v484;
  char v485;
  _QWORD *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t (*v489)(uint64_t, unint64_t);
  unint64_t v490;
  NSObject *v491;
  os_log_type_t v492;
  uint8_t *v493;
  uint64_t v494;
  uint64_t v495;
  unint64_t v496;
  uint64_t v497;
  _BYTE *v498;
  uint64_t v499;
  unint64_t v500;
  void (*v501)(uint64_t *, _QWORD);
  uint64_t v502;
  uint64_t v503;
  _QWORD *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  NSObject *v508;
  os_log_type_t v509;
  uint8_t *v510;
  uint64_t v511;
  unint64_t v512;
  uint64_t v513;
  _QWORD *v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t (*v520)(uint64_t, uint64_t);
  uint64_t (*v521)(uint64_t, _QWORD);
  uint64_t (*v522)(uint64_t, _QWORD);
  uint64_t (*v523)(uint64_t, _QWORD);
  uint64_t v524;
  uint64_t *v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t *v532;
  uint64_t v533;
  char *v534;
  uint64_t v535;
  char *v536;
  char *v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  int v542;
  uint64_t (**v543)(uint64_t, uint64_t, uint64_t);
  uint64_t *v544;
  uint64_t (*v545)(uint64_t, uint64_t, _QWORD);
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint8_t *v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t (*v558)(uint64_t, _QWORD);
  uint64_t (*v559)(uint64_t, _QWORD);
  uint64_t *v560;
  uint64_t (*v561)(uint64_t, uint64_t, uint64_t);
  uint64_t v562;
  uint64_t *v563;
  uint64_t v564;
  _BYTE *v565;
  _BYTE *v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t (*v569)(uint64_t, uint64_t, uint64_t);
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t (*v578)(uint64_t, uint64_t, uint64_t);
  uint64_t v579;
  char *v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t (*v588)(uint64_t, uint64_t, _QWORD);
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t (*v597)(uint64_t, uint64_t, uint64_t);
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t (*v608)(uint64_t, uint64_t, _QWORD);
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  void (*v615)(uint64_t, uint64_t, uint64_t);
  uint64_t v616;
  uint64_t v617;
  void (*v618)(uint64_t, uint64_t);
  uint64_t v619;
  unint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t (*v625)(uint64_t, uint64_t, uint64_t);
  uint64_t *v626;
  uint64_t v627;
  uint8_t *v628;
  char *v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t (*v635)(uint64_t, uint64_t, _QWORD);
  uint64_t v636;
  uint64_t v637;
  uint64_t *v638;
  uint64_t v639;
  unsigned int *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t (*v646)(uint64_t, uint64_t, _QWORD);
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t (*v656)(uint64_t, uint64_t, _QWORD);
  uint64_t v657;
  uint64_t v658;
  void (*v659)(uint64_t, uint64_t, uint64_t);
  NSObject *v660;
  os_log_type_t v661;
  uint8_t *v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  unint64_t v666;
  uint64_t v667;
  uint64_t (*v668)(uint64_t, _QWORD);
  uint64_t (*v669)(uint64_t, _QWORD);
  uint64_t *v670;
  _QWORD v671[2];
  uint64_t v672;
  uint64_t v673;
  uint64_t *v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  char v693[8];
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  char v698[8];
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t *v703;
  unint64_t v704;
  uint64_t v705;
  char v706[8];
  uint64_t *v707;
  uint64_t *v708;
  uint64_t v709;
  char v710[8];
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  char v716[8];
  _QWORD v717[3];
  uint64_t v718;
  uint64_t v719;
  _QWORD v720[2];
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724[2];
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  _QWORD *v728;
  unint64_t v729;
  uint64_t v730;
  _QWORD v731[3];
  uint64_t v732;
  uint64_t v733;
  _QWORD *v734;
  char v735[8];
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  _QWORD v741[2];
  int64_t v742;
  uint8_t *v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  __int128 v748;
  unsigned int v749;
  uint64_t v750;
  uint64_t *v751;
  uint64_t v752;
  uint64_t v753;
  _QWORD v754[2];
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t *v759;
  int64_t v760;
  uint64_t v761;
  __int128 v762;
  char v763[8];
  uint64_t v764;
  uint64_t v765;
  char *v766;
  uint64_t v767;
  unint64_t v768;
  void (*v769)(unint64_t, uint64_t *, uint64_t);
  uint64_t (**v770)(uint64_t, uint64_t, uint64_t);
  void (**v771)(uint64_t, uint64_t, _QWORD);
  uint8_t *v772;
  uint64_t v773;
  char v774[24];
  uint64_t v775;
  uint64_t v776;
  char v777[8];
  uint64_t v778;

  v755 = a4;
  v759 = a3;
  v742 = a2;
  v6 = sub_23FD71948();
  sub_23FBFF0B8(v6, (uint64_t)v693);
  sub_23FBFEFBC(v7);
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v10);
  v11 = sub_23FD71960();
  sub_23FBFF0B8(v11, (uint64_t)v698);
  sub_23FBFEFBC(v12);
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFF218();
  sub_23FBFEFAC(v17);
  v18 = sub_23FD71A14();
  sub_23FBFF0B8(v18, (uint64_t)v717);
  sub_23FBFEFBC(v19);
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFF218();
  sub_23FBFEFAC(v24);
  v25 = sub_23FD739D0();
  sub_23FBFF0B8(v25, (uint64_t)v716);
  sub_23FBFEFBC(v26);
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v29);
  v30 = sub_23FD71A20();
  sub_23FBFF0B8(v30, (uint64_t)v706);
  sub_23FBFEFBC(v31);
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v34);
  v35 = sub_23FD71A50();
  sub_23FBFF0B8(v35, (uint64_t)&v711);
  sub_23FBFEFBC(v36);
  MEMORY[0x24BDAC7A8](v37, v38);
  sub_23FBFEFE0();
  sub_23FC15A3C(v39);
  sub_23FBFD684(&qword_256F60568);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v42, v43);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v44, v45);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v46, v47);
  sub_23FBFF218();
  sub_23FC15A3C(v48);
  sub_23FBFD684(&qword_256F60570);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v49, v50);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FBFF218();
  sub_23FBFEFAC(v53);
  v54 = sub_23FD719C0();
  sub_23FBFF0B8(v54, (uint64_t)v710);
  sub_23FBFEFBC(v55);
  MEMORY[0x24BDAC7A8](v56, v57);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v58);
  v59 = sub_23FD71780();
  sub_23FBFF0B8(v59, (uint64_t)&v752);
  sub_23FBFEFBC(v60);
  MEMORY[0x24BDAC7A8](v61, v62);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v63);
  v64 = sub_23FD71870();
  sub_23FBFF0B8(v64, (uint64_t)v720);
  sub_23FBFEFBC(v65);
  MEMORY[0x24BDAC7A8](v66, v67);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v68);
  v69 = sub_23FD71E34();
  sub_23FBFF0B8(v69, (uint64_t)v763);
  sub_23FBFEFBC(v70);
  MEMORY[0x24BDAC7A8](v71, v72);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v73, v74);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v75, v76);
  sub_23FBFF218();
  sub_23FBFEFAC(v77);
  v78 = sub_23FD71810();
  sub_23FBFF0B8(v78, (uint64_t)v731);
  sub_23FBFEFBC(v79);
  MEMORY[0x24BDAC7A8](v80, v81);
  sub_23FBFEFE0();
  sub_23FC15A3C(v82);
  sub_23FBFD684(&qword_256F5EAE8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v83, v84);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v85);
  sub_23FD71C84();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v86, v87);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v88);
  sub_23FD73A0C();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v89, v90);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v91);
  v92 = sub_23FD730F4();
  sub_23FBFF0B8(v92, (uint64_t)v724);
  sub_23FBFEFBC(v93);
  MEMORY[0x24BDAC7A8](v94, v95);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v96);
  v97 = sub_23FD740CC();
  sub_23FBFF0B8(v97, (uint64_t)v741);
  sub_23FBFEFBC(v98);
  MEMORY[0x24BDAC7A8](v99, v100);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v101);
  v102 = sub_23FD718B8();
  sub_23FBFF0B8(v102, (uint64_t)v735);
  sub_23FBFEFBC(v103);
  MEMORY[0x24BDAC7A8](v104, v105);
  sub_23FBFEFE0();
  sub_23FC15A3C(v106);
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v107, v108);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v109, v110);
  sub_23FBFF218();
  sub_23FBFEFAC(v111);
  v112 = sub_23FD73E08();
  sub_23FBFF0B8(v112, (uint64_t)&v729);
  sub_23FBFEFBC(v113);
  MEMORY[0x24BDAC7A8](v114, v115);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v116, v117);
  sub_23FBFF218();
  sub_23FBFEFAC(v118);
  v119 = sub_23FD71834();
  sub_23FBFF0B8(v119, (uint64_t)&v747);
  sub_23FBFEFBC(v120);
  MEMORY[0x24BDAC7A8](v121, v122);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v123, v124);
  sub_23FBFF218();
  sub_23FBFEFAC(v125);
  v126 = sub_23FD73F40();
  sub_23FBFF0B8(v126, (uint64_t)&v732);
  sub_23FBFEFBC(v127);
  MEMORY[0x24BDAC7A8](v128, v129);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v130);
  v131 = sub_23FD73F64();
  sub_23FBFF0B8(v131, (uint64_t)&v734);
  sub_23FBFEFBC(v132);
  MEMORY[0x24BDAC7A8](v133, v134);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v135);
  v136 = sub_23FD73754();
  sub_23FBFF0B8(v136, (uint64_t)&v743);
  sub_23FBFEFBC(v137);
  MEMORY[0x24BDAC7A8](v138, v139);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v140);
  v141 = sub_23FD722E4();
  sub_23FBFF0B8(v141, (uint64_t)&v742);
  sub_23FBFEFBC(v142);
  MEMORY[0x24BDAC7A8](v143, v144);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v145, v146);
  sub_23FBFF218();
  sub_23FBFEFAC(v147);
  v148 = sub_23FD72BF0();
  sub_23FBFF0B8(v148, (uint64_t)&v765);
  sub_23FBFEFBC(v149);
  MEMORY[0x24BDAC7A8](v150, v151);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v152, v153);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v154, v155);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v156, v157);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v158, v159);
  sub_23FBFF218();
  sub_23FBFEFAC(v160);
  v161 = sub_23FD7184C();
  sub_23FBFF0B8(v161, (uint64_t)v754);
  sub_23FBFEFBC(v162);
  MEMORY[0x24BDAC7A8](v163, v164);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v165, v166);
  sub_23FBFF218();
  sub_23FC15A3C(v167);
  sub_23FBFD684(&qword_256F60578);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v168, v169);
  sub_23FBFEFE0();
  sub_23FC15A3C(v170);
  sub_23FBFD684(qword_254346A10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v171, v172);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v173, v174);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v175, v176);
  sub_23FBFF218();
  sub_23FC15A3C(v177);
  sub_23FBFD684(&qword_256F60580);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v178, v179);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v180);
  v181 = sub_23FD71858();
  sub_23FBFF0B8(v181, (uint64_t)&v713);
  sub_23FBFEFBC(v182);
  MEMORY[0x24BDAC7A8](v183, v184);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v185);
  v186 = sub_23FD71FA8();
  sub_23FBFEFBC(*(_QWORD *)(v186 - 8));
  MEMORY[0x24BDAC7A8](v187, v188);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v189);
  v190 = sub_23FD71AC8();
  v191 = *(_QWORD *)(v190 - 8);
  MEMORY[0x24BDAC7A8](v190, v192);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v193, v194);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v195, v196);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v197, v198);
  v200 = (uint64_t)v671 - v199;
  v201 = sub_23FD717BC();
  sub_23FBFF0B8(v201, (uint64_t)&v755);
  sub_23FBFEFBC(v202);
  MEMORY[0x24BDAC7A8](v203, v204);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v205);
  v206 = sub_23FD7319C();
  v772 = *(uint8_t **)(v206 - 8);
  v773 = v206;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v207, v208);
  sub_23FBFEFCC();
  v765 = v209;
  MEMORY[0x24BDAC7A8](v210, v211);
  sub_23FBFF218();
  sub_23FBFEFAC(v212);
  v213 = sub_23FD73D9C();
  sub_23FBFF0B8(v213, (uint64_t)v777);
  sub_23FBFEFBC(v214);
  MEMORY[0x24BDAC7A8](v215, v216);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v217, v218);
  sub_23FBFF218();
  sub_23FBFEFAC(v219);
  v220 = sub_23FD7157C();
  v770 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v220 - 8);
  v771 = (void (**)(uint64_t, uint64_t, _QWORD))v220;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v221, v222);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v223, v224);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v225, v226);
  sub_23FC0FFF4();
  v764 = v227;
  MEMORY[0x24BDAC7A8](v228, v229);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v230, v231);
  sub_23FBFF218();
  sub_23FBFEFAC(v232);
  v233 = sub_23FD734A8();
  v768 = *(_QWORD *)(v233 - 8);
  v769 = (void (*)(unint64_t, uint64_t *, uint64_t))v233;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v234, v235);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v236, v237);
  sub_23FBFF218();
  sub_23FBFEFAC(v238);
  v239 = sub_23FD74798();
  sub_23FBFF0B8(v239, (uint64_t)&v778);
  sub_23FBFEFBC(v240);
  MEMORY[0x24BDAC7A8](v241, v242);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v243, v244);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v245, v246);
  sub_23FBFF218();
  sub_23FC15A3C(v247);
  sub_23FBFD684(&qword_256F5F0E8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v248, v249);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v250, v251);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v252, v253);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v254, v255);
  sub_23FBFF218();
  sub_23FBFEFAC(v256);
  v257 = sub_23FD71A98();
  sub_23FBFF0B8(v257, (uint64_t)&v761);
  sub_23FBFEFBC(v258);
  MEMORY[0x24BDAC7A8](v259, v260);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v261);
  v262 = sub_23FD7409C();
  v766 = *(char **)(v262 - 8);
  v767 = v262;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v263, v264);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v265, v266);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v267, v268);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v269, v270);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v271, v272);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v273, v274);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v275, v276);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v277, v278);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v279, v280);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v281, v282);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v283, v284);
  v286 = (_QWORD *)((char *)v671 - v285);
  v287 = sub_23FD71AEC();
  v288 = *(_QWORD *)(v287 - 8);
  MEMORY[0x24BDAC7A8](v287, v289);
  v291 = (char *)v671 - ((v290 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD71E10();
  v292 = (*(uint64_t (**)(char *, uint64_t))(v288 + 88))(v291, v287);
  if (v292 == *MEMORY[0x24BE52D10])
  {
    v293 = (unsigned int *)MEMORY[0x24BE56AF0];
    sub_23FC15950((uint64_t)v291, *(uint64_t (**)(uint64_t, uint64_t))(v288 + 96));
    v744 = v191;
    sub_23FC092BC(v200, (uint64_t)v291, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v191 + 32));
    a1 = v200;
    v294 = sub_23FD71ABC();
    v288 = v190;
    v291 = (char *)v200;
    v671[0] = v200;
    if (v294)
    {
      v741[0] = v190;
      v757 = 0;
      v747 = v294;
      sub_23FCB31A8(v294 + 64);
      v191 = v296 & v295;
      v749 = *v293;
      v298 = &qword_256F5DB18;
      v746 = (unint64_t)(v297 + 63) >> 6;
      v740 = v746 - 1;
      v748 = xmmword_23FD769D0;
      v287 = v758;
      v186 = (uint64_t)v751;
      v291 = (char *)v754[0];
      if ((v296 & v295) == 0)
        goto LABEL_6;
LABEL_4:
      v299 = __clz(__rbit64(v191));
      v191 &= v191 - 1;
      v300 = v299 | (v757 << 6);
LABEL_5:
      v301 = *(_QWORD *)(v747 + 56);
      v302 = (_QWORD *)(*(_QWORD *)(v747 + 48) + 16 * v300);
      v303 = v302[1];
      *(_QWORD *)v186 = *v302;
      *(_QWORD *)(v186 + 8) = v303;
      v304 = v301 + *(_QWORD *)(v287 + 72) * v300;
      v305 = sub_23FCB31A0();
      sub_23FC76248(v186 + *(int *)(v305 + 48), v304, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v287 + 16));
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v186, 0, 1, v305);
      swift_bridgeObjectRetain();
      while (1)
      {
        v315 = v186;
        v316 = v750;
        sub_23FC08FD8(v315, v750, &qword_256F5F0E8);
        a1 = sub_23FCB31A0();
        sub_23FC100EC(v316, 1, a1);
        if (v351)
          break;
        v317 = v316 + *(int *)(a1 + 48);
        v318 = v761;
        sub_23FC76248(v761, v317, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v287 + 32));
        sub_23FBFEE2C(&qword_256F5DAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
        v319 = v771;
        v320 = sub_23FD74B40();
        sub_23FC76248(v752, v318, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v287 + 16));
        v321 = v762;
        sub_23FD73490();
        sub_23FCB31DC();
        sub_23FCB3150();
        sub_23FCB312C(v322, v323, v324);
        sub_23FD73D84();
        sub_23FC15950(v320, *((uint64_t (**)(uint64_t, uint64_t))v291 + 1));
        sub_23FD73F10();
        swift_release();
        v325 = v764;
        sub_23FD71564();
        sub_23FC092BC(v753, v325, v770[2]);
        sub_23FBFD684(&qword_256F60598);
        sub_23FCB32D0();
        v328 = v327 & ~v326;
        v329 = swift_allocObject();
        *(_OWORD *)(v329 + 16) = v748;
        v319[2](v329 + v328, v321, v769);
        v330 = v765;
        sub_23FD73184();
        v331 = sub_23FCB32B8();
        v332(v331, v330);
        (*((void (**)(uint64_t, _QWORD, uint64_t))v766 + 13))(v329, v749, v767);
        v333 = v759;
        v200 = *v759;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FCB32AC();
          v200 = v336;
        }
        v288 = *(_QWORD *)(v200 + 16);
        a1 = v288 + 1;
        v186 = (uint64_t)v751;
        v298 = &qword_256F5DB18;
        if (v288 >= *(_QWORD *)(v200 + 24) >> 1)
        {
          sub_23FCB32AC();
          v200 = v337;
        }
        *(_QWORD *)(v200 + 16) = a1;
        sub_23FCB310C();
        (*(void (**)(unint64_t, int64_t))(v335 + 32))(v334 + *(_QWORD *)(v335 + 72) * v288, v760);
        *v333 = v200;
        (*((void (**)(uint64_t, uint64_t))v772 + 1))(v765, v773);
        ((void (*)(uint64_t, void (**)(uint64_t, uint64_t, _QWORD)))v770[1])(v764, v771);
        sub_23FCB31F8(*(uint64_t (**)(_QWORD))(v768 + 8));
        v287 = v758;
        sub_23FC5C178(v761, *(uint64_t (**)(uint64_t, uint64_t))(v758 + 8));
        if (v191)
          goto LABEL_4;
LABEL_6:
        if (__OFADD__(v757, 1))
        {
          __break(1u);
LABEL_127:
          sub_23FCB3174();
          sub_23FD73D78();
          sub_23FC1046C(v755, v191, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v754[0] + 40));
          v501 = (void (*)(uint64_t *, _QWORD))sub_23FD73D60();
          v502 = sub_23FD73DD8();
          sub_23FCB3268();
          sub_23FCB29E0(v503);
          ((void (*)(char *, _QWORD))v502)(v774, 0);
          v504 = (_QWORD *)v200;
          v501(&v775, 0);
          v505 = v200;
          v506 = v722;
          sub_23FC100EC(v505, 1, v722);
          if (!v351)
          {
            sub_23FCB3174();
            sub_23FD740A8();
            sub_23FBFF204((uint64_t)v504, *(uint64_t (**)(uint64_t, uint64_t))(v720[0] + 8));
            v537 = v766;
            v538 = v712;
            sub_23FC76248(v712, v502, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 4));
            sub_23FCB2FEC();
            sub_23FCB3070();
            sub_23FCB3190();
            sub_23FCB310C();
            sub_23FC76248(v539 + *((_QWORD *)v537 + 9) * v502, v538, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v537 + 2));
            *v504 = v506;
            sub_23FC5C178(v538, *((uint64_t (**)(uint64_t, uint64_t))v537 + 1));
            sub_23FCA96B4();
            goto LABEL_133;
          }
          sub_23FBFEF74((uint64_t)v504, (uint64_t *)&unk_256F61700);
          sub_23FCB3280();
          sub_23FD724C4();
          v507 = v725;
          sub_23FC5AE8C(v713, (uint64_t)v298, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v725 + 16));
          v508 = sub_23FD72BE4();
          v509 = sub_23FD74F54();
          if (os_log_type_enabled(v508, v509))
          {
            v510 = (uint8_t *)sub_23FBFEFF4();
            v775 = sub_23FBFEFF4();
            *(_DWORD *)v510 = 136315138;
            v511 = sub_23FD71828();
            v513 = sub_23FCB3220(v511, v512);
            sub_23FCB30F0(v513);
            sub_23FD75044();
            sub_23FC1002C();
            sub_23FCB3250();
            sub_23FBFF114(&dword_23FBF8000, v508, v509, "received empty mock transcript: %s", v510);
            swift_arrayDestroy();
            sub_23FBFEFA0();
          }
          v489 = *(uint64_t (**)(uint64_t, unint64_t))(v507 + 8);
          sub_23FCB3250();

          sub_23FCA9784((uint64_t)v504, *(uint64_t (**)(uint64_t, _QWORD))(v739 + 8));
          sub_23FCB2D3C();
          sub_23FC5A704();
          *v565 = 2;
          sub_23FCB3298();
          v499 = (uint64_t)v298;
          v500 = v288;
          return v489(v499, v500);
        }
        sub_23FCB32C4();
        if (v307 != v308)
        {
          v309 = *(_QWORD *)(v745 + 8 * v306);
          if (v309)
            goto LABEL_10;
          v310 = v306 + 1;
          v757 = v306;
          if (v306 + 1 < v746)
          {
            v309 = *(_QWORD *)(v745 + 8 * v310);
            if (v309)
              goto LABEL_13;
            v757 = v306 + 1;
            if (v306 + 2 < v746)
            {
              v309 = *(_QWORD *)(v745 + 8 * (v306 + 2));
              if (v309)
              {
                v306 += 2;
                goto LABEL_10;
              }
              v310 = v306 + 3;
              v757 = v306 + 2;
              if (v306 + 3 < v746)
              {
                v309 = *(_QWORD *)(v745 + 8 * v310);
                if (!v309)
                {
                  while (!__OFADD__(v310, 1))
                  {
                    sub_23FCB32C4();
                    if (v307 == v308)
                    {
                      v757 = v740;
                      goto LABEL_24;
                    }
                    v309 = *(_QWORD *)(v745 + 8 * v306);
                    v310 = v311 + 1;
                    if (v309)
                      goto LABEL_10;
                  }
                  __break(1u);
LABEL_152:
                  if (v292 == *MEMORY[0x24BE52BC8])
                  {
                    sub_23FCB30D0(*(uint64_t (**)(uint64_t, _QWORD))(v288 + 96));
                    sub_23FCB3138();
                    v586 = sub_23FCB31E8();
                    sub_23FCB3104(v586, v587, v588);
                    sub_23FD719B4();
                    v590 = v589;
                    sub_23FD71564();
                    sub_23FD71990();
                    sub_23FCB3144();
                    sub_23FD7199C();
                    v591 = v186;
                    v592 = v682;
                    sub_23FCB2C88(v591, v682);
                    v593 = 1;
                    sub_23FC100EC(v592, 1, v687);
                    if (!v351)
                    {
                      v594 = v680;
                      v595 = sub_23FCB31DC();
                      v596 = v687;
                      sub_23FC5AE8C(v595, v682, v597);
                      v598 = sub_23FD71774();
                      v600 = v599;
                      v601 = MEMORY[0x2426757F8]();
                      MEMORY[0x242677934](v598, v600, v601);
                      (*(void (**)(uint64_t, uint64_t))(v594 + 8))(1, v596);
                      v593 = 0;
                    }
                    v602 = sub_23FD73BA4();
                    sub_23FCB328C(v683, v603, v604, v602);
                    sub_23FBFEF74(v685, &qword_256F60568);
                    sub_23FCB3160();
                    v605 = sub_23FD737D8();
                    sub_23FCB30DC(v605, *MEMORY[0x24BE56BB8]);
                    sub_23FCB2FEC();
                    sub_23FCB2FF8();
                    sub_23FCB3008();
                    *(_QWORD *)v593 = v590;
                    sub_23FCA96B4();
                    v420 = v686;
                    v421 = (uint64_t *)v710;
                    return v419(v420, *(v421 - 32));
                  }
                  if (v292 == *MEMORY[0x24BE52C28])
                  {
                    sub_23FCB30D0(*(uint64_t (**)(uint64_t, _QWORD))(v288 + 96));
                    sub_23FCB3138();
                    v606 = sub_23FCB31E8();
                    v609 = sub_23FCB3104(v606, v607, v608);
                    v610 = MEMORY[0x242675798](v609);
                    v611 = *(_QWORD *)(v610 + 16);
                    if (v611)
                    {
                      v775 = MEMORY[0x24BEE4AF8];
                      sub_23FC9B944();
                      sub_23FC102C4();
                      v613 = v610 + v612;
                      v773 = *(_QWORD *)(v614 + 72);
                      v615 = *(void (**)(uint64_t, uint64_t, uint64_t))(v614 + 16);
                      do
                      {
                        v616 = v694;
                        v617 = v696;
                        v615(v694, v613, v696);
                        v615(v695, v616, v617);
                        sub_23FD739E8();
                        sub_23FCA96B4();
                        v618(v616, v617);
                        v619 = v775;
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        {
                          sub_23FC9B944();
                          v619 = v775;
                        }
                        v620 = *(_QWORD *)(v619 + 16);
                        if (v620 >= *(_QWORD *)(v619 + 24) >> 1)
                        {
                          sub_23FC9B944();
                          v619 = v775;
                        }
                        *(_QWORD *)(v619 + 16) = v620 + 1;
                        sub_23FC102C4();
                        v200 = v697;
                        sub_23FCB3104(v619 + v621 + *(_QWORD *)(v622 + 72) * v620, v697, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v622 + 32));
                        v775 = v619;
                        v613 += v773;
                        --v611;
                      }
                      while (v611);
                    }
                    swift_bridgeObjectRelease();
                    sub_23FD719F0();
                    sub_23FCB3268();
                    sub_23FD719FC();
                    v641 = v200;
                    v642 = v678;
                    sub_23FCB2C88(v641, v678);
                    v643 = 1;
                    sub_23FC100EC(v642, 1, v687);
                    if (!v351)
                    {
                      v644 = v680;
                      v645 = sub_23FCB31DC();
                      sub_23FBFF058(v645, v678, v646);
                      v611 = sub_23FD71774();
                      v648 = v647;
                      v649 = MEMORY[0x2426757F8]();
                      MEMORY[0x242677934](v611, v648, v649);
                      sub_23FBFF204(1, *(uint64_t (**)(uint64_t, uint64_t))(v644 + 8));
                      v643 = 0;
                    }
                    v650 = sub_23FD73BA4();
                    sub_23FCB328C(v679, v651, v652, v650);
                    sub_23FBFEF74(v681, &qword_256F60568);
                    sub_23FCB3274();
                    v653 = sub_23FD737B4();
                    sub_23FCB30DC(v653, *MEMORY[0x24BE56BB8]);
                    sub_23FCB2FEC();
                    sub_23FCB2FF8();
                    sub_23FCB3008();
                    *(_QWORD *)v643 = v611;
                    sub_23FCA96B4();
                    v420 = v684;
                    v421 = (uint64_t *)v706;
                    return v419(v420, *(v421 - 32));
                  }
LABEL_166:
                  if (v292 == *MEMORY[0x24BE52A48])
                  {
                    sub_23FCB30D0(*(uint64_t (**)(uint64_t, _QWORD))(v288 + 96));
                    v623 = v677;
                    v624 = v676;
                    sub_23FBFF058(v676, (uint64_t)v291, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v677 + 32));
                    v625 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v623 + 16);
                    v626 = v674;
                    sub_23FC1046C((uint64_t)v674, v624, v625);
                    v776 = sub_23FCAF10C();
                    sub_23FBFEE2C(&qword_256F60588, (uint64_t (*)(uint64_t))type metadata accessor for SessionCoordinatorConversions.ConversionContext, (uint64_t)&unk_23FD78280);
                    sub_23FCB30BC(v627);
                    v628 = v743;
                    sub_23FD737E4();
                    if (!v628)
                    {
                      v629 = v766;
                      v630 = v675;
                      sub_23FC5A8C8(v675, *MEMORY[0x24BE56BB8], *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
                      sub_23FCB2FEC();
                      sub_23FCB3070();
                      sub_23FCB3190();
                      sub_23FCB310C();
                      sub_23FC5A8C8(v631 + *((_QWORD *)v629 + 9) * v624, v630, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v629 + 4));
                      *v626 = v200;
                    }
                    sub_23FCA96B4();
                    v350 = v676;
                    v536 = v698;
LABEL_136:
                    v370 = *((_QWORD *)v536 - 32);
                    return v349(v350, v370);
                  }
                  if (v292 == *MEMORY[0x24BE52A40])
                  {
                    sub_23FCB30D0(*(uint64_t (**)(uint64_t, _QWORD))(v288 + 96));
                    v632 = v673;
                    v633 = sub_23FCB3228();
                    sub_23FCB312C(v633, v634, v635);
                    v636 = v754[0];
                    v637 = v756;
                    sub_23FBFF058(v756, v755, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v754[0] + 16));
                    sub_23FD73D84();
                    sub_23FBFF204(v637, *(uint64_t (**)(uint64_t, uint64_t))(v636 + 8));
                    sub_23FCB3200();
                    sub_23FC58AC8();
                    sub_23FCB3174();
                    v638 = (uint64_t *)v291;
                    sub_23FD71930();
                    sub_23FD7193C();
                    sub_23FCB3160();
                    v639 = sub_23FD73790();
                    v640 = (unsigned int *)MEMORY[0x24BE56BB0];
LABEL_177:
                    sub_23FCB30DC(v639, *v640);
                    sub_23FCB2FEC();
                    sub_23FCB2FF8();
                    sub_23FCB3008();
                    *v638 = v637;
                    return (*(uint64_t (**)(char *, uint64_t))(v632 + 8))(v291, v287);
                  }
                  if (v292 == *MEMORY[0x24BE52C68])
                  {
                    sub_23FCB30D0(*(uint64_t (**)(uint64_t, _QWORD))(v288 + 96));
                    v632 = v680;
                    v654 = sub_23FCB3228();
                    sub_23FCB312C(v654, v655, v656);
                    v638 = (uint64_t *)v291;
                    sub_23FD71774();
                    v637 = v657;
                    MEMORY[0x2426757F8]();
                    v658 = sub_23FCB3160();
                    v639 = MEMORY[0x242677934](v658);
                    v640 = (unsigned int *)MEMORY[0x24BE56C68];
                    goto LABEL_177;
                  }
                  if (v292 != *MEMORY[0x24BE529B8])
                  {
                    sub_23FCB3268();
                    sub_23FD724C4();
                    v659 = *(void (**)(uint64_t, uint64_t, uint64_t))(v737 + 16);
                    v659(v672, a1, v738);
                    v660 = sub_23FD72BE4();
                    v661 = sub_23FD74F60();
                    if (sub_23FC15918(v661))
                    {
                      v662 = (uint8_t *)sub_23FBFEFF4();
                      v773 = sub_23FBFEFF4();
                      v775 = v773;
                      *(_DWORD *)v662 = 136315138;
                      v771 = (void (**)(uint64_t, uint64_t, _QWORD))(v662 + 4);
                      v772 = v662;
                      v663 = v672;
                      v664 = v738;
                      v659(v733, v672, v738);
                      v665 = sub_23FD74C0C();
                      v667 = sub_23FCB3220(v665, v666);
                      sub_23FCB30F0(v667);
                      sub_23FD75044();
                      swift_bridgeObjectRelease();
                      (*(void (**)(uint64_t, uint64_t))(v737 + 8))(v663, v664);
                      sub_23FBFF114(&dword_23FBF8000, v660, (os_log_type_t)v191, "Client posted unknown message %s", v772);
                      sub_23FCB31C8();
                      sub_23FBFEFA0();
                    }
                    sub_23FCA96B4();
                    sub_23FCA9784(v672, v668);

                    sub_23FCA96B4();
                    sub_23FCA9784(v671[1], v669);
                  }
                  return (*(uint64_t (**)(char *, uint64_t))(v288 + 8))(v291, v765);
                }
LABEL_13:
                v306 = v310;
LABEL_10:
                v191 = (v309 - 1) & v309;
                v300 = __clz(__rbit64(v309)) + (v306 << 6);
                v757 = v306;
                goto LABEL_5;
              }
            }
          }
        }
LABEL_24:
        v312 = sub_23FCB31A0();
        sub_23FBFF0F8(v186, v313, v314, v312);
        v191 = 0;
      }
      swift_release();
      v288 = v741[0];
      v291 = (char *)v671[0];
    }
    v343 = v744;
    v344 = sub_23FCB31E8();
    sub_23FC5AE8C(v344, v345, v346);
    v776 = sub_23FCAF10C();
    sub_23FBFEE2C(&qword_256F60588, (uint64_t (*)(uint64_t))type metadata accessor for SessionCoordinatorConversions.ConversionContext, (uint64_t)&unk_23FD78280);
    sub_23FCB30BC(v347);
    v348 = v741[1];
    sub_23FCB3244();
    if (!v4)
    {
      sub_23FC5A8C8(v348, *MEMORY[0x24BE56C70], *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
      sub_23FCB2FEC();
      sub_23FCB2FF8();
      v367 = sub_23FCB308C();
      sub_23FC5A8C8(v367, v368, v369);
      *(_QWORD *)a1 = v191;
      v349 = *(uint64_t (**)(uint64_t, unint64_t))(v343 + 8);
      v350 = v671[0];
      goto LABEL_57;
    }
    v349 = *(uint64_t (**)(uint64_t, unint64_t))(v343 + 8);
LABEL_39:
    v350 = (uint64_t)v291;
LABEL_57:
    v370 = v288;
    return v349(v350, v370);
  }
  v765 = v287;
  if (v292 == *MEMORY[0x24BE52D30])
  {
    v338 = v766;
    sub_23FC5A8C8((uint64_t)v286, *MEMORY[0x24BE56C80], *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
    sub_23FCB2FEC();
    sub_23FCB2FF8();
    v191 = *(_QWORD *)a1;
    *(_QWORD *)(v191 + 16) = v200 + 1;
    v339 = v191
         + ((v338[80] + 32) & ~(unint64_t)v338[80])
         + *((_QWORD *)v338 + 9) * v200;
    v340 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v338 + 4);
    v341 = (uint64_t)v286;
LABEL_34:
    sub_23FC5A8C8(v339, v341, v340);
    *(_QWORD *)a1 = v191;
    return (*(uint64_t (**)(char *, uint64_t))(v288 + 8))(v291, v765);
  }
  v751 = v286;
  v351 = v292 == *MEMORY[0x24BE52858] || v292 == *MEMORY[0x24BE52D28];
  v354 = v351 || v292 == *MEMORY[0x24BE52C38] || v292 == *MEMORY[0x24BE52CC0] || v292 == *MEMORY[0x24BE52BD0];
  v355 = v767;
  v200 = (uint64_t)v291;
  v356 = v765;
  if (v354)
    goto LABEL_54;
  if (v292 == *MEMORY[0x24BE52CC8])
  {
    v371 = (_DWORD *)MEMORY[0x24BE56AF0];
    sub_23FCB3080();
    sub_23FCB3138();
    v372 = sub_23FCB31DC();
    v374 = sub_23FCB3104(v372, (uint64_t)v291, v373);
    v375 = MEMORY[0x242675840](v374);
    if (!v375)
    {
LABEL_94:
      v432 = v734;
      v773 = sub_23FD71A80();
      v434 = v433;
      sub_23FD71A74();
      v435 = v754[0];
      v436 = v756;
      sub_23FCB3150();
      v438 = *(_QWORD *)(v437 - 256);
      sub_23FC092BC(v439, v440, v441);
      sub_23FD73D84();
      (*(void (**)(uint64_t, uint64_t))(v435 + 8))(v436, v438);
      sub_23FCB3238();
      sub_23FD73F04();
      sub_23FC58AC8();
      sub_23FD71A68();
      sub_23FCB3144();
      v442 = sub_23FD73CE8();
      sub_23FCB311C(v442, *MEMORY[0x24BE56C70]);
      sub_23FCB2FEC();
      sub_23FCB2FF8();
      sub_23FCB303C();
      *v432 = v434;
      v420 = sub_23FCB3180();
      v421 = &v761;
      return v419(v420, *(v421 - 32));
    }
    v765 = 0;
    v761 = v375;
    v292 = sub_23FCB31A8(v375 + 64);
    v186 = v377 & v376;
    LODWORD(v764) = *v371;
    v760 = (unint64_t)(v378 + 63) >> 6;
    v742 = v760 - 1;
    v762 = xmmword_23FD769D0;
    v191 = v758;
    v200 = v745;
    v288 = (unint64_t)v771;
    if ((v377 & v376) == 0)
      goto LABEL_64;
LABEL_62:
    v379 = __clz(__rbit64(v186));
    v186 &= v186 - 1;
    v380 = v379 | (v765 << 6);
LABEL_63:
    v381 = *(_QWORD *)(v761 + 56);
    v382 = (_QWORD *)(*(_QWORD *)(v761 + 48) + 16 * v380);
    v383 = v382[1];
    *(_QWORD *)v200 = *v382;
    *(_QWORD *)(v200 + 8) = v383;
    v384 = v381 + *(_QWORD *)(v191 + 72) * v380;
    v385 = sub_23FCB31A0();
    sub_23FCB3104(v200 + *(int *)(v385 + 48), v384, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v191 + 16));
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v200, 0, 1, v385);
    swift_bridgeObjectRetain();
    while (1)
    {
      v393 = v200;
      v394 = v744;
      sub_23FC08FD8(v393, v744, &qword_256F5F0E8);
      v395 = sub_23FCB31A0();
      sub_23FC100EC(v394, 1, v395);
      if (v351)
      {
        swift_release();
        goto LABEL_94;
      }
      v396 = v758;
      v397 = sub_23FCB32B8();
      sub_23FC100A0(v397, v398, v399);
      sub_23FBFEE2C(&qword_256F5DAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
      sub_23FD74B40();
      sub_23FC100A0(v752, v394, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v396 + 16));
      v400 = v748;
      sub_23FD73490();
      v401 = v754[0];
      v402 = v756;
      sub_23FCB3150();
      v404 = *(_QWORD *)(v403 - 256);
      sub_23FC100A0(v405, v406, v407);
      v408 = sub_23FD73D84();
      (*(void (**)(uint64_t, uint64_t))(v401 + 8))(v402, v404);
      sub_23FD73F10();
      sub_23FC58AC8();
      sub_23FCB3280();
      sub_23FD71564();
      sub_23FC5AE8C(v753, v408, v770[2]);
      sub_23FBFD684(&qword_256F60598);
      sub_23FCB32D0();
      v411 = v410 & ~v409;
      v412 = swift_allocObject();
      *(_OWORD *)(v412 + 16) = v762;
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v401 + 16))(v412 + v411, v400, v769);
      sub_23FCB3174();
      sub_23FD73184();
      v413 = sub_23FCB32B8();
      v414(v413, v411);
      v291 = v766;
      sub_23FC76248(v400, v764, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
      a1 = *v759;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FCB32A0();
        a1 = v417;
      }
      v415 = *(_QWORD *)(a1 + 16);
      v287 = v415 + 1;
      v200 = v745;
      if (v415 >= *(_QWORD *)(a1 + 24) >> 1)
      {
        sub_23FCB32A0();
        a1 = v418;
      }
      *(_QWORD *)(a1 + 16) = v287;
      sub_23FC102C4();
      sub_23FC76248(a1 + v416 + *((_QWORD *)v291 + 9) * v415, v746, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v291 + 4));
      *v759 = a1;
      sub_23FCB31F8(*((uint64_t (**)(_QWORD))v772 + 1));
      sub_23FCB31F8((uint64_t (*)(_QWORD))v770[1]);
      sub_23FCB31F8(*(uint64_t (**)(_QWORD))(v768 + 8));
      v191 = v758;
      v292 = sub_23FCA9784(v747, *(uint64_t (**)(uint64_t, _QWORD))(v758 + 8));
      if (v186)
        goto LABEL_62;
LABEL_64:
      if (__OFADD__(v765, 1))
      {
        __break(1u);
        goto LABEL_148;
      }
      sub_23FCB32C4();
      if (v307 != v308)
      {
        v387 = *(_QWORD *)(v750 + 8 * v386);
        if (v387)
          goto LABEL_68;
        v388 = v386 + 1;
        v765 = v386;
        if (v386 + 1 < v760)
        {
          v387 = *(_QWORD *)(v750 + 8 * v388);
          if (v387)
            goto LABEL_71;
          v765 = v386 + 1;
          if (v386 + 2 < v760)
          {
            v387 = *(_QWORD *)(v750 + 8 * (v386 + 2));
            if (v387)
            {
              v386 += 2;
LABEL_68:
              v186 = (v387 - 1) & v387;
              v380 = __clz(__rbit64(v387)) + (v386 << 6);
              v765 = v386;
              goto LABEL_63;
            }
            v388 = v386 + 3;
            v765 = v386 + 2;
            if (v386 + 3 < v760)
            {
              v387 = *(_QWORD *)(v750 + 8 * v388);
              if (v387)
              {
LABEL_71:
                v386 = v388;
                goto LABEL_68;
              }
              while (1)
              {
                if (__OFADD__(v388, 1))
                {
                  __break(1u);
                  goto LABEL_166;
                }
                sub_23FCB32C4();
                if (v307 == v308)
                  break;
                v387 = *(_QWORD *)(v750 + 8 * v386);
                v388 = v389 + 1;
                if (v387)
                  goto LABEL_68;
              }
              v765 = v742;
            }
          }
        }
      }
      v390 = sub_23FCB31A0();
      sub_23FBFF0F8(v200, v391, v392, v390);
      v186 = 0;
    }
  }
  v773 = v186;
  v422 = v756;
  if (v292 == *MEMORY[0x24BE526D8])
  {
    sub_23FCB3080();
    sub_23FCB3138();
    v423 = sub_23FCB3228();
    v288 = v731[2];
    v426 = sub_23FC5AE8C(v423, v424, v425);
    v427 = MEMORY[0x24267554C](v426);
    v428 = sub_23FCB2688(v427, v755);
    sub_23FC1002C();
    sub_23FD717A4();
    sub_23FD7178C();
    sub_23FCB3238();
    sub_23FD73CDC();
    v429 = v766;
    sub_23FC76248(v190, *MEMORY[0x24BE56C70], *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
    sub_23FCB2FEC();
    sub_23FCB3070();
    v430 = *(_QWORD *)v291;
    *(_QWORD *)(*(_QWORD *)v291 + 16) = v428 + 1;
    sub_23FC102C4();
    sub_23FC76248(v430 + v431 + *((_QWORD *)v429 + 9) * v428, v190, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v429 + 4));
    *(_QWORD *)v291 = v430;
    sub_23FCA96B4();
    goto LABEL_39;
  }
  v443 = v743;
  if (v292 == *MEMORY[0x24BE52C30])
  {
    sub_23FCB3080();
    sub_23FCB3138();
    v444 = v728;
    v445 = v729;
    sub_23FC092BC((uint64_t)v728, (uint64_t)v291, v446);
    v447 = sub_23FD71774();
    v449 = v448;
    MEMORY[0x242675510]();
    sub_23FCB3144();
    v450 = MEMORY[0x242676D04](v447, v449);
    sub_23FCB311C(v450, *MEMORY[0x24BE56C50]);
    sub_23FCB2FEC();
    sub_23FCB2FF8();
    sub_23FCB303C();
    *v444 = v449;
LABEL_98:
    v350 = sub_23FCB3180();
    v370 = v445;
    return v349(v350, v370);
  }
  if (v292 != *MEMORY[0x24BE52828])
  {
    if (v292 == *MEMORY[0x24BE52820])
    {
      sub_23FCB3080();
      v191 = v725;
      v298 = (uint64_t *)v724[0];
      v288 = v724[1];
      sub_23FC5AE8C(v724[0], (uint64_t)v291, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v725 + 32));
      sub_23FD71828();
      sub_23FCB3280();
      sub_23FD73DA8();
      v200 = v754[1];
      if (!v443)
        goto LABEL_127;
      v349 = *(uint64_t (**)(uint64_t, unint64_t))(v191 + 8);
LABEL_133:
      v350 = (uint64_t)v298;
      goto LABEL_57;
    }
    v474 = v292 == *MEMORY[0x24BE52A38]
        || v292 == *MEMORY[0x24BE52BC0]
        || v292 == *MEMORY[0x24BE52A30]
        || v292 == *MEMORY[0x24BE52758];
    v186 = v773;
    if (!v474)
    {
      if (v292 == *MEMORY[0x24BE52920])
      {
        sub_23FCB3080();
        v475 = v718;
        v476 = v719;
        sub_23FC5A8C8(v721, (uint64_t)v291, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v718 + 32));
        sub_23FCB3268();
        sub_23FD73D6C();
        v477 = (uint64_t)v291;
        v478 = sub_23FD73DE4();
        v479 = sub_23FCA9784((uint64_t)v291, *(uint64_t (**)(uint64_t, _QWORD))(v715 + 8));
        MEMORY[0x24BDAC7A8](v479, v480);
        v775 = v478;
        v481 = sub_23FCAEF64((uint64_t (*)(uint64_t))sub_23FCB2CD0, (uint64_t)&v671[-4], v478);
        MEMORY[0x24BDAC7A8](v481, v482);
        v670 = &v775;
        sub_23FCB3280();
        sub_23FC559A0(v483, v484, v485, v486);
        swift_bridgeObjectRelease();
        v487 = v722;
        sub_23FC100EC((uint64_t)v291, 1, v722);
        if (v351)
        {
          sub_23FBFEF74((uint64_t)v291, (uint64_t *)&unk_256F61700);
        }
        else
        {
          v540 = v720[0];
          v541 = v714;
          sub_23FC1046C(v714, v477, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v720[0] + 32));
          sub_23FCB3238();
          sub_23FD740A8();
          v542 = (*((uint64_t (**)(uint64_t, uint64_t))v766 + 11))(v478, v355);
          if (v542 == *MEMORY[0x24BE56BA0])
          {
            v543 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v766;
            sub_23FC5C178(v478, *((uint64_t (**)(uint64_t, uint64_t))v766 + 12));
            sub_23FCB3138();
            v544 = v707;
            sub_23FCB3104((uint64_t)v707, v478, v545);
            v546 = sub_23FD71474();
            sub_23FBFF0F8(v711, v547, v548, v546);
            v549 = sub_23FD730E8();
            v772 = v550;
            v773 = v549;
            sub_23FCB3274();
            sub_23FD718A0();
            v551 = sub_23FD71C6C();
            sub_23FBFF0F8(v705, v552, v553, v551);
            sub_23FCB3144();
            sub_23FD73A00();
            v554 = v754[0];
            v555 = v756;
            sub_23FBFF058(v756, v755, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v754[0] + 16));
            sub_23FD73D84();
            sub_23FBFF204(v555, *(uint64_t (**)(uint64_t, uint64_t))(v554 + 8));
            sub_23FCB3200();
            sub_23FC58AC8();
            sub_23FCB3174();
            sub_23FD73088();
            sub_23FCB3238();
            sub_23FD734E4();
            sub_23FC76248((uint64_t)v544, *MEMORY[0x24BE56B98], v543[13]);
            sub_23FCB2FEC();
            sub_23FCB3070();
            sub_23FCB3190();
            sub_23FCB310C();
            sub_23FC76248(v556 + (_QWORD)v543[9] * v554, (uint64_t)v544, v543[4]);
            *v544 = v487;
            v557 = sub_23FCB3180();
            sub_23FCA9784(v557, v558);
            sub_23FCA96B4();
            sub_23FCA9784(v714, v559);
            sub_23FCA96B4();
            v350 = v721;
            v536 = v735;
            goto LABEL_136;
          }
          sub_23FBFF204(v541, *(uint64_t (**)(uint64_t, uint64_t))(v540 + 8));
          sub_23FC5C178(v478, *((uint64_t (**)(uint64_t, uint64_t))v766 + 1));
        }
        sub_23FCB2D3C();
        sub_23FC5A704();
        *v566 = 0;
        sub_23FCB3298();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v475 + 8))(v721, v476);
      }
      v287 = (uint64_t)v743;
      if (v292 == *MEMORY[0x24BE52760])
      {
        sub_23FCB3080();
        v524 = v709;
        v525 = v708;
        sub_23FCB3104((uint64_t)v708, v200, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v709 + 32));
        v773 = sub_23FD717F8();
        v527 = v526;
        v528 = sub_23FD71804();
        v530 = v529;
        v531 = sub_23FD717EC();
        v532 = v751;
        *v751 = v773;
        v532[1] = v527;
        v532[2] = v528;
        v532[3] = v530;
        v532[4] = v531;
        v532[5] = v533;
        v534 = v766;
        sub_23FC76248((uint64_t)v532, *MEMORY[0x24BE56AD8], *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
        sub_23FCB2FEC();
        sub_23FCB2FF8();
        v535 = *v525;
        *(_QWORD *)(v535 + 16) = v528 + 1;
        sub_23FC76248(v535+ ((v534[80] + 32) & ~(unint64_t)v534[80])+ *((_QWORD *)v534 + 9) * v528, (uint64_t)v532, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v534 + 4));
        *v525 = v535;
        v349 = *(uint64_t (**)(uint64_t, unint64_t))(v524 + 8);
        v350 = (uint64_t)v525;
        v536 = (char *)v731;
        goto LABEL_136;
      }
      if (v292 == *MEMORY[0x24BE52850])
      {
        sub_23FCB3080();
        sub_23FCB3138();
        v560 = v703;
        v445 = v704;
        sub_23FC092BC((uint64_t)v703, (uint64_t)v291, v561);
        v562 = sub_23FD71828();
        v563 = v751;
        *v751 = v562;
        v563[1] = v564;
        sub_23FCB311C(v562, *MEMORY[0x24BE56B58]);
        sub_23FCB2FEC();
        sub_23FCB2FF8();
        sub_23FCB303C();
        *v560 = v191;
        goto LABEL_98;
      }
      if (v292 != *MEMORY[0x24BE52B78])
      {
        if (v292 == *MEMORY[0x24BE52A50])
        {
          (*(void (**)(char *, uint64_t))(v288 + 96))(v291, v765);
          v567 = v702;
          v568 = sub_23FCB31DC();
          sub_23FC5A8C8(v568, (uint64_t)v291, v569);
          v570 = v690;
          sub_23FC5A8C8(v690, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v567 + 16));
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v688 + 104))(v570, *MEMORY[0x24BE527F0], v689);
          v571 = sub_23FD71984();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v691, 1, 1, v571);
          v572 = sub_23FD71474();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v711, 1, 1, v572);
          v573 = sub_23FD71A5C();
          v574 = v692;
          sub_23FBFF0F8(v692, v575, v576, v573);
          sub_23FCB3144();
          sub_23FD71AB0();
          v577 = sub_23FCB32B8();
          sub_23FC092BC(v577, v186, v578);
          v776 = sub_23FCAF10C();
          sub_23FBFEE2C(&qword_256F60588, (uint64_t (*)(uint64_t))type metadata accessor for SessionCoordinatorConversions.ConversionContext, (uint64_t)&unk_23FD78280);
          sub_23FCB30BC(v579);
          sub_23FCB3244();
          if (!v4)
          {
            v580 = v766;
            v581 = v699;
            sub_23FC5A8C8(v699, *MEMORY[0x24BE56C70], *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
            sub_23FCB2FEC();
            v582 = *(_QWORD *)(*(_QWORD *)v574 + 16);
            sub_23FD67A18(v582);
            v583 = *(_QWORD *)v574;
            *(_QWORD *)(*(_QWORD *)v574 + 16) = v582 + 1;
            sub_23FCB310C();
            sub_23FC5A8C8(v584 + *((_QWORD *)v580 + 9) * v582, v581, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v580 + 4));
            *(_QWORD *)v574 = v583;
          }
          (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v700, v190);
          sub_23FCA96B4();
          v350 = v701;
          v370 = v773;
          return v349(v350, v370);
        }
LABEL_148:
        if (v292 != *MEMORY[0x24BE52818])
        {
          if (v292 != *MEMORY[0x24BE52900])
            goto LABEL_152;
          v585 = v751;
          sub_23FD736A0();
          sub_23FC5A8C8((uint64_t)v585, *MEMORY[0x24BE56B90], *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v766 + 13));
          sub_23FCB2FEC();
          sub_23FCB2FF8();
          v339 = sub_23FCB308C();
          goto LABEL_34;
        }
      }
    }
LABEL_54:
    (*(void (**)(uint64_t, uint64_t))(v288 + 8))(v200, v356);
    sub_23FCB3144();
    sub_23FD724C4();
    v357 = v737;
    v358 = *(void (**)(uint64_t, uint64_t, uint64_t))(v737 + 16);
    v359 = v736;
    v360 = v738;
    v358(v736, a1, v738);
    v361 = sub_23FD72BE4();
    v362 = sub_23FD74F60();
    if (sub_23FC15918(v362))
    {
      v363 = (uint8_t *)sub_23FBFEFF4();
      v773 = sub_23FBFEFF4();
      v775 = v773;
      *(_DWORD *)v363 = 136315138;
      v772 = v363 + 4;
      v358(v733, v359, v360);
      v364 = sub_23FD74C0C();
      v366 = sub_23FCB3220(v364, v365);
      sub_23FCB30F0(v366);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FC5C178(v359, *(uint64_t (**)(uint64_t, uint64_t))(v357 + 8));
      sub_23FBFF114(&dword_23FBF8000, v361, (os_log_type_t)v191, "Client is not expected to post message %s", v363);
      sub_23FCB31C8();
      sub_23FBFEFA0();
    }
    sub_23FC5C178(v359, *(uint64_t (**)(uint64_t, uint64_t))(v357 + 8));

    v419 = *(uint64_t (**)(uint64_t, _QWORD))(v739 + 8);
    v420 = v186;
    v421 = &v765;
    return v419(v420, *(v421 - 32));
  }
  sub_23FCB3080();
  sub_23FCB3138();
  sub_23FCB3104(v732, (uint64_t)v291, v451);
  sub_23FCB3238();
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v452 = sub_23FD72BE4();
  v453 = sub_23FD74F6C();
  if (os_log_type_enabled(v452, v453))
  {
    v454 = (uint8_t *)sub_23FBFEFF4();
    *(_WORD *)v454 = 0;
    _os_log_impl(&dword_23FBF8000, v452, v453, "Running prescribed plan. Ignoring any configured planner override", v454, 2u);
    sub_23FBFEFA0();
  }

  sub_23FCA96B4();
  v773 = (uint64_t)v455;
  v455(v190, v740);
  v456 = v754[0];
  v457 = v422;
  sub_23FCB3150();
  v459 = *(_QWORD *)(v458 - 256);
  v772 = v460;
  ((void (*)(void))v460)();
  v461 = (uint64_t *)sub_23FD73D84();
  v771 = *(void (***)(uint64_t, uint64_t, _QWORD))(v456 + 8);
  ((void (*)(uint64_t, uint64_t))v771)(v422, v459);
  sub_23FCB3174();
  sub_23FD73F04();
  sub_23FC58AC8();
  sub_23FCB3144();
  sub_23FD741F8();
  v462 = v766;
  v463 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v766 + 13);
  ((void (*)(uint64_t, _QWORD, uint64_t))v463)(v422, *MEMORY[0x24BE56C88], v355);
  sub_23FCB2FEC();
  sub_23FCB3070();
  v464 = v462;
  v465 = *v461;
  *(_QWORD *)(v465 + 16) = v191 + 1;
  v466 = (v464[80] + 32) & ~(unint64_t)v464[80];
  v467 = v355;
  v468 = *((_QWORD *)v464 + 9);
  v469 = v422;
  v470 = (void (*)(unint64_t, uint64_t, uint64_t))*((_QWORD *)v464 + 4);
  v470(v465 + v466 + v468 * v191, v469, v467);
  *v461 = v465;
  sub_23FCB325C();
  sub_23FCB3174();
  v471 = v743;
  sub_23FD73C88();
  if (v471)
  {
    sub_23FC1002C();
    sub_23FCB3144();
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    v489 = (uint64_t (*)(uint64_t, unint64_t))v730;
    v490 = v731[0];
    sub_23FC76248(v726, v732, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v730 + 16));
    v491 = sub_23FD72BE4();
    v492 = sub_23FD74F54();
    if (os_log_type_enabled(v491, v492))
    {
      v493 = (uint8_t *)sub_23FBFEFF4();
      v494 = sub_23FBFEFF4();
      v772 = v471;
      v775 = v494;
      *(_DWORD *)v493 = 136315138;
      v495 = sub_23FD71828();
      v497 = sub_23FCB3220(v495, v496);
      sub_23FCB30F0(v497);
      sub_23FD75044();
      sub_23FC1002C();
      sub_23FCB3210();
      sub_23FBFF114(&dword_23FBF8000, v491, v492, "Prescribed plan failed to parse: %s)", v493);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    sub_23FCB3210();

    ((void (*)(void (*)(unint64_t, uint64_t, uint64_t), uint64_t))v773)(v470, v740);
    sub_23FCB2D3C();
    sub_23FC5A704();
    *v498 = 1;
    sub_23FCB3298();

    v499 = v732;
    v500 = v490;
    return v489(v499, v500);
  }
  v768 = v466;
  v769 = (void (*)(unint64_t, uint64_t *, uint64_t))v470;
  v770 = v463;
  sub_23FC1002C();
  ((void (*)(uint64_t, uint64_t, uint64_t))v772)(v457, v755, v459);
  sub_23FD73D84();
  ((void (*)(uint64_t, uint64_t))v771)(v457, v459);
  v488 = v723;
  sub_23FD7373C();
  sub_23FD73748();
  v514 = (_QWORD *)sub_23FCB325C();
  v516 = v515;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v717[0] + 104))(v717[2], *MEMORY[0x24BE569D0], v717[1]);
  sub_23FCB3274();
  sub_23FD73F58();
  v670 = (uint64_t *)v459;
  sub_23FCB3274();
  sub_23FD73F4C();
  v517 = v751;
  sub_23FCB312C((uint64_t)v751, v459, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v720[1] + 16));
  v518 = v767;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v770)(v517, *MEMORY[0x24BE56AC8], v767);
  sub_23FCB2FEC();
  sub_23FCB3070();
  sub_23FCB3190();
  v769(v488 + v768 + v516 * v468, v517, v518);
  *v514 = v488;
  v519 = sub_23FCB3180();
  sub_23FC15950(v519, v520);
  sub_23FCA96B4();
  sub_23FCA9784(v723, v521);
  sub_23FCA96B4();
  sub_23FCA9784(v727, v522);
  sub_23FCA96B4();
  return sub_23FCA9784(v732, v523);
}

uint64_t sub_23FCB2688(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD v38[2];
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v53 = a2;
  v3 = sub_23FD73D9C();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v50 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD739D0();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v55 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23FBFD684(&qword_256F605A0);
  v10 = MEMORY[0x24BDAC7A8](v47, v9);
  v46 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v45 = (_QWORD *)((char *)v38 - v14);
  MEMORY[0x24BDAC7A8](v13, v15);
  v43 = (char *)v38 - v16;
  v56 = MEMORY[0x24BEE4AF8];
  sub_23FC9B944();
  v17 = v56;
  v18 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v44 = v18;
  v38[1] = a1;
  if (v18)
  {
    v19 = sub_23FD717B0();
    v20 = 0;
    v21 = *(_QWORD *)(v19 - 8);
    v22 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v23 = *(_QWORD *)(v21 + 72);
    v41 = v21;
    v42 = v19;
    v39 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v40 = v23;
    v24 = v47;
    v25 = v43;
    do
    {
      v26 = v46;
      v27 = &v46[*(int *)(v24 + 48)];
      v54 = v22;
      v28 = v42;
      v29 = v39;
      ((void (*)(char *))v39)(v27);
      v30 = (uint64_t)v45;
      v31 = (char *)v45 + *(int *)(v24 + 48);
      *v45 = v20;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v31, v27, v28);
      sub_23FC08FD8(v30, (uint64_t)v25, &qword_256F605A0);
      v32 = *(int *)(v24 + 48);
      *(_QWORD *)v26 = *(_QWORD *)v25;
      v29(&v26[v32], &v25[v32], v28);
      v33 = v50;
      v34 = v51;
      v35 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v53, v52);
      sub_23FD73D84();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
      sub_23FD73F10();
      swift_release();
      sub_23FD739DC();
      sub_23FBFEF74((uint64_t)v25, &qword_256F605A0);
      v17 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B944();
        v17 = v56;
      }
      v36 = *(_QWORD *)(v17 + 16);
      if (v36 >= *(_QWORD *)(v17 + 24) >> 1)
      {
        sub_23FC9B944();
        v17 = v56;
      }
      ++v20;
      *(_QWORD *)(v17 + 16) = v36 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v17+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v36, v55, v49);
      v56 = v17;
      v22 = v54 + v40;
    }
    while (v44 != v20);
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_23FCB29E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v3 = sub_23FBFD684((uint64_t *)&unk_256F61700);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD740CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v7);
  sub_23FCB2E34((uint64_t)v6);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_23FBFEF74((uint64_t)v6, (uint64_t *)&unk_256F61700);
    sub_23FCB2D78(*(_QWORD *)(*(_QWORD *)v1 + 16) - 1, a1);
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v11, v6, v7);
    v13((char *)a1, v11, v7);
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v7);
}

uint64_t sub_23FCB2B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v0 = sub_23FD71474();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x24BDAC7A8](v0, v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)v12 - v7;
  sub_23FD74048();
  sub_23FD718AC();
  v9 = sub_23FD71450();
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v5, v0);
  v10(v8, v0);
  return v9 & 1;
}

uint64_t sub_23FCB2C10()
{
  return sub_23FD75458();
}

uint64_t sub_23FCB2C34()
{
  sub_23FD7544C();
  sub_23FD75458();
  return sub_23FD75470();
}

uint64_t sub_23FCB2C78()
{
  return sub_23FCB2C34();
}

uint64_t sub_23FCB2C80()
{
  return sub_23FCB2C10();
}

uint64_t sub_23FCB2C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F60568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCB2CD0()
{
  return sub_23FCB2B34() & 1;
}

unint64_t sub_23FCB2CEC@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23FC558B0(*a1, *a2, a3);
}

unint64_t sub_23FCB2D20@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FCB2CEC(a1, *(uint64_t **)(v2 + 16), a2);
}

unint64_t sub_23FCB2D3C()
{
  unint64_t result;

  result = qword_256F60590;
  if (!qword_256F60590)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7833C, &type metadata for ClientMessageError);
    atomic_store(result, (unint64_t *)&qword_256F60590);
  }
  return result;
}

void sub_23FCB2D78(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23FCCB844();
    v5 = v11;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = sub_23FD740CC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(_QWORD *)(v8 + 72);
    v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 32))(a2, v10, v7);
    sub_23FC9A48C(v10 + v9, v6 - 1 - a1);
    *(_QWORD *)(v5 + 16) = v6 - 1;
    *v2 = v5;
  }
}

void sub_23FCB2E34(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23FCCB844();
    v3 = v7;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v4 - 1;
    v6 = sub_23FD740CC();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, v6);
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t storeEnumTagSinglePayload for ClientMessageError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FCB2F2C + 4 * byte_23FD78225[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FCB2F60 + 4 * byte_23FD78220[v4]))();
}

uint64_t sub_23FCB2F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCB2F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCB2F70);
  return result;
}

uint64_t sub_23FCB2F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCB2F84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FCB2F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCB2F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientMessageError()
{
  return &type metadata for ClientMessageError;
}

unint64_t sub_23FCB2FB0()
{
  unint64_t result;

  result = qword_256F605A8;
  if (!qword_256F605A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD78314, &type metadata for ClientMessageError);
    atomic_store(result, (unint64_t *)&qword_256F605A8);
  }
  return result;
}

uint64_t sub_23FCB2FEC()
{
  return sub_23FD679AC();
}

uint64_t sub_23FCB2FF8()
{
  uint64_t v0;

  return sub_23FD67A18(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_23FCB3008()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *v1;
  *(_QWORD *)(v5 + 16) = v0 + 1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v5+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v0, v4, v2);
}

uint64_t sub_23FCB303C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *v1;
  *(_QWORD *)(v5 + 16) = v0 + 1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v5+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v0, v2, v3);
}

uint64_t sub_23FCB3070()
{
  uint64_t v0;

  return sub_23FD67A18(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_23FCB3080()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 96))(v0);
}

unint64_t sub_23FCB308C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v3 + 16) = v0 + 1;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(_QWORD *)(v2 + 72) * v0;
}

uint64_t sub_23FCB30BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v1 - 464);
  return swift_retain();
}

uint64_t sub_23FCB30D0@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 240));
}

uint64_t sub_23FCB30DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 232) + 104))(v2, a2, *(_QWORD *)(v3 - 224));
}

uint64_t sub_23FCB30F0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_23FCB3104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23FCB311C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_23FCB312C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23FCB3160()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCB3180()
{
  uint64_t v0;

  return v0;
}

void sub_23FCB3190()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v0 + 16) = v1 + 1;
}

uint64_t sub_23FCB31A0()
{
  uint64_t *v0;

  return sub_23FBFD684(v0);
}

uint64_t sub_23FCB31A8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = result;
  return result;
}

uint64_t sub_23FCB31C8()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FCB31DC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FCB31E8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FCB31F8@<X0>(uint64_t (*a1)(_QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 - 256));
}

uint64_t sub_23FCB3200()
{
  return sub_23FD73F04();
}

uint64_t sub_23FCB3210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23FCB3220(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_23FCB3228()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FCB3244()
{
  return sub_23FD73CF4();
}

uint64_t sub_23FCB3250()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_23FCB325C()
{
  return sub_23FD71828();
}

uint64_t sub_23FCB328C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, v4, 1, a4);
}

uint64_t sub_23FCB3298()
{
  return swift_willThrow();
}

void sub_23FCB32A0()
{
  sub_23FC998C0();
}

void sub_23FCB32AC()
{
  sub_23FC998C0();
}

uint64_t sub_23FCB32B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FCB32E4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t AssociatedTypeWitness;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v0 = type metadata accessor for SessionIdentityPack(319);
  if (v1 <= 0x3F)
  {
    v0 = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      AssociatedTypeWitness = sub_23FD73D9C();
      if (v4 > 0x3F)
        return AssociatedTypeWitness;
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      if (v5 > 0x3F)
        return AssociatedTypeWitness;
      sub_23FCB47B4(319, &qword_256F60638, type metadata accessor for SessionCoordinatorCommand, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A98]);
      if (v6 > 0x3F)
        return AssociatedTypeWitness;
      sub_23FCB47B4(319, (unint64_t *)&qword_256F60640, type metadata accessor for SessionCoordinatorCommand, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A40]);
      if (v7 > 0x3F)
        return AssociatedTypeWitness;
      v8 = swift_getAssociatedTypeWitness();
      v10 = v9;
      swift_getAssociatedConformanceWitness();
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      if (v11 > 0x3F)
      {
        return AssociatedTypeWitness;
      }
      else if (v10 > 0x3F)
      {
        return v8;
      }
      else
      {
        v0 = swift_getAssociatedTypeWitness();
        if (v12 <= 0x3F)
          return swift_initClassMetadata2();
      }
    }
  }
  return v0;
}

uint64_t sub_23FCB3548(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = sub_23FD74474();
  v3 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v14 = v1;
    v16 = MEMORY[0x24BEE4AF8];
    sub_23FC9B83C();
    v8 = v16;
    v9 = *(_QWORD *)(sub_23FD71630() - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      ClientAction.Definition.toolDefinition.getter();
      v16 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_23FC9B83C();
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v12, v6, v15);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_23FCB36A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_23FCBCD40();
  type metadata accessor for SessionCoordinatorCommand(v2);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC10370();
  v5 = sub_23FBFD684(&qword_256F5E2A8);
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC0603C();
  sub_23FCBCD7C();
  swift_storeEnumTagMultiPayload();
  sub_23FBFD684(&qword_256F5E2B8);
  sub_23FD74E1C();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v5);
  sub_23FC17830();
}

uint64_t sub_23FCB373C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;

  sub_23FCBCD40();
  v1 = sub_23FD71BD0();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FC0603C();
  v3 = sub_23FD71BF4();
  v4 = sub_23FD71BDC();
  sub_23FBFD684(&qword_256F609A0);
  v5 = sub_23FC58AA0();
  *(_DWORD *)(v5 + 20) = 0;
  *(_BYTE *)(v5 + 16) = v4 & 1;
  MEMORY[0x2426759C0]();
  v6 = sub_23FD71C30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0, v6);
  v7 = sub_23FCBCE7C();
  v9 = v8(v7);
  v10 = 0;
  v11 = 0;
  if (v9 != *MEMORY[0x24BE531B8])
  {
    if (v9 == *MEMORY[0x24BE531A8])
    {
      v10 = 0;
      v11 = 1;
    }
    else if (v9 == *MEMORY[0x24BE531B0])
    {
      v11 = 1;
      v10 = 256;
    }
    else
    {
      v12 = sub_23FCBCE7C();
      v13(v12);
      v10 = 0;
      v11 = 0;
    }
  }
  if ((v3 & 1) != 0)
    v14 = 0x10000;
  else
    v14 = 0;
  return v10 | v11 | v14;
}

void sub_23FCB3884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  uint64_t v45;
  int64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;

  sub_23FC061F0();
  v42 = v2;
  v43 = v3;
  v41 = v4;
  v6 = v5;
  v7 = sub_23FBFD684(&qword_256F5E3A0);
  v40[0] = *(_QWORD *)(v7 - 8);
  v40[1] = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC100D4();
  v48 = v9 - v10;
  MEMORY[0x24BDAC7A8](v11, v12);
  v44 = (__int128 *)((char *)v40 - v13);
  v14 = sub_23FBFD684(&qword_256F5E488);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  sub_23FC93074();
  v17 = type metadata accessor for SessionCoordinatorInjectionRequest(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC061C0();
  v19 = *v6;
  v20 = *(_QWORD *)(v19 + 64);
  v45 = v19 + 64;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v46 = (unint64_t)(v21 + 63) >> 6;
  sub_23FC5AAE8();
  v24 = 0;
  v47 = xmmword_23FD78380;
  if (!v23)
    goto LABEL_5;
LABEL_4:
  for (v23 &= v23 - 1; ; v23 = (v26 - 1) & v26)
  {
    sub_23FCBAE88();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v0, v1 + *(int *)(v17 + 48), v14);
    sub_23FCBA0CC();
    v49 = v47;
    sub_23FD74D8C();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0, v14);
    if (v23)
      goto LABEL_4;
LABEL_5:
    v25 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
    if (v25 >= v46)
      goto LABEL_27;
    v26 = *(_QWORD *)(v45 + 8 * v25);
    ++v24;
    if (!v26)
    {
      v24 = v25 + 1;
      sub_23FCBCE94();
      if (v27 == v28)
        goto LABEL_27;
      sub_23FCBCE88();
      if (!v26)
      {
        v24 = v29 + 2;
        sub_23FCBCE94();
        if (v27 == v28)
          goto LABEL_27;
        sub_23FCBCE88();
        if (!v26)
        {
          v24 = v30 + 3;
          sub_23FCBCE94();
          if (v27 == v28)
            goto LABEL_27;
          sub_23FCBCE88();
          if (!v26)
            break;
        }
      }
    }
LABEL_24:
    ;
  }
  v32 = v31 + 4;
  if (v32 < v46)
  {
    v26 = *(_QWORD *)(v45 + 8 * v32);
    if (!v26)
    {
      while (1)
      {
        v24 = v32 + 1;
        if (__OFADD__(v32, 1))
          goto LABEL_33;
        sub_23FCBCE94();
        if (v27 == v28)
          goto LABEL_27;
        sub_23FCBCE88();
        v32 = v33 + 1;
        if (v26)
          goto LABEL_24;
      }
    }
    v24 = v32;
    goto LABEL_24;
  }
LABEL_27:
  swift_release();
  v34 = *(_QWORD *)(*(_QWORD *)v41 + 16);
  if (v34)
  {
    v35 = v44;
    v36 = *(_QWORD *)v41
        + ((*(unsigned __int8 *)(v40[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40[0] + 80));
    v37 = *(_QWORD *)(v40[0] + 72);
    sub_23FC5AAE8();
    do
    {
      sub_23FC92F18(v36, (uint64_t)v35, &qword_256F5E3A0);
      sub_23FBFDE28(v35, v48);
      sub_23FBFD684(&qword_256F5E3B0);
      v38 = sub_23FBFF1EC();
      v39(v38);
      v35 = v44;
      sub_23FD74E28();
      sub_23FBFEF74(v48, &qword_256F5E3A0);
      v36 += v37;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
  }
  sub_23FBFD684(&qword_256F5E390);
  sub_23FD74E28();
  sub_23FBFD684(&qword_256F5E378);
  sub_23FD74E28();
  sub_23FC060D4();
}

uint64_t sub_23FCB3BE4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  type metadata accessor for EventPayloadWithPreassignedID(0);
  sub_23FCBCEA0();
  v0 = sub_23FC5E880();
  return v1(v0);
}

uint64_t sub_23FCB3C30(uint64_t a1)
{
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
}

void sub_23FCB3C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC93074();
  sub_23FC92F18(a1, v1, qword_254346A10);
  v5 = sub_23FBFF104();
  v6 = sub_23FC5E824();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v6, v7, v5) == 1)
  {
    sub_23FBFEF74(v1, qword_254346A10);
  }
  else
  {
    sub_23FD71438();
    v8 = sub_23FC5E880();
    v9(v8);
  }
  sub_23FC09258();
}

uint64_t sub_23FCB3D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v0 = sub_23FBFF104();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FC10370();
  swift_projectBox();
  swift_beginAccess();
  sub_23FC5F584();
  v2 = sub_23FC5E824();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, v3, v4))
  {
    swift_endAccess();
    return 4271950;
  }
  else
  {
    sub_23FD74048();
    swift_endAccess();
    v5 = sub_23FD71438();
    v6 = sub_23FCBCD7C();
    v7(v6);
  }
  return v5;
}

uint64_t sub_23FCB3DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  sub_23FCBCDB0();
  v1 = sub_23FD74090();
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC100D4();
  v6 = v4 - v5;
  MEMORY[0x24BDAC7A8](v7, v8);
  type metadata accessor for EventPayloadWithPreassignedID(0);
  sub_23FD7406C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v6, *MEMORY[0x24BE56BE0], v1);
  v9 = sub_23FD74084();
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v10(v6, v1);
  v11 = sub_23FCBCE7C();
  ((void (*)(uint64_t))v10)(v11);
  return v9 & 1;
}

void sub_23FCB3ECC(void *a1)
{
  sub_23FCBCD88(a1);
  sub_23FBFF0A0();
}

BOOL sub_23FCB3EE8(int a1)
{
  return (~a1 & 0x10001) == 0;
}

uint64_t sub_23FCB3EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_23FC061F0();
  v3 = v2;
  v4 = sub_23FD72368();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC12F34();
  v6 = sub_23FC5F584();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC100B8();
  sub_23FD73850();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC93074();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v3, v6);
  sub_23FD73838();
  sub_23FD73844();
  sub_23FD7235C();
  sub_23FBFEE2C((unint64_t *)&unk_256F65DC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE55B10], MEMORY[0x24BE55B08]);
  v12 = sub_23FD7238C();
  sub_23FCBCDCC();
  sub_23FCBCDBC();
  return v12;
}

void sub_23FCB4094(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[3];
  v4 = a1[4];
  sub_23FBFDE40(a1, v3);
  *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  a2[1] = v5;
  sub_23FC09258();
}

uint64_t sub_23FCB40D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

void sub_23FCB40E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  _QWORD *v12;

  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  v11 = type metadata accessor for SpanMetadata(0);
  sub_23FC92F94(a4, (uint64_t)a7 + *(int *)(v11 + 24));
  v12 = (_QWORD *)((char *)a7 + *(int *)(v11 + 28));
  *v12 = a5;
  v12[1] = a6;
  sub_23FC17830();
}

uint64_t sub_23FCB413C()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_23FCB7258();
  return v0;
}

void sub_23FCB41A0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void (*v11)(uint64_t);
  int *v12;
  _QWORD *v13;

  sub_23FD73D9C();
  v10 = sub_23FCBCEA8();
  v11(v10);
  v12 = (int *)type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
  v13 = (_QWORD *)(a5 + v12[5]);
  *v13 = a1;
  v13[1] = a2;
  *(_QWORD *)(a5 + v12[6]) = a3;
  *(_QWORD *)(a5 + v12[7]) = a4;
  sub_23FC17830();
}

uint64_t sub_23FCB4214@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCB422C(char a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  if ((a1 & 1) == 0)
    return 0;
  v4 = (os_unfair_lock_s *)(a2 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 20));
  v2 = *(unsigned __int8 *)(a2 + 16);
  os_unfair_lock_unlock(v4);
  return v2;
}

_BYTE *sub_23FCB4270(_BYTE *result)
{
  *result = 1;
  return result;
}

_BYTE *sub_23FCB427C(_BYTE *result)
{
  *result = 0;
  return result;
}

void sub_23FCB4284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  sub_23FCBCDB0();
  v0 = sub_23FD721C4();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FC10370();
  v2 = sub_23FCBCD7C();
  v3(v2);
  sub_23FD74C0C();
  sub_23FC09258();
}

void sub_23FCB42E4()
{
  uint64_t v0;

  *(_WORD *)v0 = 0;
  *(_BYTE *)(v0 + 2) = 0;
}

uint64_t sub_23FCB42F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 64) = a3;
  return swift_task_switch();
}

uint64_t sub_23FCB4308()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);

  v2 = v0[7];
  v1 = (_QWORD *)v0[8];
  v3 = v1[3];
  v4 = v1[4];
  sub_23FBFDE40(v1, v3);
  v5 = sub_23FCBCD40();
  v6 = type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(v5);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 20));
  v8 = *v7;
  v9 = v7[1];
  v10 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v0[5] = type metadata accessor for SessionCoordinatorResponseCallback(0);
  v0[6] = &off_2510101F0;
  v0[2] = v10;
  v13 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(**(int **)(v4 + 24)
                                                                                     + *(_QWORD *)(v4 + 24));
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  v0[9] = v11;
  *v11 = v0;
  v11[1] = sub_23FCB43E8;
  return v13(v0[7], v8, v9, v0 + 2, v3, v4);
}

uint64_t sub_23FCB43E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0 + 16;
  sub_23FC59C00();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v1);
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FCB442C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23FC061F0();
  v1 = *v0;
  sub_23FC5D530();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC100B8();
  sub_23FD72BF0();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC0603C();
  sub_23FD724C4();
  sub_23FCBAE88();
  v6 = sub_23FD72BE4();
  v7 = sub_23FD74F6C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_23FBFEFF4();
    v21 = sub_23FBFEFF4();
    *(_DWORD *)v8 = 136315138;
    v9 = SessionIdentityPack.description.getter();
    sub_23FC9DC40(v9, v10, &v21);
    sub_23FD75044();
    sub_23FC1002C();
    sub_23FCBA0CC();
    _os_log_impl(&dword_23FBF8000, v6, v7, "SessionCoordinator %s deinit called.", v8, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  sub_23FCBA0CC();

  v11 = sub_23FCBCE7C();
  v12(v11);
  sub_23FCBA0CC();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112), *(_QWORD *)(v1 + 80));
  swift_bridgeObjectRelease();
  v13 = (uint64_t)v0 + *(_QWORD *)(*v0 + 128);
  v14 = sub_23FD73D9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_release();
  v15 = sub_23FCBCD30();
  sub_23FC5BFF8(v15);
  v16 = sub_23FBFD684(&qword_256F5E478);
  sub_23FC5BFF8(v16);
  v17 = sub_23FBFD684(&qword_256F5E2B8);
  sub_23FC5BFF8(v17);
  swift_release();
  sub_23FCBCD30();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23FC5BFF8(AssociatedTypeWitness);
  v19 = swift_checkMetadataState();
  sub_23FC5BFF8(v19);
  v20 = sub_23FCBCD30();
  sub_23FC5BFF8(v20);
  swift_defaultActor_destroy();
  sub_23FC060D4();
}

uint64_t sub_23FCB477C()
{
  sub_23FCB442C();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for SessionCoordinator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC7493C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionCoordinator);
}

uint64_t type metadata accessor for SessionCoordinatorCommand(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60840);
}

void sub_23FCB47B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  sub_23FC09258();
}

void sub_23FCB4804(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v31 = a1;
  v32 = a3;
  v6 = sub_23FCBCD40();
  v7 = type metadata accessor for SessionIdentityPack(v6);
  v29 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v29 + 64);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_23FD74120();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFF180();
  v14 = v13 - v12;
  v15 = sub_23FD72F14();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC5AAE8();
  sub_23FD72EFC();
  v30 = v3;
  v33 = sub_23FCB4A10();
  v20 = sub_23FD74678();
  v21 = sub_23FD7466C();
  if (v4)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    swift_release();
    sub_23FC15A24();
  }
  else
  {
    v38 = v20;
    v39 = MEMORY[0x24BE57000];
    v37 = v21;
    v22 = sub_23FD749E4();
    v23 = sub_23FD749D8();
    v35 = v22;
    v36 = MEMORY[0x24BE57020];
    v34 = v23;
    v24 = v31;
    v25 = swift_bridgeObjectRetain();
    sub_23FCB3548(v25);
    swift_bridgeObjectRelease();
    sub_23FD740D8();
    sub_23FCBAE88();
    v26 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = a2;
    sub_23FC06D0C((uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26);
    sub_23FC5AAE8();
    swift_bridgeObjectRetain();
    sub_23FCC2C14(a2, (uint64_t)v19, v33, v14, (uint64_t)&unk_256F609B0, v27, v32);
  }
  sub_23FC06000();
}

uint64_t sub_23FCB4A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_23FC5D530();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FC061D8();
  do
  {
    v5 = 0;
    MEMORY[0x2426798F0](&v5, 8);
    v3 = v5;
  }
  while (!v5);
  sub_23FC5E880();
  sub_23FCBAE88();
  type metadata accessor for DefaultEventLogSender();
  sub_23FBFF1C4();
  return sub_23FC608F8(v0, v3);
}

uint64_t sub_23FCB4A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_23FCB4AFC;
  return sub_23FCB4B34(a3);
}

uint64_t sub_23FCB4AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v2 = sub_23FBFF004();
  v4 = *(uint64_t (**)(void))(v1 + 8);
  if (!v0)
    v2 = sub_23FCBCD7C();
  return sub_23FC09150(v2, v3, v4);
}

uint64_t sub_23FCB4B34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = a1;
  v2 = sub_23FD74B1C();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v3 = sub_23FD74B10();
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23FCB4BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = (uint64_t *)(v1 + *(int *)(sub_23FC5D530() + 20));
  v3 = *v2;
  v4 = v2[1];
  swift_bridgeObjectRetain();
  sub_23FCB547C(v3, v4);
  v6 = v5;
  sub_23FBFEE2C(&qword_256F609C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
  sub_23FD74B04();
  __asm { BR              X10 }
}

uint64_t sub_23FCB4C78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(sub_23FCBCEB4() + 16) = v0;
  sub_23FCBB8D4();
  sub_23FCBCDA4();
  sub_23FC090D0();
  v3 = v1[11];
  v2 = v1[12];
  v5 = v1[9];
  v4 = v1[10];
  v7 = v1[7];
  v6 = v1[8];
  v8 = v1[6];
  sub_23FD74AF8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_23FCBCDA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  sub_23FBFEE2C(&qword_256F609C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC6300]);
  sub_23FD74CA8();
  v9 = v1[2];
  v10 = v1[3];
  v11 = *(_QWORD *)(v9 + 16);
  if (v10 == v11)
  {
    v12 = MEMORY[0x24BEE4AF8];
    goto LABEL_3;
  }
  if ((uint64_t)v10 >= v11)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    JUMPOUT(0x23FCB4F94);
  }
  if ((v10 & 0x8000000000000000) != 0)
    goto LABEL_16;
  v12 = MEMORY[0x24BEE4AF8];
  do
  {
    if (v10 >= *(_QWORD *)(v9 + 16))
    {
      __break(1u);
      JUMPOUT(0x23FCB4F88);
    }
    v17 = *(_BYTE *)(v9 + 32 + v10);
    sub_23FBFD684(&qword_256F5F868);
    v18 = sub_23FC58AA0();
    *(_OWORD *)(v18 + 16) = xmmword_23FD769D0;
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE4260];
    *(_QWORD *)(v18 + 64) = MEMORY[0x24BEE42B0];
    *(_BYTE *)(v18 + 32) = v17;
    v19 = sub_23FD74C00();
    v21 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FCBCE5C();
      v12 = v24;
    }
    v22 = *(_QWORD *)(v12 + 16);
    if (v22 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_23FCBCE5C();
      v12 = v25;
    }
    ++v10;
    *(_QWORD *)(v12 + 16) = v22 + 1;
    v23 = v12 + 16 * v22;
    *(_QWORD *)(v23 + 32) = v19;
    *(_QWORD *)(v23 + 40) = v21;
  }
  while (v11 != v10);
LABEL_3:
  sub_23FC1002C();
  v1[4] = v12;
  sub_23FBFD684((uint64_t *)&unk_256F61630);
  sub_23FCBB890();
  sub_23FD74BD0();
  v14 = v13;
  swift_bridgeObjectRelease();
  v1[13] = v14;
  v15 = (_QWORD *)swift_task_alloc();
  v1[14] = v15;
  *v15 = v1;
  v15[1] = sub_23FCB4FA4;
  sub_23FBFF1EC();
  sub_23FCBCE14();
  return sub_23FD74684();
}

uint64_t sub_23FCB4FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_23FCB5020()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;

  sub_23FCBCD64();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v0 + 128), OpaqueTypeConformance2);
}

uint64_t sub_23FCB5080()
{
  uint64_t v0;

  sub_23FCBCD64();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23FCB50C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v4 = sub_23FC5D530();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v8 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23FD750E0();
  swift_bridgeObjectRelease();
  v13 = 0xD000000000000024;
  v14 = 0x800000023FD85070;
  SessionIdentityPack.description.getter();
  sub_23FD74C48();
  swift_bridgeObjectRelease();
  sub_23FCBAE88();
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = (v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  sub_23FC06D0C((uint64_t)v8, v11 + v9);
  v12 = (_QWORD *)(v11 + v10);
  *v12 = v3;
  v12[1] = v1;
  sub_23FD72560();
  sub_23FBFF1C4();
  swift_retain();
  sub_23FD7256C();
  sub_23FC060D4();
}

uint64_t sub_23FCB520C@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for SessionIdentityPack(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = sub_23FD72BF0();
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  sub_23FCBAE88();
  v12 = sub_23FD72BE4();
  v13 = sub_23FD74F3C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v25 = a3;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v28 = v16;
    v24[0] = v8;
    v24[1] = a2;
    *(_DWORD *)v15 = 136315138;
    v17 = SessionIdentityPack.description.getter();
    v27 = sub_23FC9DC40(v17, v18, &v28);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FCBA0CC();
    _os_log_impl(&dword_23FBF8000, v12, v13, "[SessionCoordinator %s] Forwarding SIGTERM.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v16, -1, -1);
    v19 = v15;
    a3 = v25;
    MEMORY[0x2426798D8](v19, -1, -1);

    v20 = (*(uint64_t (**)(char *, _QWORD))(v26 + 8))(v11, v24[0]);
  }
  else
  {
    sub_23FCBA0CC();

    v20 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v8);
  }
  a1(v20);
  v21 = *MEMORY[0x24BE79840];
  v22 = sub_23FD72554();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a3, v21, v22);
}

uint64_t sub_23FCB547C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_23FBFD684(&qword_256F609D8);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_23FBFEF74((uint64_t)v14, &qword_256F609E0);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_23FD75158();
      }
      if (v2)
        v4 = (char *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_QWORD *)v2;
    }
    v6 = MEMORY[0x242675168](v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_23FD74C60();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = MEMORY[0x242675150](v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0], v10);
    sub_23FCBB2E8();
    __asm { BR              X12 }
  }
  sub_23FBFDE28(v14, (uint64_t)v17);
  sub_23FBFDE40(v17, v17[3]);
  sub_23FD71330();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

void sub_23FCB596C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23FC061F0();
  v2 = v1;
  type metadata accessor for SessionID(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC0603C();
  v5 = sub_23FC5F584();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFF180();
  v10 = v9 - v8;
  sub_23FD73F28();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE56988];
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC10370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v10, v2, v5);
  sub_23FD73FAC();
  sub_23FD73F1C();
  sub_23FD714BC();
  sub_23FCBCEA8();
  sub_23FCBAE88();
  sub_23FD7142C();
  v14 = sub_23FBFF104();
  sub_23FC5BFF8(v14);
  sub_23FBFEE2C(&qword_256F60988, v11, MEMORY[0x24BE56998]);
  sub_23FBFEE2C(&qword_256F60990, v11, MEMORY[0x24BE56990]);
  sub_23FD714B0();
  swift_bridgeObjectRelease();
  sub_23FCBCD7C();
  sub_23FCBA0CC();
  sub_23FC060D4();
}

uint64_t sub_23FCB5ACC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = *(_QWORD *)(sub_23FC5D530() - 8);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 + 64);
  v2[6] = sub_23FC7E09C();
  sub_23FBFD684(&qword_254346A28);
  v2[7] = sub_23FC7E09C();
  return swift_task_switch();
}

uint64_t sub_23FCB5B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  sub_23FD72560();
  v6 = sub_23FBFF1C4();
  sub_23FD7256C();
  sub_23FCBCD40();
  v7 = sub_23FD74DEC();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, 1, 1, v7);
  sub_23FCBAE88();
  v8 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v6;
  sub_23FC06D0C(v1, (uint64_t)v9 + v8);
  *(_QWORD *)((char *)v9 + ((v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_retain();
  sub_23FCB66B0(v2, (uint64_t)&unk_256F60970, (uint64_t)v9);
  swift_release();
  swift_release();
  sub_23FBFEF74(v2, &qword_254346A28);
  sub_23FC5A574();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCB5C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE79838];
  v3 = sub_23FD72554();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23FCB5CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[5] = a5;
  v6[6] = a6;
  v7 = sub_23FD71474();
  v6[7] = v7;
  v6[8] = *(_QWORD *)(v7 - 8);
  v6[9] = swift_task_alloc();
  v8 = sub_23FD73D54();
  v6[10] = v8;
  v6[11] = *(_QWORD *)(v8 - 8);
  v6[12] = swift_task_alloc();
  type metadata accessor for SessionID(0);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  v9 = sub_23FD72B6C();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  type metadata accessor for SessionIdentityPack(0);
  v6[19] = swift_task_alloc();
  v10 = sub_23FD72B90();
  v6[20] = v10;
  v6[21] = *(_QWORD *)(v10 - 8);
  v6[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCB5DF4()
{
  _QWORD *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  os_signpost_id_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23FD723EC();
  sub_23FBFF1EC();
  sub_23FCBAE88();
  sub_23FD72B60();
  v1 = sub_23FD72B84();
  v2 = sub_23FD74FE4();
  if ((sub_23FD7502C() & 1) != 0)
  {
    v22 = v0[6];
    (*(void (**)(_QWORD, _QWORD))(v0[16] + 16))(v0[17], v0[18]);
    v3 = sub_23FBFEFF4();
    v27 = sub_23FBFEFF4();
    *(_DWORD *)v3 = 136315394;
    v4 = SessionIdentityPack.description.getter();
    v0[2] = sub_23FC9DC40(v4, v5, &v27);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FCBA0CC();
    *(_WORD *)(v3 + 12) = 2080;
    v0[3] = v22;
    sub_23FC57E74();
    v6 = sub_23FD75068();
    v0[4] = sub_23FC9DC40(v6, v7, &v27);
    sub_23FD75044();
    sub_23FC1002C();
    v8 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v1, v2, v8, "FSWait", "[SessionCoordinator %s] | [TX %s] Notifying FeatureStore about session end.", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  sub_23FCBA0CC();
  v23 = v0[21];
  v24 = v0[20];
  v25 = v0[22];
  v9 = v0[18];
  v10 = v0[15];
  v11 = v0[16];
  v12 = v0[13];
  v13 = v0[14];
  v14 = v0[8];
  v26 = v0[9];
  v15 = v0[7];
  v16 = sub_23FC5E880();
  v17(v16);
  sub_23FD72BCC();
  sub_23FBFF1C4();
  sub_23FC5E824();
  v0[23] = sub_23FD72BC0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  sub_23FD714BC();
  sub_23FCBAE88();
  sub_23FD7142C();
  v0[24] = v18;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  sub_23FCBAE88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v26, v12, v15);
  sub_23FD73D48();
  v19 = (_QWORD *)swift_task_alloc();
  v0[25] = v19;
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE567D8];
  sub_23FBFEE2C(&qword_256F60978, (uint64_t (*)(uint64_t))MEMORY[0x24BE567D8], MEMORY[0x24BE567E8]);
  sub_23FBFEE2C(&qword_256F60980, v20, MEMORY[0x24BE567E0]);
  *v19 = v0;
  v19[1] = sub_23FCB61A0;
  return sub_23FD71498();
}

uint64_t sub_23FCB61A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  sub_23FC59C00();
  sub_23FC1002C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23FCB620C()
{
  uint64_t v0;

  sub_23FCB62B8(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_release();
  sub_23FC090C0();
  sub_23FC5A574();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCB62B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char v29;
  const char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  os_signpost_id_t v41;
  os_log_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  int v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v54 = a3;
  v3 = sub_23FD72B9C();
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_23FD72B6C();
  v6 = *(_QWORD *)(v55 - 8);
  v8 = MEMORY[0x24BDAC7A8](v55, v7);
  v50 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for SessionIdentityPack(0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v15 = sub_23FD72B90();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD723EC();
  sub_23FCBAE88();
  v20 = sub_23FD72B84();
  sub_23FD72BA8();
  v21 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    v46 = v21;
    v47 = v20;
    v48 = v16;
    v49 = v15;
    swift_retain();
    v22 = v51;
    sub_23FD72BD8();
    swift_release();
    v24 = v52;
    v23 = v53;
    v25 = (*(uint64_t (**)(char *, uint64_t))(v52 + 88))(v22, v53);
    v26 = *MEMORY[0x24BEE7810];
    v27 = v55;
    v28 = v50;
    v45 = v19;
    if (v25 == v26)
    {
      v29 = 0;
      v30 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
      v30 = "[SessionCoordinator %s] | [TX %s] Finished notifying FeatureStore about session end.";
      v29 = 2;
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v28, v12, v27);
    v32 = swift_slowAlloc();
    v53 = v6;
    v33 = v27;
    v34 = v28;
    v35 = v32;
    v36 = swift_slowAlloc();
    v57 = v36;
    *(_BYTE *)v35 = v29;
    *(_BYTE *)(v35 + 1) = v29;
    *(_WORD *)(v35 + 2) = 2080;
    v37 = SessionIdentityPack.description.getter();
    v56 = sub_23FC9DC40(v37, v38, &v57);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FCBA0CC();
    *(_WORD *)(v35 + 12) = 2080;
    v56 = v54;
    sub_23FC57E74();
    v39 = sub_23FD75068();
    v56 = sub_23FC9DC40(v39, v40, &v57);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v41 = sub_23FD72B54();
    v42 = v47;
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v47, (os_signpost_type_t)v46, v41, "FSWait", v30, (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v36, -1, -1);
    MEMORY[0x2426798D8](v35, -1, -1);

    v43 = *(void (**)(char *, uint64_t))(v53 + 8);
    v43(v12, v33);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v49);
    return ((uint64_t (*)(char *, uint64_t))v43)(v34, v33);
  }
  else
  {

    sub_23FCBA0CC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v55);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
}

uint64_t sub_23FCB66B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  sub_23FCBAEB0(a1, 0, 0, 0, 1, 0, 0);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23FD74D80();
    swift_unknownObjectRelease();
  }
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23FCB67B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  BOOL v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23FC061F0();
  v48 = v3;
  v49 = v4;
  v6 = v5;
  v8 = v7;
  v9 = sub_23FBFF104();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC0603C();
  v12 = sub_23FBFD684(&qword_256F5E458);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC12F34();
  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC100D4();
  v19 = v17 - v18;
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = &v43[-v23];
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = &v43[-v26];
  if (*v8 != *v6)
    goto LABEL_16;
  v28 = v8[1] == v6[1] && v8[2] == v6[2];
  if (v28 || (v29 = sub_23FD75380(), v30 = 0, (v29 & 1) != 0))
  {
    v45 = v1;
    v47 = v2;
    v31 = type metadata accessor for SpanMetadata(0);
    sub_23FCBCE30((uint64_t)v8 + *(int *)(v31 + 24), (uint64_t)v27);
    v46 = v31;
    sub_23FCBCE30((uint64_t)v6 + *(int *)(v31 + 24), (uint64_t)v24);
    v32 = v0 + *(int *)(v12 + 48);
    sub_23FCBCE30((uint64_t)v27, v0);
    sub_23FCBCE30((uint64_t)v24, v32);
    sub_23FC752FC(v0);
    if (v28)
    {
      sub_23FC9820C((uint64_t)v24);
      sub_23FC9820C((uint64_t)v27);
      sub_23FC752FC(v32);
      if (v28)
      {
        sub_23FBFEF74(v0, qword_254346A10);
        goto LABEL_19;
      }
    }
    else
    {
      sub_23FC92F18(v0, v19, qword_254346A10);
      sub_23FC752FC(v32);
      if (!v33)
      {
        v35 = v47;
        v36 = v45;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v45, v32, v9);
        sub_23FBFEE2C(&qword_256F5E4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        sub_23FCBCEA8();
        v44 = sub_23FD74BDC();
        v37 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v37(v36, v9);
        sub_23FC9820C((uint64_t)v24);
        sub_23FC9820C((uint64_t)v27);
        v37(v19, v9);
        sub_23FC9820C(v0);
        if ((v44 & 1) != 0)
        {
LABEL_19:
          v38 = *(int *)(v46 + 28);
          v39 = *(_QWORD *)((char *)v8 + v38);
          v40 = *(_QWORD *)((char *)v8 + v38 + 8);
          v41 = (_QWORD *)((char *)v6 + v38);
          if (v39 == *v41 && v40 == v41[1])
            v30 = 1;
          else
            v30 = sub_23FD75380();
          return v30 & 1;
        }
LABEL_16:
        v30 = 0;
        return v30 & 1;
      }
      sub_23FBFEF74((uint64_t)v24, qword_254346A10);
      sub_23FBFEF74((uint64_t)v27, qword_254346A10);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v19, v9);
    }
    sub_23FBFEF74(v0, &qword_256F5E458);
    goto LABEL_16;
  }
  return v30 & 1;
}

uint64_t sub_23FCB6AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FD75380();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_23FCB6C98()
{
  return 4;
}

uint64_t sub_23FCB6CA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FCB6CD0 + 4 * byte_23FD783A0[a1]))(0x64496E617073, 0xE600000000000000);
}

uint64_t sub_23FCB6CD0()
{
  return 0x7069636974726170;
}

uint64_t sub_23FCB6CF0()
{
  return 0x6576457972657571;
}

uint64_t sub_23FCB6D10()
{
  return 0x6552746E65696C63;
}

void sub_23FCB6D34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_23FBFD684(&qword_256F60948);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC12F34();
  sub_23FBFDE40(a1, a1[3]);
  sub_23FCBAD00();
  sub_23FD754C4();
  sub_23FCBADFC();
  sub_23FCBCD4C();
  if (!v1)
  {
    sub_23FCBAE38();
    sub_23FCBCD4C();
    type metadata accessor for SpanMetadata(0);
    sub_23FD71474();
    sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23FD752FC();
    sub_23FD75308();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  sub_23FC0A094();
}

void sub_23FCB6EC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC061D8();
  v21 = sub_23FBFD684(&qword_256F60928);
  MEMORY[0x24BDAC7A8](v21, v5);
  v6 = sub_23FC100B8();
  v7 = type metadata accessor for SpanMetadata(v6);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFF180();
  v22 = (_QWORD *)(v12 - v11);
  v13 = v12 - v11 + *(int *)(v10 + 24);
  v14 = sub_23FD71474();
  v15 = sub_23FC5E824();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v15, v16, 1, v14);
  sub_23FBFDE40(a1, a1[3]);
  sub_23FCBAD00();
  sub_23FD754B8();
  if (v23)
  {
    sub_23FCBCE68();
    sub_23FBFEF74(v13, qword_254346A10);
  }
  else
  {
    sub_23FCBAD3C();
    sub_23FCBCD90();
    *v22 = v24;
    sub_23FCBAD78();
    sub_23FCBCD90();
    v22[1] = v24;
    v22[2] = v25;
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD752A8();
    sub_23FCBADB4(v1, v13);
    v17 = sub_23FD752B4();
    v19 = v18;
    sub_23FCBCDDC();
    v20 = (_QWORD *)((char *)v22 + *(int *)(v7 + 28));
    *v20 = v17;
    v20[1] = v19;
    sub_23FCBAE88();
    sub_23FCBCE68();
    sub_23FCBA0CC();
  }
  sub_23FC06000();
}

uint64_t sub_23FCB718C()
{
  unsigned __int8 *v0;

  return sub_23FCB6CA0(*v0);
}

uint64_t sub_23FCB7194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCB6AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FCB71B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FCB6C98();
  *a1 = result;
  return result;
}

uint64_t sub_23FCB71DC()
{
  sub_23FCBAD00();
  return sub_23FD754DC();
}

uint64_t sub_23FCB7204()
{
  sub_23FCBAD00();
  return sub_23FD754E8();
}

void sub_23FCB722C(_QWORD *a1)
{
  sub_23FCB6EC4(a1);
}

void sub_23FCB7240(_QWORD *a1)
{
  sub_23FCB6D34(a1);
}

void sub_23FCB7258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23FC061F0();
  v3 = v2;
  v5 = v4;
  sub_23FBFD684(&qword_256F60920);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC061C0();
  sub_23FCBAE88();
  sub_23FCBAE88();
  v8 = sub_23FBFD684(&qword_256F5E2B8);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v5, v8);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v8);
  sub_23FBFD684(&qword_256F609E8);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + ((*(unsigned int *)(*(_QWORD *)v10 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_23FC92F18(v1, v10 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v10 + 16), &qword_256F60920);
  sub_23FBFEF74(v1, &qword_256F60920);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_commandContinuation) = v10;
  sub_23FBFD684(qword_256F609F0);
  v11 = sub_23FC58AA0();
  *(_DWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 16) = v3;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5, v8);
  sub_23FCBA0CC();
  sub_23FCBA0CC();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_signpostIntervalState) = v11;
  sub_23FC060D4();
}

uint64_t sub_23FCB7400()
{
  uint64_t v0;

  sub_23FCB7480(MEMORY[0x24BEE4AF8], (uint64_t)sub_23FBFF89C, 0, 1);
  sub_23FCBA0CC();
  sub_23FCBA0CC();
  swift_release();
  swift_release();
  return v0;
}

void sub_23FCB7480(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  os_unfair_lock_s *v8;
  _QWORD v9[8];

  v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_commandContinuation);
  v9[2] = a1;
  v9[4] = a2;
  v9[5] = a3;
  sub_23FCBA6F0((void (*)(uint64_t *__return_ptr, uint64_t))sub_23FCBAACC, (uint64_t)v9, v6);
  if (v7 == 2)
  {
    if ((a4 & 1) != 0)
      return;
    __break(1u);
  }
  if ((v7 & 1) == 0)
  {
    if ((a4 & 1) != 0)
      return;
    __break(1u);
  }
  v8 = (os_unfair_lock_s *)(*(_QWORD *)(v4
                                      + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_signpostIntervalState)
                          + 24);
  os_unfair_lock_lock(v8);
  sub_23FCBAAE8();
  os_unfair_lock_unlock(v8);
}

uint64_t sub_23FCB7528()
{
  sub_23FCB7400();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionCoordinatorResponseCallback(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60690);
}

uint64_t sub_23FCB7560()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SpanMetadata(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SpanMetadata(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F60788);
}

uint64_t *sub_23FCB760C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FD71474();
    swift_bridgeObjectRetain();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23FBFD684(qword_254346A10);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v13 = *(int *)(a3 + 28);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23FCB7724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FD71474();
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCB779C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23FD71474();
  swift_bridgeObjectRetain();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23FBFD684(qword_254346A10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23FCB7888(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD71474();
  v10 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v9);
  v11 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23FBFD684(qword_254346A10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = *(int *)(a3 + 28);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FCB79E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23FD71474();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23FBFD684(qword_254346A10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23FCB7AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23FD71474();
  v10 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v9);
  v11 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23FBFD684(qword_254346A10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = *(int *)(a3 + 28);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FCB7BE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCB7BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23FC1020C(*(_QWORD *)(a1 + 16));
    sub_23FC09258();
  }
  else
  {
    v6 = sub_23FBFD684(qword_254346A10);
    sub_23FC06098(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_23FCB7C50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FCB7C5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
    sub_23FC09258();
  }
  else
  {
    v7 = sub_23FBFD684(qword_254346A10);
    sub_23FC0608C(a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

void sub_23FCB7CBC()
{
  unint64_t v0;

  sub_23FCB47B4(319, qword_256F60798, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23FCB7D58()
{
  return swift_release();
}

void sub_23FCB7D60(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  sub_23FBFF0A0();
}

uint64_t sub_23FCB7D98(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23FCB7DE8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for SessionCoordinatorDebuggerState()
{
  sub_23FC7A748();
}

uint64_t *sub_23FCB7E3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  char *v75;
  uint64_t v76;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          v8 = a2[2];
          a1[1] = a2[1];
          a1[2] = v8;
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_bridgeObjectRetain();
          v54 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
          v55 = (char *)a1 + v54;
          v56 = (char *)a2 + v54;
          *(_OWORD *)v55 = *(_OWORD *)((char *)a2 + v54);
          *((_QWORD *)v55 + 2) = *(uint64_t *)((char *)a2 + v54 + 16);
          v76 = type metadata accessor for SpanMetadata(0);
          v57 = *(int *)(v76 + 24);
          v58 = &v55[v57];
          v59 = &v56[v57];
          v60 = sub_23FD71474();
          swift_bridgeObjectRetain();
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v59, 1, v60))
          {
            v61 = sub_23FBFD684(qword_254346A10);
            memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v58, 0, 1, v60);
          }
          v66 = *(int *)(v76 + 28);
          v67 = &v55[v66];
          v68 = &v56[v66];
          v69 = *((_QWORD *)v68 + 1);
          *(_QWORD *)v67 = *(_QWORD *)v68;
          *((_QWORD *)v67 + 1) = v69;
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        v70 = *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48);
        v71 = (uint64_t *)((char *)a1 + v70);
        v72 = (uint64_t *)((char *)a2 + v70);
        v73 = v72[1];
        *v71 = *v72;
        v71[1] = v73;
        swift_retain();
        goto LABEL_23;
      case 1u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        swift_bridgeObjectRetain();
        v11 = (int *)sub_23FBFD684(&qword_256F5E498);
        v12 = v11[16];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_23FD71474();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v14, 1, v15))
        {
          v16 = sub_23FBFD684(qword_254346A10);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v13, 0, 1, v15);
        }
        v62 = v11[20];
        v63 = (uint64_t *)((char *)a1 + v62);
        v64 = (uint64_t *)((char *)a2 + v62);
        v65 = v64[1];
        *v63 = *v64;
        v63[1] = v65;
        *(uint64_t *)((char *)a1 + v11[24]) = *(uint64_t *)((char *)a2 + v11[24]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 2u:
        v17 = sub_23FD73EF8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v18 = sub_23FBFD684(&qword_256F5E4A0);
        *(uint64_t *)((char *)a1 + *(int *)(v18 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 48));
        v19 = *(int *)(v18 + 64);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_23FD71474();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v21, 1, v22))
        {
          v23 = sub_23FBFD684(qword_254346A10);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v20, 0, 1, v22);
        }
        goto LABEL_23;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v24 = a2[3];
        a1[2] = a2[2];
        a1[3] = v24;
        v25 = a2[5];
        a1[4] = a2[4];
        a1[5] = v25;
        a1[6] = a2[6];
        v26 = (int *)type metadata accessor for SessionCoordinatorInjectionRequest(0);
        v27 = v26[8];
        v75 = (char *)a1 + v27;
        v28 = (char *)a2 + v27;
        v29 = sub_23FD71474();
        v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30(v75, v28, v29);
        v31 = v26[9];
        v32 = (uint64_t *)((char *)a1 + v31);
        v33 = (uint64_t *)((char *)a2 + v31);
        v34 = v33[1];
        *v32 = *v33;
        v32[1] = v34;
        v35 = v26[10];
        v36 = (uint64_t *)((char *)a1 + v35);
        v37 = (uint64_t *)((char *)a2 + v35);
        v38 = *v37;
        v39 = v37[1];
        swift_bridgeObjectRetain();
        sub_23FC577F4(v38, v39);
        *v36 = v38;
        v36[1] = v39;
        v40 = v26[11];
        v41 = (uint64_t *)((char *)a1 + v40);
        v42 = (uint64_t *)((char *)a2 + v40);
        v43 = v42[1];
        *v41 = *v42;
        v41[1] = v43;
        v44 = v26[12];
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        swift_bridgeObjectRetain();
        v47 = sub_23FBFD684(&qword_256F5E488);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
        goto LABEL_23;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v48 = a2[3];
        a1[2] = a2[2];
        a1[3] = v48;
        v49 = a2[5];
        a1[4] = a2[4];
        a1[5] = v49;
        v50 = a2[7];
        a1[6] = a2[6];
        a1[7] = v50;
        v51 = a2[9];
        a1[8] = a2[8];
        v52 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23FC577F4(v51, v52);
        a1[9] = v51;
        a1[10] = v52;
        goto LABEL_23;
      case 5u:
        v53 = sub_23FD721C4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(a1, a2, v53);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F608E8);
}

uint64_t sub_23FCB83AC(uint64_t a1)
{
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRelease();
      if (EnumCaseMultiPayload != 1)
      {
        v16 = a1 + *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
        swift_bridgeObjectRelease();
        v17 = v16 + *(int *)(type metadata accessor for SpanMetadata(0) + 24);
        v18 = sub_23FD71474();
        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v17, 1, v18))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      }
      swift_bridgeObjectRelease();
      sub_23FBFD684(&qword_256F5E2B0);
      result = swift_release();
      break;
    case 1:
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(sub_23FBFD684(&qword_256F5E498) + 64);
      v5 = sub_23FD71474();
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    case 2:
      v6 = sub_23FD73EF8();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v7 = a1 + *(int *)(sub_23FBFD684(&qword_256F5E4A0) + 64);
      v8 = sub_23FD71474();
      result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v7, 1, v8);
      if (!(_DWORD)result)
      {
        v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v15 = v7;
        v13 = v8;
        goto LABEL_13;
      }
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = (int *)type metadata accessor for SessionCoordinatorInjectionRequest(0);
      v10 = a1 + v9[8];
      v11 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      sub_23FC577B0(*(_QWORD *)(a1 + v9[10]), *(_QWORD *)(a1 + v9[10] + 8));
      swift_bridgeObjectRelease();
      a1 += v9[12];
      v12 = sub_23FBFD684(&qword_256F5E488);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_23FC577B0(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
      break;
    case 5:
      v12 = sub_23FD721C4();
LABEL_12:
      v13 = v12;
      v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
      v15 = a1;
LABEL_13:
      result = v14(v15, v13);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_23FCB86AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v74;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        v7 = a2[2];
        a1[1] = a2[1];
        a1[2] = v7;
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        v53 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        *(_OWORD *)v54 = *(_OWORD *)((char *)a2 + v53);
        *((_QWORD *)v54 + 2) = *(_QWORD *)((char *)a2 + v53 + 16);
        v74 = type metadata accessor for SpanMetadata(0);
        v56 = *(int *)(v74 + 24);
        v57 = &v54[v56];
        v58 = &v55[v56];
        v59 = sub_23FD71474();
        swift_bridgeObjectRetain();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v58, 1, v59))
        {
          v60 = sub_23FBFD684(qword_254346A10);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v57, 0, 1, v59);
        }
        v65 = *(int *)(v74 + 28);
        v66 = &v54[v65];
        v67 = &v55[v65];
        v68 = *((_QWORD *)v67 + 1);
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_QWORD *)v66 + 1) = v68;
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      v69 = *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48);
      v70 = (_QWORD *)((char *)a1 + v69);
      v71 = (_QWORD *)((char *)a2 + v69);
      v72 = v71[1];
      *v70 = *v71;
      v70[1] = v72;
      swift_retain();
      goto LABEL_21;
    case 1u:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      v9 = (int *)sub_23FBFD684(&qword_256F5E498);
      v10 = v9[16];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23FD71474();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v13))
      {
        v14 = sub_23FBFD684(qword_254346A10);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v11, 0, 1, v13);
      }
      v61 = v9[20];
      v62 = (_QWORD *)((char *)a1 + v61);
      v63 = (_QWORD *)((char *)a2 + v61);
      v64 = v63[1];
      *v62 = *v63;
      v62[1] = v64;
      *(_QWORD *)((char *)a1 + v9[24]) = *(_QWORD *)((char *)a2 + v9[24]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 2u:
      v15 = sub_23FD73EF8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = sub_23FBFD684(&qword_256F5E4A0);
      *(_QWORD *)((char *)a1 + *(int *)(v16 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 48));
      v17 = *(int *)(v16 + 64);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23FD71474();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_23FBFD684(qword_254346A10);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
      }
      goto LABEL_21;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v22 = a2[3];
      a1[2] = a2[2];
      a1[3] = v22;
      v23 = a2[5];
      a1[4] = a2[4];
      a1[5] = v23;
      a1[6] = a2[6];
      v24 = (int *)type metadata accessor for SessionCoordinatorInjectionRequest(0);
      v25 = v24[8];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23FD71474();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      v30 = v24[9];
      v31 = (_QWORD *)((char *)a1 + v30);
      v32 = (_QWORD *)((char *)a2 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = v24[10];
      v35 = (_QWORD *)((char *)a1 + v34);
      v36 = (_QWORD *)((char *)a2 + v34);
      v37 = *v36;
      v38 = v36[1];
      swift_bridgeObjectRetain();
      sub_23FC577F4(v37, v38);
      *v35 = v37;
      v35[1] = v38;
      v39 = v24[11];
      v40 = (_QWORD *)((char *)a1 + v39);
      v41 = (_QWORD *)((char *)a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      v43 = v24[12];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      swift_bridgeObjectRetain();
      v46 = sub_23FBFD684(&qword_256F5E488);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      goto LABEL_21;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v47 = a2[3];
      a1[2] = a2[2];
      a1[3] = v47;
      v48 = a2[5];
      a1[4] = a2[4];
      a1[5] = v48;
      v49 = a2[7];
      a1[6] = a2[6];
      a1[7] = v49;
      v50 = a2[9];
      a1[8] = a2[8];
      v51 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23FC577F4(v50, v51);
      a1[9] = v50;
      a1[10] = v51;
      goto LABEL_21;
    case 5u:
      v52 = sub_23FD721C4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_23FCB8BE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v62;
  uint64_t v63;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          a1[1] = a2[1];
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_bridgeObjectRetain();
          v43 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
          v44 = (_QWORD *)((char *)a1 + v43);
          v45 = (char *)a2 + v43;
          *v44 = *(_QWORD *)((char *)a2 + v43);
          v44[1] = *(_QWORD *)((char *)a2 + v43 + 8);
          v44[2] = *(_QWORD *)((char *)a2 + v43 + 16);
          v63 = type metadata accessor for SpanMetadata(0);
          v46 = *(int *)(v63 + 24);
          v47 = (char *)v44 + v46;
          v48 = &v45[v46];
          v49 = sub_23FD71474();
          swift_bridgeObjectRetain();
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v48, 1, v49))
          {
            v50 = sub_23FBFD684(qword_254346A10);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v47, 0, 1, v49);
          }
          v54 = *(int *)(v63 + 28);
          v55 = (_QWORD *)((char *)v44 + v54);
          v56 = &v45[v54];
          *v55 = *(_QWORD *)v56;
          v55[1] = *((_QWORD *)v56 + 1);
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        v57 = *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48);
        v58 = (_QWORD *)((char *)a1 + v57);
        v59 = (_QWORD *)((char *)a2 + v57);
        v60 = v59[1];
        *v58 = *v59;
        v58[1] = v60;
        swift_retain();
        goto LABEL_22;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v7 = (int *)sub_23FBFD684(&qword_256F5E498);
        v8 = v7[16];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_23FD71474();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v11))
        {
          v12 = sub_23FBFD684(qword_254346A10);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v11);
        }
        v51 = v7[20];
        v52 = (_QWORD *)((char *)a1 + v51);
        v53 = (_QWORD *)((char *)a2 + v51);
        *v52 = *v53;
        v52[1] = v53[1];
        *(_QWORD *)((char *)a1 + v7[24]) = *(_QWORD *)((char *)a2 + v7[24]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 2u:
        v13 = sub_23FD73EF8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = sub_23FBFD684(&qword_256F5E4A0);
        *(_QWORD *)((char *)a1 + *(int *)(v14 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v14 + 48));
        v15 = *(int *)(v14 + 64);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23FD71474();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v18))
        {
          v19 = sub_23FBFD684(qword_254346A10);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v16, 0, 1, v18);
        }
        goto LABEL_22;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        v20 = (int *)type metadata accessor for SessionCoordinatorInjectionRequest(0);
        v21 = v20[8];
        v62 = (char *)a1 + v21;
        v22 = (char *)a2 + v21;
        v23 = sub_23FD71474();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24(v62, v22, v23);
        v25 = v20[9];
        v26 = (_QWORD *)((char *)a1 + v25);
        v27 = (_QWORD *)((char *)a2 + v25);
        *v26 = *v27;
        v26[1] = v27[1];
        v28 = v20[10];
        v29 = (_QWORD *)((char *)a1 + v28);
        v30 = (_QWORD *)((char *)a2 + v28);
        v31 = *v30;
        v32 = v30[1];
        swift_bridgeObjectRetain();
        sub_23FC577F4(v31, v32);
        *v29 = v31;
        v29[1] = v32;
        v33 = v20[11];
        v34 = (_QWORD *)((char *)a1 + v33);
        v35 = (_QWORD *)((char *)a2 + v33);
        *v34 = *v35;
        v34[1] = v35[1];
        v36 = v20[12];
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        swift_bridgeObjectRetain();
        v39 = sub_23FBFD684(&qword_256F5E488);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_22;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        v41 = a2[9];
        v40 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23FC577F4(v41, v40);
        a1[9] = v41;
        a1[10] = v40;
        goto LABEL_22;
      case 5u:
        v42 = sub_23FD721C4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_QWORD *sub_23FCB919C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v30 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        *(_QWORD *)v31 = *(_QWORD *)((char *)a2 + v30);
        *(_OWORD *)(v31 + 8) = *(_OWORD *)((char *)a2 + v30 + 8);
        v33 = type metadata accessor for SpanMetadata(0);
        v34 = *(int *)(v33 + 24);
        v35 = &v31[v34];
        v36 = &v32[v34];
        v37 = sub_23FD71474();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v36, 1, v37))
        {
          v38 = sub_23FBFD684(qword_254346A10);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v35, 0, 1, v37);
        }
        *(_OWORD *)&v31[*(int *)(v33 + 28)] = *(_OWORD *)&v32[*(int *)(v33 + 28)];
        swift_storeEnumTagMultiPayload();
      }
      v39 = sub_23FBFD684(&qword_256F5E2B0);
      *(_OWORD *)((char *)a1 + *(int *)(v39 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v39 + 48));
      goto LABEL_20;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = (int *)sub_23FBFD684(&qword_256F5E498);
      v8 = v7[16];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FD71474();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v11))
      {
        v12 = sub_23FBFD684(qword_254346A10);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + v7[20]) = *(_OWORD *)((char *)a2 + v7[20]);
      *(_QWORD *)((char *)a1 + v7[24]) = *(_QWORD *)((char *)a2 + v7[24]);
      goto LABEL_20;
    case 2u:
      v13 = sub_23FD73EF8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = sub_23FBFD684(&qword_256F5E4A0);
      *(_QWORD *)((char *)a1 + *(int *)(v14 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v14 + 48));
      v15 = *(int *)(v14 + 64);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FD71474();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v18))
      {
        v19 = sub_23FBFD684(qword_254346A10);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v16, 0, 1, v18);
      }
      goto LABEL_20;
    case 3u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v20 = (int *)type metadata accessor for SessionCoordinatorInjectionRequest(0);
      v21 = v20[8];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FD71474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
      *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
      *(_OWORD *)((char *)a1 + v20[11]) = *(_OWORD *)((char *)a2 + v20[11]);
      v25 = v20[12];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23FBFD684(&qword_256F5E488);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_20;
    case 5u:
      v29 = sub_23FD721C4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_23FCB95C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v30 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
          v31 = (char *)a1 + v30;
          v32 = (char *)a2 + v30;
          *(_QWORD *)v31 = *(_QWORD *)((char *)a2 + v30);
          *(_OWORD *)(v31 + 8) = *(_OWORD *)((char *)a2 + v30 + 8);
          v33 = type metadata accessor for SpanMetadata(0);
          v34 = *(int *)(v33 + 24);
          v35 = &v31[v34];
          v36 = &v32[v34];
          v37 = sub_23FD71474();
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v36, 1, v37))
          {
            v38 = sub_23FBFD684(qword_254346A10);
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v35, 0, 1, v37);
          }
          *(_OWORD *)&v31[*(int *)(v33 + 28)] = *(_OWORD *)&v32[*(int *)(v33 + 28)];
          swift_storeEnumTagMultiPayload();
        }
        v39 = sub_23FBFD684(&qword_256F5E2B0);
        *(_OWORD *)((char *)a1 + *(int *)(v39 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v39 + 48));
        goto LABEL_21;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = (int *)sub_23FBFD684(&qword_256F5E498);
        v8 = v7[16];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_23FD71474();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v11))
        {
          v12 = sub_23FBFD684(qword_254346A10);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v11);
        }
        *(_OWORD *)((char *)a1 + v7[20]) = *(_OWORD *)((char *)a2 + v7[20]);
        *(_QWORD *)((char *)a1 + v7[24]) = *(_QWORD *)((char *)a2 + v7[24]);
        goto LABEL_21;
      case 2u:
        v13 = sub_23FD73EF8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = sub_23FBFD684(&qword_256F5E4A0);
        *(_QWORD *)((char *)a1 + *(int *)(v14 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v14 + 48));
        v15 = *(int *)(v14 + 64);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23FD71474();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v18))
        {
          v19 = sub_23FBFD684(qword_254346A10);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v16, 0, 1, v18);
        }
        goto LABEL_21;
      case 3u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v20 = (int *)type metadata accessor for SessionCoordinatorInjectionRequest(0);
        v21 = v20[8];
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_23FD71474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
        *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
        *(_OWORD *)((char *)a1 + v20[11]) = *(_OWORD *)((char *)a2 + v20[11]);
        v25 = v20[12];
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = sub_23FBFD684(&qword_256F5E488);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        goto LABEL_21;
      case 5u:
        v29 = sub_23FD721C4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_23FCB9A0C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;
  char v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;

  type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(319);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v17 = &v16;
    v1 = MEMORY[0x24BEE0158] + 64;
    v10 = MEMORY[0x24BEE0158] + 64;
    v11 = MEMORY[0x24BEE0178] + 64;
    sub_23FCB47B4(319, qword_256F60798, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v3 <= 0x3F)
    {
      v12 = *(_QWORD *)(v2 - 8) + 64;
      v13 = &unk_23FD78410;
      v14 = v1;
      swift_getTupleTypeLayout();
      v18 = &v15;
      sub_23FD73EF8();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        v19 = &v9;
        v5 = type metadata accessor for SessionCoordinatorInjectionRequest(319);
        if (v6 <= 0x3F)
        {
          v20 = *(_QWORD *)(v5 - 8) + 64;
          v21 = "X";
          v7 = sub_23FD721C4();
          if (v8 <= 0x3F)
          {
            v22 = *(_QWORD *)(v7 - 8) + 64;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

uint64_t *sub_23FCB9B78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      v8 = a2[2];
      a1[1] = v7;
      a1[2] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      v10 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      *(_OWORD *)v11 = *(_OWORD *)((char *)a2 + v10);
      *((_QWORD *)v11 + 2) = *(uint64_t *)((char *)a2 + v10 + 16);
      v13 = type metadata accessor for SpanMetadata(0);
      v14 = *(int *)(v13 + 24);
      v15 = &v11[v14];
      v16 = &v12[v14];
      v17 = sub_23FD71474();
      swift_bridgeObjectRetain();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_23FBFD684(qword_254346A10);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v19 = *(int *)(v13 + 28);
      v20 = &v11[v19];
      v21 = &v12[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FCB9D14(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload != 1)
  {
    v3 = a1 + *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
    swift_bridgeObjectRelease();
    v4 = v3 + *(int *)(type metadata accessor for SpanMetadata(0) + 24);
    v5 = sub_23FD71474();
    if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23FCB9DCC(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[1];
    v6 = a2[2];
    a1[1] = v5;
    a1[2] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    v7 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
    *((_QWORD *)v8 + 2) = *(_QWORD *)((char *)a2 + v7 + 16);
    v10 = type metadata accessor for SpanMetadata(0);
    v11 = *(int *)(v10 + 24);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = sub_23FD71474();
    swift_bridgeObjectRetain();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v13, 1, v14))
    {
      v15 = sub_23FBFD684(qword_254346A10);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v12, 0, 1, v14);
    }
    v16 = *(int *)(v10 + 28);
    v17 = &v8[v16];
    v18 = &v9[v16];
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23FCB9F34(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      v5 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
      v6 = (_QWORD *)((char *)a1 + v5);
      v7 = (char *)a2 + v5;
      *v6 = *(_QWORD *)((char *)a2 + v5);
      v6[1] = *(_QWORD *)((char *)a2 + v5 + 8);
      v6[2] = *(_QWORD *)((char *)a2 + v5 + 16);
      v8 = type metadata accessor for SpanMetadata(0);
      v9 = *(int *)(v8 + 24);
      v10 = (char *)v6 + v9;
      v11 = &v7[v9];
      v12 = sub_23FD71474();
      swift_bridgeObjectRetain();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_23FBFD684(qword_254346A10);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v10, 0, 1, v12);
      }
      v14 = *(int *)(v8 + 28);
      v15 = (_QWORD *)((char *)v6 + v14);
      v16 = &v7[v14];
      *v15 = *(_QWORD *)v16;
      v15[1] = *((_QWORD *)v16 + 1);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23FCBA0CC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = sub_23FCBCDB0();
  v2 = v1(v0);
  sub_23FBFF0E4(v2);
  sub_23FBFF0A0();
}

_QWORD *sub_23FCBA0F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
    *(_OWORD *)(v7 + 8) = *(_OWORD *)((char *)a2 + v6 + 8);
    v9 = type metadata accessor for SpanMetadata(0);
    v10 = *(int *)(v9 + 24);
    v11 = &v7[v10];
    v12 = &v8[v10];
    v13 = sub_23FD71474();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23FBFD684(qword_254346A10);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v11, 0, 1, v13);
    }
    *(_OWORD *)&v7[*(int *)(v9 + 28)] = *(_OWORD *)&v8[*(int *)(v9 + 28)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_23FCBA22C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
      *(_OWORD *)(v7 + 8) = *(_OWORD *)((char *)a2 + v6 + 8);
      v9 = type metadata accessor for SpanMetadata(0);
      v10 = *(int *)(v9 + 24);
      v11 = &v7[v10];
      v12 = &v8[v10];
      v13 = sub_23FD71474();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v13))
      {
        v14 = sub_23FBFD684(qword_254346A10);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v11, 0, 1, v13);
      }
      *(_OWORD *)&v7[*(int *)(v9 + 28)] = *(_OWORD *)&v8[*(int *)(v9 + 28)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23FCBA380()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for SpanMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_23FD785C0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23FCBA404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v32 = a2;
  v29 = a3;
  v7 = sub_23FCBCDB0();
  type metadata accessor for SessionCoordinatorCommand(v7);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC0603C();
  v10 = sub_23FBFD684(&qword_256F5E2A8);
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_256F60920);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC12F34();
  v16 = sub_23FBFD684(&qword_256F5E2B8);
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC92F18(v3, v4, &qword_256F60920);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 1, v16) == 1)
  {
    sub_23FBFEF74(v4, &qword_256F60920);
    v33 = 0;
    v34 = 0xE000000000000000;
    sub_23FD750E0();
    sub_23FD74C48();
    v27 = (uint64_t *)(v32 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_spanMetadata);
    sub_23FC5AAE8();
    sub_23FCBCD7C();
    sub_23FD73214();
    sub_23FD74C48();
    sub_23FC15A24();
    swift_bridgeObjectRelease();
    sub_23FD74C48();
    v35 = *v27;
    sub_23FC57E74();
    sub_23FD75068();
    sub_23FD74C48();
    sub_23FC15A24();
    sub_23FD74C48();
    sub_23FD75230();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v20, v4, v16);
    v21 = sub_23FBFD684(&qword_256F5E4A0);
    v22 = *(int *)(v21 + 48);
    v23 = v5 + *(int *)(v21 + 64);
    v24 = sub_23FD73EF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v5, v29, v24);
    v25 = v32 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_spanMetadata;
    *(_QWORD *)(v5 + v22) = *(_QWORD *)(v32
                                      + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_spanMetadata);
    v26 = type metadata accessor for SpanMetadata(0);
    sub_23FC92F18(v25 + *(int *)(v26 + 24), v23, qword_254346A10);
    swift_storeEnumTagMultiPayload();
    sub_23FD74E1C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v16);
    sub_23FC06000();
  }
}

void sub_23FCBA6F0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v5;
  uint64_t v6;

  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  if (os_unfair_lock_trylock(v5))
  {
    a1(&v6, a3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a3 + 16));
    os_unfair_lock_unlock(v5);
  }
}

void sub_23FCBA794(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v5;
  uint64_t v6;

  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  if (os_unfair_lock_trylock(v5))
  {
    a1(&v6, a3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a3 + 16));
    os_unfair_lock_unlock(v5);
  }
}

uint64_t sub_23FCBA83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  _QWORD *v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v25 = a2;
  v26 = a5;
  v22[1] = a3;
  v27 = a6;
  v22[2] = type metadata accessor for SessionCoordinatorCommand(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (_QWORD *)((char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_23FBFD684(&qword_256F5E2A8);
  v23 = *(_QWORD *)(v10 - 8);
  v24 = v10;
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_256F60920);
  MEMORY[0x24BDAC7A8]();
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FBFD684(&qword_256F5E2B8);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8]();
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC92F18(a1, (uint64_t)v14, &qword_256F60920);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v14, 1, v15) == 1)
  {
    sub_23FBFEF74((uint64_t)v14, &qword_256F60920);
    v19 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v20 = (_QWORD *)((char *)v9 + *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48));
    sub_23FBFD684(&qword_256F5E2D8);
    *v9 = v25;
    sub_23FCBAE88();
    type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
    swift_storeEnumTagMultiPayload();
    *v20 = a4;
    v20[1] = v26;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23FD74E1C();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v19 = 1;
  }
  *v27 = v19;
  sub_23FBFEF74(a1, &qword_256F60920);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v15);
}

uint64_t sub_23FCBAACC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_23FCBA83C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_23FCBAAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  NSObject *v10;
  const char *v11;
  uint8_t *v12;
  os_signpost_id_t v13;
  _BYTE v15[4];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_23FD72B9C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8]();
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23FD72B6C();
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  MEMORY[0x24BDAC7A8]();
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_23FD72B90();
  v7 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FD723E0();
  v10 = sub_23FD72B84();
  sub_23FD72BA8();
  v16 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    swift_retain();
    sub_23FD72BD8();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x24BEE7810])
    {
      v11 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v11 = "";
    }
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v10, (os_signpost_type_t)v16, v13, "Span", v11, v12, 2u);
    MEMORY[0x2426798D8](v12, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v6, v19);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v17);
}

uint64_t sub_23FCBACF4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    return sub_23FCBCD18(result, a2);
  __break(1u);
  return result;
}

unint64_t sub_23FCBAD00()
{
  unint64_t result;

  result = qword_256F60930;
  if (!qword_256F60930)
  {
    result = MEMORY[0x2426797E8](&unk_23FD78864, &type metadata for SpanMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60930);
  }
  return result;
}

unint64_t sub_23FCBAD3C()
{
  unint64_t result;

  result = qword_256F60938;
  if (!qword_256F60938)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BE56768], MEMORY[0x24BE56758]);
    atomic_store(result, (unint64_t *)&qword_256F60938);
  }
  return result;
}

unint64_t sub_23FCBAD78()
{
  unint64_t result;

  result = qword_256F60940;
  if (!qword_256F60940)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BE550F8], MEMORY[0x24BE550E0]);
    atomic_store(result, (unint64_t *)&qword_256F60940);
  }
  return result;
}

uint64_t sub_23FCBADB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(qword_254346A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23FCBADFC()
{
  unint64_t result;

  result = qword_256F60950;
  if (!qword_256F60950)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BE56760], MEMORY[0x24BE56758]);
    atomic_store(result, (unint64_t *)&qword_256F60950);
  }
  return result;
}

unint64_t sub_23FCBAE38()
{
  unint64_t result;

  result = qword_256F60958;
  if (!qword_256F60958)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BE550E8], MEMORY[0x24BE550E0]);
    atomic_store(result, &qword_256F60958);
  }
  return result;
}

uint64_t type metadata accessor for EventPayloadWithPreassignedID(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60B90);
}

void sub_23FCBAE88()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = sub_23FCBCD40();
  v2 = v1(v0);
  sub_23FC12EF8(v2);
  sub_23FBFF0A0();
}

uint64_t sub_23FCBAEB0(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  unsigned __int8 v20;
  uint64_t v21;

  v14 = sub_23FBFD684(&qword_254346A28);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC92F18(a1, (uint64_t)v17, &qword_254346A28);
  v18 = sub_23FD74DEC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v18) == 1)
  {
    sub_23FBFEF74((uint64_t)v17, &qword_254346A28);
    result = 0;
    if ((a2 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v20 = sub_23FD74DE0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    result = v20;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if ((a3 & 1) != 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if ((a3 & 1) != 0)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if ((a5 & 1) != 0)
LABEL_6:
    result |= 0x1000uLL;
LABEL_7:
  if ((a6 & 1) != 0)
    result |= 0x2000uLL;
  if ((a7 & 1) != 0)
    return result | 0x4000;
  return result;
}

uint64_t type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60A50);
}

uint64_t sub_23FCBB004()
{
  uint64_t v0;

  sub_23FC5D530();
  sub_23FC5E8E8();
  swift_unknownObjectRelease();
  swift_release();
  v0 = sub_23FBFF104();
  sub_23FC5BFF8(v0);
  sub_23FCBCD20();
  sub_23FCBCE54();
  sub_23FCBCE4C();
  return sub_23FC5A154();
}

uint64_t sub_23FCBB07C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_23FC5D530();
  sub_23FCBCE38();
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v9 = (uint64_t)v1 + v8;
  v10 = *(_QWORD *)((char *)v1 + (v4 & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23FBFEF9C;
  return sub_23FCB5CBC(a1, v5, v6, v7, v9, v10);
}

uint64_t sub_23FCBB118()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23FCBB13C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_23FD74C90();
    sub_23FCBCDFC(v4);
  }
  else
  {
    v3 = MEMORY[0x242678A2C](15, a1 >> 16);
    sub_23FCBCDFC(v3);
  }
  sub_23FBFF0A0();
}

uint64_t sub_23FCBB190()
{
  uint64_t v0;

  sub_23FC5D530();
  sub_23FC5E8E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = sub_23FBFF104();
  sub_23FC5BFF8(v0);
  sub_23FCBCD20();
  sub_23FCBCE54();
  sub_23FCBCE4C();
  sub_23FBFF1EC();
  return sub_23FC5A154();
}

uint64_t sub_23FCBB1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FC5D530() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v0 + ((v2 + 32) & ~v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23FCBB26C;
  return sub_23FCB4A98(v3, v4, v5);
}

uint64_t sub_23FCBB26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FBFF004();
  v0 = sub_23FCBCD7C();
  return sub_23FC09150(v0, v1, v2);
}

_QWORD *sub_23FCBB2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_23FCBB67C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_23FCBBA6C, (uint64_t)v5, a1, a2);
}

void sub_23FCBB2E8()
{
  __asm { BR              X11 }
}

_QWORD *sub_23FCBB348@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_23FCBB788((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

uint64_t sub_23FCBB588@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_23FD71360();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x24267512C]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x242675138]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23FCBB5FC(uint64_t result)
{
  char v1;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_23FD750EC();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_23FCBB67C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

char *sub_23FCBB6DC(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_23FD71300();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_23FD71318();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_23FD7130C();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

_QWORD *sub_23FCBB788(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_23FCBB7CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23FD71300();
  if (!result || (result = sub_23FD71318(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23FD7130C();
      sub_23FD74B1C();
      sub_23FBFEE2C(&qword_256F609C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_23FD74AEC();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_23FCBB890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F609D0;
  if (!qword_256F609D0)
  {
    v1 = sub_23FBFEDE8((uint64_t *)&unk_256F61630);
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256F609D0);
  }
  return result;
}

uint64_t sub_23FCBB8D4()
{
  sub_23FD74B1C();
  sub_23FBFEE2C(&qword_256F609C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
  return sub_23FD74AEC();
}

_QWORD *sub_23FCBB9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_23FCBB2A0(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

_QWORD *sub_23FCBBA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_23FCBB9E0(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_23FCBBA2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_23FCBB5FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_23FCBBA6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23FCBBA2C(a1, a2);
}

uint64_t sub_23FCBBA88()
{
  uint64_t v0;

  sub_23FC5D530();
  sub_23FC5E8E8();
  v0 = sub_23FBFF104();
  sub_23FC5BFF8(v0);
  sub_23FCBCD20();
  sub_23FCBCE54();
  sub_23FCBCE4C();
  swift_release();
  return sub_23FC5A154();
}

uint64_t sub_23FCBBAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_23FC5D530();
  sub_23FCBCE38();
  return sub_23FCB520C(*(void (**)(uint64_t))(v1 + (v3 & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + (v3 & 0xFFFFFFFFFFFFFFF8) + 8), a1);
}

uint64_t *sub_23FCBBB40(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23FD73D9C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23FCBBBDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD73D9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_23FCBBC20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD73D9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t sub_23FCBBC94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23FD73D9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23FCBBD28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD73D9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23FCBBD98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD73D9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_23FCBBE10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCBBE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;

  sub_23FCBCDB0();
  v6 = sub_23FD73D9C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23FC06098(v3, a2, v6);
  }
  else
  {
    sub_23FC1020C(*(_QWORD *)(v3 + *(int *)(a3 + 28)));
    sub_23FC09258();
  }
}

uint64_t sub_23FCBBE74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FCBBE80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;

  sub_23FCBCD40();
  v8 = sub_23FD73D9C();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23FC0608C(v4, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(v4 + *(int *)(a4 + 28)) = (a2 - 1);
    sub_23FC09258();
  }
}

uint64_t sub_23FCBBEE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD73D9C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for SessionInjectedEventsAreInvalid()
{
  sub_23FC7A748();
}

uint64_t *sub_23FCBBF78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FD73EF8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = sub_23FD73D9C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
      *(_OWORD *)((char *)a1 + v9[5]) = *(_OWORD *)((char *)a2 + v9[5]);
      *(uint64_t *)((char *)a1 + v9[6]) = *(uint64_t *)((char *)a2 + v9[6]);
      *(uint64_t *)((char *)a1 + v9[7]) = *(uint64_t *)((char *)a2 + v9[7]);
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FCBC078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23FD73EF8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    v4 = sub_23FD73D9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
    return swift_release();
  }
}

uint64_t sub_23FCBC0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23FD73EF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = sub_23FD73D9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = (int *)type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
    *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
    *(_QWORD *)(a1 + v6[6]) = *(_QWORD *)(a2 + v6[6]);
    *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23FCBC1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23FD73EF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      v5 = sub_23FD73D9C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = (int *)type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
      *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
      *(_QWORD *)(a1 + v6[6]) = *(_QWORD *)(a2 + v6[6]);
      *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SessionCoordinatorAcceptPayload(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60B00);
}

uint64_t sub_23FCBC2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23FD73EF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  }
  else
  {
    v5 = sub_23FD73D9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = (int *)type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
    *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
    *(_QWORD *)(a1 + v6[6]) = *(_QWORD *)(a2 + v6[6]);
    *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23FCBC37C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23FD73EF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    }
    else
    {
      v5 = sub_23FD73D9C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = (int *)type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
      *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
      *(_QWORD *)(a1 + v6[6]) = *(_QWORD *)(a2 + v6[6]);
      *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FCBC45C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(319);
  if (v1 <= 0x3F)
  {
    result = sub_23FD73EF8();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SpanMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SpanMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23FCBC5B0 + 4 * byte_23FD783CD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23FCBC5E4 + 4 * byte_23FD783C8[v4]))();
}

uint64_t sub_23FCBC5E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCBC5EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCBC5F4);
  return result;
}

uint64_t sub_23FCBC600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCBC608);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23FCBC60C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCBC614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpanMetadata.CodingKeys()
{
  return &type metadata for SpanMetadata.CodingKeys;
}

uint64_t sub_23FCBC634()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23FCBC65C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23FBFF0A0();
}

_QWORD *sub_23FCBC68C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_23FCBC6E8(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FCBC724(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FCBC764(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for StandardSessionCoordinatorEffects()
{
  sub_23FC7A748();
}

uint64_t *sub_23FCBC7AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD7409C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_23FCBC854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FD7409C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23FCBC8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7409C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCBC92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7409C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCBC9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7409C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCBCA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7409C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCBCAA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCBCAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FBFF104();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = sub_23FCBCEA0();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return sub_23FC06098(v8, a2, v7);
}

uint64_t sub_23FCBCB04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCBCB10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23FBFF104();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = sub_23FCBCEA0();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return sub_23FC0608C(v10, a2, a2, v9);
}

uint64_t sub_23FCBCB70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = sub_23FD7409C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_23FCBCBF4()
{
  sub_23FBFEE2C((unint64_t *)&qword_256F60BC8, (uint64_t (*)(uint64_t))type metadata accessor for DefaultEventLogSender, (uint64_t)&unk_23FD76F58);
}

_UNKNOWN **sub_23FCBCC20()
{
  return &off_25100FB50;
}

void sub_23FCBCC2C()
{
  sub_23FBFEE2C(&qword_256F5E590, (uint64_t (*)(uint64_t))_s24StandardSessionResourcesVMa, (uint64_t)&unk_23FD79B0C);
}

unint64_t sub_23FCBCC5C()
{
  unint64_t result;

  result = qword_256F60C48;
  if (!qword_256F60C48)
  {
    result = MEMORY[0x2426797E8](&unk_23FD787FC, &type metadata for SpanMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60C48);
  }
  return result;
}

unint64_t sub_23FCBCC9C()
{
  unint64_t result;

  result = qword_256F60C50;
  if (!qword_256F60C50)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7876C, &type metadata for SpanMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60C50);
  }
  return result;
}

unint64_t sub_23FCBCCDC()
{
  unint64_t result;

  result = qword_256F60C58;
  if (!qword_256F60C58)
  {
    result = MEMORY[0x2426797E8](&unk_23FD78794, &type metadata for SpanMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60C58);
  }
  return result;
}

uint64_t sub_23FCBCD18@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23FCBCD20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCBCD30()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_23FCBCD40()
{
  return 0;
}

uint64_t sub_23FCBCD4C()
{
  return sub_23FD7532C();
}

uint64_t sub_23FCBCD64()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[10] + 8))(v0[12], v0[9]);
}

uint64_t sub_23FCBCD7C()
{
  uint64_t v0;

  return v0;
}

id sub_23FCBCD88(id a1)
{
  return a1;
}

uint64_t sub_23FCBCD90()
{
  return sub_23FD752D8();
}

uint64_t sub_23FCBCDA4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC577B0(v0, v1);
}

uint64_t sub_23FCBCDB0()
{
  return 0;
}

uint64_t sub_23FCBCDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FCBCDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FCBCDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 136));
}

uint64_t sub_23FCBCDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

unint64_t sub_23FCBCDFC(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

void sub_23FCBCE30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC92F18(a1, a2, v2);
}

uint64_t sub_23FCBCE4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCBCE54()
{
  return swift_bridgeObjectRelease();
}

void sub_23FCBCE5C()
{
  sub_23FC9954C();
}

uint64_t sub_23FCBCE68()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(*(_QWORD *)(v0 - 128));
}

uint64_t sub_23FCBCE70()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC577F4(v0, v1);
}

uint64_t sub_23FCBCE7C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCBCEA0()
{
  return sub_23FD7409C();
}

uint64_t sub_23FCBCEA8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCBCEB4()
{
  return swift_task_alloc();
}

_QWORD *sub_23FCBCEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v6 = v5;
  v12 = OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorInjectionContext_encoder;
  sub_23FD712B8();
  sub_23FBFF1C4();
  *(_QWORD *)((char *)v5 + v12) = sub_23FD712AC();
  v13 = OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorInjectionContext_decoder;
  sub_23FD71294();
  sub_23FBFF1C4();
  *(_QWORD *)((char *)v5 + v13) = sub_23FD71288();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v14 = (char *)v5 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorInjectionContext_commandContinuation;
  v15 = sub_23FBFD684(&qword_256F5E2B8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a4, v15);
  *(_QWORD *)((char *)v6
            + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorInjectionContext_fastCheckInjectionEnabledState) = a5;
  return v6;
}

uint64_t sub_23FCBCF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  *(_QWORD *)(v6 + 144) = v19;
  *(_QWORD *)(v6 + 152) = v5;
  *(_OWORD *)(v6 + 112) = v17;
  *(_OWORD *)(v6 + 128) = v18;
  *(_QWORD *)(v6 + 96) = v15;
  *(_QWORD *)(v6 + 104) = v16;
  *(_QWORD *)(v6 + 80) = v13;
  *(_QWORD *)(v6 + 88) = v14;
  *(_QWORD *)(v6 + 64) = a4;
  *(_QWORD *)(v6 + 72) = a5;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 56) = a3;
  *(_QWORD *)(v6 + 40) = a1;
  v7 = sub_23FD72BF0();
  *(_QWORD *)(v6 + 160) = v7;
  *(_QWORD *)(v6 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 176) = sub_23FC0901C();
  *(_QWORD *)(v6 + 184) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v6 + 192) = sub_23FC0901C();
  v8 = sub_23FBFF104();
  *(_QWORD *)(v6 + 200) = v8;
  *(_QWORD *)(v6 + 208) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 216) = sub_23FC0901C();
  if (v13)
  {
    swift_getObjectType();
    v9 = sub_23FCBEBB4();
    v11 = v10;
  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  *(_QWORD *)(v6 + 224) = v9;
  *(_QWORD *)(v6 + 232) = v11;
  return swift_task_switch();
}

uint64_t sub_23FCBD06C()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  sub_23FCBEB50(*(_QWORD *)(v2 + 152));
  sub_23FCBEB80();
  if ((_DWORD)v0 == 1)
  {
    v3 = sub_23FCBEBA8();
    *(_QWORD *)(v2 + 240) = v1;
    *(_QWORD *)(v2 + 248) = v3;
    *(_QWORD *)(v2 + 256) = v4;
    if (!v1)
    {
      v15 = v3;
      v16 = v4;
      v17 = *(_QWORD *)(v2 + 216);
      v18 = *(_QWORD *)(v2 + 152);
      v19 = *(_QWORD *)(v2 + 72);
      v20 = *(_QWORD *)(v2 + 48);
      v26 = *(_OWORD *)(v2 + 104);
      v27 = *(_OWORD *)(v2 + 56);
      v24 = *(_OWORD *)(v2 + 136);
      v25 = *(_OWORD *)(v2 + 120);
      _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
      v21 = swift_task_alloc();
      *(_QWORD *)(v2 + 264) = v21;
      *(_OWORD *)(v21 + 16) = v26;
      *(_OWORD *)(v21 + 32) = v25;
      *(_OWORD *)(v21 + 48) = v24;
      *(_QWORD *)(v21 + 64) = v18;
      *(_QWORD *)(v21 + 72) = v20;
      *(_OWORD *)(v21 + 80) = v27;
      *(_QWORD *)(v21 + 96) = v19;
      *(_QWORD *)(v21 + 104) = v17;
      *(_QWORD *)(v21 + 112) = v15;
      *(_QWORD *)(v21 + 120) = v16;
      v22 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v2 + 272) = v22;
      sub_23FBFD684(qword_256F60DA8);
      *v22 = v2;
      v22[1] = sub_23FCBD2D0;
      return sub_23FD75350();
    }
    v5 = *(void **)(v2 + 176);
    sub_23FCBEBA0();
    sub_23FC091A4();
    sub_23FC091A4();
    sub_23FD72BE4();
    v6 = sub_23FCBEB70();
    if (sub_23FC09114(v6))
    {
      sub_23FCBEB18();
      v7 = (_QWORD *)sub_23FCBEB08();
      *v0 = 138412290;
      sub_23FC091A4();
      v8 = sub_23FCBEB78();
      *(_QWORD *)(v2 + 32) = v8;
      sub_23FCBEB28();
      *v7 = v8;
      sub_23FC09074();
      sub_23FC09074();
      sub_23FC091B8(&dword_23FBF8000, v9, v10, "Failed to inject value: %@");
      sub_23FBFD684(&qword_254346A30);
      sub_23FC09124();
      sub_23FBFEFA0();
    }
    sub_23FC09074();
    sub_23FC09074();
    sub_23FC09074();

    sub_23FCBEB38();
    v12 = sub_23FCBEB8C();
  }
  else
  {
    v11 = *(_QWORD *)(v2 + 104);
    v12 = *(_QWORD *)(v2 + 40);
    v13 = 1;
    v14 = 1;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v12, v13, v14, v11);
  sub_23FCBEB60();
  sub_23FC090D0();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23FCBD2D0()
{
  swift_task_dealloc();
  sub_23FC090D0();
  return swift_task_switch();
}

uint64_t sub_23FCBD320()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  os_log_type_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    v3 = *(_QWORD *)(v0 + 208);
    v2 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 40);
    sub_23FC577B0(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    v7 = v6;
    v8 = 1;
    v9 = 1;
    v10 = v5;
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 240);
    sub_23FC577F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    sub_23FD7127C();
    v12 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 256);
    if (v11)
    {
      sub_23FC577B0(v12, v13);
      sub_23FCBEAD8();
      v14 = *(void **)(v0 + 176);
      sub_23FCBEBA0();
      sub_23FC091A4();
      sub_23FC091A4();
      sub_23FD72BE4();
      v15 = sub_23FCBEB70();
      if (sub_23FC09114(v15))
      {
        sub_23FCBEB18();
        v16 = (_QWORD *)sub_23FCBEB08();
        *(_DWORD *)v1 = 138412290;
        sub_23FC091A4();
        v17 = sub_23FCBEB78();
        *(_QWORD *)(v0 + 32) = v17;
        sub_23FCBEB28();
        *v16 = v17;
        sub_23FC09074();
        sub_23FC09074();
        sub_23FC091B8(&dword_23FBF8000, v18, v19, "Failed to inject value: %@");
        sub_23FBFD684(&qword_254346A30);
        sub_23FC09124();
        sub_23FBFEFA0();
      }
      sub_23FC09074();
      sub_23FC09074();
      sub_23FC09074();

      sub_23FCBEB38();
      v7 = sub_23FCBEB8C();
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 184);
      v20 = *(_QWORD *)(v0 + 192);
      v22 = *(_QWORD *)(v0 + 104);
      v23 = *(_QWORD *)(v0 + 40);
      sub_23FC577B0(v12, v13);
      sub_23FCBEAD8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v23, v20, v22);
      v7 = v23;
      v8 = 0;
      v9 = 1;
      v10 = v22;
    }
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v7, v8, v9, v10);
  sub_23FCBEB60();
  sub_23FC090D0();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCBD524(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v69 = a8;
  v70 = a6;
  v67 = a5;
  v71 = a4;
  v64 = a3;
  v60 = a1;
  v57 = a10;
  v12 = sub_23FD71474();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for SessionCoordinatorCommand(0);
  MEMORY[0x24BDAC7A8](v66, v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FBFD684(&qword_256F5E2B8);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23FBFD684(&qword_256F5E2A8);
  v62 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65, v25);
  v59 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, (uint64_t)a2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorInjectionContext_commandContinuation, v20);
  v27 = a2[2];
  v28 = a2[3];
  v29 = a2[4];
  v55 = v28;
  v56 = v27;
  v61 = v13;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v58 = v16;
  v63 = v12;
  v30(v16, a7, v12);
  swift_bridgeObjectRetain();
  v31 = sub_23FD751E8();
  if (v32)
  {
    v33 = v32;
    v54 = v31;
  }
  else
  {
    v54 = sub_23FD75500();
    v33 = v34;
  }
  v35 = sub_23FD751E8();
  if (!v36)
    v35 = sub_23FD75500();
  v37 = v35;
  v38 = v36;
  v39 = (int *)type metadata accessor for SessionCoordinatorInjectionRequest(0);
  v40 = &v19[v39[12]];
  v41 = sub_23FBFD684(&qword_256F5E488);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v60, v41);
  v42 = v55;
  *(_QWORD *)v19 = v56;
  *((_QWORD *)v19 + 1) = v42;
  v43 = v63;
  v44 = v64;
  *((_QWORD *)v19 + 2) = v29;
  *((_QWORD *)v19 + 3) = v44;
  v45 = v70;
  v46 = v67;
  *((_QWORD *)v19 + 4) = v71;
  *((_QWORD *)v19 + 5) = v46;
  *((_QWORD *)v19 + 6) = v45;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(&v19[v39[8]], v58, v43);
  v47 = (uint64_t *)&v19[v39[9]];
  *v47 = v54;
  v47[1] = v33;
  v48 = (uint64_t *)&v19[v39[10]];
  v49 = v69;
  *v48 = v69;
  v48[1] = a9;
  v50 = (uint64_t *)&v19[v39[11]];
  *v50 = v37;
  v50[1] = v38;
  swift_storeEnumTagMultiPayload();
  sub_23FC577F4(v49, a9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v59;
  sub_23FD74E1C();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v51, v65);
}

uint64_t sub_23FCBD82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)(v9 + 72) = v16;
  *(_QWORD *)(v9 + 80) = v8;
  *(_OWORD *)(v9 + 56) = v15;
  *(_QWORD *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 48) = a4;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  v11 = sub_23FD72BF0();
  *(_QWORD *)(v9 + 88) = v11;
  *(_QWORD *)(v9 + 96) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 104) = sub_23FC0901C();
  *(_QWORD *)(v9 + 112) = type metadata accessor for SessionCoordinatorCommand(0);
  *(_QWORD *)(v9 + 120) = sub_23FC0901C();
  v12 = sub_23FBFD684(&qword_256F5E2B8);
  *(_QWORD *)(v9 + 128) = v12;
  *(_QWORD *)(v9 + 136) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 144) = sub_23FC0901C();
  v13 = sub_23FBFD684(&qword_256F5E2A8);
  *(_QWORD *)(v9 + 152) = v13;
  *(_QWORD *)(v9 + 160) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 168) = sub_23FC0901C();
  if (a8)
  {
    swift_getObjectType();
    sub_23FCBEBB4();
  }
  return swift_task_switch();
}

uint64_t sub_23FCBD91C()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23FCBEB50(*(_QWORD *)(v2 + 80));
  sub_23FCBEB80();
  if ((_DWORD)v0 == 1)
  {
    v3 = sub_23FCBEBA8();
    if (v1)
    {
      v5 = *(void **)(v2 + 104);
      sub_23FCBEBA0();
      sub_23FC091A4();
      sub_23FC091A4();
      sub_23FD72BE4();
      v6 = sub_23FCBEB70();
      if (sub_23FC09114(v6))
      {
        sub_23FCBEB18();
        v7 = (_QWORD *)sub_23FCBEB08();
        *v0 = 138412290;
        sub_23FC091A4();
        v8 = sub_23FCBEB78();
        *(_QWORD *)(v2 + 16) = v8;
        sub_23FCBEB28();
        *v7 = v8;
        sub_23FC09074();
        sub_23FC09074();
        sub_23FC091B8(&dword_23FBF8000, v9, v10, "Failed to capture value: %@");
        sub_23FBFD684(&qword_254346A30);
        sub_23FC09124();
        sub_23FBFEFA0();
      }
      sub_23FC09074();
      sub_23FC09074();
      sub_23FC09074();

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 96) + 8))(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 88));
    }
    else
    {
      v11 = v3;
      v12 = v4;
      v13 = *(_QWORD **)(v2 + 80);
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 + 136) + 16))(*(_QWORD *)(v2 + 144), (uint64_t)v13 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorInjectionContext_commandContinuation, *(_QWORD *)(v2 + 128));
      v14 = v13[2];
      v15 = v13[3];
      v16 = v13[4];
      v31 = v15;
      v32 = v14;
      swift_bridgeObjectRetain();
      v17 = sub_23FD751E8();
      if (!v18)
        v17 = sub_23FD75500();
      v19 = *(_QWORD *)(v2 + 168);
      v20 = *(_QWORD *)(v2 + 144);
      v29 = *(_QWORD *)(v2 + 160);
      v30 = *(_QWORD *)(v2 + 152);
      v21 = *(_QWORD *)(v2 + 128);
      v28 = *(_QWORD *)(v2 + 136);
      v22 = *(_QWORD **)(v2 + 120);
      v23 = *(_QWORD *)(v2 + 40);
      v24 = *(_QWORD *)(v2 + 48);
      v25 = *(_QWORD *)(v2 + 24);
      v26 = *(_QWORD *)(v2 + 32);
      *v22 = v32;
      v22[1] = v31;
      v22[2] = v16;
      v22[3] = v25;
      v22[4] = v26;
      v22[5] = v23;
      v22[6] = v24;
      v22[7] = v17;
      v22[8] = v18;
      v22[9] = v11;
      v22[10] = v12;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23FD74E1C();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v20, v21);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v30);
    }
  }
  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC090C0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23FCBDB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorInjectionContext_commandContinuation;
  v2 = sub_23FBFD684(&qword_256F5E2B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23FC5E6B4();
  sub_23FC5E6B4();
  sub_23FC5E6B4();
  return v0;
}

uint64_t sub_23FCBDBE8()
{
  sub_23FCBDB74();
  return swift_deallocClassInstance();
}

uint64_t sub_23FCBDC0C()
{
  return type metadata accessor for SessionCoordinatorInjectionContext(0);
}

uint64_t type metadata accessor for SessionCoordinatorInjectionContext(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60C88);
}

void sub_23FCBDC28()
{
  unint64_t v0;

  sub_23FCBDCBC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23FCBDCBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256F60640)
  {
    type metadata accessor for SessionCoordinatorCommand(255);
    v0 = sub_23FD74E34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256F60640);
  }
}

uint64_t *sub_23FCBDD10(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a3[8];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[6] = a2[6];
    v12 = sub_23FD71474();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[9];
    v15 = a3[10];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)v4 + v15);
    v20 = *(uint64_t *)((char *)a2 + v15);
    v21 = *(uint64_t *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain();
    sub_23FC577F4(v20, v21);
    *v19 = v20;
    v19[1] = v21;
    v22 = a3[11];
    v23 = a3[12];
    v24 = (uint64_t *)((char *)v4 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (char *)v4 + v23;
    v28 = (char *)a2 + v23;
    swift_bridgeObjectRetain();
    v29 = sub_23FBFD684(&qword_256F5E488);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return v4;
}

uint64_t sub_23FCBDE64(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  sub_23FC577B0(*(_QWORD *)(a1 + a2[10]), *(_QWORD *)(a1 + a2[10] + 8));
  swift_bridgeObjectRelease();
  v6 = a1 + a2[12];
  v7 = sub_23FBFD684(&qword_256F5E488);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_23FCBDF1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v11 = sub_23FD71474();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[9];
  v14 = a3[10];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (uint64_t *)(a1 + v14);
  v19 = *(_QWORD *)(a2 + v14);
  v20 = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  sub_23FC577F4(v19, v20);
  *v18 = v19;
  v18[1] = v20;
  v21 = a3[11];
  v22 = a3[12];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a1 + v22;
  v27 = a2 + v22;
  swift_bridgeObjectRetain();
  v28 = sub_23FBFD684(&qword_256F5E488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

_QWORD *sub_23FCBE044(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[9];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[10];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *v15;
  v17 = v15[1];
  sub_23FC577F4(*v15, v17);
  v18 = *v14;
  v19 = v14[1];
  *v14 = v16;
  v14[1] = v17;
  sub_23FC577B0(v18, v19);
  v20 = a3[11];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[12];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_23FBFD684(&qword_256F5E488);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t sub_23FCBE1C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FBFD684(&qword_256F5E488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FCBE290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[10];
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  sub_23FC577B0(v18, v19);
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[12];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_23FBFD684(&qword_256F5E488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t sub_23FCBE3AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCBE3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23FBFF104();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 32);
    }
    else
    {
      v9 = sub_23FBFD684(&qword_256F5E488);
      v10 = *(int *)(a3 + 48);
    }
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_23FCBE450()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCBE45C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = sub_23FBFF104();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 32);
    }
    else
    {
      v9 = sub_23FBFD684(&qword_256F5E488);
      v10 = *(int *)(a4 + 48);
    }
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SessionCoordinatorInjectionRequest(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F60D90);
}

void sub_23FCBE504()
{
  unint64_t v0;
  unint64_t v1;

  sub_23FD71474();
  if (v0 <= 0x3F)
  {
    sub_23FCBE5B8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23FCBE5B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256F60DA0)
  {
    sub_23FBFEDE8(qword_256F60DA8);
    v0 = sub_23FD74D98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256F60DA0);
  }
}

uint64_t sub_23FCBE620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = v5;
  v6[1] = sub_23FCBEAD4;
  return sub_23FCBCF90(a1, a2, a3, a4, a5);
}

uint64_t sub_23FCBE6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = sub_23FCBE784;
  return sub_23FCBD82C(a1, a2, a3, a4, v14, v15, v16, a8);
}

uint64_t sub_23FCBE784()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23FCBE7CC(uint64_t a1)
{
  uint64_t v1;

  return sub_23FCBD524(a1, *(_QWORD **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 16));
}

uint64_t destroy for SessionCoordinatorCapturedInjectionValue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23FC577B0(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
}

uint64_t initializeWithCopy for SessionCoordinatorCapturedInjectionValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23FC577F4(v6, v7);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  return a1;
}

_QWORD *assignWithCopy for SessionCoordinatorCapturedInjectionValue(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[9];
  v4 = a2[10];
  sub_23FC577F4(v5, v4);
  v6 = a1[9];
  v7 = a1[10];
  a1[9] = v5;
  a1[10] = v4;
  sub_23FC577B0(v6, v7);
  return a1;
}

void *initializeWithTake for SessionCoordinatorCapturedInjectionValue(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for SessionCoordinatorCapturedInjectionValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  sub_23FC577B0(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionCoordinatorCapturedInjectionValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionCoordinatorCapturedInjectionValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionCoordinatorCapturedInjectionValue()
{
  return &type metadata for SessionCoordinatorCapturedInjectionValue;
}

uint64_t sub_23FCBEAD8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC9E934(v2, v0);
  sub_23FC9E934(v2, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

uint64_t sub_23FCBEB08()
{
  return swift_slowAlloc();
}

uint64_t sub_23FCBEB18()
{
  return swift_slowAlloc();
}

uint64_t sub_23FCBEB28()
{
  return sub_23FD75044();
}

uint64_t sub_23FCBEB38()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[21] + 8))(v0[22], v0[20]);
}

void sub_23FCBEB50(uint64_t a1@<X8>)
{
  uint64_t v1;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + v1) + 20));
}

uint64_t sub_23FCBEB60()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCBEB70()
{
  return sub_23FD74F60();
}

uint64_t sub_23FCBEB78()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_23FCBEB80()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_23FCBEB8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCBEBA0()
{
  return sub_23FD724E8();
}

uint64_t sub_23FCBEBA8()
{
  return sub_23FD712A0();
}

uint64_t sub_23FCBEBB4()
{
  return sub_23FD74D80();
}

uint64_t SessionID.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  sub_23FBFF104();
  sub_23FC0A050();
  return sub_23FC06104(a2, a1, v5, *(uint64_t (**)(void))(v4 + 32));
}

__n128 SessionIdentityPack.init(sessionId:clientIdentity:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;

  v8 = (__n128)a2[1];
  v9 = *a2;
  v4 = *((_QWORD *)a2 + 4);
  v5 = *((_QWORD *)a2 + 5);
  sub_23FC09A70(a1, a3, type metadata accessor for SessionID);
  v6 = a3 + *(int *)(type metadata accessor for SessionIdentityPack(0) + 20);
  result = v8;
  *(_OWORD *)v6 = v9;
  *(__n128 *)(v6 + 16) = v8;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v5;
  return result;
}

uint64_t type metadata accessor for SessionID(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F60F80);
}

uint64_t type metadata accessor for SessionIdentityPack(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61010);
}

IntelligenceFlowRuntime::ClientGroupID __swiftcall ClientGroupID.init(value:)(IntelligenceFlowRuntime::ClientGroupID value)
{
  IntelligenceFlowRuntime::ClientGroupID *v1;

  *v1 = value;
  return value;
}

uint64_t sub_23FCBECA8()
{
  sub_23FCC26E8();
  return sub_23FD754DC();
}

uint64_t sub_23FCBECD0()
{
  sub_23FCC26E8();
  return sub_23FD754E8();
}

void sub_23FCBECF8()
{
  sub_23FCBEF88();
}

uint64_t sub_23FCBED0C()
{
  return sub_23FCBED90();
}

void sub_23FCBED28()
{
  sub_23FCBF004();
}

void sub_23FCBED5C()
{
  sub_23FCBEE60();
}

uint64_t sub_23FCBED90()
{
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23FD74BC4();
}

uint64_t sub_23FCBEDE4()
{
  sub_23FCBEF48();
  return sub_23FD754DC();
}

uint64_t sub_23FCBEE0C()
{
  sub_23FCBEF48();
  return sub_23FD754E8();
}

void SessionID.encode(to:)()
{
  sub_23FCBEE60();
}

void sub_23FCBEE60()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FCC2A5C();
  v2 = v1;
  v4 = (_QWORD *)v3;
  v6 = sub_23FCC2BBC(v3, v5);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FC9308C();
  sub_23FBFDE40(v4, v4[3]);
  v2();
  sub_23FD754C4();
  sub_23FD71474();
  sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23FD7532C();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v6);
  sub_23FC06000();
}

unint64_t sub_23FCBEF48()
{
  unint64_t result;

  result = qword_256F60E20;
  if (!qword_256F60E20)
  {
    result = MEMORY[0x2426797E8](&unk_23FD797C0, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60E20);
  }
  return result;
}

void sub_23FCBEF88()
{
  sub_23FC06220();
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23FC7E250();
  sub_23FC06168();
  sub_23FC06054();
}

void SessionID.init(from:)()
{
  sub_23FCBF004();
}

void sub_23FCBF004()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t *v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23FCC2A5C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v23 = v9;
  v27 = sub_23FD71474();
  v22 = *(_QWORD *)(v27 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  v26 = v12;
  v13 = sub_23FBFD684(v6);
  v25 = *(_QWORD *)(v13 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v4;
  v18 = v4(0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v22 - v20;
  sub_23FBFDE40(v8, v8[3]);
  v2();
  sub_23FD754B8();
  if (!v0)
  {
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD752D8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v21, v26, v27);
    sub_23FC09A70((uint64_t)v21, v23, v24);
  }
  sub_23FCC2A9C();
  sub_23FCC2BC4();
  sub_23FC06000();
}

void sub_23FCBF1A0()
{
  sub_23FCC2B70();
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23FC7E250();
  sub_23FC06168();
  sub_23FC06054();
}

void sub_23FCBF1E8()
{
  SessionID.init(from:)();
}

void sub_23FCBF1FC()
{
  SessionID.encode(to:)();
}

uint64_t sub_23FCBF218()
{
  sub_23FCBF294();
  return sub_23FD754DC();
}

uint64_t sub_23FCBF240()
{
  sub_23FCBF294();
  return sub_23FD754E8();
}

void ClientSessionID.encode(to:)()
{
  sub_23FCBF644();
}

unint64_t sub_23FCBF294()
{
  unint64_t result;

  result = qword_256F60E38;
  if (!qword_256F60E38)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79770, &type metadata for ClientSessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60E38);
  }
  return result;
}

void ClientSessionID.init(from:)()
{
  sub_23FCBF798();
}

void sub_23FCBF310()
{
  ClientSessionID.init(from:)();
}

void sub_23FCBF324()
{
  ClientSessionID.encode(to:)();
}

uint64_t sub_23FCBF344()
{
  sub_23FCBF3C0();
  return sub_23FD754DC();
}

uint64_t sub_23FCBF36C()
{
  sub_23FCBF3C0();
  return sub_23FD754E8();
}

void ClientApplicationID.encode(to:)()
{
  sub_23FCBF644();
}

unint64_t sub_23FCBF3C0()
{
  unint64_t result;

  result = qword_256F60E50;
  if (!qword_256F60E50)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79720, &type metadata for ClientApplicationID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60E50);
  }
  return result;
}

void ClientApplicationID.init(from:)()
{
  sub_23FCBF798();
}

void sub_23FCBF42C()
{
  ClientApplicationID.init(from:)();
}

void sub_23FCBF440()
{
  ClientApplicationID.encode(to:)();
}

uint64_t ClientGroupID.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23FC5AFCC();
  return v1;
}

uint64_t _s23IntelligenceFlowRuntime15ClientSessionIDV4hash4intoys6HasherVz_tF_0()
{
  sub_23FC5AFCC();
  sub_23FD74C30();
  return swift_bridgeObjectRelease();
}

uint64_t _s23IntelligenceFlowRuntime15ClientSessionIDV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23FD75380();
}

uint64_t sub_23FCBF4F4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FC76014();
    sub_23FC15A24();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23FCBF568()
{
  return 0x65756C6176;
}

void sub_23FCBF57C()
{
  sub_23FCC2B70();
  sub_23FC06214();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FCBF5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCBF4F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FCBF5C8()
{
  sub_23FCBF6FC();
  return sub_23FD754DC();
}

uint64_t sub_23FCBF5F0()
{
  sub_23FCBF6FC();
  return sub_23FD754E8();
}

void ClientGroupID.encode(to:)()
{
  sub_23FCBF644();
}

void sub_23FCBF644()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);

  sub_23FCC2A5C();
  v7 = v1;
  v3 = (_QWORD *)v2;
  sub_23FCC2BBC(v2, v4);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC9308C();
  sub_23FBFDE40(v3, v3[3]);
  v7();
  sub_23FD754C4();
  sub_23FD75308();
  sub_23FC7689C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23FC06000();
}

unint64_t sub_23FCBF6FC()
{
  unint64_t result;

  result = qword_256F60E68;
  if (!qword_256F60E68)
  {
    result = MEMORY[0x2426797E8](&unk_23FD796D0, &type metadata for ClientGroupID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60E68);
  }
  return result;
}

void _s23IntelligenceFlowRuntime15ClientSessionIDV9hashValueSivg_0()
{
  sub_23FC06220();
  sub_23FC5AFCC();
  sub_23FCC2B50();
  sub_23FC1002C();
  sub_23FC06168();
  sub_23FC06054();
}

void ClientGroupID.init(from:)()
{
  sub_23FCBF798();
}

void sub_23FCBF798()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  sub_23FCC2A5C();
  v2 = v1;
  v4 = (_QWORD *)v3;
  v11 = v5;
  v12 = sub_23FCC2BBC(v3, v6);
  MEMORY[0x24BDAC7A8](v12, v7);
  sub_23FBFDE40(v4, v4[3]);
  v2();
  sub_23FD754B8();
  if (!v0)
  {
    v8 = sub_23FD752B4();
    v10 = v9;
    sub_23FCC2B24();
    *v11 = v8;
    v11[1] = v10;
  }
  sub_23FCC2A9C();
  sub_23FC06000();
}

void sub_23FCBF884()
{
  sub_23FCC2B70();
  sub_23FC5AFCC();
  sub_23FCC2B50();
  sub_23FC1002C();
  sub_23FC06168();
  sub_23FC06054();
}

void sub_23FCBF8B4()
{
  ClientGroupID.init(from:)();
}

void sub_23FCBF8C8()
{
  ClientGroupID.encode(to:)();
}

void SessionIdentityPack.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23FD74BC4();
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SessionIdentityPack(0) + 20) + 40);
  sub_23FC10110();
  swift_bridgeObjectRetain_n();
  sub_23FC5C20C();
  sub_23FD74C30();
  sub_23FC595E0();
  sub_23FC5C20C();
  sub_23FD74C30();
  sub_23FC103E8();
  sub_23FD75464();
  if (v1)
  {
    sub_23FC10110();
    sub_23FD74C30();
    sub_23FC103E8();
    sub_23FC595E0();
    swift_bridgeObjectRelease_n();
    sub_23FC6264C();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23FC103E8();
    sub_23FCC2AA4();
  }
}

uint64_t static SessionIdentityPack.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  if ((sub_23FD71450() & 1) != 0)
  {
    v4 = type metadata accessor for SessionIdentityPack(0);
    v5 = (__int128 *)(a1 + *(int *)(v4 + 20));
    v6 = *v5;
    v7 = *((_QWORD *)v5 + 3);
    v18 = *((_QWORD *)v5 + 2);
    v19 = v7;
    v20 = v5[2];
    v8 = (__int128 *)(a2 + *(int *)(v4 + 20));
    v9 = *((_QWORD *)v8 + 2);
    v10 = *((_QWORD *)v8 + 3);
    v13 = *v8;
    v14 = v9;
    v15 = v10;
    v16 = v8[2];
    v17 = v6;
    v11 = static ClientSessionIdentityPack.== infix(_:_:)(&v17, &v13);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t static ClientSessionIdentityPack.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  char v12;
  BOOL v13;
  char v14;
  char v16;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v10 = *a1 == *a2 && a1[1] == a2[1];
  if (v10 || (sub_23FC76014(), result = sub_23FCC2B44(), (v12 & 1) != 0))
  {
    v13 = v2 == v6 && v4 == v7;
    if (v13 || (sub_23FC76014(), result = sub_23FCC2B44(), (v14 & 1) != 0))
    {
      if (v5)
      {
        if (v8)
        {
          if (v3 != v9 || v5 != v8)
          {
            sub_23FC76014();
            result = sub_23FCC2B44();
            if ((v16 & 1) == 0)
              return result;
          }
          return 1;
        }
        sub_23FC5AAE8();
      }
      else if (!v8)
      {
        return 1;
      }
      sub_23FC15A24();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23FCBFB60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E65696C63 && a2 == 0xEE00797469746E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FCBFC7C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6449746E65696C63;
  else
    return 0x496E6F6973736573;
}

uint64_t sub_23FCBFCC8()
{
  char *v0;

  return sub_23FCBFC7C(*v0);
}

uint64_t sub_23FCBFCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCBFB60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FCBFCF4()
{
  sub_23FCC0974();
  return sub_23FD754DC();
}

uint64_t sub_23FCBFD1C()
{
  sub_23FCC0974();
  return sub_23FD754E8();
}

uint64_t SessionIdentityPack.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFD684(&qword_256F60E78);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC12F34();
  sub_23FBFDE40(a1, a1[3]);
  sub_23FCC0974();
  sub_23FCC2A80();
  type metadata accessor for SessionID(0);
  sub_23FBFEE2C(&qword_256F60E88, type metadata accessor for SessionID, (uint64_t)&protocol conformance descriptor for SessionID);
  sub_23FC06244();
  if (!v1)
  {
    type metadata accessor for SessionIdentityPack(0);
    sub_23FCC09B0();
    sub_23FC06244();
  }
  return sub_23FCC2B78();
}

void SessionIdentityPack.hashValue.getter()
{
  sub_23FC06220();
  SessionIdentityPack.hash(into:)();
  sub_23FC06168();
  sub_23FC06054();
}

void SessionIdentityPack.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  sub_23FCC2A5C();
  v4 = v3;
  v15 = v5;
  type metadata accessor for SessionID(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v16 = v8;
  sub_23FBFD684(&qword_256F60E98);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC9308C();
  v11 = type metadata accessor for SessionIdentityPack(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC8FD1C();
  sub_23FBFDE40(v4, v4[3]);
  sub_23FCC0974();
  sub_23FD754B8();
  if (v0)
  {
    sub_23FCC2A9C();
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_23FBFEE2C(&qword_256F60EA0, type metadata accessor for SessionID, (uint64_t)&protocol conformance descriptor for SessionID);
    sub_23FCC2B08();
    sub_23FC09A70(v16, v1, type metadata accessor for SessionID);
    sub_23FCC2B88();
    sub_23FCC09EC();
    sub_23FCC2B08();
    sub_23FC7689C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v14 = v1 + *(int *)(v11 + 20);
    *(_OWORD *)v14 = v17;
    *(_QWORD *)(v14 + 16) = v18;
    *(_QWORD *)(v14 + 24) = v19;
    *(_OWORD *)(v14 + 32) = v20;
    sub_23FC62410(v1, v15);
    sub_23FCC2A9C();
    sub_23FCC0A28(v1, type metadata accessor for SessionIdentityPack);
  }
  sub_23FCC2BC4();
  sub_23FC06000();
}

uint64_t sub_23FCC0084()
{
  sub_23FD7544C();
  SessionIdentityPack.hash(into:)();
  return sub_23FD75470();
}

void sub_23FCC00C0()
{
  SessionIdentityPack.init(from:)();
}

uint64_t sub_23FCC00D4(_QWORD *a1)
{
  return SessionIdentityPack.encode(to:)(a1);
}

uint64_t SessionIdentityPack.description.getter()
{
  sub_23FD750E0();
  swift_bridgeObjectRelease();
  sub_23FCC2BD0();
  sub_23FD71438();
  sub_23FD74C48();
  sub_23FC595E0();
  sub_23FCC2A4C();
  type metadata accessor for SessionIdentityPack(0);
  sub_23FC10108();
  sub_23FCC2A3C();
  sub_23FC595E0();
  sub_23FCC2A4C();
  sub_23FC10108();
  sub_23FCC2A3C();
  sub_23FC595E0();
  sub_23FCC2A4C();
  swift_bridgeObjectRetain();
  sub_23FD74C48();
  sub_23FC15A24();
  sub_23FCC2A94();
  return 0;
}

void __swiftcall ClientSessionIdentityPack.init(clientSessionId:clientApplicationId:clientGroupId:)(IntelligenceFlowRuntime::ClientSessionIdentityPack *__return_ptr retstr, IntelligenceFlowRuntime::ClientSessionID clientSessionId, IntelligenceFlowRuntime::ClientApplicationID clientApplicationId, IntelligenceFlowRuntime::ClientGroupID_optional clientGroupId)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)(clientSessionId.value._countAndFlagsBits + 8);
  v5 = *(_QWORD *)clientSessionId.value._object;
  v6 = (void *)*((_QWORD *)clientSessionId.value._object + 1);
  retstr->clientSessionId.value._countAndFlagsBits = *(_QWORD *)clientSessionId.value._countAndFlagsBits;
  retstr->clientSessionId.value._object = v4;
  retstr->clientApplicationId.value._countAndFlagsBits = v5;
  retstr->clientApplicationId.value._object = v6;
  retstr->clientGroupId = *(IntelligenceFlowRuntime::ClientGroupID_optional *)clientApplicationId.value._countAndFlagsBits;
}

uint64_t ClientSessionIdentityPack.description.getter()
{
  sub_23FC10108();
  sub_23FCC2A3C();
  sub_23FC595E0();
  sub_23FCC2A4C();
  sub_23FC5C20C();
  sub_23FD74C48();
  sub_23FC103E8();
  sub_23FCC2A4C();
  sub_23FC5AC34();
  sub_23FCC2A3C();
  sub_23FC595E0();
  sub_23FCC2A94();
  return 0x7C444953433CLL;
}

void ClientSessionIdentityPack.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23FC5AC34();
  sub_23FCC2B34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23FD74C30();
  swift_bridgeObjectRelease();
  sub_23FCC2B1C();
  if (v1)
  {
    sub_23FC5AAE8();
    sub_23FCC2AC8();
    sub_23FCC2AA4();
  }
  else
  {
    sub_23FC6264C();
  }
}

uint64_t sub_23FCC0338(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023FD85160 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7247746E65696C63 && a2 == 0xED0000644970756FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23FCC04C8()
{
  return 3;
}

uint64_t sub_23FCC04D0(char a1)
{
  if (!a1)
    return 0x6553746E65696C63;
  if (a1 == 1)
    return 0xD000000000000013;
  return 0x7247746E65696C63;
}

uint64_t sub_23FCC0544()
{
  char *v0;

  return sub_23FCC04D0(*v0);
}

uint64_t sub_23FCC054C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCC0338(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FCC0570@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FCC04C8();
  *a1 = result;
  return result;
}

uint64_t sub_23FCC0594()
{
  sub_23FCC0A60();
  return sub_23FD754DC();
}

uint64_t sub_23FCC05BC()
{
  sub_23FCC0A60();
  return sub_23FD754E8();
}

void ClientSessionIdentityPack.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCC2A5C();
  v3 = v2;
  v4 = sub_23FBFD684(&qword_256F60EB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FC12F34();
  sub_23FBFDE40(v3, v3[3]);
  sub_23FCC0A60();
  sub_23FCC2A80();
  sub_23FCC0A9C();
  sub_23FCC2AD4();
  if (!v0)
  {
    sub_23FCC2B88();
    sub_23FCC0AD8();
    sub_23FCC2AD4();
    sub_23FCC0B14();
    sub_23FCC2B94();
  }
  sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23FCC2BC4();
  sub_23FC06000();
}

uint64_t ClientSessionIdentityPack.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23FC06220();
  sub_23FC5C20C();
  sub_23FCC2B60();
  sub_23FC103E8();
  swift_bridgeObjectRetain();
  sub_23FD74C30();
  swift_bridgeObjectRelease();
  sub_23FD75464();
  if (v1)
  {
    sub_23FC5AAE8();
    sub_23FCC2AC8();
    sub_23FC15A24();
  }
  return sub_23FC06168();
}

void ClientSessionIdentityPack.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FCC2A5C();
  v2 = v1;
  v4 = v3;
  sub_23FBFD684(&qword_256F60ED8);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC9308C();
  sub_23FBFDE40(v2, v2[3]);
  sub_23FCC0A60();
  sub_23FD754B8();
  if (v0)
  {
    sub_23FCC2A9C();
  }
  else
  {
    sub_23FCC0C20();
    sub_23FCC2BA0();
    sub_23FCC2BB4();
    sub_23FCC2B88();
    v7 = sub_23FCC0C5C();
    swift_bridgeObjectRetain();
    sub_23FCC2AEC();
    sub_23FCC2BB4();
    if (v7)
    {
      sub_23FCC2AB8();
      sub_23FC5A648();
      sub_23FCC2A9C();
      sub_23FC5A648();
    }
    else
    {
      sub_23FCC0C98();
      sub_23FC5AFCC();
      sub_23FCC2AEC();
      sub_23FD752A8();
      sub_23FCC2AB8();
      sub_23FC5AFCC();
      swift_bridgeObjectRelease();
      *v4 = v8;
      v4[1] = v9;
      v4[2] = v8;
      v4[3] = v9;
      v4[4] = v8;
      v4[5] = v9;
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v2);
      sub_23FC1002C();
      sub_23FC0AAF8();
    }
  }
  swift_bridgeObjectRelease();
  sub_23FC06000();
}

unint64_t sub_23FCC0974()
{
  unint64_t result;

  result = qword_256F60E80;
  if (!qword_256F60E80)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79680, &type metadata for SessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60E80);
  }
  return result;
}

unint64_t sub_23FCC09B0()
{
  unint64_t result;

  result = qword_256F60E90;
  if (!qword_256F60E90)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientSessionIdentityPack, &type metadata for ClientSessionIdentityPack);
    atomic_store(result, (unint64_t *)&qword_256F60E90);
  }
  return result;
}

unint64_t sub_23FCC09EC()
{
  unint64_t result;

  result = qword_256F60EA8;
  if (!qword_256F60EA8)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientSessionIdentityPack, &type metadata for ClientSessionIdentityPack);
    atomic_store(result, (unint64_t *)&qword_256F60EA8);
  }
  return result;
}

void sub_23FCC0A28(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_23FBFF0A0();
}

unint64_t sub_23FCC0A60()
{
  unint64_t result;

  result = qword_256F60EB8;
  if (!qword_256F60EB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79630, &type metadata for ClientSessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F60EB8);
  }
  return result;
}

unint64_t sub_23FCC0A9C()
{
  unint64_t result;

  result = qword_256F60EC0;
  if (!qword_256F60EC0)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientSessionID, &type metadata for ClientSessionID);
    atomic_store(result, (unint64_t *)&qword_256F60EC0);
  }
  return result;
}

unint64_t sub_23FCC0AD8()
{
  unint64_t result;

  result = qword_256F60EC8;
  if (!qword_256F60EC8)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientApplicationID, &type metadata for ClientApplicationID);
    atomic_store(result, (unint64_t *)&qword_256F60EC8);
  }
  return result;
}

unint64_t sub_23FCC0B14()
{
  unint64_t result;

  result = qword_256F60ED0;
  if (!qword_256F60ED0)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientGroupID, &type metadata for ClientGroupID);
    atomic_store(result, (unint64_t *)&qword_256F60ED0);
  }
  return result;
}

uint64_t sub_23FCC0B50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23FD7544C();
  swift_bridgeObjectRetain();
  sub_23FD74C30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23FD74C30();
  swift_bridgeObjectRelease();
  sub_23FD75464();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    swift_bridgeObjectRelease();
  }
  return sub_23FD75470();
}

unint64_t sub_23FCC0C20()
{
  unint64_t result;

  result = qword_256F60EE0;
  if (!qword_256F60EE0)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientSessionID, &type metadata for ClientSessionID);
    atomic_store(result, (unint64_t *)&qword_256F60EE0);
  }
  return result;
}

unint64_t sub_23FCC0C5C()
{
  unint64_t result;

  result = qword_256F60EE8;
  if (!qword_256F60EE8)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientApplicationID, &type metadata for ClientApplicationID);
    atomic_store(result, (unint64_t *)&qword_256F60EE8);
  }
  return result;
}

unint64_t sub_23FCC0C98()
{
  unint64_t result;

  result = qword_256F60EF0;
  if (!qword_256F60EF0)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientGroupID, &type metadata for ClientGroupID);
    atomic_store(result, (unint64_t *)&qword_256F60EF0);
  }
  return result;
}

void sub_23FCC0CD4()
{
  sub_23FBFEE2C(&qword_256F60EF8, type metadata accessor for SessionID, (uint64_t)&protocol conformance descriptor for SessionID);
}

unint64_t sub_23FCC0D04()
{
  unint64_t result;

  result = qword_256F60F00;
  if (!qword_256F60F00)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientSessionID, &type metadata for ClientSessionID);
    atomic_store(result, (unint64_t *)&qword_256F60F00);
  }
  return result;
}

unint64_t sub_23FCC0D44()
{
  unint64_t result;

  result = qword_256F60F08;
  if (!qword_256F60F08)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientApplicationID, &type metadata for ClientApplicationID);
    atomic_store(result, (unint64_t *)&qword_256F60F08);
  }
  return result;
}

unint64_t sub_23FCC0D84()
{
  unint64_t result;

  result = qword_256F60F10;
  if (!qword_256F60F10)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientGroupID, &type metadata for ClientGroupID);
    atomic_store(result, (unint64_t *)&qword_256F60F10);
  }
  return result;
}

void sub_23FCC0DC0()
{
  sub_23FBFEE2C(&qword_256F60F18, type metadata accessor for SessionIdentityPack, (uint64_t)&protocol conformance descriptor for SessionIdentityPack);
}

unint64_t sub_23FCC0DF0()
{
  unint64_t result;

  result = qword_256F60F20;
  if (!qword_256F60F20)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for ClientSessionIdentityPack, &type metadata for ClientSessionIdentityPack);
    atomic_store(result, (unint64_t *)&qword_256F60F20);
  }
  return result;
}

void sub_23FCC0E30()
{
  ClientSessionIdentityPack.init(from:)();
}

void sub_23FCC0E44()
{
  ClientSessionIdentityPack.encode(to:)();
}

uint64_t getEnumTagSinglePayload for SessionID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCC0E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23FCC2A74();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCC0EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FCC2A74();
  v0 = sub_23FC0A12C();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

void type metadata accessor for ClientSessionID()
{
  sub_23FC7A748();
}

void type metadata accessor for ClientApplicationID()
{
  sub_23FC7A748();
}

void _s23IntelligenceFlowRuntime15ClientSessionIDVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  sub_23FC1002C();
  sub_23FBFF0A0();
}

void type metadata accessor for ClientGroupID()
{
  sub_23FC7A748();
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionIdentityPack(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[3];
    v9[2] = v10[2];
    v9[3] = v12;
    v13 = v10[5];
    v9[4] = v10[4];
    v9[5] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionIdentityPack(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionIdentityPack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionIdentityPack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionIdentityPack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t assignWithTake for SessionIdentityPack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionIdentityPack()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCC129C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionID(0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
  else
    sub_23FC09258();
}

uint64_t storeEnumTagSinglePayload for SessionIdentityPack()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCC131C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = type metadata accessor for SessionID(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = sub_23FC0A12C();
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_23FCC1388()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ClientSessionIdentityPack()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClientSessionIdentityPack(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClientSessionIdentityPack(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ClientSessionIdentityPack(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for ClientSessionIdentityPack(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientSessionIdentityPack(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientSessionIdentityPack(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ClientSessionIdentityPack()
{
  sub_23FC7A748();
}

uint64_t sub_23FCC1608()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23FCC1630(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23FCC166C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_23FCC16D8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *sub_23FCC16E4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FCC1728(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FCC1768(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ClientIdentityPack()
{
  sub_23FC7A748();
}

uint64_t _s23IntelligenceFlowRuntime9SessionIDVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(void);
  uint64_t v3;

  sub_23FC06018();
  sub_23FC0A050();
  return sub_23FC06104(v1, v0, v3, *v2);
}

uint64_t _s23IntelligenceFlowRuntime9SessionIDVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFF104();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void _s23IntelligenceFlowRuntime9SessionIDVwcp_0()
{
  uint64_t v0;

  sub_23FC06018();
  sub_23FC0A050();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16));
  sub_23FBFF0A0();
}

void _s23IntelligenceFlowRuntime9SessionIDVwca_0()
{
  uint64_t v0;

  sub_23FC06018();
  sub_23FC0A050();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24));
  sub_23FBFF0A0();
}

void _s23IntelligenceFlowRuntime9SessionIDVwtk_0()
{
  uint64_t v0;

  v0 = sub_23FC06018();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  sub_23FBFF0A0();
}

void _s23IntelligenceFlowRuntime9SessionIDVwta_0()
{
  uint64_t v0;

  sub_23FC06018();
  sub_23FC0A050();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 40));
  sub_23FBFF0A0();
}

uint64_t sub_23FCC18B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCC18BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for SessionClientID(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F610A0);
}

uint64_t sub_23FCC18DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClientSessionIdentityPack.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FCC1990 + 4 * byte_23FD789D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FCC19C4 + 4 * asc_23FD789D0[v4]))();
}

uint64_t sub_23FCC19C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCC19CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCC19D4);
  return result;
}

uint64_t sub_23FCC19E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCC19E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FCC19EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCC19F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientSessionIdentityPack.CodingKeys()
{
  return &type metadata for ClientSessionIdentityPack.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionIdentityPack.CodingKeys()
{
  return &type metadata for SessionIdentityPack.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientGroupID.CodingKeys()
{
  return &type metadata for ClientGroupID.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientApplicationID.CodingKeys()
{
  return &type metadata for ClientApplicationID.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientSessionID.CodingKeys()
{
  return &type metadata for ClientSessionID.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionID.CodingKeys()
{
  return &type metadata for SessionID.CodingKeys;
}

unint64_t sub_23FCC1A6C()
{
  unint64_t result;

  result = qword_256F610D8;
  if (!qword_256F610D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD790B0, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F610D8);
  }
  return result;
}

unint64_t sub_23FCC1AAC()
{
  unint64_t result;

  result = qword_256F610E0;
  if (!qword_256F610E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79168, &type metadata for ClientSessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F610E0);
  }
  return result;
}

unint64_t sub_23FCC1AEC()
{
  unint64_t result;

  result = qword_256F610E8;
  if (!qword_256F610E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79220, &type metadata for ClientApplicationID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F610E8);
  }
  return result;
}

unint64_t sub_23FCC1B2C()
{
  unint64_t result;

  result = qword_256F610F0;
  if (!qword_256F610F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD792D8, &type metadata for ClientGroupID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F610F0);
  }
  return result;
}

unint64_t sub_23FCC1B6C()
{
  unint64_t result;

  result = qword_256F610F8;
  if (!qword_256F610F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79390, &type metadata for SessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F610F8);
  }
  return result;
}

unint64_t sub_23FCC1BAC()
{
  unint64_t result;

  result = qword_256F61100;
  if (!qword_256F61100)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79448, &type metadata for ClientSessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61100);
  }
  return result;
}

void sub_23FCC1BE8()
{
  sub_23FBFEE2C(&qword_256F61108, type metadata accessor for SessionClientID, (uint64_t)&unk_23FD794E8);
}

uint64_t sub_23FCC1C14()
{
  uint64_t v1;

  sub_23FCC2BD0();
  sub_23FC10108();
  sub_23FCC2A3C();
  sub_23FC595E0();
  sub_23FCC2A4C();
  sub_23FC10110();
  sub_23FCC2A3C();
  sub_23FC595E0();
  sub_23FCC2A94();
  return v1;
}

uint64_t sub_23FCC1C98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23FC5AC34();
  sub_23FCC2B34();
  swift_bridgeObjectRelease();
  if (!v1)
    return sub_23FCC2B1C();
  sub_23FCC2B1C();
  sub_23FC5AAE8();
  sub_23FCC2AC8();
  return swift_bridgeObjectRelease();
}

void sub_23FCC1D14(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    sub_23FC76014();
    sub_23FCC2B44();
    if ((v7 & 1) == 0)
      goto LABEL_17;
  }
  if (!v3)
  {
    if (!v4)
      goto LABEL_17;
    goto LABEL_16;
  }
  if (!v4)
  {
    sub_23FC5AAE8();
LABEL_16:
    sub_23FC15A24();
    goto LABEL_17;
  }
  if (v2 != v5 || v3 != v4)
  {
    sub_23FC76014();
    sub_23FCC2B44();
  }
LABEL_17:
  sub_23FC09258();
}

uint64_t sub_23FCC1DB4(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023FD85160 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7247746E65696C63 && a2 == 0xED0000644970756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FCC1EC0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7247746E65696C63;
  else
    return 0xD000000000000013;
}

void sub_23FCC1F08()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FCC2A5C();
  v2 = v1;
  sub_23FBFD684(&qword_256F61188);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC12F34();
  sub_23FBFDE40(v2, v2[3]);
  sub_23FCC26AC();
  sub_23FCC2A80();
  sub_23FCC0AD8();
  sub_23FD7532C();
  if (!v0)
  {
    sub_23FCC2B88();
    sub_23FCC0B14();
    sub_23FCC2B94();
  }
  sub_23FCC2B78();
  sub_23FCC2BC4();
  sub_23FC06000();
}

uint64_t sub_23FCC2000()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23FC06220();
  sub_23FC5C20C();
  sub_23FCC2B60();
  sub_23FC103E8();
  sub_23FD75464();
  if (v1)
  {
    sub_23FC5AAE8();
    sub_23FCC2AC8();
    sub_23FC15A24();
  }
  return sub_23FC06168();
}

void sub_23FCC2078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23FCC2A5C();
  v4 = v3;
  v6 = v5;
  sub_23FBFD684(&qword_256F61178);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC8FD1C();
  sub_23FBFDE40(v4, v4[3]);
  sub_23FCC26AC();
  sub_23FD754B8();
  if (v0)
  {
    sub_23FCC2A9C();
  }
  else
  {
    sub_23FCC0C5C();
    sub_23FCC2BA0();
    sub_23FCC2BB4();
    sub_23FCC2B88();
    sub_23FCC0C98();
    swift_bridgeObjectRetain();
    sub_23FD752A8();
    sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23FC5AFCC();
    swift_bridgeObjectRelease();
    *v6 = v9;
    v6[1] = v10;
    v6[2] = v9;
    v6[3] = v10;
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
    sub_23FC1002C();
  }
  swift_bridgeObjectRelease();
  sub_23FC06000();
}

void sub_23FCC21E4()
{
  sub_23FCC2B70();
  sub_23FD75458();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FCC2214()
{
  char *v0;

  return sub_23FCC1EC0(*v0);
}

uint64_t sub_23FCC221C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCC1DB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FCC2240()
{
  sub_23FCC26AC();
  return sub_23FD754DC();
}

uint64_t sub_23FCC2268()
{
  sub_23FCC26AC();
  return sub_23FD754E8();
}

uint64_t sub_23FCC2298()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23FD7544C();
  swift_bridgeObjectRetain();
  sub_23FD74C30();
  swift_bridgeObjectRelease();
  sub_23FD75464();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    swift_bridgeObjectRelease();
  }
  return sub_23FD75470();
}

void sub_23FCC2340()
{
  sub_23FCC2078();
}

void sub_23FCC2354()
{
  sub_23FCC1F08();
}

unint64_t sub_23FCC2370()
{
  unint64_t result;

  result = qword_256F61110;
  if (!qword_256F61110)
  {
    result = MEMORY[0x2426797E8](&unk_23FD795C8, &unk_251010800);
    atomic_store(result, (unint64_t *)&qword_256F61110);
  }
  return result;
}

unint64_t sub_23FCC23B0()
{
  unint64_t result;

  result = qword_256F61118;
  if (!qword_256F61118)
  {
    result = MEMORY[0x2426797E8](&unk_23FD793B8, &type metadata for ClientSessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61118);
  }
  return result;
}

unint64_t sub_23FCC23F0()
{
  unint64_t result;

  result = qword_256F61120;
  if (!qword_256F61120)
  {
    result = MEMORY[0x2426797E8](&unk_23FD793E0, &type metadata for ClientSessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61120);
  }
  return result;
}

unint64_t sub_23FCC2430()
{
  unint64_t result;

  result = qword_256F61128;
  if (!qword_256F61128)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79300, &type metadata for SessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61128);
  }
  return result;
}

unint64_t sub_23FCC2470()
{
  unint64_t result;

  result = qword_256F61130;
  if (!qword_256F61130)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79328, &type metadata for SessionIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61130);
  }
  return result;
}

unint64_t sub_23FCC24B0()
{
  unint64_t result;

  result = qword_256F61138;
  if (!qword_256F61138)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79248, &type metadata for ClientGroupID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61138);
  }
  return result;
}

unint64_t sub_23FCC24F0()
{
  unint64_t result;

  result = qword_256F61140;
  if (!qword_256F61140)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79270, &type metadata for ClientGroupID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61140);
  }
  return result;
}

unint64_t sub_23FCC2530()
{
  unint64_t result;

  result = qword_256F61148;
  if (!qword_256F61148)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79190, &type metadata for ClientApplicationID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61148);
  }
  return result;
}

unint64_t sub_23FCC2570()
{
  unint64_t result;

  result = qword_256F61150;
  if (!qword_256F61150)
  {
    result = MEMORY[0x2426797E8](&unk_23FD791B8, &type metadata for ClientApplicationID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61150);
  }
  return result;
}

unint64_t sub_23FCC25B0()
{
  unint64_t result;

  result = qword_256F61158;
  if (!qword_256F61158)
  {
    result = MEMORY[0x2426797E8](&unk_23FD790D8, &type metadata for ClientSessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61158);
  }
  return result;
}

unint64_t sub_23FCC25F0()
{
  unint64_t result;

  result = qword_256F61160;
  if (!qword_256F61160)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79100, &type metadata for ClientSessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61160);
  }
  return result;
}

unint64_t sub_23FCC2630()
{
  unint64_t result;

  result = qword_256F61168;
  if (!qword_256F61168)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79020, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61168);
  }
  return result;
}

unint64_t sub_23FCC2670()
{
  unint64_t result;

  result = qword_256F61170;
  if (!qword_256F61170)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79048, &type metadata for SessionID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61170);
  }
  return result;
}

unint64_t sub_23FCC26AC()
{
  unint64_t result;

  result = qword_256F61180;
  if (!qword_256F61180)
  {
    result = MEMORY[0x2426797E8](&unk_23FD799D0, &type metadata for ClientIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61180);
  }
  return result;
}

unint64_t sub_23FCC26E8()
{
  unint64_t result;

  result = qword_256F61198;
  if (!qword_256F61198)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79980, &type metadata for SessionClientID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F61198);
  }
  return result;
}

uint64_t _s23IntelligenceFlowRuntime13ClientGroupIDV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FCC2764 + 4 * byte_23FD789DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FCC2784 + 4 * byte_23FD789DF[v4]))();
}

_BYTE *sub_23FCC2764(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FCC2784(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FCC278C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FCC2794(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FCC279C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FCC27A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SessionClientID.CodingKeys()
{
  return &type metadata for SessionClientID.CodingKeys;
}

uint64_t _s23IntelligenceFlowRuntime19SessionIdentityPackV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FCC280C + 4 * byte_23FD789E9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FCC2840 + 4 * byte_23FD789E4[v4]))();
}

uint64_t sub_23FCC2840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCC2848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCC2850);
  return result;
}

uint64_t sub_23FCC285C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCC2864);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FCC2868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCC2870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientIdentityPack.CodingKeys()
{
  return &type metadata for ClientIdentityPack.CodingKeys;
}

unint64_t sub_23FCC2890()
{
  unint64_t result;

  result = qword_256F611A8;
  if (!qword_256F611A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD798A0, &type metadata for ClientIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F611A8);
  }
  return result;
}

unint64_t sub_23FCC28D0()
{
  unint64_t result;

  result = qword_256F611B0;
  if (!qword_256F611B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79958, &type metadata for SessionClientID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F611B0);
  }
  return result;
}

unint64_t sub_23FCC2910()
{
  unint64_t result;

  result = qword_256F611B8;
  if (!qword_256F611B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD798C8, &type metadata for SessionClientID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F611B8);
  }
  return result;
}

unint64_t sub_23FCC2950()
{
  unint64_t result;

  result = qword_256F611C0;
  if (!qword_256F611C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD798F0, &type metadata for SessionClientID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F611C0);
  }
  return result;
}

unint64_t sub_23FCC2990()
{
  unint64_t result;

  result = qword_256F611C8;
  if (!qword_256F611C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79810, &type metadata for ClientIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F611C8);
  }
  return result;
}

unint64_t sub_23FCC29D0()
{
  unint64_t result;

  result = qword_256F611D0;
  if (!qword_256F611D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79838, &type metadata for ClientIdentityPack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F611D0);
  }
  return result;
}

uint64_t sub_23FCC2A3C()
{
  return sub_23FD74C48();
}

uint64_t sub_23FCC2A4C()
{
  return sub_23FD74C48();
}

uint64_t sub_23FCC2A74()
{
  return sub_23FD71474();
}

uint64_t sub_23FCC2A80()
{
  return sub_23FD754C4();
}

uint64_t sub_23FCC2A94()
{
  return sub_23FD74C48();
}

uint64_t sub_23FCC2A9C()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0);
}

uint64_t sub_23FCC2AA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCC2AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FCC2AC8()
{
  return sub_23FD74C30();
}

uint64_t sub_23FCC2AD4()
{
  return sub_23FD7532C();
}

uint64_t sub_23FCC2B08()
{
  return sub_23FD752D8();
}

uint64_t sub_23FCC2B1C()
{
  return sub_23FD75464();
}

uint64_t sub_23FCC2B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23FCC2B34()
{
  return sub_23FD74C30();
}

uint64_t sub_23FCC2B44()
{
  return 0;
}

uint64_t sub_23FCC2B50()
{
  return sub_23FD74C30();
}

uint64_t sub_23FCC2B60()
{
  return sub_23FD74C30();
}

uint64_t sub_23FCC2B70()
{
  return sub_23FD7544C();
}

uint64_t sub_23FCC2B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_23FCC2B88()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
}

uint64_t sub_23FCC2B94()
{
  return sub_23FD752FC();
}

uint64_t sub_23FCC2BB4()
{
  return sub_23FD752D8();
}

uint64_t sub_23FCC2BBC(uint64_t a1, uint64_t *a2)
{
  return sub_23FBFD684(a2);
}

uint64_t dispatch thunk of Session.SessionResourceProviding.identityChain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Session.SessionResourceProviding.actionRequirementsEvaluator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Session.SessionResourceProviding.instrumentationSender.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Session.SessionResourceProviding.toolbox.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Session.SessionResourceProviding.getToolExecutionSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Session.SessionResourceProviding.getConcurrencySafeToolExecutionSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_23FCC2C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a2;
  v27 = a6;
  v28 = a1;
  v29 = a3;
  v11 = sub_23FC5F58C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FCC3A88();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a2, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a4, v11);
  v21 = swift_allocObject();
  v22 = v27;
  *(_QWORD *)(v21 + 16) = a5;
  *(_QWORD *)(v21 + 24) = v22;
  sub_23FBFD684(&qword_256F611D8);
  v23 = swift_allocObject();
  *(_DWORD *)(v23 + 36) = 0;
  *(_QWORD *)(v23 + 16) = sub_23FCC319C;
  *(_QWORD *)(v23 + 24) = v21;
  *(_BYTE *)(v23 + 32) = 0;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v16);
  *(_QWORD *)a7 = v28;
  v24 = (int *)_s24StandardSessionResourcesVMa();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&a7[v24[5]], v20, v16);
  *(_QWORD *)&a7[v24[6]] = v29;
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(&a7[v24[7]], v15, v11);
  *(_QWORD *)&a7[v24[8]] = v23;
  return result;
}

uint64_t sub_23FCC2DC4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v9 = *(os_unfair_lock_s **)(v4 + *(int *)(_s24StandardSessionResourcesVMa() + 32));
  v10 = (uint64_t)&v9[4];
  v11 = v9 + 9;
  os_unfair_lock_lock(v9 + 9);
  sub_23FCC3A54(v10, &v16);
  os_unfair_lock_unlock(v11);
  v12 = a1(0);
  v13 = swift_retain();
  v14 = a2(v13);
  a4[3] = v12;
  a4[4] = a3;
  result = swift_release();
  *a4 = v14;
  return result;
}

uint64_t sub_23FCC2E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[4];

  v6 = sub_23FBFD684(&qword_254346A28);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FD74DEC();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = a2;
  LODWORD(a1) = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10);
  swift_retain();
  if ((_DWORD)a1 == 1)
  {
    sub_23FC95068((uint64_t)v9);
    v12 = 0;
    v13 = 0;
  }
  else
  {
    sub_23FD74DE0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_23FD74D80();
      v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      v12 = 0;
      v13 = 0;
    }
  }
  sub_23FBFD684(qword_256F611F0);
  if (v13 | v12)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v12;
    v16[3] = v13;
  }
  result = swift_task_create();
  *a3 = result;
  return result;
}

uint64_t sub_23FCC302C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  *(_QWORD *)(v4 + 16) = a1;
  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_23FCC3084;
  return v7();
}

uint64_t sub_23FCC3084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v7 + 8))();
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_23FCC3104()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 32), *(int8x16_t *)(v0 + 32), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCC3120()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCC3128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_23FD72F14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23FCC3168@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(a1 + 24));
  return swift_retain();
}

uint64_t sub_23FCC3178()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FCC319C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23FCC2E78(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t _s24StandardSessionResourcesVMa()
{
  uint64_t result;

  result = qword_256F61250;
  if (!qword_256F61250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FCC31DC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FCC3208(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23FCBE784;
  return sub_23FCC302C(a1, v4, v5, v6);
}

uint64_t *sub_23FCC3280(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD72F14();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FD74120();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    v17(v14, v15, v16);
    *(uint64_t *)((char *)v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return v7;
}

uint64_t sub_23FCC3374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FD72F14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_release();
}

_QWORD *sub_23FCC3400(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD72F14();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FD74120();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_retain();
  v15(v12, v13, v14);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  return a1;
}

_QWORD *sub_23FCC34D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD72F14();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FD74120();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_23FCC35B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD72F14();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FD74120();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_23FCC365C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD72F14();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_release();
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FD74120();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_23FCC3724()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCC3730(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23FCC3A88();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23FC5F58C();
      v10 = *(int *)(a3 + 28);
    }
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_23FCC37C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_23FCC37CC(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = sub_23FCC3A88();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23FC5F58C();
      v10 = *(int *)(a4 + 28);
    }
    return (_QWORD *)_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_23FCC3858()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD72F14();
  if (v1 <= 0x3F)
  {
    result = sub_23FD74120();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23FCC38F8()
{
  return MEMORY[0x24BE547F8];
}

unint64_t sub_23FCC3908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F60BC8;
  if (!qword_256F60BC8)
  {
    v1 = type metadata accessor for DefaultEventLogSender();
    result = MEMORY[0x2426797E8](&unk_23FD76F58, v1);
    atomic_store(result, (unint64_t *)&qword_256F60BC8);
  }
  return result;
}

uint64_t sub_23FCC3948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_23FD74120();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23FCC3988@<X0>(uint64_t *a1@<X8>)
{
  return sub_23FCC2DC4(MEMORY[0x24BE56120], MEMORY[0x24BE56110], MEMORY[0x24BE56118], a1);
}

uint64_t sub_23FCC39B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_23FCC2DC4(MEMORY[0x24BE56608], MEMORY[0x24BE565F8], MEMORY[0x24BE56600], a1);
}

uint64_t sub_23FCC39E0(uint64_t a1)
{
  uint64_t v3;

  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    (*(void (**)(uint64_t *__return_ptr))a1)(&v3);
    sub_23FCC3A7C();
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
  }
  return swift_retain();
}

uint64_t sub_23FCC3A54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23FCC39E0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23FCC3A7C()
{
  return swift_release();
}

uint64_t sub_23FCC3A88()
{
  return sub_23FD72F14();
}

void sub_23FCC3A94(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23FC84CD4();
    if ((v2 & 1) != 0)
      sub_23FCCC94C();
  }
  sub_23FBFF0A0();
}

void sub_23FCC3AC8(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23FC84D38(a1);
    if ((v2 & 1) != 0)
      sub_23FCCC94C();
  }
  sub_23FBFF0A0();
}

void sub_23FCC3AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23FC84D84(a1, a2);
    if ((v3 & 1) != 0)
      sub_23FCCC94C();
  }
  sub_23FBFF0A0();
}

uint64_t sub_23FCC3B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_23FC84EE0(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v4);
  else
    return 0;
}

uint64_t sub_23FCC3B74(uint64_t a1, uint64_t a2)
{
  return sub_23FCC3B88(a1, a2, (void (*)(_QWORD))type metadata accessor for SessionCoordinatorInjectionRequest, sub_23FC84C70);
}

uint64_t sub_23FCC3B88(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), void (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16) && (a4(), (v7 & 1) != 0))
  {
    v8 = sub_23FCCCA98();
    sub_23FCCCD50(v5 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v4);
    v9 = sub_23FCCCD34();
  }
  else
  {
    a3(0);
    v9 = sub_23FCCCD10();
  }
  return sub_23FCCC70C(v9, v10, v11, v12);
}

uint64_t sub_23FCC3BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23FCC3C04(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BE566B8], a4);
}

uint64_t sub_23FCC3BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23FCC3C04(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BEB9A18], a4);
}

uint64_t sub_23FCC3C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(a3 + 16) && (sub_23FC84D84(a1, a2), (v9 & 1) != 0))
  {
    v10 = sub_23FCCCA98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a5, v6 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, v10);
    v11 = sub_23FCCCD34();
  }
  else
  {
    a4(0);
    v11 = sub_23FCCCD10();
  }
  return sub_23FCCC70C(v11, v12, v13, v14);
}

uint64_t sub_23FCC3C74(uint64_t a1, uint64_t a2)
{
  return sub_23FCC3B88(a1, a2, (void (*)(_QWORD))_s19SystemResponseEventVMa, sub_23FC84C70);
}

void sub_23FCC3C88(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(a1 + 16) && (sub_23FC84F3C(), (v5 & 1) != 0))
  {
    sub_23FC58440(*(_QWORD *)(a1 + 56) + 80 * v4, (uint64_t)a2);
  }
  else
  {
    a2[3] = 0u;
    a2[4] = 0u;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
    sub_23FBFF0A0();
  }
}

void sub_23FCC3CE0(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23FC84C70();
    if ((v2 & 1) != 0)
      swift_retain();
  }
  sub_23FBFF0A0();
}

void sub_23FCC3D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  _QWORD v52[5];

  v48 = sub_23FBFD684(&qword_256F614B0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v1, v2);
  v47 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v4, v5);
  v46 = (char *)&v42 - v6;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFF218();
  v45 = v9;
  sub_23FC59120();
  v10 = *(_QWORD *)(v0 + 24);
  sub_23FCCB7F8(v10, v52);
  v49 = v52[0];
  v50 = v52[3];
  v11 = v52[4];
  v43 = v52[1];
  v44 = (unint64_t)(v52[2] + 64) >> 6;
  v42 = v10;
  swift_bridgeObjectRetain_n();
  v13 = (uint64_t)v46;
  v12 = (uint64_t)v47;
  while (1)
  {
    if (v11)
    {
      sub_23FCCCC50();
      v51 = v11;
      v15 = v14 | (v50 << 6);
      goto LABEL_26;
    }
    v16 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v16 >= v44)
      goto LABEL_28;
    v17 = *(_QWORD *)(v43 + 8 * v16);
    v18 = v50 + 1;
    if (!v17)
    {
      sub_23FCCCC14();
      if (v19 == v20)
        goto LABEL_28;
      sub_23FCCCC08();
      if (!v17)
      {
        sub_23FCCCC14();
        if (v19 == v20)
          goto LABEL_28;
        sub_23FCCCC08();
        if (!v17)
        {
          sub_23FCCCC14();
          if (v19 == v20)
            goto LABEL_28;
          sub_23FCCCC08();
          if (!v17)
          {
            sub_23FCCCC14();
            if (v19 == v20)
              goto LABEL_28;
            sub_23FCCCC08();
            if (!v17)
            {
              v18 = v21 + 5;
              if (v21 + 5 >= v44)
                goto LABEL_28;
              v17 = *(_QWORD *)(v43 + 8 * v18);
              if (!v17)
              {
                v22 = v50 + 7;
                while (v22 < v44)
                {
                  v17 = *(_QWORD *)(v43 + 8 * v22++);
                  if (v17)
                  {
                    v18 = v22 - 1;
                    goto LABEL_25;
                  }
                }
LABEL_28:
                swift_bridgeObjectRelease();
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_25:
    v50 = v18;
    v51 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_26:
    v23 = v49;
    v24 = *(_QWORD *)(v49 + 48);
    v25 = sub_23FC5EA38();
    v26 = v45;
    sub_23FBFEF40(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v15, v45, type metadata accessor for SessionClientID);
    v27 = *(_QWORD *)(v23 + 56) + 56 * v15;
    v28 = *(_QWORD *)v27;
    v29 = *(_QWORD *)(v27 + 8);
    v30 = *(_QWORD *)(v27 + 16);
    v31 = *(_QWORD *)(v27 + 24);
    v32 = *(_BYTE *)(v27 + 32);
    v34 = *(_QWORD *)(v27 + 40);
    v33 = *(_QWORD *)(v27 + 48);
    v35 = v48;
    v36 = v26 + *(int *)(v48 + 48);
    *(_QWORD *)v36 = v28;
    *(_QWORD *)(v36 + 8) = v29;
    *(_QWORD *)(v36 + 16) = v30;
    *(_QWORD *)(v36 + 24) = v31;
    *(_BYTE *)(v36 + 32) = v32;
    *(_QWORD *)(v36 + 40) = v34;
    *(_QWORD *)(v36 + 48) = v33;
    sub_23FBFEEEC(v26, v13, &qword_256F614B0);
    v37 = *(int *)(v35 + 48);
    v38 = v12 + v37;
    v39 = v13 + v37;
    sub_23FBFEF40(v13, v12, type metadata accessor for SessionClientID);
    v40 = *(_QWORD *)(v39 + 8);
    v41 = *(unsigned __int8 *)(v39 + 32);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_QWORD *)(v38 + 8) = v40;
    *(_OWORD *)(v38 + 16) = *(_OWORD *)(v39 + 16);
    *(_BYTE *)(v38 + 32) = v41;
    *(_OWORD *)(v38 + 40) = *(_OWORD *)(v39 + 40);
    swift_bridgeObjectRetain();
    sub_23FC5AC34();
    sub_23FC58D90();
    sub_23FC5A09C();
    sub_23FBFEF18(v12, type metadata accessor for SessionClientID);
    sub_23FBFEF74(v13, &qword_256F614B0);
    v11 = v51;
    if (v41 == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
  }
  __break(1u);
}

void sub_23FCC4030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL8 v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;

  sub_23FCC2A5C();
  v17 = v16;
  sub_23FCCCAC4();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FC5DB68();
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)v34 - v22;
  v24 = sub_23FC10100();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  sub_23FBFEFE0();
  v37 = v27;
  sub_23FCC6560();
  if (v13)
  {
    *v17 = a13;
  }
  else
  {
    v36 = v24;
    sub_23FCC71F8(v14);
    sub_23FC58FB0();
    sub_23FBFEF40(v14, (uint64_t)v23, type metadata accessor for SessionID);
    v28 = sub_23FD72BE4();
    v29 = sub_23FD74F6C();
    v30 = sub_23FC75E24(v29);
    if (v30)
    {
      v35 = v28;
      v40 = v14;
      v31 = (uint8_t *)sub_23FBFEFF4();
      v39 = sub_23FBFEFF4();
      v34[2] = v25;
      *(_DWORD *)v31 = 136315138;
      v34[1] = v31 + 4;
      sub_23FCCCD2C((uint64_t)v23, v15);
      v32 = sub_23FD71438();
      sub_23FC9825C(v15);
      v38 = sub_23FCCCA50(v32, v33, &v39);
      sub_23FD75044();
      sub_23FC102FC();
      sub_23FC9825C((uint64_t)v23);
      _os_log_impl(&dword_23FBF8000, v35, v40, "Session %s deregistered.", v31, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    sub_23FCCCB2C(v30, type metadata accessor for SessionID);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v37, v36);
  }
  sub_23FC06000();
}

void sub_23FCC4248(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];

  v11 = sub_23FC10100();
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC10370();
  sub_23FBFD684(&qword_256F61438);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC061C0();
  sub_23FCCCD84();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FCCC654();
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)v36 - v20;
  sub_23FCCCA1C(a1, (uint64_t)v36 - v20);
  sub_23FBFEF40(a3, v6, type metadata accessor for SessionClientID);
  v22 = (int *)sub_23FCCC930();
  *(_QWORD *)(v6 + v22[5]) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v6 + v22[6]) = a4;
  *(_QWORD *)(v6 + v22[7]) = a2;
  sub_23FC7A680();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v23, v24, v25, v26);
  sub_23FC59120();
  sub_23FC58D68();
  sub_23FCC4A10(v6, (uint64_t)v21);
  swift_endAccess();
  sub_23FC59F80();
  sub_23FCCCA1C(a1, v5);
  v27 = sub_23FC5A14C();
  v28 = sub_23FD74F6C();
  if (sub_23FC766F8(v27))
  {
    v29 = (uint8_t *)sub_23FCCCD5C();
    v40[0] = sub_23FCCC5F0();
    *(_DWORD *)v29 = 136315138;
    v36[0] = v29 + 4;
    v30 = sub_23FCCC9F0();
    v36[1] = v4;
    sub_23FBFEF40(v30, v31, v32);
    v33 = sub_23FD71438();
    v35 = v34;
    sub_23FCCC9E0((uint64_t)v21);
    v39 = sub_23FC9DC40(v33, v35, v40);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FCCC9E0(v5);
    sub_23FBFF114(&dword_23FBF8000, v27, v28, "Session %s registered.", v29);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FBFEF18(v5, type metadata accessor for SessionID);

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v4, v38);
  sub_23FC060D4();
}

void sub_23FCC44CC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;

  sub_23FCCCC80();
  sub_23FBFD684(&qword_256F61438);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FCCC6F0();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC10388();
  sub_23FCC6560();
  if (v4)
  {
    v9 = v12;
LABEL_6:
    *v0 = v9;
    goto LABEL_7;
  }
  v10 = sub_23FCCC464();
  sub_23FCCCBD8(v10, *(_QWORD *)(v1 + 16), (void (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo, (void (*)(void))sub_23FC84E40);
  sub_23FCCCAA8(v2);
  if (v11)
  {
    sub_23FBFEF74(v2, &qword_256F61438);
    sub_23FCCCA48();
    sub_23FC1E5B4();
    swift_willThrowTypedImpl();
    v9 = 0;
    goto LABEL_6;
  }
  sub_23FCCC9FC();
  sub_23FCCCA48();
  sub_23FC58D90();
  sub_23FC98270(v3);
LABEL_7:
  sub_23FC0A094();
}

uint64_t sub_23FCC45F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  sub_23FBFD684(&qword_256F61438);
  v3[18] = sub_23FC0901C();
  v3[19] = sub_23FCCC930();
  v3[20] = sub_23FC0901C();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v3[21] = qword_256F7F480;
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  v3[22] = v4;
  sub_23FC58D78();
  v3[23] = sub_23FCCCBF4();
  v3[24] = v5;
  return sub_23FC5A19C();
}

uint64_t sub_23FCC46C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  _BYTE *v19;
  __int128 v20;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  sub_23FC59120();
  sub_23FCC3B88(v4, *(_QWORD *)(v3 + 16), (void (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo, (void (*)(void))sub_23FC84E40);
  v5 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v1);
  v6 = *(_QWORD *)(v0 + 144);
  if (v5 == 1)
  {
    sub_23FBFEF74(v6, &qword_256F61438);
    swift_endAccess();
    sub_23FC101F4();
    sub_23FC1E5B4();
    sub_23FC5A704();
    *v7 = 0;
    sub_23FCB3298();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 136);
    sub_23FBFEEB0(v6, *(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    swift_endAccess();
    sub_23FC59120();
    if (*(_QWORD *)(*(_QWORD *)(v8 + 24) + 16))
    {
      sub_23FC84E34(*(_QWORD *)(v0 + 160));
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(v0 + 160);
        sub_23FCCC57C();
        v20 = *(_OWORD *)(v0 + 128);
        v13 = v11[1];
        v12 = v11[2];
        v14 = *v11;
        *(_QWORD *)(v0 + 64) = *((_QWORD *)v11 + 6);
        *(_OWORD *)(v0 + 32) = v13;
        *(_OWORD *)(v0 + 48) = v12;
        *(_OWORD *)(v0 + 16) = v14;
        swift_endAccess();
        *(_QWORD *)(v0 + 200) = qword_256F7F480;
        v15 = swift_task_alloc();
        *(_QWORD *)(v0 + 208) = v15;
        *(_QWORD *)(v15 + 16) = v10;
        *(_OWORD *)(v15 + 24) = v20;
        *(_QWORD *)(v15 + 40) = v0 + 16;
        sub_23FCCC99C();
        sub_23FC58D78();
        v16 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 216) = v16;
        *v16 = v0;
        v16[1] = sub_23FCC490C;
        return sub_23FD75284();
      }
    }
    v18 = *(_QWORD *)(v0 + 160);
    swift_endAccess();
    sub_23FC58AC8();
    sub_23FC1E5B4();
    sub_23FC5A704();
    *v19 = 2;
    sub_23FCB3298();
    sub_23FBFEF18(v18, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  }
  sub_23FCCCD70();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCC490C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  swift_release();
  sub_23FC090C0();
  return sub_23FC5A19C();
}

uint64_t sub_23FCC4974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = *(_QWORD *)(v0 + 160);
  sub_23FCCB4F0(v0 + 16);
  sub_23FC58AC8();
  sub_23FBFEF18(v1, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  sub_23FC090C0();
  sub_23FC5A574();
  v2 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75B5C(v2);
}

uint64_t sub_23FCC49C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  sub_23FCCB4F0(v0 + 16);
  sub_23FC58AC8();
  sub_23FBFEF18(v1, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  sub_23FCCCD70();
  sub_23FC090C0();
  return sub_23FC5D398(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FCC4A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23FBFD684(&qword_256F61438);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SessionSwitchboard.SessionInfo();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v12) == 1)
  {
    sub_23FBFEF74(a1, &qword_256F61438);
    sub_23FD69F8C();
    sub_23FBFEF18(a2, type metadata accessor for SessionID);
    sub_23FBFEF74((uint64_t)v7, &qword_256F61438);
  }
  else
  {
    sub_23FBFEEB0(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    sub_23FD67E20((uint64_t)v11, a2);
    sub_23FBFEF18(a2, type metadata accessor for SessionID);
  }
}

uint64_t sub_23FCC4B38(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 1) != 0)
    sub_23FD6A124(a3, a4);
  else
    sub_23FD67E80();
  return swift_bridgeObjectRelease();
}

void sub_23FCC4B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;

  sub_23FBFD684(&qword_256F5E430);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC10370();
  type metadata accessor for SessionCoordinatorInjectionRequest(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  sub_23FC100EC(a1, 1, v9);
  if (v10)
  {
    v11 = sub_23FCCC9F0();
    sub_23FBFEF74(v11, v12);
    sub_23FD6A050();
    v13 = sub_23FBFF104();
    sub_23FBFF0E4(v13);
    v14 = sub_23FC5A8DC();
    sub_23FBFEF74(v14, v15);
  }
  else
  {
    v16 = sub_23FCCC9F0();
    sub_23FBFEEB0(v16, v17, v18);
    sub_23FD67E2C(v2, a2);
    v19 = sub_23FBFF104();
    sub_23FBFF0E4(v19);
  }
}

void sub_23FCC4C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FBFD684(&qword_256F5EB08);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC0603C();
  v5 = sub_23FD73C28();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_23FBFF180();
  v10 = v9 - v8;
  sub_23FC100EC(a1, 1, v5);
  if (v11)
  {
    sub_23FBFEF74(a1, &qword_256F5EB08);
    v12 = sub_23FCBCD7C();
    sub_23FD6A1FC(v12, v13);
    sub_23FC15A24();
    sub_23FBFEF74(v1, &qword_256F5EB08);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10, a1, v5);
    sub_23FD67EB8();
    sub_23FC15A24();
  }
  sub_23FC6264C();
}

void sub_23FCC4D40()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;

  sub_23FCCCC80();
  sub_23FBFD684(&qword_256F61438);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FCCC6F0();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC10388();
  sub_23FCCA50C();
  if (v4)
  {
    v9 = v12;
LABEL_6:
    *v0 = v9;
    goto LABEL_7;
  }
  v10 = sub_23FCCC464();
  sub_23FCCCBD8(v10, *(_QWORD *)(v1 + 16), (void (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo, (void (*)(void))sub_23FC84E40);
  sub_23FCCCAA8(v2);
  if (v11)
  {
    sub_23FBFEF74(v2, &qword_256F61438);
    sub_23FCCCA48();
    sub_23FC1E5B4();
    swift_willThrowTypedImpl();
    v9 = 0;
    goto LABEL_6;
  }
  sub_23FCCC9FC();
  sub_23FCCCA48();
  sub_23FC58D90();
  sub_23FC98270(v3);
LABEL_7:
  sub_23FC0A094();
}

void sub_23FCC4E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFF180();
  v9 = v8 - v7;
  sub_23FCCCCD4(a1);
  v10 = sub_23FC5DC5C();
  sub_23FC100EC(v9, 1, v10);
  if (v11)
  {
    sub_23FBFEF74(v9, &qword_254346A28);
  }
  else
  {
    sub_23FD74DE0();
    v12 = sub_23FC5F300();
    v13(v12, v10);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23FD74D80();
    swift_unknownObjectRelease();
  }
  swift_task_create();
  swift_release();
  sub_23FC6264C();
}

uint64_t sub_23FCC4FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = type metadata accessor for SessionCoordinatorCommand(0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_23FBFD684(&qword_256F5E2A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_23FBFD684(&qword_256F5E2B8);
  sub_23FD74E1C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_23FCC50A4()
{
  uint64_t v0;

  type metadata accessor for SessionSwitchboard();
  v0 = swift_allocObject();
  sub_23FCC50D8();
  qword_256F7F4B8 = v0;
  sub_23FBFF0A0();
}

uint64_t sub_23FCC50D8()
{
  uint64_t v0;

  sub_23FCCCD84();
  sub_23FCCC930();
  sub_23FBFEE2C(&qword_256F614C0, type metadata accessor for SessionID, (uint64_t)&protocol conformance descriptor for SessionID);
  sub_23FCBCD7C();
  *(_QWORD *)(v0 + 16) = sub_23FD74B40();
  sub_23FC5EA38();
  sub_23FBFEE2C(&qword_256F614C8, type metadata accessor for SessionClientID, (uint64_t)&unk_23FD79510);
  sub_23FCBCD7C();
  *(_QWORD *)(v0 + 24) = sub_23FD74B40();
  return v0;
}

void sub_23FCC5184(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];
  char v39;
  uint64_t v40;
  uint64_t v41;

  sub_23FC5EA38();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC8D7D0();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v32 - v13;
  v15 = sub_23FC10100();
  v35 = *(_QWORD *)(v15 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC10370();
  v18 = *a3;
  v19 = a3[1];
  v20 = a3[2];
  v21 = a3[3];
  v38[0] = v18;
  v38[1] = v19;
  v38[2] = v20;
  v38[3] = v21;
  v39 = a4;
  v40 = MEMORY[0x24BEE4AF8];
  v41 = a2;
  sub_23FC59120();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23FC5B578();
  sub_23FD67EF0((uint64_t)v38, a1);
  swift_endAccess();
  sub_23FC59F80();
  sub_23FBFEF40(a1, (uint64_t)v14, type metadata accessor for SessionClientID);
  v22 = sub_23FC5A14C();
  v23 = sub_23FD74F6C();
  if (sub_23FC766F8(v22))
  {
    v34 = v15;
    v24 = (uint8_t *)sub_23FCCCD5C();
    v33 = sub_23FCCC5F0();
    v37 = v33;
    *(_DWORD *)v24 = 136315138;
    v32[1] = v24 + 4;
    v25 = sub_23FCCC9F0();
    sub_23FCCCA1C(v25, v26);
    sub_23FD71438();
    sub_23FCCCB48(v4);
    v27 = sub_23FC5E880();
    v36 = sub_23FC9DC40(v27, v28, v29);
    sub_23FD75044();
    sub_23FC15A24();
    sub_23FCCCB48((uint64_t)v14);
    sub_23FBFF114(&dword_23FBF8000, v22, v23, "SessionClient %s registered.", v24);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FBFEF18((uint64_t)v14, type metadata accessor for SessionClientID);

  v30 = sub_23FCBCD7C();
  v31(v30);
  sub_23FC060D4();
}

uint64_t sub_23FCC53B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[12] = a1;
  v2[13] = v1;
  sub_23FC5EA38();
  v2[14] = sub_23FC59BAC();
  v2[15] = sub_23FC59C3C();
  v3 = sub_23FC10100();
  v2[16] = v3;
  v2[17] = *(_QWORD *)(v3 - 8);
  v2[18] = sub_23FC0901C();
  v4 = sub_23FD71AEC();
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = sub_23FC0901C();
  v5 = sub_23FBFF104();
  v2[22] = v5;
  v2[23] = *(_QWORD *)(v5 - 8);
  v2[24] = sub_23FC0901C();
  v6 = sub_23FD71E34();
  v2[25] = v6;
  v2[26] = *(_QWORD *)(v6 - 8);
  v2[27] = sub_23FC0901C();
  v2[28] = *(_QWORD *)(sub_23FCCCD84() - 8);
  v2[29] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F614D8);
  v2[30] = sub_23FC59BAC();
  v2[31] = sub_23FC59C3C();
  v7 = sub_23FCCC930();
  v2[32] = v7;
  v2[33] = *(_QWORD *)(v7 - 8);
  v2[34] = sub_23FC59BAC();
  v2[35] = sub_23FC59C3C();
  v2[36] = sub_23FC59C3C();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v2[37] = qword_256F7F480;
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FC58D78();
  v2[38] = sub_23FCCCBF4();
  v2[39] = v8;
  return sub_23FC5A19C();
}

void sub_23FCC5534()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(_QWORD);
  uint64_t v76;
  uint64_t (*v77)(_QWORD);
  _QWORD *v78;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;

  sub_23FC59120();
  sub_23FD6A2E4();
  swift_endAccess();
  *(_QWORD *)(v0 + 320) = v81;
  v1 = v82;
  *(_OWORD *)(v0 + 328) = v82;
  *(_QWORD *)(v0 + 344) = v83;
  v2 = v84;
  *(_OWORD *)(v0 + 352) = v84;
  *(_QWORD *)(v0 + 368) = v85;
  if (!v1 || (v2 & 1) == 0)
  {
LABEL_30:
    v26 = *(_QWORD *)(v0 + 104);
    sub_23FC59120();
    sub_23FCCC5C4(*(_QWORD *)(v26 + 16));
    v29 = v27 & v28;
    *(_DWORD *)(v0 + 448) = *MEMORY[0x24BE52D30];
    swift_bridgeObjectRetain();
    v30 = 0;
    if (!v29)
      goto LABEL_33;
LABEL_31:
    v31 = __clz(__rbit64(v29));
    v29 &= v29 - 1;
    v32 = v31 | (v30 << 6);
    v33 = *(_QWORD *)(v0 + 408);
LABEL_32:
    v34 = *(_QWORD *)(v0 + 264);
    v35 = *(_QWORD *)(v0 + 240);
    sub_23FBFEF40(*(_QWORD *)(v33 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 224) + 72) * v32, v35, type metadata accessor for SessionID);
    v36 = *(_QWORD *)(v33 + 56) + *(_QWORD *)(v34 + 72) * v32;
    v37 = sub_23FC6087C();
    sub_23FBFEF40(v36, v35 + *(int *)(v37 + 48), (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    sub_23FC7A680();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v38, v39, v40, v37);
    while (1)
    {
      *(_QWORD *)(v0 + 416) = v30;
      *(_QWORD *)(v0 + 424) = v29;
      v50 = *(_QWORD *)(v0 + 248);
      sub_23FBFEEEC(*(_QWORD *)(v0 + 240), v50, &qword_256F614D8);
      v51 = sub_23FC6087C();
      sub_23FC100EC(v50, 1, v51);
      if (v52)
      {
        v60 = *(_QWORD *)(v0 + 120);
        v61 = *(_QWORD *)(v0 + 96);
        swift_release();
        sub_23FC58AC8();
        sub_23FC59F80();
        sub_23FBFEF40(v61, v60, type metadata accessor for SessionClientID);
        v62 = sub_23FC5A14C();
        v63 = sub_23FD74F6C();
        v64 = os_log_type_enabled(v62, v63);
        v66 = *(_QWORD *)(v0 + 136);
        v65 = *(_QWORD *)(v0 + 144);
        v67 = *(_QWORD *)(v0 + 120);
        v68 = *(_QWORD *)(v0 + 128);
        if (v64)
        {
          v69 = *(_QWORD *)(v0 + 112);
          sub_23FCCC8EC();
          v70 = (uint8_t *)swift_slowAlloc();
          v81 = sub_23FCCC5F0();
          *(_DWORD *)v70 = 136315138;
          sub_23FBFEF40(v67, v69, type metadata accessor for SessionClientID);
          v71 = sub_23FD71438();
          v73 = v72;
          v74 = sub_23FC5E880();
          sub_23FBFEF18(v74, v75);
          *(_QWORD *)(v0 + 88) = sub_23FC9DC40(v71, v73, &v81);
          sub_23FD75044();
          swift_bridgeObjectRelease();
          v76 = sub_23FCBCD7C();
          sub_23FBFEF18(v76, v77);
          sub_23FBFF114(&dword_23FBF8000, v62, v63, "SessionClient %s deregistered.", v70);
          sub_23FBFF10C();
          sub_23FBFEFA0();
        }
        sub_23FCCCAD8(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 320));
        sub_23FBFEF18(v67, type metadata accessor for SessionClientID);

        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v68);
        swift_task_dealloc();
        sub_23FC090D0();
        sub_23FC090C0();
        sub_23FC5A574();
        sub_23FC5AB04();
        sub_23FC5AC3C();
        sub_23FC5B2D4();
        sub_23FC5B2F4();
        sub_23FC5B980();
        sub_23FC5BCA0();
        sub_23FC5BFE0();
        swift_task_dealloc();
        sub_23FC75E08();
        __asm { BR              X0 }
      }
      v53 = *(_QWORD *)(v0 + 272);
      v54 = *(_QWORD *)(v0 + 248);
      v55 = v54 + *(int *)(v51 + 48);
      sub_23FBFEEB0(v54, *(_QWORD *)(v0 + 232), type metadata accessor for SessionID);
      sub_23FBFEEB0(v55, v53, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
      if ((sub_23FD71450() & 1) != 0)
      {
        sub_23FCCC398();
        sub_23FC58D68();
        sub_23FCCCC64();
        sub_23FCCC58C();
        sub_23FCCC51C();
        v78 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 440) = v78;
        *v78 = v0;
        v78[1] = sub_23FCC615C;
        sub_23FC75E08();
        __asm { BR              X1 }
      }
      sub_23FBFEF18(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
      v56 = sub_23FC5A8DC();
      sub_23FBFEF18(v56, v57);
      if (v29)
        goto LABEL_31;
LABEL_33:
      if (__OFADD__(v30, 1))
        break;
      sub_23FCCC614();
      if (v15 != v16)
      {
        v33 = *(_QWORD *)(v0 + 408);
        v43 = v33 + 64;
        v44 = *(_QWORD *)(v33 + 64 + 8 * v41);
        if (v44)
          goto LABEL_37;
        v58 = v42 >> 6;
        v45 = v41;
        if (v41 + 1 < v58)
        {
          v44 = *(_QWORD *)(v43 + 8 * (v41 + 1));
          if (v44)
          {
            ++v41;
LABEL_37:
            v29 = (v44 - 1) & v44;
            v32 = __clz(__rbit64(v44)) + (v41 << 6);
            v30 = v41;
            goto LABEL_32;
          }
          v59 = v41 + 2;
          v45 = v41 + 1;
          if (v41 + 2 < v58)
          {
            v44 = *(_QWORD *)(v43 + 8 * v59);
            if (v44)
            {
              v41 += 2;
              goto LABEL_37;
            }
            v41 += 3;
            v45 = v59;
            if (v41 < v58)
            {
              v44 = *(_QWORD *)(v43 + 8 * v41);
              if (v44)
                goto LABEL_37;
              while (v30 + 5 < v58)
              {
                v44 = *(_QWORD *)(v33 + 104 + 8 * v30++);
                if (v44)
                {
                  v41 = v30 + 4;
                  goto LABEL_37;
                }
              }
              v45 = v58 - 1;
            }
          }
        }
      }
      else
      {
        v45 = v30;
      }
      sub_23FC6087C();
      v46 = sub_23FCCC740();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v46, v47, v48, v49);
      v29 = 0;
      v30 = v45;
    }
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v3 = *(_QWORD *)(v0 + 104);
  sub_23FC59120();
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 376) = v4;
  v5 = *(_BYTE *)(v4 + 32);
  *(_BYTE *)(v0 + 452) = v5;
  v6 = 1 << v5;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  v9 = 0;
  if (!v8)
    goto LABEL_8;
LABEL_7:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v11 = v10 | (v9 << 6);
  v12 = *(_QWORD *)(v0 + 376);
  while (1)
  {
    *(_QWORD *)(v0 + 384) = v8;
    *(_QWORD *)(v0 + 392) = v9;
    v21 = *(_QWORD *)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 256);
    sub_23FBFEF40(*(_QWORD *)(v12 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 264) + 72) * v11, *(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    v23 = sub_23FC5A8DC();
    sub_23FBFEEB0(v23, v24, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    v25 = *(_QWORD *)(v0 + 280);
    if ((*(_BYTE *)(v21 + *(int *)(v22 + 24)) & 1) != 0)
    {
      sub_23FCCCCAC(v25);
      sub_23FC75E08();
      swift_task_switch();
      return;
    }
    sub_23FC98270(v25);
    if (v8)
      goto LABEL_7;
LABEL_8:
    if (__OFADD__(v9, 1))
      goto LABEL_60;
    v12 = sub_23FCCCA80();
    if (v15 == v16)
    {
LABEL_29:
      swift_release();
      goto LABEL_30;
    }
    v17 = v12 + 64;
    v18 = *(_QWORD *)(v12 + 64 + 8 * v14);
    v9 = v14;
    if (!v18)
    {
      v19 = v13 >> 6;
      v9 = v14 + 1;
      if (v14 + 1 >= v19)
        goto LABEL_29;
      v18 = *(_QWORD *)(v17 + 8 * v9);
      if (!v18)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v19)
          goto LABEL_29;
        v18 = *(_QWORD *)(v17 + 8 * v9);
        if (!v18)
        {
          v9 = v14 + 3;
          if (v14 + 3 >= v19)
            goto LABEL_29;
          v18 = *(_QWORD *)(v17 + 8 * v9);
          if (!v18)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v9 << 6);
  }
  v20 = v14 + 4;
  if (v20 >= v19)
    goto LABEL_29;
  v18 = *(_QWORD *)(v17 + 8 * v20);
  if (v18)
  {
    v9 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v19)
      goto LABEL_29;
    v18 = *(_QWORD *)(v17 + 8 * v9);
    ++v20;
    if (v18)
      goto LABEL_24;
  }
LABEL_61:
  __break(1u);
}

uint64_t sub_23FCC5C30()
{
  sub_23FCC4FBC();
  return sub_23FC0907C();
}

void sub_23FCC5C60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;

  sub_23FCCC9E0(*(_QWORD *)(v0 + 280));
  v2 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 392);
  if (!v2)
    goto LABEL_3;
LABEL_2:
  v3 = __clz(__rbit64(v2));
  v2 &= v2 - 1;
  v4 = v3 | (v1 << 6);
  v5 = *(_QWORD *)(v0 + 376);
  while (1)
  {
    *(_QWORD *)(v0 + 384) = v2;
    *(_QWORD *)(v0 + 392) = v1;
    v15 = *(_QWORD *)(v0 + 280);
    v14 = *(_QWORD *)(v0 + 288);
    v16 = *(_QWORD *)(v0 + 256);
    sub_23FCCCD50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 264) + 72) * v4);
    sub_23FBFEEB0(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    v17 = *(_QWORD *)(v0 + 280);
    if ((*(_BYTE *)(v15 + *(int *)(v16 + 24)) & 1) != 0)
    {
      sub_23FCCCCAC(v17);
      swift_task_switch();
      return;
    }
    sub_23FCCC9E0(v17);
    if (v2)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      return;
    }
    v5 = sub_23FCCCA80();
    if (v8 == v9)
      goto LABEL_24;
    v10 = v5 + 64;
    v11 = *(_QWORD *)(v5 + 64 + 8 * v7);
    v1 = v7;
    if (!v11)
    {
      v12 = v6 >> 6;
      v1 = v7 + 1;
      if (v7 + 1 >= v12)
        goto LABEL_24;
      v11 = *(_QWORD *)(v10 + 8 * v1);
      if (!v11)
      {
        v1 = v7 + 2;
        if (v7 + 2 >= v12)
          goto LABEL_24;
        v11 = *(_QWORD *)(v10 + 8 * v1);
        if (!v11)
        {
          v1 = v7 + 3;
          if (v7 + 3 >= v12)
            goto LABEL_24;
          v11 = *(_QWORD *)(v10 + 8 * v1);
          if (!v11)
            break;
        }
      }
    }
LABEL_19:
    v2 = (v11 - 1) & v11;
    v4 = __clz(__rbit64(v11)) + (v1 << 6);
  }
  v13 = v7 + 4;
  if (v13 < v12)
  {
    v11 = *(_QWORD *)(v10 + 8 * v13);
    if (!v11)
    {
      while (1)
      {
        v1 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_54;
        if (v1 >= v12)
          goto LABEL_24;
        v11 = *(_QWORD *)(v10 + 8 * v1);
        ++v13;
        if (v11)
          goto LABEL_19;
      }
    }
    v1 = v13;
    goto LABEL_19;
  }
LABEL_24:
  swift_release();
  v18 = *(_QWORD *)(v0 + 104);
  sub_23FC59120();
  sub_23FCCC5C4(*(_QWORD *)(v18 + 16));
  v21 = v19 & v20;
  *(_DWORD *)(v0 + 448) = *MEMORY[0x24BE52D30];
  swift_bridgeObjectRetain();
  v22 = 0;
  if (!v21)
    goto LABEL_27;
LABEL_25:
  sub_23FCCC8A0();
LABEL_26:
  sub_23FCCC5A0();
  sub_23FC6087C();
  v23 = sub_23FCCCC20();
  sub_23FBFEF40(v23, v24, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  sub_23FCCC8D8();
  while (1)
  {
    *(_QWORD *)(v0 + 416) = v22;
    *(_QWORD *)(v0 + 424) = v21;
    v28 = *(_QWORD *)(v0 + 248);
    sub_23FBFEEEC(*(_QWORD *)(v0 + 240), v28, &qword_256F614D8);
    v29 = sub_23FC6087C();
    sub_23FC100EC(v28, 1, v29);
    if (v30)
      break;
    sub_23FCCC664();
    sub_23FBFEEB0(v29, v28, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    if ((sub_23FCCCBB8() & 1) != 0)
    {
      sub_23FCCC398();
      sub_23FC58D68();
      sub_23FCCCC64();
      sub_23FCCC58C();
      sub_23FCCC51C();
      v48 = (_QWORD *)sub_23FC76160(&dword_256F5E298);
      *(_QWORD *)(v0 + 440) = v48;
      v49 = sub_23FCCC8BC(v48, (uint64_t)sub_23FCC615C);
      sub_23FCCC560(v49, v50);
      return;
    }
    sub_23FBFEF18(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    sub_23FCCC71C();
    if (v21)
      goto LABEL_25;
LABEL_27:
    if (__OFADD__(v22, 1))
      goto LABEL_53;
    sub_23FCCC614();
    if (v8 != v9)
    {
      v26 = *(_QWORD *)(v0 + 408);
      if (*(_QWORD *)(v26 + 64 + 8 * v25))
        goto LABEL_31;
      sub_23FCCCCFC();
      if (v8 != v9)
      {
        if (*(_QWORD *)(v33 + 8 * v34))
          goto LABEL_31;
        if (v31 + 2 < v32)
        {
          if (*(_QWORD *)(v33 + 8 * (v31 + 2)))
            goto LABEL_31;
          v35 = v31 + 3;
          if (v35 < v32)
          {
            if (*(_QWORD *)(v33 + 8 * v35))
            {
LABEL_31:
              sub_23FCCC85C();
              goto LABEL_26;
            }
            while (v22 + 5 < v32)
            {
              if (*(_QWORD *)(v26 + 104 + 8 * v22++))
                goto LABEL_31;
            }
          }
        }
      }
    }
    v27 = sub_23FC6087C();
    sub_23FCCCA58(v27);
  }
  sub_23FCCC790();
  sub_23FC58AC8();
  v37 = sub_23FD724C4();
  sub_23FCCCB14(v37, v38, type metadata accessor for SessionClientID);
  v39 = sub_23FD72BE4();
  v40 = sub_23FD74F6C();
  sub_23FC766F8(v39);
  sub_23FCCC840();
  if (v43)
  {
    sub_23FCCC8EC();
    v44 = (uint8_t *)swift_slowAlloc();
    v53 = sub_23FCCC5F0();
    *(_DWORD *)v44 = 136315138;
    sub_23FCCCB34(v53, v45, type metadata accessor for SessionClientID);
    sub_23FD71438();
    v46 = sub_23FCCC974();
    sub_23FC98270(v46);
    v47 = sub_23FCCCA24();
    sub_23FCCC768(v47);
    swift_bridgeObjectRelease();
    sub_23FC98270(v22);
    sub_23FBFF114(&dword_23FBF8000, v39, v40, "SessionClient %s deregistered.", v44);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FCCCAD8(v41, v42);
  sub_23FBFEF18(v22, type metadata accessor for SessionClientID);

  v51 = sub_23FC5E880();
  v52(v51);
  sub_23FCCC4A8();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5BFE0();
  swift_task_dealloc();
  sub_23FCCC544(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCC615C()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v4;

  v4 = *v0;
  sub_23FC5AEA0(&v4);
  sub_23FC101F4();
  swift_bridgeObjectRelease();
  v1 = sub_23FC5A8DC();
  v2(v1);
  return swift_task_switch();
}

void sub_23FCC61D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;

  sub_23FC98270(*(_QWORD *)(v0 + 272));
  sub_23FCCC71C();
  v2 = *(_QWORD *)(v0 + 416);
  v1 = *(_QWORD *)(v0 + 424);
  if (!v1)
    goto LABEL_4;
LABEL_2:
  sub_23FCCC8A0();
LABEL_3:
  sub_23FCCC5A0();
  sub_23FCB31A0();
  v3 = sub_23FCCCC20();
  sub_23FBFEF40(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  sub_23FCCC8D8();
  while (1)
  {
    *(_QWORD *)(v0 + 416) = v2;
    *(_QWORD *)(v0 + 424) = v1;
    v10 = *(_QWORD *)(v0 + 248);
    sub_23FBFEEEC(*(_QWORD *)(v0 + 240), v10, &qword_256F614D8);
    v11 = sub_23FCB31A0();
    sub_23FC100EC(v10, 1, v11);
    if (v12)
      break;
    sub_23FCCC664();
    sub_23FBFEEB0(v11, v10, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    if ((sub_23FCCCBB8() & 1) != 0)
    {
      sub_23FCCC398();
      sub_23FC58D68();
      sub_23FCCCC64();
      sub_23FCCC58C();
      sub_23FCCC51C();
      v30 = (_QWORD *)sub_23FC76160(&dword_256F5E298);
      *(_QWORD *)(v0 + 440) = v30;
      v31 = sub_23FCCC8BC(v30, (uint64_t)sub_23FCC615C);
      sub_23FCCC560(v31, v32);
      return;
    }
    sub_23FC98270(*(_QWORD *)(v0 + 272));
    sub_23FCCC71C();
    if (v1)
      goto LABEL_2;
LABEL_4:
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      return;
    }
    sub_23FCCC614();
    if (v6 != v7)
    {
      v8 = *(_QWORD *)(v0 + 408);
      if (*(_QWORD *)(v8 + 64 + 8 * v5))
        goto LABEL_8;
      sub_23FCCCCFC();
      if (v6 != v7)
      {
        if (*(_QWORD *)(v15 + 8 * v16))
          goto LABEL_8;
        if (v13 + 2 < v14)
        {
          if (*(_QWORD *)(v15 + 8 * (v13 + 2)))
            goto LABEL_8;
          v17 = v13 + 3;
          if (v17 < v14)
          {
            if (*(_QWORD *)(v15 + 8 * v17))
            {
LABEL_8:
              sub_23FCCC85C();
              goto LABEL_3;
            }
            while (v2 + 5 < v14)
            {
              if (*(_QWORD *)(v8 + 104 + 8 * v2++))
                goto LABEL_8;
            }
          }
        }
      }
    }
    v9 = sub_23FCB31A0();
    sub_23FCCCA58(v9);
  }
  sub_23FCCC790();
  sub_23FC58AC8();
  v19 = sub_23FD724C4();
  sub_23FCCCB14(v19, v20, type metadata accessor for SessionClientID);
  v21 = sub_23FD72BE4();
  v22 = sub_23FD74F6C();
  sub_23FC766F8(v21);
  sub_23FCCC840();
  if (v25)
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v35 = sub_23FCCC5F0();
    *(_DWORD *)v26 = 136315138;
    sub_23FCCCB34(v35, v27, type metadata accessor for SessionClientID);
    sub_23FD71438();
    v28 = sub_23FCCC974();
    sub_23FC98270(v28);
    v29 = sub_23FCCCA24();
    sub_23FCCC768(v29);
    swift_bridgeObjectRelease();
    sub_23FC98270(v2);
    sub_23FBFF114(&dword_23FBF8000, v21, v22, "SessionClient %s deregistered.", v26);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FCCCAD8(v23, v24);
  sub_23FBFEF18(v2, type metadata accessor for SessionClientID);

  v33 = sub_23FC5E880();
  v34(v33);
  sub_23FCCC4A8();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5BFE0();
  swift_task_dealloc();
  sub_23FCCC544(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FCC6560()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  char *v79;
  char v80;
  NSObject *v81;
  char v82;
  uint64_t v83;
  char *v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  uint64_t v95;
  BOOL v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  uint64_t v104;
  int v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  NSObject *v146;
  os_log_type_t v147;
  uint64_t v148;
  uint8_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t (*v159)(_QWORD);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  NSObject *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  NSObject *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184[4];

  sub_23FCC2A5C();
  v179 = v5;
  v172 = v1;
  v182 = v7;
  v183 = v6;
  type metadata accessor for SessionID(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFCC();
  v177 = (char *)v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC0FFF4();
  v171 = v13;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC0FFF4();
  v170 = v16;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v17, v18);
  v174 = (uint64_t)&v164 - v19;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFF218();
  v168 = v22;
  sub_23FC5EA38();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v23, v24);
  v175 = (char *)&v164 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v26, v27);
  v178 = ((char *)&v164 - v28);
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FC0FFF4();
  v169 = v31;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FC0FFF4();
  v173 = v34;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&v164 - v37;
  v39 = sub_23FC10100();
  v180 = *(_QWORD *)(v39 - 8);
  v181 = v39;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FBFEFCC();
  v176 = v42;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v43, v44);
  sub_23FCCCC6C();
  MEMORY[0x24BDAC7A8](v45, v46);
  sub_23FCCC654();
  MEMORY[0x24BDAC7A8](v47, v48);
  v50 = (char *)&v164 - v49;
  sub_23FBFD684(&qword_256F61438);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FBFF180();
  v55 = (v54 - v53);
  type metadata accessor for SessionSwitchboard.SessionInfo();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v56, v57);
  sub_23FC061C0();
  sub_23FCCC464();
  v58 = v182;
  sub_23FCC3B88(v182, *(_QWORD *)(v0 + 16), (void (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo, (void (*)(void))sub_23FC84E40);
  sub_23FCCCAA8((uint64_t)v55);
  if (v96)
  {
    sub_23FBFEF74((uint64_t)v55, &qword_256F61438);
    sub_23FCCC7A8();
    v59 = v176;
    sub_23FD724C4();
    v60 = (uint64_t)v175;
    sub_23FCCCB40(v183, v61, type metadata accessor for SessionClientID);
    v62 = (uint64_t)v177;
    sub_23FBFEF40(v58, (uint64_t)v177, type metadata accessor for SessionID);
    sub_23FD72BE4();
    v63 = sub_23FC15A04();
    if (sub_23FCCC50C(v63))
    {
      v64 = sub_23FBFEFF4();
      v183 = sub_23FBFEFF4();
      v184[0] = v183;
      *(_DWORD *)v64 = 136315394;
      v65 = v173;
      v178 = v55;
      sub_23FBFEF40(v60, v173, type metadata accessor for SessionClientID);
      LODWORD(v182) = v59;
      v66 = sub_23FD71438();
      sub_23FC9825C(v65);
      v69 = sub_23FCCC924(v67, v68, v184);
      sub_23FCCC824(v69);
      sub_23FD75044();
      sub_23FC0AAF8();
      sub_23FC9825C(v60);
      *(_WORD *)(v64 + 12) = 2080;
      sub_23FCCCB64();
      sub_23FCCCD2C(v70, v71);
      v72 = sub_23FD71438();
      sub_23FC9825C(v66);
      v74 = sub_23FCCCA50(v72, v73, v184);
      sub_23FCCCB50(v74);
      sub_23FD75044();
      sub_23FC102FC();
      sub_23FC9825C(v62);
      sub_23FC59250(&dword_23FBF8000, v178, (os_log_type_t)v182, "SessionClient %s is not allowed to observe non-existent session %s.", (uint8_t *)v64);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    sub_23FBFEF18(v60, type metadata accessor for SessionClientID);
    sub_23FBFEF18(v62, type metadata accessor for SessionID);

    sub_23FCCC990();
    v78(v59);
    v79 = v179;
    LOBYTE(v184[0]) = 0;
    sub_23FC1E5B4();
    sub_23FCCC9E8();
    v80 = 0;
    goto LABEL_27;
  }
  v75 = v178;
  v167 = v2;
  v177 = v38;
  sub_23FBFEEB0((uint64_t)v55, v4, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  sub_23FCCC7A8();
  v76 = v183;
  v77 = sub_23FD71450();
  if ((v77 & 1) == 0)
  {
    v81 = (v0 + 24);
    sub_23FCCC464();
    if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) && (sub_23FC84E34(v76), (v82 & 1) != 0))
    {
      sub_23FCCC57C();
      v84 = *(char **)(v83 + 8);
      v165 = *(_QWORD *)(v83 + 16);
      v85 = *(NSObject **)(v83 + 24);
      LODWORD(v176) = *(unsigned __int8 *)(v83 + 32);
      v86 = *(_QWORD *)(v83 + 40);
      v87 = *(_QWORD *)(v83 + 48);
      sub_23FCCC7A8();
      sub_23FCCC464();
      v88 = *((_QWORD *)v81->isa + 2);
      v178 = v85;
      sub_23FC5C20C();
      v89 = v86;
      sub_23FC5AC34();
      sub_23FC58D70();
      v175 = v84;
      sub_23FC10110();
      if (v88)
      {
        sub_23FC84E34(v4);
        if ((v90 & 1) != 0)
        {
          v166 = v87;
          v171 = v86;
          sub_23FCCC57C();
          v93 = v91[1];
          v92 = v91[2];
          v94 = v91[3];
          v95 = v91[5];
          sub_23FCCC7A8();
          v170 = v93;
          if (v94)
          {
            if (v178)
            {
              v96 = v92 == v165 && v94 == v178;
              if (!v96)
              {
                v97 = sub_23FC76014() | v176;
                sub_23FCCCB04();
                sub_23FC5C20C();
                sub_23FC10110();
                v98 = sub_23FC58D70();
                if ((v97 & 1) != 0)
                  goto LABEL_36;
                goto LABEL_33;
              }
              sub_23FCCCB04();
              sub_23FC5C20C();
              sub_23FC10110();
              v98 = sub_23FC58D70();
              goto LABEL_36;
            }
            sub_23FC101D8();
            sub_23FCCCB04();
            sub_23FC10110();
            sub_23FC58D70();
          }
          else
          {
            sub_23FC5A09C();
            sub_23FC10110();
            v98 = sub_23FC58D78();
            if (!v178)
              goto LABEL_36;
          }
          v98 = sub_23FC15A24();
          if (!(_DWORD)v176)
          {
LABEL_33:
            v142 = (uint64_t)v50;
            sub_23FCCCA40();
            v143 = (uint64_t)v177;
            sub_23FBFEF40(v183, (uint64_t)v177, type metadata accessor for SessionClientID);
            v144 = v168;
            sub_23FCCCD48(v58, v145, type metadata accessor for SessionID);
            v146 = sub_23FD72BE4();
            v147 = sub_23FD74F54();
            if (sub_23FC75E24(v147))
            {
              v148 = sub_23FBFEFF4();
              v183 = v95;
              v149 = (uint8_t *)v148;
              v182 = sub_23FBFEFF4();
              v184[0] = v182;
              *(_DWORD *)v149 = 136315394;
              v176 = v4;
              v150 = v173;
              sub_23FCCCD48(v143, v151, type metadata accessor for SessionClientID);
              v172 = v146;
              v152 = sub_23FD71438();
              LODWORD(v169) = v58;
              v154 = v153;
              sub_23FC9825C(v150);
              v155 = sub_23FC9DC40(v152, v154, v184);
              sub_23FCCCBC4(v155);
              v173 = v142;
              sub_23FD75044();
              sub_23FC5A648();
              sub_23FC9825C(v143);
              sub_23FCCCB70();
              v156 = v168;
              sub_23FCCCB64();
              sub_23FBFEF40(v157, v158, v159);
              v160 = sub_23FD71438();
              sub_23FC98270(v152);
              v162 = sub_23FCCCA50(v160, v161, v184);
              sub_23FCCC780(v162);
              sub_23FD75044();
              swift_bridgeObjectRelease();
              sub_23FC98270(v156);
              sub_23FC59250(&dword_23FBF8000, v172, (os_log_type_t)v169, "SessionClient %s is not allowed to observe session %s.", v149);
              sub_23FC58F90();
              sub_23FBFEFA0();
            }
            sub_23FBFEF18(v143, type metadata accessor for SessionClientID);
            sub_23FBFEF18(v144, type metadata accessor for SessionID);

            (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v142, v181);
            v80 = 4;
            sub_23FCCCD68();
            sub_23FCCC9E8();
            swift_release();
            sub_23FC58D60();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23FCCC684();
            v163 = sub_23FC103E8();
            sub_23FC15A94(v163, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
            v79 = v179;
            goto LABEL_27;
          }
LABEL_36:
          sub_23FC15A94(v98, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23FCCC684();
          swift_release();
          sub_23FC58D60();
          sub_23FC15A24();
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      v121 = v87;
      sub_23FCCC7A8();
      v122 = v167;
      sub_23FC58FB0();
      v123 = v169;
      sub_23FCCCB40(v183, v124, type metadata accessor for SessionClientID);
      v125 = v170;
      sub_23FBFEF40(v58, v170, type metadata accessor for SessionID);
      v126 = sub_23FD72BE4();
      v127 = sub_23FD74F54();
      v128 = v127;
      if (os_log_type_enabled(v126, v127))
      {
        v129 = sub_23FBFEFF4();
        v183 = sub_23FBFEFF4();
        v184[0] = v183;
        *(_DWORD *)v129 = 136315394;
        LODWORD(v182) = v128;
        v171 = v89;
        sub_23FCCCD2C(v123, v173);
        v130 = sub_23FD71438();
        v166 = v121;
        v131 = sub_23FCCC6D4();
        sub_23FC9825C(v131);
        v133 = sub_23FC767A0(v130, v132, v184);
        sub_23FCCCBC4(v133);
        v176 = v4;
        sub_23FC5E498();
        sub_23FC5A56C();
        sub_23FC9825C(v123);
        *(_WORD *)(v129 + 12) = 2080;
        v134 = v170;
        sub_23FCCCB64();
        sub_23FBFEF40(v135, v136, type metadata accessor for SessionID);
        v137 = sub_23FD71438();
        v138 = sub_23FCCC6D4();
        sub_23FCCC9D8(v138);
        v140 = sub_23FC767A0(v137, v139, v184);
        sub_23FCCC7E8(v140);
        sub_23FC5E498();
        swift_bridgeObjectRelease();
        sub_23FCCC9D8(v134);
        sub_23FC59250(&dword_23FBF8000, v126, (os_log_type_t)v182, "SessionClient %s is not allowed to observe session %s because it has an unknown owning SessionClient.", (uint8_t *)v129);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      sub_23FBFEF18(v123, type metadata accessor for SessionClientID);
      sub_23FBFEF18(v125, type metadata accessor for SessionID);

      sub_23FCCC990();
      v141(v122);
      v79 = v179;
      v80 = 1;
      sub_23FCCCD68();
      sub_23FCCC9E8();
      sub_23FC58AC0();
      sub_23FC5A648();
      sub_23FCCC684();
      swift_bridgeObjectRelease();
      v120 = v4;
    }
    else
    {
      v176 = v4;
      sub_23FCCC7A8();
      v99 = v3;
      sub_23FD724C4();
      v100 = sub_23FCCC9F0();
      sub_23FBFEF40(v100, v101, v102);
      v103 = v58;
      v104 = v171;
      sub_23FBFEF40(v103, v171, type metadata accessor for SessionID);
      v105 = v3;
      sub_23FD72BE4();
      v106 = sub_23FC15A04();
      if (sub_23FCCC50C(v106))
      {
        v107 = (uint8_t *)sub_23FBFEFF4();
        v182 = sub_23FBFEFF4();
        v184[0] = v182;
        *(_DWORD *)v107 = 136315394;
        v108 = v173;
        sub_23FBFEF40((uint64_t)v75, v173, type metadata accessor for SessionClientID);
        LODWORD(v177) = v105;
        v109 = sub_23FD71438();
        v183 = v99;
        sub_23FCCC9AC(v108);
        v111 = sub_23FCCCD7C(v109, v110, v184);
        sub_23FCCC68C(v111);
        sub_23FC5A2A8();
        sub_23FCCC9AC((uint64_t)v178);
        sub_23FCCCB70();
        v112 = v104;
        v113 = v104;
        v114 = v174;
        sub_23FBFEF40(v112, v174, type metadata accessor for SessionID);
        v115 = sub_23FD71438();
        sub_23FCCC9AC(v114);
        v117 = sub_23FC767A0(v115, v116, v184);
        sub_23FCCC7E8(v117);
        sub_23FD75044();
        sub_23FC5A56C();
        sub_23FCCC9AC(v113);
        sub_23FC59250(&dword_23FBF8000, v81, (os_log_type_t)v177, "Unknown SessionClient %s is not allowed to observe session %s.", v107);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      sub_23FBFEF18((uint64_t)v75, type metadata accessor for SessionClientID);
      sub_23FBFEF18(v104, type metadata accessor for SessionID);

      sub_23FCCC990();
      v118(v3);
      v79 = v179;
      v119 = v176;
      v80 = 1;
      sub_23FCCCD68();
      sub_23FCCC9E8();
      v120 = v119;
    }
    sub_23FBFEF18(v120, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
LABEL_27:
    *v79 = v80;
    goto LABEL_28;
  }
  sub_23FC15A94(v77, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
LABEL_28:
  sub_23FC06000();
}

uint64_t sub_23FCC71F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];

  v2 = type metadata accessor for SessionID(0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v58 - v9;
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = (char *)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v58 - v16;
  v18 = sub_23FD72BF0();
  v60 = *(_QWORD *)(v18 - 8);
  v61 = v18;
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v58 - v25;
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)&v58 - v28;
  v30 = sub_23FBFD684(&qword_256F61438);
  MEMORY[0x24BDAC7A8](v30, v31);
  v33 = (char *)&v58 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_23FD69F8C();
  swift_endAccess();
  v34 = type metadata accessor for SessionSwitchboard.SessionInfo();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v33, 1, v34) == 1)
  {
    sub_23FBFEF74((uint64_t)v33, &qword_256F61438);
    sub_23FD724C4();
    sub_23FBFEF40(a1, (uint64_t)v6, type metadata accessor for SessionID);
    v35 = sub_23FD72BE4();
    v36 = sub_23FD74F60();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v63[0] = v59;
      *(_DWORD *)v37 = 136315138;
      v58 = v37 + 4;
      sub_23FBFEF40((uint64_t)v6, (uint64_t)v14, type metadata accessor for SessionID);
      v38 = sub_23FD71438();
      v40 = v39;
      sub_23FBFEF18((uint64_t)v14, type metadata accessor for SessionID);
      v62 = sub_23FC9DC40(v38, v40, v63);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18((uint64_t)v6, type metadata accessor for SessionID);
      _os_log_impl(&dword_23FBF8000, v35, v36, "SessionCoordinator %s could not be popped.", v37, 0xCu);
      v41 = v59;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v41, -1, -1);
      MEMORY[0x2426798D8](v37, -1, -1);
    }
    else
    {
      sub_23FBFEF18((uint64_t)v6, type metadata accessor for SessionID);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v22, v61);
  }
  else
  {
    swift_retain();
    sub_23FBFEF18((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    swift_release();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      sub_23FD724C4();
      sub_23FBFEF40(a1, (uint64_t)v10, type metadata accessor for SessionID);
      v43 = sub_23FD72BE4();
      v44 = sub_23FD74F6C();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v59 = swift_slowAlloc();
        v63[0] = v59;
        *(_DWORD *)v45 = 136315138;
        v58 = v45 + 4;
        sub_23FBFEF40((uint64_t)v10, (uint64_t)v14, type metadata accessor for SessionID);
        v46 = sub_23FD71438();
        v48 = v47;
        sub_23FBFEF18((uint64_t)v14, type metadata accessor for SessionID);
        v62 = sub_23FC9DC40(v46, v48, v63);
        sub_23FD75044();
        swift_bridgeObjectRelease();
        sub_23FBFEF18((uint64_t)v10, type metadata accessor for SessionID);
        _os_log_impl(&dword_23FBF8000, v43, v44, "SessionCoordinator %s removed. It was destroyed.", v45, 0xCu);
        v49 = v59;
        swift_arrayDestroy();
        MEMORY[0x2426798D8](v49, -1, -1);
        MEMORY[0x2426798D8](v45, -1, -1);
      }
      else
      {
        sub_23FBFEF18((uint64_t)v10, type metadata accessor for SessionID);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v26, v61);
    }
    else
    {
      sub_23FD724C4();
      sub_23FBFEF40(a1, (uint64_t)v17, type metadata accessor for SessionID);
      v51 = sub_23FD72BE4();
      v52 = sub_23FD74F54();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v59 = swift_slowAlloc();
        v63[0] = v59;
        *(_DWORD *)v53 = 136315138;
        v58 = v53 + 4;
        sub_23FBFEF40((uint64_t)v17, (uint64_t)v14, type metadata accessor for SessionID);
        v54 = sub_23FD71438();
        v56 = v55;
        sub_23FBFEF18((uint64_t)v14, type metadata accessor for SessionID);
        v62 = sub_23FC9DC40(v54, v56, v63);
        sub_23FD75044();
        swift_bridgeObjectRelease();
        sub_23FBFEF18((uint64_t)v17, type metadata accessor for SessionID);
        _os_log_impl(&dword_23FBF8000, v51, v52, "SessionCoordinator %s removed. The SessionCoordinator was held with non-exclusive ownership. Its destruction may be deferred.", v53, 0xCu);
        v57 = v59;
        swift_arrayDestroy();
        MEMORY[0x2426798D8](v57, -1, -1);
        MEMORY[0x2426798D8](v53, -1, -1);
      }
      else
      {
        sub_23FBFEF18((uint64_t)v17, type metadata accessor for SessionID);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v29, v61);
    }
  }
}

void (*sub_23FCC787C(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v5 = type metadata accessor for SessionClientID(0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_23FBFEF40(a2, (uint64_t)v6, type metadata accessor for SessionClientID);
  v4[5] = sub_23FCCB9A8(v4, (uint64_t)v6);
  return sub_23FCC7908;
}

void sub_23FCC7908(_QWORD *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  sub_23FBFEF18((uint64_t)v2, type metadata accessor for SessionClientID);
  free(v2);
  sub_23FCCC944(v1);
}

void sub_23FCC794C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57[4];
  uint64_t v58;

  sub_23FCC2A5C();
  v55 = (char *)v3;
  v5 = v4;
  v7 = v6;
  v8 = sub_23FC10100();
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFE0();
  v54 = v11;
  v12 = sub_23FC5EA38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_23FCCC654();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FCCCC6C();
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v48 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v48 - v23;
  v25 = v5;
  v26 = v7;
  sub_23FCC7CB0();
  if (v0)
  {
    sub_23FCCCD8C();
  }
  else
  {
    v49 = v13;
    v50 = 0;
    v28 = v25;
    v55 = v21;
    v56 = v1;
    v51 = v2;
    sub_23FCCCD48(v7, v27, type metadata accessor for SessionClientID);
    sub_23FCCC750();
    sub_23FCC787C(v57, (uint64_t)v24);
    if (*(_QWORD *)(v29 + 8))
    {
      v30 = v29;
      sub_23FD679B8();
      v31 = *(_QWORD *)(*(_QWORD *)(v30 + 40) + 16);
      sub_23FD67A24(v31);
      v32 = *(_QWORD *)(v30 + 40);
      *(_QWORD *)(v32 + 16) = v31 + 1;
      v33 = v32
          + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))
          + *(_QWORD *)(v49 + 72) * v31;
      v34 = v28;
      sub_23FBFEF40(v28, v33, type metadata accessor for SessionClientID);
      sub_23FCCCB8C();
      v35 = v54;
      v36 = v56;
    }
    else
    {
      sub_23FCCCB8C();
      v35 = v54;
      v36 = v56;
      v34 = v28;
    }
    sub_23FCCC534();
    sub_23FC98270((uint64_t)v24);
    sub_23FCCCA40();
    v37 = v34;
    v38 = (uint64_t)v55;
    sub_23FCCC53C(v37, (uint64_t)v55);
    v39 = v51;
    sub_23FCCC53C(v26, v51);
    v40 = sub_23FCCCD24();
    v41 = sub_23FD74F6C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = sub_23FBFEFF4();
      v56 = sub_23FBFEFF4();
      v57[0] = v56;
      *(_DWORD *)v42 = 136315394;
      sub_23FBFEF40(v38, v36, type metadata accessor for SessionClientID);
      v43 = sub_23FD71438();
      sub_23FCCC9D8(v36);
      v58 = sub_23FCCCD7C(v43, v44, v57);
      sub_23FCCCA0C();
      sub_23FC5A2A8();
      sub_23FCCC9D8(v38);
      *(_WORD *)(v42 + 12) = 2080;
      v45 = v51;
      sub_23FCCC9BC();
      sub_23FD71438();
      v46 = sub_23FCCC974();
      sub_23FC98270(v46);
      v58 = sub_23FCCCD7C(v38, v47, v57);
      sub_23FCCCA0C();
      sub_23FC5A2A8();
      sub_23FC98270(v45);
      sub_23FC59250(&dword_23FBF8000, v40, v41, "SessionClient %s registered to observe SessionClient %s.", (uint8_t *)v42);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    sub_23FC9825C(v38);
    sub_23FC9825C(v39);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v35, v53);
  }
  sub_23FC06000();
}

void sub_23FCC7CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  NSObject *v64;
  char v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(NSObject *, uint64_t);
  uint64_t v90;
  os_log_type_t v91;
  uint64_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121[3];

  sub_23FCC2A5C();
  v119 = v5;
  v120 = v4;
  v113 = v1;
  v7 = v6;
  sub_23FC5EA38();
  sub_23FBFF168();
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)v105 - v15;
  MEMORY[0x24BDAC7A8](v14, v17);
  v116 = (uint64_t)v105 - v18;
  sub_23FBFF064();
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)v105 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  sub_23FCCC654();
  MEMORY[0x24BDAC7A8](v25, v26);
  v114 = ((char *)v105 - v27);
  sub_23FBFF064();
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v38 = sub_23FCCC7D0(v30, v31, v32, v33, v34, v35, v36, v37, v105[0]);
  v117 = *(_QWORD *)(v38 - 8);
  v118 = v38;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v39, v40);
  sub_23FC5DB68();
  MEMORY[0x24BDAC7A8](v41, v42);
  sub_23FC0FFF4();
  v44 = v43;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v45, v46);
  sub_23FBFF218();
  v115 = v47;
  sub_23FCCC464();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
    sub_23FC84E34(v7);
    if ((v48 & 1) != 0)
    {
      v107 = v2;
      v108 = v7;
      sub_23FCCC57C();
      v50 = *(_QWORD *)(v49 + 8);
      v106 = *(_QWORD *)(v49 + 16);
      v51 = *(_QWORD *)(v49 + 24);
      v52 = *(unsigned __int8 *)(v49 + 32);
      v54 = *(_QWORD *)(v49 + 40);
      v53 = *(_QWORD *)(v49 + 48);
      sub_23FCCC534();
      sub_23FCCC464();
      v55 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
      v111 = v51;
      sub_23FC10110();
      v109 = v54;
      sub_23FC5B578();
      swift_retain();
      v110 = v50;
      swift_bridgeObjectRetain();
      if (!v55 || (sub_23FC84E34(v120), (v56 & 1) == 0))
      {
        sub_23FCCC534();
        sub_23FD724C4();
        sub_23FCCC53C(v108, (uint64_t)v23);
        v78 = v116;
        sub_23FCCC53C(v120, v116);
        sub_23FD72BE4();
        v79 = sub_23FC15A04();
        if (sub_23FCCC50C(v79))
        {
          v80 = sub_23FBFEFF4();
          v113 = v53;
          v81 = v80;
          v115 = sub_23FBFEFF4();
          v121[0] = v115;
          *(_DWORD *)v81 = 136315394;
          v120 = (uint64_t)v44;
          v82 = v107;
          sub_23FCCCB7C((uint64_t)v23, v107);
          LODWORD(v114) = (_DWORD)v44;
          sub_23FCCCBD0();
          sub_23FCCCB0C(v82);
          v85 = sub_23FCCC924(v83, v84, v121);
          sub_23FCCC824(v85);
          sub_23FD75044();
          sub_23FC0AAF8();
          sub_23FCCCB48((uint64_t)v23);
          *(_WORD *)(v81 + 12) = 2080;
          sub_23FBFEF40(v78, v82, type metadata accessor for SessionClientID);
          sub_23FCCCBD0();
          sub_23FCCCB48(v82);
          v88 = sub_23FCCC924(v86, v87, v121);
          sub_23FCCCB50(v88);
          sub_23FD75044();
          sub_23FC0AAF8();
          sub_23FCCCB48(v78);
          sub_23FC59250(&dword_23FBF8000, v44, (os_log_type_t)v114, "SessionClient %s is not allowed to observe unknown SessionClient %s.", (uint8_t *)v81);
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        sub_23FC98270((uint64_t)v23);
        sub_23FC98270(v78);

        sub_23FC7A708();
        v89(v44, v118);
        v77 = v119;
        v76 = 1;
        sub_23FCCCB84();
        sub_23FCCC7C8();
        sub_23FC58AC0();
        sub_23FCCC884();
        sub_23FCCC9A4();
        sub_23FCCC684();
        goto LABEL_20;
      }
      sub_23FCCC57C();
      v58 = v57[2];
      v59 = v57[3];
      v61 = v57[5];
      v60 = v57[6];
      v116 = v61;
      v105[1] = v60;
      sub_23FCCC534();
      if (v59)
      {
        v62 = v115;
        if (v111)
        {
          v63 = v58 == v106 && v59 == v111;
          v64 = v114;
          if (v63)
          {
            sub_23FC5AC34();
            sub_23FC10110();
            sub_23FCCCBE4();
            sub_23FC58D78();
LABEL_31:
            sub_23FC58AC0();
            sub_23FCCC884();
            sub_23FCCC684();
            sub_23FCCC9A4();
            swift_release();
            sub_23FCCCBEC();
            sub_23FC58D60();
            goto LABEL_33;
          }
          v65 = sub_23FC76014();
          sub_23FC5AC34();
          sub_23FC10110();
          sub_23FCCCBE4();
          sub_23FC58D78();
          if ((v65 & 1) != 0)
            goto LABEL_31;
          goto LABEL_26;
        }
        sub_23FC101D8();
      }
      else
      {
        v62 = v115;
        if (!v111)
        {
          sub_23FC58AC0();
          sub_23FCCC884();
          sub_23FCCC684();
          goto LABEL_33;
        }
      }
      v64 = v114;
      sub_23FC5AC34();
      sub_23FCCCBE4();
      sub_23FC58D78();
      swift_bridgeObjectRelease();
LABEL_26:
      if (v52)
      {
        sub_23FC58AC0();
        sub_23FCCC884();
        sub_23FCCC684();
        sub_23FCCC9A4();
        swift_release();
        sub_23FCCCBEC();
        sub_23FC5A2A8();
LABEL_33:
        sub_23FC5A2A8();
        goto LABEL_21;
      }
      v113 = v53;
      sub_23FCCCA40();
      v90 = v112;
      sub_23FCCC53C(v108, v112);
      sub_23FCCC53C(v120, (uint64_t)v64);
      sub_23FCCCD24();
      v91 = sub_23FC15A04();
      if (sub_23FCCC50C(v91))
      {
        v92 = sub_23FBFEFF4();
        v120 = v59;
        v93 = (uint8_t *)v92;
        v108 = sub_23FBFEFF4();
        v121[0] = v108;
        *(_DWORD *)v93 = 136315394;
        LODWORD(v106) = type metadata accessor for SessionClientID;
        v94 = v107;
        sub_23FCCCB7C(v90, v107);
        v95 = sub_23FD71438();
        v96 = sub_23FCCC6D4();
        sub_23FCCCB0C(v96);
        v98 = sub_23FC767A0(v95, v97, v121);
        sub_23FCCC68C(v98);
        sub_23FC5A56C();
        sub_23FCCCB0C(v90);
        sub_23FCCCB70();
        v99 = (uint64_t)v114;
        sub_23FCCCB7C((uint64_t)v114, v94);
        v100 = sub_23FD71438();
        v101 = sub_23FCCC6D4();
        sub_23FC98270(v101);
        v103 = sub_23FC767A0(v100, v102, v121);
        sub_23FCCC7E8(v103);
        sub_23FD75044();
        sub_23FC5A56C();
        sub_23FC98270(v99);
        sub_23FC59250(&dword_23FBF8000, v64, (os_log_type_t)v106, "SessionClient %s is not allowed to observe SessionClient %s.", v93);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      sub_23FC98270(v90);
      sub_23FC98270((uint64_t)v64);

      sub_23FC7A708();
      v104(v62, v118);
      v76 = 4;
      sub_23FCCCB84();
      sub_23FCCC7C8();
      swift_release();
      sub_23FCCCBEC();
      sub_23FC5A2A8();
      swift_release();
      sub_23FCCC884();
      sub_23FCCC684();
      sub_23FCCC9A4();
      sub_23FC58D60();
      goto LABEL_16;
    }
  }
  sub_23FCCC534();
  sub_23FCCCA40();
  sub_23FCCC53C(v7, (uint64_t)v16);
  sub_23FCCC53C(v120, (uint64_t)v12);
  sub_23FCCCD24();
  v66 = sub_23FC15A04();
  if (sub_23FCCC50C(v66))
  {
    v67 = sub_23FBFEFF4();
    LODWORD(v116) = type metadata accessor for SessionClientID;
    v68 = v67;
    v120 = sub_23FBFEFF4();
    v121[0] = v120;
    *(_DWORD *)v68 = 136315394;
    v115 = v68 + 4;
    sub_23FCCCCDC((uint64_t)v16);
    v69 = sub_23FD71438();
    v70 = sub_23FCCC6D4();
    sub_23FBFEF18(v70, type metadata accessor for SessionClientID);
    sub_23FC767A0(v69, v71, v121);
    sub_23FD75044();
    sub_23FC5A56C();
    sub_23FBFEF18((uint64_t)v16, type metadata accessor for SessionClientID);
    *(_WORD *)(v68 + 12) = 2080;
    sub_23FCCCCDC((uint64_t)v12);
    v72 = sub_23FD71438();
    v73 = sub_23FCCC6D4();
    sub_23FC98270(v73);
    v75 = sub_23FC767A0(v72, v74, v121);
    sub_23FCCC780(v75);
    sub_23FC5E498();
    sub_23FC5A56C();
    sub_23FC98270((uint64_t)v12);
    sub_23FC59250(&dword_23FBF8000, v44, (os_log_type_t)v116, "Unknown SessionClient %s is not allowed to observe SessionClient %s.", (uint8_t *)v68);
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  sub_23FC98270((uint64_t)v16);
  sub_23FC98270((uint64_t)v12);

  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v3, v118);
  v76 = 1;
  sub_23FCCCB84();
  sub_23FCCC7C8();
LABEL_16:
  v77 = v119;
LABEL_20:
  *v77 = v76;
LABEL_21:
  sub_23FC06000();
}

void sub_23FCC8520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];
  uint64_t v60;

  sub_23FCC2A5C();
  v57 = v3;
  v58 = v0;
  v5 = v4;
  v7 = v6;
  v8 = sub_23FC10100();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFF180();
  v13 = v12 - v11;
  sub_23FC5EA38();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC8D7D0();
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v50 - v19;
  MEMORY[0x24BDAC7A8](v18, v21);
  sub_23FCCC654();
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v50 - v24;
  v26 = v58;
  sub_23FCC7CB0();
  if (v26)
  {
    sub_23FCCCD8C();
LABEL_10:
    sub_23FC06000();
    return;
  }
  v57 = v13;
  v58 = 0;
  v52 = v2;
  v53 = v1;
  v54 = v20;
  sub_23FCCCB40(v7, v27, type metadata accessor for SessionClientID);
  sub_23FCCC750();
  v51 = v25;
  v28 = sub_23FCC787C(v59, (uint64_t)v25);
  if (!*(_QWORD *)(v29 + 8))
  {
    sub_23FCCCB98();
    sub_23FCCC534();
    v35 = v53;
    v34 = (uint64_t)v54;
    goto LABEL_7;
  }
  v30 = v29;
  v50 = (uint64_t)&v50;
  MEMORY[0x24BDAC7A8](v28, v29);
  *(&v50 - 2) = v5;
  v31 = v58;
  sub_23FCCBE08((uint64_t (*)(unint64_t))sub_23FCCB7CC);
  v33 = *(_QWORD *)(*(_QWORD *)(v30 + 40) + 16);
  v35 = v53;
  v34 = (uint64_t)v54;
  if (v33 >= v32)
  {
    v58 = v31;
    sub_23FCCB894(v32, v33);
    sub_23FCCCB98();
    sub_23FCCC534();
LABEL_7:
    sub_23FC98270((uint64_t)v51);
    sub_23FD724C4();
    sub_23FCCC53C(v5, v35);
    sub_23FCCC53C(v7, v34);
    v36 = sub_23FD72BE4();
    v37 = sub_23FD74F6C();
    v38 = v37;
    v39 = os_log_type_enabled(v36, v37);
    v40 = v52;
    if (v39)
    {
      v41 = v35;
      v42 = sub_23FBFEFF4();
      v57 = sub_23FBFEFF4();
      v59[0] = v57;
      *(_DWORD *)v42 = 136315394;
      v53 = v42 + 4;
      sub_23FBFEF40(v41, v40, type metadata accessor for SessionClientID);
      sub_23FCCCBD0();
      LODWORD(v54) = v38;
      sub_23FBFEF18(v40, type metadata accessor for SessionClientID);
      v43 = sub_23FC5E880();
      v60 = sub_23FC9DC40(v43, v44, v45);
      sub_23FD75044();
      sub_23FC15A24();
      sub_23FBFEF18(v41, type metadata accessor for SessionClientID);
      *(_WORD *)(v42 + 12) = 2080;
      sub_23FCCC9BC();
      v46 = sub_23FD71438();
      v47 = v34;
      v49 = v48;
      sub_23FC98270(v40);
      v60 = sub_23FC9DC40(v46, v49, v59);
      sub_23FCCC878();
      sub_23FC0AAF8();
      sub_23FC98270(v47);
      sub_23FC59250(&dword_23FBF8000, v36, (os_log_type_t)v54, "SessionClient %s deregistered to observe SessionClient %s.", (uint8_t *)v42);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    sub_23FC9825C(v35);
    sub_23FC9825C(v34);

    sub_23FC102AC(v55);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_23FCC8894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[75] = a6;
  v6[74] = a5;
  v6[73] = a4;
  v6[72] = a3;
  v6[71] = a2;
  v7 = type metadata accessor for SessionClientID(0);
  v6[76] = v7;
  v6[77] = *(_QWORD *)(v7 - 8);
  v6[78] = swift_task_alloc();
  v6[79] = swift_task_alloc();
  sub_23FBFD684(&qword_256F61450);
  v6[80] = swift_task_alloc();
  v6[81] = swift_task_alloc();
  v8 = sub_23FD71F0C();
  v6[82] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[83] = v9;
  v6[84] = *(_QWORD *)(v9 + 64);
  v6[85] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A28);
  v6[86] = swift_task_alloc();
  v6[87] = swift_task_alloc();
  v6[88] = swift_task_alloc();
  v6[89] = swift_task_alloc();
  v6[90] = swift_task_alloc();
  v6[91] = swift_task_alloc();
  v6[92] = swift_task_alloc();
  v6[93] = swift_task_alloc();
  v6[94] = swift_task_alloc();
  v10 = sub_23FD71AEC();
  v6[95] = v10;
  v6[96] = *(_QWORD *)(v10 - 8);
  v6[97] = swift_task_alloc();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v6[98] = qword_256F7F480;
  type metadata accessor for SessionControlActor();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  v6[99] = v11;
  swift_retain();
  v6[100] = sub_23FD74D80();
  v6[101] = v12;
  return swift_task_switch();
}

void sub_23FCC8AB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  void (*v8)(uint64_t, uint64_t);
  char v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  int64_t v183;
  unint64_t v184;
  unint64_t v185;
  int64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int64_t v191;
  uint64_t v192;
  uint64_t v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  _QWORD *v229;
  _BYTE *v231;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t (*v312)(void);
  uint64_t v313;
  uint64_t (*v314)(void);
  uint64_t v315;
  uint64_t (*v316)(void);
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  int64_t v328;
  uint64_t (*v329)(void);
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  int64_t v333;
  int64_t v334;
  _OWORD *v335;
  uint64_t v336;
  _QWORD *v337;

  v1 = v0[72];
  v2 = sub_23FCCC930();
  v337 = v0;
  if (*(_BYTE *)(v1 + *(int *)(v2 + 24)) != 1)
    goto LABEL_37;
  v3 = v0[97];
  v4 = v0[96];
  v5 = v337[95];
  sub_23FD71EF4();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5);
  v7 = *MEMORY[0x24BE529C8];
  v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0 = v337;
  v8(v3, v5);
  if (v6 != v7)
  {
LABEL_37:
    v241 = (uint64_t)(v0 + 58);
    v247 = v0 + 70;
    v253 = v2;
    v48 = v0[92];
    v49 = v0[85];
    v50 = v0[84];
    v51 = v337[83];
    v52 = v337[82];
    v53 = (__int128 *)v337[75];
    v54 = v337[73];
    sub_23FC5DC5C();
    v55 = sub_23FCCC740();
    v331 = v56;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v55, v57, v58, v56);
    v329 = *(uint64_t (**)(void))(v51 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v329)(v49, v54, v52);
    v59 = *(unsigned __int8 *)(v51 + 80);
    v60 = (v59 + 88) & ~v59;
    v318 = v59 | 7;
    v321 = v60 + v50;
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = 0;
    *(_QWORD *)(v61 + 24) = 0;
    v62 = *v53;
    v63 = v53[1];
    v64 = v53[2];
    *(_QWORD *)(v61 + 80) = *((_QWORD *)v53 + 6);
    *(_OWORD *)(v61 + 48) = v63;
    *(_OWORD *)(v61 + 64) = v64;
    *(_OWORD *)(v61 + 32) = v62;
    v325 = v60;
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32);
    v66 = v337;
    v311 = (uint64_t)v65;
    v65(v61 + v60, v49, v52);
    sub_23FCCC99C();
    sub_23FCC4E6C(v48, (uint64_t)&unk_256F61460, v61);
    sub_23FBFEF74(v48, &qword_254346A28);
    v67 = *((_QWORD *)v53 + 5);
    v337[70] = v67;
    v68 = *(_QWORD *)(v67 + 16);
    if (v68)
    {
      v335 = v337 + 2;
      v259 = v337 + 34;
      v69 = (uint64_t)(v337 + 55);
      v287 = (uint64_t)(v337 + 61);
      v70 = v337[74] + 24;
      sub_23FCCCBA4();
      v72 = *(_QWORD *)(v71 + 72);
      swift_bridgeObjectRetain();
      v265 = MEMORY[0x24BEE4AE0] + 8;
      v271 = v72;
      v295 = (uint64_t)(v337 + 55);
      v279 = v70;
      while (1)
      {
        v73 = v66[81];
        v74 = v66[76];
        sub_23FCCCA1C(v49, v73);
        sub_23FC7A680();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v75, v76, v77, v74);
        sub_23FC100EC(v73, 1, v74);
        if (v78)
          break;
        sub_23FBFEEB0(v66[81], v66[79], type metadata accessor for SessionClientID);
        sub_23FC59120();
        if (*(_QWORD *)(*(_QWORD *)v70 + 16) && (sub_23FC84E34(v66[79]), (v80 & 1) != 0))
        {
          v81 = v66[91];
          v82 = v66[85];
          v302 = v66[82];
          v83 = v66[79];
          v84 = v66[73];
          v85 = sub_23FCCC958(v79);
          v337[8] = v86;
          *((_OWORD *)v337 + 2) = v87;
          *((__n128 *)v337 + 3) = v85;
          *v335 = v88;
          swift_endAccess();
          sub_23FCCC99C();
          sub_23FBFEF18(v83, type metadata accessor for SessionClientID);
          v89 = sub_23FCCC740();
          sub_23FCCCAE8(v89, v90, v91);
          v92 = v84;
          v93 = v302;
          sub_23FCCCAFC(v82, v92, v302, v94, v95, v96, v97, v98, v234, v241, (uint64_t)v247, v253, (uint64_t)v259, v265, v271, v279, v287, v295, v302,
            v311,
            v318,
            v321,
            v325,
            v329);
          v99 = sub_23FCCCAF4();
          *(_QWORD *)(v99 + 16) = 0;
          *(_QWORD *)(v99 + 24) = 0;
          v100 = *((_OWORD *)v337 + 2);
          *(_OWORD *)(v99 + 32) = *v335;
          *(_OWORD *)(v99 + 48) = v100;
          *(_OWORD *)(v99 + 64) = *((_OWORD *)v337 + 3);
          *(_QWORD *)(v99 + 80) = v337[8];
          sub_23FCCCAE0(v99 + v325, v82, v93, v101, v102, v103, v104, v105, v235, v242, v248, v254, v260, v266, v272, v280, v288, v296, v303,
            v312);
          sub_23FCCCCD4(v81);
          v106 = sub_23FC5E824();
          LODWORD(v93) = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v106, v107, v69);
          sub_23FCCC99C();
          if ((_DWORD)v93 == 1)
          {
            sub_23FBFEF74(v337[90], &qword_254346A28);
          }
          else
          {
            sub_23FD74DE0();
            sub_23FCCC728();
          }
          v69 = v295;
          if (*(_QWORD *)(v99 + 16))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            v111 = sub_23FCCCB20();
            v113 = v112;
            swift_unknownObjectRelease();
          }
          else
          {
            v111 = 0;
            v113 = 0;
          }
          v72 = v271;
          v66 = v337;
          v114 = *(_QWORD *)v337[71];
          v115 = (_QWORD *)(v113 | v111);
          if (v113 | v111)
          {
            v115 = v259;
            *v259 = 0;
            v259[1] = 0;
            v337[36] = v111;
            v337[37] = v113;
          }
          v116 = v337[91];
          v337[61] = 1;
          v337[62] = v115;
          v337[63] = v114;
          sub_23FCCCCC0();
          swift_release();
          sub_23FCCB4F0((uint64_t)v335);
          sub_23FBFEF74(v116, &qword_254346A28);
          v70 = v279;
        }
        else
        {
          v108 = v66[79];
          swift_endAccess();
          sub_23FCCCB48(v108);
        }
        v49 += v72;
        if (!--v68)
          goto LABEL_55;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_55:
      sub_23FBFF0F8(v66[81], v109, v110, v66[76]);
    }
    v297 = (uint64_t)(v66 + 49);
    v117 = v66[72];
    sub_23FCCB59C((uint64_t)v247);
    v118 = *(_QWORD *)(*(_QWORD *)(v117 + *(int *)(v253 + 20)) + 16);
    v236 = *(_QWORD *)(v117 + *(int *)(v253 + 20));
    if (v118)
    {
      v273 = (uint64_t)(v66 + 52);
      v336 = (uint64_t)(v66 + 9);
      v247 = v66 + 42;
      v119 = v66[74] + 24;
      sub_23FCCCBA4();
      v121 = *(_QWORD **)(v120 + 72);
      swift_bridgeObjectRetain();
      v253 = MEMORY[0x24BEE4AE0] + 8;
      v259 = v121;
      v281 = (uint64_t)(v66 + 46);
      v265 = v119;
      while (1)
      {
        v122 = v66[80];
        v123 = v337[76];
        sub_23FBFEF40(v49, v122, type metadata accessor for SessionClientID);
        sub_23FC7A680();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v124, v125, v126, v123);
        v127 = sub_23FC5E824();
        v128 = v123;
        v66 = v337;
        sub_23FC100EC(v127, v129, v128);
        if (v78)
          break;
        sub_23FBFEEB0(v337[80], v337[78], type metadata accessor for SessionClientID);
        sub_23FC59120();
        if (*(_QWORD *)(*(_QWORD *)v119 + 16) && (sub_23FC84E34(v337[78]), (v131 & 1) != 0))
        {
          v132 = v337[89];
          v289 = v337[85];
          v304 = v337[82];
          v133 = v337[73];
          v134 = sub_23FCCC958(v130);
          *(_QWORD *)(v336 + 48) = v135;
          *(_OWORD *)(v336 + 16) = v136;
          *(__n128 *)(v336 + 32) = v134;
          *(_OWORD *)v336 = v137;
          swift_endAccess();
          sub_23FCCC9B4();
          sub_23FCCC71C();
          v138 = v132;
          v139 = sub_23FCCC740();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v139, v140, v141, v331);
          v142 = v289;
          v143 = v304;
          sub_23FCCCAFC(v289, v133, v304, v144, v145, v146, v147, v148, v236, v241, (uint64_t)v247, v253, (uint64_t)v259, v265, v273, v281, v289, v297, v304,
            v311,
            v318,
            v321,
            v325,
            v329);
          v149 = sub_23FCCCAF4();
          *(_QWORD *)(v149 + 16) = 0;
          v157 = sub_23FCCC62C(v149, v150, v151, v152, v153, v154, v155, v156, v237, v243, v249, v255, v261, v267, v274, v282, v290, v298, v305,
                   v313,
                   v319,
                   v322,
                   v326);
          sub_23FCCCAE0(v157, v142, v143, v158, v159, v160, v161, v162, v238, v244, v250, v256, v262, v268, v275, v283, v291, v299, v306,
            v314);
          sub_23FCCCCD4(v138);
          v163 = sub_23FC5E824();
          LODWORD(v138) = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v163, v164, v331);
          sub_23FCCC9B4();
          if ((_DWORD)v138 == 1)
          {
            sub_23FBFEF74(v337[88], &qword_254346A28);
          }
          else
          {
            sub_23FD74DE0();
            v168 = sub_23FC5F300();
            v169(v168, v331);
          }
          v119 = v265;
          if (*(_QWORD *)(v149 + 16))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_23FCBCD7C();
            v170 = sub_23FD74D80();
            v172 = v171;
            swift_unknownObjectRelease();
          }
          else
          {
            v170 = 0;
            v172 = 0;
          }
          v66 = v337;
          v173 = *(_QWORD *)v337[71];
          v174 = (_QWORD *)(v172 | v170);
          if (v172 | v170)
          {
            v174 = v247;
            *v247 = 0;
            v247[1] = 0;
            v337[44] = v170;
            v337[45] = v172;
          }
          v121 = v259;
          v175 = v337[89];
          v337[52] = 1;
          v337[53] = v174;
          v337[54] = v173;
          sub_23FCCCCC0();
          swift_release();
          sub_23FCCB4F0(v336);
          sub_23FBFEF74(v175, &qword_254346A28);
        }
        else
        {
          v165 = v337[78];
          swift_endAccess();
          sub_23FBFEF18(v165, type metadata accessor for SessionClientID);
        }
        v49 += (uint64_t)v121;
        if (!--v118)
          goto LABEL_74;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_74:
      sub_23FBFF0F8(v66[80], v166, v167, v66[76]);
    }
    v176 = (uint64_t)(v66 + 16);
    v276 = v66 + 38;
    v177 = v66[74];
    swift_bridgeObjectRelease();
    sub_23FC59120();
    v178 = *(_QWORD *)(v177 + 24);
    v307 = v178 + 64;
    sub_23FCCC908();
    v181 = v180 & v179;
    v333 = (unint64_t)(63 - v182) >> 6;
    sub_23FC10110();
    v183 = 0;
    v284 = v178;
    v292 = MEMORY[0x24BEE4AE0] + 8;
    while (1)
    {
      if (v181)
      {
        v184 = __clz(__rbit64(v181));
        v181 &= v181 - 1;
        v185 = v184 | (v183 << 6);
      }
      else
      {
        v186 = v183 + 1;
        if (__OFADD__(v183, 1))
        {
          __break(1u);
LABEL_113:
          __break(1u);
          goto LABEL_114;
        }
        if (v186 >= v333)
          goto LABEL_108;
        v187 = *(_QWORD *)(v307 + 8 * v186);
        ++v183;
        if (!v187)
        {
          v183 = v186 + 1;
          sub_23FCCCCA0();
          if (v23 == v24)
            goto LABEL_108;
          sub_23FCCCC94();
          if (!v187)
          {
            v183 = v188 + 2;
            sub_23FCCCCA0();
            if (v23 == v24)
              goto LABEL_108;
            sub_23FCCCC94();
            if (!v187)
            {
              v183 = v189 + 3;
              sub_23FCCCCA0();
              if (v23 == v24)
                goto LABEL_108;
              sub_23FCCCC94();
              if (!v187)
              {
                v191 = v190 + 4;
                if (v191 >= v333)
                {
LABEL_108:
                  swift_release();
                  v66[105] = qword_256F7F480;
                  sub_23FCCC7B0(dword_256F61478);
                  v229 = (_QWORD *)swift_task_alloc();
                  v66[106] = v229;
                  sub_23FCCCC3C(v229, (uint64_t)sub_23FCC9AF0);
                  goto LABEL_109;
                }
                v187 = *(_QWORD *)(v307 + 8 * v191);
                if (!v187)
                {
                  while (1)
                  {
                    v183 = v191 + 1;
                    if (__OFADD__(v191, 1))
                      break;
                    sub_23FCCCCA0();
                    if (v23 == v24)
                      goto LABEL_108;
                    sub_23FCCCC94();
                    v191 = v192 + 1;
                    if (v187)
                      goto LABEL_97;
                  }
LABEL_114:
                  __break(1u);
                  goto LABEL_115;
                }
                v183 = v191;
              }
            }
          }
        }
LABEL_97:
        v181 = (v187 - 1) & v187;
        v185 = __clz(__rbit64(v187)) + (v183 << 6);
      }
      v193 = *(_QWORD *)(v178 + 56) + 56 * v185;
      v194 = *(_OWORD *)v193;
      v195 = *(_OWORD *)(v193 + 16);
      v196 = *(_OWORD *)(v193 + 32);
      *(_QWORD *)(v176 + 48) = *(_QWORD *)(v193 + 48);
      *(_OWORD *)(v176 + 16) = v195;
      *(_OWORD *)(v176 + 32) = v196;
      *(_OWORD *)v176 = v194;
      if ((v66[20] & 1) != 0)
      {
        v197 = v66;
        v198 = v66[86];
        v199 = v197[85];
        v200 = v197[82];
        v201 = v197[73];
        v202 = sub_23FC5E824();
        sub_23FCCCAE8(v202, v203, 1);
        sub_23FCCCAFC(v199, v201, v200, v204, v205, v206, v207, v208, v236, v241, (uint64_t)v247, v253, (uint64_t)v259, v265, (uint64_t)v276, v284, v292, v297, v307,
          v311,
          v318,
          v321,
          v325,
          v329);
        v209 = sub_23FCCCAF4();
        *(_QWORD *)(v209 + 16) = 0;
        v217 = sub_23FCCC62C(v209, v210, v211, v212, v213, v214, v215, v216, v239, v245, v251, v257, v263, v269, v277, v285, v293, v300, v308,
                 v315,
                 v320,
                 v323,
                 v327);
        sub_23FCCCAE0(v217, v199, v200, v218, v219, v220, v221, v222, v240, v246, v252, v258, v264, v270, v278, v286, v294, v301, v309,
          v316);
        v223 = sub_23FC5E880();
        sub_23FC950A8(v223, v224);
        LODWORD(v198) = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v198, 1, v178);
        sub_23FCCC9B4();
        sub_23FCCC9B4();
        if ((_DWORD)v198 == 1)
        {
          sub_23FBFEF74(v197[86], &qword_254346A28);
        }
        else
        {
          sub_23FD74DE0();
          sub_23FCCC728();
        }
        if (*(_QWORD *)(v209 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v225 = sub_23FCCCB20();
          sub_23FCCC6D4();
          swift_unknownObjectRelease();
        }
        else
        {
          v225 = 0;
          v200 = 0;
        }
        v178 = v284;
        v66 = v337;
        v226 = *(_QWORD *)v337[71];
        v227 = (_QWORD *)(v200 | v225);
        if (v200 | v225)
        {
          v227 = v276;
          *v276 = 0;
          v276[1] = 0;
          v337[40] = v225;
          v337[41] = v200;
        }
        v228 = v337[87];
        v337[49] = 1;
        v337[50] = v227;
        v337[51] = v226;
        sub_23FCCCCC0();
        swift_release();
        sub_23FCCB4F0(v176);
        sub_23FBFEF74(v228, &qword_254346A28);
      }
    }
  }
  sub_23FCC3D1C();
  if ((v9 & 1) == 0)
  {
    sub_23FCCCC34();
    sub_23FC1E5B4();
    sub_23FC5A704();
    *v231 = 3;
    sub_23FCB3298();
    swift_task_dealloc();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC75E08();
    __asm { BR              X0 }
  }
  v317 = v337[83];
  v10 = v337[74];
  v11 = v337 + 23;
  sub_23FC59120();
  v12 = *(_QWORD *)(v10 + 24);
  v324 = v12 + 64;
  sub_23FCCC908();
  v15 = v14 & v13;
  v328 = (unint64_t)(63 - v16) >> 6;
  sub_23FC5AAE8();
  v17 = 0;
  v18 = 56;
  v310 = v12;
  while (v15)
  {
    sub_23FCCCC50();
    v20 = v19 | (v17 << 6);
LABEL_27:
    v28 = *(_QWORD *)(v12 + 56) + v20 * v18;
    v29 = *(_OWORD *)v28;
    v30 = *(_OWORD *)(v28 + 16);
    v31 = *(_OWORD *)(v28 + 32);
    v337[29] = *(_QWORD *)(v28 + 48);
    *(_OWORD *)(v337 + 25) = v30;
    *(_OWORD *)(v337 + 27) = v31;
    *v11 = v29;
    if ((v337[27] & 1) != 0)
    {
      v332 = v15;
      v334 = v17;
      v32 = v337[94];
      v330 = v337[93];
      v33 = v337[85];
      v34 = v337[82];
      v35 = v337[73];
      v36 = sub_23FC5DC5C();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v32, 1, 1, v36);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v317 + 16))(v33, v35, v34);
      v37 = (*(unsigned __int8 *)(v317 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80);
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = 0;
      *(_QWORD *)(v38 + 24) = 0;
      v39 = *(_OWORD *)(v337 + 25);
      *(_OWORD *)(v38 + 32) = *v11;
      *(_OWORD *)(v38 + 48) = v39;
      *(_OWORD *)(v38 + 64) = *(_OWORD *)(v337 + 27);
      *(_QWORD *)(v38 + 80) = v337[29];
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v317 + 32))(v38 + v37, v33, v34);
      sub_23FC950A8(v32, v330);
      LODWORD(v34) = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v330, 1, v36);
      sub_23FCCB4A0((uint64_t)v11);
      sub_23FCCB4A0((uint64_t)v11);
      if ((_DWORD)v34 == 1)
      {
        sub_23FBFEF74(v337[93], &qword_254346A28);
      }
      else
      {
        sub_23FD74DE0();
        v40 = sub_23FC5F300();
        v41(v40, v36);
      }
      v12 = v310;
      if (*(_QWORD *)(v38 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v42 = sub_23FCCCBF4();
        v44 = v43;
        swift_unknownObjectRelease();
      }
      else
      {
        v42 = 0;
        v44 = 0;
      }
      v45 = *(_QWORD *)v337[71];
      v46 = v44 | v42;
      if (v44 | v42)
      {
        v46 = (uint64_t)(v337 + 30);
        v337[30] = 0;
        v337[31] = 0;
        v337[32] = v42;
        v337[33] = v44;
      }
      v47 = v337[94];
      v337[67] = 1;
      v337[68] = v46;
      v337[69] = v45;
      swift_task_create();
      swift_release();
      sub_23FCCB4F0((uint64_t)v11);
      sub_23FBFEF74(v47, &qword_254346A28);
      v18 = 56;
      v15 = v332;
      v17 = v334;
    }
  }
  v21 = v17 + 1;
  if (__OFADD__(v17, 1))
    goto LABEL_113;
  if (v21 >= v328)
  {
LABEL_111:
    sub_23FC101F4();
    v337[102] = qword_256F7F480;
    sub_23FCCC7B0(dword_256F61478);
    v233 = (_QWORD *)swift_task_alloc();
    v337[103] = v233;
    sub_23FCCCC3C(v233, (uint64_t)sub_23FCC99E0);
LABEL_109:
    sub_23FC75E08();
    __asm { BR              X2 }
  }
  v22 = *(_QWORD *)(v324 + 8 * v21);
  ++v17;
  if (v22)
    goto LABEL_26;
  sub_23FCCCCE8();
  if (v23 == v24)
    goto LABEL_111;
  sub_23FCCCCC8();
  if (v22)
    goto LABEL_26;
  sub_23FCCCCE8();
  if (v23 == v24)
    goto LABEL_111;
  sub_23FCCCCC8();
  if (v22)
    goto LABEL_26;
  sub_23FCCCCE8();
  if (v23 == v24)
    goto LABEL_111;
  sub_23FCCCCC8();
  if (v22)
  {
LABEL_26:
    v15 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
    goto LABEL_27;
  }
  v26 = v25 + 4;
  if (v26 >= v328)
    goto LABEL_111;
  v22 = *(_QWORD *)(v324 + 8 * v26);
  if (v22)
  {
    v17 = v26;
    goto LABEL_26;
  }
  while (!__OFADD__(v26, 1))
  {
    sub_23FCCCCE8();
    if (v23 == v24)
      goto LABEL_111;
    sub_23FCCCCC8();
    v26 = v27 + 1;
    if (v22)
      goto LABEL_26;
  }
LABEL_115:
  __break(1u);
}

uint64_t sub_23FCC99E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC5D3A4();
  *v3 = *v2;
  *(_QWORD *)(v0 + 832) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_23FCCCBFC();
  return sub_23FC5A63C();
}

uint64_t sub_23FCC9A3C()
{
  uint64_t (*v0)(void);

  sub_23FC75D0C();
  swift_release();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  swift_task_dealloc();
  v0 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FCCC3FC(v0);
}

uint64_t sub_23FCC9AF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC5D3A4();
  *v3 = *v2;
  *(_QWORD *)(v0 + 856) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_23FCCCBFC();
  return sub_23FC5A63C();
}

uint64_t sub_23FCC9B4C()
{
  uint64_t v0;

  sub_23FC75D0C();
  sub_23FCCCC34();
  sub_23FC58AC8();
  sub_23FCCC418();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  return sub_23FCCC3FC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCC9BC0()
{
  uint64_t v0;

  sub_23FC75D0C();
  sub_23FCCCC34();
  sub_23FC58AC8();
  sub_23FCCC418();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  return sub_23FCCC3FC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCC9C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23FCC9C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCCC984();
  v1 = OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientProxy;
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  if (qword_256F5D2D8 != -1)
    swift_once();
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FCCC5FC();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC5A63C();
}

uint64_t sub_23FCC9CE4()
{
  sub_23FCCC4FC();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

void sub_23FCC9D10()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 56) = v1;
    v2 = sub_23FCCC470(v1, (uint64_t)sub_23FCC9D54);
    sub_23FCCC3F0(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23FCC9D54()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FCCC488();
  if (v0)
  {
    sub_23FC5A9A8();
    return sub_23FC5A63C();
  }
  else
  {
    sub_23FCCCAD0();
    return sub_23FC5D398(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23FCC9D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  if (a1)
  {
    swift_getObjectType();
    v4 = sub_23FD74D80();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v3[10] = v4;
  v3[11] = v6;
  return swift_task_switch();
}

uint64_t sub_23FCC9E08()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  int v3;

  *(_QWORD *)(v0 + 96) = sub_23FBFD684(&qword_254346E20);
  if ((sub_23FD74EC4() & 1) != 0)
  {
    v1 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC75B5C(v1);
  }
  else
  {
    v3 = sub_23FD70DBC(2, 18, 0, 0);
    *(_DWORD *)(v0 + 128) = v3;
    *(_QWORD *)(v0 + 104) = 0;
    if (v3)
    {
      *(_QWORD *)(v0 + 112) = swift_task_alloc();
      sub_23FBFD684(&qword_256F614B8);
      sub_23FCCC6AC((uint64_t)sub_23FCC9EDC);
      return sub_23FCCC4DC();
    }
    else
    {
      sub_23FCCC7FC();
      return sub_23FCCC4EC();
    }
  }
}

uint64_t sub_23FCC9EDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC5AEA0(v2);
  if (v1)
    *(_QWORD *)(v0 + 120) = v1;
  else
    *(_BYTE *)(v0 + 134) = *(_BYTE *)(v0 + 132);
  return sub_23FC5A63C();
}

uint64_t sub_23FCC9F34()
{
  uint64_t v0;
  uint64_t v1;

  if (v0)
    *(_QWORD *)(v1 + 120) = v0;
  else
    *(_BYTE *)(v1 + 134) = *(_BYTE *)(v1 + 133);
  return swift_task_switch();
}

uint64_t sub_23FCC9F64()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(_BYTE *)(v0 + 134) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 104);
  if ((sub_23FD74EC4() & 1) == 0)
  {
    *(_QWORD *)(v0 + 104) = v1;
LABEL_7:
    if (*(_DWORD *)(v0 + 128))
    {
      *(_QWORD *)(v0 + 112) = swift_task_alloc();
      sub_23FBFD684(&qword_256F614B8);
      sub_23FCCC6AC((uint64_t)sub_23FCC9EDC);
      return sub_23FCCC4DC();
    }
    else
    {
      sub_23FCCC7FC();
      return sub_23FCCC4EC();
    }
  }
  if (v1)
    swift_willThrow();
  return sub_23FC75B5C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCCA024()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  if (*(_QWORD *)(v0 + 104))
  {

    v1 = *(void **)(v0 + 104);
  }
  if ((sub_23FD74EC4() & 1) != 0)
  {
    if (v1)
      swift_willThrow();
    return sub_23FC75B5C(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v1;
    if (*(_DWORD *)(v0 + 128))
    {
      *(_QWORD *)(v0 + 112) = swift_task_alloc();
      sub_23FBFD684(&qword_256F614B8);
      sub_23FCCC6AC((uint64_t)sub_23FCC9EDC);
      return sub_23FCCC4DC();
    }
    else
    {
      sub_23FCCC7FC();
      return sub_23FCCC4EC();
    }
  }
}

uint64_t sub_23FCCA0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23FCCA10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCCC984();
  v1 = OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientProxy;
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  if (qword_256F5D2D8 != -1)
    swift_once();
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FCCC5FC();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC5A63C();
}

uint64_t sub_23FCCA1A4()
{
  sub_23FCCC4FC();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

void sub_23FCCA1D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 56) = v1;
    v2 = sub_23FCCC470(v1, (uint64_t)sub_23FCCA214);
    sub_23FCCC3F0(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23FCCA214()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FCCC488();
  if (v0)
  {
    sub_23FC5A9A8();
    return sub_23FC5A63C();
  }
  else
  {
    sub_23FCCCAD0();
    return sub_23FC5D398(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23FCCA254()
{
  uint64_t v0;

  swift_release();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCCA280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23FCCA298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCCC984();
  v1 = OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientProxy;
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  if (qword_256F5D2D8 != -1)
    swift_once();
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FCCC5FC();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC5A63C();
}

uint64_t sub_23FCCA330()
{
  sub_23FCCC4FC();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

void sub_23FCCA35C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 56) = v1;
    v2 = sub_23FCCC470(v1, (uint64_t)sub_23FCCA3A0);
    sub_23FCCC3F0(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23FCCA3A0()
{
  void *v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v4 = *v1;
  sub_23FC5AEA0(&v4);
  sub_23FC101F4();
  if (v0)

  v2 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5D398(v2);
}

uint64_t sub_23FCCA3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23FCCA404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCCC984();
  v1 = OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientProxy;
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  if (qword_256F5D2D8 != -1)
    swift_once();
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FCCC5FC();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC5A63C();
}

uint64_t sub_23FCCA49C()
{
  sub_23FCCC4FC();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

void sub_23FCCA4C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 56) = v1;
    v2 = sub_23FCCC470(v1, (uint64_t)sub_23FCCC38C);
    sub_23FCCC3F0(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_23FCCA50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint8_t **v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint8_t *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;
  uint8_t *v58;
  uint8_t *v59;
  char *v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  NSObject *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101[3];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint8_t *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[3];

  sub_23FCC2A5C();
  v109 = v4;
  v102 = v1;
  v6 = v5;
  sub_23FCCCAC4();
  sub_23FBFF168();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v105 = (char *)v101 - v13;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC0FFF4();
  v106 = v16;
  sub_23FBFF064();
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v27 = sub_23FCCC7D0(v19, v20, v21, v22, v23, v24, v25, v26, v101[0]);
  v110 = *(_QWORD *)(v27 - 8);
  v111 = v27;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FC8D7D0();
  MEMORY[0x24BDAC7A8](v30, v31);
  v107 = (char *)v101 - v32;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v33, v34);
  sub_23FBFF218();
  v104 = v35;
  sub_23FBFD684(&qword_256F61438);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FC10388();
  v38 = type metadata accessor for SessionSwitchboard.SessionInfo();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v39, v40);
  sub_23FBFF180();
  v43 = v42 - v41;
  v44 = *v3;
  v45 = v3[1];
  v108 = v44;
  sub_23FCCC464();
  sub_23FCC3B88(v6, *(_QWORD *)(v0 + 16), (void (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo, (void (*)(void))sub_23FC84E40);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v38) == 1)
  {
    sub_23FBFEF74(v2, &qword_256F61438);
    sub_23FCCC534();
    sub_23FD724C4();
    sub_23FCCCCF4(v6, v46, type metadata accessor for SessionID);
    sub_23FC101D8();
    sub_23FD72BE4();
    v47 = sub_23FC15A04();
    if (os_log_type_enabled((os_log_t)type metadata accessor for SessionSwitchboard.SessionInfo, v47))
    {
      v48 = (uint8_t *)sub_23FBFEFF4();
      v107 = (char *)sub_23FBFEFF4();
      v112[0] = (uint64_t)v107;
      *(_DWORD *)v48 = 136315394;
      sub_23FC5B578();
      sub_23FCCC6E0();
      sub_23FCCC88C();
      sub_23FCCC938();
      sub_23FCCCB70();
      v108 = v48 + 14;
      sub_23FCCC6C4(v49, v50, type metadata accessor for SessionID);
      v51 = sub_23FD71438();
      v52 = sub_23FCCC6D4();
      sub_23FC98270(v52);
      v54 = sub_23FC767A0(v51, v53, v112);
      sub_23FCCC780(v54);
      sub_23FD75044();
      sub_23FC5A56C();
      sub_23FC98270((uint64_t)v11);
      sub_23FC59250(&dword_23FBF8000, type metadata accessor for SessionSwitchboard.SessionInfo, v47, "Group %s is not allowed to observe session %s.", v48);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    v77 = sub_23FBFF1A0();
    sub_23FC15A94(v77, type metadata accessor for SessionID);

    sub_23FC102AC(v110);
    LOBYTE(v112[0]) = 0;
    sub_23FC1E5B4();
    sub_23FCCC7C8();
    v78 = 0;
    goto LABEL_18;
  }
  sub_23FBFEEB0(v2, v43, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  sub_23FCCC534();
  sub_23FCCC464();
  v55 = v43;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) && (sub_23FC84E34(v43), (v56 & 1) != 0))
  {
    sub_23FCCC57C();
    v58 = (uint8_t *)v57[2];
    v59 = (uint8_t *)v57[3];
    v60 = (char *)v57[6];
    sub_23FCCC534();
    if (v59)
    {
      if (v58 == v108 && v59 == v45)
      {
        sub_23FC5A09C();
        sub_23FC5AAE8();
        sub_23FC5C20C();
        v63 = sub_23FC59504();
LABEL_24:
        sub_23FCCCB2C(v63, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
        swift_release();
        sub_23FC103E8();
        sub_23FC15A24();
        sub_23FC5A56C();
        goto LABEL_19;
      }
      sub_23FC5E880();
      v62 = sub_23FC76014();
      sub_23FC5A09C();
      sub_23FC5AAE8();
      sub_23FC5C20C();
      v63 = sub_23FC59504();
      if ((v62 & 1) != 0)
        goto LABEL_24;
    }
    else
    {
      sub_23FC5A09C();
      sub_23FC5C20C();
      sub_23FC59504();
      swift_bridgeObjectRelease();
    }
    v107 = v60;
    v83 = v104;
    sub_23FD724C4();
    v84 = v103;
    sub_23FCCCCF4(v6, v85, type metadata accessor for SessionID);
    sub_23FC101D8();
    v86 = sub_23FD72BE4();
    v87 = sub_23FD74F54();
    v88 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      v89 = sub_23FBFEFF4();
      LODWORD(v102) = v88;
      v90 = v89;
      v105 = (char *)sub_23FBFEFF4();
      v112[0] = (uint64_t)v105;
      *(_DWORD *)v90 = 136315394;
      v101[2] = (uint64_t)v86;
      sub_23FC5B578();
      v91 = sub_23FCCC6E0();
      sub_23FCCCBC4(v91);
      v108 = (uint8_t *)v43;
      sub_23FCCC88C();
      v92 = sub_23FCCC938();
      *(_WORD *)(v90 + 12) = 2080;
      v101[1] = v90 + 14;
      sub_23FCCC6C4(v92, v93, type metadata accessor for SessionID);
      v94 = sub_23FD71438();
      sub_23FC98270(v90 + 4);
      v96 = sub_23FCCCA50(v94, v95, v112);
      sub_23FCCC780(v96);
      sub_23FD75044();
      sub_23FC102FC();
      sub_23FC98270(v84);
      sub_23FCCCB64();
      sub_23FC59250(v97, v98, (os_log_type_t)v102, v99, (uint8_t *)v90);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    v100 = sub_23FBFF1A0();
    sub_23FC15A94(v100, type metadata accessor for SessionID);

    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v83, v111);
    v78 = 4;
    LOBYTE(v112[0]) = 4;
    sub_23FC1E5B4();
    sub_23FCCC7C8();
    swift_release();
    sub_23FC103E8();
    sub_23FC5A56C();
    v82 = sub_23FC15A24();
  }
  else
  {
    sub_23FCCC534();
    v64 = (uint64_t)v107;
    sub_23FC58FB0();
    v65 = v105;
    sub_23FCCCCF4(v6, v66, type metadata accessor for SessionID);
    sub_23FC101D8();
    v67 = sub_23FD72BE4();
    v68 = sub_23FD74F54();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = sub_23FBFEFF4();
      v104 = sub_23FBFEFF4();
      v112[0] = v104;
      *(_DWORD *)v69 = 136315394;
      sub_23FC5B578();
      v70 = sub_23FCCC6E0();
      sub_23FCCCBC4(v70);
      sub_23FCCC878();
      v71 = sub_23FCCC938();
      *(_WORD *)(v69 + 12) = 2080;
      v108 = (uint8_t *)v55;
      sub_23FCCC6C4(v71, v72, type metadata accessor for SessionID);
      v73 = (uint64_t)v65;
      v74 = sub_23FD71438();
      v76 = v75;
      sub_23FC98270(v64);
      sub_23FC9DC40(v74, v76, v112);
      sub_23FCCC878();
      sub_23FC5A648();
      sub_23FBFEF18(v73, type metadata accessor for SessionID);
      sub_23FC59250(&dword_23FBF8000, v67, v68, "Group %s is not allowed to observe session %s because it has an unknown owning SessionClient.", (uint8_t *)v69);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    v79 = sub_23FBFF1A0();
    sub_23FC15A94(v79, type metadata accessor for SessionID);

    v80 = sub_23FC5F300();
    v81(v80, v111);
    v78 = 1;
    LOBYTE(v112[0]) = 1;
    sub_23FC1E5B4();
    v82 = sub_23FCCC7C8();
  }
  sub_23FCCCB2C(v82, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
LABEL_18:
  *v109 = v78;
LABEL_19:
  sub_23FC06000();
}

uint64_t sub_23FCCAC74()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23FCCAC98()
{
  sub_23FCCAC74();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionSwitchboard()
{
  return objc_opt_self();
}

uint64_t destroy for SessionSwitchboard.ClientInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SessionSwitchboard.ClientInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SessionSwitchboard.ClientInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SessionSwitchboard.ClientInfo(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SessionSwitchboard.ClientInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionSwitchboard.ClientInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionSwitchboard.ClientInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionSwitchboard.ClientInfo()
{
  return &type metadata for SessionSwitchboard.ClientInfo;
}

_QWORD *sub_23FCCAF34(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)v4 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *((_BYTE *)v4 + v8) = *((_BYTE *)a2 + v8);
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23FCCAFD8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23FCCB028(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23FCCB0A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23FCCB138(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23FCCB1A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_23FCCB228()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCCB234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23FC5EA38();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23FCCB2A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCCB2B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23FC5EA38();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SessionSwitchboard.SessionInfo()
{
  uint64_t result;

  result = qword_256F613F0;
  if (!qword_256F613F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FCCB35C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23FCCB3E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)sub_23FC0922C(v10);
  *v11 = v3;
  v11[1] = sub_23FCCB464;
  return sub_23FCC8894(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_23FCCB464()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_23FC5AEA0(&v3);
  return sub_23FC5AADC(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23FCCB4A0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FCCB4F0(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FCCB544()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCCC608();
  sub_23FCCC3D0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FCCA0F4(v2, v3, v4, v5, v6);
}

uint64_t sub_23FCCB59C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FCCB5C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCCC608();
  sub_23FCCC3D0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FCC9C34(v2, v3, v4, v5, v6);
}

uint64_t sub_23FCCB624()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCCC608();
  sub_23FCCC3D0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FCCA3EC(v2, v3, v4, v5, v6);
}

uint64_t sub_23FCCB680()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCCC608();
  sub_23FCCC3D0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FCCA280(v2, v3, v4, v5, v6);
}

uint64_t sub_23FCCB6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23FD71F0C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23FCCB770()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCCC608();
  sub_23FCCC3D0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FCC9C34(v2, v3, v4, v5, v6);
}

uint64_t sub_23FCCB7CC()
{
  return sub_23FD71450() & 1;
}

uint64_t sub_23FCCB7F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_23FCCB830()
{
  sub_23FC99724();
}

void sub_23FCCB844()
{
  sub_23FC99898();
}

void sub_23FCCB858()
{
  sub_23FC99924();
}

void sub_23FCCB86C()
{
  sub_23FC999F4();
}

void sub_23FCCB880()
{
  sub_23FC99AA8();
}

void sub_23FCCB894(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = a1 - a2;
  if (__OFSUB__(0, v6))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v7))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v6 > *(_QWORD *)(v4 + 24) >> 1)
  {
    sub_23FC999F4();
    v4 = v8;
  }
  v9 = *(_QWORD *)(type metadata accessor for SessionClientID(0) - 8);
  v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v11 = *(_QWORD *)(v9 + 72);
  swift_arrayDestroy();
  if (!v6)
    goto LABEL_13;
  v12 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v12, a2))
    goto LABEL_19;
  sub_23FC9A894(v10 + v11 * a2, v12 - a2);
  v13 = *(_QWORD *)(v4 + 16);
  v14 = __OFADD__(v13, v7);
  v15 = v13 - v6;
  if (!v14)
  {
    *(_QWORD *)(v4 + 16) = v15;
LABEL_13:
    *v2 = v4;
    return;
  }
LABEL_20:
  __break(1u);
}

void (*sub_23FCCB9A8(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v5 = type metadata accessor for SessionClientID(0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[8] = v6;
  swift_isUniquelyReferenced_nonNull_native();
  sub_23FBFEF40(a2, (uint64_t)v6, type metadata accessor for SessionClientID);
  v4[9] = sub_23FCCBC3C(v4);
  v4[10] = sub_23FCCBAC0(v4 + 4, (uint64_t)v6);
  return sub_23FCCBA60;
}

void sub_23FCCBA60(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  sub_23FBFEF18((uint64_t)v3, type metadata accessor for SessionClientID);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_23FCCBAC0(_QWORD *a1, uint64_t a2))(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  void (*result)(uint64_t **);

  v3 = v2;
  v6 = (char *)malloc(0x58uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 7) = a2;
  *((_QWORD *)v6 + 8) = v3;
  v7 = *v3;
  sub_23FC84E34(a2);
  v6[80] = v9 & 1;
  if (__OFADD__(*(_QWORD *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = v8;
  v11 = v9;
  sub_23FBFD684(&qword_256F65E00);
  if ((sub_23FD75200() & 1) != 0)
  {
    sub_23FC84E34(a2);
    if ((v11 & 1) == (v13 & 1))
    {
      v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    type metadata accessor for SessionClientID(0);
    result = (void (*)(uint64_t **))sub_23FD753C8();
    __break(1u);
    return result;
  }
LABEL_5:
  *((_QWORD *)v6 + 9) = v10;
  if ((v11 & 1) != 0)
  {
    v14 = *(_QWORD *)(*v3 + 56) + 56 * v10;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_OWORD *)(v14 + 16);
    v18 = *(unsigned __int8 *)(v14 + 32);
    v19 = *(_OWORD *)(v14 + 40);
  }
  else
  {
    v15 = 0;
    v16 = 0;
    v18 = 0;
    v17 = 0uLL;
    v19 = 0uLL;
  }
  *(_QWORD *)v6 = v15;
  *((_QWORD *)v6 + 1) = v16;
  *((_OWORD *)v6 + 1) = v17;
  *((_QWORD *)v6 + 4) = v18;
  *(_OWORD *)(v6 + 40) = v19;
  return sub_23FCCBBF8;
}

void sub_23FCCBBF8(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_23FCCBC68(*a1, *((_BYTE *)*a1 + 80), (uint64_t *)(*a1)[8], (*a1)[9], (*a1)[7]);
  sub_23FCCC154(*v1, v1[1]);
  sub_23FCCC944(v1);
}

uint64_t (*sub_23FCCBC3C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_23FCCBC5C;
}

uint64_t sub_23FCCBC5C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_23FCCBC68(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v25 = a5;
  v26 = a4;
  v8 = type metadata accessor for SessionClientID(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  v18 = a1[6];
  if (v13)
  {
    *(_QWORD *)&v27 = v12;
    *((_QWORD *)&v27 + 1) = v13;
    *(_QWORD *)&v28 = v14;
    *((_QWORD *)&v28 + 1) = v15;
    LOBYTE(v29) = v16 & 1;
    *((_QWORD *)&v29 + 1) = v17;
    v30 = v18;
    v19 = *a3;
    if ((a2 & 1) != 0)
    {
      v20 = *(_QWORD *)(v19 + 56) + 56 * v26;
      v21 = v28;
      *(_OWORD *)v20 = v27;
      *(_OWORD *)(v20 + 16) = v21;
      *(_OWORD *)(v20 + 32) = v29;
      *(_QWORD *)(v20 + 48) = v30;
    }
    else
    {
      v22 = v12;
      sub_23FBFEF40(v25, (uint64_t)v11, type metadata accessor for SessionClientID);
      sub_23FD67D10(v26, (uint64_t)v11, (uint64_t)&v27, v19);
      v12 = v22;
    }
  }
  else if ((a2 & 1) != 0)
  {
    v25 = v12;
    swift_arrayDestroy();
    sub_23FBFEE2C(&qword_256F614C8, type metadata accessor for SessionClientID, (uint64_t)&unk_23FD79510);
    sub_23FD75218();
    v12 = v25;
  }
  return sub_23FCCC1A4(v12, v13);
}

void sub_23FCCBE08(uint64_t (*a1)(unint64_t))
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v1;
  v5 = type metadata accessor for SessionClientID(0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v37 = (uint64_t)&v34 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v39 = (uint64_t)&v34 - v14;
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (v16)
  {
    v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    v19 = 0;
    v35 = v17;
    while (1)
    {
      v20 = a1(v15 + v17);
      if (v2)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return;
      }
      if ((v20 & 1) != 0)
        break;
      ++v19;
      v17 += v18;
      if (v16 == v19)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    if (!__OFADD__(v19, 1))
    {
      v21 = *(_QWORD *)(v15 + 16);
      if (v19 + 1 == v21)
        return;
      v22 = v18 + v17;
      v23 = v19 + 1;
      v34 = v1;
      v36 = v18;
      while (v23 < v21)
      {
        v24 = v3;
        v40 = v22;
        v25 = v39;
        sub_23FBFEF40(v15 + v22, v39, type metadata accessor for SessionClientID);
        v26 = a1(v25);
        sub_23FBFEF18(v25, type metadata accessor for SessionClientID);
        if ((v26 & 1) != 0)
        {
          v3 = v24;
          v27 = v36;
        }
        else
        {
          v3 = v24;
          v27 = v36;
          if (v23 != v19)
          {
            if ((v19 & 0x8000000000000000) != 0)
              goto LABEL_31;
            v28 = *v3;
            v29 = *(_QWORD *)(*v3 + 16);
            if (v19 >= v29)
              goto LABEL_32;
            sub_23FBFEF40(v28 + v35 + v19 * v36, v37, type metadata accessor for SessionClientID);
            if (v23 >= v29)
              goto LABEL_33;
            sub_23FBFEF40(v28 + v40, v38, type metadata accessor for SessionClientID);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v3 = v34;
            *v34 = v28;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23FCCB86C();
              v28 = v33;
              *v3 = v33;
            }
            if (v19 >= *(_QWORD *)(v28 + 16))
              goto LABEL_34;
            sub_23FCCC110(v38, v28 + v35 + v19 * v27);
            if (v23 >= *(_QWORD *)(*v3 + 16))
              goto LABEL_35;
            sub_23FCCC110(v37, *v3 + v40);
          }
          if (__OFADD__(v19++, 1))
            goto LABEL_30;
        }
        v32 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_29;
        v15 = *v3;
        v21 = *(_QWORD *)(*v3 + 16);
        ++v23;
        v22 = v40 + v27;
        if (v32 == v21)
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_23FCCC110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionClientID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCCC154(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23FCCC1A4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionRoutingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionRoutingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23FCCC2C8 + 4 * byte_23FD79B35[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23FCCC2FC + 4 * byte_23FD79B30[v4]))();
}

uint64_t sub_23FCCC2FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCCC304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCCC30CLL);
  return result;
}

uint64_t sub_23FCCC318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCCC320);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23FCCC324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCCC32C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionRoutingError()
{
  return &type metadata for SessionRoutingError;
}

unint64_t sub_23FCCC34C()
{
  unint64_t result;

  result = qword_256F614E8;
  if (!qword_256F614E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79BF4, &type metadata for SessionRoutingError);
    atomic_store(result, (unint64_t *)&qword_256F614E8);
  }
  return result;
}

uint64_t sub_23FCCC398()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[29];
  v2 = v0[23];
  v3 = v0[24];
  v4 = v0[22];
  v0[54] = *(_QWORD *)(v0[34] + *(int *)(v0[32] + 28));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
}

uint64_t sub_23FCCC3F0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FCCC3FC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FCCC418()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCCC464()
{
  return swift_beginAccess();
}

uint64_t sub_23FCCC470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 24);
}

uint64_t sub_23FCCC488()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23FCCC4A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v0 + 112);
  return swift_task_dealloc();
}

uint64_t sub_23FCCC4DC()
{
  return sub_23FD74EB8();
}

uint64_t sub_23FCCC4EC()
{
  return swift_taskGroup_wait_next_throwing();
}

uint64_t sub_23FCCC4FC()
{
  _QWORD *v0;

  v0[6] = *(_QWORD *)(v0[4] + v0[5]);
  return swift_retain();
}

BOOL sub_23FCCC50C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FCCC51C()
{
  return sub_23FD71E1C();
}

uint64_t sub_23FCCC534()
{
  return swift_endAccess();
}

void sub_23FCCC53C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FBFEF40(a1, a2, v2);
}

uint64_t sub_23FCCC544(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FCCC560(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FCCC58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v1, v0, v2);
}

void sub_23FCCC5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_23FBFEF40(*(_QWORD *)(v0 + 48) + *(_QWORD *)(*(_QWORD *)(v1 + 224) + 72) * v3, *(_QWORD *)(v1 + 240), v2);
}

uint64_t sub_23FCCC5C4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 408) = result;
  *(_BYTE *)(v1 + 453) = *(_BYTE *)(result + 32);
  return result;
}

uint64_t sub_23FCCC5F0()
{
  return swift_slowAlloc();
}

uint64_t sub_23FCCC5FC()
{
  return sub_23FD74D80();
}

uint64_t sub_23FCCC608()
{
  return sub_23FD71F0C();
}

uint64_t sub_23FCCC62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  __int128 v24;

  *(_QWORD *)(a1 + 24) = 0;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v23;
  *(_OWORD *)(a1 + 48) = v24;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v23 + 32);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(v23 + 48);
  return a1 + a23;
}

void sub_23FCCC664()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23FBFEEB0(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232), v1);
}

uint64_t sub_23FCCC684()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCCC68C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FCCC6AC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = v3;
  v1[1] = a1;
  return v2;
}

void sub_23FCCC6C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FBFEF40(v3, *(_QWORD *)(v4 - 152), a3);
}

uint64_t sub_23FCCC6D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCCC6E0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23FC9DC40(*(_QWORD *)(v1 - 136), v0, (uint64_t *)(v1 - 104));
}

uint64_t sub_23FCCC6F0()
{
  return type metadata accessor for SessionSwitchboard.SessionInfo();
}

uint64_t sub_23FCCC70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a3, a4);
}

void sub_23FCCC71C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(v0, v1);
}

uint64_t sub_23FCCC728()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_23FCCC740()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCCC750()
{
  return swift_beginAccess();
}

uint64_t sub_23FCCC768(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FCCC780(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_23FCCC790()
{
  return swift_release();
}

uint64_t sub_23FCCC7A8()
{
  return swift_endAccess();
}

uint64_t sub_23FCCC7B0@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = (char *)a1 + *a1;
  return swift_retain();
}

uint64_t sub_23FCCC7C8()
{
  return swift_willThrowTypedImpl();
}

uint64_t sub_23FCCC7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 176) = (char *)&a9 - v9;
  return sub_23FD72BF0();
}

uint64_t sub_23FCCC7E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_23FCCC7FC()
{
  uint64_t v0;

  return v0 + 133;
}

uint64_t sub_23FCCC810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_23FCCC154(a11, a14);
}

uint64_t sub_23FCCC824(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_23FCCC878()
{
  return sub_23FD75044();
}

uint64_t sub_23FCCC884()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCCC88C()
{
  return sub_23FD75044();
}

uint64_t sub_23FCCC8BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 216);
}

uint64_t sub_23FCCC8D8()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v1);
}

uint64_t sub_23FCCC8EC()
{
  return 12;
}

uint64_t sub_23FCCC924(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_23FC9DC40(v3, v4, a3);
}

uint64_t sub_23FCCC930()
{
  return type metadata accessor for SessionSwitchboard.SessionInfo();
}

uint64_t sub_23FCCC938()
{
  return swift_bridgeObjectRelease_n();
}

void sub_23FCCC944(void *a1)
{
  free(a1);
}

uint64_t sub_23FCCC94C()
{
  return swift_bridgeObjectRetain();
}

__n128 sub_23FCCC958(uint64_t a1)
{
  uint64_t v1;

  return *(__n128 *)(*(_QWORD *)(v1 + 56) + 56 * a1 + 32);
}

uint64_t sub_23FCCC974()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCCC99C()
{
  uint64_t v0;

  return sub_23FCCB4A0(v0);
}

uint64_t sub_23FCCC9A4()
{
  return swift_bridgeObjectRelease();
}

void sub_23FCCC9AC(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

uint64_t sub_23FCCC9B4()
{
  uint64_t v0;

  return sub_23FCCB4A0(v0);
}

void sub_23FCCC9BC()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23FBFEF40(v2, v0, v1);
}

void sub_23FCCC9D8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

void sub_23FCCC9E0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

uint64_t sub_23FCCC9E8()
{
  return swift_willThrowTypedImpl();
}

uint64_t sub_23FCCC9F0()
{
  uint64_t v0;

  return v0;
}

void sub_23FCCC9FC()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_23FBFEEB0(v1, v2, v0);
}

uint64_t sub_23FCCCA0C()
{
  return sub_23FD75044();
}

void sub_23FCCCA1C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FBFEF40(a1, a2, v2);
}

uint64_t sub_23FCCCA24()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FC9DC40(v1, v0, (uint64_t *)(v2 - 80));
}

uint64_t sub_23FCCCA40()
{
  return sub_23FD724C4();
}

uint64_t sub_23FCCCA48()
{
  return swift_endAccess();
}

uint64_t sub_23FCCCA50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FCCCA58(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FCCCA80()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 376);
}

uint64_t sub_23FCCCA98()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23FCCCAA8(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_23FCCCAC4()
{
  return type metadata accessor for SessionID(0);
}

uint64_t sub_23FCCCAD0()
{
  return swift_release();
}

uint64_t sub_23FCCCAD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23FCCC154(a2, a1);
}

uint64_t sub_23FCCCAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(void))
{
  return a20();
}

uint64_t sub_23FCCCAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a3, *(_QWORD *)(v3 - 112));
}

uint64_t sub_23FCCCAF4()
{
  return swift_allocObject();
}

uint64_t sub_23FCCCAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(void))
{
  return a24();
}

uint64_t sub_23FCCCB04()
{
  return swift_bridgeObjectRetain();
}

void sub_23FCCCB0C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

void sub_23FCCCB14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FBFEF40(v4, v3, a3);
}

uint64_t sub_23FCCCB20()
{
  return sub_23FD74D80();
}

void sub_23FCCCB2C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FBFEF18(v2, a2);
}

void sub_23FCCCB34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FBFEF40(v4, v3, a3);
}

void sub_23FCCCB40(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FBFEF40(a1, v3, a3);
}

void sub_23FCCCB48(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

uint64_t sub_23FCCCB50(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

void sub_23FCCCB70()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
}

void sub_23FCCCB7C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FBFEF40(a1, a2, v2);
}

unint64_t sub_23FCCCB84()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = v0;
  return sub_23FC1E5B4();
}

uint64_t sub_23FCCCB8C()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 136, 0);
}

uint64_t sub_23FCCCB98()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 136, 0);
}

uint64_t sub_23FCCCBB8()
{
  return sub_23FD71450();
}

uint64_t sub_23FCCCBC4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = result;
  return result;
}

uint64_t sub_23FCCCBD0()
{
  return sub_23FD71438();
}

uint64_t sub_23FCCCBD8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), void (*a4)(void))
{
  uint64_t v4;

  return sub_23FCC3B88(v4, a2, a3, a4);
}

uint64_t sub_23FCCCBE4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCCCBEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCCCBF4()
{
  return sub_23FD74D80();
}

uint64_t sub_23FCCCC20()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCCCC34()
{
  return swift_release();
}

uint64_t sub_23FCCCC3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23FCCCC64()
{
  return sub_23FD71AE0();
}

uint64_t sub_23FCCCCAC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 400) = *(_QWORD *)(result + *(int *)(*(_QWORD *)(v1 + 256) + 28));
  return result;
}

uint64_t sub_23FCCCCC0()
{
  return swift_task_create();
}

uint64_t sub_23FCCCCD4(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC950A8(a1, v1);
}

void sub_23FCCCCDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23FBFEF40(a1, v1, v2);
}

void sub_23FCCCCF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FBFEF40(a1, v3, a3);
}

uint64_t sub_23FCCCD10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCCCD24()
{
  return sub_23FD72BE4();
}

void sub_23FCCCD2C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FBFEF40(a1, a2, v2);
}

uint64_t sub_23FCCCD34()
{
  uint64_t v0;

  return v0;
}

void sub_23FCCCD48(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FBFEF40(a1, v3, a3);
}

void sub_23FCCCD50(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23FBFEF40(a1, v1, v2);
}

uint64_t sub_23FCCCD5C()
{
  return swift_slowAlloc();
}

unint64_t sub_23FCCCD68()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = v0;
  return sub_23FC1E5B4();
}

uint64_t sub_23FCCCD70()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCCCD7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FCCCD84()
{
  return type metadata accessor for SessionID(0);
}

void sub_23FCCCD8C()
{
  uint64_t v0;

  **(_BYTE **)(v0 - 152) = *(_BYTE *)(v0 - 65);
}

uint64_t sub_23FCCCDA0(unsigned int a1, int a2)
{
  return a2 & a1;
}

_QWORD *sub_23FCCCDA8(_QWORD *(*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = a1(&v3);
  if (!v1)
    return (_QWORD *)v3;
  return result;
}

uint64_t sub_23FCCCDD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientProxy);
  swift_beginAccess();
  v2 = *v1;
  if (v2)
  {
    type metadata accessor for TransactionHookContainer();
    v3 = swift_allocObject();
    swift_retain();
    swift_defaultActor_initialize();
    *(_BYTE *)(v3 + 112) = 0;
    *(_QWORD *)(v3 + 120) = v2;
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_transactionHookContainer) = v3;
  return swift_release();
}

uint64_t sub_23FCCCE70()
{
  sub_23FC75394();
  return swift_retain();
}

uint64_t sub_23FCCCEB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientProxy);
  swift_beginAccess();
  *v3 = a1;
  swift_retain();
  swift_release();
  sub_23FCCCDD8();
  return sub_23FC101F4();
}

uint64_t sub_23FCCCF1C()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_23FCCCF5C();
}

uint64_t sub_23FCCCF5C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char **p_type;
  uint64_t v81;
  uint64_t i;
  char v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  objc_class *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  _QWORD v116[2];
  unint64_t v117;
  const char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t ObjectType;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  objc_super v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  sub_23FC061F0();
  v145 = v1;
  v146 = v2;
  v4 = v3;
  v6 = v5;
  ObjectType = swift_getObjectType();
  sub_23FC5EA38();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v9, v10);
  v124 = (char *)v116 - v11;
  v136 = sub_23FD72620();
  v132 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136, v12);
  sub_23FBFEFCC();
  v130 = v13;
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v116 - v18;
  v20 = sub_23FD72BF0();
  v133 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC0FFCC();
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (char *)v116 - v27;
  MEMORY[0x24BDAC7A8](v26, v29);
  *(_QWORD *)&v0[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientProxy] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_transactionHookContainer] = 0;
  v30 = OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_jsonDecoder;
  sub_23FD71294();
  sub_23FBFF1C4();
  v31 = v0;
  *(_QWORD *)&v0[v30] = sub_23FD71288();
  v32 = OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_jsonEncoder;
  sub_23FD712B8();
  sub_23FBFF1C4();
  v33 = sub_23FD712AC();
  v131 = v31;
  *(_QWORD *)&v31[v32] = v33;
  result = sub_23FD72614();
  v123 = result;
  v128 = v35;
  if (!v35)
  {
    __break(1u);
    return result;
  }
  v36 = (void *)sub_23FCD5138();
  v37 = objc_msgSend(v4, sel_valueForEntitlement_, v36);

  if (v37)
  {
    sub_23FCD52CC();
    swift_unknownObjectRelease();
  }
  else
  {
    v140 = 0u;
    v141 = 0u;
  }
  v38 = sub_23FCD512C();
  v134 = v4;
  v135 = v6;
  v129 = v20;
  v119 = (unint64_t)v28;
  if (v144)
  {
    if ((sub_23FCD4FCC() & 1) != 0)
    {
      v120 = v137;
      v121 = v138;
      goto LABEL_14;
    }
  }
  else
  {
    sub_23FCD52C4(v38, &qword_254346A38);
  }
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v39 = v132;
  v40 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v19, v6, v136);
  v41 = sub_23FD72BE4();
  v42 = sub_23FD74F54();
  if (sub_23FC756C0(v41))
  {
    v43 = (uint8_t *)sub_23FBFEFF4();
    v121 = sub_23FBFEFF4();
    v142 = v121;
    *(_DWORD *)v43 = 136315138;
    v44 = sub_23FD72614();
    if (!v45)
      v44 = 0x6E776F6E6B6E75;
    v46 = sub_23FCD510C(v44);
    sub_23FCB30F0(v46);
    sub_23FD75044();
    sub_23FC1002C();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v40);
    sub_23FBFF114(&dword_23FBF8000, v41, v42, "SessionXPCServiceServer: client %s is missing group-identifier entitlement. This will become a hard error in the future.", v43);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FBFF204((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));

  sub_23FCD50F8();
  sub_23FCD5254();
  v4 = v134;
LABEL_14:
  v47 = v20;
  sub_23FCD5240();
  v48 = (void *)sub_23FCD5138();
  v49 = objc_msgSend(v4, sel_valueForEntitlement_, v48);

  v50 = v130;
  if (v49)
  {
    sub_23FCD52CC();
    swift_unknownObjectRelease();
  }
  else
  {
    v140 = 0u;
    v141 = 0u;
  }
  v51 = v136;
  v52 = v122;
  v53 = sub_23FCD512C();
  if (!v144)
  {
    sub_23FCD52C4(v53, &qword_254346A38);
    goto LABEL_53;
  }
  sub_23FBFD684((uint64_t *)&unk_256F61630);
  if ((sub_23FCD4FCC() & 1) == 0)
  {
LABEL_53:
    v70 = v119;
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    v71 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v52, v135, v51);
    v72 = sub_23FD72BE4();
    v73 = sub_23FD74F54();
    if (sub_23FC756C0(v72))
    {
      v74 = (uint8_t *)sub_23FBFEFF4();
      v122 = (char *)sub_23FBFEFF4();
      v142 = (uint64_t)v122;
      *(_DWORD *)v74 = 136315138;
      v75 = sub_23FD72614();
      if (!v76)
        v75 = 0x6E776F6E6B6E75;
      v77 = sub_23FCD510C(v75);
      sub_23FCB30F0(v77);
      sub_23FD75044();
      sub_23FC1002C();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v136);
      sub_23FBFF114(&dword_23FBF8000, v72, v73, "SessionXPCServiceServer: client %s is missing com.apple.intelligenceflow.orchestrator.features entitlement. This will become a hard error in the future.", v74);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v51);

    (*(void (**)(unint64_t, uint64_t))(v133 + 8))(v70, v47);
    v78 = 3;
    p_type = (char **)(&stru_251018FF0 + 16);
    v4 = v134;
    v79 = v135;
    v50 = v130;
    goto LABEL_64;
  }
  v54 = v137;
  v55 = *(_QWORD *)(v137 + 16);
  if (!v55)
  {
    p_type = &stru_251018FF0.type;
    v57 = MEMORY[0x24BEE4AF8];
    v79 = v135;
    goto LABEL_59;
  }
  sub_23FC5AFCC();
  v56 = (uint64_t *)(v54 + 40);
  v57 = MEMORY[0x24BEE4AF8];
  v122 = "transcript-manipulation";
  v118 = "executable-session";
  v119 = 0x800000023FD85390;
  v116[1] = "side-channel-debugging";
  v117 = 0x800000023FD853B0;
  do
  {
    v58 = *(v56 - 1);
    v59 = *v56;
    v60 = v58 == 0x2D72656E6E616C70 && v59 == 0xEC000000796C6E6FLL;
    if (v60 || (sub_23FCD4F8C() & 1) != 0)
    {
      v61 = 1;
    }
    else
    {
      sub_23FCD5240();
      if (v58 == v64 && v59 == 0x800000023FD85370 || (sub_23FCD4F8C() & 1) != 0)
      {
        v61 = 3;
      }
      else
      {
        v65 = v58 == 0x6E69676775626564 && v59 == 0xE900000000000067;
        if (v65 || (sub_23FCD4F8C() & 1) != 0)
        {
          v61 = 4;
        }
        else
        {
          sub_23FCD5240();
          if (v58 == v66 + 4 && v59 == v119 || (sub_23FCD4F8C() & 1) != 0)
          {
            v61 = 8;
          }
          else
          {
            sub_23FCD5240();
            if ((v58 != v67 + 5 || v59 != v117) && (sub_23FCD4F8C() & 1) == 0)
              goto LABEL_32;
            v61 = 16;
          }
        }
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FCD530C();
      v57 = v68;
    }
    v63 = *(_QWORD *)(v57 + 16);
    v62 = *(_QWORD *)(v57 + 24);
    if (v63 >= v62 >> 1)
    {
      sub_23FC10354(v62);
      sub_23FCD530C();
      v57 = v69;
    }
    *(_QWORD *)(v57 + 16) = v63 + 1;
    *(_BYTE *)(v57 + v63 + 32) = v61;
LABEL_32:
    v56 += 2;
    --v55;
  }
  while (v55);
  sub_23FC1002C();
  v4 = v134;
  v79 = v135;
  v51 = v136;
  v50 = v130;
  p_type = (char **)(&stru_251018FF0 + 16);
LABEL_59:
  sub_23FC1002C();
  v81 = *(_QWORD *)(v57 + 16);
  if (v81)
  {
    v78 = 0;
    for (i = 0; i != v81; ++i)
    {
      v83 = *(_BYTE *)(v57 + i + 32);
      v78 |= v83;
    }
    sub_23FC15A24();
  }
  else
  {
    sub_23FC15A24();
    v78 = 0;
  }
LABEL_64:
  sub_23FCD5240();
  v84 = (void *)sub_23FCD5138();
  v85 = objc_msgSend(v4, p_type[147], v84);

  if (v85)
  {
    sub_23FD75074();
    swift_unknownObjectRelease();
  }
  else
  {
    v140 = 0u;
    v141 = 0u;
  }
  v86 = v132;
  v87 = sub_23FCD512C();
  if (v144)
  {
    if (sub_23FCD4FCC() && (_BYTE)v137)
      v78 |= 0x10u;
  }
  else
  {
    sub_23FCD52C4(v87, &qword_254346A38);
  }
  v88 = v127;
  sub_23FD72008();
  v89 = sub_23FD72638();
  sub_23FC15A24();
  if (v89 & 1 | ((v78 & 0x10) == 0))
    v90 = v78;
  else
    v90 = v78 & 0xEF;
  v91 = v131;
  v131[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientCapabilities] = v90;
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v50, v79, v51);
  v92 = sub_23FD72BE4();
  v93 = sub_23FD74F3C();
  if (sub_23FC15918(v93))
  {
    v94 = sub_23FBFEFF4();
    v142 = sub_23FBFEFF4();
    *(_DWORD *)v94 = 136315394;
    v95 = sub_23FD72614();
    if (!v96)
      v95 = 0x6E776F6E6B6E75;
    v97 = sub_23FCD510C(v95);
    sub_23FCB30F0(v97);
    sub_23FD75044();
    sub_23FC1002C();
    sub_23FCD5118();
    *(_WORD *)(v94 + 12) = 256;
    LOBYTE(v140) = v90;
    sub_23FD75044();
    _os_log_impl(&dword_23FBF8000, v92, (os_log_type_t)v51, "SessionXPCServiceServer: client %s has entitled capabilities %hhu.", (uint8_t *)v94, 0xFu);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FCD5118();

  v133 = *(_QWORD *)(v133 + 8);
  ((void (*)(uint64_t, uint64_t))v133)(v88, v129);
  v98 = v128;
  v99 = (uint64_t *)&v91[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack];
  *v99 = v123;
  v99[1] = v98;
  v100 = v121;
  v99[2] = v120;
  v99[3] = v100;
  sub_23FC5A09C();
  sub_23FC75E34();
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  sub_23FC75E34();
  sub_23FC5A09C();
  v101 = sub_23FD72BE4();
  v102 = sub_23FD74F6C();
  if (sub_23FC15918(v102))
  {
    v103 = (uint8_t *)sub_23FBFEFF4();
    v104 = sub_23FBFEFF4();
    v130 = v104;
    *(_DWORD *)v103 = 136315138;
    *(_QWORD *)&v140 = v104;
    v142 = 0x7C4449433CLL;
    v143 = 0xE500000000000000;
    sub_23FC75E34();
    sub_23FD74C48();
    swift_bridgeObjectRelease();
    sub_23FD74C48();
    swift_bridgeObjectRetain();
    sub_23FD74C48();
    sub_23FC5A56C();
    sub_23FD74C48();
    v142 = sub_23FC9DC40(v142, v143, (uint64_t *)&v140);
    sub_23FD75044();
    sub_23FC10048();
    sub_23FC10048();
    sub_23FC1002C();
    sub_23FBFF114(&dword_23FBF8000, v101, (os_log_type_t)v51, "SessionXPCServiceServer Client ID: %s", v103);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }

  sub_23FC10048();
  sub_23FC10048();
  v105 = sub_23FC5CCE8();
  ((void (*)(uint64_t))v133)(v105);
  v106 = v134;
  v107 = (objc_class *)ObjectType;
  v108 = v125;
  v109 = (uint64_t)v124;
  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  v110 = (uint64_t)&v91[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionClientId];
  sub_23FCD4B4C(v109, (uint64_t)&v91[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionClientId], (void (*)(_QWORD))type metadata accessor for SessionClientID);
  v113 = v136;
  if (qword_256F5D2D0 != -1)
    v111 = swift_once();
  MEMORY[0x24BDAC7A8](v111, v112);
  v116[-2] = sub_23FCCDE68;
  v116[-1] = 0;
  type metadata accessor for SessionSwitchboard();
  sub_23FD74FA8();
  v114 = v142;
  sub_23FC5806C(v109, type metadata accessor for SessionClientID);
  sub_23FCD4B4C(v110, v108, (void (*)(_QWORD))type metadata accessor for SessionClientID);
  type metadata accessor for ClientSessionManager(0);
  sub_23FBFF1C4();
  *(_QWORD *)&v91[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionManager] = sub_23FC18A2C(v108, v114);

  v139.receiver = v91;
  v139.super_class = v107;
  v115 = objc_msgSendSuper2(&v139, sel_init);

  ((void (*)(uint64_t, uint64_t))v132)(v135, v113);
  return (uint64_t)v115;
}

uint64_t sub_23FCCDDD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    LODWORD(v2) = 0;
    v3 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~(_DWORD)v2) == 0)
        v4 = 0;
      v2 = v4 | v2;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23FCCDE28(uint64_t result)
{
  _BYTE *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_23FCCDE38(unsigned __int8 a1)
{
  char *v1;
  char v2;

  v2 = *v1;
  if ((*v1 & a1) != 0)
    *v1 = v2 & ~a1;
  return (v2 & a1) | (((v2 & a1) == 0) << 8);
}

uint64_t sub_23FCCDE68@<X0>(_QWORD *a1@<X8>)
{
  if (qword_256F5D2E0 != -1)
    swift_once();
  *a1 = qword_256F7F4B8;
  return swift_retain();
}

void sub_23FCCDEC4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  sub_23FCD5344();
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = sub_23FCD4F08();
  sub_23FCD4F24(v5);
  v6 = sub_23FC58AA0();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v1;
  v7 = (_QWORD *)sub_23FC58AA0();
  sub_23FCD5144(v7);
  v8 = v0;
  sub_23FCD5288();
  sub_23FCD4FA8();
  sub_23FCD5230();
  swift_release();
  sub_23FC58ADC();
  sub_23FC58C6C();
  sub_23FCD505C();
  sub_23FC6264C();
}

uint64_t sub_23FCCDF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  type metadata accessor for SessionClientID(0);
  v4[18] = swift_task_alloc();
  v5 = sub_23FD72BF0();
  v4[19] = v5;
  v4[20] = *(_QWORD *)(v5 - 8);
  v4[21] = swift_task_alloc();
  v6 = sub_23FD72068();
  v4[22] = v6;
  v4[23] = *(_QWORD *)(v6 - 8);
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCCE01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 136);
  sub_23FBFEE2C(&qword_256F617B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE53BE0], MEMORY[0x24BE53BF0]);
  sub_23FCD4F6C();
  if (v1)
  {
    swift_task_dealloc();
    sub_23FC090D0();
    sub_23FC090C0();
    v2 = (uint64_t (*)(void))sub_23FCAB854();
    return sub_23FC8A2D0(v2);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 200) = *(_QWORD *)(v4
                                      + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionManager);
    v5 = (uint64_t *)(v4 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientProxy);
    sub_23FC75394();
    result = *v5;
    *(_QWORD *)(v0 + 208) = *v5;
    if (result)
    {
      v6 = *(_QWORD *)(v0 + 120);
      v7 = (_QWORD *)(v6 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack);
      v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack);
      *(_QWORD *)(v0 + 216) = v8;
      v9 = v7[1];
      *(_QWORD *)(v0 + 224) = v9;
      v10 = v7[2];
      *(_QWORD *)(v0 + 232) = v10;
      v11 = v7[3];
      *(_QWORD *)(v0 + 240) = v11;
      *(_QWORD *)(v0 + 16) = v8;
      *(_QWORD *)(v0 + 24) = v9;
      *(_QWORD *)(v0 + 32) = v10;
      *(_QWORD *)(v0 + 40) = v11;
      *(_BYTE *)(v0 + 272) = *(_BYTE *)(v6
                                      + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientCapabilities);
      v12 = qword_256F5D2D8;
      swift_retain();
      sub_23FC5AFCC();
      swift_bridgeObjectRetain();
      if (v12 != -1)
        swift_once();
      *(_QWORD *)(v0 + 248) = sub_23FC5EA48();
      sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
      *(_QWORD *)(v0 + 256) = v13;
      sub_23FD74D80();
      sub_23FCCC9CC();
      sub_23FCCCA34();
      return sub_23FC75184();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23FCCE1B0()
{
  sub_23FC18AB4();
  sub_23FC101F4();
  swift_bridgeObjectRelease();
  sub_23FC1002C();
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FCCE208()
{
  uint64_t v0;
  char v1;
  char v2;
  NSObject *v3;
  void *v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;

  if ((sub_23FD7205C() & 1) == 0)
  {
LABEL_8:
    v2 = 0;
    goto LABEL_9;
  }
  if ((*(_BYTE *)(v0 + 272) & 8) == 0 || (sub_23FD72008(), v1 = sub_23FD72638(), sub_23FC1002C(), (v1 & 1) == 0))
  {
    v3 = *(NSObject **)(v0 + 168);
    v4 = *(void **)(v0 + 120);
    sub_23FCD5044();
    v5 = v4;
    sub_23FD72BE4();
    v6 = sub_23FC09250();
    if (os_log_type_enabled(v3, v6))
    {
      v16 = *(void **)(v0 + 120);
      v7 = (uint8_t *)sub_23FBFEFF4();
      sub_23FBFEFF4();
      *(_DWORD *)v7 = 136315138;
      v8 = sub_23FC5A09C();
      *(_QWORD *)(v0 + 104) = sub_23FCD51B0(v8, v9, v10, v11);
      sub_23FD75044();
      sub_23FC5A56C();

      sub_23FBFF114(&dword_23FBF8000, v3, v6, "SessionCoordinator (client: %s) requested to be a debugger but does not have the required entitlement or the system security policy does not allow it.", v7);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    v13 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    goto LABEL_8;
  }
  v2 = 1;
LABEL_9:
  *(_BYTE *)(v0 + 273) = v2;
  sub_23FD74D80();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return swift_task_switch();
}

uint64_t sub_23FCCE3D0()
{
  if (qword_256F5D2E0 != -1)
    swift_once();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCCE420()
{
  sub_23FD74D80();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0907C();
}

uint64_t sub_23FCCE45C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 264) = qword_256F7F4B8;
  return sub_23FCD4F9C();
}

uint64_t sub_23FCCE474()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC764BC();
  v1 = v0[29];
  v2 = v0[30];
  v4 = v0[27];
  v3 = v0[28];
  sub_23FCD4B4C(v0[15] + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionClientId, v0[18], (void (*)(_QWORD))type metadata accessor for SessionClientID);
  v0[6] = v4;
  v0[7] = v3;
  v0[8] = v1;
  v0[9] = v2;
  sub_23FC5C20C();
  sub_23FC5AC34();
  sub_23FCD5198();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0906C();
}

uint64_t sub_23FCCE4F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  sub_23FCC5184(v1, *(_QWORD *)(v0 + 200), (uint64_t *)(v0 + 48), *(_BYTE *)(v0 + 273));
  swift_bridgeObjectRelease();
  sub_23FC1002C();
  sub_23FC5806C(v1, type metadata accessor for SessionClientID);
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FCCE560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(uint64_t **)(v0 + 112);
  sub_23FCD4FA8();
  v3 = sub_23FCD5030();
  sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  *v2 = v3;
  sub_23FC090C0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  v4 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5D3B4(v4);
}

void sub_23FCCE5E8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  sub_23FC061F0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = sub_23FCD4F08();
  sub_23FCD4F24(v14);
  v15 = (_QWORD *)sub_23FC58AA0();
  v15[2] = v0;
  v15[3] = v7;
  v15[4] = v5;
  v15[5] = v3;
  v15[6] = v11;
  v15[7] = v9;
  v16 = v0;
  sub_23FC577F4(v7, v5);
  sub_23FBFF104();
  sub_23FCD532C();
  sub_23FC5C20C();
  sub_23FD74E70();
  swift_release();
  sub_23FC101F4();
  sub_23FC584B0(v1, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FCCE6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a4;
  v7[24] = a5;
  v7[21] = a2;
  v7[22] = a3;
  v7[20] = a1;
  type metadata accessor for SessionID(0);
  v7[27] = swift_task_alloc();
  type metadata accessor for SessionIdentityPack(0);
  v7[28] = swift_task_alloc();
  v7[29] = swift_task_alloc();
  v8 = sub_23FD72BF0();
  v7[30] = v8;
  v7[31] = *(_QWORD *)(v8 - 8);
  v7[32] = swift_task_alloc();
  v7[33] = swift_task_alloc();
  v7[34] = swift_task_alloc();
  v9 = sub_23FD71EE8();
  v7[35] = v9;
  v7[36] = *(_QWORD *)(v9 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  v7[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCCE7D8()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[5];

  v1 = *(void **)(v0 + 184);
  sub_23FBFEE2C(&qword_256F61788, (uint64_t (*)(uint64_t))MEMORY[0x24BE53898], MEMORY[0x24BE538A8]);
  sub_23FCD4F6C();
  if (v1)
  {
    v2 = *(NSObject **)(v0 + 256);
    v3 = *(void **)(v0 + 168);
    sub_23FCD5044();
    v4 = v3;
    v5 = v1;
    v6 = v4;
    v7 = v1;
    sub_23FD72BE4();
    v8 = sub_23FC09250();
    v9 = os_log_type_enabled(v2, v8);
    v11 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(char **)(v0 + 168);
    if (v9)
    {
      v14 = sub_23FBFEFF4();
      v51 = (_QWORD *)sub_23FBFEFF4();
      v56[0] = sub_23FBFEFF4();
      *(_DWORD *)v14 = 136315394;
      v15 = v1;
      v16 = *(_QWORD *)&v13[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack];
      v17 = *(_QWORD *)&v13[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack
                          + 8];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 144) = sub_23FC9DC40(v16, v17, v56);
      sub_23FCA0F54();
      sub_23FC5A648();

      *(_WORD *)(v14 + 12) = 2112;
      v18 = v15;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 112) = v19;
      sub_23FD75044();
      *v51 = v19;
      sub_23FC09074();
      sub_23FC09074();
      sub_23FC59250(&dword_23FBF8000, v2, v8, "SessionCoordinator (client: %s) had error: %@", (uint8_t *)v14);
      sub_23FBFD684(&qword_254346A30);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }

    sub_23FC09074();
    sub_23FC09074();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_23FCD51D0();
    swift_willThrow();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v20 = *(void **)(v0 + 192);
    v21 = *(char **)(v0 + 168);
    v22 = &v21[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack];
    v23 = *(_QWORD *)&v21[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack];
    *(_QWORD *)(v0 + 320) = v23;
    v24 = *((_QWORD *)v22 + 1);
    *(_QWORD *)(v0 + 328) = v24;
    v25 = *((_QWORD *)v22 + 2);
    v26 = *((_QWORD *)v22 + 3);
    *(_QWORD *)(v0 + 336) = v26;
    v56[0] = v23;
    v56[1] = v24;
    v53 = v25;
    v56[2] = v25;
    v56[3] = v26;
    sub_23FC5C20C();
    sub_23FC5A09C();
    sub_23FCCF2CC(v20, v56);
    v55 = v24;
    sub_23FC5A56C();
    v54 = v26;
    sub_23FC103E8();
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    v27 = v21;
    v28 = sub_23FD72BE4();
    v29 = sub_23FD74F6C();
    if (sub_23FCD5220(v29))
    {
      v30 = *(_QWORD *)(v0 + 304);
      v31 = *(_QWORD *)(v0 + 312);
      v49 = *(_QWORD *)(v0 + 288);
      v50 = *(_QWORD *)(v0 + 280);
      v48 = *(void **)(v0 + 168);
      v32 = sub_23FBFEFF4();
      v56[0] = sub_23FBFEFF4();
      *(_DWORD *)v32 = 136315394;
      sub_23FC5C20C();
      *(_QWORD *)(v0 + 136) = sub_23FCD5324(v23, v33, v56);
      sub_23FCD52FC();
      sub_23FC103E8();

      *(_WORD *)(v32 + 12) = 2080;
      sub_23FC75394();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v30, v31, v50);
      sub_23FC5A8DC();
      v34 = sub_23FD74C0C();
      *(_QWORD *)(v0 + 152) = sub_23FC9DC40(v34, v35, v56);
      sub_23FCD52FC();
      sub_23FC5A2A8();
      sub_23FC59250(&dword_23FBF8000, v28, (os_log_type_t)(v0 - 104), "SessionCoordinator (client: %s) created with config %s", (uint8_t *)v32);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    v37 = *(_QWORD *)(v0 + 272);
    v38 = *(_QWORD *)(v0 + 240);
    v39 = *(_QWORD *)(v0 + 248);
    sub_23FCD524C();

    v40 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v40(v37, v38);
    *(_QWORD *)(v0 + 344) = v40;
    v41 = *(_QWORD *)(v0 + 312);
    v42 = *(_QWORD *)(v0 + 288);
    v43 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 208);
    v45 = *(_QWORD *)(v0 + 168);
    v52 = *(_QWORD *)(v0 + 296);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 24) = v44;
    *(_QWORD *)(v0 + 32) = v23;
    *(_QWORD *)(v0 + 40) = v55;
    *(_QWORD *)(v0 + 48) = v53;
    *(_QWORD *)(v0 + 56) = v54;
    v46 = *(_QWORD *)(v45
                    + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_transactionHookContainer);
    *(_QWORD *)(v0 + 352) = v46;
    sub_23FC75394();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v52, v41, v43);
    LOBYTE(v42) = *(_BYTE *)(v45
                           + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientCapabilities);
    sub_23FC5AFCC();
    sub_23FC75E34();
    swift_bridgeObjectRetain();
    swift_retain();
    v47 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v47;
    *v47 = v0;
    v47[1] = sub_23FCCED7C;
    return sub_23FC19914(*(_QWORD *)(v0 + 232), v0 + 16, v46, *(_QWORD *)(v0 + 296), v42, 0);
  }
}

uint64_t sub_23FCCED7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  v3 = v2[37];
  v4 = v2[35];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[36] + 8);
  if (v0)
  {
    v2[48] = v5;
    v5(v3, v4);
    sub_23FC58AC8();
  }
  else
  {
    v2[47] = v5;
    v5(v3, v4);
    sub_23FC58AC8();
    sub_23FC103E8();
    sub_23FC595E0();
    sub_23FC15A24();
  }
  sub_23FC5A9A8();
  return sub_23FC75184();
}

uint64_t sub_23FCCEE28()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v27;

  v1 = (void *)v0[21];
  v2 = sub_23FCD5044();
  sub_23FCD5358(v2, v3, (void (*)(_QWORD))type metadata accessor for SessionIdentityPack);
  v4 = v1;
  v5 = sub_23FD72BE4();
  v6 = sub_23FD74F6C();
  if (sub_23FC756C0(v5))
  {
    v7 = v0[28];
    v8 = (void *)v0[21];
    v9 = sub_23FBFEFF4();
    v27 = sub_23FBFEFF4();
    *(_DWORD *)v9 = 136315394;
    v10 = sub_23FC5A09C();
    v0[15] = sub_23FCD51B0(v10, v11, v12, v13);
    sub_23FD75044();
    sub_23FC5A56C();

    *(_WORD *)(v9 + 12) = 2080;
    v14 = SessionIdentityPack.description.getter();
    v0[16] = sub_23FC9DC40(v14, v15, &v27);
    sub_23FCD52FC();
    sub_23FC103E8();
    sub_23FC5806C(v7, type metadata accessor for SessionIdentityPack);
    sub_23FC59250(&dword_23FBF8000, v5, v6, "SessionCoordinator (client: %s) created with ID %s", (uint8_t *)v9);
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  v16 = (void (*)(uint64_t))v0[43];
  v17 = v0[28];
  sub_23FCD524C();
  sub_23FC5806C(v17, type metadata accessor for SessionIdentityPack);

  v18 = sub_23FBFF1EC();
  v16(v18);
  v19 = (void (*)(uint64_t, uint64_t))v0[47];
  v20 = v0[39];
  v21 = v0[35];
  v22 = v0[29];
  sub_23FCD52B0(v22, v23, (void (*)(_QWORD))type metadata accessor for SessionID);
  sub_23FC5806C(v22, type metadata accessor for SessionIdentityPack);
  v24 = sub_23FBFF104();
  sub_23FBFF088(v24);
  v19(v20, v21);
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5A574();
  sub_23FC5D048();
  sub_23FC090D0();
  v25 = (uint64_t (*)(void))sub_23FC5C528();
  return v25();
}

uint64_t sub_23FCCF074()
{
  uint64_t v0;
  os_log_type_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void *v4;
  NSObject *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  os_log_type_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  id v25;
  uint64_t v26;

  v2 = *(void (**)(uint64_t))(v0 + 384);
  swift_bridgeObjectRelease();
  sub_23FC15A24();
  sub_23FC1002C();
  v3 = sub_23FC5A8DC();
  v2(v3);
  v4 = *(void **)(v0 + 368);
  v5 = *(NSObject **)(v0 + 256);
  v6 = *(void **)(v0 + 168);
  sub_23FCD5044();
  v7 = v6;
  v8 = v4;
  v9 = v7;
  v25 = v4;
  v10 = v4;
  sub_23FD72BE4();
  v11 = sub_23FC09250();
  if (sub_23FC75E24(v11))
  {
    v12 = *(char **)(v0 + 168);
    v13 = sub_23FBFEFF4();
    v14 = (_QWORD *)sub_23FBFEFF4();
    v26 = sub_23FBFEFF4();
    *(_DWORD *)v13 = 136315394;
    v15 = *(_QWORD *)&v12[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack];
    v16 = *(_QWORD *)&v12[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack
                        + 8];
    sub_23FC5C20C();
    v18 = sub_23FCD5324(v15, v17, &v26);
    sub_23FCD5084(v18);
    sub_23FC103E8();

    *(_WORD *)(v13 + 12) = 2112;
    v19 = v25;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    sub_23FCD5068(v20);
    *v14 = v16;

    sub_23FC59250(&dword_23FBF8000, v5, v1, "SessionCoordinator (client: %s) had error: %@", (uint8_t *)v13);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v21 = *(void **)(v0 + 168);

  v22 = sub_23FC5A8DC();
  v23(v22);
  sub_23FCD51D0();
  swift_willThrow();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23FCCF2CC(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  xpc_object_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  size_t count;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  size_t v61;
  __int128 v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  size_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  void (*v81)(uint64_t *, _QWORD);
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  char *v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  xpc_object_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[4];
  uint64_t v116;

  v3 = v2;
  v111 = a1;
  v5 = sub_23FD72BF0();
  v113 = *(_QWORD *)(v5 - 8);
  v114 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)v96 - v12;
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v102 = (char *)v96 - v16;
  MEMORY[0x24BDAC7A8](v15, v17);
  v106 = (char *)v96 - v18;
  v19 = sub_23FBFD684(&qword_256F5E2F0);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v109 = (char *)v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  v105 = (char *)v96 - v24;
  v110 = sub_23FD71CB4();
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110, v25);
  v107 = (char *)v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23FBFD684(&qword_256F61790);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v100 = (char *)v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = (char *)v96 - v32;
  v34 = sub_23FD71D20();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v36);
  v38 = (char *)v96 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a2[1];
  v112 = *a2;
  v40 = a2[3];
  v101 = v3;
  sub_23FD71E88();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v33, 1, v34) != 1)
  {
    v45 = v39;
    v103 = v40;
    v104 = v38;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v38, v33, v34);
    sub_23FD72014();
    v46 = sub_23FD74C18();
    swift_bridgeObjectRelease();
    v47 = xpc_dictionary_get_value(v111, (const char *)(v46 + 32));
    swift_release();
    v48 = v34;
    if (v47)
    {
      v49 = MEMORY[0x242679A04](v47);
      if (v49 == sub_23FD74264())
      {
        count = xpc_array_get_count(v47);
        v58 = v104;
        v59 = *(_QWORD *)(sub_23FD71D14() + 16);
        swift_bridgeObjectRelease();
        v99 = v34;
        v111 = v47;
        if (count == v59)
        {
          v60 = *(_QWORD *)(sub_23FD71D14() + 16);
          swift_bridgeObjectRelease();
          v61 = xpc_array_get_count(v47);
          if ((v61 & 0x8000000000000000) == 0)
          {
            LOBYTE(v116) = 0;
            v63 = v45;
            v65 = (uint64_t)v105;
            v64 = v106;
            v66 = v110;
            if (!v60 || !v61)
            {
LABEL_37:
              v94 = v99;
              v95 = (uint64_t)v100;
              (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v100, v58, v99);
              _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v95, 0, 1, v94);
              sub_23FD71E94();
              swift_unknownObjectRelease();
              v54 = *(void (**)(char *, uint64_t))(v35 + 8);
              v55 = v58;
              v56 = v94;
              goto LABEL_38;
            }
            v67 = 0;
            v68 = v60 - 1;
            *(_QWORD *)&v62 = 136315394;
            v97 = v62;
            v96[1] = MEMORY[0x24BEE4AD8] + 8;
            v102 = (char *)v61;
            v98 = v60 - 1;
            while (v61 != v67)
            {
              v69 = xpc_array_get_value(v111, v67);
              v70 = MEMORY[0x242679A04]();
              if (v70 == sub_23FD74258())
              {
                swift_unknownObjectRelease();
              }
              else
              {
                swift_unknownObjectRetain();
                sub_23FD71CA8();
                if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v65, 1, v66) == 1)
                {
                  sub_23FC584B0(v65, &qword_256F5E2F0);
                  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v71 = sub_23FD72BE4();
                  v72 = sub_23FD74F54();
                  if (os_log_type_enabled(v71, v72))
                  {
                    v73 = swift_slowAlloc();
                    v74 = swift_slowAlloc();
                    v115[0] = v74;
                    *(_DWORD *)v73 = v97;
                    swift_bridgeObjectRetain();
                    *(_QWORD *)(v73 + 4) = sub_23FC9DC40(v112, v63, v115);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v73 + 12) = 2048;
                    *(_QWORD *)(v73 + 14) = v67;
                    _os_log_impl(&dword_23FBF8000, v71, v72, "SessionCoordinator (client: %s) Client identity token at %ld is invalid", (uint8_t *)v73, 0x16u);
                    swift_arrayDestroy();
                    v75 = v74;
                    v58 = v104;
                    MEMORY[0x2426798D8](v75, -1, -1);
                    v76 = v73;
                    v64 = v106;
                    MEMORY[0x2426798D8](v76, -1, -1);
                    swift_unknownObjectRelease();

                  }
                  else
                  {

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_unknownObjectRelease();
                  }
                  (*(void (**)(char *, uint64_t))(v113 + 8))(v64, v114);
                  v65 = (uint64_t)v105;
                  v66 = v110;
                  v68 = v98;
                }
                else
                {
                  v78 = v107;
                  v77 = v108;
                  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v107, v65, v66);
                  v79 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
                  v80 = (uint64_t)v109;
                  v79(v109, v78, v66);
                  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v80, 0, 1, v66);
                  v81 = (void (*)(uint64_t *, _QWORD))sub_23FD71D08();
                  v83 = v82;
                  v84 = *v82;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *v83 = v84;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_23FCCB880();
                    v84 = v86;
                    *v83 = v86;
                  }
                  v66 = v110;
                  if (v67 >= *(_QWORD *)(v84 + 16))
                    goto LABEL_41;
                  sub_23FD71738();
                  sub_23FD71720();
                  v81(v115, 0);
                  swift_unknownObjectRelease();
                  (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v66);
                  v64 = v106;
                }
              }
              v61 = (size_t)v102;
              if ((v116 & 1) == 0 && v68 != v67 && v102 != (char *)++v67)
                continue;
              goto LABEL_37;
            }
            __break(1u);
            __break(1u);
LABEL_41:
            __break(1u);
          }
          __break(1u);
          return;
        }
        v87 = v102;
        _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
        swift_bridgeObjectRetain_n();
        v88 = v45;
        swift_bridgeObjectRetain_n();
        v89 = sub_23FD72BE4();
        v90 = sub_23FD74F54();
        if (!os_log_type_enabled(v89, v90))
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v113 + 8))(v87, v114);
          v54 = *(void (**)(char *, uint64_t))(v35 + 8);
          v55 = v58;
          goto LABEL_10;
        }
        v91 = v87;
        v92 = (uint8_t *)swift_slowAlloc();
        v93 = swift_slowAlloc();
        v115[0] = v93;
        *(_DWORD *)v92 = 136315138;
        swift_bridgeObjectRetain();
        v116 = sub_23FC9DC40(v112, v88, v115);
        sub_23FD75044();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23FBF8000, v89, v90, "SessionCoordinator (client: %s) Client provided incorrect length XPC object", v92, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2426798D8](v93, -1, -1);
        MEMORY[0x2426798D8](v92, -1, -1);

        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v113 + 8))(v91, v114);
LABEL_9:
        v54 = *(void (**)(char *, uint64_t))(v35 + 8);
        v55 = v104;
LABEL_10:
        v56 = v99;
LABEL_38:
        v54(v55, v56);
        return;
      }
      swift_unknownObjectRelease();
    }
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v50 = sub_23FD72BE4();
    v51 = sub_23FD74F54();
    if (!os_log_type_enabled(v50, v51))
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v113 + 8))(v13, v114);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v104, v48);
      return;
    }
    v99 = v48;
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = swift_slowAlloc();
    v115[0] = v53;
    *(_DWORD *)v52 = 136315138;
    swift_bridgeObjectRetain();
    v116 = sub_23FC9DC40(v112, v45, v115);
    sub_23FD75044();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23FBF8000, v50, v51, "SessionCoordinator (client: %s) Client provided incorrect XPC object types", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v53, -1, -1);
    MEMORY[0x2426798D8](v52, -1, -1);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v13, v114);
    goto LABEL_9;
  }
  sub_23FC584B0((uint64_t)v33, &qword_256F61790);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = sub_23FD72BE4();
  v42 = sub_23FD74F54();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v115[0] = v44;
    *(_DWORD *)v43 = 136315138;
    swift_bridgeObjectRetain();
    v116 = sub_23FC9DC40(v112, v39, v115);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23FBF8000, v41, v42, "SessionCoordinator (client: %s) Client provided no identities", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v44, -1, -1);
    MEMORY[0x2426798D8](v43, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v113 + 8))(v9, v114);
}

void sub_23FCCFEE8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_23FCD4F08();
  sub_23FCD4F24(v11);
  v12 = (_QWORD *)sub_23FC58AA0();
  v12[2] = v0;
  v12[3] = v6;
  v12[4] = v4;
  v12[5] = v2;
  v12[6] = v8;
  v13 = v0;
  sub_23FC577F4(v6, v4);
  sub_23FBFF104();
  sub_23FCD532C();
  sub_23FC5C20C();
  sub_23FD74E70();
  swift_release();
  swift_release();
  sub_23FCD505C();
  sub_23FC060D4();
}

uint64_t sub_23FCCFFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[24] = a5;
  v6[25] = a6;
  v6[22] = a3;
  v6[23] = a4;
  v6[20] = a1;
  v6[21] = a2;
  type metadata accessor for SessionID(0);
  v6[26] = swift_task_alloc();
  type metadata accessor for SessionIdentityPack(0);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  v7 = sub_23FD72BF0();
  v6[29] = v7;
  v6[30] = *(_QWORD *)(v7 - 8);
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  v6[34] = swift_task_alloc();
  v8 = sub_23FD740CC();
  v6[35] = v8;
  v6[36] = *(_QWORD *)(v8 - 8);
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  sub_23FD72380();
  v6[39] = swift_task_alloc();
  v9 = sub_23FD73850();
  v6[40] = v9;
  v6[41] = *(_QWORD *)(v9 - 8);
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v10 = sub_23FD71EE8();
  v6[45] = v10;
  v6[46] = *(_QWORD *)(v10 - 8);
  v6[47] = swift_task_alloc();
  v6[48] = swift_task_alloc();
  v6[49] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD0188()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  NSObject *v44;
  void *v45;
  id v46;
  id v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _QWORD *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  sub_23FCD5280();
  if (v0)
  {
LABEL_31:
    swift_task_dealloc();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  sub_23FBFEE2C(&qword_256F61788, (uint64_t (*)(uint64_t))MEMORY[0x24BE53898], MEMORY[0x24BE538A8]);
  sub_23FD7127C();
  v2 = *(void **)(v1 + 192);
  v3 = *(_QWORD *)(v1 + 200);
  v4 = (uint64_t *)(*(_QWORD *)(v1 + 168)
                 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack);
  v5 = *v4;
  *(_QWORD *)(v1 + 400) = *v4;
  v6 = v4[1];
  *(_QWORD *)(v1 + 408) = v6;
  v7 = v4[2];
  v8 = v4[3];
  v88 = v5;
  *(_QWORD *)&v97 = v5;
  *((_QWORD *)&v97 + 1) = v6;
  *(_QWORD *)&v98 = v7;
  *((_QWORD *)&v98 + 1) = v8;
  swift_bridgeObjectRetain();
  sub_23FC5AC34();
  sub_23FCCF2CC(v2, (uint64_t *)&v97);
  v89 = v6;
  sub_23FC5A2A8();
  sub_23FC595E0();
  v9 = *(_QWORD *)(v3 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v11 = *(_QWORD *)(v1 + 328);
    v12 = *(_QWORD *)(v1 + 200);
    v96 = MEMORY[0x24BEE4AF8];
    sub_23FC9BC94();
    v13 = v96;
    v14 = v12 + 40;
    while (1)
    {
      v15 = *(_QWORD *)(v1 + 320);
      v99 = 0;
      v97 = 0u;
      v98 = 0u;
      sub_23FCD52E4();
      sub_23FCD52E4();
      sub_23FD72374();
      sub_23FBFEE2C((unint64_t *)&unk_256F65DC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE55B10], MEMORY[0x24BE55B08]);
      sub_23FCD5200();
      if (v15)
        break;
      sub_23FCD52D8();
      v17 = *(_QWORD *)(v96 + 16);
      v16 = *(_QWORD *)(v96 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_23FC10354(v16);
        sub_23FC9BC94();
      }
      v14 += 16;
      *(_QWORD *)(v96 + 16) = v17 + 1;
      sub_23FC102C4();
      (*(void (**)(unint64_t))(v11 + 32))(v96 + v18 + *(_QWORD *)(v11 + 72) * v17);
      if (!--v9)
      {
        v10 = MEMORY[0x24BEE4AF8];
        goto LABEL_11;
      }
    }
    sub_23FCD52D8();
    swift_release();
    v19 = sub_23FBFF1EC();
    goto LABEL_28;
  }
  v13 = MEMORY[0x24BEE4AF8];
LABEL_11:
  v22 = *(_QWORD *)(v13 + 16);
  if (v22)
  {
    v23 = *(_QWORD *)(v1 + 328);
    v24 = *(_QWORD *)(v1 + 288);
    *(_QWORD *)&v97 = v10;
    sub_23FC9B4C4();
    sub_23FC102C4();
    v26 = v13 + v25;
    v94 = v23;
    v90 = *(_QWORD *)(v23 + 72);
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
    while (1)
    {
      v28 = *(_QWORD *)(v1 + 336);
      v27 = *(_QWORD *)(v1 + 344);
      v29 = *(_QWORD *)(v1 + 320);
      v92(v27, v26, v29);
      v92(v28, v27, v29);
      sub_23FCD5338();
      if (v28)
        break;
      sub_23FC090C8(v94);
      v30 = v97;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FCD5158();
        v30 = v97;
      }
      v32 = *(_QWORD *)(v30 + 16);
      v31 = *(_QWORD *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_23FC10354(v31);
        sub_23FCD5158();
        v30 = v97;
      }
      v33 = *(_QWORD *)(v1 + 304);
      v34 = *(_QWORD *)(v1 + 280);
      *(_QWORD *)(v30 + 16) = v32 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v30+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v32, v33, v34);
      *(_QWORD *)&v97 = v30;
      v26 += v90;
      if (!--v22)
      {
        sub_23FC5A56C();
        goto LABEL_22;
      }
    }
    v35 = *(_QWORD *)(v1 + 392);
    v36 = *(_QWORD *)(v1 + 360);
    v37 = *(_QWORD *)(v1 + 368);
    sub_23FC090C8(v94);
    swift_release();
    sub_23FC5A56C();
    v21 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    goto LABEL_27;
  }
  sub_23FC5A56C();
  v30 = MEMORY[0x24BEE4AF8];
LABEL_22:
  *(_QWORD *)(v1 + 416) = v30;
  if (!*(_QWORD *)(v30 + 16))
  {
    sub_23FC595E0();
    goto LABEL_26;
  }
  v38 = *(_QWORD *)(v1 + 272);
  v39 = *(_QWORD *)(v1 + 280);
  sub_23FCD5318();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v38, 1, v39) == 1)
  {
    v40 = *(_QWORD *)(v1 + 272);
    sub_23FC595E0();
    sub_23FC584B0(v40, (uint64_t *)&unk_256F61700);
LABEL_26:
    v35 = *(_QWORD *)(v1 + 392);
    v36 = *(_QWORD *)(v1 + 360);
    v41 = *(_QWORD *)(v1 + 368);
    sub_23FC57234();
    v42 = sub_23FC5A704();
    sub_23FCD51C0(v42, v43);
    v21 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
LABEL_27:
    v19 = v35;
    v20 = v36;
LABEL_28:
    v21(v19, v20);
    v44 = *(NSObject **)(v1 + 248);
    v45 = *(void **)(v1 + 168);
    sub_23FCD5044();
    v46 = v45;
    sub_23FCD50B8();
    v47 = v46;
    sub_23FCD50B8();
    sub_23FD72BE4();
    v48 = sub_23FC09250();
    v49 = os_log_type_enabled(v44, v48);
    v51 = *(_QWORD *)(v1 + 240);
    v50 = *(_QWORD *)(v1 + 248);
    v52 = *(_QWORD *)(v1 + 232);
    v53 = *(char **)(v1 + 168);
    if (v49)
    {
      v54 = sub_23FBFEFF4();
      v55 = (_QWORD *)sub_23FBFEFF4();
      *(_QWORD *)&v97 = sub_23FBFEFF4();
      *(_DWORD *)v54 = 136315394;
      v56 = *(_QWORD *)&v53[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack];
      v57 = *(_QWORD *)&v53[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack
                          + 8];
      sub_23FC5AC34();
      *(_QWORD *)(v1 + 144) = sub_23FC9DC40(v56, v57, (uint64_t *)&v97);
      sub_23FD75044();
      sub_23FC5A2A8();

      *(_WORD *)(v54 + 12) = 2112;
      sub_23FCD50B8();
      v58 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v1 + 112) = v58;
      sub_23FD75044();
      *v55 = v58;
      sub_23FCD503C();
      sub_23FCD503C();
      sub_23FC59250(&dword_23FBF8000, v44, v48, "SessionCoordinator (client: %s) had error: %@", (uint8_t *)v54);
      sub_23FBFD684(&qword_254346A30);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }

    sub_23FCD503C();
    sub_23FCD503C();

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    swift_willThrow();
    goto LABEL_31;
  }
  v60 = *(void **)(v1 + 168);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 288) + 32))(*(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
  sub_23FCD5044();
  v61 = v60;
  v62 = sub_23FD72BE4();
  v63 = sub_23FD74F3C();
  if (sub_23FCD5220(v63))
  {
    v87 = *(_QWORD *)(v1 + 384);
    v86 = *(_QWORD *)(v1 + 368);
    v85 = *(void **)(v1 + 168);
    v64 = sub_23FBFEFF4();
    *(_QWORD *)&v97 = sub_23FBFEFF4();
    *(_DWORD *)v64 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 136) = sub_23FC9DC40(v88, v89, (uint64_t *)&v97);
    sub_23FCA0F54();
    sub_23FC5A648();

    *(_WORD *)(v64 + 12) = 2080;
    sub_23FC75394();
    sub_23FCD52F0(v87, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 16));
    v65 = sub_23FD74C0C();
    *(_QWORD *)(v1 + 152) = sub_23FC9DC40(v65, v66, (uint64_t *)&v97);
    sub_23FCA0F54();
    sub_23FC5A648();
    sub_23FC59250(&dword_23FBF8000, v62, OS_LOG_TYPE_DEFAULT, "SessionCoordinator (client: %s) created with config %s", (uint8_t *)v64);
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  v67 = *(_QWORD *)(v1 + 264);
  v68 = *(_QWORD *)(v1 + 232);
  v69 = *(_QWORD *)(v1 + 240);
  sub_23FCD524C();

  v70 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v70(v67, v68);
  *(_QWORD *)(v1 + 424) = v70;
  v71 = *(_QWORD *)(v1 + 392);
  v91 = *(_QWORD *)(v1 + 368);
  v93 = *(_QWORD *)(v1 + 360);
  v95 = *(_QWORD *)(v1 + 376);
  v72 = *(_QWORD *)(v1 + 168);
  v73 = sub_23FD73F88();
  v75 = v74;
  *(_QWORD *)(v1 + 432) = v74;
  v76 = sub_23FD74030();
  v78 = v77;
  *(_QWORD *)(v1 + 440) = v77;
  v79 = sub_23FD73FDC();
  *(_QWORD *)(v1 + 448) = v80;
  if (v80)
    v81 = v79;
  else
    v81 = 0;
  *(_QWORD *)(v1 + 16) = v73;
  *(_QWORD *)(v1 + 24) = v75;
  *(_QWORD *)(v1 + 32) = v76;
  *(_QWORD *)(v1 + 40) = v78;
  *(_QWORD *)(v1 + 48) = v81;
  *(_QWORD *)(v1 + 56) = v80;
  v82 = *(_QWORD *)(v72
                  + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_transactionHookContainer);
  *(_QWORD *)(v1 + 456) = v82;
  sub_23FC75394();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v95, v71, v93);
  v83 = *(_BYTE *)(v72 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientCapabilities);
  swift_retain();
  v84 = (_QWORD *)sub_23FC5C588();
  *(_QWORD *)(v1 + 464) = v84;
  *v84 = v1;
  v84[1] = sub_23FCD0AEC;
  return sub_23FC19914(*(_QWORD *)(v1 + 224), v1 + 16, v82, *(_QWORD *)(v1 + 376), v83, v30);
}

uint64_t sub_23FCD0AEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23FC764BC();
  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc();
  v3 = v2[47];
  v4 = v2[45];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[46] + 8);
  if (v0)
  {
    v2[61] = v5;
    v5(v3, v4);
    sub_23FC15A24();
    sub_23FC58AC8();
  }
  else
  {
    v2[60] = v5;
    v5(v3, v4);
    sub_23FC5A2A8();
    sub_23FC58AC8();
    sub_23FC103E8();
    sub_23FC595E0();
    sub_23FC15A24();
  }
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FCD0BAC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v30;

  v1 = (void *)v0[21];
  v2 = sub_23FCD5044();
  sub_23FCD5358(v2, v3, (void (*)(_QWORD))type metadata accessor for SessionIdentityPack);
  v4 = v1;
  v5 = sub_23FD72BE4();
  v6 = sub_23FD74F3C();
  if (os_log_type_enabled(v5, v6))
  {
    v8 = v0[50];
    v7 = v0[51];
    v9 = v0[27];
    v10 = (void *)v0[21];
    v11 = sub_23FBFEFF4();
    v30 = sub_23FBFEFF4();
    *(_DWORD *)v11 = 136315394;
    swift_bridgeObjectRetain();
    v0[15] = sub_23FC9DC40(v8, v7, &v30);
    sub_23FC5CCE8();
    sub_23FD75044();
    sub_23FC595E0();

    *(_WORD *)(v11 + 12) = 2080;
    v12 = SessionIdentityPack.description.getter();
    v0[16] = sub_23FC9DC40(v12, v13, &v30);
    sub_23FD75044();
    sub_23FC5A648();
    sub_23FC5806C(v9, type metadata accessor for SessionIdentityPack);
    sub_23FC59250(&dword_23FBF8000, v5, v6, "SessionCoordinator (client: %s) created with ID %s", (uint8_t *)v11);
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  v14 = (void (*)(uint64_t))v0[53];
  v15 = v0[27];
  v16 = (void *)v0[21];

  sub_23FC5806C(v15, type metadata accessor for SessionIdentityPack);
  v17 = sub_23FC5CCE8();
  v14(v17);
  v18 = sub_23FBFF1EC();
  v19(v18);
  v20 = (void (*)(uint64_t, uint64_t))v0[60];
  v21 = v0[49];
  v22 = v0[45];
  v23 = v0[28];
  v24 = v0[26];
  v25 = v0[20];
  sub_23FCD52B0(v23, v26, (void (*)(_QWORD))type metadata accessor for SessionID);
  sub_23FC5806C(v23, type metadata accessor for SessionIdentityPack);
  v27 = sub_23FBFF104();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v24, v27);
  v20(v21, v22);
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5B2D4();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5A574();
  swift_task_dealloc();
  sub_23FC090D0();
  v28 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75334(v28);
}

uint64_t sub_23FCD0EA4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  NSObject *v3;
  void *v4;
  id v5;
  id v6;
  os_log_type_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v20;

  v1 = *(void (**)(uint64_t))(v0 + 488);
  sub_23FC090C8(*(_QWORD *)(v0 + 288));
  sub_23FC595E0();
  sub_23FC15A24();
  sub_23FC1002C();
  v2 = sub_23FC5CCE8();
  v1(v2);
  v3 = *(NSObject **)(v0 + 248);
  v4 = *(void **)(v0 + 168);
  sub_23FCD5044();
  v5 = v4;
  sub_23FCD50B8();
  v6 = v5;
  sub_23FCD50B8();
  sub_23FD72BE4();
  v7 = sub_23FC09250();
  if (sub_23FC75E24(v7))
  {
    v8 = *(char **)(v0 + 168);
    v9 = sub_23FBFEFF4();
    v10 = (_QWORD *)sub_23FBFEFF4();
    v20 = sub_23FBFEFF4();
    *(_DWORD *)v9 = 136315394;
    v11 = *(_QWORD *)&v8[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack];
    v12 = *(_QWORD *)&v8[OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientIdentityPack
                       + 8];
    sub_23FC5C20C();
    v14 = sub_23FCD5324(v11, v13, &v20);
    sub_23FCD5084(v14);
    sub_23FC103E8();

    *(_WORD *)(v9 + 12) = 2112;
    sub_23FCD50B8();
    v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_23FCD5068(v15);
    *v10 = v12;
    sub_23FCD503C();
    sub_23FCD503C();
    sub_23FC59250(&dword_23FBF8000, v3, (os_log_type_t)v1, "SessionCoordinator (client: %s) had error: %@", (uint8_t *)v9);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v16 = *(void **)(v0 + 168);

  sub_23FCD503C();
  sub_23FCD503C();

  v17 = sub_23FC5A8DC();
  v18(v17);
  swift_willThrow();
  swift_task_dealloc();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCD1138()
{
  uint64_t v0;
  char v1;
  uint64_t result;
  char v3;
  char *v4;

  sub_23FD72008();
  v1 = sub_23FD72638();
  result = swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_clientCapabilities) & 0x10) != 0)
      return result;
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  sub_23FCD47E4();
  swift_allocError();
  *v4 = v3;
  return swift_willThrow();
}

void sub_23FCD12B4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  sub_23FC061F0();
  v3 = v2;
  v5 = v4;
  v23 = v6;
  v8 = v7;
  v9 = sub_23FBFF104();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_23FCD4F08();
  sub_23FCD4F24(v16);
  v17 = sub_23FC58AA0();
  *(_QWORD *)(v17 + 16) = v5;
  *(_QWORD *)(v17 + 24) = v3;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v8, v9);
  v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = swift_allocObject();
  v20 = v23;
  *(_QWORD *)(v19 + 16) = v0;
  *(_QWORD *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v18, v13, v9);
  sub_23FCD4FA8();
  sub_23FC58C88();
  v21 = v0;
  sub_23FC75E34();
  sub_23FD74E70();
  swift_release();
  sub_23FC58ADC();
  sub_23FC101F4();
  sub_23FC584B0(v1, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FCD1400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for SessionID(0);
  v4[6] = swift_task_alloc();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  v4[7] = swift_task_alloc();
  v5 = sub_23FD740CC();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  sub_23FD72380();
  v4[12] = swift_task_alloc();
  v6 = sub_23FD73850();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD151C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  void (*v41)(uint64_t, uint64_t);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23FCD5280();
  if (v0)
    goto LABEL_2;
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v46 = MEMORY[0x24BEE4AF8];
    sub_23FC9BC94();
    v6 = v46;
    v7 = (unint64_t *)(v3 + 40);
    while (1)
    {
      v8 = *(_QWORD *)(v1 + 104);
      v10 = *(v7 - 1);
      v9 = *v7;
      sub_23FCD52B8();
      sub_23FCD52B8();
      sub_23FD72374();
      sub_23FBFEE2C((unint64_t *)&unk_256F65DC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE55B10], MEMORY[0x24BE55B08]);
      sub_23FCD5200();
      sub_23FC577B0(v10, v9);
      if (v8)
        break;
      v11 = *(_QWORD *)(v46 + 24);
      if (*(_QWORD *)(v46 + 16) >= v11 >> 1)
      {
        sub_23FC10354(v11);
        sub_23FC9BC94();
      }
      v7 += 2;
      sub_23FCD500C();
      if (!--v4)
      {
        v5 = MEMORY[0x24BEE4AF8];
        goto LABEL_12;
      }
    }
    sub_23FC101F4();
    goto LABEL_2;
  }
  v6 = MEMORY[0x24BEE4AF8];
LABEL_12:
  v12 = *(_QWORD *)(v6 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(v1 + 112);
    v14 = *(_QWORD *)(v1 + 72);
    v47 = v5;
    sub_23FCD5210();
    sub_23FC102C4();
    v16 = v6 + v15;
    v44 = *(_QWORD *)(v13 + 72);
    v45 = v13;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    while (1)
    {
      v19 = *(_QWORD *)(v1 + 120);
      v18 = *(_QWORD *)(v1 + 128);
      v20 = *(_QWORD *)(v1 + 104);
      v17(v18, v16, v20);
      v17(v19, v18, v20);
      sub_23FCD5338();
      v21 = v19;
      sub_23FC090C8(v45);
      v22 = v47;
      if (v21)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FCD5158();
        v22 = v47;
      }
      v24 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_23FC10354(v23);
        sub_23FCD5158();
        v22 = v47;
      }
      v25 = *(_QWORD *)(v1 + 88);
      v26 = *(_QWORD *)(v1 + 64);
      *(_QWORD *)(v22 + 16) = v24 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v22+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v24, v25, v26);
      v47 = v22;
      v16 += v44;
      if (!--v12)
      {
        sub_23FC15A24();
        goto LABEL_23;
      }
    }
    sub_23FC58FA0();
    sub_23FC15A24();
    goto LABEL_2;
  }
  sub_23FC15A24();
  v22 = MEMORY[0x24BEE4AF8];
LABEL_23:
  *(_QWORD *)(v1 + 144) = v22;
  if (!*(_QWORD *)(v22 + 16))
  {
    sub_23FC595E0();
    goto LABEL_27;
  }
  v27 = *(_QWORD *)(v1 + 56);
  v28 = *(_QWORD *)(v1 + 64);
  sub_23FCD5318();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v27, 1, v28) == 1)
  {
    v29 = *(_QWORD *)(v1 + 56);
    sub_23FC595E0();
    sub_23FC584B0(v29, (uint64_t *)&unk_256F61700);
LABEL_27:
    sub_23FC57234();
    v30 = sub_23FC5A704();
    sub_23FCD51C0(v30, v31);
LABEL_2:
    sub_23FCD50C0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    return sub_23FC75334(*(uint64_t (**)(void))(v1 + 8));
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 32))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
  v32 = sub_23FD74054();
  if (!v33)
    v32 = sub_23FD73238();
  v34 = v32;
  v35 = v33;
  *(_QWORD *)(v1 + 152) = v33;
  v37 = *(_QWORD *)(v1 + 40);
  v36 = *(_QWORD *)(v1 + 48);
  v38 = sub_23FD73FB8();
  v40 = v39 & 1;
  sub_23FBFF104();
  sub_23FC8A29C();
  v41(v36, v37);
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 160) = v42;
  *v42 = v1;
  v42[1] = sub_23FCD18EC;
  v43 = sub_23FC5B9C8(*(_QWORD *)(v1 + 48));
  return sub_23FC1DC98(v43, v34, v35, v38, v40, v22);
}

uint64_t sub_23FCD18EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23FC5A650();
  v3 = *(_QWORD *)(v2 + 48);
  *v4 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  sub_23FC5806C(v3, type metadata accessor for SessionID);
  sub_23FC595E0();
  sub_23FC15A24();
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FCD1968()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FC5BC54();
  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v4 = (uint64_t *)v0[2];
  sub_23FCD4FA8();
  v5 = sub_23FCD5030();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *v4 = v5;
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC75A54();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  v6 = (uint64_t (*)(void))sub_23FC5C528();
  return v6();
}

uint64_t sub_23FCD1A08()
{
  uint64_t v0;

  sub_23FC090C8(*(_QWORD *)(v0 + 72));
  sub_23FCD50C0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCD1B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23FD71AEC();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_23FD71474();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v6 = sub_23FD71E34();
  v3[11] = v6;
  v3[12] = *(_QWORD *)(v6 - 8);
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD1C30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23FC764BC();
  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[6];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[9] + 16))(v0[10], v0[4], v0[8]);
  sub_23FD71AE0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BE52D30], v2);
  sub_23FC5A9A8();
  sub_23FD71E1C();
  v4 = (_QWORD *)swift_task_alloc();
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_23FCD1CE8;
  v5 = sub_23FC5B9C8(v0[13]);
  return sub_23FC1D9E0(v5);
}

uint64_t sub_23FCD1CE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 96);
  if (!v0)
    sub_23FC103E8();
  sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC5A9A8();
  return sub_23FC75184();
}

uint64_t sub_23FCD1D68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);

  v1 = *(uint64_t **)(v0 + 16);
  sub_23FCD4FA8();
  *v1 = sub_23FCD5030();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  v2 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC8A2D0(v2);
}

uint64_t sub_23FCD1DB8()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC090C0();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FCD1EF4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  sub_23FCD5344();
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = sub_23FCD4F08();
  sub_23FCD4F24(v5);
  v6 = sub_23FC58AA0();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v1;
  v7 = (_QWORD *)sub_23FC58AA0();
  sub_23FCD5144(v7);
  v8 = v0;
  sub_23FCD5288();
  sub_23FCD5230();
  swift_release();
  sub_23FC58ADC();
  sub_23FC58C6C();
  sub_23FCD505C();
  sub_23FC6264C();
}

uint64_t sub_23FCD1FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_23FD71E34();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD2004()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[6];
  sub_23FBFEE2C(&qword_256F616C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE537C0], MEMORY[0x24BE537C8]);
  sub_23FCD4F6C();
  if (v1)
  {
    sub_23FCD5304();
    v2 = (uint64_t (*)(void))sub_23FCAB854();
    return sub_23FC8A2D0(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[10] = v4;
    *v4 = v0;
    v4[1] = sub_23FCD20B8;
    v5 = sub_23FC5B9C8(v0[9]);
    return sub_23FC1D9E0(v5);
  }
}

uint64_t sub_23FCD20B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCD2118()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t *v8;

  v0[2] = v0[11];
  v1 = v0[12];
  sub_23FBFD684(&qword_256F616C8);
  sub_23FCD48D0();
  v2 = sub_23FD712A0();
  v4 = v3;
  v5 = v0[8];
  if (v1)
  {
    sub_23FC5B538(v5);
    sub_23FC1002C();
    sub_23FCD5304();
    v6 = (uint64_t (*)(void))sub_23FCAB854();
  }
  else
  {
    v7 = v2;
    v8 = (uint64_t *)v0[3];
    sub_23FC5B538(v5);
    sub_23FC1002C();
    *v8 = v7;
    v8[1] = v4;
    sub_23FC090C0();
    v6 = (uint64_t (*)(void))sub_23FC5C528();
  }
  return sub_23FC5D3B4(v6);
}

uint64_t sub_23FCD21D4()
{
  uint64_t v0;

  sub_23FC090C8(*(_QWORD *)(v0 + 64));
  sub_23FCD5304();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FCD2224(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;

  v11 = _Block_copy(aBlock);
  v12 = a3;
  v17 = a1;
  v13 = sub_23FD713D8();
  v15 = v14;

  v16 = sub_23FC58AA0();
  *(_QWORD *)(v16 + 16) = v11;
  a7(v13, v15, a6, v16);
  sub_23FC58FA0();
  sub_23FC577B0(v13, v15);

}

void sub_23FCD22E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v25[4];

  sub_23FC061F0();
  v25[2] = v1;
  v25[3] = v2;
  v25[1] = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23FBFF104();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10, v13);
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23FC5DC5C();
  sub_23FBFF0F8((uint64_t)v17, v19, v20, v18);
  v21 = sub_23FC58AA0();
  *(_QWORD *)(v21 + 16) = v7;
  *(_QWORD *)(v21 + 24) = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v10);
  v22 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v0;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v23 + v22, (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_23FCD4FA8();
  sub_23FC58C88();
  v24 = v0;
  sub_23FD74E70();
  swift_release();
  sub_23FC58FA0();
  sub_23FC101F4();
  sub_23FC584B0((uint64_t)v17, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FCD2434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for SessionID(0);
  v3[5] = swift_task_alloc();
  v4 = sub_23FD7157C();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD24B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  _QWORD *v4;

  v1 = v0[4];
  v2 = v0[5];
  sub_23FBFF104();
  sub_23FC8A29C();
  v3(v2, v1);
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_23FCD2538;
  return sub_23FC1DEDC(v0[8], v0[5]);
}

uint64_t sub_23FCD2538()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23FC5A650();
  v3 = *(_QWORD *)(v2 + 40);
  *v4 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  sub_23FC5806C(v3, type metadata accessor for SessionID);
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FCD25A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23FC764BC();
  v2 = v0[7];
  v1 = v0[8];
  v3 = (_QWORD *)v0[2];
  v4 = sub_23FD71570();
  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  *v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, v4);
  sub_23FC090D0();
  sub_23FC5A574();
  v5 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC090D8(v5);
}

uint64_t sub_23FCD2618()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FCD2748(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_23FCD4F08();
  sub_23FCD4F24(v9);
  v10 = sub_23FC58AA0();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = sub_23FC58AA0();
  *(_QWORD *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = a1;
  sub_23FCD4FA8();
  sub_23FC58C88();
  v12 = v3;
  v13 = a1;
  sub_23FD74E70();
  swift_release();
  sub_23FC58C6C();
  swift_release();
  sub_23FCD505C();
  sub_23FC6264C();
}

uint64_t sub_23FCD2818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23FCD2834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t (*v3)(void);
  uint64_t v4;
  void *v5;

  result = sub_23FCD5280();
  if (v0)
  {
    v3 = (uint64_t (*)(void))sub_23FCAB854();
    return v3();
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 24)
                   + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_transactionHookContainer);
    *(_QWORD *)(v1 + 40) = v4;
    if (v4)
    {
      v5 = *(void **)(v1 + 32);
      swift_retain();
      *(_BYTE *)(v1 + 48) = objc_msgSend(v5, sel_BOOLValue);
      return sub_23FC5A19C();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23FCD28C4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 112) = *(_BYTE *)(v0 + 48);
  swift_release();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCD28FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);

  v1 = *(uint64_t **)(v0 + 16);
  sub_23FCD4FA8();
  *v1 = sub_23FCD5030();
  v2 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC090D8(v2);
}

uint64_t sub_23FCD29B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for SessionClientID(0);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD2A1C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_256F5D2D8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 56) = sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FCD51E8(v1);
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0906C();
}

uint64_t sub_23FCD2AA8()
{
  if (qword_256F5D2E0 != -1)
    swift_once();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCD2AF8()
{
  sub_23FD74D80();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0907C();
}

uint64_t sub_23FCD2B34()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = qword_256F7F4B8;
  return sub_23FCD4F9C();
}

uint64_t sub_23FCD2B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC764BC();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = sub_23FBFF104();
  sub_23FCD50A0(v3);
  sub_23FCD4B4C(v2 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionClientId, v1, (void (*)(_QWORD))type metadata accessor for SessionClientID);
  sub_23FCD5198();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0906C();
}

uint64_t sub_23FCD2BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FCD5294();
  sub_23FCC794C();
  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  if (v0)
    *(_BYTE *)(v1 + 81) = *(_BYTE *)(v1 + 80);
  sub_23FCD504C(v2);
  sub_23FCD504C(v3);
  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FCD2C3C()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;
  uint64_t (*v3)(void);

  v1 = *(_BYTE *)(v0 + 81);
  sub_23FC1E5B4();
  sub_23FC5A704();
  *v2 = v1;
  sub_23FC090D0();
  sub_23FC090C0();
  v3 = (uint64_t (*)(void))sub_23FCAB854();
  return sub_23FC090D8(v3);
}

uint64_t sub_23FCD2C94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);

  v1 = *(uint64_t **)(v0 + 16);
  sub_23FCD4FA8();
  *v1 = sub_23FCD5030();
  sub_23FC090C0();
  sub_23FC5A574();
  v2 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC090D8(v2);
}

void sub_23FCD2DD8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v25[4];

  sub_23FC061F0();
  v25[2] = v1;
  v25[3] = v2;
  v25[1] = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23FBFF104();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10, v13);
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23FC5DC5C();
  sub_23FBFF0F8((uint64_t)v17, v19, v20, v18);
  v21 = sub_23FC58AA0();
  *(_QWORD *)(v21 + 16) = v7;
  *(_QWORD *)(v21 + 24) = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v10);
  v22 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = swift_allocObject();
  sub_23FCD52F0(v23 + v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  *(_QWORD *)(v23 + ((v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v0;
  sub_23FCD4FA8();
  sub_23FC58C88();
  v24 = v0;
  sub_23FD74E70();
  swift_release();
  sub_23FC101F4();
  sub_23FC58FA0();
  sub_23FC584B0((uint64_t)v17, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FCD2F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for SessionClientID(0);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD2F9C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_256F5D2D8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 56) = sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FCD51E8(v1);
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0906C();
}

uint64_t sub_23FCD3028()
{
  if (qword_256F5D2E0 != -1)
    swift_once();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCD3078()
{
  sub_23FD74D80();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0907C();
}

uint64_t sub_23FCD30B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = qword_256F7F4B8;
  return sub_23FCD4F9C();
}

uint64_t sub_23FCD30CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC764BC();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = sub_23FBFF104();
  sub_23FCD50A0(v3);
  sub_23FCD4B4C(v2 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionClientId, v1, (void (*)(_QWORD))type metadata accessor for SessionClientID);
  sub_23FCD5198();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0906C();
}

uint64_t sub_23FCD3144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FCD5294();
  sub_23FCC8520();
  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  if (v0)
    *(_BYTE *)(v1 + 81) = *(_BYTE *)(v1 + 80);
  sub_23FCD504C(v2);
  sub_23FCD504C(v3);
  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

void sub_23FCD32B8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FC5DC5C();
  sub_23FBFF0F8((uint64_t)v4, v6, v7, v5);
  *(_QWORD *)(sub_23FC58AA0() + 16) = v0;
  sub_23FBFF104();
  v8 = v0;
  sub_23FC5A8DC();
  sub_23FD74E70();
  swift_release();
  swift_release();
  sub_23FC584B0((uint64_t)v4, &qword_254346A28);
  sub_23FC6264C();
}

uint64_t sub_23FCD337C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for SessionClientID(0);
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD33D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23FCD52B0(*(_QWORD *)(v2 + 24) + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionClientId, a2, (void (*)(_QWORD))type metadata accessor for SessionClientID);
  v3 = sub_23FBFF104();
  sub_23FBFF088(v3);
  sub_23FC090D0();
  v4 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC090D8(v4);
}

void sub_23FCD3490()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_23FC5EA38();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)v0 + OBJC_IVAR____TtCV23IntelligenceFlowRuntime23SessionXPCServiceServer6Server_sessionClientId;
  v11 = sub_23FC5DC5C();
  sub_23FBFF0F8((uint64_t)v9, v12, v13, v11);
  sub_23FCD4B4C(v10, (uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(_QWORD))type metadata accessor for SessionClientID);
  v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  sub_23FCD4D0C((uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_23FC6126C((uint64_t)v9, (uint64_t)&unk_256F617C8, v15);
  swift_release();
  v16.receiver = v0;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, sel_dealloc);
  sub_23FC6264C();
}

uint64_t sub_23FCD35B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23FCD35D0()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_256F5D2D8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 24) = sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  *(_QWORD *)(v0 + 32) = v1;
  sub_23FD74D80();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0906C();
}

uint64_t sub_23FCD3668()
{
  if (qword_256F5D2E0 != -1)
    swift_once();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FCD36B8()
{
  sub_23FD74D80();
  sub_23FCCC9CC();
  sub_23FCCCA34();
  return sub_23FC0907C();
}

uint64_t sub_23FCD36F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23FCD3744;
  v2 = sub_23FC5B9C8(*(_QWORD *)(v0 + 16));
  return sub_23FCC53B4(v2);
}

uint64_t sub_23FCD3744()
{
  uint64_t *v0;
  uint64_t v2;

  sub_23FC5A650();
  v2 = *v0;
  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23FCD382C()
{
  return type metadata accessor for SessionXPCServiceServer.Server();
}

uint64_t type metadata accessor for SessionXPCServiceServer.Server()
{
  uint64_t result;

  result = qword_254346D48;
  if (!qword_254346D48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FCD3878()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FCD3918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23FCCCF1C();
  *a1 = result;
  return result;
}

uint64_t sub_23FCD393C()
{
  return sub_23FD725E4();
}

uint64_t sub_23FCD3944()
{
  return sub_23FD725E4();
}

uint64_t sub_23FCD394C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23FCCCE70();
  *a1 = result;
  return result;
}

uint64_t sub_23FCD3974(uint64_t *a1)
{
  return sub_23FCCCEB0(*a1);
}

void (*sub_23FCD3998(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_23FCD39E4;
}

void sub_23FCD39E4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_23FCCCDD8();
  sub_23FBFF0A0();
}

uint64_t sub_23FCD3A18()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_254346E28;
  v1 = (id)qword_254346E28;
  return v0;
}

void sub_23FCD3A60(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_254346E28;
  qword_254346E28 = a1;

}

uint64_t (*sub_23FCD3AAC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23FCD3AEC()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_23FCD3B30(uint64_t a1)
{
  swift_beginAccess();
  qword_254346E30 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_23FCD3B7C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_BYTE *sub_23FCD3BBC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23FCD3BC8(_BYTE *a1@<X8>)
{
  *a1 = sub_23FC05ACC();
  sub_23FBFF0A0();
}

uint64_t sub_23FCD3BE8@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = sub_23FCD3C14(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_23FCD3C14(unsigned int a1, int a2)
{
  return a2 | a1;
}

void sub_23FCD3C1C(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;

  *a2 = sub_23FCCCDA0(*a1, *v2);
  sub_23FBFF0A0();
}

uint64_t sub_23FCD3C44@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = sub_23FCD3C70(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_23FCD3C70(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

BOOL sub_23FCD3C78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23FCD3C80(a1, *a2);
}

BOOL sub_23FCD3C80(unsigned __int8 *a1, unsigned __int8 a2)
{
  _BYTE *v2;
  int v3;

  v3 = (*v2 & a2);
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_23FCD3CB0@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23FCCDE38(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_23FCD3CE0@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23FCD3D10(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_23FCD3D10(char a1)
{
  char *v1;
  char v2;

  v2 = *v1;
  *v1 |= a1;
  return (v2 & a1) | (((v2 & a1) == 0) << 8);
}

uint64_t sub_23FCD3D38(unsigned __int8 *a1)
{
  return sub_23FCCDE28(*a1);
}

uint64_t sub_23FCD3D40(unsigned __int8 *a1)
{
  return sub_23FCD3D48(*a1);
}

uint64_t sub_23FCD3D48(uint64_t result)
{
  _BYTE *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_23FCD3D58(unsigned __int8 *a1)
{
  return sub_23FCD3D60(*a1);
}

uint64_t sub_23FCD3D60(uint64_t result)
{
  _BYTE *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_23FCD3D70@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = sub_23FCD3D9C(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_23FCD3D9C(int a1, int a2)
{
  return a2 & ~a1;
}

BOOL sub_23FCD3DA4(char *a1)
{
  unsigned __int8 *v1;

  return sub_23FCD3DB0(*a1, *v1);
}

BOOL sub_23FCD3DB0(char a1, unsigned __int8 a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_23FCD3DC0(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_23FCD3DCC(*a1, *v1);
}

BOOL sub_23FCD3DCC(unsigned __int8 a1, unsigned __int8 a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_23FCD3DDC(unsigned __int8 *a1)
{
  char *v1;

  return sub_23FCD3DE8(*a1, *v1);
}

BOOL sub_23FCD3DE8(unsigned __int8 a1, char a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_23FCD3DF8()
{
  char *v0;

  return sub_23FCD3E00(*v0);
}

BOOL sub_23FCD3E00(char a1)
{
  return a1 == 0;
}

uint64_t sub_23FCD3E0C()
{
  return sub_23FD7508C();
}

uint64_t sub_23FCD3E24(unsigned __int8 *a1)
{
  return sub_23FCD3E2C(*a1);
}

uint64_t sub_23FCD3E2C(uint64_t result)
{
  _BYTE *v1;

  *v1 &= ~(_BYTE)result;
  return result;
}

void sub_23FCD3E3C()
{
  sub_23FD75458();
  sub_23FBFF0A0();
}

unsigned __int8 *sub_23FCD3E5C@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23FCD3E6C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_23FCD3E78@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23FCCDDD8(a1);
  *a2 = result;
  return result;
}

void sub_23FCD3E9C()
{
  sub_23FCD3E3C();
}

uint64_t sub_23FCD3EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_23FD740CC();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = sub_23FC5C588();
  v3[8] = sub_23FC5C588();
  return sub_23FC0906C();
}

uint64_t sub_23FCD3F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, uint64_t, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  sub_23FC5BC54();
  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 32) + 112) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = *(_QWORD *)(v0 + 48);
      v19 = MEMORY[0x24BEE4AF8];
      sub_23FC9B8E4(0, v2, 0);
      sub_23FC102C4();
      v5 = v1 + v4;
      v17 = *(_QWORD *)(v3 + 72);
      v6 = *(void (**)(_QWORD, uint64_t, _QWORD))(v3 + 16);
      do
      {
        v6(*(_QWORD *)(v0 + 64), v5, *(_QWORD *)(v0 + 40));
        sub_23FBFEE2C(&qword_256F5E4C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CC8]);
        v7 = sub_23FD73BC8();
        v9 = v8;
        (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
        v10 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC9B8E4(0, *(_QWORD *)(v19 + 16) + 1, 1);
          v10 = v19;
        }
        v12 = *(_QWORD *)(v10 + 16);
        v11 = *(_QWORD *)(v10 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_23FC9B8E4(v11 > 1, v12 + 1, 1);
          v10 = v19;
        }
        *(_QWORD *)(v10 + 16) = v12 + 1;
        v13 = v10 + 16 * v12;
        *(_QWORD *)(v13 + 32) = v7;
        *(_QWORD *)(v13 + 40) = v9;
        v5 += v17;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23FC595E0();
      v10 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(v0 + 72) = v10;
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 120);
    v18 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE538B0] + MEMORY[0x24BE538B0]);
    swift_retain();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v15;
    *v15 = v0;
    v15[1] = sub_23FCD412C;
    v16 = sub_23FC5B9C8(*(_QWORD *)(v0 + 16));
    return v18(v16, v10);
  }
  else
  {
    sub_23FCD51F8();
    sub_23FC090D0();
    return sub_23FCD4FB0(v1, *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23FCD412C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    sub_23FC58AC8();
  }
  return sub_23FC0906C();
}

uint64_t sub_23FCD41A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  sub_23FC5BC54();
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_23FCD5210();
    v3 = v8;
    v4 = *(_QWORD *)(v0 + 104);
    v5 = v1 + 40;
    while (1)
    {
      sub_23FCD5274();
      sub_23FCD5274();
      sub_23FBFEE2C((unint64_t *)&unk_256F61620, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CC0]);
      sub_23FD73BBC();
      if (v4)
        break;
      sub_23FCD5268();
      if (*(_QWORD *)(v8 + 16) >= *(_QWORD *)(v8 + 24) >> 1)
        sub_23FCD5158();
      v5 += 16;
      sub_23FCD500C();
      v4 = 0;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    sub_23FCD5268();
    sub_23FC101F4();
    sub_23FC1002C();
    sub_23FCD51F8();
    sub_23FC090D0();
    v6 = (uint64_t (*)(void))sub_23FCAB854();
    return sub_23FC5BC14(v6);
  }
  else
  {
    sub_23FC5A2A8();
    v3 = MEMORY[0x24BEE4AF8];
LABEL_10:
    sub_23FCD51F8();
    sub_23FC090D0();
    return sub_23FCD4FB0(v3, *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23FCD42E8()
{
  uint64_t v0;

  swift_release();
  sub_23FC1002C();
  swift_task_dealloc();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCD432C()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for TransactionHookContainer()
{
  return objc_opt_self();
}

void type metadata accessor for SessionClientCapabilities()
{
  sub_23FC7A748();
}

void type metadata accessor for SessionXPCServiceServer()
{
  sub_23FC7A748();
}

unint64_t sub_23FCD438C()
{
  unint64_t result;

  result = qword_256F615F0;
  if (!qword_256F615F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79D48, &unk_251010FF8);
    atomic_store(result, (unint64_t *)&qword_256F615F0);
  }
  return result;
}

unint64_t sub_23FCD43CC()
{
  unint64_t result;

  result = qword_256F615F8;
  if (!qword_256F615F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79D18, &unk_251010FF8);
    atomic_store(result, (unint64_t *)&qword_256F615F8);
  }
  return result;
}

unint64_t sub_23FCD440C()
{
  unint64_t result;

  result = qword_256F61600;
  if (!qword_256F61600)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79D70, &unk_251010FF8);
    atomic_store(result, (unint64_t *)&qword_256F61600);
  }
  return result;
}

unint64_t sub_23FCD444C()
{
  unint64_t result;

  result = qword_256F61608;
  if (!qword_256F61608)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79DA8, &unk_251010FF8);
    atomic_store(result, (unint64_t *)&qword_256F61608);
  }
  return result;
}

void sub_23FCD4488()
{
  sub_23FBFEE2C(&qword_254346D10, MEMORY[0x24BE538C8], MEMORY[0x24BE538B8]);
}

void sub_23FCD44B4()
{
  sub_23FBFEE2C(&qword_256F61618, MEMORY[0x24BE53B20], MEMORY[0x24BE53B18]);
}

void sub_23FCD44E0()
{
  sub_23FBFEE2C(&qword_254346D40, (uint64_t (*)(uint64_t))type metadata accessor for SessionXPCServiceServer.Server, (uint64_t)&unk_23FD79ED0);
}

_QWORD *sub_23FCD450C@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23FCCCDA8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_23FCD4534@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23FCD450C(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_23FCD454C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23FCD4570(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23FD68B78(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23FCD4578()
{
  sub_23FCD5054();
  return swift_deallocObject();
}

uint64_t sub_23FCD4598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_23FC0922C(v5);
  *v6 = v2;
  v6[1] = sub_23FC7E094;
  return sub_23FCD337C(a1, v4);
}

void sub_23FCD45EC(uint64_t a1, uint64_t a2)
{
  sub_23FD68B30(a1, a2);
}

uint64_t sub_23FCD45F4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23FCD4618(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FD68B10(a1, a2, *(void (**)(_QWORD))(v2 + 16));
}

uint64_t sub_23FCD4624()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFF104();
  sub_23FCD4FE0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FCD2F30(v2, v3, v4);
}

unint64_t sub_23FCD4678()
{
  unint64_t result;

  result = qword_256F61660;
  if (!qword_256F61660)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256F61660);
  }
  return result;
}

uint64_t sub_23FCD46B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23FBFF104() - 8);
  v2 = (*(_QWORD *)(v1 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23FC090C8(v1);

  sub_23FBFF1EC();
  return sub_23FC5D478();
}

uint64_t sub_23FCD4718()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFF104();
  sub_23FCD4FE0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FCD29B0(v2, v3, v4);
}

uint64_t sub_23FCD476C()
{
  uint64_t v0;

  sub_23FCD5054();

  return swift_deallocObject();
}

uint64_t sub_23FCD4794()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FCD2818(v2, v3, v4);
}

unint64_t sub_23FCD47E4()
{
  unint64_t result;

  result = qword_256F61698;
  if (!qword_256F61698)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7A040, &unk_251011588);
    atomic_store(result, &qword_256F61698);
  }
  return result;
}

uint64_t sub_23FCD4824()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFF104();
  sub_23FCD517C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FCD2434(v2, v3, v4);
}

uint64_t sub_23FCD487C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F50(v1);
  return sub_23FCD1FA0(v2, v3, v4, v5);
}

unint64_t sub_23FCD48D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256F616D0;
  if (!qword_256F616D0)
  {
    v1 = sub_23FBFEDE8(&qword_256F616C8);
    sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v3 = v2;
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256F616D0);
  }
  return result;
}

uint64_t sub_23FCD4950()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23FBFF104() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23FCD5054();
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_23FC5A154();
}

uint64_t sub_23FCD49AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFF104();
  sub_23FCD517C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FCD1B7C(v2, v3, v4);
}

uint64_t sub_23FCD4A00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23FBFF104() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23FCD5054();
  swift_bridgeObjectRelease();
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_23FC5A154();
}

uint64_t sub_23FCD4A64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FBFF104();
  sub_23FCD5160();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F50(v1);
  return sub_23FCD1400(v2, v3, v4, v5);
}

uint64_t sub_23FCD4AB8()
{
  sub_23FCD5054();
  sub_23FCD52A8();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FCD4AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC764BC();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_23FC0922C(v2);
  v4 = sub_23FCD50D8(v3);
  return sub_23FCCFFB0(v4, v5, v6, v7, v8, v1);
}

void sub_23FCD4B4C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void (*v5)(uint64_t, uint64_t);

  a3(0);
  sub_23FC8A29C();
  v5(a2, a1);
  sub_23FBFF0A0();
}

uint64_t sub_23FCD4B84()
{
  sub_23FCD5054();
  sub_23FCD52A8();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FCD4BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_23FC0922C(v3);
  v5 = sub_23FCD50D8(v4);
  return sub_23FCCE6BC(v5, v6, v7, v8, v9, v2, v1);
}

uint64_t sub_23FCD4C2C()
{
  sub_23FCD5054();
  sub_23FCD52A8();
  return swift_deallocObject();
}

uint64_t sub_23FCD4C50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F50(v1);
  return sub_23FCCDF70(v2, v3, v4, v5);
}

uint64_t sub_23FCD4CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FC5EA38() - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = sub_23FBFF104();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return sub_23FC5D478();
}

uint64_t sub_23FCD4D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionClientID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCD4D50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC5EA38();
  sub_23FCD5160();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F50(v1);
  return sub_23FCD35B8(v2, v3, v4, v5);
}

uint64_t sub_23FCD4DA4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FCD4DF0 + 4 * byte_23FD79C65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FCD4E24 + 4 * byte_23FD79C60[v4]))();
}

uint64_t sub_23FCD4E24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCD4E2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCD4E34);
  return result;
}

uint64_t sub_23FCD4E40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCD4E48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FCD4E4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCD4E54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TestingAPISecurityError()
{
  sub_23FC7A748();
}

unint64_t sub_23FCD4E70()
{
  unint64_t result;

  result = qword_256F617D0;
  if (!qword_256F617D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7A018, &unk_251011588);
    atomic_store(result, (unint64_t *)&qword_256F617D0);
  }
  return result;
}

uint64_t sub_23FCD4F08()
{
  return sub_23FD74DEC();
}

uint64_t sub_23FCD4F24(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FCD4F38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FCD4F50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FCD4F6C()
{
  return sub_23FD7127C();
}

uint64_t sub_23FCD4F8C()
{
  return sub_23FD75380();
}

uint64_t sub_23FCD4F9C()
{
  return swift_task_switch();
}

unint64_t sub_23FCD4FA8()
{
  return sub_23FCD4678();
}

uint64_t sub_23FCD4FB0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FCD4FCC()
{
  return swift_dynamicCast();
}

uint64_t sub_23FCD500C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v1;
  return (*(uint64_t (**)(unint64_t))(v3 + 32))(v0+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v2);
}

uint64_t sub_23FCD5030()
{
  return sub_23FD75014();
}

void sub_23FCD503C()
{
  void *v0;

}

uint64_t sub_23FCD5044()
{
  return _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
}

void sub_23FCD504C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FC5806C(a1, v1);
}

void sub_23FCD5054()
{
  uint64_t v0;

}

void sub_23FCD505C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FC584B0(v1, v0);
}

uint64_t sub_23FCD5068(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FCD5084(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FCD50A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

id sub_23FCD50B8()
{
  void *v0;

  return v0;
}

uint64_t sub_23FCD50C0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCD50D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FCD50F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 232) + 8))(v1, v0);
}

uint64_t sub_23FCD510C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  return sub_23FC9DC40(a1, v1, (uint64_t *)(v2 - 120));
}

uint64_t sub_23FCD5118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  *(_QWORD *)(v3 - 240) = v4;
  return v4(v1, v2);
}

uint64_t sub_23FCD512C()
{
  uint64_t v0;

  return sub_23FCAB54C(v0 - 160, v0 - 120);
}

uint64_t sub_23FCD5138()
{
  return sub_23FD74BE8();
}

uint64_t sub_23FCD5144(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  a1[2] = v1;
  a1[3] = v3;
  a1[4] = v2;
  return swift_retain();
}

void sub_23FCD5158()
{
  sub_23FC9B4C4();
}

uint64_t sub_23FCD5198()
{
  return sub_23FD74D80();
}

uint64_t sub_23FCD51A4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FCD51B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  unint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  return sub_23FC9DC40(v5, v4, (uint64_t *)va);
}

uint64_t sub_23FCD51C0(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_23FCD51E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return sub_23FD74D80();
}

uint64_t sub_23FCD51F8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCD5200()
{
  return sub_23FD72398();
}

void sub_23FCD5210()
{
  sub_23FC9B4C4();
}

BOOL sub_23FCD5220(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FCD5230()
{
  return sub_23FD74E70();
}

void sub_23FCD524C()
{
  uint64_t v0;

}

void sub_23FCD5254()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 344) = 0;
  *(_QWORD *)(v0 - 336) = 0;
}

uint64_t sub_23FCD5268()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC577B0(v0, v1);
}

uint64_t sub_23FCD5274()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC577F4(v0, v1);
}

uint64_t sub_23FCD5280()
{
  return sub_23FCD1138();
}

uint64_t sub_23FCD5288()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23FC577F4(v1, v0);
}

uint64_t sub_23FCD5294()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_23FCD52A8()
{
  uint64_t v0;

  return sub_23FC577B0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_23FCD52B0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FCD4B4C(a1, v3, a3);
}

uint64_t sub_23FCD52B8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23FC577F4(v1, v0);
}

void sub_23FCD52C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2 - 120, a2);
}

uint64_t sub_23FCD52CC()
{
  return sub_23FD75074();
}

uint64_t sub_23FCD52D8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23FC577B0(v1, v0);
}

uint64_t sub_23FCD52E4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23FC577F4(v1, v0);
}

uint64_t sub_23FCD52F0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_23FCD52FC()
{
  return sub_23FD75044();
}

uint64_t sub_23FCD5304()
{
  return swift_task_dealloc();
}

void sub_23FCD530C()
{
  sub_23FC99A08();
}

uint64_t sub_23FCD5318()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FD4BCF8(v1, v0);
}

uint64_t sub_23FCD5324(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FCD532C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_23FCD5338()
{
  return sub_23FD73FA0();
}

void sub_23FCD5358(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FCD4B4C(v3, v4, a3);
}

uint64_t sub_23FCD5364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  int v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __n128 *v40;
  _QWORD v41[2];

  v2 = v1;
  v41[1] = a1;
  v3 = sub_23FD74834();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v41 - v10;
  v41[0] = sub_23FD71B58();
  v12 = *(_QWORD *)(v41[0] - 8);
  MEMORY[0x24BDAC7A8](v41[0], v13);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FD74840();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (void **)((char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v17 + 16))(v20, v2, v16);
  v21 = (*(uint64_t (**)(void **, uint64_t))(v17 + 88))(v20, v16);
  if (v21 == *MEMORY[0x24BEB9E40])
  {
    sub_23FCD57B8();
    v22 = *v20;
    v23 = sub_23FCD5710(*v20);
    if (v24 >> 60 == 15)
    {
      v25 = objc_msgSend(v22, sel_viewData);
      sub_23FD713D8();

      v27 = sub_23FCD57C8(v26, (SEL *)&selRef_containerBundleIdentifier);
      sub_23FCD57C8(v27, (SEL *)&selRef_targetBundleIdentifier);
      v28 = sub_23FD71B40();
      sub_23FCD57A4(v28, *MEMORY[0x24BE52F78]);
      sub_23FBFD684(&qword_256F617E0);
      v29 = (__n128 *)sub_23FCD5770();
      sub_23FCD578C(v29, (__n128)xmmword_23FD769D0);
      sub_23FD71B28();

    }
    else
    {
      v33 = v23;
      v34 = v24;
      v35 = sub_23FCD57C8(v23, (SEL *)&selRef_snippetModelBundleIdentifier);
      if (v36)
        v37 = v35;
      else
        v37 = 0xD00000000000001ALL;
      if (v36)
        v38 = v36;
      else
        v38 = 0x800000023FD855C0;
      sub_23FC577F4(v33, v34);
      v39 = MEMORY[0x242675900](v33, v34, v37, v38);
      sub_23FCD57A4(v39, *MEMORY[0x24BE52F88]);
      sub_23FBFD684(&qword_256F617E0);
      v40 = (__n128 *)sub_23FCD5770();
      sub_23FCD578C(v40, (__n128)xmmword_23FD769D0);
      sub_23FD71B28();

      sub_23FC9E934(v33, v34);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v4);
  }
  else if (v21 == *MEMORY[0x24BEB9E38])
  {
    sub_23FCD57B8();
    (*(void (**)(char *, void **, uint64_t))(v4 + 32))(v11, v20, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v11, v3);
    sub_23FD71B34();
    v30 = v41[0];
    (*(void (**)(char *, _QWORD, _QWORD))(v12 + 104))(v15, *MEMORY[0x24BE53028], v41[0]);
    sub_23FBFD684(&qword_256F617E0);
    v31 = sub_23FCD5770();
    *(_OWORD *)(v31 + 16) = xmmword_23FD769D0;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v31 + v17, v15, v30);
    sub_23FD71B28();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v11, v3);
  }
  else
  {
    sub_23FD71B88();
    return (*(uint64_t (**)(void **, uint64_t))(v17 + 8))(v20, v16);
  }
}

uint64_t sub_23FCD5710(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_snippetModelData);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23FD713D8();

  return v3;
}

uint64_t sub_23FCD5770()
{
  return swift_allocObject();
}

uint64_t sub_23FCD578C(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[1] = a2;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)a1 + v2, v4, v3);
}

uint64_t sub_23FCD57A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 104))(v2, a2, *(_QWORD *)(v4 - 96));
}

uint64_t sub_23FCD57B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_23FCD57C8(uint64_t a1, SEL *a2)
{
  void *v2;

  return sub_23FC92828(v2, a2);
}

uint64_t sub_23FCD57D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_23FCD5800()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FBFD684(&qword_256F619F8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23FD7A080;
  sub_23FC584E0(v0 + 216, v1 + 32);
  sub_23FC584E0(v0 + 256, v1 + 72);
  sub_23FC584E0(v0 + 296, v1 + 112);
  sub_23FC584E0(v0 + 336, v1 + 152);
  sub_23FC584E0(v0 + 376, v1 + 192);
  sub_23FBFF0A0();
}

uint64_t sub_23FCD587C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23FD72BF0();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_23FD72B90();
  sub_23FC8D024(v2, qword_256F617E8);
  sub_23FBFED48(v2, (uint64_t)qword_256F617E8);
  sub_23FD724B8();
  return sub_23FD72B78();
}

BOOL sub_23FCD5914(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BOOL8 v32;
  uint64_t v33;
  uint64_t v35;

  sub_23FBFD684(&qword_256F5F298);
  sub_23FC05FF4();
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v35 - v8;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23FC5F584();
    sub_23FD740A8();
    v10 = sub_23FCBCEA0();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v10);
    sub_23FCDDFD8((uint64_t)v9, (uint64_t)v6, &qword_256F5F298);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v6, v10);
    v32 = v12 == *MEMORY[0x24BE56AE0]
       || v12 == *MEMORY[0x24BE56C88]
       || v12 == *MEMORY[0x24BE56AD0]
       || v12 == *MEMORY[0x24BE56C70]
       || v12 == *MEMORY[0x24BE56AC8]
       || v12 == *MEMORY[0x24BE56AF0]
       || v12 == *MEMORY[0x24BE56B78]
       || v12 == *MEMORY[0x24BE56BC0]
       || v12 == *MEMORY[0x24BE56B20]
       || v12 == *MEMORY[0x24BE56B48]
       || v12 == *MEMORY[0x24BE56C58]
       || v12 == *MEMORY[0x24BE56C60]
       || v12 == *MEMORY[0x24BE56B60]
       || v12 == *MEMORY[0x24BE56B38]
       || v12 == *MEMORY[0x24BE56B88]
       || v12 == *MEMORY[0x24BE56B98]
       || v12 == *MEMORY[0x24BE56B30]
       || v12 == *MEMORY[0x24BE56BC8]
       || v12 == *MEMORY[0x24BE56C10]
       || v12 == *MEMORY[0x24BE56B68];
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
  }
  else
  {
    v33 = sub_23FCBCEA0();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 1, 1, v33);
    v32 = 0;
  }
  sub_23FC584B0((uint64_t)v9, &qword_256F5F298);
  return v32;
}

uint64_t sub_23FCD5B94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_23FD731C0();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_23FC0901C();
  v4 = sub_23FD7301C();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = sub_23FC0901C();
  v5 = sub_23FD72FE0();
  v2[10] = v5;
  v2[11] = *(_QWORD *)(v5 - 8);
  v2[12] = sub_23FC0901C();
  v6 = sub_23FC7E230();
  v2[13] = v6;
  v2[14] = *(_QWORD *)(v6 - 8);
  v2[15] = sub_23FC0901C();
  v7 = sub_23FD7316C();
  v2[16] = v7;
  v2[17] = *(_QWORD *)(v7 - 8);
  v2[18] = sub_23FC0901C();
  v8 = sub_23FD71474();
  v2[19] = v8;
  v2[20] = *(_QWORD *)(v8 - 8);
  v2[21] = sub_23FC0901C();
  v9 = sub_23FC10100();
  v2[22] = v9;
  v2[23] = *(_QWORD *)(v9 - 8);
  v2[24] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FCD5C7C()
{
  uint64_t v0;
  NSObject *v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  sub_23FCDE718();
  v1 = sub_23FD72BE4();
  sub_23FD74F48();
  if (sub_23FCDE794(v1))
  {
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC75DFC(v2);
    sub_23FCDE614(&dword_23FBF8000, v1, v3, "running planner");
    sub_23FBFEFA0();
  }
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 104);

  sub_23FC15950(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  *(_QWORD *)(v0 + 200) = sub_23FC8A634();
  v10 = *MEMORY[0x24BE54B38];
  *(_DWORD *)(v0 + 256) = v10;
  v11 = sub_23FD72FC8();
  *(_QWORD *)(v0 + 208) = v11;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104);
  *(_QWORD *)(v0 + 216) = v12;
  v12(v6, v10, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, *MEMORY[0x24BE54F98], v8);
  sub_23FD73D6C();
  sub_23FD73820();
  v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v0 + 224) = v13;
  v13(v9, v17);
  sub_23FC595C4(v6, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v14;
  *v14 = v0;
  v14[1] = sub_23FCD5E04;
  return sub_23FCD78E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23FCD5E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23FC5F47C();
  *v4 = *v3;
  *(_QWORD *)(v2 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 248) = v0;
  return sub_23FC5A19C();
}

void sub_23FCD5E60()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
  v8 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  sub_23FCDE9BC(*(uint64_t (**)(uint64_t))(v0 + 216));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BE54C68], v6);
  sub_23FD73D6C();
  sub_23FD73808();
  v1(v2, v3);
  sub_23FBFEFFC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23FC5B950(v8);
  sub_23FC5D048();
  sub_23FC5B2F4();
  sub_23FC5D040();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC75CB0();
  __asm { BR              X1 }
}

uint64_t sub_23FCD5F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  sub_23FC758E0();
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
  v1 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 104);
  sub_23FCDE9BC(*(uint64_t (**)(uint64_t))(v0 + 216));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BE54D88], v6);
  sub_23FCDEA00();
  sub_23FCDEA18();
  sub_23FD73D6C();
  sub_23FCDE87C();
  sub_23FD73814();
  v11(v2, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v9);
  sub_23FC5B3B0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  sub_23FC5C438();
  sub_23FC5B980();
  sub_23FC5C430();
  sub_23FC5B2D4();
  sub_23FC5C428();
  sub_23FC5AB04();
  sub_23FC090C0();
  return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCD6074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = sub_23FD731C0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v5 = sub_23FD7301C();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v6 = sub_23FD72BF0();
  v3[15] = v6;
  v3[16] = *(_QWORD *)(v6 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v7 = sub_23FD72FE0();
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = swift_task_alloc();
  v8 = sub_23FD73E08();
  v3[22] = v8;
  v3[23] = *(_QWORD *)(v8 - 8);
  v3[24] = swift_task_alloc();
  v9 = sub_23FD7316C();
  v3[25] = v9;
  v3[26] = *(_QWORD *)(v9 - 8);
  v3[27] = swift_task_alloc();
  v10 = sub_23FD71474();
  v3[28] = v10;
  v3[29] = *(_QWORD *)(v10 - 8);
  v3[30] = swift_task_alloc();
  v11 = sub_23FD72B6C();
  v3[31] = v11;
  v3[32] = *(_QWORD *)(v11 - 8);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD6210()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint8_t *v10;
  os_signpost_id_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t, uint64_t);
  _QWORD *v23;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0[6];
  v2 = (_QWORD *)sub_23FCDE87C();
  sub_23FBFDE40(v2, v3);
  v4 = sub_23FD75344();
  v6 = v5;
  v40 = v4;
  v0[35] = v4;
  v0[36] = v5;
  if (qword_256F5D2E8 != -1)
    swift_once();
  v7 = v0[34];
  v8 = sub_23FCDE844();
  sub_23FBFED48(v8, (uint64_t)qword_256F617E8);
  sub_23FD72B84();
  sub_23FD72B48();
  swift_bridgeObjectRetain_n();
  v9 = sub_23FD72B84();
  sub_23FD74FE4();
  if ((sub_23FCDE6F8() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[32] + 16))(v0[33], v0[34]);
    v10 = (uint8_t *)sub_23FBFEFF4();
    v42 = sub_23FBFEFF4();
    *(_DWORD *)v10 = 136315138;
    sub_23FC5AAE8();
    v0[5] = sub_23FC9DC40(v40, v6, &v42);
    sub_23FD75044();
    sub_23FCDE860();
    v11 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v9, (os_signpost_type_t)v7, v11, "PlannerService.setup(_:)", "Service: %s", v10, 0xCu);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }

  swift_bridgeObjectRelease_n();
  v12 = v0[34];
  v13 = v0[32];
  v14 = (_QWORD *)v0[6];
  v15 = sub_23FBFF1EC();
  v16(v15);
  sub_23FC5B9F8();
  sub_23FBFF1C4();
  v0[37] = sub_23FC5C018();
  sub_23FBFEFFC(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_23FCDEA68(v14);
  if ((sub_23FD72C80() & 1) == 0)
  {
    v25 = v0[18];
    sub_23FCDE718();
    swift_bridgeObjectRetain_n();
    sub_23FD72BE4();
    v26 = sub_23FC75B54();
    v27 = os_log_type_enabled(v25, v26);
    v28 = v0[18];
    v29 = v0[15];
    v30 = v0[16];
    if (v27)
    {
      v31 = sub_23FBFEFF4();
      v42 = sub_23FBFEFF4();
      *(_DWORD *)v31 = 136315394;
      v32 = sub_23FC5AAE8();
      v0[2] = sub_23FCDE9B0(v32, v33, &v42);
      sub_23FD75044();
      sub_23FCDE860();
      *(_WORD *)(v31 + 12) = 2080;
      v34 = sub_23FC5AAE8();
      v0[3] = sub_23FCDE9B0(v34, v35, &v42);
      sub_23FD75044();
      sub_23FCDE860();
      _os_log_impl(&dword_23FBF8000, v25, v26, "%s is not enabled. Not calling %s.setup()", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    sub_23FCDE74C();
    sub_23FCDE918(v36, v37);
    sub_23FC58AC8();
    swift_bridgeObjectRelease();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C528();
    sub_23FC75CB0();
    __asm { BR              X0 }
  }
  v18 = v0[26];
  v17 = v0[27];
  v20 = v0[24];
  v19 = v0[25];
  v39 = v0[23];
  v21 = (_QWORD *)v0[6];
  v41 = v0[22];
  v0[38] = sub_23FC8A634();
  sub_23FCDEA3C(v21);
  sub_23FD72C5C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v17, *MEMORY[0x24BE54FA8], v19);
  sub_23FD73D6C();
  sub_23FD73820();
  v22 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
  v0[39] = v22;
  v22(v20, v41);
  sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23FBFDE40(v21, *(_QWORD *)(v1 + 24));
  v23 = (_QWORD *)swift_task_alloc();
  v0[40] = v23;
  *v23 = v0;
  v23[1] = sub_23FCD66FC;
  sub_23FC75CB0();
  return sub_23FD72C68();
}

uint64_t sub_23FCD66FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return sub_23FC0907C();
}

uint64_t sub_23FCD6758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  v11 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  sub_23FBFDE40(*(_QWORD **)(v0 + 48), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 24));
  sub_23FCDEA08();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BE54C78], v4);
  sub_23FCDEA20();
  sub_23FD73808();
  v10(v1, v9);
  sub_23FC5C178(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC5B538(v11);
  sub_23FCDE74C();
  sub_23FCDE918(v5, v6);
  sub_23FC58AC8();
  swift_bridgeObjectRelease();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  v7 = (uint64_t (*)(void))sub_23FC5C528();
  return v7();
}

uint64_t sub_23FCD688C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  sub_23FD724B8();
  swift_bridgeObjectRetain_n();
  v1 = sub_23FD72BE4();
  v2 = sub_23FD74F54();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = *(_QWORD *)(v0 + 280);
    v3 = *(_QWORD *)(v0 + 288);
    v5 = (uint8_t *)sub_23FBFEFF4();
    v23 = sub_23FBFEFF4();
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_23FC9DC40(v4, v3, &v23);
    sub_23FD75044();
    swift_bridgeObjectRelease_n();
    sub_23FBFF114(&dword_23FBF8000, v1, v2, "%s failed setup", v5);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRelease_n();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  v21 = *(_QWORD *)(v0 + 296);
  v22 = *(_QWORD *)(v0 + 288);
  v18 = *(_QWORD *)(v0 + 232);
  v19 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 176);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 80);
  sub_23FCDEA3C(*(_QWORD **)(v0 + 48));
  sub_23FCDEA08();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v10, *MEMORY[0x24BE54D98], v12);
  sub_23FCDEA00();
  sub_23FCDEA18();
  sub_23FCDEA20();
  sub_23FCDE87C();
  sub_23FD73814();
  v17(v9, v16);
  sub_23FC5B538(v14);
  sub_23FC15950(v10, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v19);
  sub_23FCD6B88(v21, v20, v22);
  swift_release();
  sub_23FC1002C();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5B2D4();
  sub_23FC5E0B8();
  sub_23FC5B980();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5AB04();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCD6B88(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_signpost_id_t v25;
  void (*v26)(char *, uint64_t);
  const char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a2;
  v4 = sub_23FD72B9C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FD72B6C();
  v30 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v27 - v15;
  if (qword_256F5D2E8 != -1)
    swift_once();
  v17 = sub_23FD72B90();
  sub_23FBFED48(v17, (uint64_t)qword_256F617E8);
  swift_bridgeObjectRetain_n();
  v18 = sub_23FD72B84();
  sub_23FD72BA8();
  v28 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    swift_retain();
    sub_23FD72BD8();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v8, v4) == *MEMORY[0x24BEE7810])
    {
      v19 = 0;
      v20 = 0;
      v27 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v27 = "Service: %s";
      v20 = 2;
      v19 = 1;
    }
    v22 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v13, v16, v9);
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v32 = v24;
    *(_BYTE *)v23 = v20;
    *(_BYTE *)(v23 + 1) = v19;
    *(_WORD *)(v23 + 2) = 2080;
    swift_bridgeObjectRetain();
    v31 = sub_23FC9DC40(v29, a3, &v32);
    sub_23FD75044();
    swift_bridgeObjectRelease_n();
    v25 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v18, (os_signpost_type_t)v28, v25, "PlannerService.setup(_:)", v27, (uint8_t *)v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v24, -1, -1);
    MEMORY[0x2426798D8](v23, -1, -1);

    v26 = *(void (**)(char *, uint64_t))(v22 + 8);
    v26(v16, v9);
    return ((uint64_t (*)(char *, uint64_t))v26)(v13, v9);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v9);
  }
}

uint64_t sub_23FCD6E98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23FCDE9F4(a1);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = sub_23FC5C588();
  v1[7] = sub_23FC5C588();
  v3 = sub_23FC10100();
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 - 8);
  v1[10] = sub_23FC0901C();
  v4 = sub_23FCDE8F8();
  v1[11] = v4;
  v1[12] = *(_QWORD *)(v4 - 8);
  v1[13] = sub_23FC5C588();
  v1[14] = sub_23FC5C588();
  v1[15] = sub_23FC5C588();
  v1[16] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FCD6F40()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  uint8_t *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  if (qword_256F5D2E8 != -1)
    swift_once();
  v1 = sub_23FCDE844();
  v0[17] = sub_23FBFED48(v1, (uint64_t)qword_256F617E8);
  sub_23FD72B84();
  sub_23FCDEA10();
  v2 = sub_23FD72B84();
  sub_23FD74FE4();
  if ((sub_23FCDE608() & 1) != 0)
  {
    v3 = (uint8_t *)sub_23FC8FD5C();
    sub_23FCDE5E4(v3);
    sub_23FCDE720();
    sub_23FCDE5D0(&dword_23FBF8000, v2, v4, v5, "StandardPlanner.setup", "", v3);
    sub_23FBFEFA0();
  }
  v6 = v0[16];
  v7 = v0[12];
  v9 = v0[2];
  v8 = v0[3];

  sub_23FCDE808();
  sub_23FC5B9F8();
  sub_23FBFF1C4();
  v0[18] = sub_23FC5C018();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  v0[19] = v10;
  sub_23FC5B3B0(v6, v10);
  sub_23FCDE018(&qword_256F619C8, v11, (uint64_t (*)(uint64_t))type metadata accessor for StandardPlanner, (uint64_t)&protocol conformance descriptor for StandardPlanner);
  v12 = swift_task_alloc();
  v0[20] = v12;
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v9;
  v13 = (_QWORD *)swift_task_alloc();
  v0[21] = v13;
  *v13 = v0;
  v13[1] = sub_23FCD70D4;
  return sub_23FD75284();
}

uint64_t sub_23FCD70D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC5D3A4();
  *v3 = *v2;
  *(_QWORD *)(v0 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FCD7138()
{
  _QWORD *v0;
  NSObject *v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  _WORD *v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;
  uint64_t (*v12)(void);

  sub_23FC5ACE0();
  *(_BYTE *)(v0[3] + 128) = 1;
  sub_23FCDE718();
  v1 = sub_23FD72BE4();
  sub_23FD74F48();
  if (sub_23FCDE794(v1))
  {
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC75DFC(v2);
    sub_23FCDE614(&dword_23FBF8000, v1, v3, "Setting up all services succeeded");
    sub_23FBFEFA0();
  }
  v4 = v0[14];
  v6 = v0[9];
  v5 = (void (*)(uint64_t, uint64_t))v0[10];

  sub_23FBFEFFC((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v7 = sub_23FD72B84();
  sub_23FD72BA8();
  sub_23FD74FD8();
  if ((sub_23FCDE6F8() & 1) != 0)
  {
    v8 = v0[5];
    sub_23FC58D78();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88)) != *MEMORY[0x24BEE7810])
      sub_23FC090C8(v0[5]);
    v9 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v9);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v7, v10, v11, "StandardPlanner.setup");
    sub_23FBFEFA0();
  }
  sub_23FCDE72C();
  v5(v4, v6);
  sub_23FC58AC8();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC75A54();
  v12 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC09088(v12);
}

uint64_t sub_23FCD72A8()
{
  void (*v0)(NSObject *, uint64_t);
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  _WORD *v5;
  os_signpost_type_t v6;
  os_signpost_id_t v7;

  sub_23FC5ACE0();
  swift_task_dealloc();
  v3 = sub_23FD72B84();
  sub_23FCDE5EC();
  sub_23FD74FD8();
  if ((sub_23FCDE6F8() & 1) != 0)
  {
    v4 = *(_QWORD *)(v1 + 40);
    sub_23FC58D78();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88)) != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 40));
    v5 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v5);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v3, v6, v7, "StandardPlanner.setup");
    sub_23FBFEFA0();
  }
  sub_23FCDE72C();
  v0(v3, v2);
  sub_23FC58AC8();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC75A54();
  return sub_23FC09088(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23FCD73AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[15] = a3;
  v4[16] = a4;
  v4[14] = a2;
  v5 = sub_23FD73D9C();
  v4[17] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[18] = v6;
  v4[19] = *(_QWORD *)(v6 + 64);
  v4[20] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A28);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FCD744C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;

  sub_23FCDE8D4();
  sub_23FCD5800();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v24 = (__int128 *)(v0 + 16);
    v23 = *(_QWORD *)(v0 + 144);
    v3 = v1 + 32;
    v4 = sub_23FD74DEC();
    do
    {
      v25 = v2;
      v5 = *(_QWORD *)(v0 + 176);
      v26 = *(_QWORD *)(v0 + 168);
      v6 = *(_QWORD *)(v0 + 160);
      v7 = *(_QWORD *)(v0 + 128);
      v8 = *(_QWORD *)(v0 + 136);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, 1, 1, v4);
      sub_23FC584E0(v3, (uint64_t)v24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v6, v7, v8);
      v9 = v4;
      v10 = (*(unsigned __int8 *)(v23 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = 0;
      *(_QWORD *)(v11 + 24) = 0;
      sub_23FBFDE28(v24, v11 + 32);
      v12 = v11 + v10;
      v4 = v9;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v12, v6, v8);
      sub_23FCDDFD8(v5, v26, &qword_254346A28);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v26, 1, v9) == 1)
      {
        sub_23FCDEA90();
      }
      else
      {
        sub_23FD74DE0();
        v13 = sub_23FC5F300();
        sub_23FBFEFFC(v13, v14);
      }
      if (*(_QWORD *)(v11 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_23FCDE87C();
        v15 = sub_23FD74D80();
        v17 = v16;
        swift_unknownObjectRelease();
      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      v18 = **(_QWORD **)(v0 + 112);
      v19 = v17 | v15;
      if (v17 | v15)
      {
        v19 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v15;
        *(_QWORD *)(v0 + 80) = v17;
      }
      *(_QWORD *)(v0 + 88) = 1;
      *(_QWORD *)(v0 + 96) = v19;
      *(_QWORD *)(v0 + 104) = v18;
      swift_task_create();
      swift_release();
      sub_23FCDEA90();
      v3 += 40;
      v2 = v25 - 1;
    }
    while (v25 != 1);
  }
  swift_bridgeObjectRelease();
  sub_23FCDE018(&qword_256F619C8, v20, (uint64_t (*)(uint64_t))type metadata accessor for StandardPlanner, (uint64_t)&protocol conformance descriptor for StandardPlanner);
  *(_QWORD *)(v0 + 184) = v21;
  *(_QWORD *)(v0 + 192) = swift_task_alloc();
  sub_23FBFD684(&qword_256F614B8);
  sub_23FCDE9E0((uint64_t)sub_23FCD76E8);
  sub_23FCDE8B8();
  return sub_23FD74EB8();
}

uint64_t sub_23FCD76E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC5AEA0(v2);
  if (v1)
    *(_QWORD *)(v0 + 208) = v1;
  return sub_23FC5A63C();
}

uint64_t sub_23FCD773C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  if (*(_BYTE *)(v0 + 216) == 1)
  {
    sub_23FCDE9D4();
    sub_23FC090D0();
    sub_23FC090C0();
    v1 = (uint64_t (*)(void))sub_23FC5C528();
    return v1();
  }
  else
  {
    *(_QWORD *)(v0 + 200) = swift_task_alloc();
    sub_23FBFD684(&qword_256F614B8);
    sub_23FCDE9E0((uint64_t)sub_23FCD77EC);
    return sub_23FD74EB8();
  }
}

uint64_t sub_23FCD77EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC5AEA0(v2);
  if (v1)
    *(_QWORD *)(v0 + 208) = v1;
  return sub_23FC5A63C();
}

uint64_t sub_23FCD7840()
{
  uint64_t v0;

  sub_23FCDE9D4();
  sub_23FC090D0();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCD7878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  type metadata accessor for StandardPlanner();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_23FC61EAC;
  return sub_23FCD6074(a4, a5);
}

uint64_t sub_23FCD78E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[28] = a1;
  v2[29] = v1;
  v3 = sub_23FC10100();
  v2[30] = v3;
  v2[31] = *(_QWORD *)(v3 - 8);
  v2[32] = sub_23FC5C588();
  v2[33] = sub_23FC5C588();
  v4 = sub_23FD73E20();
  v2[34] = v4;
  v2[35] = *(_QWORD *)(v4 - 8);
  v2[36] = sub_23FC0901C();
  v5 = sub_23FD73424();
  v2[37] = v5;
  v2[38] = *(_QWORD *)(v5 - 8);
  v2[39] = sub_23FC0901C();
  v6 = sub_23FD72EB4();
  v2[40] = v6;
  v2[41] = *(_QWORD *)(v6 - 8);
  v2[42] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F61A28);
  v2[43] = sub_23FC5C588();
  v2[44] = sub_23FC5C588();
  v7 = sub_23FD73D0C();
  v2[45] = v7;
  v2[46] = *(_QWORD *)(v7 - 8);
  v2[47] = sub_23FC5C588();
  v2[48] = sub_23FC5C588();
  v8 = sub_23FD72B9C();
  v2[49] = v8;
  v2[50] = *(_QWORD *)(v8 - 8);
  v2[51] = sub_23FC5C588();
  v2[52] = sub_23FC5C588();
  v2[53] = sub_23FC5C588();
  v2[54] = sub_23FC5C588();
  v2[55] = sub_23FC5C588();
  v2[56] = sub_23FC5C588();
  v2[57] = sub_23FC5C588();
  v2[58] = sub_23FC5C588();
  v2[59] = sub_23FC5C588();
  v2[60] = sub_23FC5C588();
  v2[61] = sub_23FC5C588();
  v2[62] = sub_23FC5C588();
  v2[63] = sub_23FC5C588();
  v2[64] = sub_23FC5C588();
  v2[65] = sub_23FC5C588();
  v2[66] = sub_23FC5C588();
  v2[67] = sub_23FC5C588();
  v2[68] = sub_23FC5C588();
  v2[69] = sub_23FC5C588();
  v2[70] = sub_23FC5C588();
  v2[71] = sub_23FC5C588();
  v9 = sub_23FCBCEA0();
  v2[72] = v9;
  v2[73] = *(_QWORD *)(v9 - 8);
  v2[74] = sub_23FC5C588();
  v2[75] = sub_23FC5C588();
  v2[76] = sub_23FC5C588();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  v2[77] = sub_23FC0901C();
  v10 = sub_23FC7E230();
  v2[78] = v10;
  v2[79] = *(_QWORD *)(v10 - 8);
  v2[80] = sub_23FC0901C();
  v11 = sub_23FC5F584();
  v2[81] = v11;
  v2[82] = *(_QWORD *)(v11 - 8);
  v2[83] = sub_23FC5C588();
  v2[84] = sub_23FC5C588();
  v12 = sub_23FCDE8F8();
  v2[85] = v12;
  v2[86] = *(_QWORD *)(v12 - 8);
  v2[87] = sub_23FC5C588();
  v2[88] = sub_23FC5C588();
  v2[89] = sub_23FC5C588();
  v2[90] = sub_23FC5C588();
  v2[91] = sub_23FC5C588();
  v2[92] = sub_23FC5C588();
  v2[93] = sub_23FC5C588();
  v2[94] = sub_23FC5C588();
  v2[95] = sub_23FC5C588();
  v2[96] = sub_23FC5C588();
  v2[97] = sub_23FC5C588();
  v2[98] = sub_23FC5C588();
  v2[99] = sub_23FC5C588();
  v2[100] = sub_23FC5C588();
  v2[101] = sub_23FC5C588();
  v2[102] = sub_23FC5C588();
  v2[103] = sub_23FC5C588();
  v2[104] = sub_23FC5C588();
  v2[105] = sub_23FC5C588();
  v2[106] = sub_23FC5C588();
  v2[107] = sub_23FC5C588();
  v2[108] = sub_23FC5C588();
  v2[109] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FCD7C14()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint8_t *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  NSObject *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t result;
  uint8_t *v35;
  os_signpost_type_t v36;
  os_signpost_id_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t (*v43)();
  uint64_t v44;
  void (*v45)(uint64_t);
  _WORD *v46;
  os_signpost_type_t v47;
  os_signpost_id_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _QWORD *v68;
  uint64_t v69;
  _WORD *v70;
  os_signpost_type_t v71;
  os_signpost_id_t v72;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  uint64_t v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  os_log_type_t v97;
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;

  sub_23FC5ACE0();
  if (qword_256F5D2E8 != -1)
    swift_once();
  v1 = sub_23FCDE844();
  *(_QWORD *)(v0 + 880) = sub_23FBFED48(v1, (uint64_t)qword_256F617E8);
  sub_23FD72B84();
  sub_23FCDEA10();
  v2 = sub_23FD72B84();
  sub_23FD74FE4();
  if ((sub_23FD7502C() & 1) != 0)
  {
    v3 = (uint8_t *)sub_23FC8FD5C();
    sub_23FCDE5E4(v3);
    sub_23FCDE720();
    sub_23FCDE5D0(&dword_23FBF8000, v2, v4, v5, "StandardPlanner.run", "", v3);
    sub_23FBFEFA0();
  }
  v6 = *(_QWORD *)(v0 + 872);
  v7 = *(_QWORD *)(v0 + 864);
  v8 = *(_QWORD *)(v0 + 680);
  v9 = *(_QWORD *)(v0 + 688);
  v98 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v10 = *(_QWORD *)(v0 + 616);
  v99 = *(_QWORD *)(v0 + 648);

  sub_23FC06160(v7, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  sub_23FC5B9F8();
  sub_23FBFF1C4();
  *(_QWORD *)(v0 + 888) = sub_23FC5C018();
  v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 896) = v11;
  v11(v6, v8);
  sub_23FCDEA20();
  v12 = sub_23FD73DE4();
  sub_23FC5B950((uint64_t)v98);
  sub_23FCA1440(v12, v10);
  sub_23FC1002C();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v99) == 1)
  {
    v13 = (void (*)(uint64_t))v11;
    sub_23FC584B0(*(_QWORD *)(v0 + 616), (uint64_t *)&unk_256F61700);
    sub_23FCDE718();
    v14 = sub_23FD72BE4();
    v15 = sub_23FD74F54();
    if (sub_23FC5E334(v15))
    {
      v16 = (_WORD *)sub_23FC8FD5C();
      sub_23FC75DFC(v16);
      sub_23FCDE614(&dword_23FBF8000, v14, v17, "no events in the transcript");
      sub_23FBFEFA0();
    }
    v19 = *(_QWORD *)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 256);

    sub_23FC5B3B0(v18, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    sub_23FCDDE28();
    sub_23FC5A704();
    *v20 = 0;
    sub_23FCB3298();
    v21 = sub_23FD72B84();
    sub_23FCDE7E0();
    sub_23FD74FD8();
    if ((sub_23FCDE608() & 1) != 0)
    {
      v22 = *(_QWORD *)(v0 + 464);
      v23 = *(_QWORD *)(v0 + 392);
      v24 = *(_QWORD *)(v0 + 400);
      swift_retain();
      sub_23FD72BD8();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v22, v23) == *MEMORY[0x24BEE7810])
      {
        v25 = "[Error] Interval already ended";
      }
      else
      {
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
        v25 = "";
      }
      v35 = (uint8_t *)sub_23FC8FD5C();
      sub_23FCDE5E4(v35);
      sub_23FCDE720();
      sub_23FCDE5D0(&dword_23FBF8000, v21, v36, v37, "StandardPlanner.run", v25, v35);
      sub_23FBFEFA0();
    }
    goto LABEL_19;
  }
  v26 = *(_QWORD *)(v0 + 232);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 656) + 32))(*(_QWORD *)(v0 + 672), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 648));
  if ((*(_BYTE *)(v26 + 128) & 1) == 0)
  {
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 904) = v32;
    v33 = sub_23FCDE648(v32, (uint64_t)sub_23FCD8B58);
    return sub_23FCD6E98(v33);
  }
  v21 = *(NSObject **)(v0 + 608);
  v27 = *(_QWORD *)(v0 + 584);
  v28 = *(_QWORD *)(v0 + 576);
  sub_23FD740A8();
  v29 = (*(uint64_t (**)(NSObject *, uint64_t))(v27 + 88))(v21, v28);
  if (v29 != *MEMORY[0x24BE56AE0])
  {
    if (v29 == *MEMORY[0x24BE56C88] || v29 == *MEMORY[0x24BE56AD0])
    {
      sub_23FC090C8(*(_QWORD *)(v0 + 584));
LABEL_23:
      sub_23FCDE7FC();
      sub_23FC8A588();
      sub_23FCDE888();
      if (!v57)
      {
        v44 = sub_23FC5F300();
LABEL_34:
        v45(v44);
        v55 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 968) = v55;
        v56 = sub_23FCDE648(v55, (uint64_t)sub_23FCDA0B8);
        return sub_23FCDE6A4(v56);
      }
      v40 = *(_QWORD *)(v0 + 368);
      v41 = *(_QWORD *)(v0 + 304);
      sub_23FC7597C(v39);
      sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32));
      sub_23FCDE980();
      if (sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 88)) != *MEMORY[0x24BE55318])
      {
        sub_23FC090C8(*(_QWORD *)(v0 + 368));
        v44 = sub_23FC5E880();
        goto LABEL_34;
      }
      sub_23FC090C8(*(_QWORD *)(v0 + 304));
      v42 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 944) = v42;
      v43 = sub_23FCD9BF0;
      goto LABEL_41;
    }
    if (v29 == *MEMORY[0x24BE56C70])
    {
      v49 = *(_QWORD *)(v0 + 608);
      v50 = *(_QWORD *)(v0 + 384);
      v51 = *(_QWORD *)(v0 + 360);
      v52 = *(_QWORD *)(v0 + 368);
      v53 = *(_QWORD *)(v0 + 352);
      sub_23FC7597C(*(_QWORD *)(v0 + 584));
      sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16));
      sub_23FCDE998();
      v54 = sub_23FD7391C();
      sub_23FCDEA44(v54);
      sub_23FC584B0(v53, &qword_256F61A28);
      if ((_DWORD)v49 != 1)
      {
        sub_23FCDE900();
        result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v51, 1, v50);
        if ((_DWORD)result == 1)
        {
          __break(1u);
          return result;
        }
        sub_23FCDE84C();
        *(_QWORD *)(v0 + 200) = v51;
        sub_23FCDE8F0(&qword_256F61A30, v60, (uint64_t (*)(uint64_t))MEMORY[0x24BE54780], MEMORY[0x24BE54778]);
        v62 = sub_23FCDE9A4(v61);
        sub_23FC06160((uint64_t)v62, v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 16));
        v63 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 920) = v63;
        v58 = sub_23FCDE958(v63, (uint64_t)sub_23FCD9690);
        return sub_23FCDE6DC(v58, v59);
      }
      sub_23FCDE7C8();
      sub_23FCDEA9C();
      goto LABEL_23;
    }
    v57 = v29 == *MEMORY[0x24BE56AC8] || v29 == *MEMORY[0x24BE56AF0];
    if (!v57)
    {
      if (v29 == *MEMORY[0x24BE56B78])
      {
        v64 = *(_QWORD *)(v0 + 672);
        v65 = *(_QWORD *)(v0 + 656);
        v66 = *(_QWORD *)(v0 + 280);
        sub_23FC7597C(*(_QWORD *)(v0 + 584));
        sub_23FC75B7C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 32));
        sub_23FD73E14();
        sub_23FCDDE28();
        sub_23FC5A704();
        *v67 = 2;
        sub_23FCB3298();
        sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
        sub_23FBFF204(v64, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
        sub_23FD72B84();
        sub_23FCDE9C8();
        sub_23FD74FD8();
        if ((sub_23FCDE608() & 1) != 0)
        {
          sub_23FCDE5C4();
          sub_23FC5EF48();
          sub_23FC58AC8();
          if (sub_23FCDE588() == *MEMORY[0x24BEE7810])
            goto LABEL_53;
          goto LABEL_52;
        }
        goto LABEL_54;
      }
      if (v29 != *MEMORY[0x24BE56BC0])
      {
        if (v29 == *MEMORY[0x24BE56B20])
          goto LABEL_51;
        if (v29 != *MEMORY[0x24BE56B48] && v29 != *MEMORY[0x24BE56C58])
        {
          if (v29 == *MEMORY[0x24BE56C60])
          {
            v42 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 1040) = v42;
            v43 = sub_23FCDA9F4;
            goto LABEL_41;
          }
          if (v29 == *MEMORY[0x24BE56B60] || v29 == *MEMORY[0x24BE56B38] || v29 == *MEMORY[0x24BE56B88])
            goto LABEL_51;
          if (v29 != *MEMORY[0x24BE56B98])
          {
            if (v29 == *MEMORY[0x24BE56B30])
              goto LABEL_51;
            if (v29 != *MEMORY[0x24BE56BC8])
            {
              if (v29 != *MEMORY[0x24BE56C10] && v29 != *MEMORY[0x24BE56B68])
              {
                v77 = *(_QWORD *)(v0 + 672);
                v78 = *(_QWORD *)(v0 + 664);
                v79 = *(_QWORD *)(v0 + 656);
                v80 = *(_QWORD *)(v0 + 648);
                sub_23FD724B8();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v78, v77, v80);
                v81 = sub_23FD72BE4();
                v97 = sub_23FD74F54();
                if (os_log_type_enabled(v81, v97))
                {
                  v82 = *(_QWORD *)(v0 + 592);
                  v96 = *(_QWORD *)(v0 + 584);
                  v83 = *(_QWORD *)(v0 + 576);
                  v84 = (uint8_t *)sub_23FBFEFF4();
                  v100 = sub_23FBFEFF4();
                  *(_DWORD *)v84 = 136315138;
                  sub_23FD740A8();
                  sub_23FCDE8F0((unint64_t *)&qword_256F5F2B0, v85, (uint64_t (*)(uint64_t))MEMORY[0x24BE56C90], MEMORY[0x24BE56CA0]);
                  v86 = sub_23FD75344();
                  v88 = v87;
                  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v82, v83);
                  *(_QWORD *)(v0 + 216) = sub_23FC9DC40(v86, v88, &v100);
                  sub_23FD75044();
                  swift_bridgeObjectRelease();
                  sub_23FCDE830();
                  sub_23FBFF114(&dword_23FBF8000, v81, v97, "unhandled event payload: %s", v84);
                  sub_23FBFF10C();
                  sub_23FBFEFA0();
                }
                sub_23FCDE830();

                v89 = sub_23FC5E880();
                v90(v89);
                v91 = *(_QWORD *)(v0 + 672);
                v92 = *(_QWORD *)(v0 + 648);
                v93 = *(_QWORD *)(v0 + 608);
                v94 = *(_QWORD *)(v0 + 584);
                sub_23FCDDE28();
                sub_23FC5A704();
                *v95 = 1;
                sub_23FCB3298();
                v98(v91, v92);
                sub_23FC5C178(v93, *(uint64_t (**)(uint64_t, uint64_t))(v94 + 8));
                v21 = sub_23FD72B84();
                sub_23FD72BA8();
                sub_23FD74FD8();
                if ((sub_23FCDE608() & 1) != 0)
                {
                  sub_23FCDE5C4();
                  sub_23FC5EF48();
                  sub_23FC58AC8();
                  if (sub_23FCDE588() == *MEMORY[0x24BEE7810])
                  {
LABEL_53:
                    v70 = (_WORD *)sub_23FC8FD5C();
                    sub_23FC5D894(v70);
                    sub_23FCDE720();
                    sub_23FCDE598(&dword_23FBF8000, v21, v71, v72, "StandardPlanner.run");
                    sub_23FBFEFA0();
                  }
LABEL_52:
                  sub_23FC090C8(*(_QWORD *)(v0 + 400));
                  goto LABEL_53;
                }
LABEL_54:
                v13 = *(void (**)(uint64_t))(v0 + 896);
LABEL_19:

                v38 = sub_23FC5E880();
                v13(v38);
                swift_release();
                swift_task_dealloc();
                sub_23FC5B2D4();
                sub_23FC5AC3C();
                sub_23FC5AB04();
                sub_23FC5A574();
                sub_23FC090D0();
                sub_23FC090C0();
                sub_23FC5BCA0();
                sub_23FC5B980();
                sub_23FC5B2F4();
                sub_23FC5EFD4();
                sub_23FC5D050();
                sub_23FC5D048();
                sub_23FC5D040();
                sub_23FC5C988();
                sub_23FC5C440();
                sub_23FC5C438();
                sub_23FC5C430();
                sub_23FC5C428();
                sub_23FC5C420();
                sub_23FC5BFE8();
                sub_23FC5BFE0();
                sub_23FC5C980();
                sub_23FC5D834();
                sub_23FC5E0B8();
                sub_23FC5E0B0();
                sub_23FC5E0A8();
                sub_23FC5E0A0();
                sub_23FC5E098();
                sub_23FC5E090();
                sub_23FC5D82C();
                sub_23FC5D824();
                sub_23FC5D81C();
                sub_23FC5D814();
                sub_23FC5D80C();
                sub_23FC5D804();
                sub_23FC5D7FC();
                sub_23FC5D7F4();
                sub_23FC5E088();
                sub_23FCDE600();
                sub_23FCDE5F8();
                sub_23FCDE8A0();
                sub_23FC5CDD8();
                sub_23FC5CDC0();
                sub_23FC5CDB0();
                sub_23FC5C418();
                sub_23FC5BFD8();
                sub_23FC5C114();
                sub_23FC5BFD0();
                sub_23FC5BFC8();
                sub_23FC5BFB8();
                sub_23FC5BFB0();
                sub_23FC5C06C();
                sub_23FC5BFA8();
                sub_23FC5BFA0();
                sub_23FC5BFF0();
                sub_23FC5D914();
                sub_23FC5D7D8();
                sub_23FC5D7D0();
                sub_23FC5EC14();
                return sub_23FC09088(*(uint64_t (**)(void))(v0 + 8));
              }
LABEL_51:
              sub_23FC090C8(*(_QWORD *)(v0 + 584));
              v68 = (_QWORD *)swift_task_alloc();
              *(_QWORD *)(v0 + 992) = v68;
              v69 = sub_23FCDE648(v68, (uint64_t)sub_23FCDA304);
              return sub_23FCDE6C0(v69);
            }
          }
        }
      }
    }
    sub_23FC090C8(*(_QWORD *)(v0 + 584));
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1016) = v42;
    v43 = sub_23FCDA550;
LABEL_41:
    *v42 = v0;
    v42[1] = v43;
    v58 = sub_23FCDE940();
    return sub_23FCDE6DC(v58, v59);
  }
  v30 = *(NSObject **)(v0 + 608);
  v31 = *(_QWORD *)(v0 + 584);
  sub_23FC090C8(*(_QWORD *)(v0 + 656));
  sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v0 + 400));
    v46 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v46);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v30, v47, v48, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE454();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FCDE8A0();
  sub_23FC5CDD8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  return sub_23FCDE5A8(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCD8B58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC5D3A4();
  *v3 = *v2;
  *(_QWORD *)(v0 + 912) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FCD8BAC()
{
  NSObject *v0;
  uint64_t v1;
  int v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)();
  uint64_t v10;
  void (*v11)(uint64_t);
  _WORD *v12;
  os_signpost_type_t v13;
  os_signpost_id_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  const char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint8_t *v38;
  os_signpost_type_t v39;
  os_signpost_id_t v40;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t *v65;
  uint64_t v66;

  sub_23FC5ACE0();
  sub_23FCDE7FC();
  v2 = sub_23FC8A588();
  if (v2 != *MEMORY[0x24BE56AE0])
  {
    if (v2 == *MEMORY[0x24BE56C88] || v2 == *MEMORY[0x24BE56AD0])
    {
      sub_23FC090C8(*(_QWORD *)(v1 + 584));
LABEL_8:
      sub_23FCDE7FC();
      sub_23FC8A588();
      sub_23FCDE888();
      if (!v24)
      {
        v10 = sub_23FC5F300();
LABEL_19:
        v11(v10);
        v22 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v1 + 968) = v22;
        v23 = sub_23FCDE648(v22, (uint64_t)sub_23FCDA0B8);
        return sub_23FCDE6A4(v23);
      }
      v6 = *(_QWORD *)(v1 + 368);
      v7 = *(_QWORD *)(v1 + 304);
      sub_23FC7597C(v5);
      sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
      sub_23FCDE980();
      if (sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88)) != *MEMORY[0x24BE55318])
      {
        sub_23FC090C8(*(_QWORD *)(v1 + 368));
        v10 = sub_23FC5E880();
        goto LABEL_19;
      }
      sub_23FC090C8(*(_QWORD *)(v1 + 304));
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 944) = v8;
      v9 = sub_23FCD9BF0;
      goto LABEL_26;
    }
    if (v2 == *MEMORY[0x24BE56C70])
    {
      v16 = *(_QWORD *)(v1 + 608);
      v17 = *(_QWORD *)(v1 + 384);
      v18 = *(_QWORD *)(v1 + 360);
      v19 = *(_QWORD *)(v1 + 368);
      v20 = *(_QWORD *)(v1 + 352);
      sub_23FC7597C(*(_QWORD *)(v1 + 584));
      sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
      sub_23FCDE998();
      v21 = sub_23FD7391C();
      sub_23FCDEA44(v21);
      sub_23FC584B0(v20, &qword_256F61A28);
      if ((_DWORD)v16 != 1)
      {
        sub_23FCDE900();
        result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v18, 1, v17);
        if ((_DWORD)result == 1)
        {
          __break(1u);
          return result;
        }
        sub_23FCDE84C();
        *(_QWORD *)(v1 + 200) = v18;
        sub_23FCDE8F0(&qword_256F61A30, v27, (uint64_t (*)(uint64_t))MEMORY[0x24BE54780], MEMORY[0x24BE54778]);
        v29 = sub_23FCDE9A4(v28);
        sub_23FC06160((uint64_t)v29, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
        v30 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v1 + 920) = v30;
        v25 = sub_23FCDE958(v30, (uint64_t)sub_23FCD9690);
        return sub_23FCDE6DC(v25, v26);
      }
      sub_23FCDE7C8();
      sub_23FCDEA9C();
      goto LABEL_8;
    }
    v24 = v2 == *MEMORY[0x24BE56AC8] || v2 == *MEMORY[0x24BE56AF0];
    if (!v24)
    {
      if (v2 == *MEMORY[0x24BE56B78])
      {
        v65 = (uint64_t *)(v1 + 768);
        v31 = *(_QWORD *)(v1 + 672);
        v32 = *(_QWORD *)(v1 + 656);
        v33 = *(_QWORD *)(v1 + 280);
        sub_23FC7597C(*(_QWORD *)(v1 + 584));
        sub_23FC75B7C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
        sub_23FD73E14();
        sub_23FCDDE28();
        sub_23FC5A704();
        *v34 = 2;
        sub_23FCB3298();
        sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
        sub_23FC15950(v31, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
        sub_23FD72B84();
        sub_23FCDE9C8();
        sub_23FD74FD8();
        if ((sub_23FCDE608() & 1) != 0)
        {
          sub_23FCDE5C4();
          sub_23FC5EF48();
          sub_23FC58AC8();
          if (sub_23FCDE588() == *MEMORY[0x24BEE7810])
          {
LABEL_33:
            v35 = "[Error] Interval already ended";
            goto LABEL_38;
          }
LABEL_37:
          sub_23FC090C8(*(_QWORD *)(v1 + 400));
          v35 = "";
LABEL_38:
          v38 = (uint8_t *)sub_23FC8FD5C();
          sub_23FCDE5E4(v38);
          sub_23FCDE720();
          sub_23FCDE5D0(&dword_23FBF8000, v0, v39, v40, "StandardPlanner.run", v35, v38);
          sub_23FBFEFA0();
        }
        goto LABEL_64;
      }
      if (v2 != *MEMORY[0x24BE56BC0])
      {
        if (v2 == *MEMORY[0x24BE56B20])
          goto LABEL_36;
        if (v2 != *MEMORY[0x24BE56B48] && v2 != *MEMORY[0x24BE56C58])
        {
          if (v2 == *MEMORY[0x24BE56C60])
          {
            v8 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v1 + 1040) = v8;
            v9 = sub_23FCDA9F4;
            goto LABEL_26;
          }
          if (v2 == *MEMORY[0x24BE56B60] || v2 == *MEMORY[0x24BE56B38] || v2 == *MEMORY[0x24BE56B88])
            goto LABEL_36;
          if (v2 != *MEMORY[0x24BE56B98])
          {
            if (v2 == *MEMORY[0x24BE56B30])
              goto LABEL_36;
            if (v2 != *MEMORY[0x24BE56BC8])
            {
              if (v2 != *MEMORY[0x24BE56C10] && v2 != *MEMORY[0x24BE56B68])
              {
                v45 = *(_QWORD *)(v1 + 656);
                sub_23FD724B8();
                sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 16));
                v46 = sub_23FD72BE4();
                v47 = sub_23FD74F54();
                v48 = os_log_type_enabled(v46, v47);
                v64 = *(void (**)(uint64_t, uint64_t))(v1 + 656);
                if (v48)
                {
                  v49 = *(_QWORD *)(v1 + 592);
                  v63 = *(_QWORD *)(v1 + 584);
                  v50 = (uint8_t *)sub_23FBFEFF4();
                  v66 = sub_23FBFEFF4();
                  *(_DWORD *)v50 = 136315138;
                  sub_23FD740A8();
                  sub_23FCDE8F0((unint64_t *)&qword_256F5F2B0, v51, (uint64_t (*)(uint64_t))MEMORY[0x24BE56C90], MEMORY[0x24BE56CA0]);
                  v52 = sub_23FD75344();
                  v54 = v53;
                  sub_23FC595C4(v49, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
                  *(_QWORD *)(v1 + 216) = sub_23FC9DC40(v52, v54, &v66);
                  sub_23FD75044();
                  swift_bridgeObjectRelease();
                  sub_23FCDE81C();
                  sub_23FBFF114(&dword_23FBF8000, v46, v47, "unhandled event payload: %s", v50);
                  sub_23FBFF10C();
                  sub_23FBFEFA0();
                }
                sub_23FCDE81C();

                v55 = sub_23FBFF1EC();
                v56(v55);
                v65 = (uint64_t *)(v1 + 760);
                v57 = *(_QWORD *)(v1 + 672);
                v58 = *(_QWORD *)(v1 + 648);
                v59 = *(_QWORD *)(v1 + 608);
                v60 = *(_QWORD *)(v1 + 584);
                sub_23FCDDE28();
                sub_23FC5A704();
                *v61 = 1;
                sub_23FCB3298();
                v64(v57, v58);
                sub_23FC5C178(v59, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
                v0 = sub_23FD72B84();
                sub_23FCDE98C();
                sub_23FD74FD8();
                if ((sub_23FCDE608() & 1) != 0)
                {
                  sub_23FCDE5C4();
                  sub_23FC5EF48();
                  sub_23FC58AC8();
                  if (sub_23FCDE588() == *MEMORY[0x24BEE7810])
                    goto LABEL_33;
                  goto LABEL_37;
                }
LABEL_64:
                sub_23FCDE630();
                v62 = *v65;
                sub_23FCDE7F4();
                sub_23FC9E988(v62);
                sub_23FC58AC8();
                sub_23FCDE454();
                sub_23FC5B2D4();
                sub_23FC5AC3C();
                sub_23FC5AB04();
                sub_23FC5A574();
                sub_23FC090D0();
                sub_23FC090C0();
                sub_23FC5BCA0();
                sub_23FC5B980();
                sub_23FC5B2F4();
                sub_23FC5D050();
                sub_23FC5D048();
                sub_23FC5D040();
                sub_23FC5C988();
                sub_23FC5C440();
                sub_23FC5C438();
                sub_23FC5C430();
                sub_23FC5C428();
                sub_23FC5C420();
                sub_23FC5BFE8();
                sub_23FC5BFE0();
                sub_23FC5C980();
                sub_23FC5D834();
                sub_23FC5E0B8();
                sub_23FC5E0B0();
                sub_23FC5E0A8();
                sub_23FC5E0A0();
                sub_23FC5E098();
                sub_23FC5E090();
                sub_23FC5D82C();
                sub_23FC5D824();
                sub_23FC5D81C();
                sub_23FC5D814();
                sub_23FC5D80C();
                sub_23FC5D804();
                sub_23FC5D7FC();
                sub_23FC5D7F4();
                sub_23FC5E088();
                sub_23FCDE600();
                sub_23FCDE5F8();
                sub_23FCDE8A0();
                sub_23FC5CDD8();
                sub_23FC5CDC0();
                sub_23FC5CDB0();
                sub_23FC5C418();
                sub_23FC5BFD8();
                sub_23FC5C114();
                sub_23FC5BFD0();
                sub_23FC5BFC8();
                sub_23FC5BFB8();
                sub_23FC5BFB0();
                sub_23FC5C06C();
                sub_23FC5BFA8();
                sub_23FC5BFA0();
                sub_23FC5BFF0();
                sub_23FC5D914();
                sub_23FC5D7D8();
                sub_23FC5D7D0();
                sub_23FC5EC14();
                sub_23FC5DC9C();
                return sub_23FC09088(*(uint64_t (**)(void))(v1 + 8));
              }
LABEL_36:
              sub_23FC090C8(*(_QWORD *)(v1 + 584));
              v36 = (_QWORD *)swift_task_alloc();
              *(_QWORD *)(v1 + 992) = v36;
              v37 = sub_23FCDE648(v36, (uint64_t)sub_23FCDA304);
              return sub_23FCDE6C0(v37);
            }
          }
        }
      }
    }
    sub_23FC090C8(*(_QWORD *)(v1 + 584));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 1016) = v8;
    v9 = sub_23FCDA550;
LABEL_26:
    *v8 = v1;
    v8[1] = v9;
    v25 = sub_23FCDE940();
    return sub_23FCDE6DC(v25, v26);
  }
  v3 = *(NSObject **)(v1 + 608);
  v4 = *(_QWORD *)(v1 + 584);
  sub_23FC090C8(*(_QWORD *)(v1 + 656));
  sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 400));
    v12 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v12);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v3, v13, v14, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE454();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FCDE8A0();
  sub_23FC5CDD8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  return sub_23FCDE5A8(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23FCD9690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 928) = v2;
  *(_QWORD *)(v0 + 936) = v1;
  sub_23FC76470();
  if (!v1)
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 176);
  return sub_23FC5A63C();
}

uint64_t sub_23FCD96F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  NSObject *v11;
  _WORD *v12;
  os_signpost_type_t v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  _WORD *v19;
  os_signpost_type_t v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;

  sub_23FC5ACE0();
  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  if (*(_QWORD *)(v0 + 928))
  {
    (*(void (**)(uint64_t, _QWORD))(v4 + 8))(v5, *(_QWORD *)(v0 + 320));
    sub_23FCDE910(v3);
    sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23FCDE910(v2);
    v6 = sub_23FD72B84();
    sub_23FD72BA8();
    sub_23FD74FD8();
    if ((sub_23FCDE608() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v12 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v12);
      sub_23FCDE720();
      sub_23FCDE598(&dword_23FBF8000, v6, v13, v14, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    v15 = *(_QWORD *)(v0 + 848);
    sub_23FCDE7F4();
    sub_23FC9E988(v15);
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v16 = sub_23FCDE704();
    return sub_23FCDE5A8(v16, v17);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 648);
    v25 = *(_QWORD *)(v0 + 672);
    v7 = *(_QWORD *)(v0 + 384);
    sub_23FCDE928();
    sub_23FCDE7A8();
    sub_23FD736AC();
    sub_23FC8938C();
    sub_23FC5A704();
    v8 = *(_QWORD *)(v0 + 168);
    v9 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)v10 = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 32) = v8;
    sub_23FCB3298();
    sub_23FBFF204(v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23FCDE910(v7);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v25, v24);
    sub_23FCDE910(v2);
    v11 = sub_23FD72B84();
    sub_23FD72BA8();
    sub_23FD74FD8();
    if ((sub_23FCDE608() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v19 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v19);
      sub_23FCDE720();
      sub_23FCDE598(&dword_23FBF8000, v11, v20, v21, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    v22 = *(_QWORD *)(v0 + 840);
    sub_23FCDE7F4();
    sub_23FC9E988(v22);
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v23 = (uint64_t (*)(void))sub_23FCDE7B8();
    return sub_23FC09088(v23);
  }
}

uint64_t sub_23FCD9BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 952) = v2;
  *(_QWORD *)(v0 + 960) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FCD9C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  NSObject *v8;
  _WORD *v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  _WORD *v15;
  os_signpost_type_t v16;
  os_signpost_id_t v17;
  uint64_t (*v18)(void);

  sub_23FC5ACE0();
  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  if (*(_QWORD *)(v0 + 952))
  {
    sub_23FC5C178(*(_QWORD *)(v0 + 376), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v4 = sub_23FD72B84();
    sub_23FCDE7E0();
    sub_23FD74FD8();
    if ((sub_23FC5D74C() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v9 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v9);
      sub_23FCDE624();
      sub_23FCDE598(&dword_23FBF8000, v4, v10, v11, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    sub_23FCDE660();
    sub_23FCDE5D8();
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v12 = sub_23FCDE704();
    return sub_23FCDE5A8(v12, v13);
  }
  else
  {
    sub_23FCDE86C(97);
    sub_23FCDE928();
    sub_23FCDE7A8();
    sub_23FCDE7E8();
    sub_23FC8938C();
    sub_23FC5A704();
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)v7 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 32) = v5;
    sub_23FCB3298();
    sub_23FC5C178(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v8 = sub_23FD72B84();
    sub_23FCDE7E0();
    sub_23FD74FD8();
    if ((sub_23FC5D74C() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v15 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v15);
      sub_23FCDE624();
      sub_23FCDE598(&dword_23FBF8000, v8, v16, v17, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    sub_23FCDE660();
    sub_23FCDE5D8();
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v18 = (uint64_t (*)(void))sub_23FCDE7B8();
    return sub_23FC09088(v18);
  }
}

uint64_t sub_23FCDA0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 976) = v2;
  *(_QWORD *)(v0 + 984) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDA10C()
{
  NSObject *v0;
  uint64_t v1;
  _WORD *v2;
  os_signpost_type_t v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  sub_23FC090C8(*(_QWORD *)(v1 + 656));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 400));
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v2);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v0, v3, v4, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v5 = sub_23FCDEA28();
  return sub_23FCDE5A8(v5, v6);
}

uint64_t sub_23FCDA304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 1000) = v2;
  *(_QWORD *)(v0 + 1008) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDA358()
{
  NSObject *v0;
  uint64_t v1;
  _WORD *v2;
  os_signpost_type_t v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  sub_23FC090C8(*(_QWORD *)(v1 + 656));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 400));
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v2);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v0, v3, v4, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v5 = sub_23FCDEA28();
  return sub_23FCDE5A8(v5, v6);
}

uint64_t sub_23FCDA550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 1024) = v2;
  *(_QWORD *)(v0 + 1032) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDA5A4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  NSObject *v6;
  _WORD *v7;
  os_signpost_type_t v8;
  os_signpost_id_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  _WORD *v13;
  os_signpost_type_t v14;
  os_signpost_id_t v15;
  uint64_t (*v16)(void);

  sub_23FC5ACE0();
  v1 = *(_QWORD *)(v0 + 656);
  if (*(_QWORD *)(v0 + 1024))
  {
    sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v2 = sub_23FD72B84();
    sub_23FCDE7E0();
    sub_23FD74FD8();
    if ((sub_23FC5D74C() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v7 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v7);
      sub_23FCDE624();
      sub_23FCDE598(&dword_23FBF8000, v2, v8, v9, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    sub_23FCDE660();
    sub_23FCDE5D8();
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2F4();
    sub_23FC090C0();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v10 = sub_23FCDE704();
    return sub_23FCDE5A8(v10, v11);
  }
  else
  {
    sub_23FCDE86C(97);
    sub_23FCDE928();
    sub_23FCDE7A8();
    sub_23FCDE7E8();
    sub_23FC8938C();
    sub_23FC5A704();
    v3 = *(_QWORD *)(v0 + 88);
    v4 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)v5 = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 32) = v3;
    sub_23FCB3298();
    sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v6 = sub_23FD72B84();
    sub_23FCDE7E0();
    sub_23FD74FD8();
    if ((sub_23FC5D74C() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v13 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v13);
      sub_23FCDE624();
      sub_23FCDE598(&dword_23FBF8000, v6, v14, v15, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    sub_23FCDE660();
    sub_23FCDE5D8();
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v16 = (uint64_t (*)(void))sub_23FCDE7B8();
    return sub_23FC09088(v16);
  }
}

uint64_t sub_23FCDA9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 1048) = v2;
  *(_QWORD *)(v0 + 1056) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDAA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  NSObject *v9;
  _WORD *v10;
  os_signpost_type_t v11;
  os_signpost_id_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  _WORD *v17;
  os_signpost_type_t v18;
  os_signpost_id_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);

  sub_23FC5ACE0();
  v1 = *(_QWORD *)(v0 + 672);
  v2 = *(_QWORD *)(v0 + 656);
  v3 = *(_QWORD *)(v0 + 608);
  v4 = *(_QWORD *)(v0 + 584);
  if (*(_QWORD *)(v0 + 1048))
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 8))(v1, *(_QWORD *)(v0 + 648));
    sub_23FC5B3B0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v5 = sub_23FD72B84();
    sub_23FD72BA8();
    sub_23FD74FD8();
    if ((sub_23FCDE608() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v10 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v10);
      sub_23FCDE720();
      sub_23FCDE598(&dword_23FBF8000, v5, v11, v12, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    v13 = *(_QWORD *)(v0 + 784);
    sub_23FCDE7F4();
    sub_23FC9E988(v13);
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2F4();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC090C0();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v14 = sub_23FCDE704();
    return sub_23FCDE5A8(v14, v15);
  }
  else
  {
    sub_23FCDE86C(97);
    sub_23FCDE928();
    sub_23FCDE7A8();
    sub_23FCDE7E8();
    sub_23FC8938C();
    sub_23FC5A704();
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)v8 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 32) = v6;
    sub_23FCB3298();
    sub_23FC15950(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23FC5B3B0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v9 = sub_23FD72B84();
    sub_23FD72BA8();
    sub_23FD74FD8();
    if ((sub_23FCDE608() & 1) != 0)
    {
      sub_23FCDE5C4();
      sub_23FC5EF48();
      sub_23FC58AC8();
      if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
        sub_23FC090C8(*(_QWORD *)(v0 + 400));
      v17 = (_WORD *)sub_23FC8FD5C();
      sub_23FC5D894(v17);
      sub_23FCDE720();
      sub_23FCDE598(&dword_23FBF8000, v9, v18, v19, "StandardPlanner.run");
      sub_23FBFEFA0();
    }
    sub_23FCDE630();
    v20 = *(_QWORD *)(v0 + 776);
    sub_23FCDE7F4();
    sub_23FC9E988(v20);
    sub_23FC58AC8();
    sub_23FCDE324();
    sub_23FC5B2D4();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FCDE600();
    sub_23FCDE5F8();
    sub_23FC5CDC0();
    sub_23FC5CDB0();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v21 = (uint64_t (*)(void))sub_23FCDE7B8();
    return sub_23FC09088(v21);
  }
}

uint64_t sub_23FCDAEE0()
{
  NSObject *v0;
  uint64_t v1;
  _WORD *v2;
  os_signpost_type_t v3;
  os_signpost_id_t v4;
  uint64_t (*v5)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  sub_23FC090C8(*(_QWORD *)(v1 + 656));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 400));
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v2);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v0, v3, v4, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v5 = (uint64_t (*)(void))sub_23FCDE668();
  return sub_23FC09088(v5);
}

uint64_t sub_23FCDB0D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  NSObject *v8;
  _WORD *v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;
  uint64_t (*v12)(void);

  sub_23FC5ACE0();
  v1 = v0[84];
  v2 = v0[82];
  v3 = v0[76];
  v4 = v0[48];
  v6 = v0[45];
  v5 = v0[46];
  sub_23FC090C8(v0[41]);
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v4, v6);
  sub_23FBFEFFC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)(v0 + 22));
  v7(v3, v6);
  v8 = sub_23FD72B84();
  sub_23FD72BA8();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(v0[50]);
    v9 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v9);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v8, v10, v11, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v12 = (uint64_t (*)(void))sub_23FCDE668();
  return sub_23FC09088(v12);
}

uint64_t sub_23FCDB328()
{
  uint64_t *v0;
  NSObject *v1;
  uint64_t v2;
  _WORD *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  uint64_t (*v6)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  v1 = v0[76];
  v2 = v0[73];
  sub_23FC090C8(v0[82]);
  sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(v0[50]);
    v3 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v3);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v1, v4, v5, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v6 = (uint64_t (*)(void))sub_23FCDE668();
  return sub_23FC09088(v6);
}

uint64_t sub_23FCDB534()
{
  uint64_t *v0;
  NSObject *v1;
  uint64_t v2;
  _WORD *v3;
  os_signpost_type_t v4;
  os_signpost_id_t v5;
  uint64_t (*v6)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  v1 = v0[84];
  v2 = v0[82];
  sub_23FC090C8(v0[46]);
  sub_23FCDE63C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(v0[50]);
    v3 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v3);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v1, v4, v5, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v6 = (uint64_t (*)(void))sub_23FCDE668();
  return sub_23FC09088(v6);
}

uint64_t sub_23FCDB73C()
{
  NSObject *v0;
  uint64_t v1;
  _WORD *v2;
  os_signpost_type_t v3;
  os_signpost_id_t v4;
  uint64_t (*v5)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  sub_23FC090C8(*(_QWORD *)(v1 + 656));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 400));
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v2);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v0, v3, v4, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v5 = (uint64_t (*)(void))sub_23FCDE668();
  return sub_23FC09088(v5);
}

uint64_t sub_23FCDB934()
{
  NSObject *v0;
  uint64_t v1;
  _WORD *v2;
  os_signpost_type_t v3;
  os_signpost_id_t v4;
  uint64_t (*v5)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  sub_23FC090C8(*(_QWORD *)(v1 + 656));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FCDE5C4();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 400));
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v2);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v0, v3, v4, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v5 = (uint64_t (*)(void))sub_23FCDE668();
  return sub_23FC09088(v5);
}

uint64_t sub_23FCDBB2C()
{
  NSObject *v0;
  uint64_t v1;
  _WORD *v2;
  os_signpost_type_t v3;
  os_signpost_id_t v4;
  uint64_t (*v5)(void);

  sub_23FC5ACE0();
  sub_23FCDE79C();
  sub_23FC090C8(*(_QWORD *)(v1 + 656));
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    sub_23FC58D78();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FCDE588() != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v1 + 400));
    v2 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v2);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v0, v3, v4, "StandardPlanner.run");
    sub_23FBFEFA0();
  }
  sub_23FCDE630();
  sub_23FCDE660();
  sub_23FCDE5D8();
  sub_23FC58AC8();
  sub_23FCDE1E4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  sub_23FCDE600();
  sub_23FCDE5F8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v5 = (uint64_t (*)(void))sub_23FCDE668();
  return sub_23FC09088(v5);
}

uint64_t sub_23FCDBD28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_23FC10100();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FCDBD6C()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[6];
  sub_23FCDE718();
  sub_23FD72BE4();
  v2 = sub_23FC75B54();
  if (sub_23FC5E334(v2))
  {
    v3 = (_WORD *)sub_23FC8FD5C();
    sub_23FC75DFC(v3);
    sub_23FCDE614(&dword_23FBF8000, v1, v4, "running query decoration...");
    sub_23FBFEFA0();
  }
  v6 = v0[5];
  v5 = v0[6];

  sub_23FC595C4(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  v0[7] = v7;
  *v7 = v0;
  v7[1] = sub_23FCDBE20;
  v8 = sub_23FCDE940();
  return sub_23FCDC79C(v8, v9);
}

uint64_t sub_23FCDBE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23FC5F47C();
  v4 = *v3;
  sub_23FC5AEA0(v5);
  if (v1)
  {
    swift_task_dealloc();
    return sub_23FC5B0D0(*(uint64_t (**)(void))(v4 + 8));
  }
  else
  {
    *(_QWORD *)(v2 + 64) = v0;
    return sub_23FC5A19C();
  }
}

uint64_t sub_23FCDBE80()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v3;

  if (*(_QWORD *)(v0 + 64))
    v1 = *(_QWORD *)(v0 + 64);
  else
    v1 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v1 + 16))
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    sub_23FC1002C();
    sub_23FCDDE28();
    sub_23FC5A704();
    *v3 = 4;
    sub_23FCB3298();
    swift_task_dealloc();
    return sub_23FC5B0D0(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23FCDBF1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23FCDE9F4(a1);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = sub_23FC5C588();
  v1[7] = sub_23FC5C588();
  v1[8] = sub_23FC5C588();
  v1[9] = sub_23FC5C588();
  v3 = sub_23FCDE8F8();
  v1[10] = v3;
  v1[11] = *(_QWORD *)(v3 - 8);
  v1[12] = sub_23FC5C588();
  v1[13] = sub_23FC5C588();
  v1[14] = sub_23FC5C588();
  v1[15] = sub_23FC5C588();
  v1[16] = sub_23FC5C588();
  v1[17] = sub_23FC5C588();
  v4 = sub_23FC10100();
  v1[18] = v4;
  v1[19] = *(_QWORD *)(v4 - 8);
  v1[20] = sub_23FC5C588();
  v1[21] = sub_23FC5C588();
  v1[22] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDC000()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint8_t *v8;
  os_signpost_type_t v9;
  os_signpost_id_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0[22];
  sub_23FCDE718();
  sub_23FD72BE4();
  v2 = sub_23FC75B54();
  if (sub_23FC5E334(v2))
  {
    v3 = (_WORD *)sub_23FC8FD5C();
    sub_23FC75DFC(v3);
    sub_23FCDE614(&dword_23FBF8000, v1, v4, "StandardPlanner: generating plan");
    sub_23FBFEFA0();
  }
  v5 = v0[19];

  v0[23] = *(_QWORD *)(v5 + 8);
  sub_23FCDEA84();
  if (qword_256F5D2E8 != -1)
    swift_once();
  v6 = sub_23FCDE844();
  v0[24] = sub_23FBFED48(v6, (uint64_t)qword_256F617E8);
  sub_23FD72B84();
  sub_23FCDEA10();
  v7 = sub_23FD72B84();
  sub_23FD74FE4();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    v8 = (uint8_t *)sub_23FC8FD5C();
    sub_23FCDE5E4(v8);
    sub_23FCDE624();
    sub_23FCDE5D0(&dword_23FBF8000, v7, v9, v10, "StandardPlanner.generatePlan", "", v8);
    sub_23FBFEFA0();
  }
  v11 = v0[21];
  v12 = v0[17];
  v13 = v0[11];

  sub_23FCDE808();
  sub_23FC5B9F8();
  sub_23FBFF1C4();
  v0[25] = sub_23FC5C018();
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  v0[26] = v14;
  sub_23FC5B3B0(v12, v14);
  sub_23FD724B8();
  sub_23FD72BE4();
  v15 = sub_23FC75B54();
  if (sub_23FC5E334(v15))
  {
    v16 = (_WORD *)sub_23FC8FD5C();
    sub_23FC75DFC(v16);
    sub_23FCDE614(&dword_23FBF8000, v11, v17, "generating a plan...");
    sub_23FBFEFA0();
  }

  sub_23FCDEA84();
  v18 = (_QWORD *)swift_task_alloc();
  v0[27] = v18;
  *v18 = v0;
  v18[1] = sub_23FCDC1E8;
  v19 = sub_23FCDE940();
  return sub_23FCDC79C(v19, v20);
}

uint64_t sub_23FCDC1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 224) = v2;
  *(_QWORD *)(v0 + 232) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDC238()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  char v5;
  NSObject *v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  const char *v19;
  _WORD *v20;
  os_signpost_type_t v21;
  os_signpost_id_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint8_t *v25;
  os_signpost_id_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  sub_23FC758E0();
  if (!*(_QWORD *)(v0 + 224))
  {
    sub_23FD724F4();
    v5 = sub_23FD7262C();
    sub_23FC1002C();
    if ((v5 & 1) != 0)
    {
      sub_23FCDE718();
      v6 = sub_23FD72BE4();
      sub_23FD74F48();
      if (sub_23FCDE794(v6))
      {
        v7 = (_WORD *)sub_23FC8FD5C();
        sub_23FC75DFC(v7);
        sub_23FCDE614(&dword_23FBF8000, v6, v8, "Skipping planner");
        sub_23FBFEFA0();
      }
      v10 = (uint64_t *)(v0 + 112);
      v9 = *(_QWORD *)(v0 + 112);
      v11 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
      v12 = *(_QWORD *)(v0 + 160);
      v13 = *(_QWORD *)(v0 + 144);

      v11(v12, v13);
      sub_23FCDDE28();
      sub_23FC5A704();
      *v14 = 2;
      sub_23FCB3298();
      sub_23FD72B84();
      sub_23FCDE8A8();
      sub_23FD74FD8();
      if ((sub_23FCDE934() & 1) != 0)
      {
        v15 = *(_QWORD *)(v0 + 64);
        v17 = *(_QWORD *)(v0 + 32);
        v16 = *(_QWORD *)(v0 + 40);
        goto LABEL_12;
      }
    }
    else
    {
      v10 = (uint64_t *)(v0 + 104);
      v9 = *(_QWORD *)(v0 + 104);
      sub_23FCDDE28();
      sub_23FC5A704();
      *v18 = 6;
      sub_23FCB3298();
      sub_23FD72B84();
      sub_23FCDE8A8();
      sub_23FD74FD8();
      if ((sub_23FCDE934() & 1) != 0)
      {
        v15 = *(_QWORD *)(v0 + 56);
        v17 = *(_QWORD *)(v0 + 32);
        v16 = *(_QWORD *)(v0 + 40);
LABEL_12:
        swift_retain();
        sub_23FD72BD8();
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 88))(v15, v17) == *MEMORY[0x24BEE7810])
        {
          v19 = "[Error] Interval already ended";
        }
        else
        {
          sub_23FC090C8(*(_QWORD *)(v0 + 40));
          v19 = "";
        }
        v25 = (uint8_t *)sub_23FC8FD5C();
        *(_WORD *)v25 = 0;
        v26 = sub_23FD72B54();
        sub_23FCDE5D0(&dword_23FBF8000, v1, (os_signpost_type_t)v9, v26, "StandardPlanner.generatePlan", v19, v25);
        sub_23FBFEFA0();
      }
    }
    v30 = *v10;
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v28 = *(_QWORD *)(v0 + 80);

    v27(v30, v28);
    swift_release();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
  }
  v2 = *(_QWORD *)(v0 + 120);
  v3 = sub_23FD72B84();
  sub_23FCDE5EC();
  sub_23FD74FD8();
  if ((sub_23FCDE6F8() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 40);
    sub_23FC58D78();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88)) != *MEMORY[0x24BEE7810])
      sub_23FC090C8(*(_QWORD *)(v0 + 40));
    v20 = (_WORD *)sub_23FC8FD5C();
    sub_23FC5D894(v20);
    sub_23FCDE624();
    sub_23FCDE598(&dword_23FBF8000, v3, v21, v22, "StandardPlanner.generatePlan");
    sub_23FBFEFA0();
  }
  v31 = *(_QWORD *)(v0 + 224);
  v23 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  v24 = *(_QWORD *)(v0 + 120);
  sub_23FCDE774(v3);
  v23(v24, v2);
  swift_release();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  return sub_23FCDE688(v31, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FCDC60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint8_t *v28;
  os_signpost_id_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t (*v31)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23FCDE8D4();
  v21 = sub_23FD72B84();
  sub_23FCDE98C();
  v22 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    v24 = v20[5];
    v23 = v20[6];
    v25 = v20[4];
    sub_23FC58D78();
    sub_23FD72BD8();
    sub_23FC58AC8();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) == *MEMORY[0x24BEE7810])
    {
      v26 = "[Error] Interval already ended";
    }
    else
    {
      sub_23FC090C8(v20[5]);
      v26 = "";
    }
    v28 = (uint8_t *)sub_23FC8FD5C();
    *(_WORD *)v28 = 0;
    v29 = sub_23FD72B54();
    sub_23FCDE5D0(&dword_23FBF8000, v21, (os_signpost_type_t)v22, v29, "StandardPlanner.generatePlan", v26, v28);
    sub_23FBFEFA0();
  }
  v27 = v20[12];
  v40 = v20[29];
  v30 = (void (*)(uint64_t, uint64_t))v20[26];
  v41 = v20[15];
  v42 = v20[14];
  sub_23FCDE774(v21);
  v30(v27, v22);
  swift_release();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC5AC3C();
  sub_23FC5A574();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC75A54();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FCDE8B8();
  return v31(v31, v32, v33, v34, v35, v36, v37, v38, v27, v40, v41, v42, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_23FCDC79C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = *v2;
  v4 = sub_23FD731C0();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = sub_23FC0901C();
  v5 = sub_23FD7301C();
  v3[21] = v5;
  v3[22] = *(_QWORD *)(v5 - 8);
  v3[23] = sub_23FC0901C();
  v6 = sub_23FC10100();
  v3[24] = v6;
  v3[25] = *(_QWORD *)(v6 - 8);
  v3[26] = sub_23FC0901C();
  v7 = sub_23FC5F584();
  v3[27] = v7;
  v3[28] = *(_QWORD *)(v7 - 8);
  v3[29] = sub_23FC0901C();
  v8 = sub_23FD72FE0();
  v3[30] = v8;
  v3[31] = *(_QWORD *)(v8 - 8);
  v3[32] = sub_23FC0901C();
  v9 = sub_23FD72C38();
  v3[33] = v9;
  v3[34] = *(_QWORD *)(v9 - 8);
  v3[35] = sub_23FC0901C();
  v10 = sub_23FC7E230();
  v3[36] = v10;
  v3[37] = *(_QWORD *)(v10 - 8);
  v3[38] = sub_23FC0901C();
  v11 = sub_23FD7316C();
  v3[39] = v11;
  v3[40] = *(_QWORD *)(v11 - 8);
  v3[41] = sub_23FC0901C();
  v12 = sub_23FD71474();
  v3[42] = v12;
  v3[43] = *(_QWORD *)(v12 - 8);
  v3[44] = sub_23FC5C588();
  v3[45] = sub_23FC5C588();
  v3[46] = sub_23FC5C588();
  v13 = sub_23FCDE8F8();
  v3[47] = v13;
  v3[48] = *(_QWORD *)(v13 - 8);
  v3[49] = sub_23FC5C588();
  v3[50] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDC90C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_signpost_id_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(uint64_t, uint64_t);
  _QWORD *v36;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_23FC758E0();
  v1 = *(_QWORD **)(v0 + 112);
  sub_23FCDEA68(v1);
  if ((sub_23FD72C80() & 1) != 0)
  {
    if (qword_256F5D2E8 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 400);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = sub_23FCDE844();
    sub_23FBFED48(v4, (uint64_t)qword_256F617E8);
    sub_23FD72B84();
    sub_23FD72B48();
    sub_23FC584E0(v3, v0 + 56);
    v5 = sub_23FD72B84();
    sub_23FD74FE4();
    if ((sub_23FCDE6F8() & 1) != 0)
    {
      (*(void (**)(void))(*(_QWORD *)(v0 + 384) + 16))();
      v6 = (uint8_t *)sub_23FBFEFF4();
      sub_23FBFEFF4();
      *(_DWORD *)v6 = 136315138;
      sub_23FBFDE40((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
      v7 = sub_23FD75344();
      *(_QWORD *)(v0 + 104) = sub_23FCDE94C(v7, v8, v9, v10, v11, v12, v13, v14, v40, v41, v43, (uint64_t)(v6 + 4));
      sub_23FD75044();
      sub_23FC1002C();
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 56);
      v15 = sub_23FD72B54();
      _os_signpost_emit_with_name_impl(&dword_23FBF8000, v5, (os_signpost_type_t)v2, v15, "PlannerService.handle(_:)", "Service: %s", v6, 0xCu);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    v28 = *(_QWORD *)(v0 + 384);

    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 56);
    v29 = *(_QWORD *)(v0 + 400);
    v30 = *(_QWORD *)(v0 + 384);
    v48 = *(_QWORD *)(v0 + 344);
    v49 = *(_QWORD *)(v0 + 360);
    v31 = *(_QWORD *)(v0 + 328);
    v50 = *(_QWORD *)(v0 + 336);
    v32 = *(_QWORD *)(v0 + 320);
    v33 = *(_QWORD *)(v0 + 304);
    v45 = *(_QWORD *)(v0 + 296);
    v46 = *(_QWORD *)(v0 + 368);
    v47 = *(_QWORD *)(v0 + 288);
    v34 = *(_QWORD **)(v0 + 112);
    v42 = *(_QWORD *)(v0 + 312);
    sub_23FC06160(*(_QWORD *)(v0 + 392), v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
    sub_23FC5B9F8();
    sub_23FBFF1C4();
    *(_QWORD *)(v0 + 408) = sub_23FC5C018();
    sub_23FC595C4(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    *(_QWORD *)(v0 + 416) = sub_23FC8A634();
    sub_23FBFDE40(v34, v1[3]);
    sub_23FD72C5C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x24BE54FB0], v42);
    sub_23FD73D6C();
    sub_23FD73820();
    v35 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    *(_QWORD *)(v0 + 424) = v35;
    v35(v33, v47);
    sub_23FC15950(v31, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v46, v50);
    sub_23FD72C2C();
    sub_23FBFDE40(v34, v1[3]);
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 432) = v36;
    *v36 = v0;
    v36[1] = sub_23FCDCE40;
    return sub_23FD72C74();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 112);
    sub_23FCDE718();
    sub_23FC584E0(v16, v0 + 16);
    v17 = sub_23FD72BE4();
    v18 = sub_23FD74F48();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)sub_23FBFEFF4();
      sub_23FBFEFF4();
      *(_DWORD *)v19 = 136315138;
      sub_23FCDEA3C((_QWORD *)(v0 + 16));
      v20 = sub_23FD75344();
      *(_QWORD *)(v0 + 96) = sub_23FCDE94C(v20, v21, v22, v23, v24, v25, v26, v27, v40, v41, v43, v44);
      sub_23FD75044();
      sub_23FC1002C();
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
      sub_23FBFF114(&dword_23FBF8000, v17, v18, "Service %s is disabled. Skipping handle.", v19);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);

    v38 = sub_23FBFF1EC();
    v39(v38);
    swift_task_dealloc();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    return sub_23FCDE688(0, *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23FCDCE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 440) = v2;
  *(_QWORD *)(v0 + 448) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FCDCE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_23FCDE8D4();
  v21 = v20[55];
  sub_23FBFDE40((_QWORD *)v20[14], *(_QWORD *)(v20[14] + 24));
  sub_23FCDEA08();
  v56 = v21;
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = v20[55];
    v24 = v20[43];
    v25 = v20[28];
    a17 = MEMORY[0x24BEE4AF8];
    sub_23FC9B970();
    v26 = v23 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v58 = *(_QWORD *)(v25 + 72);
    v27 = v25;
    v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16);
    v29 = a17;
    do
    {
      v30 = v20[29];
      v28(v30, v26, v20[27]);
      sub_23FD74048();
      sub_23FBFEFFC(v30, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B970();
        v29 = a17;
      }
      v31 = *(_QWORD *)(v29 + 16);
      if (v31 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        sub_23FC9B970();
        v29 = a17;
      }
      v32 = v20[44];
      v33 = v20[42];
      *(_QWORD *)(v29 + 16) = v31 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v29+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v31, v32, v33);
      a17 = v29;
      v26 += v58;
      --v22;
    }
    while (v22);
  }
  v34 = v20[46];
  v59 = v20[42];
  v35 = v20[38];
  v36 = v20[36];
  v52 = v20[35];
  v54 = v20[43];
  v49 = (void (*)(uint64_t, uint64_t))v20[53];
  v50 = v20[34];
  v37 = v20[32];
  v51 = v20[33];
  v38 = v20[31];
  sub_23FBFD684(&qword_256F619B8);
  sub_23FD736E8();
  sub_23FCDE96C(*MEMORY[0x24BE54C80], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 104));
  sub_23FD73D6C();
  sub_23FD73808();
  v49(v35, v36);
  sub_23FC5C178(v37, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  v39 = *(_QWORD *)(v56 + 16);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v51);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v34, v59);
  if (v39)
  {
    v60 = v20[55];
  }
  else
  {
    swift_bridgeObjectRelease();
    v60 = 0;
  }
  sub_23FCDD360(v20[51], v20[14]);
  swift_release();
  v53 = v20[26];
  v55 = v20[23];
  v57 = v20[20];
  swift_task_dealloc();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FCDE8B8();
  return v41(v40, v41, v42, v43, v44, v45, v46, v47, a9, v49, v50, v51, v53, v55, v57, v60, a17, a18, a19, a20);
}

uint64_t sub_23FCDD188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  v12 = *(_QWORD *)(v0 + 408);
  v8 = *(_QWORD *)(v0 + 368);
  v10 = *(_QWORD *)(v0 + 344);
  v11 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD **)(v0 + 112);
  sub_23FC090C8(*(_QWORD *)(v0 + 272));
  sub_23FBFDE40(v4, v4[3]);
  sub_23FD72C5C();
  sub_23FCDE96C(*MEMORY[0x24BE54DA0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  sub_23FCDEA00();
  sub_23FCDEA18();
  sub_23FD73D6C();
  sub_23FCDE87C();
  sub_23FD73814();
  v9(v1, v7);
  sub_23FC5B538(v6);
  sub_23FC5C178(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v11);
  sub_23FCDD360(v12, (uint64_t)v4);
  sub_23FC58AC8();
  sub_23FC5C980();
  sub_23FC5E0B8();
  sub_23FC5AC3C();
  sub_23FC5E0B0();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5BCA0();
  sub_23FC5D834();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  swift_task_dealloc();
  sub_23FC5AB04();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FCDD360(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_signpost_id_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  const char *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];

  v3 = sub_23FD72B9C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD72B6C();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v28 - v15;
  if (qword_256F5D2E8 != -1)
    swift_once();
  v17 = sub_23FD72B90();
  sub_23FBFED48(v17, (uint64_t)qword_256F617E8);
  sub_23FC584E0(a2, (uint64_t)v33);
  v18 = sub_23FD72B84();
  sub_23FD72BA8();
  v30 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    swift_retain();
    sub_23FD72BD8();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v7, v3) == *MEMORY[0x24BEE7810])
    {
      v19 = 0;
      v20 = 0;
      v29 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      v29 = "Service: %s";
      v20 = 2;
      v19 = 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v16, v8);
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v32 = v23;
    *(_BYTE *)v22 = v20;
    *(_BYTE *)(v22 + 1) = v19;
    *(_WORD *)(v22 + 2) = 2080;
    sub_23FBFDE40(v33, v33[3]);
    v24 = sub_23FD75344();
    v31 = sub_23FC9DC40(v24, v25, &v32);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v33);
    v26 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v18, (os_signpost_type_t)v30, v26, "PlannerService.handle(_:)", v29, (uint8_t *)v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v23, -1, -1);
    MEMORY[0x2426798D8](v22, -1, -1);

    v27 = *(void (**)(char *, uint64_t))(v9 + 8);
    v27(v16, v8);
    return ((uint64_t (*)(char *, uint64_t))v27)(v13, v8);
  }
  else
  {

    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v33);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  }
}

uint64_t StandardPlanner.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 136);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 176);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 216);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 256);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 296);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 336);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 376);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t StandardPlanner.__deallocating_deinit()
{
  StandardPlanner.deinit();
  return swift_defaultActor_deallocate();
}

void StandardPlanner.unownedExecutor.getter()
{
  sub_23FC7A748();
}

void sub_23FCDD6F4()
{
  StandardPlanner.unownedExecutor.getter();
}

uint64_t sub_23FCDD70C()
{
  return sub_23FCD57D4();
}

BOOL sub_23FCDD72C(uint64_t a1)
{
  return sub_23FCD5914(a1);
}

uint64_t StandardPlannerConfiguration.makePlanner<A>(sessionId:state:toolbox:identityChain:toolExecutionSession:instrumentationSender:actionRequirements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56[2];
  _BYTE v57[48];

  v47 = a7;
  v55 = a6;
  v44[0] = a5;
  v44[1] = a4;
  v50 = a1;
  v48 = a9;
  sub_23FBFD684(&qword_254346D90);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFF180();
  v16 = v15 - v14;
  v45 = *(_QWORD *)(a8 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFF180();
  v21 = v20 - v19;
  v22 = sub_23FD72E6C();
  v53 = *(_QWORD *)(v22 - 8);
  v54 = v22;
  sub_23FC05FF4();
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v52 = (uint64_t)v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v46 = (uint64_t)v44 - v28;
  v29 = sub_23FD74120();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31);
  sub_23FBFF180();
  sub_23FD72C20();
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  sub_23FCDE678();
  sub_23FC584E0(a5, (uint64_t)v57);
  swift_bridgeObjectRetain();
  v51 = sub_23FD72C14();
  sub_23FD72E84();
  sub_23FCDE678();
  v49 = sub_23FD72E78();
  sub_23FCDE678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v21, v47, a8);
  sub_23FD72E60();
  sub_23FD72E9C();
  type metadata accessor for SessionIdentityPack(0);
  v32(v16, a3, v29);
  v33 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v16, 0, 1, v29);
  sub_23FCDE978(v33, (uint64_t)v57);
  swift_bridgeObjectRetain();
  v34 = sub_23FD72E90();
  sub_23FD72ED8();
  v35 = sub_23FCDE678();
  sub_23FCDE978(v35, (uint64_t)v57);
  swift_bridgeObjectRetain();
  v36 = sub_23FD72ECC();
  sub_23FC584E0(v55, (uint64_t)v57);
  sub_23FCDE978(v37, (uint64_t)v56);
  type metadata accessor for StandardPlanner();
  v38 = swift_allocObject();
  v40 = v52;
  v39 = v53;
  v41 = v46;
  sub_23FC06160(v52, v46, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
  v42 = sub_23FCDDB1C((uint64_t)v57, v56, v51, v49, v40, v34, v36, v38);
  sub_23FC595C4(v41, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
  return v42;
}

uint64_t sub_23FCDDA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t result;

  result = StandardPlannerConfiguration.makePlanner<A>(sessionId:state:toolbox:identityChain:toolExecutionSession:instrumentationSender:actionRequirements:)(a1, a2, a3, a4, a5, a6, a7, a8, a10);
  *a9 = result;
  return result;
}

uint64_t type metadata accessor for StandardPlanner()
{
  return objc_opt_self();
}

void sub_23FCDDA9C(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_23FD72B54();
  _os_signpost_emit_with_name_impl(&dword_23FBF8000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_23FCDDB1C(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v42 = sub_23FD72C20();
  sub_23FCDE018(&qword_256F61A00, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE544B0], MEMORY[0x24BE544A8]);
  v43 = v16;
  *(_QWORD *)&v41 = a3;
  v39 = sub_23FD72E84();
  sub_23FCDE018(&qword_256F61A08, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE54750], MEMORY[0x24BE54748]);
  v40 = v17;
  *(_QWORD *)&v38 = a4;
  v18 = sub_23FD72E6C();
  v36 = v18;
  sub_23FCDE018(&qword_256F61A10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE54738], MEMORY[0x24BE54730]);
  v37 = v19;
  v20 = sub_23FBFDDEC((uint64_t *)&v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v20, a5, v18);
  v33 = sub_23FD72E9C();
  sub_23FCDE018(&qword_256F61A18, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE54768], MEMORY[0x24BE54760]);
  v34 = v21;
  *(_QWORD *)&v32 = a6;
  v30 = sub_23FD72ED8();
  sub_23FCDE018(&qword_256F61A20, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE547B8], MEMORY[0x24BE547B0]);
  v31 = v22;
  *(_QWORD *)&v29 = a7;
  swift_defaultActor_initialize();
  *(_QWORD *)(a8 + 112) = sub_23FD73250();
  *(_QWORD *)(a8 + 120) = v23;
  *(_BYTE *)(a8 + 128) = 0;
  v28 = *(_OWORD *)(a1 + 24);
  v24 = *(_QWORD *)(a1 + 24);
  v25 = sub_23FBFDE40((_QWORD *)a1, v24);
  *(_OWORD *)(a8 + 160) = v28;
  v26 = sub_23FBFDDEC((uint64_t *)(a8 + 136));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v26, v25, v24);
  sub_23FBFDE28(a2, a8 + 176);
  sub_23FBFDE28(&v41, a8 + 216);
  sub_23FBFDE28(&v38, a8 + 256);
  sub_23FBFDE28(&v35, a8 + 296);
  sub_23FBFDE28(&v32, a8 + 336);
  sub_23FBFDE28(&v29, a8 + 376);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1);
  return a8;
}

_UNKNOWN **sub_23FCDDD48()
{
  return &off_2510117D0;
}

_UNKNOWN **sub_23FCDDD54()
{
  return &off_2510117F0;
}

uint64_t method lookup function for StandardPlanner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StandardPlanner.makePlan(sessionState:newEventsRange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 208)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 208));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23FCDDDE8;
  return v10(a1, a2, a3);
}

uint64_t sub_23FCDDDE8(uint64_t a1)
{
  uint64_t v1;

  sub_23FBFF004();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

void type metadata accessor for StandardPlannerConfiguration()
{
  sub_23FC7A748();
}

unint64_t sub_23FCDDE28()
{
  unint64_t result;

  result = qword_256F619C0;
  if (!qword_256F619C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7A220, &unk_2510118D8);
    atomic_store(result, (unint64_t *)&qword_256F619C0);
  }
  return result;
}

uint64_t sub_23FCDDE64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23FC61EAC;
  return sub_23FCD73AC(a1, a2, v7, v6);
}

uint64_t sub_23FCDDED0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23FD73D9C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 32);
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FBFF1EC();
  return swift_deallocObject();
}

uint64_t sub_23FCDDF44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FD73D9C() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + 32;
  v8 = v1 + ((v4 + 72) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23FC7E094;
  return sub_23FCD7878(a1, v5, v6, v7, v8);
}

void sub_23FCDDFD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23FBFD684(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_23FBFF0A0();
}

void sub_23FCDE018(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x2426797E8](a4, v6), a1);
  }
  sub_23FBFF0A0();
}

uint64_t _s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23FCDE0DC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23FCDE128 + 4 * byte_23FD7A095[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23FCDE15C + 4 * byte_23FD7A090[v4]))();
}

uint64_t sub_23FCDE15C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCDE164(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCDE16CLL);
  return result;
}

uint64_t sub_23FCDE178(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCDE180);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23FCDE184(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCDE18C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StandardPlannerError()
{
  sub_23FC7A748();
}

unint64_t sub_23FCDE1A8()
{
  unint64_t result;

  result = qword_256F61A38;
  if (!qword_256F61A38)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7A1F8, &unk_2510118D8);
    atomic_store(result, (unint64_t *)&qword_256F61A38);
  }
  return result;
}

uint64_t sub_23FCDE1E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[59];
  *(_QWORD *)(v1 - 240) = v0[60];
  *(_QWORD *)(v1 - 232) = v2;
  v3 = v0[57];
  *(_QWORD *)(v1 - 224) = v0[58];
  *(_QWORD *)(v1 - 216) = v3;
  v4 = v0[55];
  *(_QWORD *)(v1 - 208) = v0[56];
  *(_QWORD *)(v1 - 200) = v4;
  v5 = v0[53];
  *(_QWORD *)(v1 - 192) = v0[54];
  *(_QWORD *)(v1 - 184) = v5;
  v6 = v0[51];
  *(_QWORD *)(v1 - 176) = v0[52];
  *(_QWORD *)(v1 - 168) = v6;
  v7 = v0[47];
  *(_QWORD *)(v1 - 160) = v0[48];
  *(_QWORD *)(v1 - 152) = v7;
  v8 = v0[43];
  *(_QWORD *)(v1 - 144) = v0[44];
  *(_QWORD *)(v1 - 136) = v8;
  v9 = v0[39];
  *(_QWORD *)(v1 - 128) = v0[42];
  *(_QWORD *)(v1 - 120) = v9;
  v10 = v0[33];
  *(_QWORD *)(v1 - 112) = v0[36];
  *(_QWORD *)(v1 - 104) = v10;
  *(_QWORD *)(v1 - 96) = v0[32];
  return swift_task_dealloc();
}

uint64_t sub_23FCDE324()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[58];
  *(_QWORD *)(v1 - 240) = v0[59];
  *(_QWORD *)(v1 - 232) = v2;
  v3 = v0[56];
  *(_QWORD *)(v1 - 224) = v0[57];
  *(_QWORD *)(v1 - 216) = v3;
  v4 = v0[54];
  *(_QWORD *)(v1 - 208) = v0[55];
  *(_QWORD *)(v1 - 200) = v4;
  v5 = v0[52];
  *(_QWORD *)(v1 - 192) = v0[53];
  *(_QWORD *)(v1 - 184) = v5;
  v6 = v0[48];
  *(_QWORD *)(v1 - 176) = v0[51];
  *(_QWORD *)(v1 - 168) = v6;
  v7 = v0[44];
  *(_QWORD *)(v1 - 160) = v0[47];
  *(_QWORD *)(v1 - 152) = v7;
  v8 = v0[42];
  *(_QWORD *)(v1 - 144) = v0[43];
  *(_QWORD *)(v1 - 136) = v8;
  v9 = v0[36];
  *(_QWORD *)(v1 - 128) = v0[39];
  *(_QWORD *)(v1 - 120) = v9;
  v10 = v0[32];
  *(_QWORD *)(v1 - 112) = v0[33];
  *(_QWORD *)(v1 - 104) = v10;
  return swift_task_dealloc();
}

uint64_t sub_23FCDE454()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[59];
  *(_QWORD *)(v1 - 248) = v0[60];
  *(_QWORD *)(v1 - 240) = v2;
  v3 = v0[57];
  *(_QWORD *)(v1 - 232) = v0[58];
  *(_QWORD *)(v1 - 224) = v3;
  v4 = v0[55];
  *(_QWORD *)(v1 - 216) = v0[56];
  *(_QWORD *)(v1 - 208) = v4;
  v5 = v0[53];
  *(_QWORD *)(v1 - 200) = v0[54];
  *(_QWORD *)(v1 - 192) = v5;
  v6 = v0[51];
  *(_QWORD *)(v1 - 184) = v0[52];
  *(_QWORD *)(v1 - 176) = v6;
  v7 = v0[47];
  *(_QWORD *)(v1 - 168) = v0[48];
  *(_QWORD *)(v1 - 160) = v7;
  v8 = v0[43];
  *(_QWORD *)(v1 - 152) = v0[44];
  *(_QWORD *)(v1 - 144) = v8;
  v9 = v0[39];
  *(_QWORD *)(v1 - 136) = v0[42];
  *(_QWORD *)(v1 - 128) = v9;
  v10 = v0[33];
  *(_QWORD *)(v1 - 120) = v0[36];
  *(_QWORD *)(v1 - 112) = v10;
  *(_QWORD *)(v1 - 104) = v0[32];
  return swift_task_dealloc();
}

uint64_t sub_23FCDE588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

void sub_23FCDE598(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  const char *v5;
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, v5, v6, 2u);
}

uint64_t sub_23FCDE5A8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FCDE5C4()
{
  return swift_retain();
}

void sub_23FCDE5D0(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, a7, 2u);
}

uint64_t sub_23FCDE5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FCDE5E4(_WORD *a1)
{
  *a1 = 0;
  return sub_23FD72B54();
}

uint64_t sub_23FCDE5EC()
{
  return sub_23FD72BA8();
}

uint64_t sub_23FCDE5F8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCDE600()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCDE608()
{
  return sub_23FD7502C();
}

void sub_23FCDE614(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t sub_23FCDE63C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FCDE648@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 224);
}

void sub_23FCDE660()
{
  void *v0;

}

uint64_t sub_23FCDE668()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23FCDE678()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v2, v0);
}

uint64_t sub_23FCDE688(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FCDE6A4(uint64_t a1)
{
  return sub_23FCDBD28(a1);
}

uint64_t sub_23FCDE6C0(uint64_t a1)
{
  return sub_23FCDBF1C(a1);
}

uint64_t sub_23FCDE6DC(uint64_t a1, uint64_t a2)
{
  return sub_23FCDC79C(a1, a2);
}

uint64_t sub_23FCDE6F8()
{
  return sub_23FD7502C();
}

uint64_t sub_23FCDE704()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t sub_23FCDE718()
{
  return sub_23FD724B8();
}

void sub_23FCDE72C()
{
  void *v0;

}

void sub_23FCDE774(void *a1@<X8>)
{

}

BOOL sub_23FCDE794(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23FCDE7B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23FCDE7C8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[46] + 8))(v0[48], v0[45]);
}

uint64_t sub_23FCDE7E0()
{
  return sub_23FD72BA8();
}

uint64_t sub_23FCDE7E8()
{
  return sub_23FD736AC();
}

void sub_23FCDE7F4()
{
  void *v0;

}

uint64_t sub_23FCDE7FC()
{
  return sub_23FD740A8();
}

uint64_t sub_23FCDE808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

uint64_t sub_23FCDE81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 - 104);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 112) + 8);
  *(_QWORD *)(v1 - 112) = v3;
  return v3(v0, v2);
}

uint64_t sub_23FCDE830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 - 104);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 112) + 8);
  *(_QWORD *)(v1 - 120) = v3;
  return v3(v0, v2);
}

uint64_t sub_23FCDE844()
{
  return sub_23FD72B90();
}

uint64_t sub_23FCDE84C()
{
  return sub_23FD72EA8();
}

uint64_t sub_23FCDE860()
{
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_23FCDE86C@<X0>(uint64_t a1@<X8>)
{
  return a1 | 0xD000000000000012;
}

uint64_t sub_23FCDE87C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCDE8A0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCDE8A8()
{
  return sub_23FD72BA8();
}

void sub_23FCDE8F0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_23FCDE018(a1, 255, a3, a4);
}

uint64_t sub_23FCDE8F8()
{
  return sub_23FD72B6C();
}

uint64_t sub_23FCDE900()
{
  return sub_23FD73CD0();
}

uint64_t sub_23FCDE910(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FCDE918(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  return sub_23FCD6B88(v3, a2, v2);
}

uint64_t sub_23FCDE934()
{
  return sub_23FD7502C();
}

uint64_t sub_23FCDE940()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCDE94C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  return sub_23FC9DC40(a1, a2, (uint64_t *)va);
}

uint64_t sub_23FCDE958@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_23FCDE96C@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

void sub_23FCDE978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FC584E0(v2, a2);
}

uint64_t sub_23FCDE980()
{
  return sub_23FD737F0();
}

uint64_t sub_23FCDE98C()
{
  return sub_23FD72BA8();
}

uint64_t sub_23FCDE998()
{
  return sub_23FD73CD0();
}

uint64_t *sub_23FCDE9A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  *(_QWORD *)(v1 + 208) = a1;
  return sub_23FBFDDEC(v2);
}

uint64_t sub_23FCDE9B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_23FC9DC40(v4, v3, a3);
}

uint64_t sub_23FCDE9BC@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

uint64_t sub_23FCDE9C8()
{
  return sub_23FD72BA8();
}

uint64_t sub_23FCDE9D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FCDE9E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = v1;
  v2[1] = a1;
  return v3;
}

uint64_t sub_23FCDE9F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_23FD72B9C();
}

uint64_t sub_23FCDEA00()
{
  return sub_23FD7133C();
}

uint64_t sub_23FCDEA08()
{
  return sub_23FD72C5C();
}

uint64_t sub_23FCDEA10()
{
  return sub_23FD72B48();
}

uint64_t sub_23FCDEA18()
{
  return sub_23FD731B4();
}

uint64_t sub_23FCDEA20()
{
  return sub_23FD73D6C();
}

uint64_t sub_23FCDEA28()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 88);
}

_QWORD *sub_23FCDEA3C(_QWORD *a1)
{
  uint64_t v1;

  return sub_23FBFDE40(a1, v1);
}

uint64_t sub_23FCDEA44(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FCDEA68(_QWORD *a1)
{
  uint64_t v1;

  sub_23FBFDE40(a1, v1);
  return swift_getDynamicType();
}

uint64_t sub_23FCDEA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_23FCDEA90()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23FC584B0(v0, v1);
}

uint64_t sub_23FCDEA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23FCDEAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v33 = sub_23FBFD684(qword_256F61A98);
  v4 = MEMORY[0x24BDAC7A8](v33, v3);
  v32 = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v31 = (char *)v28 - v8;
  MEMORY[0x24BDAC7A8](v7, v9);
  v30 = (char *)v28 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v28[1] = v1;
    v37 = MEMORY[0x24BEE4AF8];
    sub_23FD75188();
    result = sub_23FD3C370(a1);
    if (result < 0 || (v14 = result, result >= 1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_13:
      __break(1u);
      return v37;
    }
    else
    {
      v15 = a1 + 64;
      v29 = a1 + 64;
      v16 = v33;
      while ((*(_QWORD *)(v15 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
      {
        if ((_DWORD)v13 != *(_DWORD *)(a1 + 36))
          goto LABEL_17;
        v35 = v13;
        v36 = v14 >> 6;
        v34 = v11;
        v17 = *(int *)(v16 + 48);
        v18 = *(_QWORD *)(a1 + 48);
        v19 = sub_23FD7157C();
        v20 = *(_QWORD *)(v19 - 8);
        v21 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
        v22 = a1;
        v23 = v30;
        v21(v30, v18 + *(_QWORD *)(v20 + 72) * v14, v19);
        v24 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v14);
        *(_QWORD *)&v23[v17] = v24;
        v25 = (uint64_t)v31;
        v21(v31, (unint64_t)v23, v19);
        *(_QWORD *)(v25 + *(int *)(v16 + 48)) = v24;
        v26 = v32;
        sub_23FC748E8(v25, v32, qword_256F61A98);
        swift_retain_n();
        v27 = (uint64_t)v23;
        a1 = v22;
        sub_23FBFEF74(v27, qword_256F61A98);
        swift_retain();
        sub_23FBFEF74(v26, qword_256F61A98);
        sub_23FD75170();
        sub_23FD75194();
        sub_23FD751A0();
        result = sub_23FD7517C();
        if ((uint64_t)v14 >= -(-1 << *(_BYTE *)(v22 + 32)))
          goto LABEL_18;
        v15 = v29;
        if ((*(_QWORD *)(v29 + 8 * v36) & (1 << v14)) == 0)
          goto LABEL_19;
        if ((_DWORD)v35 != *(_DWORD *)(a1 + 36))
          goto LABEL_20;
        result = sub_23FD750B0();
        v11 = v34 - 1;
        if (v34 == 1)
          return v37;
        v14 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v13 = *(unsigned int *)(a1 + 36);
          if (result < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23FCDED68(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(_QWORD, uint64_t, _QWORD), uint64_t (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, unint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v54 = a3;
  v53 = sub_23FBFD684(a3);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFEFCC();
  v52 = v13;
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v51 = (char *)v46 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  sub_23FBFF218();
  v50 = v19;
  v20 = sub_23FC10050();
  v21 = a4(v20);
  v60 = *(_QWORD *)(v21 - 8);
  v61 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v46 - v23;
  v25 = *(_QWORD *)(a1 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  if (!v25)
    return v26;
  v46[1] = v6;
  v46[2] = a5;
  v62 = MEMORY[0x24BEE4AF8];
  a5(0, v25, 0);
  result = a6(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    v29 = result;
    if (result < 1 << *(_BYTE *)(a1 + 32))
    {
      v30 = a1 + 64;
      v48 = v24;
      v49 = a1;
      v47 = a1 + 64;
      v31 = v50;
      while ((*(_QWORD *)(v30 + 8 * (v29 >> 6)) & (1 << v29)) != 0)
      {
        if ((_DWORD)v28 != *(_DWORD *)(a1 + 36))
          goto LABEL_20;
        v57 = 1 << v29;
        v58 = v29 >> 6;
        v55 = v25;
        v56 = v28;
        v32 = v53;
        v33 = v31 + *(int *)(v53 + 48);
        v34 = *(_QWORD *)(a1 + 48);
        v35 = sub_23FD7157C();
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(void (**)(uint64_t, unint64_t, uint64_t))(v36 + 16);
        v37(v31, v34 + *(_QWORD *)(v36 + 72) * v29, v35);
        v38 = *(_QWORD *)(a1 + 56);
        v59 = *(_QWORD *)(v60 + 72);
        sub_23FCE4CA0(v33, v38 + v59 * v29);
        v39 = v51;
        v37((uint64_t)v51, v31, v35);
        sub_23FCE4CA0((uint64_t)&v39[*(int *)(v32 + 48)], v33);
        v40 = (uint64_t)v39;
        v41 = (uint64_t)v48;
        v42 = v52;
        v43 = v54;
        sub_23FC748E8(v40, v52, v54);
        sub_23FBFEF74(v31, v43);
        sub_23FCE4CA0(v41, v42 + *(int *)(v32 + 48));
        sub_23FBFEF74(v42, v43);
        v26 = v62;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FCE4D18(0, *(_QWORD *)(v26 + 16) + 1);
          v26 = v62;
        }
        v45 = *(_QWORD *)(v26 + 16);
        v44 = *(_QWORD *)(v26 + 24);
        a1 = v49;
        if (v45 >= v44 >> 1)
        {
          sub_23FCE4D18(v44 > 1, v45 + 1);
          v26 = v62;
        }
        *(_QWORD *)(v26 + 16) = v45 + 1;
        result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v60 + 32))(v26+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ v45 * v59, v41, v61);
        v62 = v26;
        if ((uint64_t)v29 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_21;
        v30 = v47;
        if ((*(_QWORD *)(v47 + 8 * v58) & v57) == 0)
          goto LABEL_22;
        if ((_DWORD)v56 != *(_DWORD *)(a1 + 36))
          goto LABEL_23;
        result = sub_23FD750B0();
        v25 = v55 - 1;
        if (v55 == 1)
          return v26;
        v29 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v28 = *(unsigned int *)(a1 + 36);
          if (result < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_24;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_23FCDF0CC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  int64_t v40;

  v4 = sub_23FBFD684(&qword_256F61A58);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FBFD684(&qword_256F5E608);
  v35 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v36 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v34 = (uint64_t)&v33 - v13;
  sub_23FCCB7C8(a1, v39);
  v14 = v39[0];
  v38 = v39[1];
  v15 = v39[3];
  v16 = v39[4];
  v40 = (unint64_t)(v39[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v37 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_20;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v19 >= v40)
      goto LABEL_27;
    v20 = *(_QWORD *)(v38 + 8 * v19);
    v21 = v15 + 1;
    if (!v20)
    {
      v21 = v15 + 2;
      if (v15 + 2 >= v40)
        goto LABEL_27;
      v20 = *(_QWORD *)(v38 + 8 * v21);
      if (!v20)
      {
        v21 = v15 + 3;
        if (v15 + 3 >= v40)
          goto LABEL_27;
        v20 = *(_QWORD *)(v38 + 8 * v21);
        if (!v20)
        {
          v21 = v15 + 4;
          if (v15 + 4 >= v40)
            goto LABEL_27;
          v20 = *(_QWORD *)(v38 + 8 * v21);
          if (!v20)
          {
            v21 = v15 + 5;
            if (v15 + 5 >= v40)
              goto LABEL_27;
            v20 = *(_QWORD *)(v38 + 8 * v21);
            if (!v20)
            {
              v22 = v15 + 6;
              while (v22 < v40)
              {
                v20 = *(_QWORD *)(v38 + 8 * v22++);
                if (v20)
                {
                  v21 = v22 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
    v15 = v21;
LABEL_20:
    v23 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * v18);
    v24 = *v23;
    v25 = v23[1];
    v26 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v24, v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v8) == 1)
    {
      sub_23FBFEF74((uint64_t)v7, &qword_256F61A58);
    }
    else
    {
      v27 = v34;
      sub_23FC748E8((uint64_t)v7, v34, &qword_256F5E608);
      sub_23FC748E8(v27, v36, &qword_256F5E608);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC99ABC();
        v37 = v31;
      }
      v28 = *(_QWORD *)(v37 + 16);
      if (v28 >= *(_QWORD *)(v37 + 24) >> 1)
      {
        sub_23FC99ABC();
        v37 = v32;
      }
      v29 = v36;
      v30 = v37;
      *(_QWORD *)(v37 + 16) = v28 + 1;
      sub_23FC748E8(v29, v30+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v28, &qword_256F5E608);
    }
  }
  __break(1u);
}

uint64_t sub_23FCDF424(_QWORD *a1, unint64_t a2, uint64_t (*a3)(char *, uint64_t *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(char *, uint64_t *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  v5 = v4;
  v32 = a3;
  v33 = a4;
  v8 = sub_23FD7157C();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v12 = sub_23FD75248();
    if (v12)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12)
    goto LABEL_22;
LABEL_3:
  v28 = v5;
  v29 = v12;
  v30 = a2;
  v31 = a2 & 0xC000000000000001;
  v13 = 4;
  while (1)
  {
    if (v31)
      v14 = MEMORY[0x242678EC4](v13 - 4, a2);
    else
      v14 = swift_retain();
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v36 = v13 - 3;
    v5 = v14;
    v38 = v14;
    v15 = v32(v11, &v38);
    swift_isUniquelyReferenced_nonNull_native();
    v37 = a1;
    sub_23FC84CD4();
    v18 = a1[2];
    v19 = (v17 & 1) == 0;
    a1 = (_QWORD *)(v18 + v19);
    if (__OFADD__(v18, v19))
      goto LABEL_19;
    v20 = v16;
    a2 = v17;
    sub_23FBFD684((uint64_t *)&unk_256F65E10);
    if ((sub_23FD75200() & 1) != 0)
      break;
LABEL_12:
    a1 = v37;
    if ((a2 & 1) != 0)
    {
      v23 = v37[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v20) = v15;
    }
    else
    {
      v37[(v20 >> 6) + 8] |= 1 << v20;
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 16))(a1[6] + *(_QWORD *)(v34 + 72) * v20, v11, v35);
      *(_QWORD *)(a1[7] + 8 * v20) = v15;
      v24 = a1[2];
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        goto LABEL_20;
      a1[2] = v26;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
    swift_release();
    ++v13;
    a2 = v30;
    if (v36 == v29)
      goto LABEL_22;
  }
  sub_23FC84CD4();
  if ((a2 & 1) == (v22 & 1))
  {
    v20 = v21;
    goto LABEL_12;
  }
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

uint64_t sub_23FCDF69C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23FBFD684(&qword_256F5E5F0);
    v3 = sub_23FD7526C();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_23FCE47B0(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

uint64_t sub_23FCDF728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  void (*v83)(uint64_t);
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, _QWORD);
  uint64_t v95;
  uint64_t (*v96)(_QWORD);
  uint64_t v97;
  uint64_t (*v98)(uint64_t, _QWORD);
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(_QWORD);
  uint64_t v102;
  uint64_t (*v103)(uint64_t, _QWORD);
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(_QWORD);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t result;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t);
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE v144[8];
  _BYTE v145[8];

  v4 = sub_23FD7346C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFF218();
  v119 = v9;
  sub_23FC10050();
  v126 = sub_23FD738B0();
  v125 = *(_QWORD *)(v126 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFF218();
  v123 = v14;
  sub_23FC10050();
  v130 = sub_23FD730F4();
  v129 = *(_QWORD *)(v130 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFEFE0();
  v128 = v17;
  v18 = sub_23FC10050();
  type metadata accessor for FeedbackLearning.ActionValue(v18);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FBFEFE0();
  v131 = v21;
  sub_23FC10050();
  sub_23FD7157C();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FBFF218();
  v142 = v30;
  sub_23FC10050();
  v31 = sub_23FD73C7C();
  v140 = *(_QWORD *)(v31 - 8);
  v141 = v31;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FBFEFE0();
  v139 = v34;
  sub_23FC10050();
  v35 = sub_23FD7409C();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37);
  sub_23FBFF180();
  v40 = v39 - v38;
  v41 = sub_23FD740CC();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v43);
  sub_23FBFEFE0();
  v143 = v44;
  v45 = *(_QWORD *)(a1 + 16);
  if (!v45)
  {
LABEL_50:
    v107 = swift_bridgeObjectRetain();
    sub_23FCDEAA8(v107);
    sub_23FCE4D00();
    v108 = swift_bridgeObjectRetain();
    v109 = sub_23FCDED68(v108, (uint64_t)v145, &qword_256F61A90, (uint64_t (*)(uint64_t))MEMORY[0x24BE55400], (void (*)(_QWORD, uint64_t, _QWORD))sub_23FC9B3E8, sub_23FD3C370);
    swift_bridgeObjectRelease();
    v110 = swift_bridgeObjectRetain();
    v111 = sub_23FCDED68(v110, (uint64_t)v144, &qword_256F61A88, (uint64_t (*)(uint64_t))MEMORY[0x24BE55BE0], (void (*)(_QWORD, uint64_t, _QWORD))sub_23FC9B3BC, sub_23FD3C370);
    swift_bridgeObjectRelease();
    v112 = sub_23FCE01A8(v42, v111, v109, a2);
    swift_bridgeObjectRelease();
    v113 = sub_23FCE0828(v42, v111);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23FCE0C2C(v112, v113);
    sub_23FCE4D00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v42;
  }
  v121 = v5;
  v115 = a2;
  v46 = a1 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
  v138 = *MEMORY[0x24BE56AF8];
  v127 = *MEMORY[0x24BE56BA0];
  v122 = *MEMORY[0x24BE56C58];
  v118 = *MEMORY[0x24BE56B30];
  v136 = *(_QWORD *)(v42 + 72);
  v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
  swift_bridgeObjectRetain();
  v47 = MEMORY[0x24BEE4B00];
  v133 = v36;
  v134 = v35;
  v135 = v41;
  v132 = v42;
  v117 = v4;
  while (1)
  {
    v137(v143, v46, v41);
    sub_23FD740A8();
    v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v40, v35);
    if (v48 == v138)
      break;
    if (v48 == v127)
    {
      sub_23FCE4C2C();
      v60 = sub_23FBFF1EC();
      sub_23FC1046C(v60, v61, v62);
      sub_23FD73088();
      sub_23FC1046C(v131, v128, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 16));
      swift_storeEnumTagMultiPayload();
      _s13ActionCreatedCMa(0);
      v63 = sub_23FBFF1C4();
      *(_QWORD *)(v63
                + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
      sub_23FC748BC(v131, v63 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, type metadata accessor for FeedbackLearning.ActionValue);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_23FC84CD4();
      sub_23FCE4C8C();
      if (v55)
        goto LABEL_52;
      v67 = v65;
      v68 = v66;
      sub_23FBFD684(&qword_256F61A50);
      if ((sub_23FCE4C50() & 1) != 0)
      {
        sub_23FCE4CC0();
        sub_23FCE4C7C();
        if (!v59)
          goto LABEL_59;
        v67 = v69;
      }
      if ((v68 & 1) != 0)
      {
        sub_23FCE4CF4();
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v67) = v63;
      }
      else
      {
        v93 = sub_23FCE4BF8();
        sub_23FCA9784(v93, v94);
        sub_23FCE4CE0();
        if (v55)
          goto LABEL_55;
        *(_QWORD *)(v47 + 16) = v95;
      }
      sub_23FCE4C74();
      sub_23FCE4CD4();
      sub_23FCB31F8(v96);
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v128, v130);
      goto LABEL_39;
    }
    if (v48 == v122)
    {
      sub_23FCE4C2C();
      v70 = *(void (**)(uint64_t))(v125 + 32);
      v71 = sub_23FBFF1EC();
      v70(v71);
      sub_23FD73880();
      sub_23FC1046C(v124, v123, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 16));
      sub_23FCE4CA8();
      sub_23FC84CD4();
      sub_23FCE4D24();
      if (v55)
        goto LABEL_54;
      v74 = v72;
      v75 = v73;
      sub_23FBFD684(&qword_256F61A48);
      v41 = v135;
      if ((sub_23FCE4C3C() & 1) != 0)
      {
        sub_23FCE4CC0();
        if ((v75 & 1) != (v77 & 1))
          goto LABEL_59;
        v74 = v76;
      }
      if ((v75 & 1) != 0)
      {
        v78 = v125;
        v79 = v126;
        sub_23FC1046C(*(_QWORD *)(v123 + 56) + *(_QWORD *)(v125 + 72) * v74, v124, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 40));
      }
      else
      {
        v97 = sub_23FCE4BC4();
        sub_23FCA9784(v97, v98);
        ((void (*)(uint64_t, uint64_t, uint64_t))v70)(*(_QWORD *)(v123 + 56) + *(_QWORD *)(v125 + 72) * v74, v124, v126);
        v99 = *(_QWORD *)(v123 + 16);
        v55 = __OFADD__(v99, 1);
        v100 = v99 + 1;
        if (v55)
          goto LABEL_57;
        *(_QWORD *)(v123 + 16) = v100;
        v79 = v126;
        v78 = v125;
      }
      sub_23FCE4C74();
      sub_23FCE4CD4();
      sub_23FCB31F8(v101);
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v123, v79);
      v42 = v132;
      sub_23FCE4C64();
      v4 = v117;
    }
    else
    {
      if (v48 != v118)
      {
        sub_23FCE4C64();
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v40, v35);
        goto LABEL_41;
      }
      sub_23FCE4C2C();
      v84 = sub_23FBFF1EC();
      v116 = v85;
      ((void (*)(uint64_t))v85)(v84);
      sub_23FD73454();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v120, v119, v4);
      sub_23FCE4CA8();
      sub_23FC84CD4();
      sub_23FCE4D24();
      if (v55)
        goto LABEL_56;
      v88 = v86;
      v89 = v87;
      sub_23FBFD684(&qword_256F61A40);
      v41 = v135;
      if ((sub_23FCE4C3C() & 1) != 0)
      {
        sub_23FCE4CC0();
        if ((v89 & 1) != (v91 & 1))
          goto LABEL_59;
        v88 = v90;
      }
      if ((v89 & 1) != 0)
      {
        v92 = v121;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 40))(*(_QWORD *)(v119 + 56) + *(_QWORD *)(v121 + 72) * v88, v120, v4);
      }
      else
      {
        v102 = sub_23FCE4BC4();
        sub_23FCA9784(v102, v103);
        v116(*(_QWORD *)(v119 + 56) + *(_QWORD *)(v121 + 72) * v88, v120, v4);
        v104 = *(_QWORD *)(v119 + 16);
        v55 = __OFADD__(v104, 1);
        v105 = v104 + 1;
        if (v55)
          goto LABEL_58;
        *(_QWORD *)(v119 + 16) = v105;
        v92 = v121;
      }
      sub_23FCE4C74();
      sub_23FCE4CD4();
      sub_23FCB31F8(v106);
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v119, v4);
      v42 = v132;
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v143, v135);
    }
LABEL_40:
    v36 = v133;
    v35 = v134;
LABEL_41:
    v46 += v136;
    if (!--v45)
    {
      swift_bridgeObjectRelease();
      a2 = v115;
      goto LABEL_50;
    }
  }
  sub_23FCE4C2C();
  v49 = sub_23FBFF1EC();
  v50(v49);
  sub_23FD73BEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 16))(v131, v139, v141);
  swift_storeEnumTagMultiPayload();
  _s13ActionCreatedCMa(0);
  v51 = sub_23FBFF1C4();
  *(_QWORD *)(v51
            + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
  sub_23FC748BC(v131, v51 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, type metadata accessor for FeedbackLearning.ActionValue);
  v52 = swift_isUniquelyReferenced_nonNull_native();
  sub_23FC84CD4();
  sub_23FCE4C8C();
  if (!v55)
  {
    v56 = v53;
    v57 = v54;
    sub_23FBFD684(&qword_256F61A50);
    if ((sub_23FCE4C50() & 1) != 0)
    {
      sub_23FC84CD4();
      sub_23FCE4C7C();
      if (!v59)
        goto LABEL_59;
      v56 = v58;
    }
    if ((v57 & 1) != 0)
    {
      sub_23FCE4CF4();
      *(_QWORD *)(v52 + 8 * v56) = v51;
    }
    else
    {
      v80 = sub_23FCE4BF8();
      v81(v80, v142);
      sub_23FCE4CE0();
      if (v55)
        goto LABEL_53;
      *(_QWORD *)(v47 + 16) = v82;
    }
    sub_23FCE4C74();
    sub_23FCE4CD4();
    v83(v142);
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v141);
LABEL_39:
    v42 = v132;
    v41 = v135;
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v143, v135);
    goto LABEL_40;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

uint64_t sub_23FCE01A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t result;
  _QWORD v76[2];
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  char v92[16];
  uint64_t v93;
  _QWORD *v94;

  v8 = sub_23FD72DB8();
  v80 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v79 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD74474();
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v84 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FBFD684(&qword_256F5DDB8);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v87 = (char *)v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)v76 - v19;
  v21 = sub_23FD7157C();
  v90 = *(_QWORD *)(v21 - 8);
  v91 = v21;
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v88 = (char *)v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)v76 - v26;
  v83 = a4;
  v93 = a4;
  v28 = (_QWORD *)MEMORY[0x24BEE4B00];
  v77 = sub_23FCDF424(MEMORY[0x24BEE4B00], a1, (uint64_t (*)(char *, uint64_t *))sub_23FCE4BAC, (uint64_t)v92);
  v76[1] = 0;
  v29 = *(_QWORD *)(a3 + 16);
  v78 = a2;
  if (v29)
  {
    v30 = *(_QWORD *)(sub_23FD7346C() - 8);
    v31 = a3;
    v32 = a3 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    v81 = *(_QWORD *)(v30 + 72);
    v76[0] = v31;
    swift_bridgeObjectRetain();
    v89 = xmmword_23FD769D0;
    v82 = v8;
    v33 = (uint64_t)v87;
    while (1)
    {
      v34 = v84;
      sub_23FD73460();
      sub_23FD74468();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v20, 0, 1, v8);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v34, v86);
      sub_23FC74908((uint64_t)v20, v33, &qword_256F5DDB8);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v33, 1, v8) == 1)
      {
        v35 = 0;
      }
      else
      {
        v37 = v79;
        v36 = v80;
        v38 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 32);
        v38(v79, v33, v8);
        sub_23FBFD684(&qword_256F5DDD0);
        v39 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = v89;
        v38((char *)(v35 + v39), (uint64_t)v37, v8);
      }
      sub_23FBFEF74((uint64_t)v20, &qword_256F5DDB8);
      sub_23FD73454();
      sub_23FBFD684(&qword_256F5FA58);
      v40 = sub_23FBFD684(&qword_256F5E608);
      v41 = *(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80);
      v42 = (v41 + 32) & ~v41;
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = v89;
      v44 = v43 + v42;
      v45 = *(int *)(v40 + 48);
      type metadata accessor for FeedbackLearning.CandidateParameter(0);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)(v44 + v45) = v35;
      sub_23FBFD684(&qword_256F5DD98);
      sub_23FBFEE2C(&qword_256F61A80, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
      v46 = sub_23FD74B40();
      swift_isUniquelyReferenced_nonNull_native();
      v94 = v28;
      sub_23FC84CD4();
      if (__OFADD__(v28[2], (v48 & 1) == 0))
        break;
      v49 = v47;
      v50 = v48;
      sub_23FBFD684((uint64_t *)&unk_256F65E10);
      if ((sub_23FD75200() & 1) != 0)
      {
        sub_23FC84CD4();
        if ((v50 & 1) != (v52 & 1))
          goto LABEL_34;
        v49 = v51;
      }
      v28 = v94;
      if ((v50 & 1) != 0)
      {
        v53 = v94[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v53 + 8 * v49) = v46;
      }
      else
      {
        v94[(v49 >> 6) + 8] |= 1 << v49;
        (*(void (**)(unint64_t, char *, uint64_t))(v90 + 16))(v28[6] + *(_QWORD *)(v90 + 72) * v49, v27, v91);
        *(_QWORD *)(v28[7] + 8 * v49) = v46;
        v54 = v28[2];
        v55 = __OFADD__(v54, 1);
        v56 = v54 + 1;
        if (v55)
          goto LABEL_32;
        v28[2] = v56;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v27, v91);
      v8 = v82;
      v32 += v81;
      --v29;
      v33 = (uint64_t)v87;
      if (!v29)
      {
        swift_bridgeObjectRelease();
        a2 = v78;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    v57 = *(_QWORD *)(a2 + 16);
    v58 = (uint64_t)v88;
    if (!v57)
    {
      v62 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_29:
      v74 = sub_23FCE0BB0((uint64_t)v28, v77);
      return sub_23FCE0BB0((uint64_t)v62, v74);
    }
    v59 = *(_QWORD *)(sub_23FD738B0() - 8);
    v60 = a2 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
    v61 = *(_QWORD *)(v59 + 72);
    swift_bridgeObjectRetain();
    v62 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v63 = sub_23FCE1A68(v58, v60, v83);
      swift_isUniquelyReferenced_nonNull_native();
      v94 = v62;
      sub_23FC84CD4();
      if (__OFADD__(v62[2], (v65 & 1) == 0))
        break;
      v66 = v64;
      v67 = v65;
      sub_23FBFD684((uint64_t *)&unk_256F65E10);
      v68 = sub_23FD75200();
      v58 = (uint64_t)v88;
      if ((v68 & 1) != 0)
      {
        sub_23FC84CD4();
        if ((v67 & 1) != (v70 & 1))
          goto LABEL_34;
        v66 = v69;
      }
      v62 = v94;
      if ((v67 & 1) != 0)
      {
        v71 = v94[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v71 + 8 * v66) = v63;
      }
      else
      {
        v94[(v66 >> 6) + 8] |= 1 << v66;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v90 + 16))(v62[6] + *(_QWORD *)(v90 + 72) * v66, v58, v91);
        *(_QWORD *)(v62[7] + 8 * v66) = v63;
        v72 = v62[2];
        v55 = __OFADD__(v72, 1);
        v73 = v72 + 1;
        if (v55)
          goto LABEL_33;
        v62[2] = v73;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v58, v91);
      v60 += v61;
      if (!--v57)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

uint64_t sub_23FCE0828(unint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  char *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];

  v4 = sub_23FD7157C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (uint64_t *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v43 - v11;
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    v13 = sub_23FD75248();
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v44 = v9;
  v45 = a2;
  if (v13)
  {
    v48 = a1 & 0xC000000000000001;
    v49 = v5;
    v14 = (uint64_t *)MEMORY[0x24BEE4B00];
    v15 = 4;
    v46 = v13;
    v47 = a1;
    while (1)
    {
      if (v48)
      {
        v16 = MEMORY[0x242678EC4](v15 - 4, a1);
        v5 = v16;
      }
      else
      {
        v5 = *(_QWORD *)(a1 + 8 * v15);
        v16 = swift_retain();
      }
      if (__OFADD__(v15 - 4, 1))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      a2 = v4;
      sub_23FBFF388(v16, v17, v18, v19, v20, v21, v22, v23, v43, (uint64_t)v44, v45, v46, v47, v48, v49, v15 - 3, v51, v52[0], v52[1],
        v52[2]);
      v24 = sub_23FCE0CA8();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = v12;
      v12 = (char *)isUniquelyReferenced_nonNull_native;
      v52[0] = (uint64_t)v14;
      v27 = v26;
      v9 = v14;
      sub_23FC84CD4();
      if (__OFADD__(v14[2], (v29 & 1) == 0))
        goto LABEL_27;
      v4 = v28;
      a1 = v29;
      sub_23FBFD684((uint64_t *)&unk_256F65E10);
      v9 = v52;
      v12 = v27;
      if ((sub_23FD75200() & 1) != 0)
      {
        v9 = (uint64_t *)v52[0];
        sub_23FC84CD4();
        if ((a1 & 1) != (v31 & 1))
        {
          result = sub_23FD753C8();
          __break(1u);
          return result;
        }
        v4 = v30;
      }
      v14 = (uint64_t *)v52[0];
      if ((a1 & 1) != 0)
      {
        v9 = *(uint64_t **)(v52[0] + 56);
        swift_bridgeObjectRelease();
        v9[v4] = v24;
      }
      else
      {
        *(_QWORD *)(v52[0] + 8 * (v4 >> 6) + 64) |= 1 << v4;
        (*(void (**)(unint64_t, char *, uint64_t))(v49 + 16))(v14[6] + *(_QWORD *)(v49 + 72) * v4, v27, a2);
        *(_QWORD *)(v14[7] + 8 * v4) = v24;
        v32 = v14[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_28;
        v14[2] = v34;
      }
      swift_bridgeObjectRelease();
      v4 = a2;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v27, a2);
      swift_release();
      ++v15;
      a1 = v47;
      if (v50 == v46)
      {
        swift_bridgeObjectRelease();
        a2 = v45;
        v5 = v49;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
  v14 = (uint64_t *)MEMORY[0x24BEE4B00];
LABEL_20:
  v35 = *(_QWORD *)(a2 + 16);
  if (v35)
  {
    v36 = *(_QWORD *)(sub_23FD738B0() - 8);
    v37 = a2 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    v38 = *(_QWORD *)(v36 + 72);
    swift_bridgeObjectRetain();
    v39 = MEMORY[0x24BEE4B00];
    v40 = (uint64_t)v44;
    do
    {
      sub_23FD73880();
      v41 = sub_23FCE0FCC(v37);
      swift_isUniquelyReferenced_nonNull_native();
      v52[0] = v39;
      sub_23FD67FAC(v41, v40);
      v39 = v52[0];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, unint64_t))(v5 + 8))(v40, v4);
      v37 += v38;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = MEMORY[0x24BEE4B00];
  }
  return sub_23FCE0BB0(v39, (uint64_t)v14);
}

uint64_t sub_23FCE0BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23FCE3F70(a1, (uint64_t)sub_23FCE4AC4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23FCE0C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23FCE4210(a1, (uint64_t)sub_23FCE4AC4, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23FCE0CA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD v34[5];

  v32 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v0);
  v2 = (_QWORD *)((char *)v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_23FC0D3D4();
  sub_23FCCB7C8((uint64_t)v3, v34);
  v4 = v34[0];
  v5 = v34[3];
  v6 = v34[4];
  v30 = v34[1];
  v31 = (unint64_t)(v34[2] + 64) >> 6;
  v28[1] = v3;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (!v6)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v9 = v8 | (v5 << 6);
  while (1)
  {
    v14 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v9);
    v15 = v14[1];
    v16 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v9);
    *v2 = *v14;
    v2[1] = v15;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v33 = v7;
    v17 = sub_23FC84D38((uint64_t)v2);
    if (__OFADD__(v7[2], (v18 & 1) == 0))
      break;
    v19 = v17;
    v20 = v18;
    sub_23FBFD684(&qword_256F61A68);
    if ((sub_23FD75200() & 1) != 0)
    {
      v21 = sub_23FC84D38((uint64_t)v2);
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_35;
      v19 = v21;
    }
    v7 = v33;
    if ((v20 & 1) != 0)
    {
      v23 = v33[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v19) = v16;
    }
    else
    {
      v33[(v19 >> 6) + 8] |= 1 << v19;
      sub_23FCE4B60((uint64_t)v2, v7[6] + *(_QWORD *)(v29 + 72) * v19);
      *(_QWORD *)(v7[7] + 8 * v19) = v16;
      v24 = v7[2];
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        goto LABEL_33;
      v7[2] = v26;
    }
    swift_bridgeObjectRelease();
    sub_23FBFEF18((uint64_t)v2, type metadata accessor for FeedbackLearning.CandidateParameter);
    if (v6)
      goto LABEL_2;
LABEL_3:
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_34;
    if (v10 >= v31)
      goto LABEL_31;
    v11 = *(_QWORD *)(v30 + 8 * v10);
    v12 = v5 + 1;
    if (!v11)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v31)
        goto LABEL_31;
      v11 = *(_QWORD *)(v30 + 8 * v12);
      if (!v11)
      {
        v12 = v5 + 3;
        if (v5 + 3 >= v31)
          goto LABEL_31;
        v11 = *(_QWORD *)(v30 + 8 * v12);
        if (!v11)
        {
          v12 = v5 + 4;
          if (v5 + 4 >= v31)
            goto LABEL_31;
          v11 = *(_QWORD *)(v30 + 8 * v12);
          if (!v11)
          {
            v12 = v5 + 5;
            if (v5 + 5 >= v31)
              goto LABEL_31;
            v11 = *(_QWORD *)(v30 + 8 * v12);
            if (!v11)
            {
              v12 = v5 + 6;
              if (v5 + 6 >= v31)
                goto LABEL_31;
              v11 = *(_QWORD *)(v30 + 8 * v12);
              if (!v11)
              {
                v13 = v5 + 7;
                while (v13 < v31)
                {
                  v11 = *(_QWORD *)(v30 + 8 * v13++);
                  if (v11)
                  {
                    v12 = v13 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_31:
                swift_release();
                swift_bridgeObjectRelease();
                return (uint64_t)v7;
              }
            }
          }
        }
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v5 = v12;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

uint64_t sub_23FCE0FCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(void);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  _QWORD *v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  uint64_t *v101;
  _QWORD *v102;
  _QWORD v103[6];

  v87 = sub_23FBFD684(&qword_256F5FA60);
  v82 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v2);
  v101 = (uint64_t *)((char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = sub_23FBFD684(&qword_256F61A70);
  v5 = MEMORY[0x24BDAC7A8](v86, v4);
  v100 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v85 = (char *)&v78 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v84 = (char *)&v78 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v99 = (uint64_t)&v78 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v83 = (char *)&v78 - v17;
  v79 = a1;
  v18 = sub_23FD7388C();
  sub_23FCCB7C8(v18, v103);
  v88 = v103[0];
  v80 = v103[1];
  v89 = v103[3];
  v19 = v103[4];
  v81 = (unint64_t)(v103[2] + 64) >> 6;
  v78 = v18;
  swift_bridgeObjectRetain();
  v20 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v98 = v20;
    if (v19)
    {
      v93 = (v19 - 1) & v19;
      v21 = __clz(__rbit64(v19)) | (v89 << 6);
    }
    else
    {
      v22 = v89 + 1;
      if (__OFADD__(v89, 1))
        goto LABEL_37;
      if (v22 >= v81)
        goto LABEL_34;
      v23 = *(_QWORD *)(v80 + 8 * v22);
      v24 = v89 + 1;
      if (!v23)
      {
        v24 = v89 + 2;
        if (v89 + 2 >= v81)
          goto LABEL_34;
        v23 = *(_QWORD *)(v80 + 8 * v24);
        if (!v23)
        {
          v24 = v89 + 3;
          if (v89 + 3 >= v81)
            goto LABEL_34;
          v23 = *(_QWORD *)(v80 + 8 * v24);
          if (!v23)
          {
            v24 = v89 + 4;
            if (v89 + 4 >= v81)
              goto LABEL_34;
            v23 = *(_QWORD *)(v80 + 8 * v24);
            if (!v23)
            {
              v24 = v89 + 5;
              if (v89 + 5 >= v81)
                goto LABEL_34;
              v23 = *(_QWORD *)(v80 + 8 * v24);
              if (!v23)
              {
                v24 = v89 + 6;
                if (v89 + 6 >= v81)
                  goto LABEL_34;
                v23 = *(_QWORD *)(v80 + 8 * v24);
                if (!v23)
                {
                  v25 = v89 + 7;
                  while (v25 < v81)
                  {
                    v23 = *(_QWORD *)(v80 + 8 * v25++);
                    if (v23)
                    {
                      v24 = v25 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_34:
                  swift_release();
                  v73 = swift_bridgeObjectRelease();
                  MEMORY[0x24BDAC7A8](v73, v74);
                  *(&v78 - 2) = v79;
                  sub_23FCDF0CC((uint64_t)v20, (void (*)(uint64_t, uint64_t, uint64_t))sub_23FCE4BA4);
                  v76 = v75;
                  swift_bridgeObjectRelease();
                  return sub_23FCDF69C(v76);
                }
              }
            }
          }
        }
      }
LABEL_21:
      v93 = (v23 - 1) & v23;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
      v89 = v24;
    }
    v26 = v88;
    v27 = *(_QWORD *)(v88 + 48);
    v28 = sub_23FD731FC();
    v29 = *(_QWORD **)(v28 - 8);
    v30 = (void (*)(void))v29[2];
    v31 = v83;
    ((void (*)(char *, unint64_t, uint64_t))v30)(v83, v27 + v29[9] * v21, v28);
    v32 = *(_QWORD *)(v26 + 56);
    v33 = sub_23FD741B0();
    v97 = *(_QWORD *)(v33 - 8);
    v34 = v86;
    v35 = *(void (**)(char *, unint64_t, uint64_t))(v97 + 16);
    v35(&v31[*(int *)(v86 + 48)], v32 + *(_QWORD *)(v97 + 72) * v21, v33);
    v36 = (uint64_t)v31;
    v37 = v99;
    sub_23FC748E8(v36, v99, &qword_256F61A70);
    v38 = *(int *)(v34 + 48);
    v39 = v84;
    v40 = &v84[v38];
    v41 = v37 + v38;
    ((void (*)(char *, uint64_t, uint64_t))v30)(v84, v37, v28);
    v92 = v40;
    v35(v40, v41, v33);
    v42 = sub_23FD731F0();
    v95 = v43;
    v96 = v42;
    v44 = (void (*)(char *, uint64_t))v29[1];
    v44(v39, v28);
    v45 = v85;
    v46 = &v85[*(int *)(v34 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v30)(v85, v37, v28);
    v90 = v46;
    v35(v46, v41, v33);
    v94 = sub_23FD731CC();
    LOBYTE(v46) = v47;
    v91 = v44;
    v44(v45, v28);
    v48 = *(int *)(v34 + 48);
    v49 = v97;
    v50 = &v100[v48];
    v51 = v95;
    v30();
    v35(v50, v41, v33);
    v52 = v96;
    v53 = v101;
    v54 = (char *)v101 + *(int *)(v87 + 48);
    *v101 = v94;
    *((_BYTE *)v53 + 8) = v46 & 1;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v54, v50, v33);
    v55 = v98;
    swift_isUniquelyReferenced_nonNull_native();
    v102 = v55;
    v56 = sub_23FC84D84(v52, v51);
    if (__OFADD__(v55[2], (v57 & 1) == 0))
      break;
    v58 = v56;
    v59 = v57;
    sub_23FBFD684(&qword_256F61A78);
    if ((sub_23FD75200() & 1) != 0)
    {
      v60 = sub_23FC84D84(v52, v51);
      if ((v59 & 1) != (v61 & 1))
        goto LABEL_38;
      v58 = v60;
    }
    v20 = v102;
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0)
    {
      v20[(v58 >> 6) + 8] |= 1 << v58;
      v62 = (uint64_t *)(v20[6] + 16 * v58);
      *v62 = v52;
      v62[1] = v51;
      *(_QWORD *)(v20[7] + 8 * v58) = MEMORY[0x24BEE4AF8];
      v63 = v20[2];
      v64 = __OFADD__(v63, 1);
      v65 = v63 + 1;
      if (v64)
        goto LABEL_36;
      v20[2] = v65;
      swift_bridgeObjectRetain();
    }
    v66 = v20[7];
    v67 = *(_QWORD *)(v66 + 8 * v58);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v66 + 8 * v58) = v67;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23FC99AD0();
      v67 = v71;
      *(_QWORD *)(v66 + 8 * v58) = v71;
    }
    v69 = *(_QWORD *)(v67 + 16);
    if (v69 >= *(_QWORD *)(v67 + 24) >> 1)
    {
      sub_23FC99AD0();
      v67 = v72;
      *(_QWORD *)(v66 + 8 * v58) = v72;
    }
    *(_QWORD *)(v67 + 16) = v69 + 1;
    sub_23FC748E8((uint64_t)v101, v67+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v69, &qword_256F5FA60);
    swift_bridgeObjectRelease();
    v91(v100, v28);
    v70 = *(void (**)(char *, uint64_t))(v49 + 8);
    v70(v90, v33);
    v70(v92, v33);
    sub_23FBFEF74(v99, &qword_256F61A70);
    v19 = v93;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

uint64_t sub_23FCE16DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v48 = a3;
  v49 = a1;
  v3 = sub_23FD72DB8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v47 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s19ToolboxSearchResultVMa(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FBFD684(&qword_256F5DDA8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v46 - v17;
  v19 = sub_23FBFD684(&qword_256F5DDB8);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v46 - v25;
  sub_23FBFF4AC();
  sub_23FC0D504();
  swift_bridgeObjectRelease();
  sub_23FC74908((uint64_t)v18, (uint64_t)v15, &qword_256F5DDA8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v15, 1, v7) == 1)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v26, 1, 1, v3);
  }
  else
  {
    sub_23FC748BC((uint64_t)v15, (uint64_t)v10, _s19ToolboxSearchResultVMa);
    sub_23FC0D720();
    sub_23FBFEF18((uint64_t)v10, _s19ToolboxSearchResultVMa);
  }
  sub_23FBFEF74((uint64_t)v18, &qword_256F5DDA8);
  sub_23FC74908((uint64_t)v26, (uint64_t)v23, &qword_256F5DDB8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v3) == 1)
  {
    v27 = 0;
  }
  else
  {
    v28 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
    v29 = v47;
    v28(v47, v23, v3);
    sub_23FBFD684(&qword_256F5DDD0);
    v30 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_23FD769D0;
    v28(v27 + v30, (char *)v29, v3);
  }
  sub_23FBFEF74((uint64_t)v26, &qword_256F5DDB8);
  sub_23FBFF388(v31, v32, v33, v34, v35, v36, v37, v38, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57);
  sub_23FBFD684(&qword_256F5FA58);
  v39 = sub_23FBFD684(&qword_256F5E608);
  v40 = *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80);
  v41 = (v40 + 32) & ~v40;
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_23FD769D0;
  v43 = v42 + v41;
  v44 = *(int *)(v39 + 48);
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v43 + v44) = v27;
  sub_23FBFD684(&qword_256F5DD98);
  sub_23FBFEE2C(&qword_256F61A80, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
  return sub_23FD74B40();
}

uint64_t sub_23FCE1A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a3;
  v41 = a1;
  v3 = sub_23FD72DB8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v39 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s19ToolboxSearchResultVMa(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FBFD684(&qword_256F5DDA8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v38 - v17;
  v19 = sub_23FBFD684(&qword_256F5DDB8);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v38 - v25;
  sub_23FD738A4();
  sub_23FC0D504();
  swift_bridgeObjectRelease();
  sub_23FC74908((uint64_t)v18, (uint64_t)v15, &qword_256F5DDA8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v15, 1, v7) == 1)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v26, 1, 1, v3);
  }
  else
  {
    sub_23FC748BC((uint64_t)v15, (uint64_t)v10, _s19ToolboxSearchResultVMa);
    sub_23FC0D720();
    sub_23FBFEF18((uint64_t)v10, _s19ToolboxSearchResultVMa);
  }
  sub_23FBFEF74((uint64_t)v18, &qword_256F5DDA8);
  sub_23FC74908((uint64_t)v26, (uint64_t)v23, &qword_256F5DDB8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v3) == 1)
  {
    v27 = 0;
  }
  else
  {
    v28 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v29 = v39;
    v28(v39, v23, v3);
    sub_23FBFD684(&qword_256F5DDD0);
    v30 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_23FD769D0;
    v28((char *)(v27 + v30), v29, v3);
  }
  sub_23FBFEF74((uint64_t)v26, &qword_256F5DDB8);
  sub_23FD73880();
  sub_23FBFD684(&qword_256F5FA58);
  v31 = sub_23FBFD684(&qword_256F5E608);
  v32 = *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_23FD769D0;
  v35 = v34 + v33;
  v36 = *(int *)(v31 + 48);
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v35 + v36) = v27;
  sub_23FBFD684(&qword_256F5DD98);
  sub_23FBFEE2C(&qword_256F61A80, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
  return sub_23FD74B40();
}

uint64_t sub_23FCE1DE0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a4;
  v37 = a2;
  v6 = sub_23FD741B0();
  v40 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23FD74798();
  v10 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD7157C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD73880();
  v19 = a1;
  v20 = v37;
  v21 = sub_23FCE2108(v19, v37, (uint64_t)v18, a3);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (!v21)
  {
    v28 = *(int *)(sub_23FBFD684(&qword_256F5E608) + 48);
    v29 = (uint64_t)v36;
    *v36 = v19;
    *(_QWORD *)(v29 + 8) = v20;
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    swift_storeEnumTagMultiPayload();
LABEL_14:
    *(_QWORD *)(v29 + v28) = 0;
    goto LABEL_15;
  }
  v35 = v19;
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v41 = MEMORY[0x24BEE4AF8];
    sub_23FC9B6B0();
    v23 = *(unsigned __int8 *)(v40 + 80);
    v34 = v21;
    v24 = v21 + ((v23 + 32) & ~v23);
    v38 = *(_QWORD *)(v40 + 72);
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
    do
    {
      v25(v9, v24, v6);
      sub_23FD7418C();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v6);
      v26 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B6B0();
        v26 = v41;
      }
      v27 = *(_QWORD *)(v26 + 16);
      if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_23FC9B6B0();
        v26 = v41;
      }
      *(_QWORD *)(v26 + 16) = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v26+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v27, v13, v39);
      v41 = v26;
      v24 += v38;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v20 = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_23FC0E734();
  v31 = v30;
  swift_bridgeObjectRelease();
  v28 = *(int *)(sub_23FBFD684(&qword_256F5E608) + 48);
  v29 = (uint64_t)v36;
  *v36 = v35;
  *(_QWORD *)(v29 + 8) = v20;
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  swift_storeEnumTagMultiPayload();
  if (!v31)
    goto LABEL_14;
  *(_QWORD *)(v29 + v28) = v31;
LABEL_15:
  v32 = sub_23FBFD684(&qword_256F5E608);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, 0, 1, v32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCE2108(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[2];

  v80 = a3;
  v81 = a2;
  v79 = a1;
  v5 = sub_23FD7157C();
  v83 = *(_QWORD *)(v5 - 8);
  v84 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v82 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD72BF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FD741B0();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v88 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v89 = (char *)&v75 - v19;
  v20 = sub_23FBFD684(&qword_256F5FA60);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v91 = (char *)&v75 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v90 = (uint64_t)&v75 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v35 = (char *)&v75 - v34;
  v36 = *(_QWORD *)(a4 + 16);
  v37 = MEMORY[0x24BEE4AF8];
  if (v36)
  {
    v77 = v8;
    v78 = v12;
    v86 = v13;
    v87 = v32;
    v75 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v76 = v9;
    v38 = a4 + v75;
    v92 = *(_QWORD *)(v33 + 72);
    v85 = a4;
    swift_bridgeObjectRetain();
    v39 = v38;
    v40 = v36;
    while (1)
    {
      sub_23FC74908(v39, (uint64_t)v35, &qword_256F5FA60);
      v41 = v35[8];
      sub_23FBFEF74((uint64_t)v35, &qword_256F5FA60);
      if (v41 != 1)
        break;
      v39 += v92;
      if (!--v40)
      {
        swift_bridgeObjectRelease();
        v94[0] = v37;
        sub_23FC9B9F4();
        v42 = v86;
        v43 = v87;
        v44 = v89;
        do
        {
          v45 = v90;
          sub_23FC74908(v38, v90, &qword_256F5FA60);
          v46 = *(int *)(v43 + 48);
          v47 = &v91[v46];
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(&v91[v46], v45 + v46, v42);
          v48 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
          v48(v44, v47, v42);
          sub_23FBFEF74(v45, &qword_256F5FA60);
          v37 = v94[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FC9B9F4();
            v37 = v94[0];
          }
          v49 = *(_QWORD *)(v37 + 16);
          if (v49 >= *(_QWORD *)(v37 + 24) >> 1)
          {
            sub_23FC9B9F4();
            v37 = v94[0];
          }
          *(_QWORD *)(v37 + 16) = v49 + 1;
          v50 = v37
              + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
              + *(_QWORD *)(v14 + 72) * v49;
          v44 = v89;
          v48((char *)v50, v89, v42);
          v94[0] = v37;
          v38 += v92;
          --v36;
        }
        while (v36);
        return v37;
      }
    }
    v51 = v85;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v52 = v86;
    v53 = v78;
    do
    {
      sub_23FC74908(v38, (uint64_t)v24, &qword_256F5FA60);
      v54 = v24[8];
      sub_23FBFEF74((uint64_t)v24, &qword_256F5FA60);
      if ((v54 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_23FD724DC();
        v64 = v82;
        v65 = v83;
        v66 = v84;
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v80, v84);
        v67 = v81;
        swift_bridgeObjectRetain_n();
        v68 = sub_23FD72BE4();
        v69 = sub_23FD74F54();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = swift_slowAlloc();
          v92 = swift_slowAlloc();
          v94[0] = v92;
          *(_DWORD *)v70 = 136315394;
          swift_bridgeObjectRetain();
          v93 = sub_23FC9DC40(v79, v67, v94);
          sub_23FD75044();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v70 + 12) = 2080;
          sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
          v71 = sub_23FD75344();
          v93 = sub_23FC9DC40(v71, v72, v94);
          sub_23FD75044();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
          _os_log_impl(&dword_23FBF8000, v68, v69, "Cannot coalesce parameter paths for %s in resolver request with id %s", (uint8_t *)v70, 0x16u);
          v73 = v92;
          swift_arrayDestroy();
          MEMORY[0x2426798D8](v73, -1, -1);
          MEMORY[0x2426798D8](v70, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
        }

        (*(void (**)(char *, uint64_t))(v76 + 8))(v53, v77);
        return 0;
      }
      v38 += v92;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    v94[0] = v51;
    swift_bridgeObjectRetain();
    sub_23FCE2828(v94);
    v55 = v94[0];
    v56 = *(_QWORD *)(v94[0] + 16);
    v57 = v88;
    if (v56)
    {
      v94[0] = v37;
      sub_23FC9B9F4();
      v89 = (char *)v55;
      v58 = v55 + v75;
      v59 = v90;
      do
      {
        sub_23FC74908(v58, v59, &qword_256F5FA60);
        v60 = *(int *)(v87 + 48);
        v61 = &v91[v60];
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(&v91[v60], v59 + v60, v52);
        v62 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v62(v57, v61, v52);
        sub_23FBFEF74(v59, &qword_256F5FA60);
        v37 = v94[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC9B9F4();
          v37 = v94[0];
        }
        v63 = *(_QWORD *)(v37 + 16);
        if (v63 >= *(_QWORD *)(v37 + 24) >> 1)
        {
          sub_23FC9B9F4();
          v37 = v94[0];
        }
        *(_QWORD *)(v37 + 16) = v63 + 1;
        v57 = v88;
        v62((char *)(v37+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v63), v88, v52);
        v94[0] = v37;
        v58 += v92;
        --v56;
      }
      while (v56);
      swift_release();
    }
    else
    {
      swift_release();
      return MEMORY[0x24BEE4AF8];
    }
  }
  return v37;
}

void sub_23FCE2828(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23FBFD684(&qword_256F5FA60) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23FD3C564();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23FCE28AC(v6);
  *a1 = v3;
}

void sub_23FCE28AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  int v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t, uint64_t);
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  BOOL v158;
  unint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  BOOL v168;
  uint64_t v169;
  char v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  BOOL v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  unint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  char *v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t *v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(char *, uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;

  v3 = sub_23FBFD684(&qword_256F5FA60);
  v225 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v219 = (uint64_t)&v208 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v234 = (uint64_t)&v208 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v227 = (_QWORD **)((char *)&v208 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v229 = (_QWORD **)((char *)&v208 - v15);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v208 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v238 = (uint64_t)&v208 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v216 = (_QWORD **)((char *)&v208 - v25);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v220 = (_QWORD **)((char *)&v208 - v28);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v213 = (char *)&v208 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v223 = (uint64_t)&v208 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v38 = (char *)&v208 - v37;
  v40 = MEMORY[0x24BDAC7A8](v36, v39);
  v42 = (char *)&v208 - v41;
  v44 = MEMORY[0x24BDAC7A8](v40, v43);
  v46 = (char *)&v208 - v45;
  MEMORY[0x24BDAC7A8](v44, v47);
  v214 = (uint64_t)&v208 - v48;
  v49 = a1[1];
  v50 = sub_23FD75338();
  if (v50 >= v49)
  {
    if ((v49 & 0x8000000000000000) == 0)
    {
      if (v49)
        sub_23FCE3604(0, v49, 1, a1);
      return;
    }
    goto LABEL_152;
  }
  v217 = v50;
  v226 = v1;
  sub_23FD30910(v49 / 2);
  v211 = v51;
  v224 = v52;
  v212 = v49;
  if (v49 <= 0)
  {
    v54 = MEMORY[0x24BEE4AF8];
    v143 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_115:
    if (v143 < 2)
    {
LABEL_128:
      swift_bridgeObjectRelease();
      if (v212 >= -1)
        goto LABEL_129;
      goto LABEL_157;
    }
    v198 = *a1;
    while (1)
    {
      v199 = v143 - 2;
      if (v143 < 2)
        break;
      if (!v198)
        goto LABEL_161;
      v200 = v54;
      v201 = v54 + 32;
      v202 = *(_QWORD *)(v54 + 32 + 16 * v199);
      v203 = *(_QWORD *)(v54 + 32 + 16 * (v143 - 1) + 8);
      v204 = v226;
      sub_23FCE393C(v198 + *(_QWORD *)(v225 + 72) * v202, v198 + *(_QWORD *)(v225 + 72) * *(_QWORD *)(v201 + 16 * (v143 - 1)), (_QWORD *)(v198 + *(_QWORD *)(v225 + 72) * v203), v224);
      v226 = v204;
      if (v204)
        goto LABEL_112;
      if (v203 < v202)
        goto LABEL_147;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FD3C35C(v200);
        v200 = v207;
      }
      if (v199 >= *(_QWORD *)(v200 + 16))
        goto LABEL_148;
      v205 = (_QWORD *)(v200 + 32 + 16 * v199);
      *v205 = v202;
      v205[1] = v203;
      v206 = *(_QWORD *)(v200 + 16);
      if (v143 > v206)
        goto LABEL_149;
      v54 = v200;
      memmove((void *)(v200 + 32 + 16 * (v143 - 1)), (const void *)(v200 + 32 + 16 * v143), 16 * (v206 - v143));
      *(_QWORD *)(v200 + 16) = v206 - 1;
      v143 = v206 - 1;
      if (v206 <= 2)
        goto LABEL_128;
    }
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
    return;
  }
  v209 = v46;
  v210 = v42;
  v208 = v38;
  v53 = 0;
  v54 = MEMORY[0x24BEE4AF8];
  v55 = v49;
  v228 = a1;
  v239 = v3;
  v221 = v19;
  while (1)
  {
    v215 = v54;
    v56 = v53 + 1;
    v222 = v53;
    if (v53 + 1 >= v55)
    {
      v72 = v53 + 1;
      v54 = v215;
      v73 = v217;
    }
    else
    {
      v236 = v55;
      v57 = *a1;
      v58 = v53;
      v59 = v3;
      v60 = *(_QWORD *)(v225 + 72);
      v61 = v214;
      sub_23FC74908(*a1 + v60 * v56, v214, &qword_256F5FA60);
      v218 = v57;
      v237 = v60;
      v62 = v57 + v60 * v58;
      v63 = (uint64_t)v209;
      sub_23FC74908(v62, (uint64_t)v209, &qword_256F5FA60);
      v64 = *(int *)(v59 + 48);
      v65 = v210;
      v66 = (char *)v210 + v64;
      v235 = v61 + v64;
      v67 = *(_QWORD *)v61;
      LOBYTE(v61) = *(_BYTE *)(v61 + 8);
      *v210 = v67;
      *((_BYTE *)v65 + 8) = v61;
      v68 = sub_23FD741B0();
      v69 = *(_QWORD *)(v68 - 8);
      v70 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
      v70(v66, v235, v68);
      v71 = *(void (**)(char *, uint64_t))(v69 + 8);
      v71(v66, v68);
      v232 = v71;
      if ((v61 & 1) != 0)
      {
        LODWORD(v235) = 0;
      }
      else
      {
        v74 = *(int *)(v59 + 48);
        v75 = v208;
        v76 = (char *)v208 + v74;
        v77 = *(_QWORD *)v63;
        v78 = *(unsigned __int8 *)(v63 + 8);
        *v208 = *(_QWORD *)v63;
        *((_BYTE *)v75 + 8) = v78;
        v70((char *)v75 + v74, v63 + v74, v68);
        v71(v76, v68);
        LODWORD(v235) = (v67 < v77) & ~v78;
      }
      v79 = (uint64_t)v213;
      v80 = v70;
      sub_23FBFEF74(v63, &qword_256F5FA60);
      sub_23FBFEF74(v214, &qword_256F5FA60);
      v19 = v221;
      v53 = v222;
      v72 = v222 + 2;
      v55 = v236;
      if (v222 + 2 < v236)
      {
        v81 = v237 * v56;
        v82 = v218;
        v233 = v222 + 2;
        v230 = v237 * v72;
        v231 = v81;
        while (1)
        {
          v83 = v68;
          v84 = v80;
          v85 = v223;
          sub_23FC74908(v82 + v230, v223, &qword_256F5FA60);
          sub_23FC74908(v82 + v231, v79, &qword_256F5FA60);
          v86 = v239;
          v87 = *(int *)(v239 + 48);
          v88 = v220;
          v89 = (char *)v220 + v87;
          v90 = v85 + v87;
          v91 = *(_QWORD *)v85;
          v92 = v79;
          v93 = *(_BYTE *)(v85 + 8);
          v80 = v84;
          v68 = v83;
          *v220 = v91;
          *((_BYTE *)v88 + 8) = v93;
          v80((char *)v88 + v87, v90, v83);
          v94 = v83;
          v95 = v232;
          v232(v89, v94);
          if ((v93 & 1) != 0)
          {
            v96 = 0;
          }
          else
          {
            v97 = *(int *)(v86 + 48);
            v98 = v216;
            v99 = (char *)v216 + v97;
            v100 = *(_QWORD *)v92;
            v101 = *(unsigned __int8 *)(v92 + 8);
            *v216 = *(_QWORD *)v92;
            *((_BYTE *)v98 + 8) = v101;
            v80((char *)v98 + v97, v92 + v97, v68);
            v95(v99, v68);
            v96 = (v91 < v100) & ~v101;
          }
          sub_23FBFEF74(v92, &qword_256F5FA60);
          sub_23FBFEF74(v223, &qword_256F5FA60);
          v19 = v221;
          if ((_DWORD)v235 != v96)
            break;
          v79 = v92;
          v55 = v236;
          v82 += v237;
          if (++v233 >= v236)
          {
            v72 = v236;
            v53 = v222;
            goto LABEL_18;
          }
        }
        v72 = v233;
        v53 = v222;
        v55 = v236;
      }
LABEL_18:
      a1 = v228;
      v54 = v215;
      v73 = v217;
      if (!(_DWORD)v235)
        goto LABEL_35;
      if (v72 < v53)
        goto LABEL_154;
      if (v53 < v72)
      {
        v102 = 0;
        v103 = v237 * (v72 - 1);
        v104 = v72 * v237;
        v105 = v53;
        v106 = v53 * v237;
        do
        {
          if (v105 != v72 + v102 - 1)
          {
            v107 = v72;
            v108 = v218;
            if (!v218)
              goto LABEL_160;
            v109 = v218 + v106;
            v235 = v218 + v103;
            sub_23FC748E8(v218 + v106, v219, &qword_256F5FA60);
            if (v106 < v103 || v109 >= v108 + v104)
            {
              v111 = v235;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v111 = v235;
              if (v106 != v103)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_23FC748E8(v219, v111, &qword_256F5FA60);
            v73 = v217;
            v72 = v107;
          }
          ++v105;
          --v102;
          v103 -= v237;
          v104 -= v237;
          v106 += v237;
        }
        while (v105 < v72 + v102);
        a1 = v228;
        v3 = v239;
        v54 = v215;
        v53 = v222;
        v55 = v236;
      }
      else
      {
LABEL_35:
        v3 = v239;
      }
    }
    if (v72 < v55)
    {
      v158 = __OFSUB__(v72, v53);
      v112 = v72 - v53;
      if (v158)
        goto LABEL_151;
      if (v112 < v73)
      {
        if (__OFADD__(v222, v73))
          goto LABEL_155;
        if (v222 + v73 >= v55)
          v113 = v55;
        else
          v113 = v222 + v73;
        if (v113 < v222)
          goto LABEL_156;
        if (v72 == v113)
        {
          v53 = v222;
          goto LABEL_59;
        }
        v114 = *(_QWORD *)(v225 + 72);
        v115 = v114 * (v72 - 1);
        v230 = v114;
        v116 = v72 * v114;
        v218 = v113;
        do
        {
          v117 = 0;
          v118 = v222;
          v232 = (void (*)(char *, uint64_t))v115;
          v233 = v72;
          v231 = v116;
          while (1)
          {
            v237 = v118;
            v119 = *a1;
            v236 = v116 + v117;
            v120 = v116 + v117 + v119;
            v121 = v238;
            sub_23FC74908(v120, v238, &qword_256F5FA60);
            v235 = v115 + v117;
            sub_23FC74908(v115 + v117 + v119, (uint64_t)v19, &qword_256F5FA60);
            v122 = *(int *)(v3 + 48);
            v123 = v229;
            v124 = (char *)v229 + v122;
            v125 = v121 + v122;
            v126 = *(_QWORD *)v121;
            v127 = *(_BYTE *)(v121 + 8);
            *v229 = *(_QWORD *)v121;
            *((_BYTE *)v123 + 8) = v127;
            v128 = sub_23FD741B0();
            v129 = *(_QWORD *)(v128 - 8);
            v130 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 16);
            v130(v124, v125, v128);
            v131 = *(void (**)(char *, uint64_t))(v129 + 8);
            v131(v124, v128);
            if ((v127 & 1) != 0)
              break;
            v132 = *(int *)(v239 + 48);
            v133 = v227;
            v134 = (char *)v227 + v132;
            v135 = *(_QWORD *)v19;
            v136 = v19[8];
            *v227 = *(_QWORD *)v19;
            *((_BYTE *)v133 + 8) = v136;
            v130((char *)v133 + v132, (uint64_t)&v19[v132], v128);
            v131(v134, v128);
            if ((v136 & 1) != 0)
              break;
            sub_23FBFEF74((uint64_t)v19, &qword_256F5FA60);
            sub_23FBFEF74(v238, &qword_256F5FA60);
            if (v126 >= v135)
              goto LABEL_55;
            a1 = v228;
            v137 = *v228;
            v3 = v239;
            v116 = v231;
            v115 = (uint64_t)v232;
            if (!*v228)
              goto LABEL_158;
            v138 = (uint64_t)v232 + v137 + v117;
            sub_23FC748E8(v137 + v231 + v117, v234, &qword_256F5FA60);
            swift_arrayInitWithTakeFrontToBack();
            sub_23FC748E8(v234, v138, &qword_256F5FA60);
            v117 -= v230;
            v118 = v237 + 1;
            v139 = v233;
            if (v233 == v237 + 1)
              goto LABEL_56;
          }
          sub_23FBFEF74((uint64_t)v19, &qword_256F5FA60);
          sub_23FBFEF74(v238, &qword_256F5FA60);
LABEL_55:
          a1 = v228;
          v3 = v239;
          v115 = (uint64_t)v232;
          v139 = v233;
          v116 = v231;
LABEL_56:
          v72 = v139 + 1;
          v115 += v230;
          v116 += v230;
        }
        while (v72 != v218);
        v72 = v218;
        v54 = v215;
      }
      v53 = v222;
    }
LABEL_59:
    if (v72 < v53)
      goto LABEL_150;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v233 = v72;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23FD3C278(0, *(_QWORD *)(v54 + 16) + 1, 1, (char *)v54);
      v54 = v196;
    }
    v142 = *(_QWORD *)(v54 + 16);
    v141 = *(_QWORD *)(v54 + 24);
    v143 = v142 + 1;
    if (v142 >= v141 >> 1)
    {
      sub_23FD3C278(v141 > 1, v142 + 1, 1, (char *)v54);
      v54 = v197;
    }
    *(_QWORD *)(v54 + 16) = v143;
    v144 = v54 + 32;
    v145 = (uint64_t *)(v54 + 32 + 16 * v142);
    v146 = v233;
    *v145 = v222;
    v145[1] = v146;
    if (v142)
      break;
    v143 = 1;
LABEL_107:
    v55 = a1[1];
    v53 = v233;
    v3 = v239;
    v19 = v221;
    if (v233 >= v55)
      goto LABEL_115;
  }
  while (1)
  {
    v147 = v143 - 1;
    if (v143 >= 4)
    {
      v152 = v144 + 16 * v143;
      v153 = *(_QWORD *)(v152 - 64);
      v154 = *(_QWORD *)(v152 - 56);
      v158 = __OFSUB__(v154, v153);
      v155 = v154 - v153;
      if (v158)
        goto LABEL_135;
      v157 = *(_QWORD *)(v152 - 48);
      v156 = *(_QWORD *)(v152 - 40);
      v158 = __OFSUB__(v156, v157);
      v150 = v156 - v157;
      v151 = v158;
      if (v158)
        goto LABEL_136;
      v159 = v143 - 2;
      v160 = (uint64_t *)(v144 + 16 * (v143 - 2));
      v162 = *v160;
      v161 = v160[1];
      v158 = __OFSUB__(v161, v162);
      v163 = v161 - v162;
      if (v158)
        goto LABEL_137;
      v158 = __OFADD__(v150, v163);
      v164 = v150 + v163;
      if (v158)
        goto LABEL_139;
      if (v164 >= v155)
      {
        v182 = (uint64_t *)(v144 + 16 * v147);
        v184 = *v182;
        v183 = v182[1];
        v158 = __OFSUB__(v183, v184);
        v185 = v183 - v184;
        if (v158)
          goto LABEL_145;
        v175 = v150 < v185;
        goto LABEL_96;
      }
    }
    else
    {
      if (v143 != 3)
      {
        v176 = *(_QWORD *)(v54 + 32);
        v177 = *(_QWORD *)(v54 + 40);
        v158 = __OFSUB__(v177, v176);
        v169 = v177 - v176;
        v170 = v158;
        goto LABEL_90;
      }
      v149 = *(_QWORD *)(v54 + 32);
      v148 = *(_QWORD *)(v54 + 40);
      v158 = __OFSUB__(v148, v149);
      v150 = v148 - v149;
      v151 = v158;
    }
    if ((v151 & 1) != 0)
      goto LABEL_138;
    v159 = v143 - 2;
    v165 = (uint64_t *)(v144 + 16 * (v143 - 2));
    v167 = *v165;
    v166 = v165[1];
    v168 = __OFSUB__(v166, v167);
    v169 = v166 - v167;
    v170 = v168;
    if (v168)
      goto LABEL_140;
    v171 = (uint64_t *)(v144 + 16 * v147);
    v173 = *v171;
    v172 = v171[1];
    v158 = __OFSUB__(v172, v173);
    v174 = v172 - v173;
    if (v158)
      goto LABEL_142;
    if (__OFADD__(v169, v174))
      goto LABEL_144;
    if (v169 + v174 >= v150)
    {
      v175 = v150 < v174;
LABEL_96:
      if (v175)
        v147 = v159;
      goto LABEL_98;
    }
LABEL_90:
    if ((v170 & 1) != 0)
      goto LABEL_141;
    v178 = (uint64_t *)(v144 + 16 * v147);
    v180 = *v178;
    v179 = v178[1];
    v158 = __OFSUB__(v179, v180);
    v181 = v179 - v180;
    if (v158)
      goto LABEL_143;
    if (v181 < v169)
      goto LABEL_107;
LABEL_98:
    v186 = v147 - 1;
    if (v147 - 1 >= v143)
    {
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    if (!*a1)
      goto LABEL_159;
    v187 = v54;
    v188 = v144;
    v189 = (uint64_t *)(v144 + 16 * v186);
    v190 = *v189;
    v191 = v188;
    v192 = (_QWORD *)(v188 + 16 * v147);
    v193 = v192[1];
    v194 = v226;
    sub_23FCE393C(*a1 + *(_QWORD *)(v225 + 72) * *v189, *a1 + *(_QWORD *)(v225 + 72) * *v192, (_QWORD *)(*a1 + *(_QWORD *)(v225 + 72) * v193), v224);
    if (v194)
      break;
    if (v193 < v190)
      goto LABEL_132;
    if (v147 > *(_QWORD *)(v187 + 16))
      goto LABEL_133;
    *v189 = v190;
    *(_QWORD *)(v191 + 16 * v186 + 8) = v193;
    v195 = *(_QWORD *)(v187 + 16);
    if (v147 >= v195)
      goto LABEL_134;
    v144 = v191;
    v54 = v187;
    v226 = 0;
    v143 = v195 - 1;
    memmove(v192, v192 + 2, 16 * (v195 - 1 - v147));
    *(_QWORD *)(v187 + 16) = v195 - 1;
    if (v195 <= 2)
      goto LABEL_107;
  }
LABEL_112:
  swift_bridgeObjectRelease();
  if (v212 < -1)
    goto LABEL_153;
LABEL_129:
  *(_QWORD *)(v211 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23FCE3604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a4;
  v49 = a1;
  v6 = sub_23FBFD684(&qword_256F5FA60);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v57 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v50 = (uint64_t *)((char *)&v47 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v52 = (uint64_t *)((char *)&v47 - v15);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v47 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v47 - v22;
  v56 = a3;
  v48 = a2;
  if (a3 != a2)
  {
    v24 = *(_QWORD *)(v21 + 72);
    v25 = v24 * (v56 - 1);
    v53 = v24;
    v26 = v24 * v56;
    v51 = (char *)&v47 - v22;
    v62 = v6;
    while (2)
    {
      v27 = 0;
      v61 = v49;
      v54 = v26;
      v55 = v25;
      while (1)
      {
        v28 = *v60;
        v59 = v26 + v27;
        sub_23FC74908(v26 + v27 + v28, (uint64_t)v23, &qword_256F5FA60);
        v58 = v25 + v27;
        sub_23FC74908(v25 + v27 + v28, (uint64_t)v19, &qword_256F5FA60);
        v29 = *(int *)(v6 + 48);
        v30 = v52;
        v31 = (char *)v52 + v29;
        v32 = &v23[v29];
        v33 = *(_QWORD *)v23;
        v34 = v23[8];
        *v52 = *(_QWORD *)v23;
        *((_BYTE *)v30 + 8) = v34;
        v35 = sub_23FD741B0();
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
        v37(v31, v32, v35);
        v38 = *(void (**)(char *, uint64_t))(v36 + 8);
        v38(v31, v35);
        if ((v34 & 1) != 0)
          break;
        v39 = *(int *)(v62 + 48);
        v40 = v50;
        v41 = (char *)v50 + v39;
        v42 = *(_QWORD *)v19;
        v43 = v19[8];
        *v50 = *(_QWORD *)v19;
        *((_BYTE *)v40 + 8) = v43;
        v37((char *)v40 + v39, &v19[v39], v35);
        v38(v41, v35);
        if ((v43 & 1) != 0)
          break;
        sub_23FBFEF74((uint64_t)v19, &qword_256F5FA60);
        v23 = v51;
        sub_23FBFEF74((uint64_t)v51, &qword_256F5FA60);
        v44 = v33 < v42;
        v6 = v62;
        v26 = v54;
        v25 = v55;
        if (v44)
        {
          v45 = *v60;
          if (!*v60)
          {
            __break(1u);
            return;
          }
          v46 = v45 + v55 + v27;
          sub_23FC748E8(v45 + v54 + v27, v57, &qword_256F5FA60);
          swift_arrayInitWithTakeFrontToBack();
          sub_23FC748E8(v57, v46, &qword_256F5FA60);
          v27 -= v53;
          if (v56 != ++v61)
            continue;
        }
        goto LABEL_12;
      }
      sub_23FBFEF74((uint64_t)v19, &qword_256F5FA60);
      v23 = v51;
      sub_23FBFEF74((uint64_t)v51, &qword_256F5FA60);
      v6 = v62;
      v26 = v54;
      v25 = v55;
LABEL_12:
      v25 += v53;
      v26 += v53;
      if (++v56 != v48)
        continue;
      break;
    }
  }
}

void sub_23FCE393C(unint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  int64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  BOOL v66;
  unint64_t v67;
  unint64_t v68;
  BOOL v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  void (*v84)(char *, uint64_t);
  int v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  int v90;
  _QWORD *v91;
  unint64_t v92;
  BOOL v93;
  unint64_t v95;
  uint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;

  v8 = sub_23FBFD684(&qword_256F5FA60);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v98 = (uint64_t *)((char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v100 = (uint64_t *)((char *)&v97 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v106 = (uint64_t)&v97 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v102 = (uint64_t *)((char *)&v97 - v22);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v104 = (uint64_t *)((char *)&v97 - v25);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v29 = (char *)&v97 - v28;
  MEMORY[0x24BDAC7A8](v27, v30);
  v105 = (uint64_t)&v97 - v32;
  v34 = *(_QWORD *)(v33 + 72);
  if (!v34)
  {
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (a2 - a1 == 0x8000000000000000 && v34 == -1)
    goto LABEL_83;
  v36 = (uint64_t)a3 - a2;
  if ((_QWORD *)((char *)a3 - a2) == (_QWORD *)0x8000000000000000 && v34 == -1)
    goto LABEL_84;
  v38 = v36 / v34;
  v107 = v8;
  v101 = v34;
  if ((uint64_t)(a2 - a1) / v34 >= v36 / v34)
  {
    v42 = v31;
    sub_23FC9A920(a2, v36 / v34);
    v40 = a4 + v38 * v34;
    if (v38 * v34 < 1 || a1 >= a2)
      goto LABEL_22;
    v105 = -v34;
    v71 = v42;
    v99 = a4;
    v109 = a1;
    while (1)
    {
      v108 = v40;
      v72 = v105;
      v73 = v106;
      v103 = (_QWORD *)(v40 + v105);
      v104 = a3;
      sub_23FC74908(v40 + v105, v106, &qword_256F5FA60);
      v110 = a2;
      v102 = (_QWORD *)(a2 + v72);
      sub_23FC74908(a2 + v72, v71, &qword_256F5FA60);
      v74 = *(int *)(v8 + 48);
      v75 = v100;
      v76 = (char *)v100 + v74;
      v77 = v73 + v74;
      v78 = *(_QWORD *)v73;
      v79 = *(_BYTE *)(v73 + 8);
      *v100 = *(_QWORD *)v73;
      *((_BYTE *)v75 + 8) = v79;
      v80 = v8;
      v81 = sub_23FD741B0();
      v82 = *(_QWORD *)(v81 - 8);
      v83 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
      v83(v76, v77, v81);
      v84 = *(void (**)(char *, uint64_t))(v82 + 8);
      v84(v76, v81);
      if ((v79 & 1) != 0)
      {
        v85 = 0;
      }
      else
      {
        v86 = *(int *)(v80 + 48);
        v87 = v98;
        v88 = (char *)v98 + v86;
        v89 = *(_QWORD *)v71;
        v90 = *(unsigned __int8 *)(v71 + 8);
        *v98 = *(_QWORD *)v71;
        *((_BYTE *)v87 + 8) = v90;
        v83((char *)v87 + v86, v71 + v86, v81);
        v84(v88, v81);
        v85 = (v78 < v89) & ~v90;
      }
      v91 = v104;
      a3 = (_QWORD *)((char *)v104 + v105);
      sub_23FBFEF74(v71, &qword_256F5FA60);
      sub_23FBFEF74(v106, &qword_256F5FA60);
      a4 = v99;
      v92 = v109;
      a2 = v110;
      if (v85)
      {
        v93 = (unint64_t)v91 < v110 || (unint64_t)a3 >= v110;
        v8 = v107;
        if (v93)
        {
          a2 = (unint64_t)v102;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a2 = (unint64_t)v102;
          if (v91 != (_QWORD *)v110)
            swift_arrayInitWithTakeBackToFront();
        }
        v40 = v108;
        goto LABEL_76;
      }
      v8 = v107;
      if ((unint64_t)v91 < v108 || (unint64_t)a3 >= v108)
      {
        v95 = (unint64_t)v103;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v91 == (_QWORD *)v108)
        {
          v40 = (unint64_t)v103;
          goto LABEL_76;
        }
        v95 = (unint64_t)v103;
        swift_arrayInitWithTakeBackToFront();
      }
      v40 = v95;
LABEL_76:
      if (v40 <= a4 || a2 <= v92)
        goto LABEL_22;
    }
  }
  v39 = (uint64_t)(a2 - a1) / v34;
  sub_23FC9A920(a1, v39);
  v40 = a4 + v39 * v34;
  if (v39 * v34 >= 1 && a2 < (unint64_t)a3)
  {
    v46 = (uint64_t)v29;
    v103 = a3;
    v108 = a4 + v39 * v34;
    do
    {
      v109 = a1;
      v110 = a2;
      v47 = v105;
      sub_23FC74908(a2, v105, &qword_256F5FA60);
      sub_23FC74908(a4, v46, &qword_256F5FA60);
      v48 = *(int *)(v8 + 48);
      v49 = v104;
      v50 = (char *)v104 + v48;
      v51 = v47 + v48;
      v52 = *(_QWORD *)v47;
      v53 = v46;
      v54 = *(_BYTE *)(v47 + 8);
      *v104 = *(_QWORD *)v47;
      *((_BYTE *)v49 + 8) = v54;
      v55 = sub_23FD741B0();
      v56 = *(_QWORD *)(v55 - 8);
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
      v57(v50, v51, v55);
      v58 = *(void (**)(char *, uint64_t))(v56 + 8);
      v58(v50, v55);
      if ((v54 & 1) != 0)
        goto LABEL_29;
      v59 = *(int *)(v107 + 48);
      v60 = v102;
      v61 = (char *)v102 + v59;
      v62 = *(_QWORD *)v53;
      v63 = *(_BYTE *)(v53 + 8);
      *v102 = *(_QWORD *)v53;
      *((_BYTE *)v60 + 8) = v63;
      v57((char *)v60 + v59, v53 + v59, v55);
      v58(v61, v55);
      if ((v63 & 1) != 0)
      {
LABEL_29:
        sub_23FBFEF74(v53, &qword_256F5FA60);
        sub_23FBFEF74(v105, &qword_256F5FA60);
        v46 = v53;
      }
      else
      {
        sub_23FBFEF74(v53, &qword_256F5FA60);
        sub_23FBFEF74(v105, &qword_256F5FA60);
        v46 = v53;
        if (v52 < v62)
        {
          v64 = v101;
          v67 = v110 + v101;
          v65 = v109;
          v70 = v109 < v110 || v109 >= v67;
          v8 = v107;
          v68 = (unint64_t)v103;
          if (v70)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v109 != v110)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          goto LABEL_39;
        }
      }
      v64 = v101;
      v65 = v109;
      v66 = v109 < a4 || v109 >= a4 + v101;
      v8 = v107;
      v67 = v110;
      v68 = (unint64_t)v103;
      if (v66)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v109 != a4)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      a4 += v64;
LABEL_39:
      v40 = v108;
      a1 = v65 + v64;
      v69 = a4 >= v108 || v67 >= v68;
      a2 = v67;
    }
    while (!v69);
  }
LABEL_22:
  v44 = v40 - a4;
  if (v101 != -1 || v44 != 0x8000000000000000)
  {
    sub_23FC9A920(a4, v44 / v101);
    return;
  }
LABEL_85:
  __break(1u);
}

uint64_t sub_23FCE3F70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v10 = sub_23FD7157C();
  v39 = *(_QWORD *)(v10 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFF180();
  v15 = v14 - v13;
  sub_23FBFD684(&qword_256F61A60);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FBFF180();
  v20 = v19 - v18;
  sub_23FC569A8(v40, a1, a2, a3);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23FCE4D0C();
  v21 = sub_23FBFD684(&qword_256F5E620);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v20, 1, v21) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23FC08F30();
    return swift_release();
  }
  else
  {
    v40[8] = *(_QWORD *)(v39 + 32);
    while (1)
    {
      v23 = *(int *)(v21 + 48);
      sub_23FCE4CB4(v15, v20);
      v24 = *(_QWORD *)(v20 + v23);
      sub_23FCE4CC8();
      v27 = v26;
      v28 = *(_QWORD *)(v23 + 16);
      v29 = (v25 & 1) == 0;
      if (__OFADD__(v28, v29))
        break;
      v30 = v25;
      if (*(_QWORD *)(v23 + 24) >= v28 + v29)
      {
        if ((a4 & 1) == 0)
        {
          sub_23FBFD684((uint64_t *)&unk_256F65E10);
          sub_23FD7520C();
        }
      }
      else
      {
        sub_23FC5450C();
        sub_23FCE4CC8();
        sub_23FCE4C7C();
        if (!v32)
          goto LABEL_19;
        v27 = v31;
      }
      v33 = *(_QWORD **)a5;
      if ((v30 & 1) != 0)
      {
        v34 = *(_QWORD *)(v33[7] + 8 * v27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v15, v10);
        v35 = *(_QWORD *)(*(_QWORD *)a5 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v35 + 8 * v27) = v34;
      }
      else
      {
        v33[(v27 >> 6) + 8] |= 1 << v27;
        sub_23FCE4CB4(v33[6] + *(_QWORD *)(v39 + 72) * v27, v15);
        *(_QWORD *)(v33[7] + 8 * v27) = v24;
        v36 = v33[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_18;
        v33[2] = v38;
      }
      sub_23FCE4D0C();
      v21 = sub_23FBFD684(&qword_256F5E620);
      a4 = 1;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v20, 1, v21) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_23FD753C8();
    __break(1u);
  }
  return result;
}

uint64_t sub_23FCE4210(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  _QWORD *v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v68 = a2;
  v59 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  v69 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59, v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FBFD684(&qword_256F61A58);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FD7157C();
  v66 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FBFD684(&qword_256F61A60);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC569A8(&v71, a1, v68, a3);
  v61 = a1;
  v24 = v19;
  swift_bridgeObjectRetain();
  v60 = a3;
  swift_retain();
  sub_23FC569E8();
  v25 = sub_23FBFD684(&qword_256F5E620);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v25) != 1)
  {
    v67 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v63 = v16;
    v64 = a5;
    v62 = v19;
    v65 = v23;
    do
    {
      v27 = *(int *)(v25 + 48);
      v67(v24, v23, v16);
      v68 = *(_QWORD *)&v23[v27];
      v28 = (_QWORD *)*a5;
      sub_23FC84CD4();
      v31 = v30;
      v32 = v28[2];
      v33 = (v29 & 1) == 0;
      if (__OFADD__(v32, v33))
        goto LABEL_31;
      v34 = v29;
      if (v28[3] >= v32 + v33)
      {
        if ((a4 & 1) == 0)
        {
          sub_23FBFD684((uint64_t *)&unk_256F65E10);
          sub_23FD7520C();
        }
      }
      else
      {
        sub_23FC5450C();
        sub_23FC84CD4();
        if ((v34 & 1) != (v36 & 1))
          goto LABEL_33;
        v31 = v35;
      }
      v37 = (_QWORD *)*a5;
      if ((v34 & 1) != 0)
      {
        v38 = *(_QWORD **)(v37[7] + 8 * v31);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v72 = v38;
        sub_23FC569A8(&v70, v68, sub_23FCE4AE0, 0);
        swift_bridgeObjectRetain();
        sub_23FC56D7C();
        v40 = sub_23FBFD684(&qword_256F5E608);
        while (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v15, 1, v40) != 1)
        {
          v41 = *(int *)(v40 + 48);
          sub_23FC748BC((uint64_t)v15, (uint64_t)v11, type metadata accessor for FeedbackLearning.CandidateParameter);
          v42 = *(_QWORD *)&v15[v41];
          v44 = sub_23FC84D38((uint64_t)v11);
          v45 = v38[2];
          v46 = (v43 & 1) == 0;
          if (__OFADD__(v45, v46))
          {
            __break(1u);
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
            while (1)
            {
LABEL_33:
              sub_23FD753C8();
              __break(1u);
            }
          }
          v47 = v43;
          if (v38[3] >= v45 + v46)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23FBFD684(&qword_256F61A68);
              sub_23FD7520C();
            }
          }
          else
          {
            sub_23FC55604();
            v48 = sub_23FC84D38((uint64_t)v11);
            if ((v47 & 1) != (v49 & 1))
              goto LABEL_33;
            v44 = v48;
          }
          v38 = v72;
          if ((v47 & 1) != 0)
          {
            v50 = *(_QWORD *)(v72[7] + 8 * v44);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_23FBFEF18((uint64_t)v11, type metadata accessor for FeedbackLearning.CandidateParameter);
            v51 = v38[7];
            swift_bridgeObjectRelease();
            *(_QWORD *)(v51 + 8 * v44) = v50;
          }
          else
          {
            v72[(v44 >> 6) + 8] |= 1 << v44;
            sub_23FC748BC((uint64_t)v11, v38[6] + *(_QWORD *)(v69 + 72) * v44, type metadata accessor for FeedbackLearning.CandidateParameter);
            *(_QWORD *)(v38[7] + 8 * v44) = v42;
            v52 = v38[2];
            v53 = __OFADD__(v52, 1);
            v54 = v52 + 1;
            if (v53)
              goto LABEL_30;
            v38[2] = v54;
          }
          sub_23FC56D7C();
          v40 = sub_23FBFD684(&qword_256F5E608);
          isUniquelyReferenced_nonNull_native = 1;
        }
        swift_bridgeObjectRelease();
        sub_23FC08F30();
        swift_release();
        swift_bridgeObjectRelease();
        v24 = v62;
        v16 = v63;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v62, v63);
        a5 = v64;
        v57 = *(_QWORD *)(*v64 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v57 + 8 * v31) = v38;
      }
      else
      {
        v37[(v31 >> 6) + 8] |= 1 << v31;
        v67((char *)(v37[6] + *(_QWORD *)(v66 + 72) * v31), v24, v16);
        *(_QWORD *)(v37[7] + 8 * v31) = v68;
        v55 = v37[2];
        v53 = __OFADD__(v55, 1);
        v56 = v55 + 1;
        if (v53)
          goto LABEL_32;
        v37[2] = v56;
      }
      v23 = v65;
      sub_23FC569E8();
      v25 = sub_23FBFD684(&qword_256F5E620);
      a4 = 1;
    }
    while (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v25) != 1);
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_23FC08F30();
  return swift_release();
}

uint64_t sub_23FCE47B0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;

  v40 = a3;
  v5 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FBFD684(&qword_256F5E608);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v39 = (uint64_t)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return swift_bridgeObjectRelease();
  v35[1] = v5;
  v35[2] = a1;
  v15 = *(int *)(v11 + 48);
  v16 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v37 = *(_QWORD *)(v12 + 72);
  v38 = v15;
  swift_bridgeObjectRetain();
  v17 = type metadata accessor for FeedbackLearning.CandidateParameter;
  while (1)
  {
    v18 = v39;
    sub_23FC74908(v16, v39, &qword_256F5E608);
    v19 = v17;
    sub_23FC748BC(v18, (uint64_t)v8, v17);
    v20 = *(_QWORD *)(v18 + v38);
    v21 = *v40;
    v23 = sub_23FC84D38((uint64_t)v8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = (v22 & 1) == 0;
    if (__OFADD__(v24, v25))
      break;
    v26 = v22;
    if (*(_QWORD *)(v21 + 24) >= v24 + v25)
    {
      if ((a2 & 1) != 0)
      {
        if ((v22 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_23FBFD684(&qword_256F61A68);
        sub_23FD7520C();
        if ((v26 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_23FC55604();
      v27 = sub_23FC84D38((uint64_t)v8);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_20;
      v23 = v27;
      if ((v26 & 1) != 0)
      {
LABEL_10:
        v17 = v19;
        sub_23FBFEF18((uint64_t)v8, v19);
        v29 = *(_QWORD *)(*v40 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v29 + 8 * v23) = v20;
        goto LABEL_14;
      }
    }
    v30 = (_QWORD *)*v40;
    *(_QWORD *)(*v40 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v17 = v19;
    sub_23FC748BC((uint64_t)v8, v30[6] + *(_QWORD *)(v36 + 72) * v23, v19);
    *(_QWORD *)(v30[7] + 8 * v23) = v20;
    v31 = v30[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_19;
    v30[2] = v33;
LABEL_14:
    v16 += v37;
    a2 = 1;
    if (!--v14)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

uint64_t sub_23FCE4A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCE4A94(uint64_t a1, uint64_t a2)
{
  sub_23FCE4B60(a2, a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCE4AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FCE4AFC(a1, &qword_256F5E610, &qword_256F5E620, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23FCE4A44, a2);
}

uint64_t sub_23FCE4AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FCE4AFC(a1, &qword_256F5E5F8, &qword_256F5E608, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23FCE4A94, a2);
}

uint64_t sub_23FCE4AFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v9 = *(int *)(sub_23FBFD684(a2) + 48);
  v10 = *(int *)(sub_23FBFD684(a3) + 48);
  result = a4(a5, a1, *(_QWORD *)(a1 + v9));
  *(_QWORD *)(a5 + v10) = result;
  return result;
}

uint64_t sub_23FCE4B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCE4BA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_23FCE1DE0(a1, a2, a3, a4);
}

uint64_t sub_23FCE4BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23FCE16DC(a1, a2, *(_QWORD *)(v2 + 16));
}

ValueMetadata *_s28StatementParameterResolutionVMa()
{
  return &_s28StatementParameterResolutionVN;
}

uint64_t sub_23FCE4BC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  return *(_QWORD *)(v0 + 48) + *(_QWORD *)(*(_QWORD *)(v2 - 160) + 72) * v1;
}

uint64_t sub_23FCE4BF8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
  return *(_QWORD *)(v1 + 48) + *(_QWORD *)(*(_QWORD *)(v2 - 160) + 72) * v0;
}

uint64_t sub_23FCE4C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t sub_23FCE4C3C()
{
  return sub_23FD75200();
}

uint64_t sub_23FCE4C50()
{
  return sub_23FD75200();
}

uint64_t sub_23FCE4C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 136), v1);
}

uint64_t sub_23FCE4C74()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCE4CA0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FCE4CA8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FCE4CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 72))(a1, a2, v2);
}

void sub_23FCE4CC0()
{
  sub_23FC84CD4();
}

void sub_23FCE4CC8()
{
  sub_23FC84CD4();
}

void sub_23FCE4CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v1) = v0;
}

uint64_t sub_23FCE4CF4()
{
  return swift_release();
}

uint64_t sub_23FCE4D00()
{
  return swift_bridgeObjectRelease();
}

void sub_23FCE4D0C()
{
  sub_23FC569E8();
}

uint64_t sub_23FCE4D18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 - 208))(a1, a2, 1);
}

uint64_t sub_23FCE4D38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FCE4D94 + 4 * byte_23FD7A2B0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t _s18ToolStepEvaluationVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F623D0);
}

uint64_t _s24ToolDisambiguationResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F62338);
}

uint64_t _s23ParameterStepEvaluationVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F622A0);
}

uint64_t _s19ParameterStepResultOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F62210);
}

uint64_t _s25ParameterNeedsValueResultV16NeedsValueResultOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F62190);
}

uint64_t _s25ParameterNeedsValueResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F620E8);
}

uint64_t _s25ParameterNotAllowedResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F62058);
}

uint64_t _s33ParameterCandidatesNotFoundResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61FC8);
}

uint64_t _s27ParameterConfirmationResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61F30);
}

uint64_t _s29ParameterDisambiguationResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61E98);
}

uint64_t _s20DisambiguationResultOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61E08);
}

uint64_t _s20ActionStepEvaluationVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61D60);
}

uint64_t _s24ActionConfirmationResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61CD0);
}

uint64_t _s19ValueStepEvaluationVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61C38);
}

uint64_t _s25ValueDisambiguationResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61BA0);
}

uint64_t sub_23FCE54B0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t found;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23FD7157C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = a1 + *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
      swift_bridgeObjectRelease();
      v5 = _s24ToolDisambiguationResultVMa(0);
LABEL_3:
      v6 = *(int *)(v5 + 24);
      goto LABEL_10;
    case 1:
      v7 = sub_23FD7157C();
      v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v8(a1, v7);
      v9 = (int *)_s23ParameterStepEvaluationVMa(0);
      v8(a1 + v9[5], v7);
      v10 = a1 + v9[6];
      v11 = sub_23FD731FC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      v4 = a1 + v9[7];
      _s19ParameterStepResultOMa(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          v12 = sub_23FBFD684(qword_256F60150);
          if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 1, v12))
          {
            v13 = sub_23FD74798();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v4, v13);
          }
          found = _s25ParameterNeedsValueResultVMa(0);
          goto LABEL_9;
        case 1:
          v25 = sub_23FD74798();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v4, v25);
          found = _s25ParameterNotAllowedResultVMa(0);
          goto LABEL_9;
        case 2:
          v26 = sub_23FD74798();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v4, v26);
          found = _s33ParameterCandidatesNotFoundResultVMa(0);
          goto LABEL_9;
        case 3:
          v27 = sub_23FD74798();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v4, v27);
          v5 = _s27ParameterConfirmationResultVMa(0);
          goto LABEL_3;
        case 4:
          swift_bridgeObjectRelease();
          v28 = _s29ParameterDisambiguationResultVMa(0);
          v29 = v4 + *(int *)(v28 + 20);
          _s20DisambiguationResultOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v30 = sub_23FD74798();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
          }
          v6 = *(int *)(v28 + 24);
          goto LABEL_10;
        default:
          return result;
      }
      return result;
    case 2:
      v15 = sub_23FD7157C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
      v4 = a1 + *(int *)(_s20ActionStepEvaluationVMa(0) + 20);
      found = _s24ActionConfirmationResultVMa(0);
LABEL_9:
      v6 = *(int *)(found + 20);
LABEL_10:
      v16 = v4 + v6;
      goto LABEL_14;
    case 3:
      v17 = sub_23FD7157C();
      v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
      v18(a1, v17);
      v19 = _s19ValueStepEvaluationVMa(0);
      v18(a1 + *(int *)(v19 + 20), v17);
      v20 = a1 + *(int *)(v19 + 24);
      swift_bridgeObjectRelease();
      v21 = _s25ValueDisambiguationResultVMa(0);
      v22 = v20 + *(int *)(v21 + 20);
      _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = sub_23FD74798();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      }
      v16 = v20 + *(int *)(v21 + 24);
LABEL_14:
      v24 = sub_23FD71474();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v16, v24);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23FCE5804()
{
  char *v0;

  v0 = (char *)sub_23FCE5854 + 4 * byte_23FD7A2C2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FCE5854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v2 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
  v4 = v0 + v3;
  v5 = v1 + v3;
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v1 + v3 + 16);
  v7 = *(_QWORD *)(v1 + v3);
  v6 = *(_QWORD *)(v1 + v3 + 8);
  *(_QWORD *)v4 = v7;
  *(_QWORD *)(v4 + 8) = v6;
  v8 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v9 = v4 + v8;
  v10 = v5 + v8;
  v11 = sub_23FD71474();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FCE5E24(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23FBFEF18(result, _s23StatementStepEvaluationOMa);
    v2 = (char *)&loc_23FCE5E8C + 4 * byte_23FD7A2CB[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t _s23StatementStepEvaluationOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F61B10);
}

void sub_23FCE6478()
{
  char *v0;

  v0 = (char *)sub_23FCE64C8 + 4 * byte_23FD7A2D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FCE64C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
  v4 = v0 + v3;
  v5 = v1 + v3;
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 8);
  *(_QWORD *)v4 = *(_QWORD *)v5;
  *(_QWORD *)(v4 + 8) = v6;
  v7 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v8 = v4 + v7;
  v9 = v5 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FCE6A7C(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23FBFEF18(result, _s23StatementStepEvaluationOMa);
    v2 = (char *)&loc_23FCE6AE4 + 4 * byte_23FD7A2DD[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23FCE7098()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = _s18ToolStepEvaluationVMa(319);
  if (v1 <= 0x3F)
  {
    result = _s23ParameterStepEvaluationVMa(319);
    if (v2 <= 0x3F)
    {
      result = _s20ActionStepEvaluationVMa(319);
      if (v3 <= 0x3F)
      {
        result = _s19ValueStepEvaluationVMa(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_23FCE7168()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE7178()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_23FCE718C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD7157C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v12 = _s25ValueDisambiguationResultVMa(0);
    v13 = *(int *)(v12 + 20);
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = _s20DisambiguationResultOMa(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23FD74798();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v19 = *(int *)(v12 + 24);
    v20 = &v10[v19];
    v21 = &v11[v19];
    v22 = sub_23FD71474();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t sub_23FCE72F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_23FD7157C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = _s25ValueDisambiguationResultVMa(0);
  v8 = v6 + *(int *)(v7 + 20);
  _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_23FD74798();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = v6 + *(int *)(v7 + 24);
  v11 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t sub_23FCE73CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = _s25ValueDisambiguationResultVMa(0);
  v12 = *(int *)(v11 + 20);
  v13 = (void *)(v9 + v12);
  v14 = (const void *)(v10 + v12);
  v15 = _s20DisambiguationResultOMa(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v17 = *(int *)(v11 + 24);
  v18 = v9 + v17;
  v19 = v10 + v17;
  v20 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t sub_23FCE750C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = _s25ValueDisambiguationResultVMa(0);
  v12 = v11;
  if (a1 != a2)
  {
    v13 = *(int *)(v11 + 20);
    v14 = (void *)(v9 + v13);
    v15 = (const void *)(v10 + v13);
    sub_23FBFEF18(v9 + v13, _s20DisambiguationResultOMa);
    v16 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v18 = *(int *)(v12 + 24);
  v19 = v9 + v18;
  v20 = v10 + v18;
  v21 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t sub_23FCE766C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = _s25ValueDisambiguationResultVMa(0);
  v12 = *(int *)(v11 + 20);
  v13 = (void *)(v9 + v12);
  v14 = (const void *)(v10 + v12);
  v15 = _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v17 = *(int *)(v11 + 24);
  v18 = v9 + v17;
  v19 = v10 + v17;
  v20 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t sub_23FCE77A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRelease();
  v11 = _s25ValueDisambiguationResultVMa(0);
  v12 = v11;
  if (a1 != a2)
  {
    v13 = *(int *)(v11 + 20);
    v14 = (void *)(v9 + v13);
    v15 = (const void *)(v10 + v13);
    sub_23FBFEF18(v9 + v13, _s20DisambiguationResultOMa);
    v16 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v18 = *(int *)(v12 + 24);
  v19 = v9 + v18;
  v20 = v10 + v18;
  v21 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t sub_23FCE78FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE7908()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FCF2458();
  sub_23FC06178();
  if (v1)
  {
    v2 = sub_23FC8A790();
  }
  else
  {
    sub_23FCF29B0();
    v2 = sub_23FCF27DC();
  }
  return sub_23FC06098(v2, v0, v3);
}

uint64_t sub_23FCE7944()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE7950()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FCF2458();
  sub_23FC06188();
  if (v0)
  {
    sub_23FC5F4A8();
  }
  else
  {
    sub_23FCF29B0();
    sub_23FCF27B8();
  }
  sub_23FCF25B4();
  return sub_23FC0608C(v1, v2, v3, v4);
}

uint64_t sub_23FCE7990()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD7157C();
  if (v1 <= 0x3F)
  {
    result = _s25ValueDisambiguationResultVMa(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23FCE7A14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23FD71474();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_23FCE7A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_23FCE7AD4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD71474();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_23FCE7B30(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD71474();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_23FCE7B8C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD71474();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_23FCE7BE8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD71474();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23FCE7C44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCE7C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 253)
  {
    sub_23FC09258();
  }
  else
  {
    v6 = sub_23FBFF104();
    sub_23FC06098(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_23FCE7CA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FCE7CB4(_BYTE *a1, char a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3 == 253)
  {
    *a1 = a2 + 2;
    sub_23FC09258();
  }
  else
  {
    sub_23FBFF104();
    sub_23FCF25B4();
    sub_23FC0608C(v3, v4, v5, v6);
  }
}

uint64_t sub_23FCE7D04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23FCE7D78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD7157C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v11 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
    v12 = &v9[v11];
    v13 = &v10[v11];
    v14 = sub_23FD71474();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_23FCE7E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = v5 + *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  v7 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_23FCE7EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_BYTE *)(a2 + v7);
  *(_BYTE *)(a1 + v7) = *v9;
  v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  v11 = v8 + v10;
  v12 = &v9[v10];
  v13 = sub_23FD71474();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t sub_23FCE7F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_BYTE *)(a2 + v7);
  *(_BYTE *)(a1 + v7) = *v9;
  v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  v11 = v8 + v10;
  v12 = &v9[v10];
  v13 = sub_23FD71474();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_23FCE7FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_BYTE *)(a2 + v7);
  *(_BYTE *)(a1 + v7) = *v9;
  v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  v11 = v8 + v10;
  v12 = &v9[v10];
  v13 = sub_23FD71474();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_23FCE8070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_BYTE *)(a2 + v7);
  *(_BYTE *)(a1 + v7) = *v9;
  v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  v11 = v8 + v10;
  v12 = &v9[v10];
  v13 = sub_23FD71474();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_23FCE8108()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE8114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCE8EF8(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BE52140], _s24ActionConfirmationResultVMa);
}

uint64_t sub_23FCE8128()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE8134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCE8F70(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140], (void (*)(_QWORD))_s24ActionConfirmationResultVMa);
}

void sub_23FCE8148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FCE8FF8(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE52140], (void (*)(uint64_t))_s24ActionConfirmationResultVMa);
}

uint64_t *sub_23FCE815C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23FD74798();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_23FCE8210(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23FD74798();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_23FCE825C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23FCE82E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23FBFEF18((uint64_t)a1, _s20DisambiguationResultOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_23FCE838C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23FCE8418(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23FBFEF18((uint64_t)a1, _s20DisambiguationResultOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23FCE84BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74798();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23FCE8530(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    sub_23FCF275C();
    sub_23FCF25F8();
    if (sub_23FCF24BC() == 1)
    {
      v4 = sub_23FC10290();
      sub_23FCA9590(v4);
      sub_23FCF247C();
    }
    else
    {
      sub_23FCF2434();
    }
    v5 = sub_23FBFF104();
    sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  }
  sub_23FC6264C();
}

uint64_t sub_23FCE85D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  sub_23FCF275C();
  swift_bridgeObjectRelease();
  v2 = v0 + *(int *)(v1 + 20);
  _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_23FC10290();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  }
  sub_23FBFF104();
  v4 = sub_23FCF298C();
  return v5(v4);
}

void sub_23FCE864C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FCF275C();
  *v1 = *v0;
  sub_23FCF25F8();
  if (sub_23FCF24BC() == 1)
  {
    v2 = sub_23FC10290();
    sub_23FCA9590(v2);
    sub_23FCF247C();
  }
  else
  {
    sub_23FCF2434();
  }
  v3 = sub_23FBFF104();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23FC6264C();
}

void sub_23FCE86C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FCF275C();
  *v3 = *v6;
  swift_bridgeObjectRetain();
  sub_23FC58D60();
  if (v3 != v4)
  {
    sub_23FBFEF18((uint64_t)v3 + *(int *)(a3 + 20), _s20DisambiguationResultOMa);
    _s20DisambiguationResultOMa(0);
    if (sub_23FCF24BC() == 1)
    {
      v7 = sub_23FC10290();
      sub_23FCA9590(v7);
      sub_23FCF247C();
    }
    else
    {
      sub_23FCF2434();
    }
  }
  v8 = sub_23FBFF104();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24));
  sub_23FC17830();
}

void sub_23FCE8778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FCF2934();
  *v0 = v1;
  _s20DisambiguationResultOMa(0);
  if (sub_23FCF24BC() == 1)
  {
    v2 = sub_23FC10290();
    sub_23FCF24F0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
    sub_23FCF247C();
  }
  else
  {
    sub_23FCF2434();
  }
  v3 = sub_23FBFF104();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23FC17830();
}

void sub_23FCE8808()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FCF2934();
  *v0 = v3;
  swift_bridgeObjectRelease();
  if (v0 != v1)
  {
    sub_23FBFEF18((uint64_t)v0 + *(int *)(v2 + 20), _s20DisambiguationResultOMa);
    _s20DisambiguationResultOMa(0);
    if (sub_23FCF24BC() == 1)
    {
      v4 = sub_23FC10290();
      sub_23FCF24F0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
      sub_23FCF247C();
    }
    else
    {
      sub_23FCF2434();
    }
  }
  v5 = sub_23FBFF104();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_23FC17830();
}

uint64_t sub_23FCE88B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCE88C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23FCF2808();
    sub_23FC09258();
  }
  else
  {
    _s20DisambiguationResultOMa(0);
    sub_23FC06178();
    if (v7)
    {
      v8 = v6;
      v9 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_23FBFF104();
      v9 = *(int *)(a3 + 24);
    }
    sub_23FC06098(a1 + v9, a2, v8);
  }
}

uint64_t sub_23FCE8934()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FCE8944()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCF2920();
  if (v2)
  {
    *v1 = (v0 - 1);
    sub_23FC09258();
  }
  else
  {
    _s20DisambiguationResultOMa(0);
    sub_23FC06188();
    if (!v2)
      sub_23FBFF104();
    sub_23FCF25B4();
    sub_23FC0608C(v3, v4, v5, v6);
  }
}

void sub_23FCE89AC()
{
  unint64_t v0;
  unint64_t v1;

  _s20DisambiguationResultOMa(319);
  if (v0 <= 0x3F)
  {
    sub_23FCF2980();
    sub_23FD71474();
    if (v1 <= 0x3F)
    {
      sub_23FCF2980();
      swift_initStructMetadata();
    }
  }
  sub_23FCF295C();
}

_QWORD *sub_23FCE8A30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD74798();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD71474();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_23FCE8AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23FCE8B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCE8BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCE8C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCE8CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCE8D50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCE8D5C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC10290();
  sub_23FC06178();
  if (v3)
  {
    v4 = sub_23FC8A790();
  }
  else
  {
    if ((_DWORD)a2 == 253)
    {
      sub_23FC09258();
      return;
    }
    sub_23FBFF104();
    v4 = sub_23FCF27DC();
  }
  sub_23FC06098(v4, a2, v5);
}

uint64_t sub_23FCE8DC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FCE8DD0(uint64_t a1, char a2, int a3, uint64_t a4)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FC10290();
  sub_23FC06188();
  if (v8)
  {
    sub_23FC5F4A8();
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
      sub_23FC09258();
      return;
    }
    sub_23FBFF104();
    sub_23FCF27B8();
  }
  sub_23FCF25B4();
  sub_23FC0608C(v9, v10, v11, v12);
}

uint64_t sub_23FCE8E34()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD74798();
  if (v1 <= 0x3F)
  {
    result = sub_23FD71474();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23FCE8ED8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE8EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCE8EF8(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BEB9A18], (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23FCE8EF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  char v9;
  uint64_t v10;
  uint64_t v11;

  a4(0);
  sub_23FC06178();
  if (v9)
  {
    v11 = sub_23FC8A790();
  }
  else
  {
    v10 = a5(0);
    v11 = a1 + *(int *)(a3 + 20);
  }
  return sub_23FC06098(v11, a2, v10);
}

uint64_t sub_23FCE8F50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE8F5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCE8F70(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18], (void (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23FCE8F70(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(a5(0) - 8) + 84) == a3)
    sub_23FC5F4A8();
  else
    a6(0);
  sub_23FCF25B4();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v7, v8, v9, v10);
}

void sub_23FCE8FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FCE8FF8(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BEB9A18], (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

void sub_23FCE8FF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  a4(319);
  if (v6 <= 0x3F)
  {
    sub_23FCF2980();
    a5(319);
    if (v7 <= 0x3F)
    {
      sub_23FCF2980();
      swift_initStructMetadata();
    }
  }
  sub_23FCF28C8();
}

void sub_23FCE9070()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FCF275C();
  if ((*(_DWORD *)(*(_QWORD *)(v2 - 8) + 80) & 0x20000) != 0)
  {
    *v0 = *v1;
    swift_retain();
  }
  else
  {
    v3 = sub_23FC10290();
    sub_23FCF242C((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
    v4 = sub_23FBFF104();
    sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  }
  sub_23FC09258();
}

uint64_t sub_23FCE90F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v2 = sub_23FC10290();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  sub_23FBFF104();
  v3 = sub_23FCF298C();
  return v4(v3);
}

void sub_23FCE9140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_23FC10290();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  v6 = a1 + *(int *)(a3 + 20);
  v7 = sub_23FBFF104();
  sub_23FCF242C(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  sub_23FC09258();
}

void sub_23FCE91A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_23FC10290();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  v6 = a1 + *(int *)(a3 + 20);
  v7 = sub_23FBFF104();
  sub_23FCF242C(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24));
  sub_23FC09258();
}

void sub_23FCE9200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_23FC10290();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32));
  v6 = a1 + *(int *)(a3 + 20);
  v7 = sub_23FBFF104();
  sub_23FCF242C(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  sub_23FC09258();
}

void sub_23FCE9260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_23FC10290();
  sub_23FCF240C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  v6 = a1 + *(int *)(a3 + 20);
  v7 = sub_23FBFF104();
  sub_23FCF242C(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  sub_23FC09258();
}

uint64_t sub_23FCE92C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE92CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCE8EF8(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BEB9A18], (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23FCE92E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE92EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCE8F70(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18], (void (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t *sub_23FCE9300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FBFD684(qword_256F60150);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_23FD74798();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FD71474();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_23FCE9400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23FBFD684(qword_256F60150);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4))
  {
    v5 = sub_23FD74798();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *sub_23FCE947C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_23FD74798();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_23FCE9550(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_23FBFD684(qword_256F60150);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v16 = sub_23FD74798();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(a1, a2, v16);
      goto LABEL_7;
    }
    sub_23FBFEF74((uint64_t)a1, qword_256F60150);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v9 = sub_23FD74798();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

char *sub_23FCE967C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_23FD74798();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_23FCE9750(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_23FBFD684(qword_256F60150);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v16 = sub_23FD74798();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(a1, a2, v16);
      goto LABEL_7;
    }
    sub_23FBFEF74((uint64_t)a1, qword_256F60150);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v9 = sub_23FD74798();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FCE987C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE9888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCE8EF8(a1, a2, a3, (void (*)(_QWORD))_s25ParameterNeedsValueResultV16NeedsValueResultOMa, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23FCE989C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE98A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCE8F70(a1, a2, a3, a4, _s25ParameterNeedsValueResultV16NeedsValueResultOMa, (void (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

void sub_23FCE98BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FCE8FF8(a1, a2, a3, (void (*)(uint64_t))_s25ParameterNeedsValueResultV16NeedsValueResultOMa, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t *sub_23FCE98D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23FBFD684(qword_256F60150);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_23FD74798();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_23FCE9994(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_23FBFD684(qword_256F60150);
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23FD74798();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_23FCE99F4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23FCE9A94(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_23FBFD684(qword_256F60150);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_23FBFEF74((uint64_t)a1, qword_256F60150);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_23FD74798();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_23FCE9B8C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23FD74798();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23FCE9C2C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_23FBFD684(qword_256F60150);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = sub_23FD74798();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_23FBFEF74((uint64_t)a1, qword_256F60150);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_23FD74798();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_23FCE9D24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCE9D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(qword_256F60150);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
  sub_23FBFF0A0();
}

uint64_t sub_23FCE9D74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCE9D80(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v4 = (a2 + 1);
  else
    v4 = 0;
  sub_23FBFD684(qword_256F60150);
  v5 = sub_23FC5F4A8();
  return sub_23FC0608C(v5, v4, a3, v6);
}

uint64_t sub_23FCE9DC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(qword_256F60150);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
}

uint64_t sub_23FCE9DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(qword_256F60150);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v4);
}

uint64_t sub_23FCE9E30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74798();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_23FCE9E84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FCE9EDC + 4 * byte_23FD7A2E6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_23FCEA1D8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t found;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23FBFD684(qword_256F60150);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v3))
      {
        v4 = sub_23FD74798();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      }
      found = _s25ParameterNeedsValueResultVMa(0);
      goto LABEL_7;
    case 1:
      v6 = sub_23FD74798();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      found = _s25ParameterNotAllowedResultVMa(0);
      goto LABEL_7;
    case 2:
      v7 = sub_23FD74798();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      found = _s33ParameterCandidatesNotFoundResultVMa(0);
LABEL_7:
      v8 = *(int *)(found + 20);
      goto LABEL_12;
    case 3:
      v9 = sub_23FD74798();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      v8 = *(int *)(_s27ParameterConfirmationResultVMa(0) + 24);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      v10 = _s29ParameterDisambiguationResultVMa(0);
      v11 = a1 + *(int *)(v10 + 20);
      _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = sub_23FD74798();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      }
      v8 = *(int *)(v10 + 24);
LABEL_12:
      v13 = a1 + v8;
      v14 = sub_23FD71474();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23FCEA370()
{
  char *v0;

  v0 = (char *)sub_23FCEA3BC + 4 * byte_23FD7A2F0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

char *sub_23FCEA3BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v2 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v1, 1, v2))
  {
    v3 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else
  {
    v4 = sub_23FD74798();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v0, v1, v4);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v0, 0, 1, v2);
  }
  v5 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
  v6 = &v0[v5];
  v7 = &v1[v5];
  v8 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FCEA698(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23FBFEF18(result, _s19ParameterStepResultOMa);
    v2 = (char *)&loc_23FCEA6FC + 4 * byte_23FD7A2F5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23FCEA9D8()
{
  char *v0;

  v0 = (char *)sub_23FCEAA24 + 4 * byte_23FD7A2FA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

char *sub_23FCEAA24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v2 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v1, 1, v2))
  {
    v3 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else
  {
    v4 = sub_23FD74798();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v0, v1, v4);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v0, 0, 1, v2);
  }
  v5 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
  v6 = &v0[v5];
  v7 = &v1[v5];
  v8 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FCEACF8(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23FBFEF18(result, _s19ParameterStepResultOMa);
    v2 = (char *)&loc_23FCEAD5C + 4 * byte_23FD7A2FF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23FCEB030()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = _s25ParameterNeedsValueResultVMa(319);
  if (v1 <= 0x3F)
  {
    result = _s25ParameterNotAllowedResultVMa(319);
    if (v2 <= 0x3F)
    {
      result = _s33ParameterCandidatesNotFoundResultVMa(319);
      if (v3 <= 0x3F)
      {
        result = _s27ParameterConfirmationResultVMa(319);
        if (v4 <= 0x3F)
        {
          result = _s29ParameterDisambiguationResultVMa(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_23FCEB104(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23FD7157C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FD731FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    _s19ParameterStepResultOMa(0);
    v13 = (char *)&loc_23FCEB1DC + 4 * byte_23FD7A304[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v14 = *a2;
  *a1 = *a2;
  v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v15;
}

uint64_t sub_23FCEB4DC(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t found;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_23FD7157C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  v7 = sub_23FD731FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  _s19ParameterStepResultOMa(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v10 = sub_23FBFD684(qword_256F60150);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, 1, v10))
      {
        v11 = sub_23FD74798();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
      }
      found = _s25ParameterNeedsValueResultVMa(0);
      goto LABEL_7;
    case 1:
      v13 = sub_23FD74798();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v8, v13);
      found = _s25ParameterNotAllowedResultVMa(0);
      goto LABEL_7;
    case 2:
      v14 = sub_23FD74798();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v8, v14);
      found = _s33ParameterCandidatesNotFoundResultVMa(0);
LABEL_7:
      v15 = *(int *)(found + 20);
      goto LABEL_12;
    case 3:
      v16 = sub_23FD74798();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v8, v16);
      v15 = *(int *)(_s27ParameterConfirmationResultVMa(0) + 24);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      v17 = _s29ParameterDisambiguationResultVMa(0);
      v18 = v8 + *(int *)(v17 + 20);
      _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23FD74798();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v15 = *(int *)(v17 + 24);
LABEL_12:
      v20 = v8 + v15;
      v21 = sub_23FD71474();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23FCEB6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD731FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  _s19ParameterStepResultOMa(0);
  v12 = (char *)sub_23FCEB7B0 + 4 * byte_23FD7A30E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FCEB7B0()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v3 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v2, 1, v3))
  {
    v4 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_23FD74798();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v2, v5);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v1, 0, 1, v3);
  }
  v6 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
  v7 = &v1[v6];
  v8 = &v2[v6];
  v9 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FCEBA90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD731FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  if (a1 != a2)
  {
    sub_23FBFEF18(a1 + a3[7], _s19ParameterStepResultOMa);
    _s19ParameterStepResultOMa(0);
    v12 = (char *)&loc_23FCEBB74 + 4 * byte_23FD7A313[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

void sub_23FCEBE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD731FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  _s19ParameterStepResultOMa(0);
  v12 = (char *)sub_23FCEBF1C + 4 * byte_23FD7A318[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FCEBF1C()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v3 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v2, 1, v3))
  {
    v4 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_23FD74798();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v1, v2, v5);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v1, 0, 1, v3);
  }
  v6 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
  v7 = &v1[v6];
  v8 = &v2[v6];
  v9 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FCEC1F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD731FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  if (a1 != a2)
  {
    sub_23FBFEF18(a1 + a3[7], _s19ParameterStepResultOMa);
    _s19ParameterStepResultOMa(0);
    v12 = (char *)&loc_23FCEC2D0 + 4 * byte_23FD7A31D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

uint64_t sub_23FCEC5A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCEC5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  sub_23FCF2458();
  sub_23FC06178();
  if (v8)
  {
    v6 = sub_23FC8A790();
  }
  else
  {
    sub_23FCF29A8();
    sub_23FC06178();
    if (v8)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 24);
    }
    else
    {
      v7 = _s19ParameterStepResultOMa(0);
      v10 = *(int *)(a3 + 28);
    }
    v6 = v4 + v10;
  }
  return sub_23FC06098(v6, v3, v7);
}

uint64_t sub_23FCEC610()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCEC61C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FCF2458();
  sub_23FC06188();
  if (v0)
  {
    sub_23FC5F4A8();
  }
  else
  {
    sub_23FCF29A8();
    sub_23FC06188();
    if (!v0)
      _s19ParameterStepResultOMa(0);
  }
  sub_23FCF25B4();
  return sub_23FC0608C(v1, v2, v3, v4);
}

uint64_t sub_23FCEC680()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23FD7157C();
  if (v1 <= 0x3F)
  {
    result = sub_23FD731FC();
    if (v2 <= 0x3F)
    {
      result = _s19ParameterStepResultOMa(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_23FCEC720(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23FD71474();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_23FCEC7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23FCEC810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FD71474();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_23FCEC888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FCEC90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_23FCEC970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_23FCEC9EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCEC9FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCECA0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23FCECA8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD7157C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v12 = *(uint64_t *)((char *)a2 + v8);
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = v12;
    *((_QWORD *)v9 + 1) = v11;
    v9[16] = v10[16];
    v13 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_23FD71474();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_23FCECB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v7 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_23FCECBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v11 = *(_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = v11;
  *(_QWORD *)(v8 + 8) = v10;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v12 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_23FD71474();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_23FCECC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v10;
  v11 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FCECD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FCECDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_23FCECE9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCECEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_23FCF2458();
  sub_23FC06178();
  if (!v3)
  {
    _s14ToolStepResultOMa(0);
    v2 = sub_23FCF2788();
  }
  return sub_23FC06098(v1, v0, v2);
}

uint64_t _s14ToolStepResultOMa(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F62478);
}

uint64_t sub_23FCECEFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FCECF08()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FCF2458();
  sub_23FC06188();
  if (!v0)
  {
    _s14ToolStepResultOMa(0);
    sub_23FCF2788();
  }
  sub_23FC5F4A8();
  sub_23FCF25B4();
  return sub_23FC0608C(v1, v2, v3, v4);
}

void sub_23FCECF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FCE8FF8(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE52140], (void (*)(uint64_t))_s24ToolDisambiguationResultVMa);
}

uint64_t sub_23FCECF5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
    v8 = v6 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_23FD71474();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v6;
}

uint64_t sub_23FCED010(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v3 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_23FCED05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FD71474();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_23FCED0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_23FCED168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_23FCED1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(_s24ToolDisambiguationResultVMa(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23FCED258()
{
  _s24ToolDisambiguationResultVMa(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FCED298(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23FCF2808();
    sub_23FC09258();
  }
  else
  {
    sub_23FBFF104();
    v3 = sub_23FCF27DC();
    sub_23FC06098(v3, a2, v4);
  }
}

uint64_t sub_23FCED2E0()
{
  _s24ToolDisambiguationResultVMa(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FCED330()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FCF2920();
  if (v2)
  {
    *v1 = (v0 - 1);
    sub_23FC09258();
  }
  else
  {
    sub_23FBFF104();
    sub_23FCF27B8();
    sub_23FCF25B4();
    sub_23FC0608C(v3, v4, v5, v6);
  }
}

uint64_t sub_23FCED370(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = _s24ToolDisambiguationResultVMa(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void sub_23FCED3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23FC061F0();
  v30 = v1;
  v31 = v2;
  _s19ValueStepEvaluationVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = sub_23FC060A4(v5, v28);
  _s20ActionStepEvaluationVMa(v6);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = sub_23FCF25C8(v9, v29);
  _s23ParameterStepEvaluationVMa(v10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC10118();
  _s18ToolStepEvaluationVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC061C0();
  _s23StatementStepEvaluationOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC8D7D0();
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFD684(&qword_256F62578);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FCF2498();
  v26 = v0 + v25;
  sub_23FCF1848(v30, v0, _s23StatementStepEvaluationOMa);
  sub_23FCF1848(v31, v26, _s23StatementStepEvaluationOMa);
  v27 = (char *)sub_23FCED53C + 4 * byte_23FD7A322[sub_23FCF24BC()];
  __asm { BR              X10 }
}

#error "23FCED7D8: call analysis failed (funcsize=48)"

void sub_23FCED848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  char *v17;

  _s19ValueStepEvaluationVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_23FC8D7B4();
  _s20ActionStepEvaluationVMa(v4);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = sub_23FC93184();
  _s23ParameterStepEvaluationVMa(v7);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_23FC06128();
  _s18ToolStepEvaluationVMa(v10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = sub_23FC12F10();
  _s23StatementStepEvaluationOMa(v13);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC10388();
  sub_23FCF1848(v0, v1, v16);
  v17 = (char *)sub_23FCED920 + 4 * byte_23FD7A326[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FCED920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCF2504(v1, v0);
  sub_23FCF26A8();
  sub_23FCF24E8();
  sub_23FCF2860();
  sub_23FCF25E8(v2);
  sub_23FCEDD00();
  sub_23FCF24B4();
  sub_23FC595E0();
  sub_23FCF23C8();
  sub_23FBFEF18(v0, _s18ToolStepEvaluationVMa);
  sub_23FC6264C();
}

void sub_23FCEDA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((sub_23FCF26F8() & 1) != 0)
  {
    v2 = _s20ActionStepEvaluationVMa(0);
    if (*(unsigned __int8 *)(v1 + *(int *)(v2 + 20)) == *(unsigned __int8 *)(v0 + *(int *)(v2 + 20)))
    {
      _s24ActionConfirmationResultVMa(0);
      sub_23FCF28D4();
    }
  }
  sub_23FBFF0A0();
}

void sub_23FCEDAF8()
{
  sub_23FCF2418();
  sub_23FD750E0();
  sub_23FCF2728();
  sub_23FCF27F8();
  sub_23FC9C890();
  sub_23FC06250();
  sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
  sub_23FCF2830();
  sub_23FC9C748();
  sub_23FC595E0();
  sub_23FCF23D4();
  _s20ActionStepEvaluationVMa(0);
  sub_23FCEDBEC();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF24CC();
}

void sub_23FCEDB9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  if (*a1 == *a2)
  {
    v2 = _s24ActionConfirmationResultVMa(0);
    sub_23FCF250C(*(int *)(v2 + 20));
    sub_23FCF24FC();
  }
  else
  {
    sub_23FBFF0A0();
  }
}

void sub_23FCEDBEC()
{
  sub_23FCF27A0();
  sub_23FD750E0();
  sub_23FCF2728();
  sub_23FC9C748();
  sub_23FCF28B4();
  sub_23FC595E0();
  sub_23FCF23F4();
  _s24ActionConfirmationResultVMa(0);
  sub_23FBFF104();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FCF248C();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF24CC();
}

void sub_23FCEDD00()
{
  sub_23FCF2418();
  sub_23FD750E0();
  sub_23FCF2728();
  sub_23FCF27F8();
  sub_23FC9C890();
  sub_23FC06250();
  sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
  sub_23FCF2830();
  sub_23FC9C748();
  sub_23FC595E0();
  sub_23FCF23D4();
  _s18ToolStepEvaluationVMa(0);
  sub_23FCEE498();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF24CC();
}

uint64_t sub_23FCEDDA4(uint64_t a1, uint64_t a2)
{
  return sub_23FCEE9A8(a1, a2, MEMORY[0x24BE52120], (uint64_t)_s18ToolStepEvaluationVMa, (uint64_t (*)(uint64_t))sub_23FCEE360) & 1;
}

void sub_23FCEDDD4()
{
  uint64_t v0;

  if ((sub_23FCF26F8() & 1) != 0
    && (_s23ParameterStepEvaluationVMa(0), (sub_23FCF26E4() & 1) != 0)
    && (sub_23FCF250C(*(int *)(v0 + 24)), (sub_23FD731D8() & 1) != 0))
  {
    sub_23FCF250C(*(int *)(v0 + 28));
    sub_23FCEEFF4();
  }
  else
  {
    sub_23FC09258();
  }
}

void sub_23FCEDE34()
{
  sub_23FCF2418();
  sub_23FD750E0();
  sub_23FCF2948();
  sub_23FC9C748();
  _s23ParameterStepEvaluationVMa(0);
  sub_23FC06250();
  sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
  sub_23FCF2590();
  sub_23FC9C748();
  swift_bridgeObjectRelease();
  sub_23FCF23F4();
  sub_23FCF2590();
  sub_23FC9C748();
  sub_23FC58D60();
  sub_23FD74C48();
  sub_23FCF29A8();
  sub_23FD751DC();
  sub_23FCF23D4();
  sub_23FCEF52C();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF2468();
}

void sub_23FCEDF64()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_23FCF26F8() & 1) != 0)
  {
    _s19ValueStepEvaluationVMa(0);
    if ((sub_23FCF26E4() & 1) != 0)
    {
      v1 = sub_23FCF250C(*(int *)(v0 + 24));
      sub_23FCEEE4C(v1);
    }
  }
  sub_23FC09258();
}

uint64_t sub_23FCEDFBC()
{
  uint64_t v1;

  sub_23FCF2418();
  sub_23FD750E0();
  sub_23FCF2728();
  sub_23FC9C748();
  _s19ValueStepEvaluationVMa(0);
  sub_23FC06250();
  sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
  sub_23FCF2590();
  sub_23FC9C748();
  swift_bridgeObjectRelease();
  sub_23FCF23F4();
  sub_23FCF2590();
  sub_23FC9C748();
  sub_23FC58D60();
  sub_23FCF23D4();
  sub_23FCEEF00();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  return v1;
}

uint64_t sub_23FCEE0DC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _BOOL4 v5;
  unsigned int v6;
  int v7;

  v5 = (a4 & 1) == 0 && a1 == a3;
  v6 = a4 & 1;
  if (a3)
    v7 = a4 & 1;
  else
    v7 = 0;
  if (a3)
    v6 = 0;
  if (a1)
    v6 = v7;
  if ((a2 & 1) != 0)
    return v6;
  else
    return v5;
}

void sub_23FCEE110()
{
  uint64_t v0;

  sub_23FCEE11C(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_23FCEE11C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    sub_23FD750E0();
    swift_bridgeObjectRelease();
    sub_23FCF2550();
    sub_23FD75344();
    sub_23FD74C48();
    sub_23FC15A24();
    sub_23FCF23C8();
  }
  sub_23FCF295C();
}

void sub_23FCEE1D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23FCF2878(a1);
  sub_23FC971D0();
  if ((v3 & 1) == 0)
  {
LABEL_7:
    sub_23FBFF0A0();
    return;
  }
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_BYTE *)(v1 + 16);
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    if (v4)
    {
      if (!v5)
        v6 = 0;
      if ((v6 & 1) == 0)
        goto LABEL_7;
    }
    else
    {
      if (v5)
        v6 = 0;
      if ((v6 & 1) == 0)
        goto LABEL_7;
    }
  }
  else
  {
    if (v4 != v5)
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_7;
  }
  v7 = _s24ToolDisambiguationResultVMa(0);
  sub_23FCF250C(*(int *)(v7 + 24));
  sub_23FCF24FC();
}

uint64_t sub_23FCEE254(uint64_t a1, uint64_t a2)
{
  return sub_23FCEE0DC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

void sub_23FCEE274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCF2418();
  sub_23FD750E0();
  sub_23FCF2948();
  sub_23FC9C748();
  v1 = sub_23FD74474();
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x242678AA4](v2, v1);
  sub_23FC9C748();
  sub_23FC595E0();
  sub_23FC58D60();
  sub_23FCF23D4();
  sub_23FCEE11C(*(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  sub_23FC9C748();
  sub_23FC595E0();
  sub_23FCF23F4();
  _s24ToolDisambiguationResultVMa(0);
  sub_23FBFF104();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FCF248C();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF24CC();
}

void sub_23FCEE360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  sub_23FC061F0();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  _s24ToolDisambiguationResultVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FC100D4();
  v31 = v29 - v30;
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&a9 - v34;
  sub_23FBFD684(&qword_256F62580);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FC8FD1C();
  v39 = v20 + *(int *)(v38 + 48);
  sub_23FCF1848(v26, v20, _s14ToolStepResultOMa);
  sub_23FCF1848(v24, v39, _s14ToolStepResultOMa);
  sub_23FCF28AC(v20, (uint64_t)v35);
  sub_23FCF28AC(v39, v31);
  sub_23FC971D0();
  if ((v40 & 1) != 0
    && (sub_23FCEE0DC(*((_QWORD *)v35 + 1), v35[16], *(_QWORD *)(v31 + 8), *(_BYTE *)(v31 + 16)) & 1) != 0)
  {
    sub_23FCF28D4();
  }
  sub_23FCF27C8(v31);
  sub_23FCF27C8((uint64_t)v35);
  sub_23FC060D4();
}

unint64_t sub_23FCEE498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);

  _s24ToolDisambiguationResultVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = sub_23FC93184();
  _s14ToolStepResultOMa(v5);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC12F34();
  sub_23FCF2720(v0, v8, v9);
  sub_23FCF2504(v2, v1);
  sub_23FD750E0();
  swift_bridgeObjectRelease();
  sub_23FCEE274();
  sub_23FD74C48();
  sub_23FC58D60();
  sub_23FCF23C8();
  sub_23FBFEF18(v1, _s24ToolDisambiguationResultVMa);
  return 0xD00000000000001ELL;
}

void sub_23FCEE584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);

  sub_23FC061F0();
  v4 = v3;
  v6 = v5;
  v7 = sub_23FC10290();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_23FCF2534();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F62590);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC93074();
  v15 = v0 + *(int *)(v14 + 48);
  sub_23FCF1848(v6, v0, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
  sub_23FCF1848(v4, v15, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
  sub_23FBFD684(qword_256F60150);
  sub_23FCCCAA8(v0);
  if (!v17)
  {
    sub_23FCF2720(v0, v16, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
    sub_23FCCCAA8(v15);
    if (!v17)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v1, v15, v7);
      sub_23FCF26BC();
      v18 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v18(v1, v7);
      v18(v2, v7);
      sub_23FBFEF18(v0, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
LABEL_9:
    sub_23FBFEF74(v0, &qword_256F62590);
    goto LABEL_10;
  }
  sub_23FCCCAA8(v15);
  if (!v17)
    goto LABEL_9;
  sub_23FBFEF18(v0, _s25ParameterNeedsValueResultV16NeedsValueResultOMa);
LABEL_10:
  sub_23FC060D4();
}

void sub_23FCEE708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62488, _s14ToolStepResultOMa, (uint64_t)&unk_23FD7A60C);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62490, _s14ToolStepResultOMa, (uint64_t)&unk_23FD7A5E4);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCEE764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62498, _s18ToolStepEvaluationVMa, (uint64_t)&unk_23FD7A678);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F624A0, _s18ToolStepEvaluationVMa, (uint64_t)&unk_23FD7A650);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCEE7C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F624A8, _s24ToolDisambiguationResultVMa, (uint64_t)&unk_23FD7A6E4);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F624B0, _s24ToolDisambiguationResultVMa, (uint64_t)&unk_23FD7A6BC);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCEE81C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F624B8, _s23ParameterStepEvaluationVMa, (uint64_t)&unk_23FD7A750);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F624C0, _s23ParameterStepEvaluationVMa, (uint64_t)&unk_23FD7A728);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCEE87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;

  sub_23FBFD684(&qword_256F5DDB8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC10290();
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FCF2534();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  sub_23FCF2754(v0, v9, v10);
  v11 = sub_23FBFD684(qword_256F60150);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v11) == 1)
  {
    sub_23FCF26C8();
  }
  else
  {
    sub_23FCF2734(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_23FC0E2FC();
    sub_23FD74C0C();
    sub_23FCF24B4();
    sub_23FC58D60();
    sub_23FCF23C8();
    sub_23FCF2854(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_23FC6264C();
}

uint64_t sub_23FCEE9A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  if ((a3() & 1) == 0)
    return 0;
  v5 = sub_23FCF29A0();
  v6 = sub_23FCF250C(*(int *)(v5 + 20));
  return a5(v6);
}

void sub_23FCEEA18()
{
  sub_23FCF2418();
  sub_23FD750E0();
  sub_23FCF2728();
  sub_23FCF27F8();
  sub_23FC9C890();
  _s25ParameterNeedsValueResultVMa(0);
  sub_23FBFF104();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FCF248C();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF28C8();
}

uint64_t sub_23FCEEAA4(uint64_t a1, uint64_t a2)
{
  return sub_23FCEE9A8(a1, a2, (uint64_t (*)(void))sub_23FCEE584, (uint64_t)_s25ParameterNeedsValueResultVMa, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE9E0]) & 1;
}

void sub_23FCEEAD4()
{
  sub_23FCEEB74(61, 0xD000000000000020, 0x800000023FD85AF0, (void (*)(_QWORD))_s25ParameterNotAllowedResultVMa);
}

uint64_t sub_23FCEEB0C(uint64_t a1, uint64_t a2)
{
  return sub_23FCEE9A8(a1, a2, MEMORY[0x24BEB99D0], (uint64_t)_s25ParameterNotAllowedResultVMa, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE9E0]) & 1;
}

void sub_23FCEEB3C()
{
  sub_23FCEEB74(69, 0xD000000000000028, 0x800000023FD85B20, (void (*)(_QWORD))_s33ParameterCandidatesNotFoundResultVMa);
}

void sub_23FCEEB74(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  sub_23FD750E0();
  sub_23FCF28B4();
  sub_23FC10290();
  sub_23FD751DC();
  sub_23FCF23F4();
  a4(0);
  sub_23FBFF104();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FCF248C();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF2468();
}

void sub_23FCEEC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_23FD7478C() & 1) != 0
    && (v4 = _s27ParameterConfirmationResultVMa(0),
        *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))))
  {
    sub_23FCF250C(*(int *)(v4 + 24));
    sub_23FCF24FC();
  }
  else
  {
    sub_23FBFF0A0();
  }
}

uint64_t sub_23FCEEC9C(uint64_t a1, uint64_t a2)
{
  return sub_23FCEE9A8(a1, a2, MEMORY[0x24BEB99D0], (uint64_t)_s33ParameterCandidatesNotFoundResultVMa, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE9E0]) & 1;
}

void sub_23FCEECD0()
{
  sub_23FCF27A0();
  sub_23FD750E0();
  sub_23FCF2728();
  sub_23FC9C748();
  sub_23FC10290();
  sub_23FD751DC();
  sub_23FCF23D4();
  _s27ParameterConfirmationResultVMa(0);
  sub_23FCF28B4();
  sub_23FC595E0();
  sub_23FCF23F4();
  sub_23FBFF104();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FCF248C();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF2468();
}

void sub_23FCEEE14()
{
  sub_23FCEEF00();
}

void sub_23FCEEE4C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;

  sub_23FCF2878(a1);
  sub_23FC97034();
  if ((v1 & 1) != 0 && (v2 = sub_23FCF29A0(), sub_23FCF250C(*(int *)(v2 + 20)), sub_23FCF03F4(), (v3 & 1) != 0))
  {
    sub_23FCF250C(*(int *)(v2 + 24));
    sub_23FD71450();
  }
  else
  {
    sub_23FC09258();
  }
}

uint64_t sub_23FCEEEA8(uint64_t a1)
{
  char v1;

  sub_23FCEEE4C(a1);
  return v1 & 1;
}

void sub_23FCEEEC8()
{
  sub_23FCEEF00();
}

void sub_23FCEEF00()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FCF2418();
  sub_23FD750E0();
  sub_23FD74C48();
  v0 = sub_23FC10290();
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x242678AA4](v1, v0);
  sub_23FC9C748();
  sub_23FC58D60();
  swift_bridgeObjectRelease();
  sub_23FCF23D4();
  sub_23FCF29A0();
  sub_23FCF14A4();
  sub_23FC9C748();
  sub_23FC58D60();
  sub_23FCF23F4();
  sub_23FBFF104();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FCF248C();
  sub_23FC9C748();
  sub_23FC15A24();
  sub_23FCF23C8();
  sub_23FCF2468();
}

void sub_23FCEEFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23FC061F0();
  v36 = v1;
  v37 = v2;
  _s29ParameterDisambiguationResultVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = sub_23FCF25C8(v5, v33);
  _s27ParameterConfirmationResultVMa(v6);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FCF2650(v9, v34);
  _s33ParameterCandidatesNotFoundResultVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = sub_23FC060A4(v12, v35);
  _s25ParameterNotAllowedResultVMa(v13);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFE0();
  _s25ParameterNeedsValueResultVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC93074();
  _s19ParameterStepResultOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FC8D7D0();
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFD684(&qword_256F62588);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FCF2498();
  v31 = v0 + v30;
  sub_23FCF1848(v36, v0, _s19ParameterStepResultOMa);
  sub_23FCF1848(v37, v31, _s19ParameterStepResultOMa);
  v32 = (char *)sub_23FCEF1B0 + 4 * byte_23FD7A32A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FCEF1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_23FCF2974(a1, a2, _s19ParameterStepResultOMa);
  if (sub_23FCF24DC())
  {
    sub_23FBFEF18(v4, _s25ParameterNeedsValueResultVMa);
    sub_23FC7E2CC(v6, &qword_256F62588);
  }
  else
  {
    sub_23FCF1818(v3, v2, _s25ParameterNeedsValueResultVMa);
    sub_23FCEE584();
    if ((v7 & 1) != 0)
      sub_23FD71450();
    sub_23FCF28FC();
    sub_23FBFEF18(v4, _s25ParameterNeedsValueResultVMa);
    sub_23FCF25C0(v5, _s19ParameterStepResultOMa);
  }
  sub_23FC060D4();
}

uint64_t sub_23FCEF508(uint64_t a1)
{
  char v1;

  sub_23FCEEE4C(a1);
  return v1 & 1;
}

void sub_23FCEF52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  char *v19;

  _s29ParameterDisambiguationResultVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_23FC8D7B4();
  _s27ParameterConfirmationResultVMa(v2);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = sub_23FC93184();
  _s33ParameterCandidatesNotFoundResultVMa(v5);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = sub_23FC06128();
  _s25ParameterNotAllowedResultVMa(v8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_23FC12F10();
  _s25ParameterNeedsValueResultVMa(v11);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC10388();
  _s19ParameterStepResultOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC8FD1C();
  v16 = sub_23FCF27D0();
  sub_23FCF1848(v16, v17, v18);
  v19 = (char *)sub_23FCEF61C + 4 * byte_23FD7A32F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FCEF61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCF2504(v1, v0);
  sub_23FCF2680();
  sub_23FCF24E8();
  sub_23FCF288C();
  sub_23FCF25E8(v2);
  sub_23FCEEA18();
  sub_23FCF24B4();
  sub_23FC595E0();
  sub_23FCF23C8();
  sub_23FBFEF18(v0, _s25ParameterNeedsValueResultVMa);
  sub_23FCF27D0();
  sub_23FC6264C();
}

uint64_t sub_23FCEF834(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64657463656A6572 && a2 == 0xE800000000000000;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FD75380();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23FCEF998(char a1)
{
  if (!a1)
    return 0x656D7269666E6F63;
  if (a1 == 1)
    return 0x64657463656A6572;
  return 0x656E6F646E616261;
}

uint64_t sub_23FCEF9F0()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_23FCEFA0C()
{
  return 0;
}

void sub_23FCEFA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  sub_23FCC2A5C();
  v25 = v3;
  v5 = v4;
  v6 = sub_23FBFD684(&qword_256F626C8);
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FCF2650(v9, v18);
  v10 = sub_23FBFD684(&qword_256F626D0);
  v19 = *(_QWORD *)(v10 - 8);
  v20 = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC061C0();
  v13 = sub_23FBFD684(&qword_256F626D8);
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC10388();
  v24 = *(_QWORD *)(sub_23FBFD684(&qword_256F626E0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC0603C();
  sub_23FBFDE40(v5, v5[3]);
  sub_23FCF1F88();
  sub_23FD754C4();
  if (v25)
  {
    if (v25 == 1)
    {
      sub_23FCF2000();
      sub_23FCF2448();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v2, v20);
    }
    else
    {
      sub_23FCF29C4();
      sub_23FCF2448();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
  }
  else
  {
    sub_23FCF203C();
    sub_23FCF2448();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v13);
  }
  sub_23FCF2820(v24);
  sub_23FC06000();
}

uint64_t sub_23FCEFBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;

  sub_23FCC2A5C();
  v52 = v3;
  v53 = v4;
  v49 = (_QWORD *)v0;
  v6 = v5;
  v45 = sub_23FBFD684(&qword_256F62688);
  v48 = *(_QWORD *)(v45 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  v47 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FBFD684(&qword_256F62690);
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  v46 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23FBFD684(&qword_256F62698);
  v14 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v15);
  sub_23FC0603C();
  v16 = sub_23FBFD684(&qword_256F626A0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  sub_23FC12F34();
  sub_23FBFDE40(v6, v6[3]);
  sub_23FCF1F88();
  v19 = (uint64_t)v49;
  sub_23FD754B8();
  if (v19)
    goto LABEL_11;
  v38 = v14;
  v39 = v2;
  v21 = v47;
  v20 = v48;
  v40 = v1;
  v41 = v17;
  v49 = v6;
  v22 = sub_23FD752E4();
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23)
  {
LABEL_8:
    v30 = sub_23FD75134();
    sub_23FC5A704();
    v32 = v31;
    sub_23FBFD684(&qword_256F5D6C0);
    *v32 = &_s18ConfirmationResultON;
    v33 = v40;
    sub_23FD7529C();
    sub_23FCF27EC();
    sub_23FCF2778();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v33, v16);
    v6 = v49;
LABEL_11:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v6);
    return v16;
  }
  v24 = v16;
  v16 = *(unsigned __int8 *)(v22 + 32);
  sub_23FC05ED0(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();
  if (v26 != v28 >> 1)
  {
    v16 = v24;
    goto LABEL_8;
  }
  if ((_DWORD)v16)
  {
    if ((_DWORD)v16 == 1)
    {
      v51 = 1;
      sub_23FCF2000();
      v29 = v46;
      sub_23FCF270C();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
    }
    else
    {
      sub_23FCF29C4();
      sub_23FCF270C();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v45);
    }
  }
  else
  {
    v50 = 0;
    sub_23FCF203C();
    v34 = v39;
    sub_23FD75290();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v42);
  }
  swift_unknownObjectRelease();
  v36 = sub_23FCF27D0();
  v37(v36);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v49);
  return v16;
}

void sub_23FCEFF78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F624C8, _s19ParameterStepResultOMa, (uint64_t)&unk_23FD7A7BC);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F624D0, _s19ParameterStepResultOMa, (uint64_t)&unk_23FD7A794);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCEFFD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F624D8, _s25ParameterNeedsValueResultVMa, (uint64_t)&unk_23FD7A878);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F624E0, _s25ParameterNeedsValueResultVMa, (uint64_t)&unk_23FD7A850);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF0030(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F624E8, _s25ParameterNotAllowedResultVMa, (uint64_t)&unk_23FD7A8E4);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F624F0, _s25ParameterNotAllowedResultVMa, (uint64_t)&unk_23FD7A8BC);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF008C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F624F8, _s33ParameterCandidatesNotFoundResultVMa, (uint64_t)&unk_23FD7A950);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62500, _s33ParameterCandidatesNotFoundResultVMa, (uint64_t)&unk_23FD7A928);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF00E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62508, _s27ParameterConfirmationResultVMa, (uint64_t)&unk_23FD7A9BC);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62510, _s27ParameterConfirmationResultVMa, (uint64_t)&unk_23FD7A994);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF0144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62518, _s29ParameterDisambiguationResultVMa, (uint64_t)&unk_23FD7AA28);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62520, _s29ParameterDisambiguationResultVMa, (uint64_t)&unk_23FD7AA00);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t sub_23FCF01A4()
{
  sub_23FCF1FC4();
  return sub_23FD754DC();
}

uint64_t sub_23FCF01CC()
{
  sub_23FCF1FC4();
  return sub_23FD754E8();
}

void sub_23FCF01F4()
{
  sub_23FCF07C8();
}

uint64_t sub_23FCF020C()
{
  char *v0;

  return sub_23FCEF998(*v0);
}

uint64_t sub_23FCF0214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCEF834(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FCF0238()
{
  sub_23FCF1F88();
  return sub_23FD754DC();
}

uint64_t sub_23FCF0260()
{
  sub_23FCF1F88();
  return sub_23FD754E8();
}

uint64_t sub_23FCF0288()
{
  sub_23FCF203C();
  return sub_23FD754DC();
}

uint64_t sub_23FCF02B0()
{
  sub_23FCF203C();
  return sub_23FD754E8();
}

uint64_t sub_23FCF02D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FCEF9F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23FCF0300()
{
  sub_23FCF2000();
  return sub_23FD754DC();
}

uint64_t sub_23FCF0328()
{
  sub_23FCF2000();
  return sub_23FD754E8();
}

uint64_t sub_23FCF0350@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23FCEFBD0();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_23FCF0378()
{
  sub_23FCEFA18();
}

uint64_t sub_23FCF0390()
{
  char *v0;

  return sub_23FCF0398(*v0);
}

uint64_t sub_23FCF0398(char a1)
{
  if (!a1)
    return 0x6D7269666E6F632ELL;
  if (a1 == 1)
    return 0x657463656A65722ELL;
  return 0x6E6F646E6162612ELL;
}

void sub_23FCF03F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  v15 = sub_23FC10290();
  MEMORY[0x24BDAC7A8](v15, v5);
  sub_23FCF2518();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC100D4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFD684(&qword_256F62598);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FCF2498();
  v13 = v0 + v12;
  sub_23FCF1848(v4, v0, _s20DisambiguationResultOMa);
  sub_23FCF1848(v2, v13, _s20DisambiguationResultOMa);
  sub_23FCF2968();
  v14 = (char *)sub_23FCF04E4 + 4 * byte_23FD7A334[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FCF04E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FCF2974(a1, a2, _s20DisambiguationResultOMa);
  v2 = sub_23FCF25A8();
  if ((_DWORD)v2)
    sub_23FC7E2CC(v2, &qword_256F62598);
  else
    sub_23FCF25C0(v2, _s20DisambiguationResultOMa);
  sub_23FC060D4();
}

uint64_t sub_23FCF05D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C65536D657469 && a2 == 0xEC00000064657463;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C655365756C6176 && a2 == 0xED00006465746365;
      if (v7 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64657463656A6572 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_23FD75380();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

void sub_23FCF07C8()
{
  sub_23FC06220();
  sub_23FD75458();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FCF07F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FCF0830 + 4 * byte_23FD7A338[a1]))(0x656E6F646E616261, 0xE900000000000064);
}

uint64_t sub_23FCF0830()
{
  return 0x656C65536D657469;
}

uint64_t sub_23FCF0850()
{
  return 0x6C655365756C6176;
}

uint64_t sub_23FCF0874()
{
  return 0x64657463656A6572;
}

uint64_t sub_23FCF088C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23FCF0908()
{
  return 0x7865646E69;
}

uint64_t sub_23FCF091C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_23FCF0998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23FCC2A5C();
  v25 = sub_23FBFD684(&qword_256F625F0);
  v24[4] = *(_QWORD *)(v25 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FBFEFE0();
  v24[3] = v2;
  v3 = sub_23FBFD684(&qword_256F625F8);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFEFE0();
  v27 = v6;
  v28 = sub_23FD74798();
  v26 = *(_QWORD *)(v28 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FCF2634(v9, v24[0]);
  v10 = sub_23FBFD684(&qword_256F62600);
  v24[1] = *(_QWORD *)(v10 - 8);
  v24[2] = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC10118();
  v24[0] = sub_23FBFD684(&qword_256F62608);
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v13, v14);
  v15 = sub_23FC8D7B4();
  _s20DisambiguationResultOMa(v15);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FBFD684(&qword_256F62610);
  v31 = *(_QWORD *)(v20 - 8);
  v32 = v20;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC0603C();
  sub_23FCF28E0();
  sub_23FD754C4();
  sub_23FCF1848(v33, (uint64_t)v19, _s20DisambiguationResultOMa);
  v23 = (char *)sub_23FCF0B48 + 4 * byte_23FD7A33C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FCF0B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCF28BC();
  sub_23FCF2448();
  v2 = *(_QWORD *)(v1 - 192);
  sub_23FD75320();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 200) + 8))(v0, v2);
  sub_23FCF2820(*(_QWORD *)(v1 - 112));
  sub_23FC06000();
}

void sub_23FCF0D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52[5];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_23FCC2A5C();
  v69 = v0;
  v3 = v2;
  v67 = v4;
  v5 = sub_23FBFD684(&qword_256F625A0);
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v61 = v8;
  v9 = sub_23FBFD684(&qword_256F625A8);
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  v62 = v12;
  v13 = sub_23FBFD684(&qword_256F625B0);
  v56 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FCF2634(v16, v52[0]);
  v63 = sub_23FBFD684(&qword_256F625B8);
  v55 = *(_QWORD *)(v63 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFEFE0();
  v60 = v19;
  v20 = sub_23FBFD684(&qword_256F625C0);
  v66 = *(_QWORD *)(v20 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  v23 = sub_23FC06128();
  v24 = _s20DisambiguationResultOMa(v23);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FC100D4();
  v29 = v27 - v28;
  v32 = MEMORY[0x24BDAC7A8](v30, v31);
  v34 = (char *)v52 - v33;
  MEMORY[0x24BDAC7A8](v32, v35);
  v37 = (char *)v52 - v36;
  v68 = v3;
  sub_23FCF28E0();
  v38 = v69;
  sub_23FD754B8();
  if (!v38)
  {
    v52[2] = (uint64_t)v34;
    v52[3] = v29;
    v52[4] = (uint64_t)v37;
    v69 = v24;
    v54 = v1;
    v39 = sub_23FD752E4();
    v40 = *(_QWORD *)(v39 + 16);
    v41 = v20;
    if (v40)
    {
      v53 = v20;
      v52[1] = 0;
      v42 = *(unsigned __int8 *)(v39 + 32);
      sub_23FC05ED0(1, v40, v39, v39 + 32, 0, (2 * v40) | 1);
      v44 = v43;
      v46 = v45;
      swift_bridgeObjectRelease();
      if (v44 == v46 >> 1)
        __asm { BR              X9 }
      v41 = v53;
    }
    v47 = sub_23FD75134();
    sub_23FC5A704();
    v49 = v48;
    sub_23FBFD684(&qword_256F5D6C0);
    *v49 = v69;
    sub_23FD7529C();
    sub_23FCF27EC();
    sub_23FCF2778();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v49, *MEMORY[0x24BEE26D0], v47);
    swift_willThrow();
    sub_23FCF24C4();
    v50 = sub_23FCF2768();
    v51(v50, v41);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v68);
  sub_23FC06000();
}

void sub_23FCF103C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_23FCF28BC();
  sub_23FCF2574();
  if (!v0)
  {
    v2 = sub_23FD752CC();
    sub_23FCF266C();
    sub_23FCF24C4();
    sub_23FCF286C(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8));
    v3 = *(uint64_t **)(v1 - 256);
    *v3 = v2;
    sub_23FCF2968();
    swift_storeEnumTagMultiPayload();
    sub_23FCF1818((uint64_t)v3, *(_QWORD *)(v1 - 240), _s20DisambiguationResultOMa);
    JUMPOUT(0x23FCF1250);
  }
  sub_23FCF24C4();
  JUMPOUT(0x23FCF1020);
}

uint64_t sub_23FCF1268()
{
  sub_23FCF1968();
  return sub_23FD754DC();
}

uint64_t sub_23FCF1290()
{
  sub_23FCF1968();
  return sub_23FD754E8();
}

uint64_t sub_23FCF12B8()
{
  unsigned __int8 *v0;

  return sub_23FCF07F8(*v0);
}

uint64_t sub_23FCF12C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCF05D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FCF12E4()
{
  sub_23FCF1878();
  return sub_23FD754DC();
}

uint64_t sub_23FCF130C()
{
  sub_23FCF1878();
  return sub_23FD754E8();
}

uint64_t sub_23FCF1338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCF088C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FCF1360()
{
  sub_23FCF192C();
  return sub_23FD754DC();
}

uint64_t sub_23FCF1388()
{
  sub_23FCF192C();
  return sub_23FD754E8();
}

uint64_t sub_23FCF13B0()
{
  sub_23FCF18B4();
  return sub_23FD754DC();
}

uint64_t sub_23FCF13D8()
{
  sub_23FCF18B4();
  return sub_23FD754E8();
}

uint64_t sub_23FCF1400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FCF091C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FCF1428()
{
  sub_23FCF18F0();
  return sub_23FD754DC();
}

uint64_t sub_23FCF1450()
{
  sub_23FCF18F0();
  return sub_23FD754E8();
}

void sub_23FCF1478()
{
  sub_23FCF0D04();
}

void sub_23FCF148C()
{
  sub_23FCF0998();
}

void sub_23FCF14A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);

  v1 = sub_23FC10290();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FCF2518();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC0603C();
  sub_23FCF2754(v0, v5, v6);
  swift_getEnumCaseMultiPayload();
  sub_23FCF26C8();
  __asm { BR              X10 }
}

uint64_t sub_23FCF1534()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v0;
  *(_QWORD *)(v1 - 64) = 0;
  *(_QWORD *)(v1 - 56) = 0xE000000000000000;
  sub_23FD750E0();
  swift_bridgeObjectRelease();
  sub_23FCF2550();
  *(_QWORD *)(v1 - 64) = v3;
  *(_QWORD *)(v1 - 56) = v4;
  *(_QWORD *)(v1 - 72) = v2;
  sub_23FD75344();
  sub_23FD74C48();
  sub_23FC15A24();
  sub_23FCF23C8();
  return *(_QWORD *)(v1 - 64);
}

void sub_23FCF164C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62528, _s20ActionStepEvaluationVMa, (uint64_t)&unk_23FD7AB34);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62530, _s20ActionStepEvaluationVMa, (uint64_t)&unk_23FD7AB0C);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF16A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62538, _s24ActionConfirmationResultVMa, (uint64_t)&unk_23FD7ABA0);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62540, _s24ActionConfirmationResultVMa, (uint64_t)&unk_23FD7AB78);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF1704(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62548, _s19ValueStepEvaluationVMa, (uint64_t)&unk_23FD7AC0C);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62550, _s19ValueStepEvaluationVMa, (uint64_t)&unk_23FD7ABE4);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF1760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62558, _s25ValueDisambiguationResultVMa, (uint64_t)&unk_23FD7AC78);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62560, _s25ValueDisambiguationResultVMa, (uint64_t)&unk_23FD7AC50);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF17BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFEE2C(&qword_256F62568, _s23StatementStepEvaluationOMa, (uint64_t)&unk_23FD7ACE4);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23FBFEE2C(&qword_256F62570, _s23StatementStepEvaluationOMa, (uint64_t)&unk_23FD7ACBC);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23FCF1818(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23FBFF158(a1, a2, a3);
  sub_23FCF242C(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23FBFF0A0();
}

void sub_23FCF1848(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23FBFF158(a1, a2, a3);
  sub_23FCF242C(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_23FBFF0A0();
}

unint64_t sub_23FCF1878()
{
  unint64_t result;

  result = qword_256F625C8;
  if (!qword_256F625C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B30C, &_s20DisambiguationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F625C8);
  }
  return result;
}

unint64_t sub_23FCF18B4()
{
  unint64_t result;

  result = qword_256F625D0;
  if (!qword_256F625D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B2BC, &_s20DisambiguationResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F625D0);
  }
  return result;
}

unint64_t sub_23FCF18F0()
{
  unint64_t result;

  result = qword_256F625D8;
  if (!qword_256F625D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B26C, &_s20DisambiguationResultO23ValueSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F625D8);
  }
  return result;
}

unint64_t sub_23FCF192C()
{
  unint64_t result;

  result = qword_256F625E0;
  if (!qword_256F625E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B21C, &_s20DisambiguationResultO22ItemSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F625E0);
  }
  return result;
}

unint64_t sub_23FCF1968()
{
  unint64_t result;

  result = qword_256F625E8;
  if (!qword_256F625E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B1CC, &_s20DisambiguationResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F625E8);
  }
  return result;
}

uint64_t _s20DisambiguationResultO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23FCF19F0 + 4 * byte_23FD7A34D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23FCF1A24 + 4 * byte_23FD7A348[v4]))();
}

uint64_t sub_23FCF1A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCF1A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCF1A34);
  return result;
}

uint64_t sub_23FCF1A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCF1A48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23FCF1A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCF1A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20DisambiguationResultO10CodingKeysOMa()
{
  return &_s20DisambiguationResultO10CodingKeysON;
}

ValueMetadata *_s20DisambiguationResultO19AbandonedCodingKeysOMa()
{
  return &_s20DisambiguationResultO19AbandonedCodingKeysON;
}

ValueMetadata *_s20DisambiguationResultO22ItemSelectedCodingKeysOMa()
{
  return &_s20DisambiguationResultO22ItemSelectedCodingKeysON;
}

uint64_t _s20DisambiguationResultO22ItemSelectedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FCF1AD4 + 4 * byte_23FD7A352[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FCF1AF4 + 4 * byte_23FD7A357[v4]))();
}

_BYTE *sub_23FCF1AD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FCF1AF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FCF1AFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FCF1B04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FCF1B0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FCF1B14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s20DisambiguationResultO23ValueSelectedCodingKeysOMa()
{
  return &_s20DisambiguationResultO23ValueSelectedCodingKeysON;
}

ValueMetadata *_s20DisambiguationResultO18RejectedCodingKeysOMa()
{
  return &_s20DisambiguationResultO18RejectedCodingKeysON;
}

ValueMetadata *_s18ConfirmationResultOMa()
{
  return &_s18ConfirmationResultON;
}

uint64_t _s24ToolDisambiguationResultV20DisambiguationResultOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s24ToolDisambiguationResultV20DisambiguationResultOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s24ToolDisambiguationResultV20DisambiguationResultOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_23FCF1BBC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23FCF1BD8(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *_s24ToolDisambiguationResultV20DisambiguationResultOMa()
{
  return &_s24ToolDisambiguationResultV20DisambiguationResultON;
}

unint64_t sub_23FCF1C0C()
{
  unint64_t result;

  result = qword_256F62618;
  if (!qword_256F62618)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AE24, &_s18ConfirmationResultON);
    atomic_store(result, (unint64_t *)&qword_256F62618);
  }
  return result;
}

unint64_t sub_23FCF1C4C()
{
  unint64_t result;

  result = qword_256F62620;
  if (!qword_256F62620)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AFE4, &_s20DisambiguationResultO23ValueSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62620);
  }
  return result;
}

unint64_t sub_23FCF1C8C()
{
  unint64_t result;

  result = qword_256F62628;
  if (!qword_256F62628)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B09C, &_s20DisambiguationResultO22ItemSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62628);
  }
  return result;
}

unint64_t sub_23FCF1CCC()
{
  unint64_t result;

  result = qword_256F62630;
  if (!qword_256F62630)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B1A4, &_s20DisambiguationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62630);
  }
  return result;
}

unint64_t sub_23FCF1D0C()
{
  unint64_t result;

  result = qword_256F62638;
  if (!qword_256F62638)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B0C4, &_s20DisambiguationResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62638);
  }
  return result;
}

unint64_t sub_23FCF1D4C()
{
  unint64_t result;

  result = qword_256F62640;
  if (!qword_256F62640)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B0EC, &_s20DisambiguationResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62640);
  }
  return result;
}

unint64_t sub_23FCF1D8C()
{
  unint64_t result;

  result = qword_256F62648;
  if (!qword_256F62648)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B00C, &_s20DisambiguationResultO22ItemSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62648);
  }
  return result;
}

unint64_t sub_23FCF1DCC()
{
  unint64_t result;

  result = qword_256F62650;
  if (!qword_256F62650)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B034, &_s20DisambiguationResultO22ItemSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62650);
  }
  return result;
}

unint64_t sub_23FCF1E0C()
{
  unint64_t result;

  result = qword_256F62658;
  if (!qword_256F62658)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AF54, &_s20DisambiguationResultO23ValueSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62658);
  }
  return result;
}

unint64_t sub_23FCF1E4C()
{
  unint64_t result;

  result = qword_256F62660;
  if (!qword_256F62660)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AF7C, &_s20DisambiguationResultO23ValueSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62660);
  }
  return result;
}

unint64_t sub_23FCF1E8C()
{
  unint64_t result;

  result = qword_256F62668;
  if (!qword_256F62668)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AF04, &_s20DisambiguationResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62668);
  }
  return result;
}

unint64_t sub_23FCF1ECC()
{
  unint64_t result;

  result = qword_256F62670;
  if (!qword_256F62670)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AF2C, &_s20DisambiguationResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62670);
  }
  return result;
}

unint64_t sub_23FCF1F0C()
{
  unint64_t result;

  result = qword_256F62678;
  if (!qword_256F62678)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B114, &_s20DisambiguationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62678);
  }
  return result;
}

unint64_t sub_23FCF1F4C()
{
  unint64_t result;

  result = qword_256F62680;
  if (!qword_256F62680)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B13C, &_s20DisambiguationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62680);
  }
  return result;
}

unint64_t sub_23FCF1F88()
{
  unint64_t result;

  result = qword_256F626A8;
  if (!qword_256F626A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B60C, &_s18ConfirmationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F626A8);
  }
  return result;
}

unint64_t sub_23FCF1FC4()
{
  unint64_t result;

  result = qword_256F626B0;
  if (!qword_256F626B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B5BC, &_s18ConfirmationResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F626B0);
  }
  return result;
}

unint64_t sub_23FCF2000()
{
  unint64_t result;

  result = qword_256F626B8;
  if (!qword_256F626B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B56C, &_s18ConfirmationResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F626B8);
  }
  return result;
}

unint64_t sub_23FCF203C()
{
  unint64_t result;

  result = qword_256F626C0;
  if (!qword_256F626C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B51C, &_s18ConfirmationResultO19ConfirmedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F626C0);
  }
  return result;
}

uint64_t _s18ConfirmationResultOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FCF20C4 + 4 * byte_23FD7A361[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FCF20F8 + 4 * byte_23FD7A35C[v4]))();
}

uint64_t sub_23FCF20F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCF2100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCF2108);
  return result;
}

uint64_t sub_23FCF2114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCF211CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FCF2120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCF2128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18ConfirmationResultO10CodingKeysOMa()
{
  return &_s18ConfirmationResultO10CodingKeysON;
}

ValueMetadata *_s18ConfirmationResultO19ConfirmedCodingKeysOMa()
{
  return &_s18ConfirmationResultO19ConfirmedCodingKeysON;
}

ValueMetadata *_s18ConfirmationResultO18RejectedCodingKeysOMa()
{
  return &_s18ConfirmationResultO18RejectedCodingKeysON;
}

ValueMetadata *_s18ConfirmationResultO19AbandonedCodingKeysOMa()
{
  return &_s18ConfirmationResultO19AbandonedCodingKeysON;
}

unint64_t sub_23FCF2178()
{
  unint64_t result;

  result = qword_256F626E8;
  if (!qword_256F626E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B4F4, &_s18ConfirmationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F626E8);
  }
  return result;
}

unint64_t sub_23FCF21B8()
{
  unint64_t result;

  result = qword_256F626F0;
  if (!qword_256F626F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B414, &_s18ConfirmationResultO19ConfirmedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F626F0);
  }
  return result;
}

unint64_t sub_23FCF21F8()
{
  unint64_t result;

  result = qword_256F626F8;
  if (!qword_256F626F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B43C, &_s18ConfirmationResultO19ConfirmedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F626F8);
  }
  return result;
}

unint64_t sub_23FCF2238()
{
  unint64_t result;

  result = qword_256F62700;
  if (!qword_256F62700)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B3C4, &_s18ConfirmationResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62700);
  }
  return result;
}

unint64_t sub_23FCF2278()
{
  unint64_t result;

  result = qword_256F62708;
  if (!qword_256F62708)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B3EC, &_s18ConfirmationResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62708);
  }
  return result;
}

unint64_t sub_23FCF22B8()
{
  unint64_t result;

  result = qword_256F62710;
  if (!qword_256F62710)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B374, &_s18ConfirmationResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62710);
  }
  return result;
}

unint64_t sub_23FCF22F8()
{
  unint64_t result;

  result = qword_256F62718;
  if (!qword_256F62718)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B39C, &_s18ConfirmationResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62718);
  }
  return result;
}

unint64_t sub_23FCF2338()
{
  unint64_t result;

  result = qword_256F62720;
  if (!qword_256F62720)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B464, &_s18ConfirmationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62720);
  }
  return result;
}

unint64_t sub_23FCF2378()
{
  unint64_t result;

  result = qword_256F62728;
  if (!qword_256F62728)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7B48C, &_s18ConfirmationResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62728);
  }
  return result;
}

uint64_t sub_23FCF23C8()
{
  return sub_23FD74C48();
}

uint64_t sub_23FCF23D4()
{
  return sub_23FD74C48();
}

uint64_t sub_23FCF23F4()
{
  return sub_23FD74C48();
}

uint64_t sub_23FCF240C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FCF242C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void *sub_23FCF2434()
{
  void *v0;
  const void *v1;
  uint64_t v2;

  return memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
}

uint64_t sub_23FCF2448()
{
  return sub_23FD752F0();
}

uint64_t sub_23FCF2458()
{
  return sub_23FD7157C();
}

uint64_t sub_23FCF247C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FCF248C()
{
  return sub_23FD75344();
}

uint64_t sub_23FCF24B4()
{
  return sub_23FD74C48();
}

uint64_t sub_23FCF24BC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FCF24C4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FCF24DC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FCF24E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCF24F0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FCF24FC()
{
  return sub_23FD71450();
}

void sub_23FCF2504(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FCF1818(a1, a2, v2);
}

uint64_t sub_23FCF250C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23FCF2518()
{
  return _s20DisambiguationResultOMa(0);
}

uint64_t sub_23FCF2534()
{
  return _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
}

uint64_t sub_23FCF2574()
{
  return sub_23FD75290();
}

uint64_t sub_23FCF2590()
{
  return sub_23FD75344();
}

uint64_t sub_23FCF259C()
{
  return sub_23FD75290();
}

uint64_t sub_23FCF25A8()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23FCF25C0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FBFEF18(v2, a2);
}

uint64_t sub_23FCF25C8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void sub_23FCF25E8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 80) = a1;
  *(_QWORD *)(v2 - 72) = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_23FCF25F8()
{
  _s20DisambiguationResultOMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FCF2620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v0);
}

void sub_23FCF2634(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23FCF2650(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FCF266C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8))(v1, v0);
}

uint64_t sub_23FCF2680()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
  return sub_23FD750E0();
}

uint64_t sub_23FCF2694()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
  return sub_23FD750E0();
}

uint64_t sub_23FCF26A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
  return sub_23FD750E0();
}

uint64_t sub_23FCF26BC()
{
  return sub_23FD7478C();
}

uint64_t sub_23FCF26E4()
{
  return sub_23FD71558();
}

uint64_t sub_23FCF26F8()
{
  return sub_23FD71558();
}

uint64_t sub_23FCF2704()
{
  return sub_23FD71450();
}

uint64_t sub_23FCF270C()
{
  return sub_23FD75290();
}

void sub_23FCF2720(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FCF1848(a1, v3, a3);
}

uint64_t sub_23FCF2734@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

void sub_23FCF2744()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
}

void sub_23FCF2754(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FCF1848(a1, v3, a3);
}

uint64_t sub_23FCF2768()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCF2778()
{
  return sub_23FD75128();
}

uint64_t sub_23FCF2788()
{
  return _s24ToolDisambiguationResultVMa(0);
}

void sub_23FCF2798(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FCF1818(a1, v3, a3);
}

uint64_t sub_23FCF27B8()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

void sub_23FCF27C8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(a1, v1);
}

uint64_t sub_23FCF27D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCF27DC()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

uint64_t sub_23FCF2808()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if ((unint64_t)*v0 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23FCF2820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23FCF2830()
{
  return sub_23FD75344();
}

void sub_23FCF2840(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 80) = a1;
  *(_QWORD *)(v2 - 72) = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_23FCF2854@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FCF286C@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 232));
}

uint64_t sub_23FCF2878(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23FCF2898()
{
  uint64_t v0;

  return v0;
}

void sub_23FCF28AC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FCF1818(a1, a2, v2);
}

uint64_t sub_23FCF28B4()
{
  return sub_23FD74C48();
}

unint64_t sub_23FCF28BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23FCF192C();
}

uint64_t sub_23FCF28D4()
{
  return sub_23FD71450();
}

unint64_t sub_23FCF28E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23FBFDE40(v0, v1);
  return sub_23FCF1878();
}

void sub_23FCF28FC()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23FBFEF18(v0, v1);
}

unint64_t sub_23FCF2908()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23FCF18B4();
}

void sub_23FCF2914(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23FCF1818(a1, v1, v2);
}

uint64_t sub_23FCF2968()
{
  uint64_t v0;

  return v0;
}

void sub_23FCF2974(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FCF1848(v3, v4, a3);
}

uint64_t sub_23FCF298C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FCF29A0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23FCF29A8()
{
  return sub_23FD731FC();
}

uint64_t sub_23FCF29B0()
{
  return _s25ValueDisambiguationResultVMa(0);
}

unint64_t sub_23FCF29B8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23FCF18F0();
}

unint64_t sub_23FCF29C4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23FCF1FC4();
}

uint64_t sub_23FCF29D0(uint64_t a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = sub_23FBFD684(&qword_256F5FD10);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s23StatementStepEvaluationOMa(0);
  v30 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v31 = (uint64_t)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v29 = (uint64_t)v26 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x24BEE4AF8];
  v26[1] = v2;
  v16 = sub_23FBFD684(&qword_256F5FA40);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v19 = *(_QWORD *)(v17 + 72);
  v26[0] = a1;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x24BEE4AF8];
  v27 = v9;
  v28 = a2;
  do
  {
    a2(v18, v18 + *(int *)(v16 + 48));
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v9) == 1)
    {
      sub_23FC8FCC4((uint64_t)v8, &qword_256F5FD10);
    }
    else
    {
      v21 = v29;
      sub_23FCF4800((uint64_t)v8, v29);
      sub_23FCF4800(v21, v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC990DC();
        v20 = v23;
      }
      v22 = *(_QWORD *)(v20 + 16);
      if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_23FC990DC();
        v20 = v24;
      }
      *(_QWORD *)(v20 + 16) = v22 + 1;
      sub_23FCF4800(v31, v20+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v22);
      v9 = v27;
      a2 = v28;
    }
    v18 += v19;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v20;
}

void sub_23FCF2C18(uint64_t a1@<X0>, NSObject *a2@<X1>, _QWORD *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t, uint64_t);
  void (*v84)(char *, os_log_t, uint64_t);
  NSObject *v85;
  os_log_type_t v86;
  int v87;
  _BOOL4 v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  os_log_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  char *v107;
  char *v108;
  NSObject *v109;
  uint64_t v110;
  os_log_type_t v111;
  char *v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int v121;
  BOOL v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  NSObject *v129;
  uint8_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  void (*v137)(char *, unint64_t, uint64_t);
  char *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  os_log_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, uint64_t);
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  NSObject *v192;
  uint8_t *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  void (*v201)(char *, unint64_t, uint64_t);
  char *v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  os_log_t v208;
  os_log_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  void (*v227)(char *, os_log_t, uint64_t);
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  uint64_t v238;
  void (*v239)(char *, uint64_t);
  uint64_t v240;
  char *v241;
  uint8_t *v242;
  void (*v243)(char *, uint64_t, uint64_t);
  uint64_t v244;
  os_log_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  os_log_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  _QWORD *v258;
  uint64_t v259;
  os_log_t v260;
  uint64_t v261;

  v225 = a3;
  v221 = sub_23FD722A8();
  v220 = *(_QWORD *)(v221 - 8);
  MEMORY[0x24BDAC7A8](v221, v7);
  v217 = (char *)&v211 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = sub_23FD7157C();
  v229 = *(_QWORD *)(v230 - 8);
  v10 = MEMORY[0x24BDAC7A8](v230, v9);
  v222 = (char *)&v211 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v228 = (char *)&v211 - v13;
  v224 = sub_23FD71D68();
  v223 = *(_QWORD *)(v224 - 8);
  MEMORY[0x24BDAC7A8](v224, v14);
  v219 = (char *)&v211 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = (_QWORD *)sub_23FD71C84();
  v251 = *(v258 - 1);
  v17 = MEMORY[0x24BDAC7A8](v258, v16);
  v218 = (char *)&v211 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v257 = (char *)&v211 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v237 = (char *)&v211 - v24;
  MEMORY[0x24BDAC7A8](v23, v25);
  v241 = (char *)&v211 - v26;
  v226 = sub_23FBFD684(&qword_256F5FD10);
  v28 = MEMORY[0x24BDAC7A8](v226, v27);
  v246 = (uint64_t)&v211 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v231 = (uint64_t)&v211 - v32;
  MEMORY[0x24BDAC7A8](v31, v33);
  v238 = (uint64_t)&v211 - v34;
  v35 = sub_23FBFD684(&qword_256F5D538);
  MEMORY[0x24BDAC7A8](v35, v36);
  v245 = (os_log_t)((char *)&v211 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v255 = sub_23FD72044();
  v259 = *(_QWORD *)(v255 - 8);
  v39 = MEMORY[0x24BDAC7A8](v255, v38);
  v235 = (char *)&v211 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v256 = (char *)&v211 - v43;
  MEMORY[0x24BDAC7A8](v42, v44);
  v253 = (char *)&v211 - v45;
  v46 = sub_23FD71BB8();
  v47 = *(_QWORD *)(v46 - 8);
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v216 = (char *)&v211 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v236 = (char *)&v211 - v53;
  MEMORY[0x24BDAC7A8](v52, v54);
  v56 = (char *)&v211 - v55;
  v57 = sub_23FD71474();
  v58 = *(_QWORD *)(v57 - 8);
  v60 = MEMORY[0x24BDAC7A8](v57, v59);
  v248 = (char *)&v211 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = MEMORY[0x24BDAC7A8](v60, v62);
  v233 = (char *)&v211 - v64;
  MEMORY[0x24BDAC7A8](v63, v65);
  v67 = (char *)&v211 - v66;
  v254 = sub_23FD72BF0();
  v242 = *(uint8_t **)(v254 - 8);
  v69 = MEMORY[0x24BDAC7A8](v254, v68);
  v247 = (char *)&v211 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = MEMORY[0x24BDAC7A8](v69, v71);
  v215 = (char *)&v211 - v73;
  v75 = MEMORY[0x24BDAC7A8](v72, v74);
  v232 = (char *)&v211 - v76;
  v78 = MEMORY[0x24BDAC7A8](v75, v77);
  v234 = (char *)&v211 - v79;
  MEMORY[0x24BDAC7A8](v78, v80);
  v82 = (char *)&v211 - v81;
  sub_23FD724DC();
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v244 = a1;
  v243 = v83;
  v83(v67, a1, v57);
  v249 = v47;
  v250 = a2;
  v84 = *(void (**)(char *, os_log_t, uint64_t))(v47 + 16);
  v252 = v46;
  v227 = v84;
  v84(v56, a2, v46);
  v85 = sub_23FD72BE4();
  v86 = sub_23FD74F48();
  v87 = v86;
  v88 = os_log_type_enabled(v85, v86);
  v240 = a4;
  if (v88)
  {
    v89 = swift_slowAlloc();
    v214 = swift_slowAlloc();
    v260 = (os_log_t)v214;
    *(_DWORD *)v89 = 136315394;
    sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v90 = sub_23FD75344();
    v261 = sub_23FC9DC40(v90, v91, (uint64_t *)&v260);
    v213 = v87;
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v239 = *(void (**)(char *, uint64_t))(v58 + 8);
    v239(v67, v57);
    *(_WORD *)(v89 + 12) = 2080;
    sub_23FD71BAC();
    v92 = MEMORY[0x242678AA4]();
    v94 = v93;
    swift_bridgeObjectRelease();
    v261 = sub_23FC9DC40(v92, v94, (uint64_t *)&v260);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v95 = *(void (**)(char *, uint64_t))(v249 + 8);
    v95(v56, v252);
    _os_log_impl(&dword_23FBF8000, v85, (os_log_type_t)v213, "Evaluating system response with id=%s, statementResults=%s", (uint8_t *)v89, 0x16u);
    v96 = v214;
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v96, -1, -1);
    v97 = v89;
    v98 = v251;
    MEMORY[0x2426798D8](v97, -1, -1);

    v99 = v254;
    v249 = *((_QWORD *)v242 + 1);
    ((void (*)(char *, uint64_t))v249)(v82, v254);
    v100 = v57;
  }
  else
  {
    v239 = *(void (**)(char *, uint64_t))(v58 + 8);
    v239(v67, v57);
    v95 = *(void (**)(char *, uint64_t))(v249 + 8);
    v95(v56, v252);

    v99 = v254;
    v249 = *((_QWORD *)v242 + 1);
    ((void (*)(char *, uint64_t))v249)(v82, v254);
    v100 = v57;
    v98 = v251;
  }
  v101 = v245;
  sub_23FC0AC90();
  v102 = v255;
  v103 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v101, 1, v255);
  v105 = v258;
  v104 = v259;
  v106 = v253;
  if (v103 == 1)
  {
    sub_23FC8FCC4((uint64_t)v101, &qword_256F5D538);
    v107 = v234;
    sub_23FD724DC();
    v108 = v233;
    v243(v233, v244, v100);
    v109 = sub_23FD72BE4();
    v110 = v100;
    v111 = sub_23FD74F54();
    if (os_log_type_enabled(v109, v111))
    {
      v112 = v108;
      v113 = (uint8_t *)swift_slowAlloc();
      v114 = swift_slowAlloc();
      v260 = (os_log_t)v114;
      *(_DWORD *)v113 = 136315138;
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v115 = sub_23FD75344();
      v261 = sub_23FC9DC40(v115, v116, (uint64_t *)&v260);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      v239(v112, v110);
      _os_log_impl(&dword_23FBF8000, v109, v111, "Could not extract statementId for system response with id %s, skipping", v113, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v114, -1, -1);
      MEMORY[0x2426798D8](v113, -1, -1);

      v117 = v107;
      v118 = v254;
    }
    else
    {
      v239(v108, v110);

      v117 = v107;
      v118 = v99;
    }
    ((void (*)(char *, uint64_t))v249)(v117, v118);
    v141 = v240;
    v142 = _s23StatementStepEvaluationOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v141, 1, 1, v142);
    return;
  }
  (*(void (**)(char *, os_log_t, uint64_t))(v259 + 32))(v253, v101, v102);
  v243(v248, v244, v100);
  v119 = v241;
  sub_23FD72038();
  v120 = v237;
  (*(void (**)(char *, char *, _QWORD *))(v98 + 16))(v237, v119, v105);
  v121 = (*(uint64_t (**)(char *, _QWORD *))(v98 + 88))(v120, v105);
  v122 = v121 == *MEMORY[0x24BE53328] || v121 == *MEMORY[0x24BE532D8];
  v123 = v247;
  v124 = v236;
  v212 = v100;
  if (v122)
    goto LABEL_12;
  if (v121 != *MEMORY[0x24BE532E0])
  {
    v146 = v246;
    if (v121 == *MEMORY[0x24BE532E8] || v121 == *MEMORY[0x24BE53300] || v121 == *MEMORY[0x24BE53308])
    {
      v147 = sub_23FBFDE40(v225, v225[3]);
      v148 = (uint64_t)v147 + *(int *)(_s19TranscriptRetrieverVMa() + 24);
      v123 = v247;
      sub_23FC60768(v148, (uint64_t)&v260);
      v145 = v238;
      sub_23FCF453C((uint64_t)v248, &v260, v238);
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v260);
      (*(void (**)(char *, _QWORD *))(v98 + 8))(v237, v105);
      goto LABEL_34;
    }
    if (v121 == *MEMORY[0x24BE532F0])
    {
      v174 = v237;
      (*(void (**)(char *, _QWORD *))(v98 + 96))(v237, v105);
      v175 = v219;
      (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v219, v174, v224);
      v176 = (uint64_t)v228;
      sub_23FD72020();
      v177 = (uint64_t)v222;
      sub_23FD72020();
      sub_23FCF43D4(v176, v177, (uint64_t)v248, v231);
      v178 = *(void (**)(uint64_t, uint64_t))(v229 + 8);
      v179 = v230;
      v178(v177, v230);
      v180 = v179;
      v146 = v246;
      v178(v176, v180);
      v123 = v247;
      (*(void (**)(char *, uint64_t))(v223 + 8))(v175, v224);
      v181 = _s23StatementStepEvaluationOMa(0);
      v182 = v231;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v231, 0, 1, v181);
      v183 = v182;
      v145 = v238;
      sub_23FC08FD8(v183, v238, &qword_256F5FD10);
      goto LABEL_34;
    }
    v120 = v237;
    if (v121 == *MEMORY[0x24BE53310])
    {
      (*(void (**)(char *, _QWORD *))(v98 + 96))(v237, v105);
      v184 = v217;
      (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v217, v120, v221);
      v185 = (uint64_t)v228;
      sub_23FD72020();
      v186 = (uint64_t)v222;
      sub_23FD72020();
      sub_23FCF43F4(v185, v186, (uint64_t)v248, v231);
      v187 = *(void (**)(uint64_t, uint64_t))(v229 + 8);
      v188 = v230;
      v187(v186, v230);
      v187(v185, v188);
      v123 = v247;
      (*(void (**)(char *, uint64_t))(v220 + 8))(v184, v221);
      v189 = _s23StatementStepEvaluationOMa(0);
      v190 = v231;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v231, 0, 1, v189);
      v145 = v238;
      sub_23FC08FD8(v190, v238, &qword_256F5FD10);
      goto LABEL_25;
    }
    if (v121 != *MEMORY[0x24BE532D0])
    {
      if (v121 == *MEMORY[0x24BE532F8])
        goto LABEL_24;
      if (v121 != *MEMORY[0x24BE53320])
      {
        v191 = v215;
        sub_23FD724DC();
        v227(v216, v250, v252);
        v192 = sub_23FD72BE4();
        LODWORD(v257) = sub_23FD74F54();
        if (os_log_type_enabled(v192, (os_log_type_t)v257))
        {
          v250 = v192;
          v193 = (uint8_t *)swift_slowAlloc();
          v245 = (os_log_t)swift_slowAlloc();
          v260 = v245;
          *(_DWORD *)v193 = 136315138;
          v194 = v216;
          v195 = sub_23FD71BAC();
          v196 = *(_QWORD *)(v195 + 16);
          if (v196)
          {
            v244 = (uint64_t)v193;
            v197 = v102;
            v261 = MEMORY[0x24BEE4AF8];
            sub_23FC9BCC0();
            v198 = (*(unsigned __int8 *)(v259 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v259 + 80);
            v243 = (void (*)(char *, uint64_t, uint64_t))v195;
            v199 = v195 + v198;
            v200 = *(_QWORD *)(v259 + 72);
            v201 = *(void (**)(char *, unint64_t, uint64_t))(v259 + 16);
            do
            {
              v202 = v256;
              v201(v256, v199, v197);
              sub_23FD72038();
              (*(void (**)(char *, uint64_t))(v259 + 8))(v202, v197);
              v203 = v261;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23FC9BCC0();
                v203 = v261;
              }
              v204 = *(_QWORD *)(v203 + 16);
              if (v204 >= *(_QWORD *)(v203 + 24) >> 1)
              {
                sub_23FC9BCC0();
                v203 = v261;
              }
              *(_QWORD *)(v203 + 16) = v204 + 1;
              v105 = v258;
              (*(void (**)(unint64_t, char *, _QWORD *))(v251 + 32))(v203+ ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80))+ *(_QWORD *)(v251 + 72) * v204, v218, v258);
              v261 = v203;
              v199 += v200;
              --v196;
            }
            while (v196);
            swift_bridgeObjectRelease();
            v102 = v197;
            v106 = v253;
            v194 = v216;
            v193 = (uint8_t *)v244;
          }
          else
          {
            swift_bridgeObjectRelease();
            v203 = MEMORY[0x24BEE4AF8];
          }
          v205 = MEMORY[0x242678AA4](v203, v105);
          v207 = v206;
          swift_bridgeObjectRelease();
          v261 = sub_23FC9DC40(v205, v207, (uint64_t *)&v260);
          sub_23FD75044();
          swift_bridgeObjectRelease();
          v95(v194, v252);
          v208 = v250;
          _os_log_impl(&dword_23FBF8000, v250, (os_log_type_t)v257, "Found an unhandled system response outcome, systemResponseOutcomesFound=%s", v193, 0xCu);
          v209 = v245;
          swift_arrayDestroy();
          MEMORY[0x2426798D8](v209, -1, -1);
          MEMORY[0x2426798D8](v193, -1, -1);

          ((void (*)(char *, uint64_t))v249)(v215, v254);
          v98 = v251;
          v104 = v259;
          v123 = v247;
        }
        else
        {
          v95(v216, v252);

          ((void (*)(char *, uint64_t))v249)(v191, v254);
        }
        v210 = _s23StatementStepEvaluationOMa(0);
        v145 = v238;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v238, 1, 1, v210);
        (*(void (**)(char *, _QWORD *))(v98 + 8))(v237, v105);
        goto LABEL_25;
      }
    }
LABEL_12:
    (*(void (**)(char *, _QWORD *))(v98 + 8))(v120, v105);
    v125 = v232;
    sub_23FD724DC();
    v126 = v124;
    v127 = v124;
    v128 = v252;
    v227(v126, v250, v252);
    v129 = sub_23FD72BE4();
    LODWORD(v250) = sub_23FD74F48();
    if (os_log_type_enabled(v129, (os_log_type_t)v250))
    {
      v245 = v129;
      v130 = (uint8_t *)swift_slowAlloc();
      v244 = swift_slowAlloc();
      v260 = (os_log_t)v244;
      *(_DWORD *)v130 = 136315138;
      v131 = sub_23FD71BAC();
      v132 = *(_QWORD *)(v131 + 16);
      if (v132)
      {
        v242 = v130;
        v243 = (void (*)(char *, uint64_t, uint64_t))v95;
        v133 = v255;
        v261 = MEMORY[0x24BEE4AF8];
        sub_23FC9BCC0();
        v134 = (*(unsigned __int8 *)(v259 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v259 + 80);
        v237 = (char *)v131;
        v135 = v131 + v134;
        v136 = *(_QWORD *)(v259 + 72);
        v137 = *(void (**)(char *, unint64_t, uint64_t))(v259 + 16);
        do
        {
          v138 = v256;
          v137(v256, v135, v133);
          sub_23FD72038();
          (*(void (**)(char *, uint64_t))(v259 + 8))(v138, v133);
          v139 = v261;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FC9BCC0();
            v139 = v261;
          }
          v140 = *(_QWORD *)(v139 + 16);
          if (v140 >= *(_QWORD *)(v139 + 24) >> 1)
          {
            sub_23FC9BCC0();
            v139 = v261;
          }
          *(_QWORD *)(v139 + 16) = v140 + 1;
          v105 = v258;
          (*(void (**)(unint64_t, char *, _QWORD *))(v98 + 32))(v139+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(_QWORD *)(v98 + 72) * v140, v257, v258);
          v261 = v139;
          v135 += v136;
          --v132;
        }
        while (v132);
        swift_bridgeObjectRelease();
        v106 = v253;
        v95 = (void (*)(char *, uint64_t))v243;
        v127 = v236;
        v130 = v242;
      }
      else
      {
        swift_bridgeObjectRelease();
        v139 = MEMORY[0x24BEE4AF8];
        v106 = v253;
      }
      v149 = MEMORY[0x242678AA4](v139, v105);
      v151 = v150;
      swift_bridgeObjectRelease();
      v261 = sub_23FC9DC40(v149, v151, (uint64_t *)&v260);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      v95(v127, v252);
      v152 = v245;
      _os_log_impl(&dword_23FBF8000, v245, (os_log_type_t)v250, "Skipping system response outcome not related to plan resolution, outcomes=%s", v130, 0xCu);
      v153 = v244;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v153, -1, -1);
      MEMORY[0x2426798D8](v130, -1, -1);

      ((void (*)(char *, uint64_t))v249)(v232, v254);
      v104 = v259;
      v123 = v247;
    }
    else
    {
      v95(v127, v128);

      ((void (*)(char *, uint64_t))v249)(v125, v254);
      v106 = v253;
    }
    v154 = _s23StatementStepEvaluationOMa(0);
    v145 = v238;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v238, 1, 1, v154);
    v146 = v246;
    v102 = v255;
    goto LABEL_34;
  }
LABEL_24:
  v143 = sub_23FBFDE40(v225, v225[3]);
  v144 = (uint64_t)v143 + *(int *)(_s19TranscriptRetrieverVMa() + 24);
  v123 = v247;
  sub_23FC60768(v144, (uint64_t)&v260);
  v145 = v238;
  sub_23FCF453C((uint64_t)v248, &v260, v238);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v260);
  (*(void (**)(char *, _QWORD *))(v98 + 8))(v120, v105);
LABEL_25:
  v146 = v246;
LABEL_34:
  sub_23FD724DC();
  v155 = v235;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v235, v106, v102);
  sub_23FCA0E3C(v145, v146);
  v156 = v123;
  v157 = sub_23FD72BE4();
  v158 = sub_23FD74F3C();
  if (os_log_type_enabled(v157, v158))
  {
    v159 = swift_slowAlloc();
    v259 = swift_slowAlloc();
    v260 = (os_log_t)v259;
    *(_DWORD *)v159 = 136315394;
    v258 = (_QWORD *)(v159 + 4);
    v160 = v228;
    sub_23FD72020();
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v161 = v104;
    v162 = v230;
    v163 = sub_23FD75344();
    v165 = v164;
    (*(void (**)(char *, uint64_t))(v229 + 8))(v160, v162);
    v261 = sub_23FC9DC40(v163, v165, (uint64_t *)&v260);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v258 = *(_QWORD **)(v161 + 8);
    v166 = v155;
    v167 = v255;
    ((void (*)(char *, uint64_t))v258)(v166, v255);
    *(_WORD *)(v159 + 12) = 2080;
    v168 = v246;
    sub_23FCA0E3C(v246, v231);
    v169 = sub_23FD74C0C();
    v261 = sub_23FC9DC40(v169, v170, (uint64_t *)&v260);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FC8FCC4(v168, &qword_256F5FD10);
    _os_log_impl(&dword_23FBF8000, v157, v158, "Generated a statement step result for statement %s: %s", (uint8_t *)v159, 0x16u);
    v171 = v259;
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v171, -1, -1);
    v172 = v159;
    v145 = v238;
    MEMORY[0x2426798D8](v172, -1, -1);

    ((void (*)(char *, uint64_t))v249)(v247, v254);
    (*(void (**)(char *, _QWORD *))(v251 + 8))(v241, v105);
    v239(v248, v212);
    ((void (*)(char *, uint64_t))v258)(v253, v167);
  }
  else
  {

    sub_23FC8FCC4(v246, &qword_256F5FD10);
    v173 = *(void (**)(char *, uint64_t))(v104 + 8);
    v173(v155, v102);
    ((void (*)(char *, uint64_t))v249)(v156, v254);
    (*(void (**)(char *, _QWORD *))(v98 + 8))(v241, v105);
    v239(v248, v212);
    v173(v106, v102);
  }
  sub_23FC08FD8(v145, v240, &qword_256F5FD10);
}

uint64_t sub_23FCF43D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23FCF4414(a1, a2, a3, MEMORY[0x24BE53688], _s25ParameterNotAllowedResultVMa, MEMORY[0x24BE53680], a4);
}

uint64_t sub_23FCF43F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23FCF4414(a1, a2, a3, MEMORY[0x24BE53EE0], _s33ParameterCandidatesNotFoundResultVMa, MEMORY[0x24BE53ED8], a4);
}

uint64_t sub_23FCF4414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void)@<X4>, uint64_t (*a5)(_QWORD)@<X5>, void (*a6)(uint64_t)@<X7>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v13 = _s23ParameterStepEvaluationVMa(0);
  v14 = a7 + *(int *)(v13 + 28);
  a4();
  v15 = v14 + *(int *)(a5(0) + 20);
  v16 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a3, v16);
  _s19ParameterStepResultOMa(0);
  swift_storeEnumTagMultiPayload();
  sub_23FD7157C();
  sub_23FCF4CB4(a7, a1);
  v17 = sub_23FCF4CB4(a7 + *(int *)(v13 + 20), a2);
  a6(v17);
  sub_23FD731E4();
  _s23StatementStepEvaluationOMa(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FCF453C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v27;

  v5 = sub_23FD71474();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_23FBFF180();
  v10 = v9 - v8;
  v11 = sub_23FD72BF0();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFF180();
  sub_23FBFD684(&qword_256F5FD10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFF180();
  v17 = v16 - v15;
  sub_23FBFDE40(a2, a2[3]);
  sub_23FCA4438(a1, v17);
  v18 = _s23StatementStepEvaluationOMa(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v17, 1, v18) == 1)
  {
    sub_23FC8FCC4(v17, &qword_256F5FD10);
    sub_23FD724DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a1, v5);
    v19 = sub_23FD72BE4();
    v20 = sub_23FD74F54();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_DWORD *)v21 = 136315138;
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v22 = sub_23FD75344();
      sub_23FC9DC40(v22, v23, &v27);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FCF4C7C();
      _os_log_impl(&dword_23FBF8000, v19, v20, "Cannot retrieve a statement step for a prompt outcome with systemResponseEventId=%s", v21, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    sub_23FCF4C7C();

    sub_23FCF4C8C();
    v24 = 1;
  }
  else
  {
    sub_23FCF4800(v17, a3);
    v24 = 0;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, v24, 1, v18);
}

uint64_t _s22StatementStepEvaluatorCMa()
{
  return objc_opt_self();
}

uint64_t sub_23FCF4800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s23StatementStepEvaluationOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FCF4844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v43)(uint64_t, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  void (*v72)(uint64_t, unint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[6];

  v64 = a3;
  v9 = sub_23FD71BB8();
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  v67 = v12;
  v78 = sub_23FD7409C();
  v13 = *(uint64_t (***)(uint64_t, _QWORD))(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v14);
  sub_23FBFEFE0();
  v70 = v15;
  sub_23FBFD684(&qword_256F627E8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FBFF180();
  v20 = v19 - v18;
  v21 = sub_23FBFD684(&qword_256F5FA40);
  v66 = *(_QWORD *)(v21 - 8);
  sub_23FC05FF4();
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v76 = (uint64_t)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v26);
  v65 = (uint64_t)v63 - v27;
  v28 = sub_23FD740CC();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v30);
  sub_23FBFF180();
  v33 = v32 - v31;
  v79[3] = a4;
  v79[4] = a5;
  v34 = sub_23FBFDDEC(v79);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v34, a2, a4);
  v36 = a1;
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v38 = v36 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v39 = *(_QWORD *)(v29 + 72);
    v72 = *(void (**)(uint64_t, unint64_t, uint64_t))(v29 + 16);
    v73 = v39;
    v71 = *MEMORY[0x24BE56C40];
    v63[1] = v36;
    swift_bridgeObjectRetain();
    v77 = MEMORY[0x24BEE4AF8];
    v40 = v70;
    v74 = v29;
    v75 = v28;
    do
    {
      v72(v33, v38, v28);
      sub_23FD740A8();
      v41 = v13[11](v40, v78);
      if (v41 == v71)
      {
        sub_23FCF4C9C(v13[12]);
        v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32);
        v43 = v13;
        v44 = v67;
        v45 = v40;
        v46 = v69;
        sub_23FCF4CB4(v67, v45);
        v47 = v20 + *(int *)(v21 + 48);
        sub_23FD74048();
        v48 = v47;
        v29 = v74;
        v49 = v44;
        v13 = v43;
        v50 = v46;
        v40 = v70;
        v42(v48, v49, v50);
        v28 = v75;
        sub_23FCF4CA8(v20, 0);
      }
      else
      {
        sub_23FCF4CA8(v20, 1);
        sub_23FCF4C9C(v13[1]);
      }
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v20, 1, v21) == 1)
      {
        sub_23FC8FCC4(v20, &qword_256F627E8);
      }
      else
      {
        v51 = v37;
        v52 = v65;
        sub_23FC08FD8(v20, v65, &qword_256F5FA40);
        sub_23FC08FD8(v52, v76, &qword_256F5FA40);
        v53 = v77;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC99248();
          v53 = v58;
        }
        v55 = *(_QWORD *)(v53 + 16);
        v54 = *(_QWORD *)(v53 + 24);
        v77 = v53;
        v37 = v51;
        if (v55 >= v54 >> 1)
        {
          sub_23FC99248();
          v77 = v59;
        }
        v56 = v76;
        v57 = v77;
        *(_QWORD *)(v77 + 16) = v55 + 1;
        sub_23FC08FD8(v56, v57+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v55, &qword_256F5FA40);
        v29 = v74;
        v28 = v75;
      }
      v38 += v73;
      --v37;
    }
    while (v37);
    v36 = swift_bridgeObjectRelease();
    v60 = v77;
  }
  else
  {
    v60 = MEMORY[0x24BEE4AF8];
  }
  MEMORY[0x24BDAC7A8](v36, v35);
  v63[-2] = v64;
  v63[-1] = v79;
  v61 = sub_23FCF29D0(v60, (void (*)(_QWORD, _QWORD))sub_23FCF4C74);
  swift_bridgeObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v79);
  return v61;
}

void sub_23FCF4C74(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_23FCF2C18(a1, a2, *(_QWORD **)(v3 + 24), a3);
}

uint64_t sub_23FCF4C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23FCF4C8C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t sub_23FCF4C9C@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 144));
}

uint64_t sub_23FCF4CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FCF4CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FCF4CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = sub_23FBFD684(&qword_256F5FD10);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = _s23StatementStepEvaluationOMa(0);
  v26 = *(_QWORD *)(v28 - 8);
  v10 = MEMORY[0x24BDAC7A8](v28, v9);
  v27 = (uint64_t)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v24 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = *(_QWORD *)(sub_23FD73418() - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v18 = *(_QWORD *)(v16 + 72);
    v24 = a1;
    swift_bridgeObjectRetain();
    v19 = MEMORY[0x24BEE4AF8];
    v25 = a2;
    while (1)
    {
      sub_23FCF5E8C(v17, a2, (uint64_t)v8);
      if (v2)
        break;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v28) == 1)
      {
        sub_23FBFEF74((uint64_t)v8, &qword_256F5FD10);
      }
      else
      {
        sub_23FC0F380((uint64_t)v8, (uint64_t)v14, _s23StatementStepEvaluationOMa);
        sub_23FC0F380((uint64_t)v14, v27, _s23StatementStepEvaluationOMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC990DC();
          v19 = v21;
        }
        v20 = *(_QWORD *)(v19 + 16);
        if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_23FC990DC();
          v19 = v22;
        }
        *(_QWORD *)(v19 + 16) = v20 + 1;
        sub_23FC0F380(v27, v19+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v20, _s23StatementStepEvaluationOMa);
        a2 = v25;
      }
      v17 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v19;
}

uint64_t sub_23FCF4F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2;
  v4 = sub_23FCF4F84(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 16) = v4;
  return v3;
}

uint64_t sub_23FCF4F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  char v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  _QWORD v100[2];
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t found;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;

  v130 = _s19ValueStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v130, v4);
  v129 = (char *)v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = _s24ActionConfirmationResultVMa(0);
  MEMORY[0x24BDAC7A8](v128, v6);
  v127 = (char *)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = _s20ActionStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v126, v8);
  v125 = (char *)v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = _s29ParameterDisambiguationResultVMa(0);
  MEMORY[0x24BDAC7A8](v112, v10);
  v111 = (char *)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = _s27ParameterConfirmationResultVMa(0);
  MEMORY[0x24BDAC7A8](v110, v12);
  v109 = (char *)v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  found = _s33ParameterCandidatesNotFoundResultVMa(0);
  MEMORY[0x24BDAC7A8](found, v14);
  v107 = (char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = _s25ParameterNotAllowedResultVMa(0);
  MEMORY[0x24BDAC7A8](v106, v16);
  v105 = (char *)v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = _s25ParameterNeedsValueResultVMa(0);
  MEMORY[0x24BDAC7A8](v104, v18);
  v103 = (char *)v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = _s19ParameterStepResultOMa(0);
  MEMORY[0x24BDAC7A8](v124, v20);
  v132 = (char *)v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = _s23ParameterStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v123, v22);
  v131 = (char *)v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = _s24ToolDisambiguationResultVMa(0);
  MEMORY[0x24BDAC7A8](v122, v24);
  v121 = (char *)v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = _s14ToolStepResultOMa(0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v120 = (char *)v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = _s18ToolStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v119, v29);
  v118 = (char *)v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = _s23StatementStepEvaluationOMa(0);
  v102 = *(_QWORD *)(v134 - 8);
  v32 = MEMORY[0x24BDAC7A8](v134, v31);
  v137 = (char *)v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v139 = (uint64_t)v100 - v36;
  MEMORY[0x24BDAC7A8](v35, v37);
  v135 = (char *)v100 - v38;
  v140 = sub_23FD71474();
  v39 = *(_QWORD *)(v140 - 8);
  v41 = MEMORY[0x24BDAC7A8](v140, v40);
  v117 = (char *)v100 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v116 = (char *)v100 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v138 = (char *)v100 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47, v49);
  v52 = (char *)v100 - v51;
  MEMORY[0x24BDAC7A8](v50, v53);
  v55 = (char *)v100 - v54;
  v56 = _s19SystemResponseEventVMa(0);
  v57 = *(_QWORD *)(v56 - 8);
  v59 = MEMORY[0x24BDAC7A8](v56, v58);
  v61 = (char *)v100 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v59, v62);
  v64 = (char *)v100 - v63;
  v115 = sub_23FD72BF0();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115, v65);
  v113 = (char *)v100 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = *(_QWORD *)(a1 + 16);
  v141 = v52;
  v142 = v39;
  if (v67)
  {
    v101 = a2;
    v68 = a1 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
    v69 = *(_QWORD *)(v57 + 72);
    v100[1] = a1;
    swift_bridgeObjectRetain();
    v70 = (_QWORD *)MEMORY[0x24BEE4B00];
    v71 = v140;
    v133 = v64;
    do
    {
      v136 = v67;
      sub_23FC0EDD8(v68, (uint64_t)v64, _s19SystemResponseEventVMa);
      v72 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
      v72(v55, v64, v71);
      v73 = (uint64_t)v64;
      v74 = (uint64_t)v61;
      sub_23FC0EDD8(v73, (uint64_t)v61, _s19SystemResponseEventVMa);
      swift_isUniquelyReferenced_nonNull_native();
      v144 = v70;
      sub_23FC84C70();
      if (__OFADD__(v70[2], (v76 & 1) == 0))
      {
        __break(1u);
        JUMPOUT(0x23FCF5DB4);
      }
      v77 = v75;
      v78 = v76;
      sub_23FBFD684(&qword_256F62898);
      v79 = sub_23FD75200();
      v39 = v142;
      if ((v79 & 1) != 0)
      {
        sub_23FC84C70();
        if ((v78 & 1) != (v81 & 1))
        {
          sub_23FD753C8();
          __break(1u);
          JUMPOUT(0x23FCF5DD4);
        }
        v77 = v80;
      }
      v70 = v144;
      if ((v78 & 1) != 0)
      {
        v61 = (char *)v74;
        sub_23FCF6654(v74, v144[7] + v77 * v69, _s19SystemResponseEventVMa);
      }
      else
      {
        v144[(v77 >> 6) + 8] |= 1 << v77;
        v72((char *)(v70[6] + *(_QWORD *)(v39 + 72) * v77), v55, v140);
        v61 = (char *)v74;
        sub_23FC0F380(v74, v70[7] + v77 * v69, _s19SystemResponseEventVMa);
        v82 = v70[2];
        v83 = __OFADD__(v82, 1);
        v84 = v82 + 1;
        if (v83)
        {
          __break(1u);
          JUMPOUT(0x23FCF5DBCLL);
        }
        v70[2] = v84;
        v70 = v144;
      }
      swift_bridgeObjectRelease();
      v71 = v140;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v55, v140);
      v64 = v133;
      sub_23FBFEF18((uint64_t)v133, _s19SystemResponseEventVMa);
      v68 += v69;
      v67 = v136 - 1;
    }
    while (v136 != 1);
    swift_bridgeObjectRelease();
    a2 = v101;
  }
  else
  {
    v70 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  swift_bridgeObjectRetain();
  v85 = sub_23FCF4CBC(a2, (uint64_t)v70);
  swift_bridgeObjectRelease();
  v86 = v113;
  sub_23FD724DC();
  swift_bridgeObjectRetain_n();
  v87 = sub_23FD72BE4();
  v88 = sub_23FD74F3C();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = (uint8_t *)swift_slowAlloc();
    v90 = swift_slowAlloc();
    v144 = (_QWORD *)v90;
    *(_DWORD *)v89 = 136315138;
    v91 = swift_bridgeObjectRetain();
    v92 = MEMORY[0x242678AA4](v91, v134);
    v94 = v93;
    swift_bridgeObjectRelease();
    v143 = sub_23FC9DC40(v92, v94, (uint64_t *)&v144);
    sub_23FD75044();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v87, v88, "Generated statement steps for system prompt resolutions: %s", v89, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v90, -1, -1);
    MEMORY[0x2426798D8](v89, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v114 + 8))(v86, v115);
  v95 = (uint64_t)v135;
  if (*(_QWORD *)(v85 + 16))
  {
    v96 = v85 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    v136 = *(_QWORD *)(v102 + 72);
    v133 = (char *)v85;
    swift_bridgeObjectRetain();
    sub_23FC0EDD8(v96, v95, _s23StatementStepEvaluationOMa);
    sub_23FC0EDD8(v95, v139, _s23StatementStepEvaluationOMa);
    v97 = (char *)&loc_23FCF58EC + dword_23FCF5DD4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  v98 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  return v98;
}

uint64_t sub_23FCF5DF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v3 + 16) && (sub_23FC84C70(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = _s23StatementStepEvaluationOMa(0);
    sub_23FC0EDD8(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a1, _s23StatementStepEvaluationOMa);
    v9 = a1;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = _s23StatementStepEvaluationOMa(0);
    v9 = a1;
    v10 = 1;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, v10, 1, v11);
}

void sub_23FCF5E8C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint8_t *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint8_t *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  uint8_t *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;

  v97 = a3;
  v101 = a2;
  v4 = sub_23FD733E8();
  MEMORY[0x24BDAC7A8](v4, v5);
  v93 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v91 = (char **)((char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_23FBFD684(&qword_256F60018);
  MEMORY[0x24BDAC7A8](v10, v11);
  v92 = (uint8_t *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = _s26PromptStatementStepBuilderVMa(0);
  MEMORY[0x24BDAC7A8](v90, v13);
  v89 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_23FD73418();
  v100 = *(_QWORD *)(v98 - 8);
  v16 = MEMORY[0x24BDAC7A8](v98, v15);
  v86 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v94 = (char *)&v86 - v19;
  v20 = sub_23FD72BF0();
  v95 = *(_QWORD *)(v20 - 8);
  v96 = v20;
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v25);
  v99 = (char *)&v86 - v26;
  v27 = sub_23FBFD684(&qword_256F5FD00);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23FD71474();
  v32 = *(_QWORD *)(v31 - 8);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v88 = (char *)&v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v36);
  v38 = (char *)&v86 - v37;
  v39 = _s19SystemResponseEventVMa(0);
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v43 = (char *)&v86 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v44);
  v46 = (char *)&v86 - v45;
  sub_23FD7340C();
  sub_23FCC3C74((uint64_t)v38, v101);
  v47 = *(void (**)(char *, uint64_t))(v32 + 8);
  v101 = v31;
  v47(v38, v31);
  v48 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v30, 1, v39);
  v87 = v47;
  if (v48 == 1)
  {
    sub_23FBFEF74((uint64_t)v30, &qword_256F5FD00);
    sub_23FD724DC();
    v49 = v100;
    v50 = v94;
    v51 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v94, a1, v98);
    v52 = sub_23FD72BE4();
    v53 = sub_23FD74F54();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v93 = (char *)swift_slowAlloc();
      v103 = v93;
      *(_DWORD *)v54 = 136315138;
      v92 = v54 + 4;
      v55 = v88;
      sub_23FD7340C();
      sub_23FCA5434();
      v56 = v101;
      v57 = sub_23FD75344();
      v59 = v58;
      v87(v55, v56);
      v102 = sub_23FC9DC40(v57, v59, (uint64_t *)&v103);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v94, v98);
      _os_log_impl(&dword_23FBF8000, v52, v53, "Cannot find a response event for a system prompt resolution with systemResponseEventId=%s", v54, 0xCu);
      v60 = v93;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v60, -1, -1);
      MEMORY[0x2426798D8](v54, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v99, v96);
    v83 = v97;
    v84 = _s23StatementStepEvaluationOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v83, 1, 1, v84);
  }
  else
  {
    v61 = (uint64_t)v89;
    v62 = v100;
    sub_23FC0F380((uint64_t)v30, (uint64_t)v46, _s19SystemResponseEventVMa);
    sub_23FC0EDD8((uint64_t)v46, (uint64_t)v43, _s19SystemResponseEventVMa);
    v63 = (uint64_t)v93;
    sub_23FD733F4();
    v64 = v91;
    sub_23FCA84E0(v63, v91);
    v65 = v92;
    sub_23FCA7D20((uint64_t)v43, (uint64_t)v64, (uint64_t)v92);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v65, 1, v90) == 1)
    {
      v99 = v46;
      sub_23FBFEF74((uint64_t)v65, &qword_256F60018);
      sub_23FD724DC();
      v66 = v62;
      v67 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      v68 = v86;
      v69 = v98;
      v67(v86, a1, v98);
      v70 = sub_23FD72BE4();
      v71 = sub_23FD74F54();
      v72 = os_log_type_enabled(v70, v71);
      v73 = v96;
      if (v72)
      {
        v74 = swift_slowAlloc();
        v94 = v24;
        v75 = v74;
        v93 = (char *)swift_slowAlloc();
        v103 = v93;
        *(_DWORD *)v75 = 136315138;
        v91 = (_QWORD *)(v75 + 4);
        v92 = (uint8_t *)v75;
        v76 = v88;
        sub_23FD7340C();
        sub_23FCA5434();
        v77 = v101;
        v78 = sub_23FD75344();
        v80 = v79;
        v87(v76, v77);
        v102 = sub_23FC9DC40(v78, v80, (uint64_t *)&v103);
        sub_23FD75044();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v86, v69);
        v81 = v92;
        _os_log_impl(&dword_23FBF8000, v70, v71, "Cannot create a statement step builder for systemResponseEventId=%s", v92, 0xCu);
        v82 = v93;
        swift_arrayDestroy();
        MEMORY[0x2426798D8](v82, -1, -1);
        MEMORY[0x2426798D8](v81, -1, -1);

        (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v69);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v24, v73);
      }
      sub_23FBFEF18((uint64_t)v99, _s19SystemResponseEventVMa);
      v85 = _s23StatementStepEvaluationOMa(0);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v97, 1, 1, v85);
    }
    else
    {
      sub_23FC0F380((uint64_t)v65, v61, _s26PromptStatementStepBuilderVMa);
      sub_23FCA6E54(v97);
      sub_23FBFEF18(v61, _s26PromptStatementStepBuilderVMa);
      sub_23FBFEF18((uint64_t)v46, _s19SystemResponseEventVMa);
    }
  }
}

uint64_t _s29SystemPromptResponseRetrieverCMa()
{
  return objc_opt_self();
}

void sub_23FCF6654(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23FBFF158(a1, a2, a3);
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23FBFF0A0();
}

void sub_23FCF6680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = sub_23FD731FC();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v32 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v31 = (char *)v28 - v8;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v28[1] = v1;
    v37 = MEMORY[0x24BEE4AF8];
    sub_23FC9B624(0, v9, 0);
    v10 = sub_23FCFBD70(a1);
    if ((v10 & 0x8000000000000000) == 0)
    {
      v12 = v10;
      if (v10 < 1 << *(_BYTE *)(a1 + 32))
      {
        v13 = v11;
        v14 = a1 + 64;
        v29 = a1 + 64;
        v30 = a1;
        while ((*(_QWORD *)(v14 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
        {
          if (v13 != *(_DWORD *)(a1 + 36))
            goto LABEL_20;
          v16 = v33;
          v15 = v34;
          v17 = *(_QWORD *)(a1 + 48) + *(_QWORD *)(v33 + 72) * v12;
          v18 = v31;
          (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v31, v17, v34);
          v19 = v32;
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v32, v18, v15);
          v20 = sub_23FD731F0();
          v35 = v21;
          v36 = v20;
          (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
          v22 = v37;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FC9B624(0, *(_QWORD *)(v22 + 16) + 1, 1);
            v22 = v37;
          }
          v24 = *(_QWORD *)(v22 + 16);
          v23 = *(_QWORD *)(v22 + 24);
          a1 = v30;
          if (v24 >= v23 >> 1)
          {
            sub_23FC9B624(v23 > 1, v24 + 1, 1);
            v22 = v37;
          }
          *(_QWORD *)(v22 + 16) = v24 + 1;
          v25 = v22 + 16 * v24;
          v26 = v35;
          *(_QWORD *)(v25 + 32) = v36;
          *(_QWORD *)(v25 + 40) = v26;
          if ((uint64_t)v12 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_21;
          v14 = v29;
          if ((*(_QWORD *)(v29 + 8 * (v12 >> 6)) & (1 << v12)) == 0)
            goto LABEL_22;
          if (v13 != *(_DWORD *)(a1 + 36))
            goto LABEL_23;
          v27 = sub_23FD750B0();
          if (!--v9)
            return;
          v12 = v27;
          if ((v27 & 0x8000000000000000) == 0)
          {
            v13 = *(_DWORD *)(a1 + 36);
            if (v27 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
    }
LABEL_24:
    __break(1u);
  }
}

uint64_t sub_23FCF6900(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  int64_t v36;
  _QWORD v39[2];
  uint64_t v40;

  v35 = a3 + 56;
  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 56);
  v36 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x24BEE4AF8];
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * i);
    v15 = v14[1];
    v39[0] = *v14;
    v39[1] = v15;
    swift_bridgeObjectRetain();
    a1(&v40, v39);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    v16 = v40;
    v17 = *(_QWORD *)(v40 + 16);
    v18 = *(_QWORD *)(v8 + 16);
    if (__OFADD__(v18, v17))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v18 + v17 > *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23FC99270();
      v8 = v19;
    }
    if (*(_QWORD *)(v16 + 16))
    {
      v20 = *(_QWORD *)(v8 + 16);
      v21 = (*(_QWORD *)(v8 + 24) >> 1) - v20;
      v22 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
      if (v21 < v17)
        goto LABEL_45;
      v23 = *(_QWORD *)(v22 - 8);
      v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v25 = *(_QWORD *)(v23 + 72);
      v26 = v8 + v24 + v25 * v20;
      v27 = v16 + v24;
      v28 = v25 * v17;
      v29 = v26 + v28;
      v30 = v27 + v28;
      if (v27 < v29 && v26 < v30)
        goto LABEL_49;
      swift_arrayInitWithCopy();
      if (v17)
      {
        v32 = *(_QWORD *)(v8 + 16);
        v11 = __OFADD__(v32, v17);
        v33 = v32 + v17;
        if (v11)
          goto LABEL_47;
        *(_QWORD *)(v8 + 16) = v33;
      }
    }
    else if (v17)
    {
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = __OFADD__(v7++, 1);
    if (v11)
      goto LABEL_46;
    if (v7 >= v36)
      goto LABEL_41;
    v12 = *(_QWORD *)(v35 + 8 * v7);
    if (!v12)
      break;
LABEL_17:
    v6 = (v12 - 1) & v12;
  }
  v13 = v7 + 1;
  if (v7 + 1 >= v36)
    goto LABEL_41;
  v12 = *(_QWORD *)(v35 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v7 + 2;
  if (v7 + 2 >= v36)
    goto LABEL_41;
  v12 = *(_QWORD *)(v35 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v7 + 3;
  if (v7 + 3 >= v36)
    goto LABEL_41;
  v12 = *(_QWORD *)(v35 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v7 + 4;
  if (v7 + 4 >= v36)
  {
LABEL_41:
    swift_release();
    return v8;
  }
  v12 = *(_QWORD *)(v35 + 8 * v13);
  if (v12)
  {
LABEL_16:
    v7 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v36)
      goto LABEL_41;
    v12 = *(_QWORD *)(v35 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_17;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  result = sub_23FD75278();
  __break(1u);
  return result;
}

void sub_23FCF6C28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v16[5];

  v2 = sub_23FD74120();
  v3 = *(_QWORD *)(v2 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_23FBFF180();
  v6 = v5 - v4;
  sub_23FC93224(v5 - v4, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v7 = _s22StatementStepEvaluatorCMa();
  v16[3] = v7;
  v16[4] = &off_251012098;
  v16[0] = swift_allocObject();
  _s22TaskCandidateEvaluatorCMa();
  v8 = sub_23FBFF1C4();
  v9 = sub_23FCA67B0((uint64_t)v16, v7);
  MEMORY[0x24BDAC7A8](v9, v9);
  v11 = (_QWORD *)((char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  v13 = *v11;
  v14 = (_QWORD *)(v8
                 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator);
  v14[3] = v7;
  v14[4] = &off_251012098;
  *v14 = v13;
  sub_23FC93224(v8 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_toolbox, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  sub_23FC6264C();
}

uint64_t sub_23FCF6D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, _QWORD);
  uint64_t v124;
  char v125;
  BOOL v126;
  uint64_t v127;
  char v128;
  char v129;
  uint64_t v130;
  char v131;
  _QWORD *v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  char v140;
  uint64_t v141;
  char v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  void (*v153)(uint64_t, unint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  void (*v156)(unint64_t, uint64_t);
  uint64_t (*v157)(uint64_t, uint64_t);
  uint64_t *v158;
  uint64_t (*v159)(uint64_t, uint64_t);
  uint64_t v160;
  void (*v161)(uint64_t, _QWORD *, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(_QWORD *, uint64_t);
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t (*v180)(uint64_t, uint64_t);
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t);
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(uint64_t, unint64_t, _QWORD);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(_QWORD, _QWORD, _QWORD);
  void (*v212)(uint64_t, uint64_t, _QWORD);
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, unint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t, uint64_t, uint64_t);
  _QWORD *v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  int64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void (*v258)(uint64_t, uint64_t, uint64_t);
  uint64_t v259;
  void (*v260)(_QWORD, _QWORD, _QWORD);
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void (*v266)(uint64_t, uint64_t, uint64_t);
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  uint64_t *v274;
  uint64_t result;
  uint64_t v276;
  uint64_t (*v277)(uint64_t, _QWORD);
  os_log_t v278;
  int v279;
  _QWORD *v280;
  uint64_t v281;
  __int128 v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  int v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  int v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  uint64_t v309;
  int v310;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  _QWORD *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  _QWORD *v342;
  uint64_t v343;
  uint64_t v344;
  void (*v345)(_QWORD, _QWORD, _QWORD);
  uint64_t v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;

  sub_23FC061F0();
  v349 = v2;
  v350 = v3;
  v289 = v4;
  v6 = v5;
  v290 = v7;
  v339 = type metadata accessor for FeedbackLearning.ActionValue(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  v293 = v10;
  v320 = sub_23FBFD684(&qword_256F629A0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFF218();
  sub_23FBFEFAC(v19);
  v20 = sub_23FD74120();
  sub_23FBFF0B8(v20, (uint64_t)&v328);
  v297 = v21;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFEFE0();
  v296 = v24;
  v325 = sub_23FBFD684(&qword_256F629A8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v31, v32);
  sub_23FBFF218();
  sub_23FBFEFAC(v33);
  v34 = sub_23FD7157C();
  sub_23FBFF0B8(v34, (uint64_t)&v313);
  v285 = v35;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v38);
  v39 = sub_23FD72BF0();
  sub_23FBFF0B8(v39, (uint64_t)&v322);
  v292 = v40;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v41, v42);
  sub_23FBFEFE0();
  v295 = v43;
  sub_23FBFD684(qword_254346A10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v44, v45);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v46);
  v47 = sub_23FD71C84();
  sub_23FBFF0B8(v47, (uint64_t)&v339);
  v306 = v48;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v49, v50);
  sub_23FC100D4();
  v53 = v51 - v52;
  MEMORY[0x24BDAC7A8](v54, v55);
  sub_23FBFF218();
  sub_23FBFEFAC(v56);
  v57 = sub_23FD73A0C();
  sub_23FBFF0B8(v57, (uint64_t)&v336);
  v304 = v58;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v59, v60);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v61);
  v62 = sub_23FD73514();
  v63 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62, v64);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v65, v66);
  sub_23FBFF218();
  v334 = v67;
  sub_23FC10050();
  v68 = sub_23FD730F4();
  v343 = *(_QWORD *)(v68 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v69, v70);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v71, v72);
  sub_23FC0FFF4();
  v333 = v73;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v74, v75);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v76, v77);
  sub_23FBFF218();
  sub_23FBFEFAC(v78);
  v346 = sub_23FD71474();
  v342 = *(_QWORD **)(v346 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v79, v80);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v81, v82);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v83, v84);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v85, v86);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v87, v88);
  sub_23FBFF218();
  v338 = (unint64_t)v89;
  sub_23FC10050();
  v90 = sub_23FD73C7C();
  v344 = *(_QWORD *)(v90 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v91, v92);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v93, v94);
  sub_23FC0FFF4();
  v340 = v95;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v96, v97);
  sub_23FC0FFF4();
  v331 = v98;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v99, v100);
  sub_23FBFF218();
  v330 = v101;
  sub_23FC10050();
  sub_23FD7409C();
  sub_23FCFC024();
  v335 = v102;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v103, v104);
  sub_23FC06128();
  v337 = sub_23FD740CC();
  v105 = *(_QWORD **)(v337 - 8);
  MEMORY[0x24BDAC7A8](v6, v106);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  v109 = MEMORY[0x24BDAC7A8](v107, v108);
  v111 = (char *)&v276 - v110;
  v348 = MEMORY[0x24BEE4B08];
  v112 = *(_QWORD *)(v109 + 16);
  v341 = v68;
  v345 = (void (*)(_QWORD, _QWORD, _QWORD))v90;
  if (v112)
  {
    v301 = v53;
    sub_23FC102C4();
    v115 = v113 + v114;
    LODWORD(v329) = *MEMORY[0x24BE56AF8];
    v310 = *MEMORY[0x24BE56BA0];
    v308 = *MEMORY[0x24BE56B98];
    v300 = *MEMORY[0x24BE53328];
    v288 = *MEMORY[0x24BE53320];
    v327 = v105[9];
    v336 = v105[2];
    v283 = v113;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v116 = 136315394;
    v282 = v116;
    v281 = MEMORY[0x24BEE4AD8] + 8;
    v313 = (_QWORD *)MEMORY[0x24BEE4B00];
    v332 = (_QWORD *)MEMORY[0x24BEE4B00];
    v309 = v62;
    v117 = v63;
    v326 = v63;
    v118 = v334;
    v315 = v1;
    v119 = (uint64_t *)v337;
    v328 = v105;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t *))v336)(v111, v115, v119);
      sub_23FD740A8();
      v120 = v335;
      v121 = (*(uint64_t (**)(uint64_t, uint64_t))(v335 + 88))(v0, v1);
      if (v121 == (_DWORD)v329)
        break;
      if (v121 == v310)
      {
        sub_23FCFBEC4();
        v133 = v343;
        v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(v343 + 32);
        v135 = v311;
        v117 = v341;
        v134(v311, v0, v341);
        v105 = v314;
        sub_23FCFC08C();
        sub_23FC5AE8C(v312, v135, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 16));
        swift_isUniquelyReferenced_nonNull_native();
        sub_23FCFBFAC();
        sub_23FCFBF9C();
        if (v126)
          goto LABEL_102;
        v138 = v136;
        v139 = v137;
        sub_23FBFD684(&qword_256F629B0);
        sub_23FCFBEEC();
        sub_23FCFBFE8();
        if ((v140 & 1) != 0)
        {
          sub_23FC84C70();
          if ((v139 & 1) != (v142 & 1))
            goto LABEL_105;
          v138 = v141;
        }
        v143 = v347;
        if ((v139 & 1) != 0)
        {
          v119 = (uint64_t *)v343;
          v144 = v347[7] + *(_QWORD *)(v343 + 72) * v138;
          v145 = v341;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v343 + 40))(v144, v312, v341);
        }
        else
        {
          v160 = sub_23FCFBE58();
          v161(v160, v314, v346);
          v162 = v143[7] + *(_QWORD *)(v343 + 72) * v138;
          v145 = v341;
          v134(v162, v312, v341);
          v163 = v143[2];
          v126 = __OFADD__(v163, 1);
          v164 = v163 + 1;
          if (v126)
            goto LABEL_104;
          v143[2] = v164;
          v119 = (uint64_t *)v343;
        }
        v313 = v347;
        sub_23FCE4C74();
        sub_23FCFC0A0();
        v165(v314, v346);
        ((void (*)(uint64_t, uint64_t))v119[1])(v311, v145);
        sub_23FCFBEB0();
        v90 = (uint64_t)v345;
        goto LABEL_27;
      }
      if (v121 == v308)
      {
        sub_23FCFBEC4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 32))(v118, v0, v309);
        v146 = v303;
        sub_23FD73508();
        v147 = v305;
        sub_23FD739F4();
        sub_23FCA9784(v146, *(uint64_t (**)(uint64_t, _QWORD))(v304 + 8));
        v148 = v306;
        v149 = v301;
        v150 = v307;
        sub_23FBFF1E4(v301, v147, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v306 + 16));
        v151 = (*(uint64_t (**)(uint64_t, uint64_t))(v148 + 88))(v149, v150);
        if (v151 == v300)
        {
          sub_23FCFBF94(v149);
          sub_23FCFBF94(v147);
          goto LABEL_32;
        }
        v166 = v151;
        v119 = *(uint64_t **)(v148 + 8);
        ((void (*)(uint64_t, uint64_t))v119)(v149, v150);
        ((void (*)(uint64_t, uint64_t))v119)(v147, v150);
        if (v166 == v288)
        {
LABEL_32:
          v167 = v299;
          v168 = v334;
          sub_23FD734F0();
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v167, 1, v346) == 1)
          {
            sub_23FBFEF74(v167, qword_254346A10);
            v169 = v295;
            sub_23FD724DC();
            sub_23FCFBFDC();
            v171 = v309;
            sub_23FBFF1E4(v302, v168, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v170 + 16));
            v172 = sub_23FCFC080((uint64_t)&v319);
            ((void (*)(uint64_t, char *, uint64_t))v336)(v172, v111, v337);
            v173 = sub_23FD72BE4();
            v174 = sub_23FD74F54();
            v175 = v174;
            if (os_log_type_enabled(v173, v174))
            {
              v176 = swift_slowAlloc();
              v280 = (_QWORD *)swift_slowAlloc();
              v347 = v280;
              *(_DWORD *)v176 = v282;
              v177 = v284;
              v279 = v175;
              v278 = v173;
              sub_23FD734D8();
              sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
              sub_23FCFC080((uint64_t)&v313);
              sub_23FD75344();
              sub_23FCFBEE4(v177, *(uint64_t (**)(uint64_t, uint64_t))(v285 + 8));
              *(_QWORD *)(v176 + 4) = sub_23FCFBF64();
              sub_23FC0AAF8();
              sub_23FCFBFDC();
              v277 = *(uint64_t (**)(uint64_t, _QWORD))(v178 + 8);
              sub_23FCA9784(v302, v277);
              *(_WORD *)(v176 + 12) = 2080;
              v179 = v294;
              sub_23FD74048();
              sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
              sub_23FD75344();
              sub_23FCFC0A0();
              sub_23FCFBEE4(v179, v180);
              *(_QWORD *)(v176 + 14) = sub_23FCFBF64();
              sub_23FC0AAF8();
              ((void (*)(uint64_t, uint64_t))v328[1])(v168, v337);
              _os_log_impl(&dword_23FBF8000, v278, (os_log_type_t)v279, "Cannot extract actionEventId from statement result in %s, eventId=%s", (uint8_t *)v176, 0x16u);
              sub_23FCFC080((uint64_t)&v305);
              swift_arrayDestroy();
              sub_23FBFEFA0();
            }

            v185 = v171;
            v105 = v328;
            v280 = (_QWORD *)v328[1];
            ((void (*)(uint64_t, uint64_t))v280)(v168, v337);
            sub_23FCFBFDC();
            v187 = *(void (**)(uint64_t, uint64_t))(v186 + 8);
            v187(v302, v185);
            sub_23FCA9784(v169, *(uint64_t (**)(uint64_t, _QWORD))(v292 + 8));
            v188 = v334;
            v187(v334, v185);
            v119 = (uint64_t *)v337;
            ((void (*)(char *, uint64_t))v280)(v111, v337);
            v117 = v326;
            v118 = v188;
            goto LABEL_28;
          }
          v181 = v167;
          v182 = v342;
          v183 = v298;
          sub_23FBFF1E4(v298, v181, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v342[4]);
          sub_23FBFF1E4(v291, v183, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v182[2]);
          v119 = &v348;
          sub_23FCFC080((uint64_t)&v324);
          sub_23FC8560C();
          sub_23FCFBF94(v168);
          sub_23FCFBF94(v298);
        }
        sub_23FCFBFDC();
        v117 = v184;
        v118 = v334;
        sub_23FCA9784(v334, *(uint64_t (**)(uint64_t, _QWORD))(v184 + 8));
        v105 = v328;
        sub_23FCFBEB0();
LABEL_28:
        v1 = v315;
        goto LABEL_29;
      }
      v157 = (uint64_t (*)(uint64_t, uint64_t))v105[1];
      v158 = (uint64_t *)v337;
      sub_23FC15950((uint64_t)v111, v157);
      v159 = *(uint64_t (**)(uint64_t, uint64_t))(v120 + 8);
      v119 = v158;
      v105 = v328;
      sub_23FCFBEE4(v0, v159);
LABEL_29:
      v115 += v327;
      if (!--v112)
      {
        sub_23FCFBFFC();
        v189 = v332;
        goto LABEL_39;
      }
    }
    sub_23FCFBEC4();
    v122 = v344;
    v123 = *(void (**)(uint64_t, uint64_t, _QWORD))(v344 + 32);
    v117 = v330;
    sub_23FCFC030(v330);
    v105 = (_QWORD *)v338;
    sub_23FCFC08C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v331, v117, v90);
    swift_isUniquelyReferenced_nonNull_native();
    sub_23FCFBFAC();
    sub_23FCFBF9C();
    if (v126)
      goto LABEL_101;
    v127 = v124;
    v128 = v125;
    sub_23FBFD684(&qword_256F629B8);
    sub_23FCFBEEC();
    sub_23FCFBFE8();
    if ((v129 & 1) != 0)
    {
      sub_23FC84C70();
      if ((v128 & 1) != (v131 & 1))
        goto LABEL_105;
      v127 = v130;
    }
    v132 = v347;
    if ((v128 & 1) != 0)
    {
      v119 = (uint64_t *)v344;
      v90 = (uint64_t)v345;
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v344 + 40))(v347[7] + *(_QWORD *)(v344 + 72) * v127, v331, v345);
    }
    else
    {
      v152 = sub_23FCFBE58();
      v153(v152, v338, v346);
      v90 = (uint64_t)v345;
      v123(v132[7] + *(_QWORD *)(v344 + 72) * v127, v331, v345);
      v154 = v132[2];
      v126 = __OFADD__(v154, 1);
      v155 = v154 + 1;
      if (v126)
        goto LABEL_103;
      v132[2] = v155;
      v119 = (uint64_t *)v344;
    }
    v332 = v347;
    sub_23FCE4C74();
    sub_23FCFC0A0();
    v156(v338, v346);
    ((void (*)(uint64_t, uint64_t))v119[1])(v330, v90);
    sub_23FCFBEB0();
LABEL_27:
    v118 = v334;
    goto LABEL_28;
  }
  v189 = (_QWORD *)MEMORY[0x24BEE4B00];
  v313 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_39:
  sub_23FC5AAE8();
  sub_23FCFB130();
  v191 = v190;
  v332 = v189;
  swift_bridgeObjectRelease();
  v192 = *(_QWORD *)(v191 + 16);
  if (v192)
  {
    v329 = 0;
    v347 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23FCFBFCC();
    sub_23FC9B390();
    v193 = sub_23FD3C370(v191);
    if ((v193 & 0x8000000000000000) == 0 && (v194 = v193, sub_23FCFBF2C(), v196 ^ v126))
    {
      v197 = v191 + 64;
      v330 = v191 + 64;
      v331 = v191;
      v198 = v346;
      while ((*(_QWORD *)(v197 + 8 * (v194 >> 6)) & (1 << v194)) != 0)
      {
        if (*(_DWORD *)(v191 + 36) != (_DWORD)v195)
          goto LABEL_91;
        v336 = 1 << v194;
        v337 = v194 >> 6;
        v334 = v192;
        v335 = v195;
        v199 = v325;
        v200 = v321;
        v201 = v321 + *(int *)(v325 + 48);
        v202 = v342;
        sub_23FCFC048(v321, *(_QWORD *)(v191 + 48) + v342[9] * v194);
        v203 = *(_QWORD *)(v191 + 56);
        v204 = v344;
        v338 = *(_QWORD *)(v344 + 72);
        v205 = *(void (**)(uint64_t, unint64_t, _QWORD))(v344 + 16);
        v205(v201, v203 + v338 * v194, v345);
        v206 = v322;
        sub_23FCFC048(v322, v200);
        v205(v206 + *(int *)(v199 + 48), v201, v345);
        v207 = v206;
        v208 = v323;
        sub_23FBFEEEC(v207, v323, &qword_256F629A8);
        sub_23FBFEF74(v200, &qword_256F629A8);
        v209 = v324;
        v210 = v324 + *(int *)(v199 + 48);
        sub_23FCFC048(v324, v208);
        v211 = v345;
        sub_23FCFC030(v210);
        v212 = *(void (**)(uint64_t, uint64_t, _QWORD))(v204 + 32);
        v212(v340, v210, v211);
        ((void (*)(uint64_t, uint64_t))v202[1])(v209, v198);
        sub_23FBFEF74(v208, &qword_256F629A8);
        v213 = (uint64_t)v347;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FCFC004();
          sub_23FC9B390();
          v213 = (uint64_t)v347;
        }
        v215 = *(_QWORD *)(v213 + 16);
        v214 = *(_QWORD *)(v213 + 24);
        v191 = v331;
        if (v215 >= v214 >> 1)
        {
          sub_23FCFBF3C(v214);
          sub_23FC9B390();
          v213 = (uint64_t)v347;
        }
        *(_QWORD *)(v213 + 16) = v215 + 1;
        sub_23FC102C4();
        v217 = v213 + v216 + v215 * v338;
        v90 = (uint64_t)v345;
        v212(v217, v340, v345);
        v347 = (_QWORD *)v213;
        sub_23FCFBF54();
        if ((uint64_t)v194 >= v218)
          goto LABEL_92;
        v197 = v330;
        if ((*(_QWORD *)(v330 + 8 * v337) & v336) == 0)
          goto LABEL_93;
        if (*(_DWORD *)(v191 + 36) != (_DWORD)v335)
          goto LABEL_94;
        v219 = sub_23FD750B0();
        v192 = v334 - 1;
        if (v334 == 1)
        {
          sub_23FC58ADC();
          goto LABEL_59;
        }
        v194 = v219;
        if ((v219 & 0x8000000000000000) == 0)
        {
          v195 = *(unsigned int *)(v191 + 36);
          if (v219 < 1 << *(_BYTE *)(v191 + 32))
            continue;
        }
        goto LABEL_89;
      }
    }
    else
    {
LABEL_89:
      __break(1u);
    }
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
  }
  else
  {
    sub_23FC58ADC();
    v213 = MEMORY[0x24BEE4AF8];
LABEL_59:
    sub_23FC5AAE8();
    sub_23FCFB130();
    v221 = v220;
    swift_bridgeObjectRelease();
    v222 = *(_QWORD *)(v221 + 16);
    v223 = v346;
    v330 = v213;
    if (!v222)
    {
      sub_23FC58ADC();
      v244 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_79:
      sub_23FCFBF74(v296, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v297 + 16));
      v250 = *(_QWORD *)(v213 + 16);
      if (v250)
      {
        v342 = v244;
        v347 = (_QWORD *)MEMORY[0x24BEE4AF8];
        sub_23FCFC058();
        sub_23FC102C4();
        v252 = v213 + v251;
        v254 = *(_QWORD *)(v253 + 72);
        v345 = *(void (**)(_QWORD, _QWORD, _QWORD))(v253 + 16);
        v346 = v254;
        v255 = v90;
        v256 = v293;
        v257 = v286;
        do
        {
          v258 = v345;
          v345(v257, v252, v255);
          v258(v256, v257, v255);
          swift_storeEnumTagMultiPayload();
          _s13ActionCreatedCMa(0);
          v259 = sub_23FBFF1C4();
          *(_QWORD *)(v259
                    + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
          sub_23FC748BC(v256, v259 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, type metadata accessor for FeedbackLearning.ActionValue);
          (*(void (**)(uint64_t, uint64_t))(v344 + 8))(v257, v255);
          sub_23FD75170();
          sub_23FD75194();
          sub_23FD751A0();
          sub_23FD7517C();
          v252 += v346;
          --v250;
        }
        while (v250);
        v260 = (void (*)(_QWORD, _QWORD, _QWORD))v347;
        sub_23FCFC098();
        v244 = v342;
      }
      else
      {
        swift_bridgeObjectRelease();
        v260 = (void (*)(_QWORD, _QWORD, _QWORD))MEMORY[0x24BEE4AF8];
      }
      v261 = v244[2];
      v262 = MEMORY[0x24BEE4AF8];
      v263 = v343;
      if (v261)
      {
        v345 = v260;
        v347 = (_QWORD *)MEMORY[0x24BEE4AF8];
        sub_23FCFC058();
        sub_23FC102C4();
        v265 = (uint64_t)v244 + v264;
        v346 = *(_QWORD *)(v263 + 72);
        v266 = *(void (**)(uint64_t, uint64_t, uint64_t))(v263 + 16);
        v267 = v293;
        v268 = v341;
        v269 = v287;
        do
        {
          v266(v269, v265, v268);
          v266(v267, v269, v268);
          swift_storeEnumTagMultiPayload();
          _s13ActionCreatedCMa(0);
          v270 = sub_23FBFF1C4();
          *(_QWORD *)(v270
                    + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
          sub_23FC748BC(v267, v270 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, type metadata accessor for FeedbackLearning.ActionValue);
          sub_23FC15950(v269, *(uint64_t (**)(uint64_t, uint64_t))(v263 + 8));
          sub_23FD75170();
          sub_23FD75194();
          v263 = v343;
          sub_23FD751A0();
          sub_23FD7517C();
          v265 += v346;
          --v261;
        }
        while (v261);
        v262 = (unint64_t)v347;
        v260 = v345;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23FCFBFFC();
      v347 = v260;
      sub_23FC170C8(v262);
      v271 = (uint64_t)v347;
      v272 = _s14ActionExecutedVMa(0);
      v273 = v290;
      v290[3] = v272;
      v273[4] = (uint64_t)&off_25100A710;
      v274 = sub_23FBFDDEC(v273);
      sub_23FCFBF74((uint64_t)v274, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v297 + 32));
      *(uint64_t *)((char *)v274 + *(int *)(v272 + 20)) = v271;
      return swift_bridgeObjectRelease();
    }
    v347 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23FCFBFCC();
    sub_23FC9B364();
    v224 = sub_23FD3C370(v221);
    if ((v224 & 0x8000000000000000) == 0)
    {
      v225 = v224;
      sub_23FCFBF2C();
      if (v196 != v126)
      {
        v227 = v221 + 64;
        v334 = v221;
        v331 = v221 + 64;
        v228 = v342;
        while ((*(_QWORD *)(v227 + 8 * (v225 >> 6)) & (1 << v225)) != 0)
        {
          if ((_DWORD)v226 != *(_DWORD *)(v221 + 36))
            goto LABEL_97;
          v337 = 1 << v225;
          v338 = v225 >> 6;
          v335 = v222;
          v336 = v226;
          v229 = v320;
          v230 = v316;
          v231 = v316 + *(int *)(v320 + 48);
          v232 = (void (*)(uint64_t, unint64_t, uint64_t))v228[2];
          v232(v316, *(_QWORD *)(v221 + 48) + v228[9] * v225, v223);
          v233 = *(_QWORD *)(v221 + 56);
          v234 = v343;
          v340 = *(_QWORD *)(v343 + 72);
          v235 = v341;
          sub_23FCFC0B4(v231, v233 + v340 * v225);
          v236 = v317;
          v232(v317, v230, v346);
          sub_23FCFC0B4(v236 + *(int *)(v229 + 48), v231);
          v237 = v236;
          v238 = v318;
          sub_23FBFEEEC(v237, v318, &qword_256F629A0);
          sub_23FBFEF74(v230, &qword_256F629A0);
          v239 = *(int *)(v229 + 48);
          v240 = v319;
          v241 = v319 + v239;
          v242 = v238 + v239;
          v232(v319, v238, v346);
          sub_23FCFC0B4(v241, v242);
          v243 = *(void (**)(uint64_t, uint64_t, uint64_t))(v234 + 32);
          v223 = v346;
          v243(v333, v241, v235);
          sub_23FBFEFFC(v240, (uint64_t (*)(uint64_t, uint64_t))v228[1]);
          sub_23FBFEF74(v238, &qword_256F629A0);
          v244 = v347;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FCFC004();
            sub_23FC9B364();
            v244 = v347;
          }
          v246 = v244[2];
          v245 = v244[3];
          if (v246 >= v245 >> 1)
          {
            sub_23FCFBF3C(v245);
            sub_23FC9B364();
            v244 = v347;
          }
          v244[2] = v246 + 1;
          sub_23FC102C4();
          v243((uint64_t)v244 + v247 + v246 * v340, v333, v341);
          v347 = v244;
          v221 = v334;
          sub_23FCFBF54();
          if ((uint64_t)v225 >= v248)
            goto LABEL_98;
          v227 = v331;
          if ((*(_QWORD *)(v331 + 8 * v338) & v337) == 0)
            goto LABEL_99;
          if ((_DWORD)v336 != *(_DWORD *)(v221 + 36))
            goto LABEL_100;
          v249 = sub_23FD750B0();
          v222 = v335 - 1;
          if (v335 == 1)
          {
            sub_23FC58ADC();
            v90 = (uint64_t)v345;
            v213 = v330;
            goto LABEL_79;
          }
          v225 = v249;
          if ((v249 & 0x8000000000000000) == 0)
          {
            v226 = *(unsigned int *)(v221 + 36);
            if (v249 < 1 << *(_BYTE *)(v221 + 32))
              continue;
          }
          goto LABEL_95;
        }
        goto LABEL_96;
      }
    }
  }
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

void sub_23FCF842C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint8_t *v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;

  sub_23FCC2A5C();
  v104 = v1;
  v105 = v0;
  v101 = v2;
  v98 = v3;
  v97 = v4;
  v6 = v5;
  v106 = v7;
  v102 = sub_23FD7157C();
  v100 = *(_QWORD *)(v102 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  v11 = sub_23FBFEFAC(v10);
  v96 = _s33CandidateParameterResolutionStateVMa(v11);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFE0();
  v103 = v14;
  v114 = sub_23FBFD684(&qword_256F61A70);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFEFCC();
  v113 = v17;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v18, v19);
  v112 = (uint64_t)&v96 - v20;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC0FFF4();
  v111 = v23;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FBFF218();
  v110 = v26;
  sub_23FC10050();
  v27 = sub_23FD738B0();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  sub_23FC100D4();
  v32 = (char *)(v30 - v31);
  MEMORY[0x24BDAC7A8](v33, v34);
  v36 = (char *)&v96 - v35;
  v37 = sub_23FD72BF0();
  v120 = *(_QWORD *)(v37 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v38, v39);
  sub_23FC93074();
  sub_23FD724DC();
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v107 = v6;
  v40(v36, v6, v27);
  v41 = sub_23FD72BE4();
  v42 = sub_23FD74F48();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = sub_23FBFEFF4();
    v117 = (uint64_t)v41;
    v44 = (uint8_t *)v43;
    v118 = sub_23FBFEFF4();
    v119 = v37;
    *(_DWORD *)v44 = 136315138;
    v116 = v44 + 4;
    v40(v32, (uint64_t)v36, v27);
    v45 = sub_23FD74C0C();
    v121 = sub_23FCFC03C(v45, v46);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FCFBF84();
    _os_log_impl(&dword_23FBF8000, (os_log_t)v117, v42, "Evaluating resolver request for candidate success: %s", v44, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  sub_23FCFBF84();

  v47 = sub_23FC5F300();
  v48(v47, v37);
  v49 = v107;
  v50 = sub_23FD7388C();
  v51 = *(_QWORD *)(v50 + 16);
  if (v51)
  {
    v122 = MEMORY[0x24BEE4AF8];
    v52 = sub_23FCFBFCC();
    sub_23FC9B624(v52, v53, v54);
    v55 = sub_23FD3C370(v50);
    if ((v55 & 0x8000000000000000) == 0)
    {
      v56 = v55;
      sub_23FCFBF2C();
      if (v58 != v59)
      {
        v60 = v50 + 64;
        v108 = v50 + 64;
        v109 = v50;
        while ((*(_QWORD *)(v60 + 8 * (v56 >> 6)) & (1 << v56)) != 0)
        {
          if ((_DWORD)v57 != *(_DWORD *)(v50 + 36))
            goto LABEL_27;
          v117 = 1 << v56;
          v118 = v56 >> 6;
          v115 = v51;
          v116 = v57;
          v61 = v114;
          v62 = v110;
          v63 = v110 + *(int *)(v114 + 48);
          v64 = *(_QWORD *)(v50 + 48);
          v65 = sub_23FD731FC();
          v119 = *(_QWORD *)(v65 - 8);
          sub_23FCFC050(v62, v64 + *(_QWORD *)(v119 + 72) * v56);
          v66 = *(_QWORD *)(v50 + 56);
          v67 = sub_23FD741B0();
          v68 = *(_QWORD *)(v67 - 8);
          v69 = *(_QWORD *)(v68 + 72);
          v120 = v56;
          sub_23FCFC070(v63, v66 + v69 * v56);
          v70 = v111;
          sub_23FCFC050(v111, v62);
          sub_23FCFC070(v70 + *(int *)(v61 + 48), v63);
          v71 = v112;
          sub_23FBFEEEC(v70, v112, &qword_256F61A70);
          sub_23FBFEF74(v62, &qword_256F61A70);
          v72 = *(int *)(v61 + 48);
          v73 = v113;
          v74 = v113 + v72;
          v75 = v71 + v72;
          sub_23FCFC050(v113, v71);
          sub_23FCFC070(v74, v75);
          v76 = sub_23FD731F0();
          v78 = v77;
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v73, v65);
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v74, v67);
          sub_23FBFEF74(v71, &qword_256F61A70);
          v79 = v122;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FC9B624(0, *(_QWORD *)(v122 + 16) + 1, 1);
            v79 = v122;
          }
          v81 = *(_QWORD *)(v79 + 16);
          v80 = *(_QWORD *)(v79 + 24);
          v82 = v120;
          if (v81 >= v80 >> 1)
          {
            sub_23FC9B624(v80 > 1, v81 + 1, 1);
            v79 = v122;
          }
          *(_QWORD *)(v79 + 16) = v81 + 1;
          v83 = v79 + 16 * v81;
          *(_QWORD *)(v83 + 32) = v76;
          *(_QWORD *)(v83 + 40) = v78;
          v50 = v109;
          sub_23FCFBF54();
          if (v82 >= v84)
            goto LABEL_28;
          v60 = v108;
          if ((*(_QWORD *)(v108 + 8 * v118) & v117) == 0)
            goto LABEL_29;
          if ((_DWORD)v116 != *(_DWORD *)(v50 + 36))
            goto LABEL_30;
          v85 = sub_23FD750B0();
          v51 = v115 - 1;
          if (v115 == 1)
          {
            sub_23FC58D60();
            v49 = v107;
            goto LABEL_23;
          }
          v56 = v85;
          if ((v85 & 0x8000000000000000) == 0)
          {
            v57 = (uint8_t *)*(unsigned int *)(v50 + 36);
            if (v85 < 1 << *(_BYTE *)(v50 + 32))
              continue;
          }
          goto LABEL_31;
        }
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
      }
    }
LABEL_31:
    __break(1u);
  }
  else
  {
    sub_23FC58D60();
    v79 = MEMORY[0x24BEE4AF8];
LABEL_23:
    v86 = sub_23FD73898();
    sub_23FD4BE60(v86);
    v88 = v87;
    swift_bridgeObjectRelease();
    if (v88)
    {
      sub_23FCF6680(v88);
      swift_bridgeObjectRelease();
    }
    v89 = v103;
    sub_23FD73880();
    v90 = v96;
    sub_23FC584E0(v97, v89 + *(int *)(v96 + 20));
    sub_23FC584E0(v98, v89 + *(int *)(v90 + 24));
    v91 = v99;
    sub_23FD73880();
    v92 = sub_23FC15E3C(v91, v101);
    v93 = sub_23FC162FC(v91, v89, v92);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v91, v102);
    sub_23FC174B0();
    v94 = sub_23FC8064C(v79);
    MEMORY[0x24BDAC7A8](v94, v95);
    *(&v96 - 4) = v104;
    *(&v96 - 3) = v49;
    *(&v96 - 2) = v89;
    sub_23FCF6900((void (*)(uint64_t *__return_ptr, _QWORD *))sub_23FCFBD54, (uint64_t)(&v96 - 6), v94);
    swift_bridgeObjectRelease();
    sub_23FC1726C();
    sub_23FBFEF18(v89, _s33CandidateParameterResolutionStateVMa);
    *v106 = v93;
    sub_23FC06000();
  }
}

uint64_t sub_23FCF8B58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  char v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v17 = a3;
  v5 = sub_23FD7157C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  sub_23FD73880();
  sub_23FC0B0C8();
  v19 = a2;
  v20 = v11;
  v21 = v10;
  v22 = v9;
  sub_23FC95298((uint64_t)sub_23FCFBE18, (uint64_t)v18, v12);
  v14 = v13;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *v17 = v14;
  return result;
}

void sub_23FCF8C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  uint64_t v44;
  uint8_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;

  sub_23FCC2A5C();
  v68 = v1;
  v69 = v3;
  v61 = v4;
  v62 = v5;
  v60 = v6;
  v8 = v7;
  v59 = _s33CandidateParameterResolutionStateVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFE0();
  v58 = v11;
  sub_23FC10050();
  v12 = sub_23FD71BB8();
  v65 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC100D4();
  v17 = (char *)(v15 - v16);
  MEMORY[0x24BDAC7A8](v18, v19);
  v64 = (char *)&v58 - v20;
  sub_23FC10050();
  sub_23FD72BF0();
  sub_23FCFC024();
  v63 = v21;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFEFE0();
  v67 = v24;
  sub_23FBFD684(&qword_256F5D538);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FC93074();
  v27 = sub_23FD7157C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  sub_23FC100D4();
  v32 = v30 - v31;
  MEMORY[0x24BDAC7A8](v33, v34);
  v36 = (char *)&v58 - v35;
  v37 = v8;
  sub_23FC0AC90();
  v38 = sub_23FD72044();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v38) == 1)
  {
    v62 = v2;
    sub_23FBFEF74(v0, &qword_256F5D538);
    sub_23FD724DC();
    v39 = v64;
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
    v40(v64, v37, v66);
    v41 = sub_23FD72BE4();
    v42 = sub_23FD74F54();
    v43 = os_log_type_enabled(v41, v42);
    v44 = v63;
    if (v43)
    {
      v45 = (uint8_t *)sub_23FBFEFF4();
      sub_23FBFEFF4();
      *(_DWORD *)v45 = 136315138;
      v46 = v39;
      v47 = v66;
      v40(v17, (uint64_t)v46, v66);
      v48 = sub_23FD74C0C();
      v70 = sub_23FCFC03C(v48, v49);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v47);
      _os_log_impl(&dword_23FBF8000, v41, v42, "Cannot extract statementId to evaluate a tool resolution: %s", v45, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v66);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v67, v62);
    v57 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_23FD72020();
    v50 = sub_23FC5F300();
    v51(v50, v38);
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v36, v32, v27);
    v52 = v58;
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v58, v36, v27);
    v53 = v59;
    sub_23FC584E0(v60, v52 + *(int *)(v59 + 20));
    sub_23FC584E0(v61, v52 + *(int *)(v53 + 24));
    v54 = sub_23FD3D69C((uint64_t)v36);
    MEMORY[0x24BDAC7A8](v54, v55);
    *(&v58 - 2) = v52;
    *(&v58 - 1) = (uint64_t)v36;
    sub_23FC95298((uint64_t)sub_23FCFBD38, (uint64_t)(&v58 - 4), v54);
    v57 = v56;
    sub_23FC58D60();
    sub_23FBFEF18(v52, _s33CandidateParameterResolutionStateVMa);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
  }
  *v69 = v57;
  sub_23FC06000();
}

void sub_23FCF9030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FCFBED4();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FCFBE38(v3, v8);
  v4 = sub_23FCFBEF8();
  if ((_DWORD)v4)
  {
    sub_23FCFC078(v4, _s23StatementStepEvaluationOMa);
    v6 = 1;
  }
  else
  {
    sub_23FCFBF04(v4, v5, _s18ToolStepEvaluationVMa);
    v6 = 0;
  }
  v7 = _s18ToolStepEvaluationVMa(0);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v6, 1, v7);
  sub_23FC09258();
}

void sub_23FCF90B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FCFBED4();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FCFBE38(v3, v8);
  v4 = sub_23FCFBEF8();
  if ((_DWORD)v4 == 3)
  {
    sub_23FCFBF04(v4, v5, _s19ValueStepEvaluationVMa);
    v6 = 0;
  }
  else
  {
    sub_23FCFC078(v4, _s23StatementStepEvaluationOMa);
    v6 = 1;
  }
  v7 = _s19ValueStepEvaluationVMa(0);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v6, 1, v7);
  sub_23FC09258();
}

void sub_23FCF913C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FCFBED4();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FCFBE38(v3, v8);
  v4 = sub_23FCFBEF8();
  if ((_DWORD)v4 == 1)
  {
    sub_23FCFBF04(v4, v5, _s23ParameterStepEvaluationVMa);
    v6 = 0;
  }
  else
  {
    sub_23FCFC078(v4, _s23StatementStepEvaluationOMa);
    v6 = 1;
  }
  v7 = _s23ParameterStepEvaluationVMa(0);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v6, 1, v7);
  sub_23FC09258();
}

void sub_23FCF91C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  unint64_t v28;
  char v29;
  BOOL v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;

  sub_23FC061F0();
  v3 = v2;
  v4 = sub_23FD7157C();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFF180();
  v9 = v8 - v7;
  v10 = sub_23FD7409C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_23FC0610C();
  v13 = sub_23FD738B0();
  v54 = *(_QWORD *)(v13 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFCC();
  v52 = v16;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFF218();
  v51 = v19;
  v53 = sub_23FC5F584();
  MEMORY[0x24BDAC7A8](v53, v20);
  sub_23FC93074();
  v21 = *(_QWORD *)(v3 + 16);
  if (!v21)
  {
    v25 = MEMORY[0x24BEE4B00];
LABEL_17:
    v41 = sub_23FCF9AE0(v25);
    sub_23FC0AAF8();
    v55 = (_QWORD *)v41;
    swift_retain();
    sub_23FCF9DB4((uint64_t *)&v55);
    swift_release();
    sub_23FC060D4();
    return;
  }
  sub_23FC102C4();
  v23 = v3 + v22;
  v50 = *MEMORY[0x24BE56C58];
  v47 = *(_QWORD *)(v24 + 72);
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  v25 = MEMORY[0x24BEE4B00];
  v26 = v53;
  v42 = v11;
  v43 = v10;
  v44 = v9;
  v48 = v0;
  while (1)
  {
    v49(v0, v23, v26);
    sub_23FD740A8();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v1, v10) != v50)
    {
      sub_23FCFC018(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      goto LABEL_14;
    }
    sub_23FCFC018(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 96));
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32);
    v27(v51, v1, v13);
    sub_23FD73880();
    sub_23FC5AE8C(v52, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 16));
    swift_isUniquelyReferenced_nonNull_native();
    v55 = (_QWORD *)v25;
    sub_23FC84CD4();
    sub_23FCFBF9C();
    if (v30)
      break;
    v31 = v28;
    v32 = v29;
    sub_23FBFD684(&qword_256F61A48);
    if ((sub_23FCFBEEC() & 1) != 0)
    {
      sub_23FC84CD4();
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v31 = v33;
    }
    v35 = v55;
    if ((v32 & 1) != 0)
    {
      sub_23FC5AE8C(v55[7] + *(_QWORD *)(v54 + 72) * v31, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 40));
      v36 = v44;
    }
    else
    {
      v55[(v31 >> 6) + 8] |= 1 << v31;
      v36 = v44;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 16))(v35[6] + *(_QWORD *)(v45 + 72) * v31, v44, v46);
      v27(v35[7] + *(_QWORD *)(v54 + 72) * v31, v52, v13);
      v37 = v35[2];
      v30 = __OFADD__(v37, 1);
      v38 = v37 + 1;
      if (v30)
        goto LABEL_19;
      v35[2] = v38;
    }
    v25 = (uint64_t)v55;
    sub_23FCE4C74();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v36, v46);
    sub_23FBFEFFC(v51, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
    v11 = v42;
    v10 = v43;
LABEL_14:
    v26 = v53;
    v0 = v48;
    v39 = sub_23FC5F300();
    v40(v39, v53);
    v23 += v47;
    if (!--v21)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_23FD753C8();
  __break(1u);
  swift_release();
  __break(1u);
}

void sub_23FCF954C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  sub_23FC061F0();
  v5 = v4;
  v6 = sub_23FD71C84();
  v7 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v80 = v7;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC06128();
  v78 = sub_23FD72044();
  v81 = *(_QWORD *)(v78 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC0610C();
  v12 = sub_23FD7409C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_23FBFF180();
  v17 = v16 - v15;
  sub_23FBFD684(&qword_256F62998);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FC0A0A8();
  sub_23FD71BB8();
  sub_23FCFC024();
  v65 = v20;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFEFCC();
  v73 = v23;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v24, v25);
  v71 = (char *)&v55 - v26;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FBFF218();
  v61 = v29;
  v30 = sub_23FC5F584();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FBFEFE0();
  v76 = v32;
  v72 = *(_QWORD *)(v5 + 16);
  if (v72)
  {
    sub_23FC102C4();
    v69 = v5 + v33;
    v68 = *MEMORY[0x24BE56C40];
    v77 = *MEMORY[0x24BE532E0];
    v35 = *(_QWORD *)(v34 + 72);
    v70 = v34;
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
    v67 = v35;
    v55 = v5;
    sub_23FC5AAE8();
    v36 = 0;
    v74 = MEMORY[0x24BEE4AF8];
    v37 = v65;
    v64 = v30;
    v59 = v12;
    v58 = v13;
    v57 = v17;
    v56 = v2;
    v60 = v3;
    while (1)
    {
      v75 = v36;
      v66(v76, v69 + v67 * v36, v30);
      sub_23FD740A8();
      v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v17, v12);
      if (v38 == v68)
      {
        (*(void (**)(uint64_t, uint64_t))(v13 + 96))(v17, v12);
        v63 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
        v63(v71, v17, v3);
        v39 = *(_QWORD *)(sub_23FD71BAC() + 16);
        if (v39)
        {
          sub_23FC102C4();
          v62 = v40;
          v42 = v40 + v41;
          v44 = *(_QWORD *)(v43 + 72);
          v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
          while (1)
          {
            v17 = v78;
            v45(v1, v42, v78);
            sub_23FD72038();
            v13 = v79;
            v12 = v80;
            v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 88))(v0, v79);
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v13);
            sub_23FBFEFFC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8));
            if (v46 == v77)
              break;
            v42 += v44;
            if (!--v39)
            {
              sub_23FCFC098();
              sub_23FCFBF10();
              v2 = v56;
              v30 = v64;
              v37 = v65;
              goto LABEL_11;
            }
          }
          sub_23FCFC098();
          v2 = v56;
          v3 = v60;
          v63((char *)v56, (uint64_t)v71, v60);
          sub_23FCFBF10();
          v30 = v64;
          v37 = v65;
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
LABEL_11:
        v3 = v60;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v71, v60);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
      }
      v47 = 1;
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, v47, 1, v3);
      sub_23FC15950(v76, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v3) == 1)
      {
        sub_23FBFEF74(v2, &qword_256F62998);
      }
      else
      {
        v48 = v61;
        sub_23FCFC0AC(v61, v2);
        sub_23FCFC0AC(v73, v48);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v49 = v74;
        }
        else
        {
          sub_23FC9925C();
          v49 = v53;
        }
        v50 = *(_QWORD *)(v49 + 16);
        if (v50 >= *(_QWORD *)(v49 + 24) >> 1)
        {
          sub_23FC9925C();
          v49 = v54;
        }
        *(_QWORD *)(v49 + 16) = v50 + 1;
        v37 = v65;
        sub_23FC102C4();
        v74 = v51;
        sub_23FCFC0AC(v51 + v52 + *(_QWORD *)(v37 + 72) * v50, v73);
        v30 = v64;
      }
      v36 = v75 + 1;
      if (v75 + 1 == v72)
      {
        sub_23FCFBFFC();
        break;
      }
    }
  }
  sub_23FC060D4();
}

uint64_t sub_23FCF99DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23FD74120();
  sub_23FBFF0E4(v1);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator);
  return swift_deallocClassInstance();
}

uint64_t sub_23FCF9A2C()
{
  return _s22TaskCandidateEvaluatorCMa();
}

uint64_t _s22TaskCandidateEvaluatorCMa()
{
  uint64_t result;

  result = qword_256F628D8;
  if (!qword_256F628D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FCF9A6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74120();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

size_t sub_23FCF9AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23FBFD684(&qword_256F5F908);
  v3 = *(_QWORD *)(sub_23FD738B0() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_23FCFBA70(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_23FC08F30();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23FCF9BF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v5)
    goto LABEL_13;
  if (v5 <= 0)
    goto LABEL_11;
  sub_23FBFD684(&qword_256F5EDD0);
  v8 = *(_QWORD *)(sub_23FC5F584() - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = j__malloc_size(v11);
  if (!v9)
    goto LABEL_15;
  if (v12 - v10 == 0x8000000000000000 && v9 == -1)
    goto LABEL_16;
  v11[2] = v5;
  v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
LABEL_11:
  if (v4 != a3)
  {
    v14 = sub_23FC5F584();
    sub_23FC9ABF0(a2 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a3, v5);
LABEL_13:
    sub_23FC6264C();
    return;
  }
LABEL_17:
  __break(1u);
}

void sub_23FCF9CF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      sub_23FBFD684(&qword_256F5F8E8);
      v8 = (_QWORD *)swift_allocObject();
      v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 16);
    }
    if (v4 != a3)
    {
      sub_23FC9AC08(a2 + 16 * a3, v5, (unint64_t)(v8 + 4));
      return;
    }
    goto LABEL_10;
  }
}

void sub_23FCF9DB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_23FD738B0() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23FD3C53C();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23FCF9E34((int64_t)v6);
  *a1 = v3;
}

void sub_23FCF9E34(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(void);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(void);
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t *v74;
  char *v75;
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  void (*v86)(void);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  void (*v93)(void);
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t *v135;
  uint64_t v136;
  char *v137;
  unint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  void (*v157)(void);
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  void (*v162)(char *, uint64_t);
  void (*v163)(char *, uint64_t, uint64_t, char *);
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  _QWORD *v169;
  uint64_t v170;
  void (*v171)(void);
  char *v172;
  char *v173;
  uint64_t v174;
  _QWORD *v175;

  v2 = v1;
  v167 = sub_23FD7157C();
  v160 = *(_QWORD *)(v167 - 8);
  v5 = MEMORY[0x24BDAC7A8](v167, v4);
  v166 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v165 = (char *)&v148 - v8;
  v170 = sub_23FD738B0();
  v175 = *(_QWORD **)(v170 - 8);
  v10 = MEMORY[0x24BDAC7A8](v170, v9);
  v156 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v172 = (char *)&v148 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v164 = (char *)&v148 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v168 = (char *)&v148 - v19;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = sub_23FD75338();
  if (v21 >= v20)
  {
    if (v20 < 0)
      goto LABEL_139;
    if (v20)
      sub_23FCFA924(0, v20, 1, (_QWORD *)a1);
    return;
  }
  v152 = v21;
  sub_23FD30754(v20 / 2);
  v150 = v22;
  v158 = v23;
  v151 = v20;
  if (v20 <= 0)
    goto LABEL_102;
  v24 = 0;
  v25 = (char *)MEMORY[0x24BEE4AF8];
  v169 = (_QWORD *)a1;
  while (1)
  {
    v26 = (uint64_t)v24;
    v27 = (uint64_t)v24 + 1;
    v155 = v25;
    v157 = v24;
    if ((uint64_t)v24 + 1 < v20)
    {
      v153 = *(_QWORD *)a1;
      v28 = v153;
      v173 = (char *)v175[9];
      v29 = v173;
      v174 = (uint64_t)v24 + 1;
      v30 = (void (*)(void))v175[2];
      v31 = v170;
      v30();
      v32 = v28 + (_QWORD)v29 * v26;
      v33 = v164;
      v171 = v30;
      ((void (*)(char *, uint64_t, uint64_t))v30)(v164, v32, v31);
      v34 = v165;
      sub_23FD73880();
      v35 = v166;
      sub_23FD73880();
      LODWORD(v163) = sub_23FD7154C();
      v36 = *(void (**)(char *, uint64_t))(v160 + 8);
      v37 = v167;
      v36(v35, v167);
      v38 = v34;
      v26 = (uint64_t)v157;
      v162 = v36;
      v36(v38, v37);
      v39 = v173;
      v40 = (void (*)(char *, uint64_t))v175[1];
      v40(v33, v31);
      v161 = (char *)v40;
      v40(v168, v31);
      v27 = v26 + 2;
      if (v26 + 2 < v20)
      {
        v149 = v2;
        v159 = (_QWORD)v39 * v174;
        v41 = v153;
        v154 = (_QWORD)v39 * v27;
        while (1)
        {
          v42 = v20;
          v43 = v27;
          v44 = v168;
          v46 = v170;
          v45 = v171;
          ((void (*)(char *, uint64_t, uint64_t))v171)(v168, v41 + v154, v170);
          v47 = v164;
          ((void (*)(char *, uint64_t, uint64_t))v45)(v164, v41 + v159, v46);
          v48 = v165;
          sub_23FD73880();
          v49 = v166;
          sub_23FD73880();
          LODWORD(v174) = sub_23FD7154C();
          v50 = v49;
          v51 = v167;
          v52 = v162;
          v162(v50, v167);
          v52(v48, v51);
          v53 = (void (*)(char *, uint64_t))v161;
          ((void (*)(char *, uint64_t))v161)(v47, v46);
          v53(v44, v46);
          if (((v163 ^ v174) & 1) != 0)
            break;
          v27 = v43 + 1;
          v39 = v173;
          v41 += (uint64_t)v173;
          v20 = v42;
          if (v27 >= v42)
          {
            v27 = v42;
            a1 = (int64_t)v169;
            v2 = v149;
            v26 = (uint64_t)v157;
            goto LABEL_11;
          }
        }
        a1 = (int64_t)v169;
        v2 = v149;
        v27 = v43;
        v26 = (uint64_t)v157;
        v20 = v42;
        v39 = v173;
      }
LABEL_11:
      v25 = v155;
      if ((v163 & 1) != 0)
      {
        if (v27 < v26)
          goto LABEL_140;
        if (v26 < v27)
        {
          v162 = (void (*)(char *, uint64_t))v20;
          v54 = 0;
          v55 = (_QWORD)v39 * (v27 - 1);
          v56 = v27 * (_QWORD)v39;
          v57 = v26 * (_QWORD)v39;
          v171 = (void (*)(void))v27;
          do
          {
            if (v26 != v27 + v54 - 1)
            {
              v58 = v153;
              if (!v153)
                goto LABEL_146;
              v59 = v2;
              v60 = v153 + v57;
              v174 = v153 + v55;
              v61 = v170;
              v163 = (void (*)(char *, uint64_t, uint64_t, char *))v175[4];
              v163(v156, v153 + v57, v170, v25);
              if (v57 < v55 || v60 >= v58 + v56)
              {
                swift_arrayInitWithTakeFrontToBack();
                v39 = v173;
              }
              else
              {
                v39 = v173;
                if (v57 != v55)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, uint64_t))v163)(v174, v156, v61);
              v25 = v155;
              v2 = v59;
              v27 = (uint64_t)v171;
            }
            ++v26;
            --v54;
            v55 -= (uint64_t)v39;
            v56 -= (uint64_t)v39;
            v57 += (uint64_t)v39;
          }
          while (v26 < v27 + v54);
          a1 = (int64_t)v169;
          v26 = (uint64_t)v157;
          v20 = (uint64_t)v162;
        }
      }
    }
    if (v27 < v20)
    {
      if (__OFSUB__(v27, v26))
        goto LABEL_138;
      if (v27 - v26 < v152)
      {
        if (__OFADD__(v26, v152))
          goto LABEL_141;
        if (v26 + v152 >= v20)
          v63 = v20;
        else
          v63 = v26 + v152;
        if (v63 < v26)
        {
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (v27 != v63)
        {
          v149 = v2;
          v64 = (char *)v175[9];
          v159 = v175[2];
          v65 = (_QWORD)v64 * (v27 - 1);
          v161 = v64;
          v66 = v27 * (_QWORD)v64;
          v67 = v170;
          v154 = v63;
          do
          {
            v68 = 0;
            v171 = (void (*)(void))v27;
            v162 = (void (*)(char *, uint64_t))v66;
            v163 = (void (*)(char *, uint64_t, uint64_t, char *))v65;
            while (1)
            {
              v69 = *(_QWORD *)a1;
              v173 = (char *)(v66 + v68);
              v174 = v26;
              v70 = (char *)(v66 + v68 + v69);
              v71 = v168;
              v72 = (void (*)(char *, uint64_t, uint64_t))v159;
              ((void (*)(char *, char *, uint64_t, char *))v159)(v168, v70, v67, v25);
              v73 = v65 + v68 + v69;
              v74 = (uint64_t *)a1;
              v75 = v164;
              v72(v164, v73, v67);
              v76 = v165;
              sub_23FD73880();
              v77 = v166;
              sub_23FD73880();
              LOBYTE(v69) = sub_23FD7154C();
              v78 = *(void (**)(char *, uint64_t))(v160 + 8);
              v79 = v77;
              v80 = v167;
              v78(v79, v167);
              v81 = v76;
              v67 = v170;
              v78(v81, v80);
              v82 = (void (*)(char *, uint64_t))v175[1];
              v82(v75, v67);
              v82(v71, v67);
              if ((v69 & 1) == 0)
                break;
              v83 = *v74;
              if (!*v74)
                goto LABEL_144;
              v66 = (uint64_t)v162;
              v65 = (uint64_t)v163;
              v84 = (char *)v163 + v83 + v68;
              v85 = (void (*)(char *, char *, uint64_t))v175[4];
              v85(v172, (char *)v162 + v83 + v68, v67);
              swift_arrayInitWithTakeFrontToBack();
              v85(v84, v172, v67);
              v68 -= (uint64_t)v161;
              v26 = v174 + 1;
              v86 = v171;
              a1 = (int64_t)v169;
              if (v171 == (void (*)(void))(v174 + 1))
                goto LABEL_44;
            }
            v86 = v171;
            a1 = (int64_t)v74;
            v66 = (uint64_t)v162;
            v65 = (uint64_t)v163;
LABEL_44:
            v27 = (uint64_t)v86 + 1;
            v65 += (uint64_t)v161;
            v66 += (uint64_t)v161;
            v26 = (uint64_t)v157;
          }
          while (v27 != v154);
          v27 = v154;
          v2 = v149;
        }
      }
    }
    if (v27 < v26)
      goto LABEL_137;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v171 = (void (*)(void))v27;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v25 = v155;
    }
    else
    {
      sub_23FD3C278(0, *((_QWORD *)v155 + 2) + 1, 1, v155);
      v25 = v139;
    }
    v89 = *((_QWORD *)v25 + 2);
    v88 = *((_QWORD *)v25 + 3);
    v90 = v89 + 1;
    if (v89 >= v88 >> 1)
    {
      sub_23FD3C278(v88 > 1, v89 + 1, 1, v25);
      v25 = v140;
    }
    *((_QWORD *)v25 + 2) = v90;
    v91 = v25 + 32;
    v92 = &v25[16 * v89 + 32];
    v93 = v171;
    *(_QWORD *)v92 = v26;
    *((_QWORD *)v92 + 1) = v93;
    if (v89)
      break;
    v90 = 1;
LABEL_94:
    a1 = (int64_t)v169;
    v20 = v169[1];
    v24 = v171;
    if ((uint64_t)v171 >= v20)
      goto LABEL_103;
  }
  while (1)
  {
    v94 = v90 - 1;
    if (v90 >= 4)
    {
      v99 = &v91[16 * v90];
      v100 = *((_QWORD *)v99 - 8);
      v101 = *((_QWORD *)v99 - 7);
      v105 = __OFSUB__(v101, v100);
      v102 = v101 - v100;
      if (v105)
        goto LABEL_122;
      v104 = *((_QWORD *)v99 - 6);
      v103 = *((_QWORD *)v99 - 5);
      v105 = __OFSUB__(v103, v104);
      v97 = v103 - v104;
      v98 = v105;
      if (v105)
        goto LABEL_123;
      v106 = v90 - 2;
      v107 = &v91[16 * v90 - 32];
      v109 = *(_QWORD *)v107;
      v108 = *((_QWORD *)v107 + 1);
      v105 = __OFSUB__(v108, v109);
      v110 = v108 - v109;
      if (v105)
        goto LABEL_124;
      v105 = __OFADD__(v97, v110);
      v111 = v97 + v110;
      if (v105)
        goto LABEL_126;
      if (v111 >= v102)
      {
        v129 = &v91[16 * v94];
        v131 = *(_QWORD *)v129;
        v130 = *((_QWORD *)v129 + 1);
        v105 = __OFSUB__(v130, v131);
        v132 = v130 - v131;
        if (v105)
          goto LABEL_132;
        v122 = v97 < v132;
        goto LABEL_83;
      }
    }
    else
    {
      if (v90 != 3)
      {
        v123 = *((_QWORD *)v25 + 4);
        v124 = *((_QWORD *)v25 + 5);
        v105 = __OFSUB__(v124, v123);
        v116 = v124 - v123;
        v117 = v105;
        goto LABEL_77;
      }
      v96 = *((_QWORD *)v25 + 4);
      v95 = *((_QWORD *)v25 + 5);
      v105 = __OFSUB__(v95, v96);
      v97 = v95 - v96;
      v98 = v105;
    }
    if ((v98 & 1) != 0)
      goto LABEL_125;
    v106 = v90 - 2;
    v112 = &v91[16 * v90 - 32];
    v114 = *(_QWORD *)v112;
    v113 = *((_QWORD *)v112 + 1);
    v115 = __OFSUB__(v113, v114);
    v116 = v113 - v114;
    v117 = v115;
    if (v115)
      goto LABEL_127;
    v118 = &v91[16 * v94];
    v120 = *(_QWORD *)v118;
    v119 = *((_QWORD *)v118 + 1);
    v105 = __OFSUB__(v119, v120);
    v121 = v119 - v120;
    if (v105)
      goto LABEL_129;
    if (__OFADD__(v116, v121))
      goto LABEL_131;
    if (v116 + v121 >= v97)
    {
      v122 = v97 < v121;
LABEL_83:
      if (v122)
        v94 = v106;
      goto LABEL_85;
    }
LABEL_77:
    if ((v117 & 1) != 0)
      goto LABEL_128;
    v125 = &v91[16 * v94];
    v127 = *(_QWORD *)v125;
    v126 = *((_QWORD *)v125 + 1);
    v105 = __OFSUB__(v126, v127);
    v128 = v126 - v127;
    if (v105)
      goto LABEL_130;
    if (v128 < v116)
      goto LABEL_94;
LABEL_85:
    v133 = v94 - 1;
    if (v94 - 1 >= v90)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!*v169)
      goto LABEL_145;
    v134 = v25;
    v135 = (uint64_t *)&v91[16 * v133];
    v136 = *v135;
    v137 = &v91[16 * v94];
    a1 = *((_QWORD *)v137 + 1);
    sub_23FCFAC10(*v169 + v175[9] * *v135, *v169 + v175[9] * *(_QWORD *)v137, *v169 + v175[9] * a1, v158);
    if (v2)
      break;
    if (a1 < v136)
      goto LABEL_119;
    if (v94 > *((_QWORD *)v134 + 2))
      goto LABEL_120;
    *v135 = v136;
    *(_QWORD *)&v91[16 * v133 + 8] = a1;
    v138 = *((_QWORD *)v134 + 2);
    if (v94 >= v138)
      goto LABEL_121;
    v90 = v138 - 1;
    memmove(&v91[16 * v94], v137 + 16, 16 * (v138 - 1 - v94));
    v25 = v134;
    *((_QWORD *)v134 + 2) = v138 - 1;
    if (v138 <= 2)
      goto LABEL_94;
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v151 >= -1)
    goto LABEL_115;
  __break(1u);
LABEL_102:
  v25 = (char *)MEMORY[0x24BEE4AF8];
  v90 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_103:
  if (v90 >= 2)
  {
    v141 = *(_QWORD *)a1;
    while (1)
    {
      a1 = v90 - 2;
      if (v90 < 2)
        break;
      if (!v141)
        goto LABEL_147;
      v142 = (uint64_t)v25;
      v143 = *(_QWORD *)&v25[16 * a1 + 32];
      v144 = *(_QWORD *)&v25[16 * v90 + 24];
      sub_23FCFAC10(v141 + v175[9] * v143, v141 + v175[9] * *(_QWORD *)&v25[16 * v90 + 16], v141 + v175[9] * v144, v158);
      if (v2)
        goto LABEL_100;
      if (v144 < v143)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FD3C35C(v142);
        v142 = v147;
      }
      if ((unint64_t)a1 >= *(_QWORD *)(v142 + 16))
        goto LABEL_135;
      v145 = (_QWORD *)(v142 + 32 + 16 * a1);
      *v145 = v143;
      v145[1] = v144;
      v146 = *(_QWORD *)(v142 + 16);
      if (v90 > v146)
        goto LABEL_136;
      memmove((void *)(v142 + 32 + 16 * (v90 - 1)), (const void *)(v142 + 32 + 16 * v90), 16 * (v146 - v90));
      v25 = (char *)v142;
      *(_QWORD *)(v142 + 16) = v146 - 1;
      v90 = v146 - 1;
      if (v146 <= 2)
        goto LABEL_114;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v151 >= -1)
  {
LABEL_115:
    *(_QWORD *)(v150 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
}

uint64_t sub_23FCFA924(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;

  v48 = a1;
  v7 = sub_23FD7157C();
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v54 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v53 = (char *)&v46 - v12;
  v13 = sub_23FD738B0();
  v63 = *(_QWORD **)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v61 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v52 = (char *)&v46 - v19;
  result = MEMORY[0x24BDAC7A8](v18, v20);
  v51 = (char *)&v46 - v22;
  v60 = a3;
  v47 = a2;
  if (a3 != a2)
  {
    v23 = v63[9];
    v49 = (void (*)(char *, uint64_t, uint64_t))v63[2];
    v50 = v13;
    v24 = v23 * (v60 - 1);
    v57 = v23;
    v25 = v23 * v60;
    while (2)
    {
      v26 = 0;
      v64 = v48;
      v58 = v25;
      v59 = v24;
      do
      {
        v27 = *a4;
        v62 = v25 + v26;
        v28 = v25 + v26 + v27;
        v29 = v51;
        v30 = v49;
        v49(v51, v28, v13);
        v31 = v24 + v26 + v27;
        v32 = v52;
        v30(v52, v31, v13);
        v33 = v53;
        sub_23FD73880();
        v34 = a4;
        v35 = v54;
        sub_23FD73880();
        LOBYTE(v27) = sub_23FD7154C();
        v36 = *(void (**)(char *, uint64_t))(v55 + 8);
        v37 = v35;
        v38 = v56;
        v36(v37, v56);
        v39 = v38;
        a4 = v34;
        v13 = v50;
        v36(v33, v39);
        v40 = (void (*)(char *, uint64_t))v63[1];
        v41 = v32;
        v24 = v59;
        v40(v41, v13);
        v42 = v29;
        v25 = v58;
        result = ((uint64_t (*)(char *, uint64_t))v40)(v42, v13);
        if ((v27 & 1) == 0)
          break;
        v43 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v44 = v43 + v24 + v26;
        v45 = (void (*)(char *, uint64_t, uint64_t))v63[4];
        v45(v61, v43 + v25 + v26, v13);
        swift_arrayInitWithTakeFrontToBack();
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v45)(v44, v61, v13);
        v26 -= v57;
        ++v64;
      }
      while (v60 != v64);
      v24 += v57;
      v25 += v57;
      if (++v60 != v47)
        continue;
      break;
    }
  }
  return result;
}

void sub_23FCFAC10(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  unint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  unint64_t v40;
  void (*v45)(char *);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *);
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  BOOL v61;
  unint64_t v62;
  char *v64;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *);
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v79 = sub_23FD7157C();
  v8 = *(_QWORD *)(v79 - 8);
  v10 = MEMORY[0x24BDAC7A8](v79, v9);
  v78 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v77 = (char *)&v66 - v13;
  v83 = sub_23FD738B0();
  v15 = MEMORY[0x24BDAC7A8](v83, v14);
  v76 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v75 = (char *)&v66 - v18;
  v80 = v19;
  v20 = *(_QWORD *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v21 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v20 == -1)
    goto LABEL_75;
  v23 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1)
    goto LABEL_76;
  v82 = a3;
  v25 = v21 / v20;
  v26 = v23 / v20;
  v74 = v20;
  if (v21 / v20 >= v23 / v20)
  {
    sub_23FC9A474(a2, v23 / v20);
    v27 = (char *)(a4 + v26 * v20);
    if (v26 * v20 < 1 || a1 >= a2)
      goto LABEL_69;
    v69 = -v20;
    v45 = *(void (**)(char *))(v80 + 16);
    v67 = a4;
    v68 = v45;
    v46 = (char *)v82;
    v73 = v8;
    v81 = a1;
    v47 = v83;
    while (1)
    {
      v48 = v46;
      v50 = v68;
      v49 = v69;
      v72 = v48;
      v82 = (unint64_t)&v48[v69];
      v51 = v75;
      v71 = (unint64_t)&v27[v69];
      v68(v75);
      v52 = v76;
      v70 = a2 + v49;
      v50(v76);
      v53 = v77;
      sub_23FD73880();
      v54 = (char *)a2;
      v55 = v78;
      sub_23FD73880();
      LOBYTE(v49) = sub_23FD7154C();
      v56 = *(void (**)(char *, uint64_t))(v8 + 8);
      v57 = v55;
      v58 = v79;
      v56(v57, v79);
      v56(v53, v58);
      v59 = *(void (**)(char *, uint64_t))(v80 + 8);
      v59(v52, v47);
      v59(v51, v47);
      if ((v49 & 1) != 0)
        break;
      v46 = (char *)v82;
      v61 = v72 < v27 || v82 >= (unint64_t)v27;
      a2 = (unint64_t)v54;
      if (v61)
      {
        v27 = (char *)v71;
LABEL_58:
        swift_arrayInitWithTakeFrontToBack();
        a4 = v67;
        v8 = v73;
        v20 = v74;
        v62 = v81;
        goto LABEL_65;
      }
      a4 = v67;
      v8 = v73;
      v20 = v74;
      v62 = v81;
      if (v72 == v27)
      {
        v27 = (char *)v71;
      }
      else
      {
        v27 = (char *)v71;
        swift_arrayInitWithTakeBackToFront();
      }
LABEL_65:
      if ((unint64_t)v27 <= a4 || a2 <= v62)
        goto LABEL_69;
    }
    v46 = (char *)v82;
    if (v72 >= v54 && v82 < (unint64_t)v54)
    {
      v8 = v73;
      v20 = v74;
      v62 = v81;
      a2 = v70;
      if (v72 != v54)
        swift_arrayInitWithTakeBackToFront();
      a4 = v67;
      goto LABEL_65;
    }
    a2 = v70;
    goto LABEL_58;
  }
  sub_23FC9A474(a1, v21 / v20);
  v27 = (char *)(a4 + v25 * v20);
  if (v25 * v20 >= 1 && a2 < v82)
  {
    v72 = *(char **)(v80 + 16);
    v73 = v8;
    v71 = a4 + v25 * v20;
    v29 = v83;
    v30 = v76;
    do
    {
      v81 = a1;
      v31 = v75;
      v32 = v72;
      ((void (*)(char *, unint64_t, uint64_t))v72)(v75, a2, v29);
      ((void (*)(char *, unint64_t, uint64_t))v32)(v30, a4, v29);
      v33 = a2;
      v34 = v77;
      sub_23FD73880();
      v35 = v78;
      sub_23FD73880();
      LOBYTE(v32) = sub_23FD7154C();
      v36 = *(void (**)(char *, uint64_t))(v73 + 8);
      v37 = v35;
      v38 = v79;
      v36(v37, v79);
      v36(v34, v38);
      v39 = *(void (**)(char *, uint64_t))(v80 + 8);
      v39(v30, v29);
      v39(v31, v29);
      if ((v32 & 1) != 0)
      {
        v20 = v74;
        a2 = v33 + v74;
        v40 = v81;
        if (v81 < v33 || v81 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v81 != v33)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v20 = v74;
        v40 = v81;
        if (v81 < a4 || v81 >= a4 + v74)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v81 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        a2 = v33;
        a4 += v20;
      }
      v27 = (char *)v71;
      a1 = v40 + v20;
    }
    while (a4 < v71 && a2 < v82);
  }
LABEL_69:
  v64 = &v27[-a4];
  if (v20 != -1 || v64 != (char *)0x8000000000000000)
  {
    sub_23FC9A474(a4, (uint64_t)v64 / v20);
    return;
  }
LABEL_77:
  __break(1u);
}

void sub_23FCFB130()
{
  uint64_t v0;
  uint64_t isStackAllocationSafe;
  uint64_t v2;

  sub_23FCC2A5C();
  if ((*(_BYTE *)(isStackAllocationSafe + 32) & 0x3Fu) > 0xD)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      sub_23FBFEFF4();
      sub_23FCFBFBC();
      sub_23FCFBE8C();
      sub_23FBFEFA0();
    }
  }
  MEMORY[0x24BDAC7A8](isStackAllocationSafe, v2);
  sub_23FCFBFBC();
  sub_23FCFBE8C();
  if (v0)
    swift_willThrow();
  sub_23FC06000();
}

void sub_23FCFB24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, unint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  BOOL v54;
  _QWORD v55[4];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, unint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;

  sub_23FCC2A5C();
  v55[3] = v3;
  v56 = v0;
  v5 = v4;
  v67 = v6;
  v8 = v7;
  v55[1] = v9;
  v57 = v10;
  v65 = v11;
  v66 = sub_23FBFD684(v11);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = sub_23FC0A0A8();
  v55[2] = v5;
  v15 = v5(v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v55 - v18;
  sub_23FD71474();
  sub_23FCFC024();
  v75 = v20;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFEFCC();
  v72 = v23;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)v55 - v26;
  v58 = 0;
  v59 = (char *)v55 - v26;
  v71 = 0;
  v68 = v8;
  v30 = *(_QWORD *)(v8 + 64);
  v29 = v8 + 64;
  v28 = v30;
  v31 = 1 << *(_BYTE *)(v29 - 32);
  if (v31 < 64)
    v32 = ~(-1 << v31);
  else
    v32 = -1;
  v33 = v32 & v28;
  v63 = v29;
  v64 = (unint64_t)(v31 + 63) >> 6;
  v61 = v16;
  v62 = v15;
  v60 = v19;
  while (2)
  {
    v34 = v71;
    if (v33)
    {
LABEL_6:
      v35 = v15;
      v36 = v16;
      v70 = (v33 - 1) & v33;
      v71 = v34;
      v37 = __clz(__rbit64(v33)) | (v34 << 6);
      goto LABEL_21;
    }
    while (1)
    {
      v38 = v34 + 1;
      if (__OFADD__(v34, 1))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return;
      }
      if (v38 >= v64)
        goto LABEL_32;
      v39 = *(_QWORD *)(v63 + 8 * v38);
      v40 = v34 + 1;
      if (!v39)
      {
        v40 = v34 + 2;
        if (v34 + 2 >= v64)
          goto LABEL_32;
        v39 = *(_QWORD *)(v63 + 8 * v40);
        if (!v39)
        {
          v40 = v34 + 3;
          if (v34 + 3 >= v64)
            goto LABEL_32;
          v39 = *(_QWORD *)(v63 + 8 * v40);
          if (!v39)
          {
            v41 = v34 + 4;
            if (v34 + 4 >= v64)
              goto LABEL_32;
            v39 = *(_QWORD *)(v63 + 8 * v41);
            if (!v39)
            {
              while (1)
              {
                v40 = v41 + 1;
                if (__OFADD__(v41, 1))
                  goto LABEL_34;
                if (v40 >= v64)
                  goto LABEL_32;
                v39 = *(_QWORD *)(v63 + 8 * v40);
                ++v41;
                if (v39)
                  goto LABEL_20;
              }
            }
            v40 = v34 + 4;
          }
        }
      }
LABEL_20:
      v35 = v15;
      v36 = v16;
      v70 = (v39 - 1) & v39;
      v71 = v40;
      v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_21:
      v42 = v68;
      v43 = *(_QWORD *)(v68 + 48);
      v74 = *(_QWORD *)(v75 + 72);
      v44 = *(void (**)(char *, unint64_t, uint64_t))(v75 + 16);
      v44(v27, v43 + v74 * v37, v2);
      v45 = *(_QWORD *)(v42 + 56);
      v46 = *(_QWORD *)(v36 + 72);
      v69 = v37;
      v47 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v47(v19, v45 + v46 * v37, v35);
      v73 = (void (*)(uint64_t, unint64_t, uint64_t))v44;
      v44((char *)v1, (unint64_t)v27, v2);
      v16 = v36;
      v15 = v35;
      v47((char *)(v1 + *(int *)(v66 + 48)), (unint64_t)v19, v35);
      v48 = *v67;
      v34 = v71;
      if (*(_QWORD *)(*v67 + 16))
        break;
LABEL_27:
      sub_23FBFEF74(v1, v65);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v27, v2);
      v33 = v70;
      if (v70)
        goto LABEL_6;
    }
    sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v49 = sub_23FD74BB8();
    v50 = -1 << *(_BYTE *)(v48 + 32);
    v51 = v49 & ~v50;
    if (((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      v16 = v61;
      v15 = v62;
      v27 = v59;
      v19 = v60;
      v34 = v71;
      goto LABEL_27;
    }
    v52 = ~v50;
    while (1)
    {
      v73(v72, *(_QWORD *)(v48 + 48) + v51 * v74, v2);
      sub_23FBFEE2C(&qword_256F5E4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v53 = sub_23FD74BDC();
      sub_23FCFC064();
      if ((v53 & 1) != 0)
        break;
      v51 = (v51 + 1) & v52;
      if (((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
        goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    sub_23FBFEF74(v1, v65);
    v19 = v60;
    v16 = v61;
    v15 = v62;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v62);
    v27 = v59;
    sub_23FCFC064();
    *(_QWORD *)(v57 + ((v69 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v69;
    v54 = __OFADD__(v58++, 1);
    v33 = v70;
    if (!v54)
      continue;
    break;
  }
  __break(1u);
LABEL_32:
  sub_23FCFB6D0();
  sub_23FC06000();
}

void sub_23FCFB6D0()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  BOOL v55;
  uint64_t v56;
  unint64_t *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v70 = v10(0);
  v64 = *(_QWORD *)(v70 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFEFCC();
  v69 = v13;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v14, v15);
  v63 = (uint64_t)&v57 - v16;
  v17 = sub_23FD71474();
  v62 = *(_QWORD *)(v17 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFEFCC();
  v68 = v20;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFF218();
  v61 = v23;
  if (!v5)
    goto LABEL_36;
  if (v3[2] == v5)
  {
    swift_retain();
LABEL_36:
    sub_23FC060D4();
    return;
  }
  sub_23FBFD684(v1);
  v24 = sub_23FD7526C();
  v57 = v9;
  v58 = v7;
  if (v7 < 1)
    v25 = 0;
  else
    v25 = *v9;
  v26 = 0;
  v27 = v24 + 64;
  v59 = v3;
  v60 = v24;
  v28 = v68;
  while (1)
  {
    v67 = v5;
    if (v25)
    {
      v65 = (v25 - 1) & v25;
      v66 = v26;
      v29 = __clz(__rbit64(v25)) | (v26 << 6);
      goto LABEL_25;
    }
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
      goto LABEL_39;
    if (v30 >= v58)
      goto LABEL_36;
    v31 = v57[v30];
    v32 = v26 + 1;
    if (!v31)
    {
      v32 = v26 + 2;
      if (v26 + 2 >= v58)
        goto LABEL_36;
      v31 = v57[v32];
      if (!v31)
      {
        v32 = v26 + 3;
        if (v26 + 3 >= v58)
          goto LABEL_36;
        v31 = v57[v32];
        if (!v31)
          break;
      }
    }
LABEL_24:
    v65 = (v31 - 1) & v31;
    v66 = v32;
    v29 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_25:
    v34 = v61;
    v35 = v62;
    v36 = *(_QWORD *)(v62 + 72);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v62 + 16))(v61, v3[6] + v36 * v29, v17);
    v37 = v3[7];
    v38 = v64;
    v39 = *(_QWORD *)(v64 + 72);
    v40 = v37 + v39 * v29;
    v41 = v17;
    v42 = v63;
    v43 = v70;
    sub_23FC93224(v63, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 16));
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
    v44(v28, v34, v41);
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
    v46 = v42;
    v17 = v41;
    v45(v69, v46, v43);
    v47 = v60;
    sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v48 = sub_23FD74BB8();
    v49 = -1 << *(_BYTE *)(v47 + 32);
    v50 = v48 & ~v49;
    v51 = v50 >> 6;
    if (((-1 << v50) & ~*(_QWORD *)(v27 + 8 * (v50 >> 6))) == 0)
    {
      v53 = 0;
      v54 = (unint64_t)(63 - v49) >> 6;
      while (++v51 != v54 || (v53 & 1) == 0)
      {
        v55 = v51 == v54;
        if (v51 == v54)
          v51 = 0;
        v53 |= v55;
        v56 = *(_QWORD *)(v27 + 8 * v51);
        if (v56 != -1)
        {
          v52 = __clz(__rbit64(~v56)) + (v51 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v52 = __clz(__rbit64((-1 << v50) & ~*(_QWORD *)(v27 + 8 * (v50 >> 6)))) | v50 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v27 + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v52;
    v44(*(_QWORD *)(v47 + 48) + v52 * v36, v68, v17);
    v45(*(_QWORD *)(v47 + 56) + v52 * v39, v69, v70);
    ++*(_QWORD *)(v47 + 16);
    v5 = v67 - 1;
    if (__OFSUB__(v67, 1))
      goto LABEL_38;
    v3 = v59;
    v25 = v65;
    v26 = v66;
    if (v67 == 1)
      goto LABEL_36;
  }
  v33 = v26 + 4;
  if (v26 + 4 >= v58)
    goto LABEL_36;
  v31 = v57[v33];
  if (v31)
  {
    v32 = v26 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v58)
      goto LABEL_36;
    v31 = v57[v32];
    ++v33;
    if (v31)
      goto LABEL_24;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_23FCFBA70(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v8 = sub_23FD738B0();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)&v34 - v16;
  v41 = a4;
  v20 = *(_QWORD *)(a4 + 64);
  v19 = a4 + 64;
  v18 = v20;
  v39 = v19;
  v21 = -1 << *(_BYTE *)(v19 - 32);
  if (-v21 < 64)
    v22 = ~(-1 << -(char)v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  if (!a2)
  {
    v24 = 0;
    a3 = 0;
LABEL_38:
    v33 = v39;
    *a1 = v41;
    a1[1] = v33;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    v24 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v36 = -1 << *(_BYTE *)(v19 - 32);
  v37 = a1;
  v24 = 0;
  v25 = 0;
  v38 = (unint64_t)(63 - v21) >> 6;
  v35 = v38 - 1;
  v40 = a3;
  if (!v23)
    goto LABEL_9;
LABEL_8:
  v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    v31 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v13, *(_QWORD *)(v41 + 56) + v31 * v27, v8);
    v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v32(v17, v13, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(a2, v17, v8);
    a3 = v40;
    if (v25 == v40)
      goto LABEL_37;
    a2 += v31;
    if (v23)
      goto LABEL_8;
LABEL_9:
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v28 >= v38)
      goto LABEL_32;
    v29 = *(_QWORD *)(v39 + 8 * v28);
    if (!v29)
      break;
LABEL_18:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v38)
  {
    v23 = 0;
    v24 = v28;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v39 + 8 * v24);
  if (v29)
    goto LABEL_14;
  v30 = v28 + 2;
  if (v28 + 2 >= v38)
    goto LABEL_32;
  v29 = *(_QWORD *)(v39 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v24 = v28 + 3;
  if (v28 + 3 >= v38)
  {
    v23 = 0;
    v24 = v28 + 2;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v39 + 8 * v24);
  if (v29)
  {
LABEL_14:
    v28 = v24;
    goto LABEL_18;
  }
  v30 = v28 + 4;
  if (v28 + 4 >= v38)
  {
LABEL_32:
    v23 = 0;
LABEL_36:
    a3 = v25;
LABEL_37:
    v21 = v36;
    a1 = v37;
    goto LABEL_38;
  }
  v29 = *(_QWORD *)(v39 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v38)
    {
      v23 = 0;
      v24 = v35;
      goto LABEL_36;
    }
    v29 = *(_QWORD *)(v39 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23FCFBD38@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FD3DD70(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23FCFBD54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23FCF8B58(a1, *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23FCFBD70(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 192;
  for (i = 12; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23FCFBE18@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23FC0C048(a1, v2[3], v2[4], v2[5], a2);
}

uint64_t sub_23FCFBE38@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  return sub_23FCA108C(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t sub_23FCFBE58()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
  return *(_QWORD *)(v1 + 48) + *(_QWORD *)(*(_QWORD *)(v2 - 152) + 72) * v0;
}

void sub_23FCFBE8C()
{
  sub_23FCFB24C();
}

uint64_t sub_23FCFBEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 192));
}

uint64_t sub_23FCFBEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_23FCFBED4()
{
  return _s23StatementStepEvaluationOMa(0);
}

uint64_t sub_23FCFBEE4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FCFBEEC()
{
  return sub_23FD75200();
}

uint64_t sub_23FCFBEF8()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23FCFBF04(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC748BC(v4, v3, a3);
}

BOOL sub_23FCFBF3C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23FCFBF64()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_23FC9DC40(v0, v1, (uint64_t *)(v2 - 112));
}

uint64_t sub_23FCFBF74@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(_QWORD *)(v2 - 256), *(_QWORD *)(v3 - 520));
}

uint64_t sub_23FCFBF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23FCFBF94(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23FCFBFAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
  sub_23FC84C70();
}

uint64_t sub_23FCFBFBC()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_23FC855F0(0, v0, v1);
}

uint64_t sub_23FCFBFCC()
{
  return 0;
}

uint64_t sub_23FCFBFFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCFC004()
{
  return 0;
}

uint64_t sub_23FCFC018@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FCFC030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23FCFC03C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t sub_23FCFC048(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FCFC050(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FCFC058()
{
  return sub_23FD75188();
}

uint64_t sub_23FCFC064()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_23FCFC070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void sub_23FCFC078(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FBFEF18(v2, a2);
}

uint64_t sub_23FCFC080@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_23FCFC08C()
{
  return sub_23FD74048();
}

uint64_t sub_23FCFC098()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FCFC0AC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FCFC0B4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t _s19TaskCompletionVoterVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23FCFC108 + 4 * byte_23FD7B745[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23FCFC13C + 4 * byte_23FD7B740[v4]))();
}

uint64_t sub_23FCFC13C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCFC144(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FCFC14CLL);
  return result;
}

uint64_t sub_23FCFC158(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FCFC160);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23FCFC164(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FCFC16C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19TaskCompletionVoterVMa()
{
  return &_s19TaskCompletionVoterVN;
}

uint64_t sub_23FCFC188@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v28[1] = a2;
  v29 = a3;
  sub_23FBFD684(&qword_256F5F658);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFF180();
  v8 = v7 - v6;
  v9 = _s22ActionStatementOutcomeOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFF180();
  v14 = v13 - v12;
  sub_23FBFD684(&qword_256F629D0);
  sub_23FBFF168();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)v28 - v21;
  v30 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowAction(0) + 24));
  swift_bridgeObjectRetain();
  sub_23FBFD684(&qword_256F5EAD0);
  sub_23FC891DC();
  sub_23FD73988();
  swift_bridgeObjectRelease();
  sub_23FC92F18((uint64_t)v22, (uint64_t)v19, &qword_256F629D0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v9) != 1)
  {
    sub_23FBFEF74((uint64_t)v22, &qword_256F629D0);
    sub_23FCFCBE4((uint64_t)v19, v14, _s22ActionStatementOutcomeOMa);
    v25 = v29;
    sub_23FCFCBE4(v14, v29, _s22ActionStatementOutcomeOMa);
LABEL_6:
    v26 = 0;
    return sub_23FC0AB40(v25, v26);
  }
  sub_23FBFEF74((uint64_t)v19, &qword_256F629D0);
  sub_23FCFC3E4(a1, v8);
  sub_23FBFEF74((uint64_t)v22, &qword_256F629D0);
  v23 = sub_23FCFCC18();
  v24 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, 1, v23);
  v25 = v29;
  if (v24 != 1)
  {
    sub_23FCFCBC4(v8, v29, _s29ActionStatementCreatedOutcomeVMa);
    swift_storeEnumTagMultiPayload();
    sub_23FBFEF18(v8, _s29ActionStatementCreatedOutcomeVMa);
    goto LABEL_6;
  }
  sub_23FBFEF74(v8, &qword_256F5F658);
  v26 = 1;
  return sub_23FC0AB40(v25, v26);
}

void sub_23FCFC3E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FBFF180();
  v9 = v8 - v7;
  sub_23FBFD684(&qword_256F5D940);
  sub_23FBFF168();
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v24 - v16;
  v18 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowAction(0) + 28));
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    sub_23FCFCBC4(v18+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * (v19 - 1), (uint64_t)v17, type metadata accessor for FeedbackLearning.FlowActionEvent);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  sub_23FC0AB40((uint64_t)v17, v20);
  sub_23FC92F18((uint64_t)v17, (uint64_t)v14, &qword_256F5D940);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v14, 1, v4) == 1)
  {
    v21 = sub_23FCFCC18();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 1, 1, v21);
  }
  else
  {
    sub_23FCFCBE4((uint64_t)v14, v9, type metadata accessor for FeedbackLearning.FlowActionEvent);
    v22 = sub_23FD71474();
    sub_23FC12EF8(v22);
    v23 = sub_23FCFCC18();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 0, 1, v23);
    sub_23FBFEF18(v9, type metadata accessor for FeedbackLearning.FlowActionEvent);
  }
  sub_23FBFEF74((uint64_t)v17, &qword_256F5D940);
}

uint64_t sub_23FCFC594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v89 = a1;
  v1 = sub_23FD71684();
  v74 = *(_QWORD *)(v1 - 8);
  v75 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v79 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FD716D8();
  v77 = *(_QWORD *)(v4 - 8);
  v78 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v76 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD71C84();
  v85 = *(_QWORD *)(v7 - 8);
  v86 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v84 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FD73A0C();
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v81 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FBFD684(&qword_256F629D0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FBFD684(qword_254346A10);
  MEMORY[0x24BDAC7A8](v16, v17);
  v88 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_23FD71474();
  v19 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v20);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23FD73514();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23FD7409C();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = (char *)&v72 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  if ((*(unsigned int (**)(char *, uint64_t))(v29 + 88))(v32, v28) == *MEMORY[0x24BE56B98])
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v32, v28);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v32, v23);
    v33 = v88;
    sub_23FD734F0();
    v34 = v87;
    v35 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v33, 1, v87);
    v36 = v23;
    v37 = v24;
    v38 = v27;
    if (v35 == 1)
    {
      sub_23FBFEF74(v88, qword_254346A10);
      v39 = _s22ActionStatementOutcomeOMa(0);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v89, 1, 1, v39);
    }
    else
    {
      v42 = v34;
      v73 = v37;
      v43 = v19;
      v44 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v22, v88, v34);
      v45 = v81;
      sub_23FD73508();
      v46 = v84;
      sub_23FD739F4();
      v47 = v46;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v45, v83);
      v49 = v85;
      v48 = v86;
      v50 = (*(uint64_t (**)(char *, uint64_t))(v85 + 88))(v47, v86);
      if (v50 == *MEMORY[0x24BE53328])
      {
        (*(void (**)(char *, uint64_t))(v49 + 96))(v47, v48);
        v52 = v76;
        v51 = v77;
        v53 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
        v88 = v36;
        v54 = v44;
        v55 = v78;
        v53(v76, v47, v78);
        v56 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
        v57 = (uint64_t)v80;
        v56(v80, v54, v42);
        v58 = _s29ActionStatementSuccessOutcomeVMa(0);
        (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v57 + *(int *)(v58 + 20), v52, v55);
        v59 = _s22ActionStatementOutcomeOMa(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v55);
        v60 = v54;
        v36 = v88;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v60, v42);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v57, 0, 1, v59);
        v61 = v89;
      }
      else
      {
        v61 = v89;
        v57 = (uint64_t)v80;
        if (v50 == *MEMORY[0x24BE53320])
        {
          (*(void (**)(char *, uint64_t))(v85 + 96))(v47, v86);
          v72 = v43;
          v62 = v74;
          v63 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
          v88 = v36;
          v64 = v75;
          v63(v79, v47, v75);
          v65 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 16);
          v66 = v44;
          v65(v57, v44, v42);
          v67 = _s29ActionStatementFailureOutcomeVMa(0);
          v68 = v79;
          (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v57 + *(int *)(v67 + 20), v79, v64);
          v69 = _s22ActionStatementOutcomeOMa(0);
          swift_storeEnumTagMultiPayload();
          v70 = *(void (**)(char *, uint64_t))(v62 + 8);
          v61 = v89;
          v70(v68, v64);
          v36 = v88;
          (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v42);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v57, 0, 1, v69);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
          v71 = _s22ActionStatementOutcomeOMa(0);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v57, 1, 1, v71);
          (*(void (**)(char *, uint64_t))(v85 + 8))(v47, v86);
        }
      }
      sub_23FCFCB7C(v57, v61);
      v37 = v73;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v36);
  }
  else
  {
    v40 = _s22ActionStatementOutcomeOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v89, 1, 1, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  }
}

uint64_t sub_23FCFCB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F629D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23FCFCBC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23FBFF158(a1, a2, a3);
  sub_23FC12EF8(v3);
  sub_23FBFF0A0();
}

void sub_23FCFCBE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23FBFF158(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_23FBFF0A0();
}

uint64_t sub_23FCFCC18()
{
  return _s29ActionStatementCreatedOutcomeVMa(0);
}

void sub_23FCFCC20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  _QWORD v46[5];
  uint64_t v47;

  v47 = a2;
  v3 = sub_23FBFD684(&qword_256F5EDF0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v40 = *(_QWORD *)(v45 - 8);
  v8 = MEMORY[0x24BDAC7A8](v45, v7);
  v41 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v39 = (uint64_t)&v38 - v11;
  v12 = sub_23FBFD684(&qword_256F62A90);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v38 - v18;
  sub_23FCCB7C8(a1, v46);
  v20 = v46[0];
  v21 = v46[3];
  v22 = v46[4];
  v43 = v46[1];
  v44 = (unint64_t)(v46[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v42 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v22)
    {
      v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_20;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v25 >= v44)
      goto LABEL_27;
    v26 = *(_QWORD *)(v43 + 8 * v25);
    v27 = v21 + 1;
    if (!v26)
    {
      v27 = v21 + 2;
      if (v21 + 2 >= v44)
        goto LABEL_27;
      v26 = *(_QWORD *)(v43 + 8 * v27);
      if (!v26)
      {
        v27 = v21 + 3;
        if (v21 + 3 >= v44)
          goto LABEL_27;
        v26 = *(_QWORD *)(v43 + 8 * v27);
        if (!v26)
        {
          v27 = v21 + 4;
          if (v21 + 4 >= v44)
            goto LABEL_27;
          v26 = *(_QWORD *)(v43 + 8 * v27);
          if (!v26)
          {
            v27 = v21 + 5;
            if (v21 + 5 >= v44)
              goto LABEL_27;
            v26 = *(_QWORD *)(v43 + 8 * v27);
            if (!v26)
            {
              v28 = v21 + 6;
              while (v28 < v44)
              {
                v26 = *(_QWORD *)(v43 + 8 * v28++);
                if (v26)
                {
                  v27 = v28 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_bridgeObjectRelease();
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v22 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
    v21 = v27;
LABEL_20:
    v29 = *(_QWORD *)(v20 + 48);
    v30 = sub_23FD72DB8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v19, v29 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v24, v30);
    *(_QWORD *)&v19[*(int *)(v12 + 48)] = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v24);
    sub_23FC0EE04((uint64_t)v19, (uint64_t)v16, &qword_256F62A90);
    v31 = *(_QWORD *)&v16[*(int *)(v12 + 48)];
    swift_bridgeObjectRetain();
    sub_23FC0A450(v31, v47, (uint64_t)v6);
    sub_23FBFEF74((uint64_t)v16, &qword_256F62A90);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v6, 1, v45) == 1)
    {
      sub_23FBFEF74((uint64_t)v6, &qword_256F5EDF0);
    }
    else
    {
      v32 = v39;
      sub_23FC0F380((uint64_t)v6, v39, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      sub_23FC0F380(v32, v41, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC99270();
        v42 = v36;
      }
      v33 = *(_QWORD *)(v42 + 16);
      if (v33 >= *(_QWORD *)(v42 + 24) >> 1)
      {
        sub_23FC99270();
        v42 = v37;
      }
      v34 = v41;
      v35 = v42;
      *(_QWORD *)(v42 + 16) = v33 + 1;
      sub_23FC0F380(v34, v35+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v33, type metadata accessor for FeedbackLearning.CandidateEvaluation);
    }
  }
  __break(1u);
}

void sub_23FCFD004(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  int64_t v48;

  v46 = a2;
  v44 = sub_23FBFD684(&qword_256F62A88);
  v4 = MEMORY[0x24BDAC7A8](v44, v3);
  v43 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v40 - v8;
  MEMORY[0x24BDAC7A8](v7, v10);
  v42 = (uint64_t)&v40 - v11;
  sub_23FCCB7C8(a1, v47);
  v45 = v47[0];
  v48 = v47[3];
  v12 = v47[4];
  v40 = v47[1];
  v41 = (unint64_t)(v47[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v13 = MEMORY[0x24BEE4AF8];
  if (!v12)
    goto LABEL_3;
LABEL_2:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v15 = v14 | (v48 << 6);
  while (1)
  {
    v19 = v45;
    v20 = *(_QWORD *)(v45 + 48);
    v21 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    v22 = v42;
    sub_23FC0EDD8(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v15, v42, type metadata accessor for FeedbackLearning.CandidateParameter);
    v23 = v44;
    *(_QWORD *)(v22 + *(int *)(v44 + 48)) = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v15);
    sub_23FC0EE04(v22, (uint64_t)v9, &qword_256F62A88);
    v24 = *(int *)(v23 + 48);
    v25 = v43;
    sub_23FC0EDD8((uint64_t)v9, v43, type metadata accessor for FeedbackLearning.CandidateParameter);
    *(_QWORD *)(v25 + v24) = *(_QWORD *)&v9[v24];
    swift_bridgeObjectRetain();
    v26 = swift_bridgeObjectRetain();
    v27 = sub_23FCFDAA4(v26);
    sub_23FBFEF18(v25, type metadata accessor for FeedbackLearning.CandidateParameter);
    v28 = v46;
    swift_bridgeObjectRetain();
    sub_23FCFCC20(v27, v28);
    v30 = v29;
    swift_bridgeObjectRelease();
    sub_23FBFEF74((uint64_t)v9, &qword_256F62A88);
    v31 = *(_QWORD *)(v30 + 16);
    v32 = *(_QWORD *)(v13 + 16);
    if (__OFADD__(v32, v31))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v32 + v31 > *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_23FC99270();
      v13 = v33;
    }
    if (*(_QWORD *)(v30 + 16))
    {
      v34 = (*(_QWORD *)(v13 + 24) >> 1) - *(_QWORD *)(v13 + 16);
      v35 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
      if (v34 < v31)
        goto LABEL_35;
      sub_23FC9ABD8(v30+ ((*(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80)), v31);
      if (v31)
      {
        v36 = *(_QWORD *)(v13 + 16);
        v37 = __OFADD__(v36, v31);
        v38 = v36 + v31;
        if (v37)
          goto LABEL_37;
        *(_QWORD *)(v13 + 16) = v38;
      }
    }
    else if (v31)
    {
      goto LABEL_34;
    }
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_2;
LABEL_3:
    v16 = v48 + 1;
    if (__OFADD__(v48, 1))
      goto LABEL_36;
    if (v16 >= v41)
      goto LABEL_32;
    v17 = *(_QWORD *)(v40 + 8 * v16);
    if (!v17)
    {
      v18 = v48 + 2;
      if (v48 + 2 >= v41)
        goto LABEL_32;
      v17 = *(_QWORD *)(v40 + 8 * v18);
      if (v17)
        goto LABEL_12;
      v18 = v48 + 3;
      if (v48 + 3 >= v41)
        goto LABEL_32;
      v17 = *(_QWORD *)(v40 + 8 * v18);
      if (v17)
        goto LABEL_12;
      v18 = v48 + 4;
      if (v48 + 4 >= v41)
        goto LABEL_32;
      v17 = *(_QWORD *)(v40 + 8 * v18);
      if (v17)
      {
LABEL_12:
        v16 = v18;
      }
      else
      {
        v16 = v48 + 5;
        if (v48 + 5 >= v41)
          goto LABEL_32;
        v17 = *(_QWORD *)(v40 + 8 * v16);
        if (!v17)
        {
          v39 = v48 + 6;
          while (v39 < v41)
          {
            v17 = *(_QWORD *)(v40 + 8 * v39++);
            if (v17)
            {
              v16 = v39 - 1;
              goto LABEL_13;
            }
          }
LABEL_32:
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
      }
    }
LABEL_13:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v48 = v16;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_23FCFD3D0(uint64_t a1, uint64_t (*a2)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t);
  _QWORD v43[5];
  int64_t v44;

  v42 = a2;
  v41 = sub_23FBFD684(&qword_256F5E5F8);
  MEMORY[0x24BDAC7A8](v41, v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FCCB7C8(a1, v43);
  v6 = v43[0];
  v44 = v43[3];
  v7 = v43[4];
  v39 = v43[1];
  v40 = (unint64_t)(v43[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v10 = v9 | (v44 << 6);
  while (1)
  {
    v15 = *(_QWORD *)(v6 + 48);
    v16 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_23FC0EDD8(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v10, (uint64_t)v5, type metadata accessor for FeedbackLearning.CandidateParameter);
    v17 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v10);
    *(_QWORD *)&v5[*(int *)(v41 + 48)] = v17;
    swift_bridgeObjectRetain();
    v18 = v42(v5, v17);
    sub_23FBFEF74((uint64_t)v5, &qword_256F5E5F8);
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v8 + 16);
    if (__OFADD__(v20, v19))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v20 + v19 > *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23FC99270();
      v8 = v21;
    }
    if (*(_QWORD *)(v18 + 16))
    {
      v22 = *(_QWORD *)(v8 + 16);
      v23 = (*(_QWORD *)(v8 + 24) >> 1) - v22;
      v24 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
      if (v23 < v19)
        goto LABEL_39;
      v25 = *(_QWORD *)(v24 - 8);
      v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v27 = *(_QWORD *)(v25 + 72);
      v28 = v8 + v26 + v27 * v22;
      v29 = v18 + v26;
      v30 = v27 * v19;
      v31 = v28 + v30;
      v32 = v29 + v30;
      if (v29 < v31 && v28 < v32)
        goto LABEL_42;
      swift_arrayInitWithCopy();
      if (v19)
      {
        v34 = *(_QWORD *)(v8 + 16);
        v35 = __OFADD__(v34, v19);
        v36 = v34 + v19;
        if (v35)
          goto LABEL_40;
        *(_QWORD *)(v8 + 16) = v36;
      }
    }
    else if (v19)
    {
      goto LABEL_38;
    }
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_2;
LABEL_3:
    v11 = v44 + 1;
    if (__OFADD__(v44, 1))
      goto LABEL_41;
    if (v11 >= v40)
      goto LABEL_36;
    v12 = *(_QWORD *)(v39 + 8 * v11);
    v13 = v44 + 1;
    if (!v12)
    {
      v13 = v44 + 2;
      if (v44 + 2 >= v40)
        goto LABEL_36;
      v12 = *(_QWORD *)(v39 + 8 * v13);
      if (!v12)
      {
        v13 = v44 + 3;
        if (v44 + 3 >= v40)
          goto LABEL_36;
        v12 = *(_QWORD *)(v39 + 8 * v13);
        if (!v12)
        {
          v13 = v44 + 4;
          if (v44 + 4 >= v40)
            goto LABEL_36;
          v12 = *(_QWORD *)(v39 + 8 * v13);
          if (!v12)
          {
            v13 = v44 + 5;
            if (v44 + 5 >= v40)
              goto LABEL_36;
            v12 = *(_QWORD *)(v39 + 8 * v13);
            if (!v12)
            {
              v14 = v44 + 6;
              while (v14 < v40)
              {
                v12 = *(_QWORD *)(v39 + 8 * v14++);
                if (v12)
                {
                  v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
LABEL_36:
              swift_release();
              return v8;
            }
          }
        }
      }
    }
LABEL_18:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v44 = v13;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t sub_23FCFD73C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _QWORD v42[4];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  v3 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  v49 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v51 = (uint64_t)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v50 = (uint64_t)v42 - v13;
  v52 = (_QWORD *)MEMORY[0x24BEE4B00];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v42[1] = v3;
    v42[2] = a1;
    v42[3] = v1;
    v15 = *(unsigned __int8 *)(v12 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = a1 + v16;
    v18 = *(_QWORD *)(v12 + 72);
    v45 = v18 + v16;
    v19 = (_QWORD *)MEMORY[0x24BEE4B00];
    v44 = v15 | 7;
    v43 = xmmword_23FD769D0;
    v47 = v10;
    v48 = v6;
    v46 = v16;
    while (1)
    {
      v20 = v50;
      sub_23FC0EDD8(v17, v50, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      v21 = v20 + *(int *)(v6 + 20);
      v22 = v51;
      sub_23FC0EDD8(v21, v51, type metadata accessor for FeedbackLearning.CandidateParameter);
      v24 = sub_23FC84D38(v22);
      v25 = v19[2];
      v26 = (v23 & 1) == 0;
      if (__OFADD__(v25, v26))
        break;
      v27 = v23;
      if (v19[3] < v25 + v26)
      {
        sub_23FC54530();
        v19 = v52;
        v28 = sub_23FC84D38(v51);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_21;
        v24 = v28;
      }
      if ((v27 & 1) != 0)
      {
        sub_23FBFEF18(v51, type metadata accessor for FeedbackLearning.CandidateParameter);
        v19 = v52;
        v30 = v52[7];
        sub_23FC0F380(v50, (uint64_t)v10, type metadata accessor for FeedbackLearning.CandidateEvaluation);
        v31 = *(_QWORD *)(v30 + 8 * v24);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v30 + 8 * v24) = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23FC99270();
          v31 = v39;
          *(_QWORD *)(v30 + 8 * v24) = v39;
        }
        v33 = *(_QWORD *)(v31 + 16);
        if (v33 >= *(_QWORD *)(v31 + 24) >> 1)
        {
          sub_23FC99270();
          v31 = v40;
          *(_QWORD *)(v30 + 8 * v24) = v40;
        }
        *(_QWORD *)(v31 + 16) = v33 + 1;
        v16 = v46;
        v34 = v31 + v46 + v33 * v18;
        v10 = v47;
        sub_23FC0F380((uint64_t)v47, v34, type metadata accessor for FeedbackLearning.CandidateEvaluation);
        v6 = v48;
      }
      else
      {
        sub_23FBFD684(&qword_256F5EDF8);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = v43;
        sub_23FC0F380(v50, v35 + v16, type metadata accessor for FeedbackLearning.CandidateEvaluation);
        v19[(v24 >> 6) + 8] |= 1 << v24;
        sub_23FC0F380(v51, v19[6] + *(_QWORD *)(v49 + 72) * v24, type metadata accessor for FeedbackLearning.CandidateParameter);
        *(_QWORD *)(v19[7] + 8 * v24) = v35;
        v36 = v19[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_20;
        v19[2] = v38;
      }
      v17 += v18;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v19;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    result = sub_23FD753C8();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23FCFDAA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  _QWORD v40[3];
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;

  v3 = sub_23FD72DB8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v50 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v48 = (uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v49 = (uint64_t)v40 - v13;
  v51 = (_QWORD *)MEMORY[0x24BEE4B00];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v40[1] = a1;
    v40[2] = v1;
    v15 = *(unsigned __int8 *)(v12 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = a1 + v16;
    v18 = *(_QWORD *)(v12 + 72);
    v47 = v16;
    v44 = v18 + v16;
    v19 = (_QWORD *)MEMORY[0x24BEE4B00];
    v43 = v15 | 7;
    v42 = xmmword_23FD769D0;
    v45 = v7;
    v46 = v4;
    v41 = v3;
    while (1)
    {
      v20 = v49;
      sub_23FC0EDD8(v17, v49, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v50, v20 + *(int *)(v7 + 24), v3);
      sub_23FC84DD0();
      v23 = v22;
      v24 = v19[2];
      v25 = (v21 & 1) == 0;
      if (__OFADD__(v24, v25))
        break;
      v26 = v21;
      if (v19[3] < v24 + v25)
      {
        sub_23FC54D28();
        v19 = v51;
        sub_23FC84DD0();
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_21;
        v23 = v27;
      }
      if ((v26 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v50, v3);
        v19 = v51;
        v29 = v51[7];
        sub_23FC0F380(v49, v48, type metadata accessor for FeedbackLearning.CandidateEvaluation);
        v30 = *(_QWORD *)(v29 + 8 * v23);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v29 + 8 * v23) = v30;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23FC99270();
          v30 = v37;
          *(_QWORD *)(v29 + 8 * v23) = v37;
        }
        v32 = *(_QWORD *)(v30 + 16);
        if (v32 >= *(_QWORD *)(v30 + 24) >> 1)
        {
          sub_23FC99270();
          v30 = v38;
          *(_QWORD *)(v29 + 8 * v23) = v38;
        }
        v3 = v41;
        *(_QWORD *)(v30 + 16) = v32 + 1;
        sub_23FC0F380(v48, v30 + v47 + v32 * v18, type metadata accessor for FeedbackLearning.CandidateEvaluation);
        v7 = v45;
        v4 = v46;
      }
      else
      {
        sub_23FBFD684(&qword_256F5EDF8);
        v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = v42;
        sub_23FC0F380(v49, v33 + v47, type metadata accessor for FeedbackLearning.CandidateEvaluation);
        v19[(v23 >> 6) + 8] |= 1 << v23;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v19[6] + *(_QWORD *)(v4 + 72) * v23, v50, v3);
        *(_QWORD *)(v19[7] + 8 * v23) = v33;
        v34 = v19[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_20;
        v19[2] = v36;
      }
      v17 += v18;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v19;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    result = sub_23FD753C8();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23FCFDE04@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  void (*v17)(char *);

  v3 = v2;
  v17 = a1;
  v5 = sub_23FD74474();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FBFD684(qword_256F5EC20);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC0F3AC(v3, (uint64_t)v13, qword_256F5EC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v13, 1, v5) == 1)
  {
    v14 = type metadata accessor for FeedbackLearning.TaskAction(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v13, v5);
    v17(v9);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t sub_23FCFDF70(void (*a1)(uint64_t *__return_ptr, _BYTE *), uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a5)
    return 3;
  v9[0] = a3;
  v9[8] = a4;
  v10 = a5;
  v11 = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1(&v12, v9);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v6)
    return v12;
  return result;
}

uint64_t sub_23FCFE014@<X0>(void (*a1)(_BYTE *)@<X0>, char a2@<W2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  if (a4)
  {
    v10[0] = a2;
    v10[8] = a3;
    v11 = a4;
    v12 = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(v10);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v9 = _s21ActionExecutionResultOMa(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a6, 1, 1, v9);
  }
}

void sub_23FCFE0D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  os_log_type_t v76;
  _BOOL8 v77;
  uint8_t *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  _BOOL8 v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178[5];
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(char *, uint64_t);
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;

  v189 = a3;
  v221 = a2;
  v193 = a4;
  v5 = sub_23FD73E08();
  sub_23FBFF0B8(v5, (uint64_t)&v222);
  v200 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v9);
  v10 = sub_23FD72D28();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_23FBFEFE0();
  v206 = v13;
  v14 = sub_23FC10050();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v14);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFEFE0();
  v214 = v17;
  v18 = sub_23FC10050();
  type metadata accessor for FeedbackLearning.TaskOutcome(v18);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v178 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23FD71474();
  v208 = *(_QWORD *)(v23 - 8);
  v209 = v23;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FBFEFE0();
  v207 = v26;
  v27 = sub_23FC10050();
  v204 = _s22ActionStatementOutcomeOMa(v27);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FBFF218();
  v180 = v32;
  sub_23FBFD684(&qword_256F5D940);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v33, v34);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v35, v36);
  sub_23FBFF218();
  v212 = v37;
  v178[4] = sub_23FBFD684(&qword_256F629D0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v38, v39);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v42, v43);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v44, v45);
  sub_23FBFF218();
  v216 = v46;
  v178[2] = sub_23FBFD684(&qword_256F62A70);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v49, v50);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v53, v54);
  sub_23FBFF218();
  v217 = v55;
  v56 = sub_23FC10050();
  v57 = type metadata accessor for FeedbackLearning.FlowAction(v56);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v58, v59);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v60, v61);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v62, v63);
  v65 = (char *)v178 - v64;
  v218 = sub_23FD72BF0();
  v215 = *(_QWORD *)(v218 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v66, v67);
  sub_23FBFEFCC();
  v205 = v68;
  MEMORY[0x24BDAC7A8](v69, v70);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v71, v72);
  v74 = (char *)v178 - v73;
  sub_23FD724DC();
  v219 = a1;
  sub_23FC0EDD8(a1, (uint64_t)v65, type metadata accessor for FeedbackLearning.FlowAction);
  v75 = sub_23FD72BE4();
  v76 = sub_23FD74F48();
  v77 = os_log_type_enabled((os_log_t)v75, v76);
  v211 = v57;
  v192 = v10;
  v191 = v11;
  v213 = v22;
  if (v77)
  {
    v78 = (uint8_t *)sub_23FBFEFF4();
    v223 = sub_23FBFEFF4();
    *(_DWORD *)v78 = 136315138;
    v210 = (void (*)(char *, uint64_t))(v78 + 4);
    sub_23FC06250();
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v79 = sub_23FD04238();
    v222 = sub_23FD04188(v79, v80);
    sub_23FD75044();
    v81 = swift_bridgeObjectRelease();
    sub_23FD041FC(v81, type metadata accessor for FeedbackLearning.FlowAction);
    _os_log_impl(&dword_23FBF8000, (os_log_t)v75, v76, "Starting to run task evaluator for action with statementId=%s", v78, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  sub_23FD041FC(v77, type metadata accessor for FeedbackLearning.FlowAction);

  v210 = *(void (**)(char *, uint64_t))(v215 + 8);
  v210(v74, v218);
  v82 = (_QWORD *)(v220 + *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20));
  v83 = v82[3];
  v84 = v82[4];
  sub_23FBFDE40(v82, v83);
  v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 16))(v219, v221, v83, v84);
  LODWORD(v215) = v86;
  v88 = *(_QWORD *)(v87 + 16);
  v197 = v85;
  v196 = v89;
  v201 = v87;
  if (v88)
  {
    v90 = *(unsigned __int8 *)(v87 + 32);
    v83 = *(unsigned __int8 *)(v87 + 40);
    v91 = *(_QWORD *)(v87 + 48);
    v92 = *(_QWORD *)(v87 + 56);
    v93 = v91;
    v75 = v92;
    LODWORD(v184) = *(unsigned __int8 *)(v87 + 40);
    if (v90)
    {
      if (v88 == 1)
      {
        v94 = 0;
        v95 = 0;
        v88 = 0;
        sub_23FD04210();
        v96 = v90 == 3;
        v98 = *(_DWORD *)(v97 - 256);
        if (!v96)
          goto LABEL_26;
        goto LABEL_25;
      }
      v99 = (uint64_t *)(v87 + 88);
      v100 = 1;
      while (1)
      {
        v101 = v100 + 1;
        if (__OFADD__(v100, 1))
          break;
        if (!*((_BYTE *)v99 - 24))
        {
          LODWORD(v83) = *((unsigned __int8 *)v99 - 16);
          v93 = *(v99 - 1);
          v75 = *v99;
          goto LABEL_15;
        }
        v99 += 4;
        ++v100;
        if (v101 == v88)
        {
          v75 = 0;
          v93 = 0;
          v22 = 0;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }
LABEL_15:
    swift_bridgeObjectRetain();
    v22 = (char *)v75;
    v85 = swift_bridgeObjectRetain();
    v75 = v83;
LABEL_16:
    if (v90 == 3)
    {
      v83 = v93;
      v98 = v184;
LABEL_25:
      swift_bridgeObjectRetain();
      v85 = swift_bridgeObjectRetain();
      v94 = 3;
      v88 = v91;
      v11 = v92;
      v95 = v98;
      goto LABEL_26;
    }
    if (v88 != 1)
    {
      v102 = (uint64_t *)(v201 + 88);
      v103 = 1;
      do
      {
        v104 = v103 + 1;
        if (__OFADD__(v103, 1))
          goto LABEL_42;
        if (*((_BYTE *)v102 - 24) == 3)
        {
          v83 = v93;
          v98 = *((unsigned __int8 *)v102 - 16);
          v91 = *(v102 - 1);
          v92 = *v102;
          goto LABEL_25;
        }
        v102 += 4;
        ++v103;
      }
      while (v104 != v88);
    }
    v83 = v93;
    v94 = 0;
    v95 = 0;
    v88 = 0;
    v11 = 0;
  }
  else
  {
    v94 = 0;
    v95 = 0;
    sub_23FD04210();
  }
LABEL_26:
  v184 = v178;
  MEMORY[0x24BDAC7A8](v85, v86);
  v105 = v220;
  v178[-2] = v220;
  v106 = v195;
  v183 = sub_23FCFDF70((void (*)(uint64_t *__return_ptr, _BYTE *))sub_23FD03A80, (uint64_t)&v178[-4], 0, v75, v83, (uint64_t)v22);
  v107 = sub_23FD03A9C(0, v75, v83);
  MEMORY[0x24BDAC7A8](v107, v108);
  v178[-2] = v105;
  v109 = v217;
  v182 = v95;
  v184 = (uint64_t *)v88;
  v181 = v11;
  sub_23FCFE014((void (*)(_BYTE *))sub_23FD03ACC, v94, v95, v88, v11, v217);
  v110 = v194;
  sub_23FC0F3AC(v109, v194, &qword_256F62A70);
  v111 = _s21ActionExecutionResultOMa(0);
  v112 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v110, 1, v111);
  v195 = v106;
  if (v112 == 1)
  {
    sub_23FBFEF74(v110, &qword_256F62A70);
    v113 = v216;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v216, 1, 1, v204);
  }
  else
  {
    v113 = v216;
    sub_23FCFFE70();
    sub_23FCF25C0(v114, _s21ActionExecutionResultOMa);
  }
  v115 = v203;
  v116 = v202;
  v117 = v186;
  v118 = v185;
  v119 = v219;
  sub_23FD724DC();
  sub_23FC0EDD8(v119, v118, type metadata accessor for FeedbackLearning.FlowAction);
  sub_23FC0F3AC(v109, v117, &qword_256F62A70);
  sub_23FC0F3AC(v113, v115, &qword_256F629D0);
  v120 = sub_23FD72BE4();
  v121 = sub_23FD74F3C();
  if (os_log_type_enabled(v120, v121))
  {
    v122 = sub_23FBFEFF4();
    v194 = sub_23FBFEFF4();
    v223 = v194;
    *(_DWORD *)v122 = 136315650;
    sub_23FC06250();
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v123 = sub_23FD75344();
    v222 = sub_23FD04188(v123, v124);
    sub_23FD04178();
    v125 = swift_bridgeObjectRelease();
    sub_23FD041FC(v125, type metadata accessor for FeedbackLearning.FlowAction);
    *(_WORD *)(v122 + 12) = 2080;
    sub_23FC0F3AC(v117, v178[1], &qword_256F62A70);
    v126 = sub_23FD74C0C();
    v222 = sub_23FD04188(v126, v127);
    sub_23FD04178();
    swift_bridgeObjectRelease();
    sub_23FD041C4();
    *(_WORD *)(v122 + 22) = 2080;
    sub_23FC0F3AC(v203, v178[3], &qword_256F629D0);
    v128 = sub_23FD74C0C();
    v222 = sub_23FD04188(v128, v129);
    sub_23FD04178();
    swift_bridgeObjectRelease();
    sub_23FD041C4();
    _os_log_impl(&dword_23FBF8000, v120, v121, "The task execution result for statementId=%s is %s with outcome %s", (uint8_t *)v122, 0x20u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  v130 = v113;
  sub_23FBFEF18(v118, type metadata accessor for FeedbackLearning.FlowAction);
  sub_23FBFEF74(v117, &qword_256F62A70);
  sub_23FBFEF74(v115, &qword_256F629D0);

  sub_23FD041DC(v116);
  v131 = v212;
  v132 = (uint64_t)v213;
  v133 = v219;
  v134 = v204;
  v135 = v187;
  sub_23FC0F3AC(v130, v187, &qword_256F629D0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v135, 1, v134) == 1)
  {
    sub_23FBFEF74(v135, &qword_256F629D0);
    v136 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v131, 1, 1, v136);
    LODWORD(v204) = 0;
  }
  else
  {
    v137 = v135;
    v138 = v132;
    v139 = v180;
    sub_23FC0F380(v137, v180, _s22ActionStatementOutcomeOMa);
    v140 = v179;
    sub_23FC0EDD8(v139, v179, _s22ActionStatementOutcomeOMa);
    LODWORD(v204) = swift_getEnumCaseMultiPayload() != 0;
    sub_23FBFEF18(v140, _s22ActionStatementOutcomeOMa);
    v141 = v207;
    sub_23FD207B8(v207);
    sub_23FD00240(v133, v141, v131);
    (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v141, v209);
    v142 = v139;
    v132 = v138;
    sub_23FBFEF18(v142, _s22ActionStatementOutcomeOMa);
  }
  v143 = v189;
  v144 = v188;
  v145 = v133 + *(int *)(v211 + 20);
  sub_23FD0064C(v145, v215, v183, v109, v132);
  sub_23FC0F3AC(v131, v144, &qword_256F5D940);
  v220 = v145;
  if (v184 && (swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), (v182 - 1) <= 1))
  {
    v146 = v214;
    sub_23FD019A0(v144, v204, v214);
    v147 = 0;
    v148 = v205;
  }
  else
  {
    v147 = 1;
    v148 = v205;
    v146 = v214;
  }
  v149 = v206;
  v150 = sub_23FBFD684(&qword_256F5D4E8);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v146, v147, 1, v150);
  sub_23FBFEF74(v144, &qword_256F5D940);
  v151 = sub_23FD041E8();
  v152 = sub_23FD03AE8(v133, v143, (uint64_t)v151);
  sub_23FD00E00(v133, v149);
  sub_23FD724DC();
  sub_23FC0EDD8(v133, v198, type metadata accessor for FeedbackLearning.FlowAction);
  swift_bridgeObjectRetain_n();
  v153 = sub_23FD72BE4();
  v154 = sub_23FD74F3C();
  v155 = os_log_type_enabled(v153, v154);
  if (v155)
  {
    v156 = sub_23FBFEFF4();
    v223 = sub_23FBFEFF4();
    *(_DWORD *)v156 = 136315394;
    sub_23FC06250();
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v157 = sub_23FD04238();
    v222 = sub_23FD04188(v157, v158);
    sub_23FD75044();
    v159 = swift_bridgeObjectRelease();
    sub_23FCF25C0(v159, type metadata accessor for FeedbackLearning.FlowAction);
    *(_WORD *)(v156 + 12) = 2080;
    v160 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
    v161 = sub_23FC10110();
    v162 = MEMORY[0x242678AA4](v161, v160);
    v164 = v163;
    swift_bridgeObjectRelease();
    v222 = sub_23FC9DC40(v162, v164, &v223);
    sub_23FD75044();
    sub_23FD04204();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v153, v154, "The inferred candidate evaluations for statementId=%s: %s", (uint8_t *)v156, 0x16u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  sub_23FCF25C0(v155, type metadata accessor for FeedbackLearning.FlowAction);

  sub_23FD04204();
  sub_23FD041DC(v148);
  v165 = v193;
  v166 = v192;
  v167 = v191;
  v168 = v190;
  v169 = sub_23FD041E8();
  v170 = v200;
  v171 = v199;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v200 + 16))(v199, v169, v168);
  v172 = v207;
  sub_23FD73DFC();
  (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v171, v168);
  sub_23FBFEF74(v212, &qword_256F5D940);
  sub_23FBFEF74(v216, &qword_256F629D0);
  sub_23FBFEF74(v217, &qword_256F62A70);
  v173 = (int *)type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  v174 = v165 + v173[5];
  v175 = sub_23FC06250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v174, v220, v175);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 32))(v165, v172, v209);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 32))(v165 + v173[6], v149, v166);
  *(_QWORD *)(v165 + v173[7]) = v152;
  sub_23FC0F380(v214, v165 + v173[8], type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  sub_23FC0F380((uint64_t)v213, v165 + v173[9], type metadata accessor for FeedbackLearning.TaskOutcome);
  v176 = v165 + v173[10];
  *(_BYTE *)v176 = v197;
  *(_BYTE *)(v176 + 8) = v215;
  v177 = v201;
  *(_QWORD *)(v176 + 16) = v196;
  *(_QWORD *)(v176 + 24) = v177;
}

uint64_t FeedbackLearning.TaskEvaluator.init(toolbox:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12[2];

  v4 = sub_23FC5F58C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if (qword_256F5D2C8 != -1)
    swift_once();
  sub_23FC584E0((uint64_t)&byte_256F7F450, (uint64_t)v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
  v9 = type metadata accessor for FeedbackLearning.TaskEvaluator();
  return sub_23FBFDE28(v12, a2 + *(int *)(v9 + 20));
}

uint64_t type metadata accessor for FeedbackLearning.TaskEvaluator()
{
  uint64_t result;

  result = qword_256F62A38;
  if (!qword_256F62A38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FeedbackLearning.TaskEvaluator.evaluateTasks(transcript:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_23FD73E08();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_23FC0901C();
  _s19TranscriptRetrieverVMa();
  v2[7] = sub_23FC0901C();
  v4 = sub_23FC5F58C();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_23FC0901C();
  return swift_task_switch();
}

uint64_t sub_23FCFF288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char *v16;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  _s22TaskCandidateEvaluatorCMa();
  sub_23FD041A0();
  sub_23FCF6C28(v1);
  v16 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v6, v15);
  sub_23FD041A0();
  sub_23FD2A328(v4, v1, v2);
  v8 = sub_23FD73DE4();
  v9 = sub_23FD02A08(v8, v2, v16);
  sub_23FC1002C();
  v10 = sub_23FC02284(v6);
  v11 = (_QWORD *)swift_task_alloc();
  v11[2] = v5;
  v11[3] = v2;
  v11[4] = v9;
  sub_23FC8D984((void (*)(_QWORD))sub_23FD03658, (uint64_t)v11, v10);
  v13 = v12;
  swift_release();
  sub_23FC1002C();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_23FBFEF18(v2, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

uint64_t sub_23FCFF3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45[5];
  uint64_t v46;

  v9 = type metadata accessor for FeedbackLearning.FlowAction(0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v43 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v38 - v14;
  v16 = sub_23FD72BF0();
  v41 = *(_QWORD *)(v16 - 8);
  v42 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v44 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45[3] = _s19TranscriptRetrieverVMa();
  v45[4] = (uint64_t)&off_251014790;
  v19 = sub_23FBFDDEC(v45);
  v20 = a4;
  sub_23FC0EDD8(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  sub_23FCFE0D4(a1, (uint64_t)v45, a3, a4);
  if (v4)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v45);
    sub_23FD724DC();
    sub_23FC0EDD8(a1, (uint64_t)v15, type metadata accessor for FeedbackLearning.FlowAction);
    sub_23FC0EDD8(a1, v43, type metadata accessor for FeedbackLearning.FlowAction);
    v21 = v4;
    v22 = v4;
    v23 = sub_23FD72BE4();
    v24 = sub_23FD74F54();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v38 = (_QWORD *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v45[0] = v39;
      *(_DWORD *)v25 = 136315650;
      v40 = a4;
      sub_23FD7157C();
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v26 = sub_23FD75344();
      v46 = sub_23FC9DC40(v26, v27, v45);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18((uint64_t)v15, type metadata accessor for FeedbackLearning.FlowAction);
      *(_WORD *)(v25 + 12) = 2080;
      sub_23FD71474();
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v28 = v43;
      v29 = sub_23FD75344();
      v46 = sub_23FC9DC40(v29, v30, v45);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18(v28, type metadata accessor for FeedbackLearning.FlowAction);
      *(_WORD *)(v25 + 22) = 2112;
      v31 = v4;
      v32 = _swift_stdlib_bridgeErrorToNSError();
      v46 = v32;
      sub_23FD75044();
      v33 = v38;
      *v38 = v32;
      v20 = v40;

      _os_log_impl(&dword_23FBF8000, v23, v24, "Failed to evaluate flow action with statementId=%s in session %s: %@", (uint8_t *)v25, 0x20u);
      sub_23FBFD684(&qword_254346A30);
      v34 = 1;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v33, -1, -1);
      v35 = v39;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v35, -1, -1);
      MEMORY[0x2426798D8](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v42);
    }
    else
    {

      sub_23FBFEF18((uint64_t)v15, type metadata accessor for FeedbackLearning.FlowAction);
      sub_23FBFEF18(v43, type metadata accessor for FeedbackLearning.FlowAction);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v42);
      v34 = 1;
    }
  }
  else
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v45);
    v34 = 0;
  }
  v36 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v20, v34, 1, v36);
}

void sub_23FCFF86C(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v5 = _s19EvaluatorVoteSourceOMa(0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v26 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v19 = (char *)&v26 - v18;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v27 = (char *)v17;
    v28 = v16;
    v29 = a2;
    v30 = v2;
    v22 = v20 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v23 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain();
    v24 = 0;
    while (1)
    {
      sub_23FC0EDD8(v22, (uint64_t)v19, _s19EvaluatorVoteSourceOMa);
      sub_23FC0EDD8((uint64_t)v19, (uint64_t)v13, _s19EvaluatorVoteSourceOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
        break;
      swift_bridgeObjectRetain();
      sub_23FBFEF18((uint64_t)v13, _s19EvaluatorVoteSourceOMa);
      sub_23FBFEF18((uint64_t)v19, _s19EvaluatorVoteSourceOMa);
      swift_bridgeObjectRelease();
      ++v24;
      v22 += v23;
      if ((char *)v21 == v24)
        goto LABEL_8;
    }
    sub_23FBFEF18((uint64_t)v19, _s19EvaluatorVoteSourceOMa);
    if ((char *)v21 == v24)
    {
LABEL_8:
      v25 = 3;
LABEL_12:
      a2 = v29;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    if ((unint64_t)v24 >= v21)
    {
      __break(1u);
    }
    else
    {
      v21 = v28;
      sub_23FC0EDD8(v22, v28, _s19EvaluatorVoteSourceOMa);
      v24 = v27;
      sub_23FC0EDD8(v21, (uint64_t)v27, _s19EvaluatorVoteSourceOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v25 = *v24;
        sub_23FBFEF18(v21, _s19EvaluatorVoteSourceOMa);
        goto LABEL_12;
      }
    }
    sub_23FBFEF18((uint64_t)v24, _s19EvaluatorVoteSourceOMa);
    sub_23FBFEF18(v21, _s19EvaluatorVoteSourceOMa);
    __break(1u);
  }
  else
  {
    v25 = 3;
LABEL_13:
    *a2 = v25;
  }
}

void sub_23FCFFAB4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v54 = _s21ActionExecutionResultOMa(0);
  MEMORY[0x24BDAC7A8](v54, v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = _s19EvaluatorVoteSourceOMa(0);
  v8 = *(_QWORD *)(v52 - 8);
  v10 = MEMORY[0x24BDAC7A8](v52, v9);
  v51 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v55 = (uint64_t)&v43 - v13;
  v14 = sub_23FBFD684(&qword_256F62A70);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v46 = (uint64_t)&v43 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  MEMORY[0x24BDAC7A8](v21, v22);
  v26 = (char *)&v43 - v25;
  v27 = *(_QWORD *)(a1 + 16);
  v28 = *(_QWORD *)(v27 + 16);
  if (!v28)
  {
    swift_bridgeObjectRetain();
    v37 = 1;
    v38 = v54;
LABEL_15:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, v37, 1, v38);
    swift_bridgeObjectRelease();
    return;
  }
  v44 = v23;
  v45 = v7;
  v47 = v2;
  v48 = a2;
  v29 = v27 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v49 = *(_QWORD *)(v8 + 72);
  v50 = v24;
  v53 = v27;
  swift_bridgeObjectRetain();
  v30 = 0;
  while (1)
  {
    v31 = v55;
    sub_23FC0EDD8(v29, v55, _s19EvaluatorVoteSourceOMa);
    v32 = v51;
    sub_23FC0EDD8(v31, v51, _s19EvaluatorVoteSourceOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v34 = v54;
    v35 = v50;
    if (EnumCaseMultiPayload == 1)
    {
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v50, 1, 1, v54);
      swift_bridgeObjectRetain();
      sub_23FBFEF18(v32, _s19EvaluatorVoteSourceOMa);
    }
    else
    {
      sub_23FC0F380(v32, v50, _s21ActionExecutionResultOMa);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v35, 0, 1, v34);
      swift_bridgeObjectRetain();
    }
    sub_23FC0EE04(v35, (uint64_t)v26, &qword_256F62A70);
    sub_23FBFEF18(v55, _s19EvaluatorVoteSourceOMa);
    swift_bridgeObjectRelease();
    v36 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v26, 1, v34);
    sub_23FBFEF74((uint64_t)v26, &qword_256F62A70);
    if (v36 != 1)
      break;
    ++v30;
    v29 += v49;
    if (v28 == v30)
      goto LABEL_11;
  }
  if (v28 == v30)
  {
LABEL_11:
    v37 = 1;
    a2 = v48;
    v38 = v54;
    goto LABEL_15;
  }
  v38 = v54;
  if (v30 >= v28)
  {
    __break(1u);
  }
  else
  {
    v39 = v46;
    sub_23FD018B4(v29, v46);
    v40 = v44;
    sub_23FC0F3AC(v39, v44, &qword_256F62A70);
    v41 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v40, 1, v38);
    a2 = v48;
    v42 = (uint64_t)v45;
    if (v41 != 1)
    {
      sub_23FC0F380(v40, (uint64_t)v45, _s21ActionExecutionResultOMa);
      sub_23FBFEF74(v39, &qword_256F62A70);
      sub_23FC0F380(v42, a2, _s21ActionExecutionResultOMa);
      v37 = 0;
      goto LABEL_15;
    }
  }
  __break(1u);
}

void sub_23FCFFE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  char *v13;
  uint64_t v14;

  v1 = _s29ActionStatementFailureOutcomeVMa(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = sub_23FBFD684(&qword_256F5F658);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = _s29ActionStatementSuccessOutcomeVMa(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = _s21ActionExecutionResultOMa(0);
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC0EDD8(v0, (uint64_t)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v13 = (char *)sub_23FCFFFC0 + 4 * byte_23FD7B790[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FCFFFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC0F380(v1, v2, _s29ActionStatementSuccessOutcomeVMa);
  sub_23FC0EDD8(v2, v0, _s29ActionStatementSuccessOutcomeVMa);
  v3 = _s22ActionStatementOutcomeOMa(0);
  swift_storeEnumTagMultiPayload();
  sub_23FBFEF18(v2, _s29ActionStatementSuccessOutcomeVMa);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v3);
}

uint64_t sub_23FD00240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v41 = sub_23FD71474();
  v44 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v6);
  v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD72BF0();
  v42 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FBFD684(&qword_256F5D940);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowAction(0) + 28));
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v45 = v11;
    v40 = (uint8_t *)v12;
    v23 = v8;
    v24 = a3;
    v25 = v21 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v26 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23FC0EDD8(v25, (uint64_t)v16, type metadata accessor for FeedbackLearning.FlowActionEvent);
      if ((sub_23FD71450() & 1) != 0)
        break;
      sub_23FBFEF18((uint64_t)v16, type metadata accessor for FeedbackLearning.FlowActionEvent);
      v25 += v26;
      if (!--v22)
      {
        v27 = 1;
        goto LABEL_8;
      }
    }
    sub_23FC0F380((uint64_t)v16, (uint64_t)v20, type metadata accessor for FeedbackLearning.FlowActionEvent);
    v27 = 0;
LABEL_8:
    a3 = v24;
    v8 = v23;
    v12 = (uint64_t)v40;
    v11 = v45;
  }
  else
  {
    swift_bridgeObjectRetain();
    v27 = 1;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v20, v27, 1, v12);
  swift_bridgeObjectRelease();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v20, 1, v12) == 1)
  {
    sub_23FBFEF74((uint64_t)v20, &qword_256F5D940);
    sub_23FD724DC();
    v29 = v43;
    v28 = v44;
    v30 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, a2, v41);
    v31 = sub_23FD72BE4();
    v32 = sub_23FD74F54();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v45 = v11;
      v35 = v34;
      v47 = v34;
      *(_DWORD *)v33 = 136315138;
      v40 = v33 + 4;
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v36 = sub_23FD75344();
      v46 = sub_23FC9DC40(v36, v37, &v47);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v30);
      _os_log_impl(&dword_23FBF8000, v31, v32, "The referenced created action event cannot be found, actionEventId=%s", v33, 0xCu);
      v38 = 1;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v35, -1, -1);
      MEMORY[0x2426798D8](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v8);
      v38 = 1;
    }
  }
  else
  {
    sub_23FC0F380((uint64_t)v20, a3, type metadata accessor for FeedbackLearning.FlowActionEvent);
    v38 = 0;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, v38, 1, v12);
}

uint64_t sub_23FD0064C@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;

  v65 = a4;
  v71 = a3;
  v69 = a1;
  v70 = a5;
  v5 = a2;
  v6 = sub_23FD7157C();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v61 = (char *)&v60 - v13;
  v14 = sub_23FD72BF0();
  v66 = *(_QWORD *)(v14 - 8);
  v67 = v14;
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v68 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v64 = (char *)&v60 - v19;
  v20 = _s29ActionStatementFailureOutcomeVMa(0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v22 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v63 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v26);
  v62 = (char *)&v60 - v27;
  v28 = sub_23FBFD684(&qword_256F62A70);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = _s21ActionExecutionResultOMa(0);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v36 = (char *)&v60 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v37);
  v39 = (char *)&v60 - v38;
  if (v5)
  {
    v40 = v69;
    sub_23FC0F3AC(v65, (uint64_t)v31, &qword_256F62A70);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v31, 1, v32) != 1)
    {
      sub_23FC0F380((uint64_t)v31, (uint64_t)v39, _s21ActionExecutionResultOMa);
      sub_23FC0EDD8((uint64_t)v39, (uint64_t)v36, _s21ActionExecutionResultOMa);
      v56 = (char *)&loc_23FD00B90 + 4 * byte_23FD7B795[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    sub_23FBFEF74((uint64_t)v31, &qword_256F62A70);
    v41 = v64;
    sub_23FD724DC();
    v42 = v61;
    v43 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v61, v40, v6);
    v44 = sub_23FD72BE4();
    v45 = sub_23FD74F54();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v73 = v47;
      *(_DWORD *)v46 = 136315138;
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v48 = sub_23FD75344();
      v72 = sub_23FC9DC40(v48, v49, &v73);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v42, v43);
      _os_log_impl(&dword_23FBF8000, v44, v45, "The task outcome cannot be determined, action execution result was not set for %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v47, -1, -1);
      MEMORY[0x2426798D8](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v67);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v42, v6);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v67);
    }
  }
  else
  {
    sub_23FD724DC();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, v69, v6);
    v50 = sub_23FD72BE4();
    v51 = sub_23FD74F48();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v73 = v53;
      *(_DWORD *)v52 = 136315138;
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v54 = sub_23FD75344();
      v72 = sub_23FC9DC40(v54, v55, &v73);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
      _os_log_impl(&dword_23FBF8000, v50, v51, "The final task evaluation vote is abstain, not setting task status for %s", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v53, -1, -1);
      MEMORY[0x2426798D8](v52, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    }

    (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v67);
  }
  v57 = v70;
  v58 = sub_23FBFD684(&qword_256F5D4F8);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v57, 1, 4, v58);
  result = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *(_BYTE *)(v57 + *(int *)(result + 20)) = v71;
  return result;
}

void sub_23FD00E00(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void (*v78)(char *, unint64_t, uint64_t);
  char v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  void (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v114 = a2;
  v3 = sub_23FBFD684(&qword_256F62A78);
  MEMORY[0x24BDAC7A8](v3, v4);
  v113 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_23FD72BF0();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v6);
  v110 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD71414();
  v118 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v112 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v117 = (char *)&v103 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v104 = (char *)&v103 - v16;
  v121 = sub_23FD7424C();
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121, v17);
  v119 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23FD7157C();
  v143 = *(_QWORD *)(v19 - 8);
  v144 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23FD73604();
  v145 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_23FD73F64();
  v139 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127, v27);
  v138 = (char *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_23FD7409C();
  v137 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126, v29);
  v136 = (char *)&v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_23FD740CC();
  v31 = *(_QWORD *)(v141 - 8);
  v33 = MEMORY[0x24BDAC7A8](v141, v32);
  v35 = (char *)&v103 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v36);
  v142 = (char *)&v103 - v37;
  v38 = type metadata accessor for FeedbackLearning.FlowAction(0);
  v40 = MEMORY[0x24BDAC7A8](v38, v39);
  v42 = (char *)&v103 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40, v43);
  v45 = (char *)&v103 - v44;
  v46 = sub_23FBFD684(&qword_256F65DD0);
  v48 = MEMORY[0x24BDAC7A8](v46, v47);
  v111 = (uint64_t)&v103 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v48, v50);
  v107 = (uint64_t)&v103 - v52;
  v54 = MEMORY[0x24BDAC7A8](v51, v53);
  v105 = (uint64_t)&v103 - v55;
  v57 = MEMORY[0x24BDAC7A8](v54, v56);
  v106 = (uint64_t)&v103 - v58;
  v60 = MEMORY[0x24BDAC7A8](v57, v59);
  v135 = (uint64_t)&v103 - v61;
  MEMORY[0x24BDAC7A8](v60, v62);
  v116 = (uint64_t)&v103 - v63;
  v123 = v38;
  v64 = *(_QWORD *)(a1 + *(int *)(v38 + 24));
  v115 = v45;
  sub_23FC0EDD8(a1, (uint64_t)v45, type metadata accessor for FeedbackLearning.FlowAction);
  v124 = v42;
  sub_23FC0EDD8(a1, (uint64_t)v42, type metadata accessor for FeedbackLearning.FlowAction);
  v134 = *(_QWORD *)(v64 + 16);
  if (v134)
  {
    v103 = v35;
    v131 = v64 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    v132 = v31;
    v130 = *(_QWORD *)(v31 + 72);
    v133 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
    v129 = *MEMORY[0x24BE56AC8];
    swift_bridgeObjectRetain();
    v65 = 0;
    v66 = v126;
    v122 = v8;
    v140 = v64;
    while (1)
    {
      v67 = v131 + v130 * v65;
      v133(v142, v67, v141);
      swift_bridgeObjectRetain();
      v68 = v136;
      sub_23FD740A8();
      v69 = v68;
      v70 = v137;
      v71 = (*(uint64_t (**)(char *, uint64_t))(v137 + 88))(v69, v66);
      v128 = v67;
      if (v71 == v129)
      {
        (*(void (**)(char *, uint64_t))(v70 + 96))(v69, v66);
        v72 = v127;
        (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v69, v127);
        v73 = sub_23FD73F34();
        v74 = *(_QWORD *)(v73 + 16);
        if (v74)
        {
          v75 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
          v125 = v73;
          v76 = v73 + v75;
          v77 = *(_QWORD *)(v145 + 72);
          v78 = *(void (**)(char *, unint64_t, uint64_t))(v145 + 16);
          while (1)
          {
            v78(v26, v76, v23);
            sub_23FD735F8();
            v79 = sub_23FD71558();
            (*(void (**)(char *, uint64_t))(v143 + 8))(v22, v144);
            (*(void (**)(char *, uint64_t))(v145 + 8))(v26, v23);
            if ((v79 & 1) != 0)
              break;
            v76 += v77;
            if (!--v74)
            {
              swift_bridgeObjectRelease();
              v80 = v122;
              v66 = v126;
              v72 = v127;
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          v82 = v119;
          sub_23FD740C0();
          v81 = v135;
          sub_23FD74240();
          (*(void (**)(char *, uint64_t))(v120 + 8))(v82, v121);
          (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v127);
          v80 = v122;
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v81, 0, 1, v122);
          v66 = v126;
        }
        else
        {
          swift_bridgeObjectRelease();
          v66 = v126;
          v80 = v8;
LABEL_11:
          (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v72);
          v81 = v135;
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v135, 1, 1, v80);
        }
      }
      else
      {
        v81 = v135;
        v80 = v8;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v135, 1, 1, v8);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v66);
      }
      v83 = *(void (**)(char *, uint64_t))(v132 + 8);
      v83(v142, v141);
      swift_bridgeObjectRelease();
      v8 = v80;
      v84 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v81, 1, v80);
      sub_23FBFEF74(v81, &qword_256F65DD0);
      if (v84 != 1)
        break;
      if (++v65 == v134)
        goto LABEL_18;
    }
    if (v65 != v134)
    {
      if (v65 >= *(_QWORD *)(v140 + 16))
      {
        __break(1u);
      }
      else
      {
        v94 = (uint64_t)v103;
        v95 = v141;
        v133(v103, v128, v141);
        v96 = v105;
        v97 = (uint64_t)v115;
        sub_23FD02718(v94, (uint64_t)v115, v105);
        sub_23FBFEF18(v97, type metadata accessor for FeedbackLearning.FlowAction);
        v83((char *)v94, v95);
        v98 = v106;
        sub_23FC0EE04(v96, v106, &qword_256F65DD0);
        v99 = v107;
        sub_23FC0F3AC(v98, v107, &qword_256F65DD0);
        v100 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v99, 1, v8);
        v87 = v118;
        v88 = v117;
        v85 = v116;
        if (v100 != 1)
        {
          v101 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 32);
          v102 = v104;
          v101(v104, v99, v8);
          sub_23FBFEF74(v98, &qword_256F65DD0);
          v101((char *)v85, (uint64_t)v102, v8);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v85, 0, 1, v8);
          swift_bridgeObjectRelease();
          v86 = v8;
          goto LABEL_19;
        }
      }
      sub_23FBFEF18((uint64_t)v124, type metadata accessor for FeedbackLearning.FlowAction);
      __break(1u);
      return;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
LABEL_18:
  sub_23FBFEF18((uint64_t)v115, type metadata accessor for FeedbackLearning.FlowAction);
  v85 = v116;
  v86 = v8;
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v116, 1, 1, v8);
  swift_bridgeObjectRelease();
  v87 = v118;
  v88 = v117;
LABEL_19:
  sub_23FBFEF18((uint64_t)v124, type metadata accessor for FeedbackLearning.FlowAction);
  v89 = v111;
  sub_23FC0F3AC(v85, v111, &qword_256F65DD0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v89, 1, v86) == 1)
  {
    sub_23FBFEF74(v89, &qword_256F65DD0);
    sub_23FD724DC();
    v90 = sub_23FD72BE4();
    v91 = sub_23FD74F54();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v92 = 0;
      _os_log_impl(&dword_23FBF8000, v90, v91, "The task occurred time could not be retrieved, using the current time", v92, 2u);
      MEMORY[0x2426798D8](v92, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v109);
    sub_23FD71408();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v88, v89, v86);
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v112, v88, v86);
  v93 = sub_23FD72F08();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v113, 1, 1, v93);
  sub_23FD72D1C();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v86);
  sub_23FBFEF74(v85, &qword_256F65DD0);
}

void sub_23FD018B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = _s19EvaluatorVoteSourceOMa(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC0EDD8(a1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = _s21ActionExecutionResultOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 1, 1, v9);
    sub_23FBFEF18((uint64_t)v7, _s19EvaluatorVoteSourceOMa);
  }
  else
  {
    sub_23FC0F380((uint64_t)v7, a2, _s21ActionExecutionResultOMa);
    v10 = _s21ActionExecutionResultOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 0, 1, v10);
  }
}

void sub_23FD019A0(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t *v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;

  v90 = a2;
  v5 = sub_23FD72BF0();
  v94 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v87 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v86 = (char *)&v83 - v10;
  v11 = sub_23FD74108();
  v91 = *(_QWORD *)(v11 - 8);
  v92 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v93 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FBFD684(qword_256F5EC20);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v89 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v88 = (uint64_t)&v83 - v19;
  v20 = sub_23FBFD684(&qword_256F5DDA8);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = _s19ToolboxSearchResultVMa(0);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v85 = (uint64_t *)((char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = (char *)&v83 - v29;
  v31 = sub_23FBFD684(&qword_256F5D940);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  v37 = MEMORY[0x24BDAC7A8](v35, v36);
  v39 = (char *)&v83 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v37, v40);
  v84 = (uint64_t)&v83 - v42;
  MEMORY[0x24BDAC7A8](v41, v43);
  v45 = (char *)&v83 - v44;
  sub_23FC0F3AC(a1, (uint64_t)v34, &qword_256F5D940);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v34, 1, v35) == 1)
  {
    sub_23FBFEF74((uint64_t)v34, &qword_256F5D940);
LABEL_11:
    v61 = type metadata accessor for FeedbackLearning.TaskAction(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, 1, 1, v61);
    return;
  }
  v83 = a3;
  sub_23FC0F380((uint64_t)v34, (uint64_t)v45, type metadata accessor for FeedbackLearning.FlowActionEvent);
  sub_23FBFF4AC();
  sub_23FC0D504();
  swift_bridgeObjectRelease();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v24) == 1)
  {
    sub_23FBFEF74((uint64_t)v23, &qword_256F5DDA8);
    v46 = v87;
    sub_23FD724DC();
    v96 = v45;
    sub_23FC0EDD8((uint64_t)v45, (uint64_t)v39, type metadata accessor for FeedbackLearning.FlowActionEvent);
    v47 = sub_23FD72BE4();
    v48 = sub_23FD74F54();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v98 = v50;
      *(_DWORD *)v49 = 136315138;
      v51 = sub_23FBFF4AC();
      v97 = sub_23FC9DC40(v51, v52, &v98);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18((uint64_t)v39, type metadata accessor for FeedbackLearning.FlowActionEvent);
      _os_log_impl(&dword_23FBF8000, v47, v48, "The referenced action tool definition cannot be extracted, toolId=%s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v50, -1, -1);
      MEMORY[0x2426798D8](v49, -1, -1);
    }
    else
    {
      sub_23FBFEF18((uint64_t)v39, type metadata accessor for FeedbackLearning.FlowActionEvent);
    }

    (*(void (**)(char *, uint64_t))(v94 + 8))(v46, v95);
    a3 = v83;
    sub_23FBFEF18((uint64_t)v96, type metadata accessor for FeedbackLearning.FlowActionEvent);
    goto LABEL_11;
  }
  v53 = (uint64_t)v23;
  v54 = (uint64_t)v30;
  sub_23FC0F380(v53, (uint64_t)v30, _s19ToolboxSearchResultVMa);
  v56 = v91;
  v55 = v92;
  v57 = v93;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v93, &v30[*(int *)(v24 + 20)], v92);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v57, v55);
  if (v58 == *MEMORY[0x24BE56D38] || v58 == *MEMORY[0x24BE56D28])
  {
    (*(void (**)(char *, uint64_t))(v56 + 96))(v57, v55);
    v59 = sub_23FD74474();
    v60 = v88;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v88, v57, v59);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v60, 0, 1, v59);
  }
  else
  {
    if (v58 != *MEMORY[0x24BE56D30])
    {
      sub_23FD75374();
      __break(1u);
      return;
    }
    v62 = v86;
    sub_23FD724DC();
    v63 = v84;
    sub_23FC0EDD8((uint64_t)v45, v84, type metadata accessor for FeedbackLearning.FlowActionEvent);
    v64 = v85;
    sub_23FC0EDD8(v54, (uint64_t)v85, _s19ToolboxSearchResultVMa);
    v65 = sub_23FD72BE4();
    v66 = sub_23FD74F54();
    v67 = v66;
    if (os_log_type_enabled(v65, v66))
    {
      v68 = swift_slowAlloc();
      v96 = v45;
      v69 = v68;
      v70 = swift_slowAlloc();
      v98 = v70;
      *(_DWORD *)v69 = 136315394;
      sub_23FD71474();
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      LODWORD(v87) = v67;
      v71 = sub_23FD75344();
      v97 = sub_23FC9DC40(v71, v72, &v98);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18(v63, type metadata accessor for FeedbackLearning.FlowActionEvent);
      *(_WORD *)(v69 + 12) = 2080;
      v73 = v62;
      v74 = *v64;
      v75 = v64[1];
      swift_bridgeObjectRetain();
      v76 = v74;
      v57 = v93;
      v97 = sub_23FC9DC40(v76, v75, &v98);
      v55 = v92;
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18((uint64_t)v64, _s19ToolboxSearchResultVMa);
      _os_log_impl(&dword_23FBF8000, v65, (os_log_type_t)v87, "Action with eventId=%s is referencing a schema with id=%s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy();
      v77 = v70;
      v56 = v91;
      MEMORY[0x2426798D8](v77, -1, -1);
      v78 = v69;
      v45 = v96;
      MEMORY[0x2426798D8](v78, -1, -1);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v73, v95);
    }
    else
    {
      sub_23FBFEF18(v63, type metadata accessor for FeedbackLearning.FlowActionEvent);
      sub_23FBFEF18((uint64_t)v64, _s19ToolboxSearchResultVMa);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v62, v95);
    }
    v79 = sub_23FD74474();
    v60 = v88;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v88, 1, 1, v79);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
  }
  v80 = v89;
  sub_23FC0F3AC(v60, v89, qword_256F5EC20);
  MEMORY[0x24BDAC7A8](v81, v82);
  *(&v83 - 2) = (uint64_t)v45;
  *((_BYTE *)&v83 - 8) = v90 & 1;
  sub_23FCFDE04((void (*)(char *))sub_23FD040C0, v83);
  sub_23FBFEF74(v80, qword_256F5EC20);
  sub_23FBFEF74(v60, qword_256F5EC20);
  sub_23FBFEF18(v54, _s19ToolboxSearchResultVMa);
  sub_23FBFEF18((uint64_t)v45, type metadata accessor for FeedbackLearning.FlowActionEvent);
}

uint64_t sub_23FD0223C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FC0EDD8(a2, a4, type metadata accessor for FeedbackLearning.FlowActionEvent);
  v7 = type metadata accessor for FeedbackLearning.TaskAction(0);
  v8 = a4 + *(int *)(v7 + 20);
  v9 = sub_23FD74474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  *(_BYTE *)(a4 + *(int *)(v7 + 24)) = a3;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a4, 0, 1, v7);
}

uint64_t sub_23FD022DC()
{
  type metadata accessor for FeedbackLearning.FlowAction(0);
  return sub_23FD71558() & 1;
}

void sub_23FD02328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD v27[3];
  uint64_t v28;

  v10 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD72BF0();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    MEMORY[0x24BDAC7A8](v17, v18);
    v27[-4] = a3;
    v27[-3] = a1;
    v27[-2] = a4;
    v27[-1] = a5;
    sub_23FC8E4FC((void (*)(_QWORD))sub_23FD04108, (uint64_t)&v27[-6], a2);
  }
  else
  {
    sub_23FD724DC();
    sub_23FC0EDD8(a1, (uint64_t)v13, type metadata accessor for FeedbackLearning.CandidateParameter);
    v21 = sub_23FD72BE4();
    v22 = sub_23FD74F54();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v28 = v24;
      *(_DWORD *)v23 = 136315138;
      v27[0] = v23 + 4;
      FeedbackLearning.CandidateParameter.description.getter();
      v27[2] = sub_23FC9DC40(v25, v26, &v28);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18((uint64_t)v13, type metadata accessor for FeedbackLearning.CandidateParameter);
      _os_log_impl(&dword_23FBF8000, v21, v22, "Cannot determine final candidateId for parameter %s, candidateId is nil", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v24, -1, -1);
      MEMORY[0x2426798D8](v23, -1, -1);
    }
    else
    {
      sub_23FBFEF18((uint64_t)v13, type metadata accessor for FeedbackLearning.CandidateParameter);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
}

uint64_t sub_23FD02584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;

  if (*(_QWORD *)(a2 + 16)
    && (sub_23FC84D38(a3), (v9 & 1) != 0)
    && (swift_bridgeObjectRetain(), sub_23FC7FC7C(), v11 = v10, swift_bridgeObjectRelease(), (v11 & 1) != 0))
  {
    v12 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
    v13 = a5;
    v14 = 1;
  }
  else
  {
    sub_23FC0C1AC();
    v15 = a4 + *(int *)(type metadata accessor for FeedbackLearning.FlowAction(0) + 20);
    v16 = sub_23FD7157C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a5, v15, v16);
    v17 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
    sub_23FC0EDD8(a3, a5 + v17[5], type metadata accessor for FeedbackLearning.CandidateParameter);
    v18 = a5 + v17[6];
    v19 = sub_23FD72DB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a1, v19);
    v20 = a5 + v17[7];
    v21 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v20, 1, 1, v21);
    *(_BYTE *)(a5 + v17[8]) = v23;
    *(_BYTE *)(a5 + v17[9]) = -126;
    v13 = a5;
    v14 = 0;
    v12 = (uint64_t)v17;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v13, v14, 1, v12);
}

uint64_t sub_23FD02718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a3;
  v4 = sub_23FD7424C();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD7157C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23FD73F64();
  v12 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FD7409C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1;
  sub_23FD740A8();
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v20, v16) == *MEMORY[0x24BE56AC8])
  {
    v39 = v4;
    (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
    v21 = v44;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v20, v44);
    v22 = sub_23FD73F34();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v37 = v15;
      v38 = v12;
      v24 = *(_QWORD *)(sub_23FD73604() - 8);
      v25 = v22 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      type metadata accessor for FeedbackLearning.FlowAction(0);
      v26 = *(_QWORD *)(v24 + 72);
      while (1)
      {
        sub_23FD735F8();
        v27 = sub_23FD71558();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        if ((v27 & 1) != 0)
          break;
        v25 += v26;
        if (!--v23)
        {
          swift_bridgeObjectRelease();
          v21 = v44;
          v28 = v45;
          v15 = v37;
          v12 = v38;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      v34 = v40;
      sub_23FD740C0();
      v35 = v45;
      sub_23FD74240();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v39);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v44);
      v31 = sub_23FD71414();
      v32 = v35;
      v33 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = v45;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v21);
      v31 = sub_23FD71414();
      v32 = v28;
      v33 = 1;
    }
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v32, v33, 1, v31);
  }
  else
  {
    v29 = sub_23FD71414();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v45, 1, 1, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
}

uint64_t sub_23FD02A08(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  _UNKNOWN **v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  NSObject *v76;
  os_log_type_t v77;
  BOOL v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint8_t *v156;
  void (*v157)(char *, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  char v187[8];
  char v188[8];
  char v189[8];
  char v190[8];
  uint64_t v191[5];
  uint64_t v192;
  uint64_t v193;
  _UNKNOWN **v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;

  v164 = a1;
  sub_23FBFD684(&qword_256F62A98);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  v8 = sub_23FBFEFAC(v7);
  v9 = _s19ValueStepEvaluationVMa(v8);
  sub_23FBFF0B8(v9, (uint64_t)&v195);
  v168 = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFF218();
  v167 = v15;
  sub_23FBFD684(&qword_256F62AA0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FBFEFE0();
  v19 = sub_23FBFEFAC(v18);
  v20 = _s23ParameterStepEvaluationVMa(v19);
  sub_23FBFF0B8(v20, (uint64_t)&v196);
  v170 = v21;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FBFF218();
  v169 = v26;
  sub_23FBFD684(&qword_256F62AA8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FBFEFE0();
  v185 = v29;
  v30 = sub_23FC10050();
  v31 = _s18ToolStepEvaluationVMa(v30);
  sub_23FBFF0B8(v31, (uint64_t)&v197);
  v172 = v32;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v33, v34);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v35, v36);
  sub_23FBFF218();
  v38 = sub_23FBFEFAC(v37);
  v39 = _s23StatementStepEvaluationOMa(v38);
  sub_23FBFF0B8(v39, (uint64_t)v187);
  v160 = v40;
  sub_23FC05FF4();
  v43 = MEMORY[0x24BDAC7A8](v41, v42);
  v45 = (char *)&v156 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43, v46);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_23FBFF218();
  sub_23FBFEFAC(v49);
  v50 = sub_23FD74120();
  sub_23FBFF0B8(v50, (uint64_t)v190);
  v163 = v51;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v52, v53);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v54);
  v158 = _s22ToolCandidateEvaluatorVMa();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v55, v56);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v57);
  v58 = sub_23FD72BF0();
  v184 = *(_QWORD **)(v58 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v59, v60);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v61, v62);
  v64 = (char *)&v156 - v63;
  v65 = _s19TranscriptRetrieverVMa();
  v193 = v65;
  v194 = &off_251014790;
  v66 = sub_23FBFDDEC(&v192);
  sub_23FD041B0(a2, (uint64_t)v66);
  v67 = sub_23FBFDE40(&a3[OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator], *(_QWORD *)&a3[OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator+ 24]);
  v69 = v193;
  v68 = v194;
  v70 = sub_23FBFDE40(&v192, v193);
  v191[3] = v69;
  v71 = (uint64_t)v68[1];
  v191[4] = v71;
  v72 = sub_23FBFDDEC(v191);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v72, v70, v69);
  v73 = sub_23FCF4844(v164, (uint64_t)v72, *v67, v69, v71);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v191);
  v74 = sub_23FD041D0();
  sub_23FC584E0((uint64_t)v74 + *(int *)(v65 + 20), (uint64_t)v191);
  v75 = sub_23FD041D0();
  sub_23FC584E0((uint64_t)v75 + *(int *)(v65 + 28), (uint64_t)v189);
  sub_23FD724DC();
  swift_bridgeObjectRetain_n();
  v183 = v64;
  v76 = sub_23FD72BE4();
  v77 = sub_23FD74F3C();
  v78 = os_log_type_enabled(v76, v77);
  v166 = v73;
  if (v78)
  {
    v79 = (uint8_t *)sub_23FBFEFF4();
    v186 = sub_23FBFEFF4();
    *(_DWORD *)v79 = 136315138;
    v156 = v79 + 4;
    sub_23FD041B8();
    swift_bridgeObjectRetain();
    v80 = sub_23FD041B8();
    v81 = MEMORY[0x242678AA4](v80, v157);
    v83 = v82;
    sub_23FD041B8();
    swift_bridgeObjectRelease();
    v84 = sub_23FC9DC40(v81, v83, &v186);
    sub_23FD04244(v84);
    sub_23FD75044();
    sub_23FD041B8();
    sub_23FC10048();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v76, v77, "Generated parameter step evaluations: %s", v79, 0xCu);
    sub_23FCA6DC8();
    sub_23FBFEFA0();
  }

  sub_23FC10048();
  v157 = (void (*)(char *, uint64_t))v184[1];
  v157(v183, v58);
  v159 = v58;
  v85 = *(_QWORD *)(v73 + 16);
  v183 = a3;
  if (v85)
  {
    sub_23FD04164();
    v87 = v73 + v86;
    v89 = *(_QWORD *)(v88 + 72);
    sub_23FC10110();
    swift_retain();
    v184 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v90 = v87;
    v91 = v85;
    v92 = v173;
    do
    {
      sub_23FD041B0(v90, (uint64_t)v45);
      sub_23FCF90B4();
      sub_23FCF27C8((uint64_t)v45);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v92, 1, v176) == 1)
      {
        sub_23FBFEF74(v92, &qword_256F62A98);
      }
      else
      {
        v93 = v167;
        sub_23FD04230(v92, v167);
        sub_23FD04230(v93, v175);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC75E98();
          sub_23FC992AC();
          v184 = v99;
        }
        v95 = v184[2];
        v94 = v184[3];
        if (v95 >= v94 >> 1)
        {
          sub_23FCA6D20(v94);
          sub_23FC992AC();
          v184 = v100;
        }
        v184[2] = v95 + 1;
        sub_23FD04164();
        sub_23FD04230(v175, v97 + v96 + *(_QWORD *)(v98 + 72) * v95);
        v92 = v173;
      }
      v90 += v89;
      --v91;
    }
    while (v91);
    v101 = v183;
    swift_release();
    sub_23FC1002C();
    swift_bridgeObjectRetain();
    v102 = v101;
    swift_retain();
    v103 = MEMORY[0x24BEE4AF8];
    v73 = (uint64_t)_s23StatementStepEvaluationOMa;
    v104 = v85;
    v105 = v174;
    v106 = v177;
    do
    {
      sub_23FD041B0(v87, v106);
      sub_23FCF913C();
      sub_23FCF27C8(v106);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v105, 1, v179) == 1)
      {
        sub_23FBFEF74(v105, &qword_256F62AA0);
      }
      else
      {
        v107 = v169;
        sub_23FC0F380(v105, v169, _s23ParameterStepEvaluationVMa);
        sub_23FC0F380(v107, v178, _s23ParameterStepEvaluationVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC75E98();
          sub_23FC99298();
          v103 = v112;
        }
        v109 = *(_QWORD *)(v103 + 16);
        v108 = *(_QWORD *)(v103 + 24);
        if (v109 >= v108 >> 1)
        {
          sub_23FCA6D20(v108);
          sub_23FC99298();
          v103 = v113;
        }
        *(_QWORD *)(v103 + 16) = v109 + 1;
        sub_23FD04164();
        sub_23FC0F380(v178, v103 + v110 + *(_QWORD *)(v111 + 72) * v109, _s23ParameterStepEvaluationVMa);
        v105 = v174;
      }
      v87 += v89;
      --v104;
    }
    while (v104);
    a3 = v102;
    swift_release();
    sub_23FD04190();
  }
  else
  {
    v103 = MEMORY[0x24BEE4AF8];
    v184 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23FD04224(v162, (uint64_t)&a3[OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_toolbox], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v163 + 16));
  if (v85)
  {
    sub_23FD04164();
    v115 = v73 + v114;
    v117 = *(_QWORD *)(v116 + 72);
    sub_23FC10110();
    swift_retain();
    v118 = MEMORY[0x24BEE4AF8];
    v119 = v180;
    do
    {
      sub_23FD041B0(v115, v119);
      sub_23FCF9030();
      v120 = v185;
      sub_23FCF27C8(v119);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v120, 1, v182) == 1)
      {
        sub_23FBFEF74(v120, &qword_256F62AA8);
      }
      else
      {
        v121 = v120;
        v122 = v171;
        sub_23FD041F4(v121, v171);
        sub_23FD041F4(v122, v181);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC75E98();
          sub_23FC99284();
          v118 = v127;
        }
        v124 = *(_QWORD *)(v118 + 16);
        v123 = *(_QWORD *)(v118 + 24);
        if (v124 >= v123 >> 1)
        {
          sub_23FCA6D20(v123);
          sub_23FC99284();
          v118 = v128;
        }
        *(_QWORD *)(v118 + 16) = v124 + 1;
        sub_23FD04164();
        sub_23FD041F4(v181, v118 + v125 + *(_QWORD *)(v126 + 72) * v124);
      }
      v115 += v117;
      --v85;
    }
    while (v85);
    swift_release();
    sub_23FD04190();
  }
  else
  {
    v118 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v129 = v165;
  sub_23FD04224(v165, v162, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v163 + 32));
  *(_QWORD *)(v129 + *(int *)(v158 + 20)) = v118;
  sub_23FCF91C4();
  v131 = v130;
  MEMORY[0x24BDAC7A8](v130, v132);
  sub_23FD04258();
  *(_QWORD *)(v133 - 32) = v134;
  *(_QWORD *)(v133 - 24) = v189;
  *(_QWORD *)(v133 - 16) = v184;
  *(_QWORD *)(v133 - 8) = v103;
  v136 = sub_23FC950FC((uint64_t)sub_23FD04124, v135, v131, (uint64_t)v188);
  sub_23FC1002C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23FCF954C();
  v138 = v137;
  MEMORY[0x24BDAC7A8](v137, v139);
  sub_23FD04258();
  *(_QWORD *)(v140 - 32) = v141;
  *(_QWORD *)(v140 - 24) = v189;
  *(_QWORD *)(v140 - 16) = v129;
  sub_23FC95118((uint64_t)sub_23FD04144, v142, v138, (uint64_t)v187);
  sub_23FC1002C();
  v143 = v161;
  sub_23FD724DC();
  swift_bridgeObjectRetain_n();
  v144 = sub_23FD72BE4();
  v145 = sub_23FD74F3C();
  if (os_log_type_enabled(v144, v145))
  {
    v146 = (uint8_t *)sub_23FBFEFF4();
    v186 = sub_23FBFEFF4();
    *(_DWORD *)v146 = 136315138;
    swift_bridgeObjectRetain();
    v147 = sub_23FBFD684(&qword_256F5FA00);
    v148 = MEMORY[0x242678AA4](v136, v147);
    v150 = v149;
    swift_bridgeObjectRelease();
    v151 = sub_23FC9DC40(v148, v150, &v186);
    sub_23FD04244(v151);
    sub_23FD75044();
    sub_23FC10048();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v144, v145, "Generated candidate outcomes: %s", v146, 0xCu);
    sub_23FCA6DC8();
    sub_23FBFEFA0();
  }

  sub_23FC10048();
  v157(v143, v159);
  sub_23FC795C8();
  v153 = v152;
  swift_bridgeObjectRelease();
  sub_23FC795C8();
  swift_bridgeObjectRelease();
  v186 = v153;
  sub_23FC1726C();
  v154 = v186;
  sub_23FBFEF18(v165, (uint64_t (*)(_QWORD))_s22ToolCandidateEvaluatorVMa);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v189);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v191);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v192);
  return v154;
}

uint64_t sub_23FD03658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FCFF3E0(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t *_s13TaskEvaluatorVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD74120();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
  }
  return a1;
}

uint64_t _s13TaskEvaluatorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + *(int *)(a2 + 20));
}

uint64_t _s13TaskEvaluatorVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

uint64_t _s13TaskEvaluatorVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23FBFDB34((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

uint64_t _s13TaskEvaluatorVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t _s13TaskEvaluatorVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t _s13TaskEvaluatorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD03918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23FC5F58C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t _s13TaskEvaluatorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD0399C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23FC5F58C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_23FD03A10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74120();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23FD03A80(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_23FCFF86C(a1, a2);
}

uint64_t sub_23FD03A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23FD03ACC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FCFFAB4(a1, a2);
}

uint64_t sub_23FD03AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char v75[16];
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78[3];
  uint64_t v79;
  _UNKNOWN **v80;

  v62[0] = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  v68 = *(_QWORD *)(v62[0] - 8);
  MEMORY[0x24BDAC7A8](v62[0], v6);
  v8 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FD72DB8();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v72 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v70 = (char *)v62 - v15;
  v71 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v16 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v17);
  v19 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = _s33CandidateParameterResolutionStateVMa(0);
  MEMORY[0x24BDAC7A8](v64, v20);
  v65 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = _s19TranscriptRetrieverVMa();
  v79 = v63;
  v80 = &off_251014790;
  v22 = sub_23FBFDDEC(v78);
  sub_23FC0EDD8(a3, (uint64_t)v22, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  v66 = a1;
  v76 = a1;
  swift_bridgeObjectRetain();
  sub_23FD31014((uint64_t (*)(char *))sub_23FD040E0, (uint64_t)v75, a2);
  sub_23FCFD73C(v23);
  v24 = swift_bridgeObjectRetain();
  sub_23FCFD004(v24, v24);
  v26 = v25;
  v62[1] = 0;
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 16);
  v67 = v26;
  if (v27)
  {
    v28 = v26 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v69 = *(_QWORD *)(v16 + 72);
    swift_bridgeObjectRetain();
    v29 = (_QWORD *)MEMORY[0x24BEE4B00];
    v30 = v72;
    while (1)
    {
      v73 = v27;
      v74 = v28;
      sub_23FC0EDD8(v28, (uint64_t)v19, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      v31 = v71;
      sub_23FC0EDD8((uint64_t)&v19[*(int *)(v71 + 20)], (uint64_t)v8, type metadata accessor for FeedbackLearning.CandidateParameter);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v30, &v19[*(int *)(v31 + 24)], v9);
      swift_isUniquelyReferenced_nonNull_native();
      v77 = v29;
      v32 = sub_23FC84D38((uint64_t)v8);
      if (__OFADD__(v29[2], (v33 & 1) == 0))
        break;
      v34 = v32;
      v35 = v33;
      sub_23FBFD684(&qword_256F62A80);
      v36 = sub_23FD75200();
      v29 = v77;
      v37 = v74;
      if ((v36 & 1) != 0)
      {
        v38 = sub_23FC84D38((uint64_t)v8);
        if ((v35 & 1) != (v39 & 1))
          goto LABEL_18;
        v34 = v38;
      }
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0)
      {
        v29[(v34 >> 6) + 8] |= 1 << v34;
        sub_23FC0EDD8((uint64_t)v8, v29[6] + *(_QWORD *)(v68 + 72) * v34, type metadata accessor for FeedbackLearning.CandidateParameter);
        *(_QWORD *)(v29[7] + 8 * v34) = MEMORY[0x24BEE4B08];
        v40 = v29[2];
        v41 = __OFADD__(v40, 1);
        v42 = v40 + 1;
        if (v41)
          goto LABEL_17;
        v29[2] = v42;
      }
      v43 = v70;
      v30 = v72;
      sub_23FC8571C();
      sub_23FBFEF18((uint64_t)v8, type metadata accessor for FeedbackLearning.CandidateParameter);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v9);
      sub_23FBFEF18((uint64_t)v19, type metadata accessor for FeedbackLearning.CandidateEvaluation);
      v28 = v37 + v69;
      v27 = v73 - 1;
      if (v73 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_23FD753C8();
    __break(1u);
  }
  else
  {
    v29 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_13:
    v44 = sub_23FBFDE40(v78, v79);
    v45 = v63;
    v46 = *sub_23FBFDE40((_QWORD *)((char *)v44 + *(int *)(v63 + 28)), *(_QWORD *)((char *)v44 + *(int *)(v63 + 28) + 24));
    v47 = type metadata accessor for FeedbackLearning.FlowAction(0);
    v48 = v66;
    v49 = v66 + *(int *)(v47 + 20);
    swift_bridgeObjectRetain();
    v50 = sub_23FCC3A90(v49, v46);
    swift_bridgeObjectRelease();
    if (!v50)
    {
      sub_23FBFD684(&qword_256F5DD98);
      sub_23FBFEE2C(&qword_256F61A80, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
      v50 = sub_23FD74B40();
    }
    v51 = (char *)sub_23FBFDE40(v78, v79) + *(int *)(v45 + 20);
    v52 = sub_23FBFDE40(v78, v79);
    v53 = v64;
    v54 = (uint64_t)v65;
    sub_23FC584E0((uint64_t)v52 + *(int *)(v45 + 28), (uint64_t)&v65[*(int *)(v64 + 24)]);
    v55 = sub_23FD7157C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v54, v49, v55);
    sub_23FC584E0((uint64_t)v51, v54 + *(int *)(v53 + 20));
    MEMORY[0x24BDAC7A8](v56, v57);
    v62[-4] = v29;
    v62[-3] = v54;
    v62[-2] = v48;
    sub_23FCFD3D0(v50, (uint64_t (*)(char *, uint64_t))sub_23FD040FC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v77 = (_QWORD *)v67;
    sub_23FC1726C();
    sub_23FCFD73C((uint64_t)v77);
    v58 = swift_bridgeObjectRetain();
    sub_23FCFD004(v58, v58);
    v60 = v59;
    swift_bridgeObjectRelease();
    sub_23FBFEF18(v54, _s33CandidateParameterResolutionStateVMa);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v78);
    return v60;
  }
  return result;
}

uint64_t sub_23FD040C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FD0223C(a1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), a2);
}

uint64_t sub_23FD040E0()
{
  return sub_23FD022DC() & 1;
}

void sub_23FD040FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FD02328(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_23FD04108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23FD02584(a1, v2[2], v2[3], v2[5], a2);
}

void sub_23FD04124()
{
  sub_23FCF842C();
}

void sub_23FD04144()
{
  sub_23FCF8C5C();
}

uint64_t sub_23FD04178()
{
  return sub_23FD75044();
}

uint64_t sub_23FD04188(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_23FD04190()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD041A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1, v0, v3);
}

void sub_23FD041B0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0EDD8(a1, a2, v2);
}

uint64_t sub_23FD041B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 408);
}

void sub_23FD041C4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FBFEF74(v1, v0);
}

_QWORD *sub_23FD041D0()
{
  uint64_t v0;

  return sub_23FBFDE40((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
}

uint64_t sub_23FD041DC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 208))(a1, *(_QWORD *)(v1 - 144));
}

_QWORD *sub_23FD041E8()
{
  uint64_t v0;

  return sub_23FBFDE40(*(_QWORD **)(v0 - 120), *(_QWORD *)(*(_QWORD *)(v0 - 120) + 24));
}

void sub_23FD041F4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0F380(a1, a2, v2);
}

void sub_23FD041FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FBFEF18(v2, a2);
}

uint64_t sub_23FD04204()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FD04224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 432));
}

void sub_23FD04230(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0F380(a1, a2, v2);
}

uint64_t sub_23FD04238()
{
  return sub_23FD75344();
}

uint64_t sub_23FD04244(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = a1;
  return v1 - 248;
}

uint64_t sub_23FD0426C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;

  sub_23FD04E38(a1, v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25TaskStepLoggingSubscriber_id, type metadata accessor for SessionIdentityPack);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25TaskStepLoggingSubscriber_eventParentID) = a2;
  v5 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
  swift_unknownObjectRelease();
  v6 = objc_msgSend(v5, sel_Execution);
  swift_unknownObjectRelease();
  v7 = objc_msgSend(v6, sel_source);

  sub_23FC5FB58(a1);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25TaskStepLoggingSubscriber_biomeSiriExecutionSource) = v7;
  return v2;
}

uint64_t sub_23FD04344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  int v56;
  id v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void (*v64)(char *, char *);
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v0 = sub_23FD734C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  sub_23FBFEFE0();
  v60 = v3;
  v4 = sub_23FBFD684(&qword_256F65DD0);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFEFE0();
  v63 = v6;
  v7 = type metadata accessor for SessionID(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD72BF0();
  v64 = *(void (**)(char *, char *))(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v65 = (char *)&v54 - v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v54 - v20;
  sub_23FD72488();
  sub_23FD04E9C();
  v22 = sub_23FD72BE4();
  v23 = sub_23FD74F48();
  v24 = os_log_type_enabled(v22, v23);
  v66 = v15;
  v61 = v1;
  v62 = v0;
  if (v24)
  {
    v25 = (uint8_t *)sub_23FBFEFF4();
    v69 = sub_23FBFEFF4();
    *(_DWORD *)v25 = 136315138;
    v26 = sub_23FD74138();
    v59 = v10;
    v28 = sub_23FC760D4(v26, v27);
    sub_23FC101E0(v28);
    sub_23FD75044();
    sub_23FC5E1B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v22, v23, "TaskStepLoggingSubscriber received event: %s", v25, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  sub_23FC5E1B0();
  v29 = (void (*)(char *, uint64_t))*((_QWORD *)v64 + 1);
  v29(v21, v11);
  v30 = v65;
  sub_23FD72488();
  v31 = sub_23FD72BE4();
  v32 = sub_23FD74F48();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)sub_23FBFEFF4();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_23FBF8000, v31, v32, "BiomeLibrarySageDev can not be imported", v33, 2u);
    sub_23FBFEFA0();
  }

  v29(v30, v11);
  v34 = *(void **)(v67 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25TaskStepLoggingSubscriber_biomeSiriExecutionSource);
  if (v34)
  {
    v64 = (void (*)(char *, char *))v29;
    v65 = (char *)v11;
    v59 = (char *)(v67 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25TaskStepLoggingSubscriber_id);
    sub_23FD04E38(v67 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25TaskStepLoggingSubscriber_id, (uint64_t)v10, type metadata accessor for SessionID);
    v35 = v34;
    v36 = sub_23FD7142C();
    v38 = v37;
    v39 = sub_23FD71474();
    v58 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
    v58(v10, v39);
    v40 = (uint64_t)v63;
    sub_23FD74150();
    v41 = sub_23FD71414();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v40, 0, 1, v41);
    v42 = objc_allocWithZone(MEMORY[0x24BE0C660]);
    v43 = sub_23FD04C68(v36, v38, 26, 0, 0xE000000000000000, 0, 0xE000000000000000, 0x7361542065676153, 0xE90000000000006BLL, 0, 0xE000000000000000, 0, 0xE000000000000000, v40);
    v63 = v35;
    objc_msgSend(v35, sel_sendEvent_, v43);
    v44 = v66;
    sub_23FD72488();
    sub_23FD04E9C();
    sub_23FD04E9C();
    v45 = sub_23FD72BE4();
    v46 = sub_23FD74F48();
    v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      v48 = sub_23FBFEFF4();
      v56 = v47;
      v49 = v48;
      v55 = sub_23FBFEFF4();
      v69 = v55;
      *(_DWORD *)v49 = 136315650;
      v57 = v43;
      LODWORD(v68) = 26;
      type metadata accessor for BMSiriExecutionTaskStep(0);
      v50 = sub_23FD74C0C();
      v68 = sub_23FC760D4(v50, v51);
      sub_23FD04E7C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      v52 = v60;
      sub_23FD74144();
      sub_23FD734B4();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v52, v62);
      v68 = sub_23FD04E8C();
      sub_23FD04E7C();
      sub_23FC5E1B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2080;
      sub_23FD04E38((uint64_t)v59, (uint64_t)v10, type metadata accessor for SessionID);
      sub_23FD7142C();
      v58(v10, v39);
      v68 = sub_23FD04E8C();
      sub_23FD04E7C();
      sub_23FC5E1B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23FBF8000, v45, (os_log_type_t)v56, "#TaskStepLoggingSubscriber - donated taskstep %s for %s event to BIOME for taskId: %s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }

    sub_23FC5E1B0();
    sub_23FC5E1B0();
    v64(v44, v65);
  }
  return sub_23FD742D0();
}

uint64_t sub_23FD0496C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[8];
  uint64_t v15;

  v2 = sub_23FD72BF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FD72488();
  v7 = sub_23FD72BE4();
  v8 = sub_23FD74F48();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_23FBFEFF4();
    v15 = sub_23FBFEFF4();
    *(_DWORD *)v9 = 136315138;
    v14[0] = a1 & 1;
    sub_23FBFD684(&qword_256F5E6F8);
    v10 = sub_23FD74C0C();
    v12 = sub_23FC760D4(v10, v11);
    sub_23FC101E0(v12);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v7, v8, "TaskStepLoggingSubscriber received completion: %s", v9, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_23FD04AE4()
{
  uint64_t v0;

  sub_23FC5FB58(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25TaskStepLoggingSubscriber_id);

  return swift_deallocClassInstance();
}

uint64_t sub_23FD04B24()
{
  return type metadata accessor for TaskStepLoggingSubscriber();
}

uint64_t type metadata accessor for TaskStepLoggingSubscriber()
{
  uint64_t result;

  result = qword_256F62AF0;
  if (!qword_256F62AF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FD04B64()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionIdentityPack(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FD04BE8()
{
  return sub_23FD04344();
}

uint64_t sub_23FD04C0C(char *a1)
{
  return sub_23FD0496C(*a1);
}

unint64_t sub_23FD04C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5E970;
  if (!qword_256F5E970)
  {
    v1 = type metadata accessor for TaskStepLoggingSubscriber();
    result = MEMORY[0x2426797E8](&unk_23FD7B838, v1);
    atomic_store(result, (unint64_t *)&qword_256F5E970);
  }
  return result;
}

id sub_23FD04C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v27;

  if (a2)
  {
    v17 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
    if (a5)
    {
LABEL_3:
      v18 = (void *)sub_23FD74BE8();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v17 = 0;
    if (a5)
      goto LABEL_3;
  }
  v18 = 0;
LABEL_6:
  if (a7)
  {
    v19 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  if (a9)
  {
    v20 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  if (a11)
  {
    v21 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
    if (a13)
    {
LABEL_14:
      v22 = (void *)sub_23FD74BE8();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  else
  {
    v21 = 0;
    if (a13)
      goto LABEL_14;
  }
  v22 = 0;
LABEL_17:
  v23 = sub_23FD71414();
  v24 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a14, 1, v23) != 1)
  {
    v24 = (void *)sub_23FD713E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a14, v23);
  }
  v25 = objc_msgSend(v27, sel_initWithTaskId_taskStep_statusReason_slotValue_intentName_appBundleID_interactionID_absoluteTimestamp_, v17, a3, v18, v19, v20, v21, v22, v24);

  return v25;
}

uint64_t sub_23FD04E38(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23FD04E7C()
{
  return sub_23FD75044();
}

uint64_t sub_23FD04E8C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_23FC9DC40(v0, v1, (uint64_t *)(v2 - 88));
}

uint64_t sub_23FD04E9C()
{
  return swift_retain_n();
}

void sub_23FD04EA4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23FD04EE8()
{
  sub_23FD74C48();
  return swift_bridgeObjectRelease();
}

void FeedbackLearning.ConfirmationPromptResult.hash(into:)()
{
  sub_23FD75458();
  sub_23FBFF0A0();
}

BOOL static FeedbackLearning.ConfirmationPromptResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23FD04F84()
{
  sub_23FD05298();
  return sub_23FD754DC();
}

uint64_t sub_23FD04FAC()
{
  sub_23FD05298();
  return sub_23FD754E8();
}

uint64_t sub_23FD04FD8()
{
  sub_23FD0525C();
  return sub_23FD754DC();
}

uint64_t sub_23FD05000()
{
  sub_23FD0525C();
  return sub_23FD754E8();
}

uint64_t sub_23FD05028()
{
  sub_23FD05310();
  return sub_23FD754DC();
}

uint64_t sub_23FD05050()
{
  sub_23FD05310();
  return sub_23FD754E8();
}

uint64_t sub_23FD05078()
{
  sub_23FD052D4();
  return sub_23FD754DC();
}

uint64_t sub_23FD050A0()
{
  sub_23FD052D4();
  return sub_23FD754E8();
}

void FeedbackLearning.ConfirmationPromptResult.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23FCC2A5C();
  sub_23FD20360();
  sub_23FBFD684(&qword_256F62B88);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FCF2650(v5, v16);
  sub_23FBFD684(&qword_256F62B90);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC10118();
  v17 = sub_23FBFD684(&qword_256F62B98);
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC10388();
  v18 = *(_QWORD *)(sub_23FBFD684(&qword_256F62BA0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC0603C();
  v12 = *v0;
  sub_23FD1FA40();
  sub_23FD0525C();
  sub_23FD754C4();
  if (v12)
  {
    if (v12 == 1)
    {
      sub_23FD20698();
      sub_23FCF2448();
      v13 = sub_23FD205E0();
    }
    else
    {
      sub_23FD205B0();
      sub_23FCF2448();
      v13 = sub_23FD1FE90();
    }
    v15(v13, v14);
  }
  else
  {
    sub_23FD05310();
    sub_23FCF2448();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v17);
  }
  sub_23FCF2820(v18);
  sub_23FC06000();
}

unint64_t sub_23FD0525C()
{
  unint64_t result;

  result = qword_256F62BA8;
  if (!qword_256F62BA8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EC14, &_s24ConfirmationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62BA8);
  }
  return result;
}

unint64_t sub_23FD05298()
{
  unint64_t result;

  result = qword_256F62BB0;
  if (!qword_256F62BB0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EBC4, &_s24ConfirmationPromptResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62BB0);
  }
  return result;
}

unint64_t sub_23FD052D4()
{
  unint64_t result;

  result = qword_256F62BB8;
  if (!qword_256F62BB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EB74, &_s24ConfirmationPromptResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62BB8);
  }
  return result;
}

unint64_t sub_23FD05310()
{
  unint64_t result;

  result = qword_256F62BC0;
  if (!qword_256F62BC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EB24, &_s24ConfirmationPromptResultO19ConfirmedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62BC0);
  }
  return result;
}

void FeedbackLearning.ConfirmationPromptResult.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  char v39;

  sub_23FCC2A5C();
  v4 = v3;
  v37 = v5;
  v36 = sub_23FBFD684(&qword_256F62BC8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FCA6D78(v8, v33);
  sub_23FBFD684(&qword_256F62BD0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FD1FA78(v11, v34);
  v35 = sub_23FBFD684(&qword_256F62BD8);
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC10118();
  sub_23FBFD684(&qword_256F62BE0);
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC12F34();
  sub_23FD2020C(v4);
  sub_23FD0525C();
  sub_23FD754B8();
  v16 = v1;
  if (v1)
    goto LABEL_10;
  v38 = (uint64_t)v4;
  v17 = v2;
  v18 = sub_23FD752E4();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19
    || (v20 = *(unsigned __int8 *)(v18 + 32),
        sub_23FC05ED0(1, v19, v18, v18 + 32, 0, (2 * v19) | 1),
        v16 = v21,
        v23 = v22,
        swift_bridgeObjectRelease(),
        v16 != (_QWORD *)(v23 >> 1)))
  {
    sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FD203BC();
    sub_23FBFD684(&qword_256F5D6C0);
    *v16 = &type metadata for FeedbackLearning.ConfirmationPromptResult;
    sub_23FD7529C();
    v28 = sub_23FCF2778();
    sub_23FD1FC08(v28, *MEMORY[0x24BEE26D0]);
    sub_23FD1FE10();
    sub_23FD20554();
    v29 = sub_23FC5F300();
    sub_23FC5B3B0(v29, v30);
    v4 = (_QWORD *)v38;
LABEL_10:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
    goto LABEL_11;
  }
  if (v20)
  {
    v39 = v20;
    if (v20 == 1)
    {
      sub_23FD20698();
      sub_23FD1FE6C();
      v24 = v37;
      v25 = sub_23FD205E0();
    }
    else
    {
      sub_23FD205B0();
      sub_23FD1FE6C();
      v24 = v37;
      v25 = sub_23FD1FE84();
      v26 = v36;
    }
    v27(v25, v26);
    swift_unknownObjectRelease();
    sub_23FBFEFFC(v17, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }
  else
  {
    sub_23FD05310();
    sub_23FD1FE6C();
    v39 = 0;
    v31 = sub_23FD1FE84();
    v32(v31, v35);
    sub_23FD20554();
    sub_23FBFEFFC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v24 = v37;
  }
  *v24 = v39;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v38);
LABEL_11:
  sub_23FD20168();
  sub_23FC06000();
}

void sub_23FD05694()
{
  FeedbackLearning.ConfirmationPromptResult.init(from:)();
}

void sub_23FD056A8()
{
  FeedbackLearning.ConfirmationPromptResult.encode(to:)();
}

uint64_t FeedbackLearning.ConfirmationPromptResult.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x657463656A65722ELL;
  if (*v0 != 1)
    v1 = 0x6E6F646E6162612ELL;
  if (*v0)
    return v1;
  else
    return 0x6D7269666E6F632ELL;
}

uint64_t sub_23FD05724(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023FD85F30 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023FD85F50 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064;
    if (v5 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x64657463656A6572 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_23FD75380();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_23FD058D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23FD05910 + 4 * byte_23FD7B8C4[a1]))(0xD000000000000011, 0x800000023FD85F30);
}

uint64_t sub_23FD05910(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_23FD05928()
{
  return 0x656E6F646E616261;
}

uint64_t sub_23FD05944()
{
  return 0x64657463656A6572;
}

uint64_t sub_23FD0595C()
{
  sub_23FD11494();
  return sub_23FD754DC();
}

uint64_t sub_23FD05984()
{
  sub_23FD11494();
  return sub_23FD754E8();
}

uint64_t sub_23FD059AC()
{
  sub_23FD1150C();
  return sub_23FD754DC();
}

uint64_t sub_23FD059D4()
{
  sub_23FD1150C();
  return sub_23FD754E8();
}

uint64_t sub_23FD059FC()
{
  unsigned __int8 *v0;

  return sub_23FD058D8(*v0);
}

uint64_t sub_23FD05A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD05724(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD05A28()
{
  sub_23FD1141C();
  return sub_23FD754DC();
}

uint64_t sub_23FD05A50()
{
  sub_23FD1141C();
  return sub_23FD754E8();
}

uint64_t sub_23FD05A78()
{
  sub_23FD114D0();
  return sub_23FD754DC();
}

uint64_t sub_23FD05AA0()
{
  sub_23FD114D0();
  return sub_23FD754E8();
}

uint64_t sub_23FD05AC8()
{
  sub_23FD11458();
  return sub_23FD754DC();
}

uint64_t sub_23FD05AF0()
{
  sub_23FD11458();
  return sub_23FD754E8();
}

void FeedbackLearning.DisambiguationPromptResult.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FCC2A5C();
  sub_23FD20360();
  sub_23FBFD684(&qword_256F62BE8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FCF2650(v3, v14);
  sub_23FBFD684(&qword_256F62BF0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FD1FA5C(v6, v15);
  sub_23FBFD684(&qword_256F62BF8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F62C00);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC8FD1C();
  sub_23FBFD684(&qword_256F62C08);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = *v0;
  sub_23FD1FA40();
  sub_23FD1141C();
  sub_23FD20048();
  __asm { BR              X9 }
}

void sub_23FD05C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 68) = 0;
  sub_23FD1150C();
  sub_23FD1F934();
  (*(void (**)(uint64_t, _QWORD))(v2 + 8))(v1, *(_QWORD *)(v3 - 168));
  sub_23FC100E4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
  sub_23FC06000();
}

void FeedbackLearning.DisambiguationPromptResult.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23FCC2A5C();
  v43 = v0;
  v2 = v1;
  v42 = v3;
  v41 = sub_23FBFD684(&qword_256F62C38);
  v38 = *(_QWORD *)(v41 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FCA6D78(v6, v32);
  v7 = sub_23FBFD684(&qword_256F62C40);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FD1FA78(v10, v32);
  v11 = sub_23FBFD684(&qword_256F62C48);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FCF2650(v14, v32);
  v35 = sub_23FBFD684(&qword_256F62C50);
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F62C58);
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v2[4];
  sub_23FD20184(v2);
  sub_23FD1141C();
  sub_23FD1FFB0();
  if (!v0)
  {
    sub_23FD1FDD0();
    sub_23FD2073C();
    if (v22)
    {
      v33 = v20[32];
      v23 = sub_23FD1FC30();
      sub_23FC05ED0(v23, v24, v25, v26, v27, v28);
      v30 = v29;
      sub_23FD1FD04();
      if (v30 == v21 >> 1)
        __asm { BR              X9 }
    }
    sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FBFD684(&qword_256F5D6C0);
    sub_23FD20350((uint64_t)&type metadata for FeedbackLearning.DisambiguationPromptResult);
    v31 = sub_23FCF2778();
    sub_23FD1FCF0(v31, *MEMORY[0x24BEE26D0]);
    sub_23FD1FE10();
    sub_23FC06158();
    sub_23FC5C178((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    v2 = v34;
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v2);
  sub_23FC06000();
}

void sub_23FD05F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD20668();
  sub_23FD1F9D0();
  if (!v0)
  {
    sub_23FD1FE84();
    JUMPOUT(0x23FD06028);
  }
  sub_23FC06158();
  sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23FD05F54);
}

void sub_23FD05F9C()
{
  uint64_t v0;

  sub_23FD205C8();
  sub_23FD1F9D0();
  if (v0)
    JUMPOUT(0x23FD05FC4);
  JUMPOUT(0x23FD06024);
}

void sub_23FD05FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD20794();
  sub_23FD1F9D0();
  if (v0)
  {
    sub_23FC06158();
    sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    JUMPOUT(0x23FD05F54);
  }
  sub_23FD2007C();
  sub_23FC06158();
  sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23FD0606CLL);
}

void sub_23FD06078()
{
  FeedbackLearning.DisambiguationPromptResult.init(from:)();
}

void sub_23FD0608C()
{
  FeedbackLearning.DisambiguationPromptResult.encode(to:)();
}

uint64_t FeedbackLearning.DisambiguationPromptResult.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23FD060D8 + 4 * byte_23FD7B8D0[*v0]))(0xD000000000000012, 0x800000023FD85E30);
}

void sub_23FD060D8()
{
  sub_23FCDE928();
}

uint64_t sub_23FD060E8()
{
  return 0x6E6F646E6162612ELL;
}

uint64_t sub_23FD06104()
{
  return 0x657463656A65722ELL;
}

uint64_t static FeedbackLearning.CandidateOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 != 1)
      return ((uint64_t (*)(void))((char *)&loc_23FD06180 + 4 * byte_23FD7B8D4[v2 - 128]))();
    if ((v3 & 0xC0) == 0x40)
      return ((v3 ^ v2) & 0x3F) == 0;
    return sub_23FC05ACC();
  }
  if (v3 > 0x3F)
    return sub_23FC05ACC();
  return v2 == v3;
}

uint64_t sub_23FD061B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6769626D61736964 && a2 == 0xEE006E6F69746175;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6465727265666E69 && a2 == 0xEF73736563637553;
      if (v7 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6465727265666E69 && a2 == 0xEF6572756C696146;
        if (v8 || (sub_23FD75380() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x800000023FD85F70 || (sub_23FD75380() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_23FD75380();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_23FD06498()
{
  return 6;
}

uint64_t sub_23FD064A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD064DC + 4 * byte_23FD7B8D8[a1]))(0x616D7269666E6F63, 0xEC0000006E6F6974);
}

uint64_t sub_23FD064DC()
{
  return 0x6769626D61736964;
}

uint64_t sub_23FD06500()
{
  return 0x6465727265666E69;
}

unint64_t sub_23FD06538()
{
  return 0xD000000000000010;
}

uint64_t sub_23FD06554()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_23FD0656C()
{
  unsigned __int8 *v0;

  return sub_23FD064A0(*v0);
}

uint64_t sub_23FD06574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD061B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD06598@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FD06498();
  *a1 = result;
  return result;
}

uint64_t sub_23FD065BC()
{
  sub_23FD11548();
  return sub_23FD754DC();
}

uint64_t sub_23FD065E4()
{
  sub_23FD11548();
  return sub_23FD754E8();
}

void sub_23FD0660C()
{
  sub_23FD0FD94();
}

void sub_23FD06624(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23FD0E880(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23FD0664C()
{
  sub_23FD116EC();
  return sub_23FD754DC();
}

uint64_t sub_23FD06674()
{
  sub_23FD116EC();
  return sub_23FD754E8();
}

uint64_t sub_23FD0669C()
{
  sub_23FD11674();
  return sub_23FD754DC();
}

uint64_t sub_23FD066C4()
{
  sub_23FD11674();
  return sub_23FD754E8();
}

uint64_t sub_23FD066EC()
{
  sub_23FD115FC();
  return sub_23FD754DC();
}

uint64_t sub_23FD06714()
{
  sub_23FD115FC();
  return sub_23FD754E8();
}

uint64_t sub_23FD0673C()
{
  sub_23FD115C0();
  return sub_23FD754DC();
}

uint64_t sub_23FD06764()
{
  sub_23FD115C0();
  return sub_23FD754E8();
}

uint64_t sub_23FD0678C()
{
  sub_23FD11638();
  return sub_23FD754DC();
}

uint64_t sub_23FD067B4()
{
  sub_23FD11638();
  return sub_23FD754E8();
}

uint64_t sub_23FD067DC()
{
  sub_23FD11584();
  return sub_23FD754DC();
}

uint64_t sub_23FD06804()
{
  sub_23FD11584();
  return sub_23FD754E8();
}

void FeedbackLearning.CandidateOutcome.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_23FCC2A5C();
  v3 = v0;
  v5 = v4;
  sub_23FBFD684(&qword_256F62C60);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FD1FA94(v8, v29);
  sub_23FBFD684(&qword_256F62C68);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FD1FA18(v11, v30);
  sub_23FBFD684(&qword_256F62C70);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFE0();
  sub_23FBFD684(&qword_256F62C78);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FD20108(v16, v31);
  sub_23FBFD684(&qword_256F62C80);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC10118();
  v19 = sub_23FBFD684(&qword_256F62C88);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  sub_23FC10388();
  v32 = *(_QWORD *)(sub_23FBFD684(&qword_256F62C90) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC8FD1C();
  v24 = *v3;
  sub_23FD2020C(v5);
  sub_23FD11548();
  sub_23FD754C4();
  if (v24 >> 6)
  {
    if (v24 >> 6 != 1)
      __asm { BR              X10 }
    sub_23FD11674();
    sub_23FCF2448();
    sub_23FD116B0();
    sub_23FD1FCB0();
    v25 = sub_23FD205E0();
    sub_23FBFF204(v25, v26);
    v27 = sub_23FD1FE84();
  }
  else
  {
    sub_23FD116EC();
    sub_23FD752F0();
    sub_23FD11728();
    sub_23FD1FCB0();
    sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
    v27 = v2;
  }
  sub_23FC100E4(v27, v28);
  sub_23FD201AC();
  sub_23FC06000();
}

void FeedbackLearning.CandidateOutcome.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23FCC2A5C();
  v3 = v2;
  sub_23FBFD684(&qword_256F62CE0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FD1FA94(v6, v38);
  sub_23FBFD684(&qword_256F62CE8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FD1FB30(v9, v39);
  sub_23FBFD684(&qword_256F62CF0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FCF2634(v12, v40);
  sub_23FBFD684(&qword_256F62CF8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FD1FC94(v15, v41);
  sub_23FBFD684(&qword_256F62D00);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FD1FA18(v18, v42);
  v19 = sub_23FBFD684(&qword_256F62D08);
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC8FD1C();
  sub_23FBFD684(&qword_256F62D10);
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC061C0();
  v43 = v3;
  sub_23FD1FA40();
  sub_23FD11548();
  sub_23FD1FCDC();
  if (!v0)
  {
    sub_23FD752E4();
    sub_23FD2073C();
    if (v23)
    {
      v24 = *(unsigned __int8 *)(v1 + 32);
      v25 = sub_23FD1FC30();
      sub_23FC05ED0(v25, v26, v27, v28, v29, v30);
      v32 = v31;
      v34 = v33;
      swift_bridgeObjectRelease();
      if (v32 == v34 >> 1)
        __asm { BR              X9 }
    }
    v35 = sub_23FD1FBC0();
    sub_23FC5A704();
    v37 = v36;
    sub_23FBFD684(&qword_256F5D6C0);
    *v37 = &type metadata for FeedbackLearning.CandidateOutcome;
    sub_23FD7529C();
    sub_23FCF2778();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, *MEMORY[0x24BEE26D0], v35);
    sub_23FD206C8();
    sub_23FC06158();
    sub_23FD1FADC();
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v43);
  sub_23FC06000();
}

void sub_23FD06E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 69) = 1;
  sub_23FD11674();
  v2 = *(_QWORD *)(v1 - 176);
  v3 = *(_QWORD *)(v1 - 96);
  sub_23FD1F978();
  if (v0)
    JUMPOUT(0x23FD06ECCLL);
  sub_23FD11764();
  sub_23FD1FD48();
  v4 = *(_QWORD *)(v1 - 240);
  sub_23FC5B3B0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 216) + 8));
  sub_23FC06158();
  sub_23FC5C178(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  JUMPOUT(0x23FD070E0);
}

void sub_23FD06EDC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FD205BC();
  sub_23FD1F978();
  if (!v0)
  {
    sub_23FC102AC(*(_QWORD *)(v1 - 232));
    sub_23FC06158();
    sub_23FD1FADC();
    JUMPOUT(0x23FD070ECLL);
  }
  JUMPOUT(0x23FD06E6CLL);
}

void sub_23FD06FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD203D0();
  v3 = *(_QWORD *)(v2 - 152);
  sub_23FD1F978();
  if (v0)
  {
    sub_23FC06158();
    sub_23FC5F300();
    JUMPOUT(0x23FD07064);
  }
  sub_23FC100E4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC06158();
  sub_23FD1FADC();
  **(_BYTE **)(v2 - 144) = -125;
  JUMPOUT(0x23FD06E78);
}

void sub_23FD070F4()
{
  FeedbackLearning.CandidateOutcome.init(from:)();
}

void sub_23FD07108()
{
  FeedbackLearning.CandidateOutcome.encode(to:)();
}

uint64_t FeedbackLearning.CandidateOutcome.description.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;
  _QWORD v3[2];

  v1 = *v0;
  if (v1 >> 6)
  {
    if (v1 >> 6 != 1)
    {
      sub_23FD203A8();
      __asm { BR              X10 }
    }
    sub_23FD20124();
    sub_23FD74C48();
    sub_23FD04EA4(v1 & 0x3F);
  }
  else
  {
    sub_23FD20124();
    swift_bridgeObjectRelease();
    strcpy((char *)v3, ".confirmation(");
    HIBYTE(v3[1]) = -18;
    sub_23FD74C48();
    sub_23FC15A24();
    sub_23FCF23C8();
  }
  return v3[0];
}

uint64_t sub_23FD072A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023FD85F90 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023FD85FB0 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23FD07450(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD07488 + 4 * byte_23FD7B8EC[a1]))(0x766C6F7365726E75, 0xEA00000000006465);
}

unint64_t sub_23FD07488()
{
  return 0xD000000000000013;
}

unint64_t sub_23FD074A8()
{
  return 0xD000000000000010;
}

uint64_t sub_23FD074C4()
{
  return 0x6465747563657865;
}

uint64_t sub_23FD074DC()
{
  unsigned __int8 *v0;

  return sub_23FD07450(*v0);
}

uint64_t sub_23FD074E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD072A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD07508()
{
  sub_23FD117DC();
  return sub_23FD754DC();
}

uint64_t sub_23FD07530()
{
  sub_23FD117DC();
  return sub_23FD754E8();
}

uint64_t sub_23FD07558()
{
  sub_23FD11818();
  return sub_23FD754DC();
}

uint64_t sub_23FD07580()
{
  sub_23FD11818();
  return sub_23FD754E8();
}

uint64_t sub_23FD075A8()
{
  sub_23FD11890();
  return sub_23FD754DC();
}

uint64_t sub_23FD075D0()
{
  sub_23FD11890();
  return sub_23FD754E8();
}

uint64_t sub_23FD075F8()
{
  sub_23FD11854();
  return sub_23FD754DC();
}

uint64_t sub_23FD07620()
{
  sub_23FD11854();
  return sub_23FD754E8();
}

uint64_t sub_23FD07648()
{
  sub_23FD118CC();
  return sub_23FD754DC();
}

uint64_t sub_23FD07670()
{
  sub_23FD118CC();
  return sub_23FD754E8();
}

void FeedbackLearning.CandidateParameterResolution.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FCC2A5C();
  sub_23FD20360();
  sub_23FBFD684(&qword_256F62D28);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FCF2650(v3, v14);
  sub_23FBFD684(&qword_256F62D30);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FD1FA5C(v6, v15);
  sub_23FBFD684(&qword_256F62D38);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F62D40);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC8FD1C();
  sub_23FBFD684(&qword_256F62D48);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = *v0;
  sub_23FD1FA40();
  sub_23FD117DC();
  sub_23FD20048();
  __asm { BR              X9 }
}

void sub_23FD077C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 68) = 0;
  sub_23FD118CC();
  sub_23FD1F934();
  (*(void (**)(uint64_t, _QWORD))(v2 + 8))(v1, *(_QWORD *)(v3 - 168));
  sub_23FC100E4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
  sub_23FC06000();
}

void _s23IntelligenceFlowRuntime16FeedbackLearningO24ConfirmationPromptResultO9hashValueSivg_0()
{
  sub_23FC06220();
  sub_23FD2005C();
  sub_23FC06168();
  sub_23FC06054();
}

void FeedbackLearning.CandidateParameterResolution.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23FCC2A5C();
  v43 = v0;
  v2 = v1;
  v42 = v3;
  v41 = sub_23FBFD684(&qword_256F62D78);
  v38 = *(_QWORD *)(v41 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FCA6D78(v6, v32);
  v7 = sub_23FBFD684(&qword_256F62D80);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FD1FA78(v10, v32);
  v11 = sub_23FBFD684(&qword_256F62D88);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FCF2650(v14, v32);
  v35 = sub_23FBFD684(&qword_256F62D90);
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F62D98);
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v2[4];
  sub_23FD20184(v2);
  sub_23FD117DC();
  sub_23FD1FFB0();
  if (!v0)
  {
    sub_23FD1FDD0();
    sub_23FD2073C();
    if (v22)
    {
      v33 = v20[32];
      v23 = sub_23FD1FC30();
      sub_23FC05ED0(v23, v24, v25, v26, v27, v28);
      v30 = v29;
      sub_23FD1FD04();
      if (v30 == v21 >> 1)
        __asm { BR              X9 }
    }
    sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FBFD684(&qword_256F5D6C0);
    sub_23FD20350((uint64_t)&type metadata for FeedbackLearning.CandidateParameterResolution);
    v31 = sub_23FCF2778();
    sub_23FD1FCF0(v31, *MEMORY[0x24BEE26D0]);
    sub_23FD1FE10();
    sub_23FC06158();
    sub_23FC5C178((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    v2 = v34;
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v2);
  sub_23FC06000();
}

void sub_23FD07B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD2065C();
  sub_23FD1F9D0();
  if (!v0)
  {
    sub_23FD1FE84();
    JUMPOUT(0x23FD07BD0);
  }
  sub_23FC06158();
  sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23FD07AFCLL);
}

void sub_23FD07B44()
{
  uint64_t v0;

  sub_23FD205D4();
  sub_23FD1F9D0();
  if (v0)
    JUMPOUT(0x23FD07B6CLL);
  JUMPOUT(0x23FD07BCCLL);
}

void sub_23FD07B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD20788();
  sub_23FD1F9D0();
  if (v0)
  {
    sub_23FC06158();
    sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    JUMPOUT(0x23FD07AFCLL);
  }
  sub_23FD2007C();
  sub_23FC06158();
  sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x23FD07C14);
}

void sub_23FD07C20()
{
  FeedbackLearning.CandidateParameterResolution.init(from:)();
}

void sub_23FD07C34()
{
  FeedbackLearning.CandidateParameterResolution.encode(to:)();
}

uint64_t FeedbackLearning.CandidateParameterResolution.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD07C84 + 4 * byte_23FD7B8F8[*v0]))(0x6C6F7365726E752ELL, 0xEB00000000646576);
}

void sub_23FD07C84()
{
  sub_23FCDE928();
}

unint64_t sub_23FD07C9C()
{
  return 0xD000000000000011;
}

uint64_t sub_23FD07CB8()
{
  return 0x657475636578652ELL;
}

uint64_t sub_23FD07CD8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23FD07D54()
{
  return 0x7972657571;
}

uint64_t sub_23FD07D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD07CD8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FD07D94()
{
  sub_23FD11908();
  return sub_23FD754DC();
}

uint64_t sub_23FD07DBC()
{
  sub_23FD11908();
  return sub_23FD754E8();
}

void FeedbackLearning.CandidateSearchQuery.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  sub_23FD1FF1C();
  a17 = v19;
  a18 = v20;
  sub_23FBFD684(&qword_256F62DA0);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD1F984();
  sub_23FD11908();
  sub_23FD1FA08();
  sub_23FD73340();
  sub_23FBFEE2C(&qword_256F5F110, (uint64_t (*)(uint64_t))MEMORY[0x24BE55288], MEMORY[0x24BE55298]);
  sub_23FC09FF8();
  sub_23FC100E4((uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23FC0A094();
}

void FeedbackLearning.CandidateSearchQuery.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FCC2A5C();
  sub_23FC0A174(v4);
  sub_23FD73340();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC0A0C4(v7, v15);
  sub_23FBFD684(&qword_256F62DB0);
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_23FC0A0A8();
  type metadata accessor for FeedbackLearning.CandidateSearchQuery(v10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFDE40(v0, v0[3]);
  sub_23FD11908();
  sub_23FC0A020();
  if (!v1)
  {
    sub_23FBFEE2C(&qword_256F5F108, (uint64_t (*)(uint64_t))MEMORY[0x24BE55288], MEMORY[0x24BE552A0]);
    sub_23FD1FD70();
    sub_23FBFEFFC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v13 = sub_23FC0A038();
    sub_23FD20484(v13, v14, type metadata accessor for FeedbackLearning.CandidateSearchQuery);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v0);
  sub_23FD20460();
  sub_23FC06000();
}

void sub_23FD07FD0()
{
  FeedbackLearning.CandidateSearchQuery.init(from:)();
}

#error "23FD07FEC: call analysis failed (funcsize=5)"

void static FeedbackLearning.CandidateParameter.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  sub_23FC061F0();
  v31 = v3;
  v5 = v4;
  v6 = sub_23FC06250();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v9 = sub_23FD1FB14();
  type metadata accessor for FeedbackLearning.CandidateParameter(v9);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC100D4();
  v14 = (uint64_t *)(v12 - v13);
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FD201D4();
  sub_23FBFD684(&qword_256F5F378);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FCF2498();
  v20 = (_QWORD *)(v0 + v19);
  sub_23FD201CC(v5, v0);
  sub_23FD201CC(v31, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23FC0EDD8(v0, (uint64_t)v14, type metadata accessor for FeedbackLearning.CandidateParameter);
      v23 = *v14;
      v22 = v14[1];
      if (sub_23FD20028() == 1)
      {
        if (v23 == *v20 && v22 == v20[1])
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          sub_23FC5E714();
          sub_23FD75380();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_17;
      }
      v27 = swift_bridgeObjectRelease();
    }
    else
    {
      v27 = sub_23FD20028();
      if ((_DWORD)v27 == 2)
      {
LABEL_17:
        sub_23FD1FE7C();
        goto LABEL_18;
      }
    }
  }
  else
  {
    sub_23FC0EDD8(v0, v1, type metadata accessor for FeedbackLearning.CandidateParameter);
    if (!sub_23FD20028())
    {
      v28 = v20;
      v29 = v6;
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v7 + 32))(v2, v28, v6);
      sub_23FD71558();
      v30 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v30(v2, v29);
      v30(v1, v29);
      sub_23FD1FE7C();
      goto LABEL_18;
    }
    v25 = sub_23FD204E8();
    v27 = v26(v25);
  }
  sub_23FC7E2CC(v27, &qword_256F5F378);
LABEL_18:
  sub_23FC060D4();
}

void FeedbackLearning.CandidateParameter.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  int EnumCaseMultiPayload;

  v3 = sub_23FC06250();
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FD1FED4();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC12F34();
  v8 = sub_23FD2025C();
  sub_23FC0EDD8(v8, v9, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23FD75458();
      sub_23FC5E880();
      sub_23FD74C30();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23FD203DC();
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0, v1, v3);
    sub_23FD75458();
    sub_23FBFEE2C(&qword_256F5DAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
    sub_23FC8A790();
    sub_23FD74BC4();
    sub_23FCF2854(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_23FC6264C();
}

uint64_t sub_23FD08328(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1819242356 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xE900000000000072)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FD75380();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23FD08468(char a1)
{
  if (!a1)
    return 1819242356;
  if (a1 == 1)
    return 0x65756C6176;
  return 0x6574656D61726170;
}

uint64_t sub_23FD084B8()
{
  char *v0;

  return sub_23FD08468(*v0);
}

uint64_t sub_23FD084C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD08328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD084E4()
{
  sub_23FD1196C();
  return sub_23FD754DC();
}

uint64_t sub_23FD0850C()
{
  sub_23FD1196C();
  return sub_23FD754E8();
}

uint64_t sub_23FD08534()
{
  sub_23FD119A8();
  return sub_23FD754DC();
}

uint64_t sub_23FD0855C()
{
  sub_23FD119A8();
  return sub_23FD754E8();
}

uint64_t sub_23FD08584()
{
  sub_23FD11A20();
  return sub_23FD754DC();
}

uint64_t sub_23FD085AC()
{
  sub_23FD11A20();
  return sub_23FD754E8();
}

uint64_t sub_23FD085D4()
{
  sub_23FD119E4();
  return sub_23FD754DC();
}

uint64_t sub_23FD085FC()
{
  sub_23FD119E4();
  return sub_23FD754E8();
}

void FeedbackLearning.CandidateParameter.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23FCC2A5C();
  v35 = v0;
  v6 = v5;
  v7 = sub_23FBFD684(&qword_256F62DB8);
  sub_23FD20378(v7);
  v33 = v8;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FCF2634(v11, v26);
  v29 = *(_QWORD *)(sub_23FBFD684(&qword_256F62DC0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FD1FBE8(v14, v27);
  v30 = *(_QWORD *)(sub_23FD7157C() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FCF2650(v17, v28);
  sub_23FBFD684(&qword_256F62DC8);
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v18, v19);
  v20 = sub_23FC0610C();
  type metadata accessor for FeedbackLearning.CandidateParameter(v20);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC9308C();
  v36 = *(_QWORD *)(sub_23FBFD684(&qword_256F62DD0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FC0603C();
  sub_23FD2020C(v6);
  sub_23FD1196C();
  sub_23FD754C4();
  sub_23FC0EDD8(v35, v4, type metadata accessor for FeedbackLearning.CandidateParameter);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23FD2058C();
      sub_23FCF2448();
      sub_23FD75308();
      swift_bridgeObjectRelease();
      sub_23FBFEFFC(v31, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
      sub_23FCF2820(v36);
    }
    else
    {
      sub_23FD11A20();
      sub_23FD1F9FC();
      sub_23FBFEFFC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      sub_23FBFF204(v2, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    }
  }
  else
  {
    sub_23FC5AE8C(v34, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
    sub_23FD206BC();
    sub_23FCF2448();
    sub_23FBFEE2C(&qword_256F62DF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52150]);
    sub_23FD1FCB0();
    sub_23FC5B3B0(v32, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    sub_23FBFEFFC(v34, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    sub_23FCF2820(v36);
  }
  sub_23FD1FF10();
  sub_23FC06000();
}

void FeedbackLearning.CandidateParameter.hashValue.getter()
{
  sub_23FC06220();
  FeedbackLearning.CandidateParameter.hash(into:)();
  sub_23FC06168();
  sub_23FC06054();
}

void FeedbackLearning.CandidateParameter.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;

  sub_23FCC2A5C();
  v73 = v0;
  v5 = v4;
  v68 = v6;
  v67 = sub_23FBFD684(&qword_256F62E00);
  v63 = *(_QWORD *)(v67 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FD1F95C(v9, v57);
  v66 = sub_23FBFD684(&qword_256F62E08);
  v62 = *(_QWORD *)(v66 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FCF2650(v12, v57);
  v13 = sub_23FBFD684(&qword_256F62E10);
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FD1FAB0(v16, v57);
  v17 = sub_23FBFD684(&qword_256F62E18);
  v71 = *(_QWORD *)(v17 - 8);
  v72 = v17;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  v20 = sub_23FC0A0A8();
  v21 = type metadata accessor for FeedbackLearning.CandidateParameter(v20);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FD1FC78();
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (char *)&v57 - v27;
  MEMORY[0x24BDAC7A8](v26, v29);
  sub_23FD201D4();
  sub_23FBFDE40(v5, v5[3]);
  sub_23FD1196C();
  sub_23FD202A0();
  sub_23FD20370();
  if (v0)
    goto LABEL_11;
  v58 = v2;
  v59 = v28;
  v60 = v1;
  v61 = v21;
  v73 = v5;
  v30 = v72;
  v31 = v3;
  v32 = sub_23FD752E4();
  v33 = *(_QWORD *)(v32 + 16);
  if (!v33)
  {
LABEL_8:
    v42 = v71;
    v43 = v61;
    sub_23FD1FBC0();
    sub_23FC5A704();
    v45 = v44;
    sub_23FBFD684(&qword_256F5D6C0);
    *v45 = v43;
    sub_23FD7529C();
    v46 = sub_23FCF2778();
    sub_23FD1FCF0(v46, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23FD1FF30();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v31, v30);
    v5 = v73;
LABEL_11:
    v48 = (uint64_t)v5;
    goto LABEL_12;
  }
  v34 = v30;
  v35 = *(unsigned __int8 *)(v32 + 32);
  sub_23FC05ED0(1, v33, v32, v32 + 32, 0, (2 * v33) | 1);
  v37 = v36;
  v39 = v38;
  swift_bridgeObjectRelease();
  if (v37 != v39 >> 1)
  {
    v30 = v34;
    v31 = v3;
    goto LABEL_8;
  }
  if ((_DWORD)v35)
  {
    if ((_DWORD)v35 == 1)
    {
      sub_23FD206BC();
      v40 = v69;
      sub_23FD1FE18();
      sub_23FC06250();
      sub_23FBFEE2C(&qword_256F62E20, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52168]);
      v41 = (uint64_t)v59;
      sub_23FD20534();
      sub_23FD1FD70();
      sub_23FBFEFFC(v40, *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8));
      sub_23FD1FF30();
      sub_23FC100E4(v35, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
      swift_storeEnumTagMultiPayload();
      v52 = v41;
    }
    else
    {
      sub_23FD2058C();
      v47 = v70;
      sub_23FD1FE18();
      v53 = sub_23FD752B4();
      v55 = v54;
      sub_23FBFEFFC(v47, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
      sub_23FD1FF30();
      sub_23FC100E4(v35, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
      v56 = v58;
      *v58 = v53;
      v56[1] = v55;
      swift_storeEnumTagMultiPayload();
      v52 = (uint64_t)v56;
    }
    sub_23FD200B8(v52, v51, type metadata accessor for FeedbackLearning.CandidateParameter);
  }
  else
  {
    sub_23FD11A20();
    sub_23FD20278();
    sub_23FD75290();
    sub_23FD1FB08(v64);
    sub_23FD1FF30();
    sub_23FC100E4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
    v49 = sub_23FD2051C();
  }
  sub_23FD20528(v49, v50, type metadata accessor for FeedbackLearning.CandidateParameter);
  v48 = (uint64_t)v73;
LABEL_12:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v48);
  sub_23FD20460();
  sub_23FC06000();
}

void sub_23FD08D78()
{
  FeedbackLearning.CandidateParameter.init(from:)();
}

void sub_23FD08D8C()
{
  FeedbackLearning.CandidateParameter.encode(to:)();
}

void sub_23FD08DAC()
{
  sub_23FCC2B70();
  FeedbackLearning.CandidateParameter.hash(into:)();
  sub_23FC06168();
  sub_23FC06054();
}

void FeedbackLearning.CandidateParameter.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v9;
  void (*v10)(uint64_t);

  sub_23FC06250();
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1FED4();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC93074();
  v5 = sub_23FC5D46C();
  sub_23FC0EDD8(v5, v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23FD74C48();
      sub_23FC15A24();
      sub_23FCF23C8();
    }
  }
  else
  {
    v9 = sub_23FC5E714();
    v10(v9);
    sub_23FD71570();
    sub_23FD75344();
    sub_23FD74C48();
    swift_bridgeObjectRelease();
    sub_23FCF2854(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }
  sub_23FC17830();
}

void static FeedbackLearning.CandidateEvaluation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char V2eeoiySbAE_AEtFZ_0;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;

  sub_23FC061F0();
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC0603C();
  v10 = sub_23FBFD684(&qword_256F62E28);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC10370();
  sub_23FBFD684(&qword_256F62E30);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FD1FC78();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v30 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v30 - v21;
  sub_23FC5E880();
  if ((sub_23FD71558() & 1) == 0)
    goto LABEL_16;
  v23 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  sub_23FCF250C(v23[5]);
  static FeedbackLearning.CandidateParameter.== infix(_:_:)();
  if ((v24 & 1) == 0)
    goto LABEL_16;
  sub_23FCF250C(v23[6]);
  if ((sub_23FD72D88() & 1) == 0)
    goto LABEL_16;
  sub_23FC0F3AC(v6 + v23[7], (uint64_t)v22, &qword_256F62E30);
  sub_23FC0F3AC(v4 + v23[7], (uint64_t)v19, &qword_256F62E30);
  v25 = v0 + *(int *)(v10 + 48);
  sub_23FC0F3AC((uint64_t)v22, v0, &qword_256F62E30);
  v30 = v25;
  sub_23FC0F3AC((uint64_t)v19, v25, &qword_256F62E30);
  sub_23FC100EC(v0, 1, v7);
  if (!v27)
  {
    sub_23FC0F3AC(v0, v2, &qword_256F62E30);
    v26 = v30;
    sub_23FC100EC(v30, 1, v7);
    if (!v27)
    {
      sub_23FC0F380(v26, v1, type metadata accessor for FeedbackLearning.CandidateSearchQuery);
      V2eeoiySbAE_AEtFZ_0 = _s23IntelligenceFlowRuntime16FeedbackLearningO20CandidateSearchQueryV2eeoiySbAE_AEtFZ_0();
      sub_23FD2025C();
      sub_23FCBA0CC();
      sub_23FC9820C((uint64_t)v19);
      sub_23FC9820C((uint64_t)v22);
      sub_23FCBA0CC();
      sub_23FC9820C(v0);
      if ((V2eeoiySbAE_AEtFZ_0 & 1) == 0)
        goto LABEL_16;
      goto LABEL_14;
    }
    sub_23FBFEF74((uint64_t)v19, &qword_256F62E30);
    sub_23FBFEF74((uint64_t)v22, &qword_256F62E30);
    sub_23FCBA0CC();
LABEL_12:
    sub_23FBFEF74(v0, &qword_256F62E28);
    goto LABEL_16;
  }
  sub_23FC9820C((uint64_t)v19);
  sub_23FC9820C((uint64_t)v22);
  sub_23FC100EC(v30, 1, v7);
  if (!v27)
    goto LABEL_12;
  sub_23FBFEF74(v0, &qword_256F62E30);
LABEL_14:
  if (*(unsigned __int8 *)(v6 + v23[8]) == *(unsigned __int8 *)(v4 + v23[8]))
  {
    v29 = v23[9];
    v32 = *(_BYTE *)(v6 + v29);
    v31 = *(_BYTE *)(v4 + v29);
    static FeedbackLearning.CandidateOutcome.== infix(_:_:)(&v32, &v31);
  }
LABEL_16:
  sub_23FC060D4();
}

uint64_t sub_23FD091F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6574656D61726170 && a2 == 0xE900000000000072;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x800000023FD85FD0 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x74616469646E6163 && a2 == 0xEE00797265755165;
      if (v7 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x6974756C6F736572 && a2 == 0xEA00000000006E6FLL;
        if (v8 || (sub_23FD75380() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_23FD75380();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_23FD094B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD094F0 + 4 * byte_23FD7B8FC[a1]))(0x6E656D6574617473, 0xEB00000000644974);
}

uint64_t sub_23FD094F0()
{
  return 0x6574656D61726170;
}

unint64_t sub_23FD0950C()
{
  return 0xD000000000000013;
}

uint64_t sub_23FD09528()
{
  return 0x74616469646E6163;
}

uint64_t sub_23FD0954C()
{
  return 0x6974756C6F736572;
}

uint64_t sub_23FD09568()
{
  return 0x656D6F6374756FLL;
}

uint64_t sub_23FD09580()
{
  unsigned __int8 *v0;

  return sub_23FD094B4(*v0);
}

uint64_t sub_23FD09588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD091F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD095AC()
{
  sub_23FD11A70();
  return sub_23FD754DC();
}

uint64_t sub_23FD095D4()
{
  sub_23FD11A70();
  return sub_23FD754E8();
}

void FeedbackLearning.CandidateEvaluation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD1FF1C();
  sub_23FBFD684(&qword_256F62E38);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1F984();
  sub_23FD11A70();
  sub_23FCC2A80();
  sub_23FC06250();
  sub_23FBFEE2C(&qword_256F62DF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52150]);
  sub_23FD202BC();
  sub_23FD1FA34();
  if (!v0)
  {
    type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
    sub_23FD2075C();
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_23FBFEE2C(&qword_256F62E48, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
    sub_23FD1F9E4();
    sub_23FC10130();
    sub_23FBFEE2C(&qword_256F62E50, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54668]);
    sub_23FD1F9E4();
    type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
    sub_23FBFEE2C(&qword_256F62E58, type metadata accessor for FeedbackLearning.CandidateSearchQuery, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateSearchQuery);
    sub_23FD752FC();
    sub_23FD11AAC();
    sub_23FD1FA34();
    sub_23FD11AE8();
    sub_23FD1FA34();
  }
  sub_23FCC2B78();
  sub_23FC0A094();
}

void FeedbackLearning.CandidateEvaluation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;

  sub_23FCC2A5C();
  v17 = v16;
  v37 = v18;
  sub_23FBFD684(&qword_256F62E30);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FCF2634(v21, v37);
  v22 = sub_23FC10130();
  v43 = *(_QWORD *)(v22 - 8);
  v44 = v22;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FD1FDB0(v25, v38);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FC0A0A8();
  v28 = sub_23FD7157C();
  v48 = *(_QWORD *)(v28 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FBFEFE0();
  v45 = v31;
  sub_23FBFD684(&qword_256F62E70);
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FC8FD1C();
  v46 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v34, v35);
  sub_23FCF2650(v36, v39);
  sub_23FD20184(v17);
  sub_23FD11A70();
  sub_23FD20370();
  if (v14)
  {
    sub_23FD204C0();
  }
  else
  {
    sub_23FBFEE2C(&qword_256F62E20, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52168]);
    sub_23FD202BC();
    sub_23FD1FD18();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v47, v45, v28);
    sub_23FD202C8();
    sub_23FBFEE2C(&qword_256F62E78, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
    sub_23FD1FD18();
    sub_23FC0F380(v15, v47 + v46[5], type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_23FD20568();
    sub_23FBFEE2C(&qword_256F62E80, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54680]);
    sub_23FD1FD18();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v47 + v46[6], v42, v44);
    type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
    sub_23FBFEE2C(&qword_256F62E88, type metadata accessor for FeedbackLearning.CandidateSearchQuery, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateSearchQuery);
    sub_23FD752A8();
    sub_23FC0EE04(v41, v47 + v46[7], &qword_256F62E30);
    sub_23FD11B24();
    sub_23FD1FD18();
    *(_BYTE *)(v47 + v46[8]) = a13;
    sub_23FD11B60();
    sub_23FD1FD18();
    sub_23FD1FB80(v13);
    *(_BYTE *)(v47 + v46[9]) = a11;
    sub_23FC0EDD8(v47, v40, type metadata accessor for FeedbackLearning.CandidateEvaluation);
    sub_23FD204C0();
    sub_23FCBA0CC();
  }
  sub_23FD20168();
  sub_23FC06000();
}

void sub_23FD09CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  int vars8;

  FeedbackLearning.CandidateEvaluation.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE1(vars8), SBYTE2(vars8), SHIBYTE(vars8));
}

void sub_23FD09CB8()
{
  FeedbackLearning.CandidateEvaluation.encode(to:)();
}

void static FeedbackLearning.TaskFailureReason.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23FC061F0();
  v36 = v4;
  v6 = v5;
  v7 = sub_23FD7313C();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FD1F95C(v10, v33);
  v11 = sub_23FD1FF08();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = sub_23FC12F10();
  type metadata accessor for FeedbackLearning.TaskFailureReason(v14);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC159C8();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v33 - v19;
  sub_23FBFD684(&qword_256F62EA0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FCF2498();
  v24 = v0 + v23;
  sub_23FC0EDD8(v6, v0, type metadata accessor for FeedbackLearning.TaskFailureReason);
  sub_23FC0EDD8(v36, v24, type metadata accessor for FeedbackLearning.TaskFailureReason);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23FC0EDD8(v0, (uint64_t)v20, type metadata accessor for FeedbackLearning.TaskFailureReason);
    if (!sub_23FD200C0())
    {
      v31 = sub_23FD204E8();
      v32(v31);
      sub_23FD7163C();
      sub_23FD204E0(v1);
      v29 = (uint64_t)v20;
      goto LABEL_12;
    }
    v30 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v20, v11);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_23FC0EDD8(v0, v2, type metadata accessor for FeedbackLearning.TaskFailureReason);
    if (sub_23FD200C0() == 1)
    {
      v26 = v33;
      v27 = sub_23FD204E8();
      v28(v27);
      sub_23FD73130();
      sub_23FD204E0(v26);
      v29 = v2;
LABEL_12:
      sub_23FD204E0(v29);
      sub_23FD1FE7C();
      goto LABEL_13;
    }
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v2, v35);
    goto LABEL_10;
  }
  v30 = sub_23FD200C0();
  if ((_DWORD)v30 != 2)
  {
LABEL_10:
    sub_23FC7E2CC(v30, &qword_256F62EA0);
    goto LABEL_13;
  }
  sub_23FD1FE7C();
LABEL_13:
  sub_23FC060D4();
}

uint64_t sub_23FD09EEC(char a1)
{
  if (!a1)
    return 0x6E776F6E6B6E75;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x6C61636974697263;
}

uint64_t sub_23FD09F54()
{
  char *v0;

  return sub_23FD09EEC(*v0);
}

void sub_23FD09F5C(_BYTE *a1@<X8>)
{
  char v2;

  sub_23FD0E778();
  *a1 = v2;
}

uint64_t sub_23FD09F80()
{
  sub_23FD11BB0();
  return sub_23FD754DC();
}

uint64_t sub_23FD09FA8()
{
  sub_23FD11BB0();
  return sub_23FD754E8();
}

uint64_t sub_23FD09FD0()
{
  sub_23FD11BEC();
  return sub_23FD754DC();
}

uint64_t sub_23FD09FF8()
{
  sub_23FD11BEC();
  return sub_23FD754E8();
}

uint64_t sub_23FD0A020()
{
  sub_23FD11C28();
  return sub_23FD754DC();
}

uint64_t sub_23FD0A048()
{
  sub_23FD11C28();
  return sub_23FD754E8();
}

uint64_t sub_23FD0A070()
{
  sub_23FD11C64();
  return sub_23FD754DC();
}

uint64_t sub_23FD0A098()
{
  sub_23FD11C64();
  return sub_23FD754E8();
}

void FeedbackLearning.TaskFailureReason.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_23FCC2A5C();
  v39 = *(_QWORD *)(sub_23FBFD684(&qword_256F62EA8) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FD1FA94(v7, v30);
  v8 = sub_23FD7313C();
  sub_23FD20378(v8);
  v37 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FCF2634(v12, v31);
  v32 = *(_QWORD *)(sub_23FBFD684(&qword_256F62EB0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFEFE0();
  v35 = v15;
  v34 = *(_QWORD *)(sub_23FD1FF08() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FCF2650(v18, v32);
  v19 = sub_23FBFD684(&qword_256F62EB8);
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v20, v21);
  v22 = sub_23FD1FB14();
  type metadata accessor for FeedbackLearning.TaskFailureReason(v22);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FC10118();
  v41 = *(_QWORD *)(sub_23FBFD684(&qword_256F62EC0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FC0603C();
  sub_23FD1FA40();
  sub_23FD11BB0();
  sub_23FD754C4();
  sub_23FC0EDD8(v0, v3, type metadata accessor for FeedbackLearning.TaskFailureReason);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_23FD11C64();
      sub_23FD1F9FC();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v19);
      sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
      goto LABEL_7;
    }
    sub_23FC5AE8C(v36, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 32));
    sub_23FD20598();
    sub_23FCF2448();
    sub_23FBFEE2C(&qword_256F62ED8, (uint64_t (*)(uint64_t))MEMORY[0x24BE54F50], MEMORY[0x24BE54F60]);
    sub_23FD1FCB0();
    sub_23FC5B3B0(v38, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
    v29 = v36;
  }
  else
  {
    sub_23FC5AE8C(v40, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32));
    sub_23FD206A4();
    sub_23FCF2448();
    sub_23FBFEE2C(&qword_256F62EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE522D8], MEMORY[0x24BE522E8]);
    sub_23FD1FCB0();
    sub_23FC5B3B0(v35, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8);
    v29 = v40;
  }
  sub_23FBFEFFC(v29, v28);
  sub_23FCF2820(v41);
LABEL_7:
  sub_23FD1FF10();
  sub_23FC06000();
}

void FeedbackLearning.TaskFailureReason.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_23FCC2A5C();
  v68 = v0;
  v5 = v4;
  v63 = v6;
  v62 = sub_23FBFD684(&qword_256F62EF8);
  v58 = *(_QWORD *)(v62 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FD1F95C(v9, (uint64_t)v52);
  v61 = sub_23FBFD684(&qword_256F62F00);
  v57 = *(_QWORD *)(v61 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FCF2650(v12, (uint64_t)v52);
  v13 = sub_23FBFD684(&qword_256F62F08);
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FD1FAB0(v16, (uint64_t)v52);
  v17 = sub_23FBFD684(&qword_256F62F10);
  v66 = *(_QWORD *)(v17 - 8);
  v67 = v17;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  v20 = sub_23FC0A0A8();
  v21 = type metadata accessor for FeedbackLearning.TaskFailureReason(v20);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC159C8();
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (char *)&v52 - v27;
  MEMORY[0x24BDAC7A8](v26, v29);
  sub_23FD201D4();
  sub_23FBFDE40(v5, v5[3]);
  sub_23FD11BB0();
  sub_23FD202A0();
  sub_23FD20370();
  if (v0)
    goto LABEL_11;
  v52 = v28;
  v53 = v2;
  v54 = v1;
  v55 = v21;
  v56 = v5;
  v30 = v67;
  v68 = v3;
  v31 = sub_23FD752E4();
  v32 = *(_QWORD *)(v31 + 16);
  if (!v32)
  {
LABEL_8:
    v41 = v66;
    v42 = v55;
    v43 = sub_23FD1FBC0();
    sub_23FC5A704();
    v45 = v44;
    sub_23FBFD684(&qword_256F5D6C0);
    *v45 = v42;
    v46 = v68;
    sub_23FD7529C();
    sub_23FCF2778();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v45, *MEMORY[0x24BEE26D0], v43);
    sub_23FD1FE10();
    sub_23FCF24C4();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v46, v30);
    v5 = v56;
LABEL_11:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v5);
    goto LABEL_12;
  }
  v33 = v30;
  v34 = *(unsigned __int8 *)(v31 + 32);
  sub_23FC05ED0(1, v32, v31, v31 + 32, 0, (2 * v32) | 1);
  v36 = v35;
  v38 = v37;
  swift_bridgeObjectRelease();
  if (v36 != v38 >> 1)
  {
    v30 = v33;
    goto LABEL_8;
  }
  if ((_DWORD)v34)
  {
    if ((_DWORD)v34 == 1)
    {
      sub_23FD206A4();
      v39 = v64;
      sub_23FD1FEB8();
      sub_23FD1FF08();
      sub_23FBFEE2C(&qword_256F62F20, (uint64_t (*)(uint64_t))MEMORY[0x24BE522D8], MEMORY[0x24BE522F0]);
      v40 = (uint64_t)v52;
      sub_23FD20534();
      sub_23FD1FD48();
      sub_23FBFEFFC(v39, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
    }
    else
    {
      sub_23FD20598();
      v48 = v65;
      sub_23FD1FEB8();
      sub_23FD7313C();
      sub_23FBFEE2C(&qword_256F62F18, (uint64_t (*)(uint64_t))MEMORY[0x24BE54F50], MEMORY[0x24BE54F68]);
      v40 = v53;
      sub_23FD1FD48();
      sub_23FBFEFFC(v48, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
    }
    sub_23FCF24C4();
    sub_23FC100E4(v34, *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
    swift_storeEnumTagMultiPayload();
    sub_23FD200B8(v40, v51, type metadata accessor for FeedbackLearning.TaskFailureReason);
  }
  else
  {
    sub_23FD11C64();
    sub_23FD20278();
    v47 = v68;
    sub_23FD1FFC8();
    sub_23FD1FB08(v59);
    sub_23FCF24C4();
    sub_23FC100E4(v47, *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
    v49 = sub_23FD2051C();
  }
  sub_23FD20528(v49, v50, type metadata accessor for FeedbackLearning.TaskFailureReason);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v56);
LABEL_12:
  sub_23FD1FF10();
  sub_23FC06000();
}

void sub_23FD0A88C()
{
  FeedbackLearning.TaskFailureReason.init(from:)();
}

void sub_23FD0A8A0()
{
  FeedbackLearning.TaskFailureReason.encode(to:)();
}

void static FeedbackLearning.TaskStatus.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC93074();
  type metadata accessor for FeedbackLearning.TaskStatus(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC10370();
  sub_23FBFD684(&qword_256F62F28);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FCF2498();
  sub_23FD201CC(a1, v1);
  v9 = sub_23FD2025C();
  sub_23FD201CC(v9, v10);
  v11 = sub_23FBFD684(&qword_256F5D4F8);
  v12 = (char *)sub_23FD0A998
      + 4
      * byte_23FD7B902[_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, v11)];
  __asm { BR              X10 }
}

uint64_t sub_23FD0A998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_23FC0EDD8(v0, v1, type metadata accessor for FeedbackLearning.TaskStatus);
  if (sub_23FD1FB9C())
  {
    sub_23FCBA0CC();
    sub_23FC7E2CC(v2, &qword_256F62F28);
    v3 = 0;
  }
  else
  {
    v5 = sub_23FC5D46C();
    sub_23FC0F380(v5, v6, type metadata accessor for FeedbackLearning.TaskFailureReason);
    sub_23FC5E714();
    static FeedbackLearning.TaskFailureReason.== infix(_:_:)();
    v3 = v7;
    sub_23FCBA0CC();
    sub_23FCBA0CC();
    sub_23FD1FE7C();
  }
  return v3 & 1;
}

uint64_t sub_23FD0AA8C()
{
  return 5;
}

uint64_t sub_23FD0AA94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD0AAC8 + 4 * byte_23FD7B907[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_23FD0AAC8()
{
  return 0x6465727265666E69;
}

uint64_t sub_23FD0AB00()
{
  return 0x6E6F646E616261;
}

uint64_t sub_23FD0AB14()
{
  return 0x6C65636E6163;
}

uint64_t sub_23FD0AB28()
{
  return 0x6E6F73616572;
}

uint64_t sub_23FD0AB3C()
{
  sub_23FD11D2C();
  return sub_23FD754DC();
}

uint64_t sub_23FD0AB64()
{
  sub_23FD11D2C();
  return sub_23FD754E8();
}

uint64_t sub_23FD0AB8C()
{
  sub_23FD11CF0();
  return sub_23FD754DC();
}

uint64_t sub_23FD0ABB4()
{
  sub_23FD11CF0();
  return sub_23FD754E8();
}

uint64_t sub_23FD0ABDC()
{
  unsigned __int8 *v0;

  return sub_23FD0AA94(*v0);
}

void sub_23FD0ABE4(_BYTE *a1@<X8>)
{
  char v2;

  sub_23FD0EFC8();
  *a1 = v2;
}

uint64_t sub_23FD0AC08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FD0AA8C();
  *a1 = result;
  return result;
}

uint64_t sub_23FD0AC2C()
{
  sub_23FD11CB4();
  return sub_23FD754DC();
}

uint64_t sub_23FD0AC54()
{
  sub_23FD11CB4();
  return sub_23FD754E8();
}

void sub_23FD0AC80(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23FD0F17C(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23FD0ACA8()
{
  sub_23FD11D68();
  return sub_23FD754DC();
}

uint64_t sub_23FD0ACD0()
{
  sub_23FD11D68();
  return sub_23FD754E8();
}

uint64_t sub_23FD0ACF8()
{
  sub_23FD11DA4();
  return sub_23FD754DC();
}

uint64_t sub_23FD0AD20()
{
  sub_23FD11DA4();
  return sub_23FD754E8();
}

uint64_t sub_23FD0AD48()
{
  sub_23FD11DE0();
  return sub_23FD754DC();
}

uint64_t sub_23FD0AD70()
{
  sub_23FD11DE0();
  return sub_23FD754E8();
}

void FeedbackLearning.TaskStatus.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23FCC2A5C();
  sub_23FD1FE00();
  sub_23FBFD684(&qword_256F62F30);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FD1FAB0(v4, v26);
  sub_23FBFD684(&qword_256F62F38);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FD1FA18(v7, v27);
  sub_23FBFD684(&qword_256F62F40);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = sub_23FD1FBE8(v10, v28);
  type metadata accessor for FeedbackLearning.TaskFailureReason(v11);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FD1FC94(v14, v29);
  sub_23FBFD684(&qword_256F62F48);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC9308C();
  sub_23FBFD684(&qword_256F62F50);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v17, v18);
  v19 = sub_23FC8D7B4();
  type metadata accessor for FeedbackLearning.TaskStatus(v19);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FC061C0();
  sub_23FBFD684(&qword_256F62F58);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFDE40(v0, v0[3]);
  sub_23FD11CB4();
  sub_23FD20034();
  sub_23FC0EDD8(v30, v1, type metadata accessor for FeedbackLearning.TaskStatus);
  v24 = sub_23FBFD684(&qword_256F5D4F8);
  v25 = (char *)sub_23FD0AF68
      + 4
      * byte_23FD7B90C[_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, v24)];
  __asm { BR              X10 }
}

void sub_23FD0AF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD200D8();
  sub_23FD20574();
  v2 = *(_QWORD *)(v1 - 160);
  sub_23FD1F934();
  sub_23FBFEE2C(&qword_256F62F80, type metadata accessor for FeedbackLearning.TaskFailureReason, (uint64_t)&protocol conformance descriptor for FeedbackLearning.TaskFailureReason);
  sub_23FD1FCB0();
  sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 144) + 8));
  sub_23FD20478();
  sub_23FC100E4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 96) + 8));
  sub_23FD201AC();
  sub_23FC06000();
}

void FeedbackLearning.TaskStatus.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23FCC2A5C();
  v2 = v1;
  sub_23FBFD684(&qword_256F62F98);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FD1FA94(v5, v36);
  sub_23FBFD684(&qword_256F62FA0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FD1FB30(v8, v37);
  sub_23FBFD684(&qword_256F62FA8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FD1FA5C(v11, v38);
  sub_23FBFD684(&qword_256F62FB0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FCF2634(v14, v39);
  sub_23FBFD684(&qword_256F62FB8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FD1FA18(v17, v40);
  v18 = sub_23FBFD684(&qword_256F62FC0);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v19, v20);
  v21 = sub_23FC7E1F4();
  type metadata accessor for FeedbackLearning.TaskStatus(v21);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC159C8();
  MEMORY[0x24BDAC7A8](v24, v25);
  v26 = *(_QWORD *)(v2 + 32);
  sub_23FD1FA40();
  sub_23FD11CB4();
  sub_23FD1FCDC();
  if (!v0)
  {
    if (*(_QWORD *)(sub_23FD1FD50() + 16))
    {
      v27 = sub_23FD1FD20();
      sub_23FC05ED0(v27, v28, v29, v30, v31, v32);
      sub_23FD20014();
      if (v2 == v26 >> 1)
        __asm { BR              X9 }
    }
    sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FBFD684(&qword_256F5D6C0);
    sub_23FD1FE34();
    v33 = sub_23FCF2778();
    sub_23FD1FF88(v33, *MEMORY[0x24BEE26D0]);
    sub_23FD206C8();
    sub_23FCF24C4();
    v34 = sub_23FD20700();
    v35(v34);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v2);
  sub_23FD1FF10();
  sub_23FC06000();
}

void sub_23FD0B56C()
{
  FeedbackLearning.TaskStatus.init(from:)();
}

void sub_23FD0B580()
{
  FeedbackLearning.TaskStatus.encode(to:)();
}

uint64_t static FeedbackLearning.TaskPromptStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
  {
    if (v3 == 3)
      return 1;
    return sub_23FC05ACC();
  }
  if (v3 == 3)
    return sub_23FC05ACC();
  return v2 == v3;
}

uint64_t sub_23FD0B5D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D7269666E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FD0B6AC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D7269666E6F63;
  else
    return 1701736302;
}

uint64_t sub_23FD0B6DC()
{
  char *v0;

  return sub_23FD0B6AC(*v0);
}

uint64_t sub_23FD0B6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD0B5D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD0B708()
{
  sub_23FD11E1C();
  return sub_23FD754DC();
}

uint64_t sub_23FD0B730()
{
  sub_23FD11E1C();
  return sub_23FD754E8();
}

uint64_t sub_23FD0B758()
{
  sub_23FD11E58();
  return sub_23FD754DC();
}

uint64_t sub_23FD0B780()
{
  sub_23FD11E58();
  return sub_23FD754E8();
}

uint64_t sub_23FD0B7A8()
{
  sub_23FD11E94();
  return sub_23FD754DC();
}

uint64_t sub_23FD0B7D0()
{
  sub_23FD11E94();
  return sub_23FD754E8();
}

void FeedbackLearning.TaskPromptStatus.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  sub_23FCC2A5C();
  v4 = v3;
  v14 = *(_QWORD *)(sub_23FBFD684(&qword_256F62FD0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC8FD1C();
  sub_23FBFD684(&qword_256F62FD8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC10118();
  v15 = *(_QWORD *)(sub_23FBFD684(&qword_256F62FE0) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC10388();
  v11 = *v0;
  sub_23FBFDE40(v4, v4[3]);
  sub_23FD11E1C();
  sub_23FD754C4();
  if (v11 == 3)
  {
    sub_23FD11E94();
    sub_23FD1F934();
    v12 = sub_23FD205E0();
    v13(v12);
  }
  else
  {
    sub_23FD20674();
    sub_23FD1F934();
    sub_23FD11728();
    sub_23FD1FCB0();
    sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  }
  sub_23FC100E4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_23FD1FF10();
  sub_23FC06000();
}

void FeedbackLearning.TaskPromptStatus.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;

  sub_23FCC2A5C();
  v18 = v17;
  v45 = v19;
  v44 = *(_QWORD *)(sub_23FBFD684(&qword_256F63000) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FCA6D78(v22, v42);
  v43 = sub_23FBFD684(&qword_256F63008);
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FC10388();
  v25 = sub_23FBFD684(&qword_256F63010);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FC8FD1C();
  sub_23FBFDE40(v18, v18[3]);
  sub_23FD11E1C();
  sub_23FD200A4();
  if (v12)
    goto LABEL_9;
  v47 = v18;
  sub_23FD752E4();
  sub_23FD2073C();
  v28 = v25;
  if (!v29)
  {
    v38 = v15;
LABEL_8:
    v39 = sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FD203BC();
    sub_23FBFD684(&qword_256F5D6C0);
    *v15 = &type metadata for FeedbackLearning.TaskPromptStatus;
    sub_23FD7529C();
    sub_23FCF2778();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v15, *MEMORY[0x24BEE26D0], v39);
    sub_23FD1FE10();
    sub_23FC06158();
    (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v38, v28);
    v18 = v47;
LABEL_9:
    v40 = (uint64_t)v18;
    goto LABEL_10;
  }
  v30 = sub_23FD1FBC8();
  sub_23FC05ED0(v30, v31, v32, v33, v34, v35);
  v37 = v36;
  sub_23FD1FD04();
  if (v37)
  {
    v38 = v15;
    v28 = v25;
    goto LABEL_8;
  }
  if ((v18 & 1) != 0)
  {
    sub_23FD20674();
    sub_23FD1FFC8();
    sub_23FD117A0();
    sub_23FD752D8();
    sub_23FC5B3B0(v46, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    sub_23FC06158();
    sub_23FC100E4((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  }
  else
  {
    sub_23FD11E94();
    sub_23FD1FFC8();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v43);
    sub_23FC06158();
    sub_23FBFF204((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    a12 = 3;
  }
  *v45 = a12;
  v40 = (uint64_t)v18;
LABEL_10:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v40);
  sub_23FC06000();
}

void sub_23FD0BCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  FeedbackLearning.TaskPromptStatus.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_23FD0BCDC()
{
  FeedbackLearning.TaskPromptStatus.encode(to:)();
}

void static FeedbackLearning.TaskOutcome.== infix(_:_:)(uint64_t a1)
{
  char v1;

  static FeedbackLearning.TaskStatus.== infix(_:_:)(a1);
  if ((v1 & 1) != 0)
    type metadata accessor for FeedbackLearning.TaskOutcome(0);
  sub_23FBFF0A0();
}

uint64_t sub_23FD0BD54(char a1)
{
  if ((a1 & 1) != 0)
    return 0x745374706D6F7270;
  else
    return 0x737574617473;
}

uint64_t sub_23FD0BD90()
{
  char *v0;

  return sub_23FD0BD54(*v0);
}

void sub_23FD0BD98(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23FD0F9B4(a1, a2);
  *a3 = v4;
}

uint64_t sub_23FD0BDBC()
{
  sub_23FD11EE4();
  return sub_23FD754DC();
}

uint64_t sub_23FD0BDE4()
{
  sub_23FD11EE4();
  return sub_23FD754E8();
}

void FeedbackLearning.TaskOutcome.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD1FF1C();
  sub_23FD1FDF0();
  sub_23FBFD684(&qword_256F63018);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1F984();
  sub_23FD11EE4();
  sub_23FCC2A80();
  type metadata accessor for FeedbackLearning.TaskStatus(0);
  sub_23FBFEE2C(&qword_256F63028, type metadata accessor for FeedbackLearning.TaskStatus, (uint64_t)&protocol conformance descriptor for FeedbackLearning.TaskStatus);
  sub_23FD1F9A4();
  if (!v0)
  {
    v3 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
    sub_23FD1FF38(v3);
    sub_23FC06244();
  }
  sub_23FCC2B78();
  sub_23FD202D4();
  sub_23FC0A094();
}

void FeedbackLearning.TaskOutcome.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23FCC2A5C();
  v5 = sub_23FD20384(v4);
  type metadata accessor for FeedbackLearning.TaskStatus(v5);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FCA6D78(v8, v17);
  sub_23FBFD684(&qword_256F63038);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_23FC7E1F4();
  type metadata accessor for FeedbackLearning.TaskOutcome(v11);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFDE40(v0, v0[3]);
  sub_23FD11EE4();
  sub_23FD1FEF0();
  if (v1)
  {
    sub_23FCC2A9C();
  }
  else
  {
    sub_23FBFEE2C(&qword_256F63040, type metadata accessor for FeedbackLearning.TaskStatus, (uint64_t)&protocol conformance descriptor for FeedbackLearning.TaskStatus);
    v14 = sub_23FD1FBAC();
    sub_23FD20340(v14, v15, type metadata accessor for FeedbackLearning.TaskStatus);
    sub_23FD20650();
    sub_23FD1FBAC();
    sub_23FC5B3B0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23FD204A4();
    sub_23FC98224(v18, v16);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v0);
    sub_23FC5D46C();
    sub_23FCBA0CC();
  }
  sub_23FC06000();
}

void sub_23FD0C088()
{
  FeedbackLearning.TaskOutcome.init(from:)();
}

void sub_23FD0C09C()
{
  FeedbackLearning.TaskOutcome.encode(to:)();
}

void static FeedbackLearning.TaskAction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_23FD2055C() & 1) != 0)
  {
    v0 = sub_23FD1FFF0();
    sub_23FCF250C(*(int *)(v0 + 20));
    if ((static FeedbackLearning.ActionValue.== infix(_:_:)() & 1) != 0)
    {
      v1 = sub_23FD203E4();
      sub_23FCF250C(*(int *)(v1 + 20));
      sub_23FD74438();
    }
  }
  sub_23FC09258();
}

uint64_t sub_23FD0C128(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xEB00000000746E65;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696665446C6F6F74 && a2 == 0xEE006E6F6974696ELL;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6465747563657865 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FD75380();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23FD0C2B0(char a1)
{
  if (!a1)
    return 0x76456E6F69746361;
  if (a1 == 1)
    return 0x696665446C6F6F74;
  return 0x6465747563657865;
}

uint64_t sub_23FD0C31C()
{
  char *v0;

  return sub_23FD0C2B0(*v0);
}

uint64_t sub_23FD0C324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD0C128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD0C348()
{
  sub_23FD11FAC();
  return sub_23FD754DC();
}

uint64_t sub_23FD0C370()
{
  sub_23FD11FAC();
  return sub_23FD754E8();
}

void FeedbackLearning.TaskAction.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD1FF1C();
  sub_23FD1FDF0();
  sub_23FBFD684(&qword_256F63050);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1F984();
  sub_23FD11FAC();
  sub_23FCC2A80();
  type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  sub_23FBFEE2C(&qword_256F63060, type metadata accessor for FeedbackLearning.FlowActionEvent, (uint64_t)&protocol conformance descriptor for FeedbackLearning.FlowActionEvent);
  sub_23FD1F9A4();
  if (!v0)
  {
    type metadata accessor for FeedbackLearning.TaskAction(0);
    sub_23FD20138();
    sub_23FD74474();
    sub_23FBFEE2C(&qword_256F63068, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB8FF0]);
    sub_23FC06244();
    sub_23FD20568();
    sub_23FD201E4();
  }
  sub_23FCC2B78();
  sub_23FD202D4();
  sub_23FC0A094();
}

void FeedbackLearning.TaskAction.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23FCC2A5C();
  v4 = v3;
  v20 = v5;
  v6 = sub_23FD74474();
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_23FC8D7B4();
  type metadata accessor for FeedbackLearning.FlowActionEvent(v9);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FD1F95C(v12, v20);
  sub_23FBFD684(&qword_256F63070);
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v13, v14);
  v15 = sub_23FC0A0A8();
  v16 = type metadata accessor for FeedbackLearning.TaskAction(v15);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC9308C();
  sub_23FD20184(v4);
  sub_23FD11FAC();
  sub_23FD202A0();
  sub_23FD754B8();
  if (v1)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
  }
  else
  {
    sub_23FBFEE2C(&qword_256F63078, type metadata accessor for FeedbackLearning.FlowActionEvent, (uint64_t)&protocol conformance descriptor for FeedbackLearning.FlowActionEvent);
    sub_23FD202BC();
    sub_23FD752D8();
    sub_23FC0F380(v24, v2, type metadata accessor for FeedbackLearning.FlowActionEvent);
    sub_23FD202C8();
    sub_23FBFEE2C(&qword_256F63080, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB9008]);
    sub_23FD752D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v2 + *(int *)(v16 + 20), v0, v23);
    sub_23FD20568();
    v19 = sub_23FD752C0();
    sub_23FD200CC();
    *(_BYTE *)(v2 + *(int *)(v16 + 24)) = v19 & 1;
    sub_23FC98224(v2, v21);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
    sub_23FD203C8();
  }
  sub_23FC06000();
}

void sub_23FD0C744()
{
  FeedbackLearning.TaskAction.init(from:)();
}

void sub_23FD0C758()
{
  FeedbackLearning.TaskAction.encode(to:)();
}

uint64_t FeedbackLearning.TaskAction.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t vars0;
  uint64_t vars8;

  v2 = sub_23FC06250();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE52140];
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC12F34();
  sub_23FD750E0();
  swift_bridgeObjectRelease();
  sub_23FD203E4();
  sub_23FD74450();
  sub_23FCF24B4();
  swift_bridgeObjectRelease();
  sub_23FD74C48();
  v6 = sub_23FD1FFF0();
  sub_23FBFF388(v6, v7, v8, v9, v10, v11, v12, v13, 0xD000000000000012, 0x800000023FD85EF0, v16, v17, v18, v19, v20, v21, v22, v23, vars0,
    vars8);
  sub_23FBFEE2C((unint64_t *)&qword_256F5D950, v3, MEMORY[0x24BE52170]);
  sub_23FD75344();
  sub_23FCF24B4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  sub_23FD74C48();
  sub_23FD71474();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FD75344();
  sub_23FCF24B4();
  sub_23FC15A24();
  sub_23FCF23C8();
  return v15;
}

void static FeedbackLearning.TaskFinalResolutionState.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  sub_23FC061F0();
  v34 = v5;
  v7 = v6;
  v33 = sub_23FD203E4();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC10370();
  v10 = sub_23FBFD684(&qword_256F63088);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC10388();
  sub_23FBFD684(&qword_256F5D4E0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FD1FC78();
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v33 - v17;
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC061C0();
  sub_23FBFD684(&qword_256F63090);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC93074();
  v24 = v0 + *(int *)(v23 + 48);
  sub_23FC0EDD8(v7, v0, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  sub_23FC0EDD8(v34, v24, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  v25 = sub_23FBFD684(&qword_256F5D4E8);
  sub_23FC100EC(v0, 1, v25);
  if (v27)
  {
    sub_23FC100EC(v24, 1, v25);
    if (v27)
      goto LABEL_25;
  }
  else
  {
    v34 = v3;
    v26 = v33;
    sub_23FC0EDD8(v0, v4, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
    sub_23FC100EC(v24, 1, v25);
    if (!v27)
    {
      sub_23FC5F340(v24, (uint64_t)v18);
      v28 = v2 + *(int *)(v10 + 48);
      sub_23FC5F340(v4, v2);
      sub_23FD204D4((uint64_t)v18);
      sub_23FC100EC(v2, 1, v26);
      if (v29)
      {
        sub_23FBFEF74((uint64_t)v18, &qword_256F5D4E0);
        sub_23FC100EC(v28, 1, v26);
        if (v27)
        {
          sub_23FBFEF74(v2, &qword_256F5D4E0);
LABEL_25:
          sub_23FCBA0CC();
          goto LABEL_26;
        }
        v31 = &qword_256F63088;
      }
      else
      {
        sub_23FC0F3AC(v2, v34, &qword_256F5D4E0);
        sub_23FC100EC(v28, 1, v26);
        if (v30)
        {
          v31 = &qword_256F63088;
        }
        else
        {
          sub_23FC0F380(v28, v1, type metadata accessor for FeedbackLearning.TaskAction);
          v32 = sub_23FD71450();
          if ((v32 & 1) != 0)
          {
            sub_23FD1FFF0();
            if ((static FeedbackLearning.ActionValue.== infix(_:_:)() & 1) != 0 && (sub_23FD74438() & 1) != 0)
            {
              sub_23FCBA0CC();
              sub_23FBFEF74((uint64_t)v18, &qword_256F5D4E0);
              sub_23FCBA0CC();
              sub_23FBFEF74(v2, &qword_256F5D4E0);
              goto LABEL_25;
            }
          }
          sub_23FCBA0CC();
          v31 = &qword_256F5D4E0;
        }
        sub_23FBFEF74((uint64_t)v18, &qword_256F5D4E0);
        sub_23FCBA0CC();
      }
      sub_23FBFEF74(v2, v31);
      goto LABEL_25;
    }
    sub_23FBFEF74(v4, &qword_256F5D4E0);
  }
  sub_23FBFEF74(v0, &qword_256F63090);
LABEL_26:
  sub_23FC060D4();
}

uint64_t sub_23FD0CCA4()
{
  sub_23FD11FFC();
  return sub_23FD754DC();
}

uint64_t sub_23FD0CCCC()
{
  sub_23FD11FFC();
  return sub_23FD754E8();
}

uint64_t sub_23FD0CCF8()
{
  sub_23FD12074();
  return sub_23FD754DC();
}

uint64_t sub_23FD0CD20()
{
  sub_23FD12074();
  return sub_23FD754E8();
}

uint64_t sub_23FD0CD48()
{
  sub_23FD12038();
  return sub_23FD754DC();
}

uint64_t sub_23FD0CD70()
{
  sub_23FD12038();
  return sub_23FD754E8();
}

void FeedbackLearning.TaskFinalResolutionState.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23FCC2A5C();
  sub_23FD1FE00();
  v1 = sub_23FBFD684(&qword_256F63098);
  v18[1] = *(_QWORD *)(v1 - 8);
  v18[2] = v1;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC061C0();
  v4 = sub_23FBFD684(&qword_256F630A0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5D4E0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_23FC7E1F4();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v9);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC8FD1C();
  v22 = *(_QWORD *)(sub_23FBFD684(&qword_256F630A8) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD1FA40();
  sub_23FD11FFC();
  sub_23FD20090();
  sub_23FC0EDD8(v21, v0, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  v16 = sub_23FBFD684(&qword_256F5D4E8);
  sub_23FD206D0(v16);
  if (v17)
  {
    sub_23FD12038();
    sub_23FD1FC68();
    sub_23FD20290();
  }
  else
  {
    sub_23FD2019C();
    sub_23FD12074();
    sub_23FD1FC68();
    type metadata accessor for FeedbackLearning.TaskAction(0);
    sub_23FBFEE2C(&qword_256F630C8, type metadata accessor for FeedbackLearning.TaskAction, (uint64_t)&protocol conformance descriptor for FeedbackLearning.TaskAction);
    sub_23FD1FD90();
    sub_23FCF2820(v19);
    sub_23FD2046C();
  }
  sub_23FC5B3B0((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23FD201AC();
  sub_23FC06000();
}

void FeedbackLearning.TaskFinalResolutionState.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  sub_23FCC2A5C();
  v50 = v0;
  v3 = v2;
  v48 = v4;
  v5 = sub_23FBFD684(&qword_256F630D0);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FD1F95C(v8, v43);
  v9 = sub_23FBFD684(&qword_256F630D8);
  v10 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  v47 = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FD1FA78(v13, v43);
  v14 = sub_23FBFD684(&qword_256F630E0);
  v49 = *(_QWORD *)(v14 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = sub_23FC0A0A8();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v17);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FD200EC();
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v43 - v22;
  v24 = v3[4];
  sub_23FBFDE40(v3, v3[3]);
  sub_23FD11FFC();
  sub_23FD1FF68();
  if (v0)
    goto LABEL_8;
  sub_23FD20154();
  sub_23FD20748();
  if (!v25
    || (v26 = sub_23FD1FBC8(), sub_23FC05ED0(v26, v27, v28, v29, v30, v31), v33 = v32, sub_23FD1FD04(), v33 != v24 >> 1))
  {
    v37 = v49;
    sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FD203BC();
    sub_23FBFD684(&qword_256F5D6C0);
    sub_23FD1FE50();
    v38 = sub_23FCF2778();
    sub_23FD1FC08(v38, *MEMORY[0x24BEE26D0]);
    sub_23FD1FE10();
    sub_23FC06158();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v1);
    v3 = v50;
LABEL_8:
    v39 = (uint64_t)v3;
    goto LABEL_9;
  }
  if ((v14 & 1) != 0)
  {
    sub_23FD12038();
    sub_23FD1FAF0();
    sub_23FC102AC(v44);
    sub_23FC06158();
    sub_23FC100E4((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    v34 = sub_23FBFD684(&qword_256F5D4E8);
    v35 = sub_23FD1FF50(v34);
  }
  else
  {
    sub_23FD12074();
    sub_23FD1FAF0();
    type metadata accessor for FeedbackLearning.TaskAction(0);
    sub_23FBFEE2C(&qword_256F630E8, type metadata accessor for FeedbackLearning.TaskAction, (uint64_t)&protocol conformance descriptor for FeedbackLearning.TaskAction);
    sub_23FD1FC40();
    v40 = v49;
    sub_23FD1FB58();
    sub_23FC06158();
    sub_23FC100E4((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    v41 = sub_23FBFD684(&qword_256F5D4E8);
    sub_23FD20068(v41);
    sub_23FD200B8(v1, v42, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  }
  sub_23FD20510(v35, v36, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  v39 = (uint64_t)v50;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v39);
  sub_23FD20168();
  sub_23FC06000();
}

void sub_23FD0D280()
{
  FeedbackLearning.TaskFinalResolutionState.init(from:)();
}

void sub_23FD0D294()
{
  FeedbackLearning.TaskFinalResolutionState.encode(to:)();
}

void FeedbackLearning.TaskFinalResolutionState.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  sub_23FBFD684(&qword_256F5D4E0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FC100D4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v16 - v4;
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC93074();
  v8 = sub_23FD204E8();
  sub_23FC0EDD8(v8, v9, v10);
  sub_23FBFD684(&qword_256F5D4E8);
  v11 = sub_23FC8A790();
  sub_23FC100EC(v11, 1, v12);
  if (!v13)
  {
    v14 = sub_23FC5E880();
    sub_23FC5F340(v14, v15);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_23FD750E0();
    swift_bridgeObjectRelease();
    v16 = 0xD000000000000011;
    v17 = 0x800000023FD85F10;
    sub_23FD204D4((uint64_t)v5);
    sub_23FD74C0C();
    sub_23FD74C48();
    swift_bridgeObjectRelease();
    sub_23FCF23C8();
    sub_23FC9820C((uint64_t)v5);
  }
  sub_23FC5E714();
  sub_23FC17830();
}

#error "23FD0D460: call analysis failed (funcsize=46)"

uint64_t sub_23FD0D4C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6574656D61726170 && a2 == 0xE900000000000072;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x800000023FD85FD0 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x6974756C6F736572 && a2 == 0xEA00000000006E6FLL;
      if (v7 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_23FD75380();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23FD0D700(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD0D73C + 4 * byte_23FD7B916[a1]))(0x6E656D6574617473, 0xEB00000000644974);
}

uint64_t sub_23FD0D73C()
{
  return 0x6574656D61726170;
}

unint64_t sub_23FD0D758()
{
  return 0xD000000000000013;
}

uint64_t sub_23FD0D774()
{
  return 0x6974756C6F736572;
}

uint64_t sub_23FD0D790()
{
  return 0x656D6F6374756FLL;
}

void sub_23FD0D7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD1FF1C();
  sub_23FD1FDF0();
  sub_23FBFD684(&qword_256F63FC8);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1F984();
  sub_23FD1E450();
  sub_23FCC2A80();
  sub_23FC06250();
  sub_23FBFEE2C(&qword_256F62DF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52150]);
  sub_23FD1F9A4();
  if (!v0)
  {
    _s18TaskDefinitionThinO23CandidateEvaluationThinVMa(0);
    v3 = sub_23FD20138();
    type metadata accessor for FeedbackLearning.CandidateParameter(v3);
    sub_23FBFEE2C(&qword_256F62E48, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
    sub_23FC06244();
    sub_23FC10130();
    sub_23FBFEE2C(&qword_256F62E50, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54668]);
    sub_23FC06244();
    sub_23FD11AAC();
    sub_23FC06244();
    sub_23FD11AE8();
    sub_23FC06244();
  }
  sub_23FCC2B78();
  sub_23FD202D4();
  sub_23FC0A094();
}

void sub_23FD0D96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23FCC2A5C();
  v17 = v16;
  v37 = v18;
  v39 = *(_QWORD *)(sub_23FC10130() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = sub_23FD1FDB0(v21, v34);
  sub_23FD20378(v22);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FD1FA5C(v25, v35);
  v42 = sub_23FC06250();
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FCF2650(v28, v36);
  sub_23FBFD684(&qword_256F63FB8);
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FC12F34();
  v31 = (int *)_s18TaskDefinitionThinO23CandidateEvaluationThinVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FC10118();
  sub_23FBFDE40(v17, v17[3]);
  sub_23FD1E450();
  sub_23FD20370();
  if (v13)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v17);
  }
  else
  {
    sub_23FBFEE2C(&qword_256F62E20, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52168]);
    sub_23FD202BC();
    sub_23FD1FD70();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v15, v41, v42);
    sub_23FD202C8();
    sub_23FBFEE2C(&qword_256F62E78, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
    sub_23FD1FD70();
    sub_23FC0F380(v40, v15 + v31[5], type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_23FD20568();
    sub_23FBFEE2C(&qword_256F62E80, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54680]);
    sub_23FD1FD70();
    sub_23FC5AE8C(v15 + v31[6], v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
    sub_23FD11B24();
    sub_23FD1FD70();
    *(_BYTE *)(v15 + v31[7]) = a13;
    sub_23FD11B60();
    sub_23FD1FD70();
    sub_23FD20770();
    *(_BYTE *)(v15 + v31[8]) = a11;
    sub_23FC98224(v15, v37);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v17);
    sub_23FD203C8();
  }
  sub_23FD20460();
  sub_23FC06000();
}

uint64_t sub_23FD0DD10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FD0DE20(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6465747563657865;
  else
    return 0x76456E6F69746361;
}

void sub_23FD0DE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD1FF1C();
  sub_23FD1FDF0();
  sub_23FBFD684(&qword_256F63EF8);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1F984();
  sub_23FD1E264();
  sub_23FCC2A80();
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23FD1F9A4();
  if (!v0)
  {
    _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    sub_23FD202C8();
    sub_23FD201E4();
  }
  sub_23FCC2B78();
  sub_23FD202D4();
  sub_23FC0A094();
}

void sub_23FD0DF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23FCC2A5C();
  v5 = v4;
  v18 = v6;
  v20 = sub_23FBFF104();
  v21 = *(_QWORD *)(v20 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FD1F95C(v9, v17);
  sub_23FBFD684(&qword_256F63EE8);
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v10, v11);
  v12 = sub_23FC0A0A8();
  v13 = _s18TaskDefinitionThinO14TaskActionThinVMa(v12);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC10388();
  sub_23FD2020C(v5);
  sub_23FD1E264();
  sub_23FD754B8();
  if (v0)
  {
    sub_23FD204F4();
  }
  else
  {
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD202BC();
    sub_23FD1FD18();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v2, v19, v20);
    sub_23FD202C8();
    v16 = sub_23FD752C0();
    sub_23FC5B3B0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_BYTE *)(v2 + *(int *)(v13 + 20)) = v16 & 1;
    sub_23FC98224(v2, v18);
    sub_23FD204F4();
    sub_23FD203C8();
  }
  sub_23FD20168();
  sub_23FC06000();
}

void sub_23FD0E108(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE800000000000000;
  if (v2
    || (sub_23FC5B06C() & 1) != 0
    || (a1 == 0x656C706D6F636E69 ? (v5 = a2 == 0xEA00000000006574) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23FC5B06C();
    sub_23FD1FB4C();
  }
  sub_23FBFF0A0();
}

uint64_t sub_23FD0E1DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C706D6F636E69;
  else
    return 0x6574656C706D6F63;
}

void sub_23FD0E218(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    sub_23FD204B8();
  }
  else
  {
    sub_23FD1F9C4();
    sub_23FD1FB4C();
  }
  sub_23FBFF0A0();
}

uint64_t sub_23FD0E27C()
{
  return 0x6E6F69746361;
}

void sub_23FD0E290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23FCC2A5C();
  sub_23FD1FE00();
  v1 = sub_23FBFD684(&qword_256F63F98);
  v18[1] = *(_QWORD *)(v1 - 8);
  v18[2] = v1;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC061C0();
  v4 = sub_23FBFD684(&qword_256F63FA0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC0603C();
  sub_23FBFD684(qword_256F63B10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_23FC7E1F4();
  _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(v9);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC8FD1C();
  v22 = *(_QWORD *)(sub_23FBFD684(&qword_256F63FA8) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD1FA40();
  sub_23FD1E39C();
  sub_23FD20090();
  sub_23FC0EDD8(v21, v0, _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
  v16 = sub_23FBFD684(&qword_256F5D4F0);
  sub_23FD206D0(v16);
  if (v17)
  {
    sub_23FD1E3D8();
    sub_23FD1FC68();
    sub_23FD20290();
  }
  else
  {
    sub_23FD2019C();
    sub_23FD1E414();
    sub_23FD1FC68();
    _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    sub_23FBFEE2C(&qword_256F63FB0, _s18TaskDefinitionThinO14TaskActionThinVMa, (uint64_t)&unk_23FD7EF00);
    sub_23FD1FD90();
    sub_23FCF2820(v19);
    sub_23FD2046C();
  }
  sub_23FC5B3B0((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23FD201AC();
  sub_23FC06000();
}

void sub_23FD0E47C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  sub_23FCC2A5C();
  v50 = v0;
  v3 = v2;
  v48 = v4;
  v5 = sub_23FBFD684(&qword_256F63F60);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FD1F95C(v8, v43);
  v9 = sub_23FBFD684(&qword_256F63F68);
  v10 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  v47 = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FD1FA78(v13, v43);
  v14 = sub_23FBFD684(&qword_256F63F70);
  v49 = *(_QWORD *)(v14 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = sub_23FC0A0A8();
  _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(v17);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FD200EC();
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v43 - v22;
  v24 = v3[4];
  sub_23FBFDE40(v3, v3[3]);
  sub_23FD1E39C();
  sub_23FD1FF68();
  if (v0)
    goto LABEL_8;
  sub_23FD20154();
  sub_23FD20748();
  if (!v25
    || (v26 = sub_23FD1FBC8(), sub_23FC05ED0(v26, v27, v28, v29, v30, v31), v33 = v32, sub_23FD1FD04(), v33 != v24 >> 1))
  {
    v37 = v49;
    sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FD203BC();
    sub_23FBFD684(&qword_256F5D6C0);
    sub_23FD1FE50();
    v38 = sub_23FCF2778();
    sub_23FD1FC08(v38, *MEMORY[0x24BEE26D0]);
    sub_23FD1FE10();
    sub_23FC06158();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v1);
    v3 = v50;
LABEL_8:
    v39 = (uint64_t)v3;
    goto LABEL_9;
  }
  if ((v14 & 1) != 0)
  {
    sub_23FD1E3D8();
    sub_23FD1FAF0();
    sub_23FC102AC(v44);
    sub_23FC06158();
    sub_23FC100E4((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    v34 = sub_23FBFD684(&qword_256F5D4F0);
    v35 = sub_23FD1FF50(v34);
  }
  else
  {
    sub_23FD1E414();
    sub_23FD1FAF0();
    _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    sub_23FBFEE2C(&qword_256F63F90, _s18TaskDefinitionThinO14TaskActionThinVMa, (uint64_t)&unk_23FD7EF28);
    sub_23FD1FC40();
    v40 = v49;
    sub_23FD1FB58();
    sub_23FC06158();
    sub_23FC100E4((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    v41 = sub_23FBFD684(&qword_256F5D4F0);
    sub_23FD20068(v41);
    sub_23FD200B8(v1, v42, _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
  }
  sub_23FD20510(v35, v36, _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
  v39 = (uint64_t)v50;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v39);
  sub_23FD20168();
  sub_23FC06000();
}

