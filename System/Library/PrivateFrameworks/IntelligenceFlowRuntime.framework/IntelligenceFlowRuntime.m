uint64_t sub_23FBFABE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;

  v4 = sub_23FD74120();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FBFF180();
  v9 = v8 - v7;
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFF180();
  v14 = v13 - v12;
  *a2 = sub_23FD73220();
  a2[1] = v15;
  sub_23FD72320();
  sub_23FD74DD4();
  v16 = sub_23FD74DEC();
  sub_23FBFF0D8(v14, v17, v18, v16);
  a2[2] = sub_23FD72314();
  a2[11] = (uint64_t)&type metadata for FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream;
  a2[12] = (uint64_t)&protocol witness table for FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream;
  type metadata accessor for ActionEvaluationParticipant.ActionEvaluationCancellationStatus();
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = 0;
  a2[13] = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a1, v4);
  v22 = _s17FastTaskEvaluatorVMa();
  v23 = &off_25100F6C8;
  sub_23FBFDDEC((uint64_t *)&v21);
  sub_23FC8A8AC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return sub_23FBFDE28(&v21, (uint64_t)(a2 + 3));
}

uint64_t sub_23FBFAD7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, _QWORD);
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, _QWORD);
  uint64_t v71;
  int v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v80;
  void (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, _QWORD);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, _QWORD);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  _DWORD v107[2];
  uint64_t v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  int v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t);
  char *v143;
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _UNKNOWN **v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  _UNKNOWN **v155;
  uint64_t v156;

  v3 = sub_23FD71C84();
  sub_23FBFF0B8(v3, (uint64_t)&v152);
  sub_23FBFEFBC(v4);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFCC();
  v122 = v5;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFF218();
  sub_23FBFEFAC(v6);
  v7 = sub_23FD72044();
  sub_23FBFF0B8(v7, (uint64_t)&v155);
  sub_23FBFEFBC(v8);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFE0();
  v126 = v9;
  sub_23FBFD684(&qword_256F5D538);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFCC();
  v125 = v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFF218();
  sub_23FBFEFAC(v11);
  v12 = sub_23FD71BB8();
  sub_23FBFF0B8(v12, (uint64_t)&v156);
  sub_23FBFEFBC(v13);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFCC();
  v124 = v14;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFF218();
  sub_23FBFEFAC(v15);
  v16 = sub_23FD73514();
  sub_23FBFF0B8(v16, (uint64_t)&v143);
  sub_23FBFEFBC(v17);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFE0();
  sub_23FBFEFAC(v18);
  v19 = sub_23FD716FC();
  sub_23FBFF0B8(v19, (uint64_t)&v148);
  sub_23FBFEFBC(v20);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFE0();
  sub_23FBFEFAC(v21);
  v22 = sub_23FD735E0();
  sub_23FBFF0B8(v22, (uint64_t)&v151);
  sub_23FBFEFBC(v23);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFE0();
  sub_23FBFEFAC(v24);
  v25 = sub_23FD7409C();
  sub_23FBFEFBC(*(_QWORD *)(v25 - 8));
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFCC();
  v146 = v26;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8]();
  v144 = (uint64_t)v107 - v27;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFF218();
  v138 = v28;
  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFE0();
  sub_23FBFEFAC(v29);
  v30 = sub_23FD740CC();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFCC();
  v147 = v32;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8]();
  v143 = (char *)v107 - v33;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8]();
  v35 = (char *)v107 - v34;
  v36 = sub_23FBFDE40((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
  v37 = _s17FastTaskEvaluatorVMa();
  v154 = v37;
  v155 = &off_25100F6C8;
  v38 = sub_23FBFDDEC((uint64_t *)&v153);
  sub_23FBFEF40((uint64_t)v36, (uint64_t)v38, (uint64_t (*)(_QWORD))_s17FastTaskEvaluatorVMa);
  sub_23FBFDE28(&v153, (uint64_t)&v151);
  v139 = *(_QWORD *)(a1 + 16);
  if (!v139)
  {
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v39 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v40 = *(_QWORD *)(v31 + 16);
  sub_23FBFF1D0((uint64_t)v35, a1 + v39);
  v41 = (uint64_t)sub_23FBFDE40(&v151, v152);
  v149 = v37;
  v150 = &off_25100F6C8;
  v42 = sub_23FBFDDEC(&v148);
  sub_23FBFEF40(v41, (uint64_t)v42, (uint64_t (*)(_QWORD))_s17FastTaskEvaluatorVMa);
  sub_23FBFDE40(&v148, v149);
  swift_bridgeObjectRetain();
  sub_23FC8AA80();
  LOBYTE(v41) = v43;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v148);
  v44 = *(void (**)(char *, uint64_t))(v31 + 8);
  sub_23FBFF0C4((uint64_t)v35);
  if ((v41 & 1) != 0)
  {
    v45 = 1;
LABEL_57:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v151);
    swift_bridgeObjectRelease();
    return v45;
  }
  if (v139 == 1)
  {
LABEL_6:
    v45 = 0;
    goto LABEL_57;
  }
  v46 = *(_QWORD *)(v31 + 72);
  v134 = *MEMORY[0x24BE56AF8];
  v114 = *MEMORY[0x24BE56BA0];
  v113 = *MEMORY[0x24BE56B20];
  v111 = *MEMORY[0x24BE56C30];
  v117 = *MEMORY[0x24BE56C40];
  v107[1] = *MEMORY[0x24BE56B98];
  v110 = *MEMORY[0x24BE53328];
  v109 = *MEMORY[0x24BE53320];
  v108 = a1;
  v130 = v46;
  v133 = *MEMORY[0x24BE56B00];
  v47 = a1 + v46 + v39;
  v48 = 1;
  v132 = *MEMORY[0x24BE56C78];
  v131 = *MEMORY[0x24BE56C80];
  v49 = v135;
  v50 = v127;
  v137 = v40;
  v136 = v25;
  v142 = v44;
  while (1)
  {
    result = sub_23FBFF1D0((uint64_t)v35, v47);
    if (__OFADD__(v48, 1))
      break;
    v141 = v48 + 1;
    v52 = v138;
    sub_23FD740A8();
    v145 = *(void (**)(uint64_t, uint64_t))(v49 + 88);
    v145(v52, v25);
    sub_23FBFF024();
    if (v58)
    {
      v53 = v50;
      sub_23FD74048();
      v56 = sub_23FBFF104();
      v57 = v50;
      goto LABEL_15;
    }
    sub_23FBFF024();
    v53 = v50;
    if (v58)
    {
      sub_23FD74048();
      v56 = sub_23FBFF104();
      v57 = v50;
LABEL_15:
      sub_23FBFF0D8(v57, v54, v55, v56);
      v59 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
LABEL_16:
      v60 = v52;
LABEL_17:
      v61 = v25;
LABEL_25:
      v59(v60, v61);
      goto LABEL_26;
    }
    sub_23FBFF024();
    if (v62)
    {
      sub_23FBFEFFC(v52, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 96));
      v63 = v121;
      v64 = sub_23FBFF0A8();
      sub_23FBFF058(v64, v65, v66);
      sub_23FD734F0();
LABEL_24:
      v59 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v49 = v135;
      v60 = (uint64_t)v35;
      v61 = v52;
      goto LABEL_25;
    }
    sub_23FBFF024();
    if (v67)
    {
      sub_23FBFEFFC(v52, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 96));
      v63 = v118;
      v68 = sub_23FBFF0A8();
      sub_23FBFF058(v68, v69, v70);
      sub_23FD716F0();
      goto LABEL_24;
    }
    sub_23FBFF024();
    v52 = v119;
    if (!v89)
    {
      sub_23FBFF024();
      if (!v98)
      {
        v103 = sub_23FBFF104();
        sub_23FBFF0F8(v50, v104, v105, v103);
        v59 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
        v60 = v138;
        goto LABEL_17;
      }
      v52 = v138;
      sub_23FBFEFFC(v138, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 96));
      v63 = v115;
      v99 = sub_23FBFF0A8();
      sub_23FBFF058(v99, v100, v101);
      sub_23FD734F0();
      goto LABEL_24;
    }
    sub_23FBFEFFC(v138, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 96));
    v90 = v140;
    v91 = v116;
    v92 = sub_23FBFF13C();
    sub_23FBFF1D8(v92, v93, v94);
    sub_23FC0AC90();
    v25 = v129;
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v52, 1, v129) != 1)
    {
      v102 = v90;
      v53 = v127;
      sub_23FD716F0();
      v49 = v135;
      sub_23FBFF04C(v91, *(uint64_t (**)(uint64_t, _QWORD))(v102 + 8));
      v59 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
      goto LABEL_16;
    }
    sub_23FBFF04C(v91, *(uint64_t (**)(uint64_t, _QWORD))(v90 + 8));
    sub_23FBFEF74(v52, &qword_256F5D538);
    v95 = sub_23FBFF104();
    v53 = v127;
    sub_23FBFF0F8(v127, v96, v97, v95);
LABEL_26:
    v71 = sub_23FBFF104();
    v72 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v53, 1, v71);
    v50 = v53;
    sub_23FBFEF74(v53, qword_254346A10);
    v73 = v143;
    sub_23FBFF070();
    v58 = v72 == 1;
    v74 = v140;
    if (v58)
      goto LABEL_32;
    sub_23FD740A8();
    v75 = v144;
    v25 = v136;
    sub_23FBFF20C(v144);
    sub_23FBFF024();
    if (!v58)
    {
      sub_23FBFEFFC(v75, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
LABEL_31:
      v73 = v143;
LABEL_32:
      v142(v73, v30);
      sub_23FBFF1D0(v147, (uint64_t)v35);
      v25 = v136;
      goto LABEL_33;
    }
    sub_23FBFEFFC(v75, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 96));
    sub_23FBFF1D8(v124, v75, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v74 + 32));
    v76 = v125;
    sub_23FC0AC90();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v76, 1, v129) == 1)
    {
      sub_23FBFF030();
      sub_23FBFEF74(v76, &qword_256F5D538);
      v49 = v135;
      goto LABEL_31;
    }
    v80 = sub_23FBFF0A8();
    v81(v80);
    v82 = v120;
    sub_23FD72038();
    v83 = v123;
    v84 = v122;
    sub_23FBFF058(v122, v82, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v123 + 16));
    v112 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 88))(v84, v76);
    v85 = v84;
    v86 = v82;
    v50 = v127;
    sub_23FBFF178(v85);
    sub_23FBFF178(v86);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v126, v129);
    sub_23FBFF030();
    v142(v143, v30);
    v87 = v147;
    sub_23FBFF070();
    v88 = v112 == v110 || v112 == v109;
    v49 = v135;
    if (v88)
    {
      v106 = v142;
      v142((char *)v87, v30);
      v106(v35, v30);
      goto LABEL_56;
    }
LABEL_33:
    v77 = v146;
    sub_23FD740A8();
    sub_23FBFF20C(v77);
    sub_23FBFF024();
    if (v58)
    {
      sub_23FBFEFFC(v146, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
LABEL_55:
      sub_23FBFF0C4(v147);
      sub_23FBFF0C4((uint64_t)v35);
LABEL_56:
      v45 = 1;
      goto LABEL_57;
    }
    sub_23FBFF024();
    if (v58 || v78 == v131)
      goto LABEL_55;
    sub_23FBFEFFC(v146, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    sub_23FBFF0C4(v147);
    sub_23FBFF0C4((uint64_t)v35);
    ++v48;
    v47 += v130;
    if (v141 == v139)
    {
      v45 = 0;
      goto LABEL_57;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23FBFB808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_23FD72BF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD724DC();
  v8 = sub_23FD72BE4();
  v9 = sub_23FD74F3C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23FBF8000, v8, v9, "Received a signal for termination, setting a flag to cancel task evaluations", v10, 2u);
    MEMORY[0x2426798D8](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_BYTE *)(*(_QWORD *)(a1 + 104) + 16) = 1;
  v11 = *MEMORY[0x24BE79840];
  v12 = sub_23FD72554();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a2, v11, v12);
}

uint64_t sub_23FBFB938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
  v3[9] = swift_task_alloc();
  v3[10] = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  type metadata accessor for FeedbackLearning.TaskStatus(0);
  v3[13] = swift_task_alloc();
  _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
  v3[14] = swift_task_alloc();
  v3[15] = type metadata accessor for FeedbackLearning.TaskAction(0);
  v3[16] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5D4E0);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v4 = sub_23FD72DB8();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = swift_task_alloc();
  v5 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v3[22] = v5;
  v3[23] = *(_QWORD *)(v5 - 8);
  v3[24] = swift_task_alloc();
  v6 = _s18TaskDefinitionThinO23CandidateEvaluationThinVMa(0);
  v3[25] = v6;
  v3[26] = *(_QWORD *)(v6 - 8);
  v3[27] = swift_task_alloc();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  v3[28] = swift_task_alloc();
  _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  _s18TaskDefinitionThinO15TaskContextThinVMa(0);
  v3[31] = swift_task_alloc();
  v7 = sub_23FD7157C();
  v3[32] = v7;
  v3[33] = *(_QWORD *)(v7 - 8);
  v3[34] = swift_task_alloc();
  v8 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  v3[35] = v8;
  v3[36] = *(_QWORD *)(v8 - 8);
  v3[37] = swift_task_alloc();
  v9 = _s18TaskDefinitionThinO18TaskEvaluationThinVMa(0);
  v3[38] = v9;
  v3[39] = *(_QWORD *)(v9 - 8);
  v3[40] = swift_task_alloc();
  v10 = sub_23FD73E08();
  v3[41] = v10;
  v3[42] = *(_QWORD *)(v10 - 8);
  v3[43] = swift_task_alloc();
  v11 = sub_23FD72B6C();
  v3[44] = v11;
  v3[45] = *(_QWORD *)(v11 - 8);
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v12 = sub_23FD71474();
  v3[48] = v12;
  v3[49] = *(_QWORD *)(v12 - 8);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v13 = sub_23FD740CC();
  v3[53] = v13;
  v3[54] = *(_QWORD *)(v13 - 8);
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  v14 = sub_23FD72BF0();
  v3[57] = v14;
  v3[58] = *(_QWORD *)(v14 - 8);
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FBFBCE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  _QWORD *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  uint8_t *v26;
  os_signpost_id_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(_QWORD);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int EnumCaseMultiPayload;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t);
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  os_log_type_t v132;
  uint8_t *v133;
  NSObject *v134;
  uint64_t v135;
  void (*v136)(uint64_t);
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  int *v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  int *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int *v153;
  os_log_type_t v154;
  int *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168[2];

  v1 = v0[54];
  if ((*(_BYTE *)(*(_QWORD *)(v0[6] + 104) + 16) & 1) != 0)
  {
    v13 = v0[55];
    sub_23FD724DC();
    sub_23FBFF1B8(v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    v14 = sub_23FD72BE4();
    v15 = v0;
    v16 = sub_23FD74F3C();
    if (os_log_type_enabled(v14, v16))
    {
      v17 = v0[52];
      v150 = v15[49];
      v152 = v15[54];
      v18 = (uint8_t *)sub_23FBFEFF4();
      v168[0] = sub_23FBFEFF4();
      *(_DWORD *)v18 = 136315138;
      sub_23FD74048();
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      sub_23FD75344();
      v19 = sub_23FBFEFFC(v17, *(uint64_t (**)(uint64_t, uint64_t))(v150 + 8));
      v15[5] = sub_23FBFF1F8(v19, v20, v168);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFF0CC(v152);
      sub_23FBFF114(&dword_23FBF8000, v14, v16, "Cancelling evaluation of eventId=%s, a termination signal was received", v18);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FBFF0CC(v0[54]);

    v123 = sub_23FBFF13C();
    v124(v123);
    v125 = v0;
  }
  else
  {
    v2 = v0[56];
    sub_23FD724DC();
    sub_23FBFF1B8(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    v3 = sub_23FD72BE4();
    v4 = sub_23FD74F3C();
    v5 = os_log_type_enabled(v3, v4);
    v6 = v0[56];
    v161 = v0;
    if (v5)
    {
      v154 = v4;
      v7 = v0[52];
      v145 = v0[49];
      v8 = v0[48];
      v149 = v0[53];
      v147 = v0[54];
      v9 = (uint8_t *)swift_slowAlloc();
      v168[0] = sub_23FBFEFF4();
      *(_DWORD *)v9 = 136315138;
      sub_23FD74048();
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v10 = sub_23FD75344();
      v12 = v11;
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v7, v8);
      v0[4] = sub_23FC9DC40(v10, v12, v168);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v6, v149);
      sub_23FBFF114(&dword_23FBF8000, v3, v154, "Starting evaluation of eventId=%s", v9);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FBFF0CC(v0[54]);

    v21 = sub_23FBFF1EC();
    v136 = v22;
    v22(v21);
    if (qword_256F5D2B8 != -1)
      swift_once();
    v23 = sub_23FD72B90();
    sub_23FBFED48(v23, (uint64_t)qword_256F7F430);
    sub_23FD72B84();
    sub_23FD72B48();
    v24 = sub_23FD72B84();
    v25 = sub_23FD74FE4();
    if ((sub_23FD7502C() & 1) != 0)
    {
      v26 = (uint8_t *)sub_23FBFEFF4();
      *(_WORD *)v26 = 0;
      v27 = sub_23FD72B54();
      _os_signpost_emit_with_name_impl(&dword_23FBF8000, v24, v25, v27, "FeedbackLearning", "", v26, 2u);
      sub_23FBFEFA0();
    }
    v28 = v0[46];
    v29 = v0[47];
    v31 = v0[44];
    v30 = v0[45];
    v32 = v161[43];
    v164 = v161[41];
    v33 = v161[6];
    v158 = v161[42];

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v28, v29, v31);
    sub_23FD72BCC();
    sub_23FBFF1C4();
    v135 = sub_23FD72BC0();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
    sub_23FBFDE40((_QWORD *)(v33 + 24), *(_QWORD *)(v33 + 48));
    sub_23FD73D6C();
    v34 = sub_23FC8B1F4();
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v32, v164);
    sub_23FD724DC();
    swift_bridgeObjectRetain_n();
    v35 = sub_23FD72BE4();
    v36 = sub_23FD74F3C();
    if (os_log_type_enabled(v35, v36))
    {
      v132 = v36;
      v134 = v35;
      v37 = (uint8_t *)sub_23FBFEFF4();
      v166 = sub_23FBFEFF4();
      v133 = v37;
      *(_DWORD *)v37 = 136315138;
      v38 = *(_QWORD *)(v34 + 16);
      v39 = MEMORY[0x24BEE4AF8];
      if (!v38)
      {
LABEL_43:
        v161[2] = v39;
        sub_23FBFD684(&qword_256F5D508);
        sub_23FBFED6C();
        sub_23FD74B94();
        v127 = swift_bridgeObjectRelease();
        v161[3] = sub_23FBFF1F8(v127, v128, &v166);
        sub_23FD75044();
        swift_bridgeObjectRelease();
        sub_23FBFF1A0();
        sub_23FBFF114(&dword_23FBF8000, v134, v132, "Evaluation Results: %s", v133);
        sub_23FBFF10C();
        sub_23FBFEFA0();
      }
      v40 = v34;
      v41 = v161;
      v140 = (int *)v161[38];
      v43 = (int *)v161[35];
      v42 = v161[36];
      v146 = v161[33];
      v148 = v161[49];
      v155 = (int *)v161[25];
      v151 = v161[20];
      v153 = (int *)v161[22];
      v137 = v161[15];
      v167 = MEMORY[0x24BEE4AF8];
      sub_23FC9B5CC();
      v44 = 0;
      v139 = v40 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      v138 = *(_QWORD *)(v42 + 72);
      v143 = v43;
      v141 = v38;
      while (1)
      {
        v45 = v41[37];
        v46 = v41[34];
        v144 = v44;
        v47 = v139 + v44 * v138;
        v48 = v41[32];
        sub_23FBFEF40(v47, v45, type metadata accessor for FeedbackLearning.TaskEvaluation);
        v49 = sub_23FBFF1EC();
        v142 = v50;
        ((void (*)(uint64_t))v50)(v49);
        v159 = *(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16);
        v159(v46, v45 + v43[5], v48);
        sub_23FD72D10();
        v51 = *(_QWORD *)(v45 + v43[7]);
        v52 = *(_QWORD *)(v51 + 16);
        if (v52)
        {
          v168[0] = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_23FC9B5F8();
          sub_23FBFF148();
          v54 = v51 + v53;
          v156 = *(_QWORD *)(v55 + 72);
          v56 = v168[0];
          v57 = v161;
          do
          {
            v162 = v52;
            v58 = v57[32];
            v59 = v57[27];
            v60 = v57[24];
            v61 = v57[21];
            v62 = v57[19];
            sub_23FBFEF40(v54, v60, type metadata accessor for FeedbackLearning.CandidateEvaluation);
            sub_23FD72DA0();
            sub_23FD72DAC();
            sub_23FD72D94();
            v159(v59, v60, v58);
            sub_23FBFEF40(v60 + v153[5], v59 + v155[5], type metadata accessor for FeedbackLearning.CandidateParameter);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 16))(v59 + v155[6], v61, v62);
            v63 = *(_BYTE *)(v60 + v153[9]);
            *(_BYTE *)(v59 + v155[7]) = *(_BYTE *)(v60 + v153[8]);
            *(_BYTE *)(v59 + v155[8]) = v63;
            (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v61, v62);
            sub_23FBFEF18(v60, type metadata accessor for FeedbackLearning.CandidateEvaluation);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23FC9B5F8();
              v56 = v168[0];
            }
            v64 = *(_QWORD *)(v56 + 16);
            v57 = v161;
            if (v64 >= *(_QWORD *)(v56 + 24) >> 1)
            {
              sub_23FC9B5F8();
              v56 = v168[0];
            }
            *(_QWORD *)(v56 + 16) = v64 + 1;
            sub_23FBFF148();
            sub_23FBFEEB0(v67, v56 + v65 + *(_QWORD *)(v66 + 72) * v64, _s18TaskDefinitionThinO23CandidateEvaluationThinVMa);
            v54 += v156;
            --v52;
          }
          while (v162 != 1);
          v165 = v56;
          swift_bridgeObjectRelease();
          v43 = v143;
        }
        else
        {
          v165 = MEMORY[0x24BEE4AF8];
          v57 = v161;
        }
        v68 = v57[28];
        sub_23FBFEF40(v57[37] + v43[8], v68, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
        v69 = sub_23FBFD684(&qword_256F5D4E8);
        v70 = 1;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v68, 1, v69) != 1)
        {
          v71 = v57[17];
          v72 = v57[15];
          sub_23FBFEEEC(v57[28], v57[18], &qword_256F5D4E0);
          v73 = sub_23FBFF13C();
          sub_23FBFEE68(v73, v74);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v71, 1, v72) == 1)
          {
            v75 = v57[29];
            v76 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
            sub_23FBFF0F8(v75, v77, v78, v76);
          }
          else
          {
            v79 = v57[48];
            v80 = v57[29];
            v81 = v57[16];
            sub_23FBFEEB0(v57[17], v81, type metadata accessor for FeedbackLearning.TaskAction);
            v142(v80, v81, v79);
            LOBYTE(v79) = *(_BYTE *)(v81 + *(int *)(v137 + 24));
            v82 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
            *(_BYTE *)(v80 + *(int *)(v82 + 20)) = v79;
            sub_23FBFF0D8(v80, v83, v84, v82);
            v85 = sub_23FBFF1AC();
            sub_23FBFEF18(v85, v86);
          }
          sub_23FBFEF74(v57[18], &qword_256F5D4E0);
          v70 = 0;
        }
        v87 = v57[37];
        v88 = v57[29];
        v89 = v57[30];
        v90 = v57[13];
        v91 = sub_23FBFD684(&qword_256F5D4F0);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v88, v70, 1, v91);
        sub_23FBFEEB0(v88, v89, _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
        v92 = v87 + v43[9];
        sub_23FBFEF40(v92, v90, type metadata accessor for FeedbackLearning.TaskStatus);
        v93 = sub_23FBFD684(&qword_256F5D4F8);
        v94 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v90, 4, v93);
        if ((_DWORD)v94)
          goto LABEL_35;
        v95 = v92;
        v96 = v57[12];
        v97 = v57[11];
        sub_23FBFEEB0(v57[13], v96, type metadata accessor for FeedbackLearning.TaskFailureReason);
        sub_23FBFEF40(v96, v97, type metadata accessor for FeedbackLearning.TaskFailureReason);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (!EnumCaseMultiPayload)
          break;
        if (EnumCaseMultiPayload != 1)
        {
          v104 = v57[9];
          v103 = sub_23FD71648();
          v101 = v104;
          v102 = 1;
          goto LABEL_33;
        }
        v99 = sub_23FBFF190();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v97, 2, 2, v99);
        sub_23FBFEF18(v96, type metadata accessor for FeedbackLearning.TaskFailureReason);
LABEL_34:
        v92 = v95;
        v105 = v57[12];
        sub_23FBFEEB0(v57[9], v57[14], _s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
        sub_23FBFEF18(v105, type metadata accessor for FeedbackLearning.TaskFailureReason);
LABEL_35:
        v106 = v57[50];
        v107 = v57[48];
        v108 = v57[40];
        v109 = v57[37];
        v157 = v57[34];
        v160 = v57[31];
        v163 = v57[30];
        v110 = v57[14];
        v111 = sub_23FBFD684(&qword_256F5D500);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v110, v94, 4, v111);
        v112 = v108 + v140[9];
        sub_23FBFEEB0(v110, v112, _s18TaskDefinitionThinO14TaskStatusThinOMa);
        LOBYTE(v110) = *(_BYTE *)(v92 + *(int *)(type metadata accessor for FeedbackLearning.TaskOutcome(0) + 20));
        *(_BYTE *)(v112 + *(int *)(_s18TaskDefinitionThinO15TaskOutcomeThinVMa(0) + 20)) = v110;
        v113 = v109 + v43[10];
        v114 = *(_BYTE *)v113;
        v115 = *(_BYTE *)(v113 + 8);
        v117 = *(_QWORD *)(v113 + 16);
        v116 = *(_QWORD *)(v113 + 24);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v108, v106, v107);
        sub_23FBFF1E4(v108 + v140[5], v157, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 32));
        sub_23FBFEEB0(v160, v108 + v140[6], _s18TaskDefinitionThinO15TaskContextThinVMa);
        *(_QWORD *)(v108 + v140[7]) = v165;
        sub_23FBFEEB0(v163, v108 + v140[8], _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
        v118 = v108 + v140[10];
        *(_BYTE *)v118 = v114;
        *(_BYTE *)(v118 + 8) = v115;
        *(_QWORD *)(v118 + 16) = v117;
        *(_QWORD *)(v118 + 24) = v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23FBFEF18(v109, type metadata accessor for FeedbackLearning.TaskEvaluation);
        v39 = v167;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC9B5CC();
          v39 = v167;
        }
        v43 = v143;
        v119 = *(_QWORD *)(v39 + 16);
        if (v119 >= *(_QWORD *)(v39 + 24) >> 1)
        {
          sub_23FC9B5CC();
          v39 = v167;
        }
        v44 = v144 + 1;
        v41 = v161;
        *(_QWORD *)(v39 + 16) = v119 + 1;
        sub_23FBFF148();
        sub_23FBFEEB0(v122, v39 + v120 + *(_QWORD *)(v121 + 72) * v119, _s18TaskDefinitionThinO18TaskEvaluationThinVMa);
        if (v144 + 1 == v141)
          goto LABEL_43;
      }
      v100 = sub_23FBFF190();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v97, v96, v100);
      v101 = v97;
      v102 = 0;
      v103 = v100;
LABEL_33:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v101, v102, 2, v103);
      goto LABEL_34;
    }
    sub_23FBFF1A0();

    v126 = sub_23FBFF13C();
    v136(v126);
    v125 = v161;
    v129 = v161[51];
    v130 = v161[49];
    sub_23FBFCD00(v34, v125[7], v125[51]);
    swift_bridgeObjectRelease();
    sub_23FBFF204(v129, *(uint64_t (**)(uint64_t, uint64_t))(v130 + 8));
    sub_23FBFD350(v135, "FeedbackLearning");
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v125[1])();
}

uint64_t sub_23FBFCD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  os_signpost_type_t v37;
  uint8_t *v38;
  os_signpost_id_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[24];

  v82 = a3;
  v83 = a2;
  v72 = a1;
  v74 = sub_23FD72BF0();
  v3 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74, v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD71414();
  v80 = *(_QWORD *)(v7 - 8);
  v81 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v76 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FBFD684(&qword_256F5D520);
  MEMORY[0x24BDAC7A8](v10, v11);
  v75 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for FeedbackLearningInteractionRecord();
  MEMORY[0x24BDAC7A8](v79, v13);
  v68 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FD71474();
  v77 = *(_QWORD *)(v15 - 8);
  v78 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v84 = (uint64_t)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v18);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_23FD72B6C();
  v21 = *(_QWORD *)(v73 - 8);
  v23 = MEMORY[0x24BDAC7A8](v73, v22);
  v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v66 - v27;
  v29 = sub_23FD723C8();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v33, *MEMORY[0x24BE57428], v29);
  v34 = sub_23FD723BC();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
  if ((v34 & 1) != 0)
  {
    if (qword_256F5D2B8 != -1)
      swift_once();
    v35 = sub_23FD72B90();
    sub_23FBFED48(v35, (uint64_t)qword_256F7F430);
    sub_23FD72B84();
    sub_23FD72B48();
    v36 = sub_23FD72B84();
    v37 = sub_23FD74FE4();
    if ((sub_23FD7502C() & 1) != 0)
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      v39 = sub_23FD72B54();
      _os_signpost_emit_with_name_impl(&dword_23FBF8000, v36, v37, v39, "FeedbackLearning.donate", "", v38, 2u);
      MEMORY[0x2426798D8](v38, -1, -1);
    }

    v40 = v73;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v25, v28, v73);
    sub_23FD72BCC();
    swift_allocObject();
    v41 = sub_23FD72BC0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v40);
    v42 = *(_QWORD *)(v72 + 16);
    v43 = v83;
    if (v42)
    {
      v67 = v41;
      v44 = v72 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
      v73 = *(_QWORD *)(v69 + 72);
      v74 = v70 + 64;
      swift_bridgeObjectRetain();
      v45 = v82;
      v46 = (uint64_t)v68;
      v47 = v84;
      v48 = v71;
      do
      {
        sub_23FBFEF40(v44, (uint64_t)v20, type metadata accessor for FeedbackLearning.TaskEvaluation);
        _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
        sub_23FBFDE64(v43, v47, v45);
        v49 = (uint64_t)v75;
        v50 = sub_23FC957D0();
        v51 = *(_QWORD *)&v20[*(int *)(v48 + 28)];
        MEMORY[0x24BDAC7A8](v50, v52);
        *(&v66 - 2) = (uint64_t)v20;
        swift_bridgeObjectRetain();
        sub_23FC9526C((uint64_t)sub_23FBFEED0, (uint64_t)(&v66 - 4), v51, (uint64_t)v85);
        v54 = v53;
        swift_bridgeObjectRelease();
        v55 = &v20[*(int *)(v48 + 24)];
        v56 = sub_23FD72D28();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v46, v55, v56);
        v57 = v79;
        v58 = v46 + *(int *)(v79 + 20);
        sub_23FBFEEEC(v49, v58, &qword_256F5D520);
        *(_QWORD *)(v46 + *(int *)(v57 + 24)) = v54;
        v59 = (uint64_t)v76;
        sub_23FD72D10();
        swift_bridgeObjectRetain();
        v60 = v58;
        v43 = v83;
        v61 = FeedbackLearningBiomeDonator.donateInteractionTuples(tuple:candidates:sessionId:absoluteTimestamp:statementId:)(v60, v54, (uint64_t)v20, v59);
        v45 = v82;
        swift_bridgeObjectRelease();
        sub_23FBFDF90(v43, v84, (uint64_t)v61, v45);

        v47 = v84;
        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v59, v81);
        sub_23FBFEF18(v46, (uint64_t (*)(_QWORD))type metadata accessor for FeedbackLearningInteractionRecord);
        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v47, v78);
        sub_23FBFEF18((uint64_t)v20, type metadata accessor for FeedbackLearning.TaskEvaluation);
        v44 += v73;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease();
      v41 = v67;
    }
    sub_23FBFD350(v41, "FeedbackLearning.donate");
    return swift_release();
  }
  else
  {
    sub_23FD724DC();
    v63 = sub_23FD72BE4();
    v64 = sub_23FD74F3C();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_23FBF8000, v63, v64, "Feedback Learning is not enabled, skipping evaluation donation.", v65, 2u);
      MEMORY[0x2426798D8](v65, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v74);
  }
}

uint64_t sub_23FBFD334()
{
  return swift_task_switch();
}

uint64_t sub_23FBFD348()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FBFD350(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  NSObject *v18;
  char v19;
  char v20;
  const char *v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_signpost_id_t v26;
  _BYTE v27[4];
  int v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a2;
  v2 = sub_23FD72B9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  sub_23FBFF180();
  v7 = v6 - v5;
  v8 = sub_23FD72B6C();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = &v27[-v15];
  if (qword_256F5D2B8 != -1)
    swift_once();
  v17 = sub_23FD72B90();
  sub_23FBFED48(v17, (uint64_t)qword_256F7F430);
  v18 = sub_23FD72B84();
  sub_23FD72BA8();
  v28 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    swift_retain();
    sub_23FD72BD8();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v7, v2) == *MEMORY[0x24BEE7810])
    {
      v19 = 0;
      v20 = 0;
      v21 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
      v21 = "%s";
      v20 = 2;
      v19 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v13, v16, v8);
    v23 = sub_23FBFEFF4();
    v31 = sub_23FBFEFF4();
    *(_BYTE *)v23 = v20;
    *(_BYTE *)(v23 + 1) = v19;
    *(_WORD *)(v23 + 2) = 2080;
    sub_23FD723D4();
    v24 = sub_23FD750F8();
    v30 = sub_23FC9DC40(v24, v25, &v31);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v26 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v18, (os_signpost_type_t)v28, v26, v29, v21, (uint8_t *)v23, 0xCu);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }

  return sub_23FBFF204((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
}

uint64_t sub_23FBFD5F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23FBFD684(&qword_256F5D398);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + 16, v1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActionEvaluationParticipant.ActionEvaluationCancellationStatus()
{
  return objc_opt_self();
}

uint64_t sub_23FBFD65C()
{
  if (MEMORY[0x24BEE4F18])
    return sub_23FBFD684(&qword_256F5D398);
  else
    return MEMORY[0x24BEE4AE0] + 8;
}

uint64_t sub_23FBFD684(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426797D0]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23FBFD6C4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23FBFD6F4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *sub_23FBFDE40(a4, a4[3]);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256F5D4B0 + dword_256F5D4B0);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23FBFEF9C;
  return v12(a1, a2, a3, v9, v4);
}

uint64_t sub_23FBFD78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  sub_23FD74120();
  v6[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FBFD7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(uint64_t **)(v0 + 16);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 40) + 64))(*(_QWORD *)(v0 + 32));
  sub_23FBFABE4(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FBFD848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_23FBFD8B8;
  return sub_23FBFD78C(a1, v12, v13, a4, a5, a6);
}

uint64_t sub_23FBFD8B8()
{
  uint64_t v0;

  sub_23FBFF004();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for ActionEvaluationParticipantConfiguration()
{
  return &type metadata for ActionEvaluationParticipantConfiguration;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23FBFD91C(a1, &qword_256F5D460);
}

void type metadata accessor for BMSiriExecutionTaskStep(uint64_t a1)
{
  sub_23FBFD91C(a1, &qword_256F5D468);
}

void sub_23FBFD91C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for FeedbackLearningBiomeDonator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ActionEvaluationParticipant(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 24);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 64);
  return swift_release();
}

uint64_t _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t initializeWithCopy for ActionEvaluationParticipant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v8(a1 + 24, v5, v7);
  v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ActionEvaluationParticipant(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  sub_23FBFDB34(a1 + 3, a2 + 3);
  sub_23FBFDB34(a1 + 8, a2 + 8);
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *sub_23FBFDB34(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for ActionEvaluationParticipant(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t assignWithTake for ActionEvaluationParticipant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 64);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionEvaluationParticipant(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionEvaluationParticipant(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionEvaluationParticipant()
{
  return &type metadata for ActionEvaluationParticipant;
}

_UNKNOWN **sub_23FBFDDD4()
{
  return &off_25100A0C0;
}

uint64_t _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t *sub_23FBFDDEC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23FBFDE28(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *sub_23FBFDE40(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_23FBFDE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v6 = sub_23FD72A64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD72A58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD728C0();
  sub_23FD728B4();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v15, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BE58C90], v6);
  sub_23FBFE120((uint64_t)v10, a1, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_23FBFDF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a2;
  v24 = a4;
  v21 = a3;
  v22 = sub_23FD72A64();
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FD71DF8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD72A34();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD73F94();
  sub_23FD71DEC();
  swift_bridgeObjectRelease();
  sub_23FC90820();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v8, v18, v14);
  v19 = v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BE58C88], v22);
  sub_23FBFE120((uint64_t)v8, a1, v23, v24);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_23FBFE120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v45 = a3;
  v46 = a4;
  v52 = a2;
  v43 = a1;
  v50 = sub_23FD72644();
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v4);
  v47 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FBFD684(&qword_256F5D528);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23FD726C8();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v10);
  v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FD728F0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23FD72B00();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FBFD684(&qword_256F5D530);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23FD72A88();
  v25 = *(_QWORD *)(v24 - 8);
  v41 = v24;
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD72A7C();
  v29 = sub_23FD72A64();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v23, v43, v29);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v23, 0, 1, v29);
  sub_23FD72A70();
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v16, v28, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BE58B58], v12);
  sub_23FC90568();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v30 = v40;
  v31 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v9, v19, v42);
  v32 = *MEMORY[0x24BE58758];
  v33 = sub_23FD726A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v9, v32, v33);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v33);
  v35 = v47;
  v34 = v48;
  v36 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x24BE58630], v50);
  v37 = v44;
  sub_23FC906E0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  sub_23FBFEF74((uint64_t)v9, &qword_256F5D528);
  sub_23FD7352C();
  sub_23FD73520();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v51);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v41);
}

uint64_t sub_23FBFE4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[37] = a3;
  v5[38] = a5;
  v5[35] = a1;
  v5[36] = a2;
  v7 = sub_23FD73D9C();
  v5[39] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[40] = v8;
  v5[41] = *(_QWORD *)(v8 + 64);
  v5[42] = swift_task_alloc();
  v9 = sub_23FD71474();
  v5[43] = v9;
  v5[44] = *(_QWORD *)(v9 - 8);
  v5[45] = swift_task_alloc();
  v10 = sub_23FD72BF0();
  v5[46] = v10;
  v5[47] = *(_QWORD *)(v10 - 8);
  v5[48] = swift_task_alloc();
  v11 = sub_23FD740CC();
  v5[49] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[50] = v12;
  v5[51] = *(_QWORD *)(v12 + 64);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  v13 = sub_23FD73E08();
  v5[55] = v13;
  v5[56] = *(_QWORD *)(v13 - 8);
  v5[57] = swift_task_alloc();
  v5[33] = type metadata accessor for SessionCoordinatorResponseCallback(0);
  v5[34] = &off_2510101F0;
  v5[30] = a4;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23FBFE5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 288);
  sub_23FBFEB3C(*(_QWORD *)(v0 + 304), v0 + 16);
  v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), (const void *)(v0 + 16), 0x70uLL);
  sub_23FD72560();
  sub_23FBFF1C4();
  sub_23FD7256C();
  sub_23FD73D6C();
  v3 = sub_23FD73DE4();
  v4 = sub_23FBFF1AC();
  result = v5(v4);
  if (v1 < 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 296);
  v9 = *(_QWORD *)(v3 + 16);
  if (v9 < v8 || (uint64_t)v9 < (uint64_t)v7)
    goto LABEL_15;
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v8 == v7)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_retain();
    sub_23FD72308();
    swift_release();
    sub_23FBFDE40((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
    sub_23FCB7480(MEMORY[0x24BEE4AF8], (uint64_t)sub_23FBFF828, 0, 0);
    swift_release();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 240);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v8 < v7)
  {
    v46 = (const void *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 400);
    v44 = *(_QWORD *)(v0 + 320);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v45 = *(unsigned __int8 *)(v11 + 80);
    v42 = (v45 + 128) & ~v45;
    v43 = *(_QWORD *)(v11 + 72);
    v40 = *(_QWORD *)(v0 + 352);
    v41 = *(_QWORD *)(v0 + 408) + v42;
    v13 = v3 + ((v45 + 32) & ~v45) + v43 * *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 288);
    v53 = v12;
    v47 = v11;
    do
    {
      v15 = *(_QWORD *)(v0 + 424);
      v16 = *(_QWORD *)(v0 + 432);
      v17 = *(_QWORD *)(v0 + 392);
      v52 = v13;
      ((void (*)(uint64_t))v12)(v16);
      sub_23FD724DC();
      v12(v15, v16, v17);
      v18 = sub_23FD72BE4();
      v19 = sub_23FD74F48();
      v20 = os_log_type_enabled(v18, v19);
      v21 = *(_QWORD *)(v0 + 424);
      if (v20)
      {
        v22 = *(_QWORD *)(v0 + 360);
        v23 = *(_QWORD *)(v0 + 344);
        v50 = *(_QWORD *)(v0 + 392);
        v24 = sub_23FBFEFF4();
        sub_23FBFEFF4();
        *(_DWORD *)v24 = 136315138;
        sub_23FD74048();
        sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        sub_23FD75344();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v22, v23);
        v25 = sub_23FBFF1EC();
        *(_QWORD *)(v24 + 4) = sub_23FC9DC40(v25, v26, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v21, v50);
        sub_23FBFF114(&dword_23FBF8000, v18, v19, "Received event %s for evaluation. Queuing for processing.", (uint8_t *)v24);
        swift_arrayDestroy();
        sub_23FBFEFA0();
      }
      v51 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v51(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 392));

      v28 = sub_23FBFF1EC();
      v29(v28);
      v30 = *(_QWORD *)(v0 + 432);
      v31 = *(_QWORD *)(v0 + 416);
      v32 = *(_QWORD *)(v0 + 392);
      v33 = *(_QWORD *)(v0 + 336);
      v48 = v33;
      v49 = *(_QWORD *)(v0 + 296);
      v34 = *(_QWORD *)(v0 + 280);
      sub_23FBFEB3C(*(_QWORD *)(v0 + 304), (uint64_t)v46);
      v53(v31, v30, v32);
      sub_23FBFF1E4(v33, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 16));
      v35 = v14 + 1;
      v36 = (v41 + *(unsigned __int8 *)(v44 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      v37 = swift_allocObject();
      memcpy((void *)(v37 + 16), v46, 0x70uLL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v37 + v42, v31, v32);
      v38 = v37 + v36;
      v14 = v35;
      sub_23FBFF1E4(v38, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32));
      sub_23FD72308();
      swift_release();
      v39 = v32;
      v12 = v53;
      v51(v30, v39);
      v13 = v52 + v43;
      v11 = v47;
    }
    while (v35 != v49);
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_23FBFEB3C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ActionEvaluationParticipant(a2, a1);
  return a2;
}

uint64_t sub_23FBFEB70()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_23FBFF11C();
  return swift_deallocObject();
}

uint64_t sub_23FBFEBA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23FBFB808(v1 + 16, a1);
}

uint64_t sub_23FBFEBA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(sub_23FD740CC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_23FD73D9C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  sub_23FBFF11C();
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  sub_23FBFF13C();
  return swift_deallocObject();
}

uint64_t sub_23FBFEC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(sub_23FD740CC() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FD73D9C() - 8) + 80);
  v6 = v0 + ((v3 + v4 + v5) & ~v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23FBFD8B8;
  v8 = sub_23FBFF1AC();
  return sub_23FBFB938(v8, v9, v6);
}

uint64_t sub_23FBFED00()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FBFEF9C;
  return sub_23FBFD334();
}

uint64_t sub_23FBFED48(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

unint64_t sub_23FBFED6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256F5D510;
  if (!qword_256F5D510)
  {
    v1 = sub_23FBFEDE8(&qword_256F5D508);
    sub_23FBFEE2C(&qword_256F5D518, _s18TaskDefinitionThinO18TaskEvaluationThinVMa, (uint64_t)&unk_23FD7EFA0);
    v3 = v2;
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256F5D510);
  }
  return result;
}

uint64_t sub_23FBFEDE8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426797DC](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_23FBFEE2C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2426797E8](a3, v5), a1);
  }
  sub_23FBFF0A0();
}

uint64_t sub_23FBFEE68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5D4E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23FBFEEB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23FBFF158(a1, a2, a3);
  sub_23FBFF088(v3);
  sub_23FBFF0A0();
}

uint64_t sub_23FBFEED0(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC96644(a1, *(_QWORD *)(v1 + 16));
}

void sub_23FBFEEEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23FBFD684(a3);
  sub_23FBFF088(v3);
  sub_23FBFF0A0();
}

void sub_23FBFEF18(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_23FBFF0E4(v2);
  sub_23FBFF0A0();
}

void sub_23FBFEF40(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23FBFF158(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_23FBFF0A0();
}

void sub_23FBFEF74(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23FBFD684(a2);
  sub_23FBFF0E4(v2);
  sub_23FBFF0A0();
}

void sub_23FBFEFA0()
{
  JUMPOUT(0x2426798D8);
}

uint64_t sub_23FBFEFAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

void sub_23FBFEFBC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_23FBFEFF4()
{
  return swift_slowAlloc();
}

uint64_t sub_23FBFEFFC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FBFF004()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23FBFF030()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 272) + 8))(v0, *(_QWORD *)(v1 - 320));
}

uint64_t sub_23FBFF04C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 320));
}

uint64_t sub_23FBFF058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23FBFF070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 296))(v0, v2, v1);
}

uint64_t sub_23FBFF088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_23FBFF0A8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FBFF0B8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_23FBFF0C4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FBFF0CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FBFF0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, a4);
}

uint64_t sub_23FBFF0E4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23FBFF0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, a4);
}

uint64_t sub_23FBFF104()
{
  return sub_23FD71474();
}

uint64_t sub_23FBFF10C()
{
  return swift_arrayDestroy();
}

void sub_23FBFF114(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_23FBFF11C()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 40);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 80);
  return swift_release();
}

uint64_t sub_23FBFF13C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FBFF158(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_23FBFF178(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FBFF190()
{
  return sub_23FD71648();
}

uint64_t sub_23FBFF1A0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FBFF1AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FBFF1B8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_23FBFF1C4()
{
  return swift_allocObject();
}

uint64_t sub_23FBFF1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FBFF1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 320));
}

uint64_t sub_23FBFF1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FBFF1EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FBFF1F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_23FC9DC40(v3, v4, a3);
}

uint64_t sub_23FBFF204@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FBFF20C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 232))(a1, v1);
}

_BYTE *_s17ActionPromptVoterVwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s17ActionPromptVoterVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s17ActionPromptVoterVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23FBFF308 + 4 * byte_23FD75F85[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23FBFF33C + 4 * byte_23FD75F80[v4]))();
}

uint64_t sub_23FBFF33C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FBFF344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FBFF34CLL);
  return result;
}

uint64_t sub_23FBFF358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FBFF360);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23FBFF364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FBFF36C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17ActionPromptVoterVMa()
{
  return &_s17ActionPromptVoterVN;
}

void sub_23FBFF388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(_QWORD);

  sub_23FC061F0();
  a19 = v22;
  a20 = v23;
  v24 = sub_23FC06258();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v25, v26);
  v27 = sub_23FC06060();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFEF40(v20, (uint64_t)v35, v36);
  if (sub_23FC06170() == 1)
  {
    sub_23FC06160(v20, (uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
    sub_23FD73088();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v35, v27);
    sub_23FD73BEC();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
  }
  sub_23FC060D4();
}

uint64_t sub_23FBFF4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;

  sub_23FC061F0();
  v4 = sub_23FC06258();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v7 = sub_23FC06060();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_23FC06128();
  type metadata accessor for FeedbackLearning.ActionValue(v10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC0603C();
  sub_23FBFEF40(v0, v2, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v0, v2, v4);
    v14 = sub_23FD730E8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v4);
  }
  else
  {
    sub_23FC06160(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v14 = sub_23FD73C58();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v7);
  }
  return v14;
}

uint64_t static FeedbackLearning.ActionValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23FC061F0();
  v35 = v1;
  v36 = v2;
  v34 = v3;
  v5 = v4;
  v6 = sub_23FC06258();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC060A4(v9, v31);
  v10 = sub_23FD73C7C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  sub_23FC05FF4();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v31 - v21;
  sub_23FBFD684(&qword_256F5D660);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FC061D8();
  v26 = v0 + *(int *)(v25 + 48);
  sub_23FBFEF40(v5, v0, type metadata accessor for FeedbackLearning.ActionValue);
  sub_23FBFEF40(v34, v26, type metadata accessor for FeedbackLearning.ActionValue);
  if (sub_23FC06170() == 1)
  {
    sub_23FBFEF40(v0, (uint64_t)v19, type metadata accessor for FeedbackLearning.ActionValue);
    if (sub_23FC06170() == 1)
    {
      v27 = v31;
      sub_23FC06160(v31, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
      v28 = sub_23FD730DC();
      sub_23FC06268(v27);
      v29 = (uint64_t)v19;
LABEL_9:
      sub_23FC06268(v29);
      sub_23FBFEF18(v0, type metadata accessor for FeedbackLearning.ActionValue);
      return v28 & 1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
  }
  else
  {
    sub_23FBFEF40(v0, (uint64_t)v22, type metadata accessor for FeedbackLearning.ActionValue);
    if (sub_23FC06170() != 1)
    {
      sub_23FC06160((uint64_t)v14, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
      v28 = sub_23FD73C4C();
      sub_23FC06268((uint64_t)v14);
      v29 = (uint64_t)v22;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v10);
  }
  sub_23FBFEF74(v0, &qword_256F5D660);
  v28 = 0;
  return v28 & 1;
}

uint64_t type metadata accessor for FeedbackLearning.ActionValue(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5D780);
}

void sub_23FBFF82C()
{
  sub_23FBFF934();
}

uint64_t sub_23FBFF84C()
{
  sub_23FBFFF68();
  return sub_23FD754DC();
}

uint64_t sub_23FBFF874()
{
  sub_23FBFFF68();
  return sub_23FD754E8();
}

uint64_t sub_23FBFF89C()
{
  return 1;
}

uint64_t sub_23FBFF8A4()
{
  return sub_23FD75458();
}

uint64_t sub_23FBFF8C8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_23FBFF934()
{
  sub_23FC06220();
  sub_23FC06214();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FBFF958()
{
  return 0;
}

uint64_t sub_23FBFF964()
{
  return 12383;
}

uint64_t sub_23FBFF970(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6341746E65696C63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FBFFA6C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6341746E65696C63;
  else
    return 0x6E6F69746361;
}

void sub_23FBFFAA8()
{
  sub_23FD7544C();
  sub_23FC06214();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FBFFAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FBFF8C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FBFFAF8()
{
  return sub_23FBFF958();
}

uint64_t sub_23FBFFB10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FBFF89C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23FBFFB38()
{
  sub_23FBFFF2C();
  return sub_23FD754DC();
}

uint64_t sub_23FBFFB60()
{
  sub_23FBFFF2C();
  return sub_23FD754E8();
}

uint64_t sub_23FBFFB8C()
{
  char *v0;

  return sub_23FBFFA6C(*v0);
}

uint64_t sub_23FBFFB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FBFF970(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FBFFBB8()
{
  sub_23FBFFEF0();
  return sub_23FD754DC();
}

uint64_t sub_23FBFFBE0()
{
  sub_23FBFFEF0();
  return sub_23FD754E8();
}

void FeedbackLearning.ActionValue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = sub_23FBFD684(&qword_256F5D668);
  v28 = *(_QWORD *)(v30 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v27 = v8;
  v29 = sub_23FD730F4();
  v26 = *(_QWORD *)(v29 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFE0();
  v25 = v11;
  v24 = sub_23FBFD684(&qword_256F5D670);
  v22 = *(_QWORD *)(v24 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC0610C();
  v23 = sub_23FD73C7C();
  v21 = *(_QWORD *)(v23 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_23FC06128();
  type metadata accessor for FeedbackLearning.ActionValue(v16);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC061C0();
  v31 = *(_QWORD *)(sub_23FBFD684(&qword_256F5D678) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC0603C();
  sub_23FBFDE40(a1, a1[3]);
  sub_23FBFFEF0();
  sub_23FD754C4();
  sub_23FBFEF40(v32, v4, type metadata accessor for FeedbackLearning.ActionValue);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v4, v29);
    sub_23FC06238();
    sub_23FC061B0();
    sub_23FBFEE2C(&qword_256F5D690, (uint64_t (*)(uint64_t))MEMORY[0x24BE54E90], MEMORY[0x24BE54EA0]);
    sub_23FD7532C();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v30);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v29);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v1, v4, v23);
    sub_23FBFFF68();
    sub_23FC061B0();
    sub_23FBFEE2C(&qword_256F5D6A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE56700], MEMORY[0x24BE56710]);
    sub_23FD7532C();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v24);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v23);
  }
  sub_23FBFF204(v2, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  sub_23FC06000();
}

unint64_t sub_23FBFFEF0()
{
  unint64_t result;

  result = qword_256F5D680;
  if (!qword_256F5D680)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76568, &type metadata for FeedbackLearning.ActionValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D680);
  }
  return result;
}

unint64_t sub_23FBFFF2C()
{
  unint64_t result;

  result = qword_256F5D688;
  if (!qword_256F5D688)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76518, &type metadata for FeedbackLearning.ActionValue.ClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D688);
  }
  return result;
}

unint64_t sub_23FBFFF68()
{
  unint64_t result;

  result = qword_256F5D698;
  if (!qword_256F5D698)
  {
    result = MEMORY[0x2426797E8](&unk_23FD764C8, &type metadata for FeedbackLearning.ActionValue.ActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D698);
  }
  return result;
}

void FeedbackLearning.ActionValue.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char v61;

  v51 = a2;
  v4 = sub_23FBFD684(&qword_256F5D6A8);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  v57 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FBFD684(&qword_256F5D6B0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFE0();
  v56 = v11;
  v12 = sub_23FBFD684(&qword_256F5D6B8);
  v58 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  v15 = sub_23FC0610C();
  v16 = type metadata accessor for FeedbackLearning.ActionValue(v15);
  sub_23FC05FF4();
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v47 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v47 - v27;
  sub_23FBFDE40(a1, a1[3]);
  sub_23FBFFEF0();
  v29 = v60;
  sub_23FD754B8();
  if (v29)
    goto LABEL_8;
  v48 = v21;
  v49 = v25;
  v47 = v28;
  v50 = v16;
  v60 = a1;
  v30 = sub_23FD752E4();
  v31 = *(_QWORD *)(v30 + 16);
  v32 = v2;
  if (!v31
    || (v33 = *(_BYTE *)(v30 + 32),
        sub_23FC05F38(1, v31, v30, v30 + 32, 0, (2 * v31) | 1),
        v35 = v34,
        v37 = v36,
        swift_bridgeObjectRelease(),
        v35 != v37 >> 1))
  {
    v40 = v58;
    v41 = v50;
    v42 = sub_23FD75134();
    swift_allocError();
    v44 = v43;
    sub_23FBFD684(&qword_256F5D6C0);
    *v44 = v41;
    sub_23FD7529C();
    sub_23FD75128();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v44, *MEMORY[0x24BEE26D0], v42);
    swift_willThrow();
    sub_23FC06158();
    sub_23FBFF204(v32, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    a1 = v60;
LABEL_8:
    v45 = (uint64_t)a1;
    goto LABEL_9;
  }
  if ((v33 & 1) != 0)
  {
    sub_23FC06238();
    sub_23FC060EC();
    sub_23FD730F4();
    sub_23FBFEE2C(&qword_256F5D6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE54E90], MEMORY[0x24BE54EA8]);
    v38 = (uint64_t)v48;
    sub_23FC06144();
    v39 = v58;
    sub_23FC0607C(v54);
  }
  else
  {
    v61 = 0;
    sub_23FBFFF68();
    sub_23FC060EC();
    sub_23FD73C7C();
    sub_23FBFEE2C(&qword_256F5D6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE56700], MEMORY[0x24BE56718]);
    v38 = (uint64_t)v49;
    sub_23FC06144();
    v39 = v58;
    sub_23FC0607C(v52);
  }
  sub_23FC06158();
  sub_23FBFF204(v32, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
  swift_storeEnumTagMultiPayload();
  v46 = (uint64_t)v47;
  sub_23FBFEEB0(v38, (uint64_t)v47, type metadata accessor for FeedbackLearning.ActionValue);
  sub_23FBFEEB0(v46, v51, type metadata accessor for FeedbackLearning.ActionValue);
  v45 = (uint64_t)v60;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v45);
  sub_23FC06000();
}

void sub_23FC003EC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  FeedbackLearning.ActionValue.init(from:)(a1, a2);
}

void sub_23FC00400(_QWORD *a1)
{
  FeedbackLearning.ActionValue.encode(to:)(a1);
}

void FeedbackLearning.FlowActionEvent.action.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  sub_23FBFEF40(v1 + *(int *)(v3 + 20), a1, type metadata accessor for FeedbackLearning.ActionValue);
}

uint64_t static FeedbackLearning.FlowActionEvent.== infix(_:_:)()
{
  if ((sub_23FD71450() & 1) == 0)
    return 0;
  type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  return static FeedbackLearning.ActionValue.== infix(_:_:)();
}

BOOL sub_23FC004A4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23FC004B4()
{
  return sub_23FD75458();
}

uint64_t sub_23FC004D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FC005BC()
{
  return 2;
}

void sub_23FC005C4()
{
  sub_23FC06220();
  sub_23FD75458();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FC005F4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F69746361;
  else
    return 0x6449746E657665;
}

BOOL sub_23FC00628(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23FC004A4(*a1, *a2);
}

void sub_23FC00634()
{
  sub_23FC005C4();
}

uint64_t sub_23FC0064C()
{
  return sub_23FC004B4();
}

void sub_23FC00654()
{
  sub_23FD7544C();
  sub_23FD75458();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FC00688()
{
  char *v0;

  return sub_23FC005F4(*v0);
}

uint64_t sub_23FC00690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FC004D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FC006B4()
{
  return sub_23FBFF958();
}

uint64_t sub_23FC006D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FC005BC();
  *a1 = result;
  return result;
}

uint64_t sub_23FC006F4()
{
  sub_23FC048F4();
  return sub_23FD754DC();
}

uint64_t sub_23FC0071C()
{
  sub_23FC048F4();
  return sub_23FD754E8();
}

uint64_t FeedbackLearning.FlowActionEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_23FBFD684(&qword_256F5D6D8);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FBFDE40(a1, a1[3]);
  sub_23FC048F4();
  sub_23FD754C4();
  v9[15] = 0;
  sub_23FD71474();
  sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23FC06244();
  if (!v1)
  {
    type metadata accessor for FeedbackLearning.FlowActionEvent(0);
    v9[14] = 1;
    type metadata accessor for FeedbackLearning.ActionValue(0);
    sub_23FBFEE2C(&qword_256F5D6F0, type metadata accessor for FeedbackLearning.ActionValue, (uint64_t)&protocol conformance descriptor for FeedbackLearning.ActionValue);
    sub_23FC06244();
  }
  return sub_23FBFF204((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void FeedbackLearning.FlowActionEvent.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  type metadata accessor for FeedbackLearning.ActionValue(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC060A4(v7, v15);
  v20 = sub_23FD71474();
  v17 = *(_QWORD *)(v20 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  v21 = v10;
  v19 = sub_23FBFD684(&qword_256F5D6F8);
  MEMORY[0x24BDAC7A8](v19, v11);
  sub_23FC061C0();
  v12 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC061D8();
  sub_23FBFDE40(a1, a1[3]);
  sub_23FC048F4();
  sub_23FD754B8();
  if (v3)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FC0622C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v2, v21, v20);
    sub_23FBFEE2C(&qword_256F5D708, type metadata accessor for FeedbackLearning.ActionValue, (uint64_t)&protocol conformance descriptor for FeedbackLearning.ActionValue);
    sub_23FC0622C();
    sub_23FC06028();
    sub_23FBFEEB0(v18, v2 + *(int *)(v12 + 20), type metadata accessor for FeedbackLearning.ActionValue);
    sub_23FBFEF40(v2, a2, type metadata accessor for FeedbackLearning.FlowActionEvent);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)a1);
    sub_23FBFEF18(v2, type metadata accessor for FeedbackLearning.FlowActionEvent);
  }
  sub_23FC06000();
}

void sub_23FC00AF8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  FeedbackLearning.FlowActionEvent.init(from:)(a1, a2);
}

uint64_t sub_23FC00B0C(_QWORD *a1)
{
  return FeedbackLearning.FlowActionEvent.encode(to:)(a1);
}

uint64_t _s23IntelligenceFlowRuntime16FeedbackLearningO0B11ActionEventV7eventId10Foundation4UUIDVvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23FD71474();
  v0 = sub_23FC06198();
  return sub_23FC06104(v0, v1, v2, v3);
}

uint64_t FeedbackLearning.FlowAction.statementId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23FC06260();
  sub_23FC06250();
  v0 = sub_23FC06198();
  return sub_23FC06104(v0, v1, v2, v3);
}

uint64_t FeedbackLearning.FlowAction.flowEvents.getter()
{
  sub_23FC06260();
  return swift_bridgeObjectRetain();
}

uint64_t FeedbackLearning.FlowAction.actionEvents.getter()
{
  sub_23FC06260();
  return swift_bridgeObjectRetain();
}

void sub_23FC00BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23FC061F0();
  v3 = v2;
  v5 = v4;
  v6 = sub_23FD71474();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  v9 = sub_23FC00CC8(v3);
  if (v9)
  {
    v10 = v9;
    v11 = sub_23FC00D7C(v9);
    v12 = sub_23FC01308(v10);
    swift_bridgeObjectRelease();
    sub_23FD73DFC();
    sub_23FC0636C(v11);
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = sub_23FD467B0(v12);
    swift_bridgeObjectRelease();
    sub_23FC01684(v0, v3, v14, v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v6);
    sub_23FC060D4();
  }
  else
  {
    v16 = type metadata accessor for FeedbackLearning.FlowAction(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, 1, 1, v16);
  }
}

uint64_t sub_23FC00CC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[4];

  v2 = sub_23FD73DE4();
  v16[2] = a1;
  v3 = sub_23FCAEF64(sub_23FC05FB0, (uint64_t)v16, v2);
  v5 = v4;
  swift_bridgeObjectRelease();
  result = 0;
  if ((v5 & 1) == 0)
  {
    v7 = sub_23FD73DE4();
    sub_23FC18694(v3, v7);
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    swift_bridgeObjectRelease();
    return sub_23FD2F9CC(v9, v11, v13, v15);
  }
  return result;
}

uint64_t sub_23FC00D7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  char v58;
  _QWORD *v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  _QWORD v75[2];
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(_QWORD);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;

  v81 = sub_23FBFD684(&qword_256F5D958);
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81, v2);
  v88 = (_QWORD *)((char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_23FBFD684(&qword_256F5D960);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD7157C();
  v92 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v93 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v75 - v13;
  v15 = sub_23FBFD684(&qword_256F5D948);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v80 = (_QWORD *)((char *)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v95 = (_QWORD *)((char *)v75 - v21);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)v75 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v90 = (_QWORD *)((char *)v75 - v27);
  v28 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain_n();
  v89 = v28;
  v75[1] = a1;
  if (!v28)
  {
    v91 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_21:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v91;
  }
  v87 = v7;
  v83 = v14;
  v29 = sub_23FD740CC();
  v30 = 0;
  v31 = *(_QWORD *)(v29 - 8);
  v32 = a1 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  v85 = *(_QWORD *)(v31 + 72);
  v91 = (_QWORD *)MEMORY[0x24BEE4B00];
  v86 = v31;
  v33 = *(void (**)(_QWORD))(v31 + 16);
  v76 = v29;
  v77 = v25;
  v84 = v33;
  v78 = v15;
  v82 = v8;
  while (1)
  {
    v34 = &v25[*(int *)(v15 + 48)];
    v94 = v32;
    v33(v34);
    v35 = v29;
    v36 = (uint64_t)v90;
    v37 = (char *)v90 + *(int *)(v15 + 48);
    *v90 = v30;
    v38 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
    v38(v37, v34, v35);
    v39 = v95;
    sub_23FBFEEEC(v36, (uint64_t)v95, &qword_256F5D948);
    v40 = (char *)v39 + *(int *)(v15 + 48);
    v41 = (uint64_t)v87;
    sub_23FC02C00((uint64_t)v87);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v41, 1, v8) == 1)
    {
      sub_23FBFEF74(v41, &qword_256F5D960);
      v29 = v35;
      goto LABEL_18;
    }
    v42 = v41;
    v43 = v15;
    v44 = v92;
    v45 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v83, v42, v8);
    v46 = v45;
    v47 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
    v47(v93, v46, v8);
    v48 = *(int *)(v43 + 48);
    v49 = v80;
    v50 = (char *)v80 + v48;
    v51 = *v95;
    *v80 = *v95;
    ((void (*)(char *, char *, uint64_t))v33)((char *)v49 + v48, v40, v35);
    v52 = (char *)v88 + *(int *)(v81 + 48);
    *v88 = v51;
    v38(v52, v50, v35);
    v53 = v91;
    swift_isUniquelyReferenced_nonNull_native();
    v96 = v53;
    sub_23FC84CD4();
    if (__OFADD__(v53[2], (v55 & 1) == 0))
      break;
    v56 = v54;
    v57 = v55;
    sub_23FBFD684(&qword_256F5D968);
    v58 = sub_23FD75200();
    v59 = v96;
    if ((v58 & 1) != 0)
    {
      sub_23FC84CD4();
      if ((v57 & 1) != (v61 & 1))
        goto LABEL_24;
      v56 = v60;
    }
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v59[(v56 >> 6) + 8] |= 1 << v56;
      v62 = v59[6] + *(_QWORD *)(v92 + 72) * v56;
      swift_bridgeObjectRetain();
      v47((char *)v62, v93, v82);
      *(_QWORD *)(v59[7] + 8 * v56) = MEMORY[0x24BEE4AF8];
      v63 = v59[2];
      v64 = __OFADD__(v63, 1);
      v65 = v63 + 1;
      if (v64)
        goto LABEL_23;
      v59[2] = v65;
    }
    v66 = v59[7];
    swift_bridgeObjectRelease();
    v67 = *(_QWORD *)(v66 + 8 * v56);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v66 + 8 * v56) = v67;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23FC992D4();
      v67 = v72;
      *(_QWORD *)(v66 + 8 * v56) = v72;
    }
    v70 = *(_QWORD *)(v67 + 16);
    v69 = *(_QWORD *)(v67 + 24);
    v91 = v59;
    if (v70 >= v69 >> 1)
    {
      sub_23FC992D4();
      v67 = v73;
      *(_QWORD *)(v66 + 8 * v56) = v73;
    }
    v25 = v77;
    v15 = v78;
    v29 = v76;
    *(_QWORD *)(v67 + 16) = v70 + 1;
    sub_23FBFEEEC((uint64_t)v88, v67+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(_QWORD *)(v79 + 72) * v70, &qword_256F5D958);
    v71 = *(void (**)(char *, uint64_t))(v92 + 8);
    v8 = v82;
    v71(v93, v82);
    v71(v83, v8);
LABEL_18:
    ++v30;
    sub_23FBFEF74((uint64_t)v95, &qword_256F5D948);
    v33 = v84;
    v32 = v94 + v85;
    if (v89 == v30)
      goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

uint64_t sub_23FC01308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v2 = sub_23FD7409C();
  v42 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FBFD684(&qword_256F5D948);
  v41 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v50 = (uint64_t)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v49 = (char *)v37 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (_QWORD *)((char *)v37 - v15);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v37 - v18;
  v20 = MEMORY[0x24BEE4AF8];
  v51 = MEMORY[0x24BEE4AF8];
  v21 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v48 = v21;
  if (v21)
  {
    v22 = sub_23FD740CC();
    v23 = 0;
    v24 = *(_QWORD *)(v22 - 8);
    v25 = *(unsigned __int8 *)(v24 + 80);
    v37[1] = a1;
    v26 = a1 + ((v25 + 32) & ~v25);
    v46 = *(_QWORD *)(v24 + 72);
    v47 = v24;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v44 = *MEMORY[0x24BE56AC8];
    v43 = *MEMORY[0x24BE56B00];
    v39 = *MEMORY[0x24BE56C78];
    v38 = *MEMORY[0x24BE56C80];
    v40 = v2;
    v27 = v42;
    while (1)
    {
      v28 = &v49[*(int *)(v6 + 48)];
      v45(v28, v26, v22);
      v29 = (char *)v16 + *(int *)(v6 + 48);
      *v16 = v23;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v29, v28, v22);
      sub_23FBFEEEC((uint64_t)v16, (uint64_t)v19, &qword_256F5D948);
      sub_23FD740A8();
      v30 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v5, v2);
      if (v30 == v44 || v30 == v43)
        break;
      if (v30 == v39 || v30 == v38)
        goto LABEL_14;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v2);
      sub_23FBFEF74((uint64_t)v19, &qword_256F5D948);
LABEL_19:
      ++v23;
      v26 += v46;
      if (v48 == v23)
      {
        v20 = v51;
        goto LABEL_21;
      }
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v2);
LABEL_14:
    sub_23FBFEEEC((uint64_t)v19, v50, &qword_256F5D948);
    v33 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FC9B498();
      v33 = v51;
    }
    v34 = *(_QWORD *)(v33 + 16);
    if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
    {
      sub_23FC9B498();
      v33 = v51;
    }
    *(_QWORD *)(v33 + 16) = v34 + 1;
    sub_23FBFEEEC(v50, v33+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v34, &qword_256F5D948);
    v2 = v40;
    v27 = v42;
    goto LABEL_19;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  v35 = sub_23FD46794(v20);
  swift_release();
  return v35;
}

uint64_t sub_23FC01684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  v123 = a4;
  v124 = a1;
  v127 = a5;
  v7 = sub_23FD7157C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FD72BF0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v156 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_23FD740CC();
  v16 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158, v17);
  v152 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_23FD730F4();
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130, v19);
  v128 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_23FD71474();
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141, v21);
  v139 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_23FD73C7C();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136, v23);
  v134 = (char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_23FD7409C();
  v25 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138, v26);
  v28 = (char *)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23FBFD684(&qword_256F5D940);
  MEMORY[0x24BDAC7A8](v29, v30);
  v150 = (uint64_t)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  v133 = *(_QWORD *)(v149 - 8);
  v33 = MEMORY[0x24BDAC7A8](v149, v32);
  v148 = (uint64_t)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v132 = (uint64_t)&v119 - v36;
  v157 = sub_23FBFD684(&qword_256F5D948);
  v126 = *(_QWORD *)(v157 - 8);
  v38 = MEMORY[0x24BDAC7A8](v157, v37);
  v151 = (char *)&v119 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v154 = (uint64_t *)((char *)&v119 - v42);
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v147 = (uint64_t *)((char *)&v119 - v45);
  MEMORY[0x24BDAC7A8](v44, v46);
  v137 = (char *)&v119 - v47;
  v48 = sub_23FCC3A90(a2, a3);
  if (v48)
  {
    v125 = a2;
    v121 = v8;
    v122 = v7;
    v49 = *(char **)(v48 + 16);
    v50 = MEMORY[0x24BEE4AF8];
    if (v49)
    {
      v146 = v16;
      v51 = v48 + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
      v143 = *(_QWORD *)(v126 + 72);
      v142 = *MEMORY[0x24BE56AF8];
      v131 = *MEMORY[0x24BE56BA0];
      v120 = v48;
      swift_bridgeObjectRetain();
      v153 = MEMORY[0x24BEE4AF8];
      v52 = v157;
      v53 = v138;
      v144 = v28;
      v145 = v25;
      v54 = v137;
      while (1)
      {
        v155 = v51;
        v156 = v49;
        sub_23FC05EF0(v51, (uint64_t)v54);
        v55 = *(int *)(v52 + 48);
        v56 = v146;
        v57 = (char *)v147 + v55;
        v58 = v52;
        v59 = &v54[v55];
        *v147 = *(_QWORD *)v54;
        v60 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
        v61 = v158;
        v60(v57, &v54[v55], v158);
        sub_23FD740A8();
        v62 = *(void (**)(char *, uint64_t))(v56 + 8);
        v62(v57, v61);
        v63 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v53);
        if (v63 == v142)
        {
          (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v53);
          v64 = v135;
          v65 = v134;
          v66 = v28;
          v67 = v136;
          (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v66, v136);
          v68 = (char *)v154 + *(int *)(v58 + 48);
          *v154 = *(_QWORD *)v54;
          v69 = v59;
          v70 = v158;
          v60(v68, v69, v158);
          v71 = v139;
          sub_23FD74048();
          v62(v68, v70);
          v73 = v149;
          v72 = v150;
          (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v150 + *(int *)(v149 + 20), v65, v67);
          type metadata accessor for FeedbackLearning.ActionValue(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, char *, uint64_t))(v140 + 32))(v72, v71, v141);
          v74 = v65;
          v53 = v138;
          (*(void (**)(char *, uint64_t))(v64 + 8))(v74, v67);
        }
        else
        {
          if (v63 != v131)
          {
            v73 = v149;
            v72 = v150;
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v150, 1, 1, v149);
            (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v53);
            v54 = v137;
            goto LABEL_10;
          }
          (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v53);
          v75 = v158;
          v76 = v28;
          v77 = v129;
          v78 = v128;
          v79 = v130;
          (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v76, v130);
          v80 = (char *)v154 + *(int *)(v157 + 48);
          v81 = v137;
          *v154 = *(_QWORD *)v137;
          v60(v80, v59, v75);
          v82 = v139;
          sub_23FD74048();
          v62(v80, v75);
          v73 = v149;
          v72 = v150;
          (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v150 + *(int *)(v149 + 20), v78, v79);
          type metadata accessor for FeedbackLearning.ActionValue(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, char *, uint64_t))(v140 + 32))(v72, v82, v141);
          v83 = v79;
          v54 = v81;
          (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v83);
        }
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v72, 0, 1, v73);
LABEL_10:
        v84 = v156;
        sub_23FBFEF74((uint64_t)v54, &qword_256F5D948);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v72, 1, v73) == 1)
        {
          sub_23FBFEF74(v72, &qword_256F5D940);
          v52 = v157;
          v28 = v144;
          v25 = v145;
          v85 = v155;
        }
        else
        {
          v86 = v132;
          sub_23FBFEEB0(v72, v132, type metadata accessor for FeedbackLearning.FlowActionEvent);
          sub_23FBFEEB0(v86, v148, type metadata accessor for FeedbackLearning.FlowActionEvent);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v28 = v144;
          v25 = v145;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23FC9942C();
            v153 = v90;
          }
          v85 = v155;
          v88 = *(_QWORD *)(v153 + 16);
          if (v88 >= *(_QWORD *)(v153 + 24) >> 1)
          {
            sub_23FC9942C();
            v153 = v91;
          }
          v89 = v153;
          *(_QWORD *)(v153 + 16) = v88 + 1;
          sub_23FBFEEB0(v148, v89+ ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80))+ *(_QWORD *)(v133 + 72) * v88, type metadata accessor for FeedbackLearning.FlowActionEvent);
          v52 = v157;
        }
        v51 = v85 + v143;
        v49 = v84 - 1;
        if (!v49)
        {
          v92 = v120;
          swift_bridgeObjectRelease();
          v48 = v92;
          v16 = v146;
          v50 = MEMORY[0x24BEE4AF8];
          goto LABEL_22;
        }
      }
    }
    v153 = MEMORY[0x24BEE4AF8];
    v52 = v157;
LABEL_22:
    v160 = v48;
    swift_bridgeObjectRetain();
    sub_23FC17288();
    swift_bridgeObjectRetain();
    sub_23FC0394C(&v160);
    v99 = v125;
    swift_bridgeObjectRelease();
    v100 = v160;
    v101 = *(_QWORD *)(v160 + 16);
    if (v101)
    {
      v160 = v50;
      sub_23FC9B4C4();
      v102 = v100 + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
      v103 = *(_QWORD *)(v126 + 72);
      v104 = v152;
      v105 = (uint64_t)v154;
      do
      {
        sub_23FC05EF0(v102, v105);
        v106 = *(int *)(v52 + 48);
        v107 = &v151[v106];
        v108 = v158;
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(&v151[v106], v105 + v106, v158);
        v109 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v109(v104, v107, v108);
        sub_23FBFEF74(v105, &qword_256F5D948);
        v110 = v160;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC9B4C4();
          v110 = v160;
        }
        v111 = *(_QWORD *)(v110 + 16);
        if (v111 >= *(_QWORD *)(v110 + 24) >> 1)
        {
          sub_23FC9B4C4();
          v110 = v160;
        }
        *(_QWORD *)(v110 + 16) = v111 + 1;
        v112 = v110
             + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
             + *(_QWORD *)(v16 + 72) * v111;
        v104 = v152;
        v109((char *)v112, v152, v158);
        v160 = v110;
        v102 += v103;
        --v101;
        v52 = v157;
      }
      while (v101);
      swift_release();
      v99 = v125;
    }
    else
    {
      swift_release();
      v110 = MEMORY[0x24BEE4AF8];
    }
    v113 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 16))(v127, v124, v141);
    v114 = (int *)type metadata accessor for FeedbackLearning.FlowAction(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v113 + v114[5], v99, v122);
    *(_QWORD *)(v113 + v114[6]) = v110;
    *(_QWORD *)(v113 + v114[7]) = v153;
    v115 = v113;
    v116 = 0;
    v117 = (uint64_t)v114;
  }
  else
  {
    v158 = v12;
    sub_23FD724DC();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
    v93 = sub_23FD72BE4();
    v94 = sub_23FD74F3C();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc();
      v96 = swift_slowAlloc();
      v160 = v96;
      *(_DWORD *)v95 = 136315138;
      v157 = (uint64_t)(v95 + 4);
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v97 = sub_23FD75344();
      v159 = sub_23FC9DC40(v97, v98, &v160);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      _os_log_impl(&dword_23FBF8000, v93, v94, "Statement id %s is not associated with any event, cannot create a flow action", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v96, -1, -1);
      MEMORY[0x2426798D8](v95, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v156, v158);
    v117 = type metadata accessor for FeedbackLearning.FlowAction(0);
    v115 = v127;
    v116 = 1;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v115, v116, 1, v117);
}

uint64_t sub_23FC02284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  v2 = sub_23FC02330();
  v3 = sub_23FD73DE4();
  v4 = sub_23FC00D7C(v3);
  swift_bridgeObjectRelease();
  v5 = sub_23FD73DE4();
  v6 = sub_23FC01308(v5);
  swift_bridgeObjectRelease();
  v10[2] = a1;
  v10[3] = v4;
  v10[4] = v6;
  sub_23FC8D950((void (*)(_QWORD))sub_23FC05ED4, (uint64_t)v10, v2);
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23FC02330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(char *, char *, uint64_t);
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t result;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, unint64_t, uint64_t);
  uint64_t v80;
  int v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;

  v0 = sub_23FD7157C();
  v102 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FD72FEC();
  v98 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v97 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD73604();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v100 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v96 = (char *)&v74 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v90 = (char *)&v74 - v16;
  v17 = sub_23FD7409C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_23FD73F64();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86, v22);
  v84 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_23FD740CC();
  v24 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v25);
  v88 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23FD73DE4();
  v83 = *(_QWORD *)(v27 + 16);
  if (!v83)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v82 = v27 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  v81 = *MEMORY[0x24BE56AC8];
  v93 = *MEMORY[0x24BE54CD8];
  v80 = *(_QWORD *)(v24 + 72);
  v78 = v24;
  v79 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
  v74 = v27;
  swift_bridgeObjectRetain();
  v28 = 0;
  v91 = MEMORY[0x24BEE4AF8];
  v92 = v0;
  v29 = v0;
  v105 = v7;
  v95 = v8;
  v77 = v17;
  v76 = v18;
  v75 = v21;
  v94 = v3;
  while (1)
  {
    v87 = v28;
    v79(v88, v82 + v80 * v28, v89);
    sub_23FD740A8();
    v30 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v21, v17);
    if (v30 != v81)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      v32 = MEMORY[0x24BEE4AF8];
      v35 = v29;
      goto LABEL_27;
    }
    (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v21, v86);
    v31 = sub_23FD73F34();
    v32 = MEMORY[0x24BEE4AF8];
    v106 = MEMORY[0x24BEE4AF8];
    v101 = *(_QWORD *)(v31 + 16);
    if (v101)
      break;
    v51 = MEMORY[0x24BEE4AF8];
    v35 = v29;
LABEL_19:
    swift_bridgeObjectRelease();
    v52 = *(_QWORD *)(v51 + 16);
    if (v52)
    {
      v106 = v32;
      sub_23FC9B338();
      v53 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v104 = v51;
      v54 = v51 + v53;
      v55 = *(_QWORD *)(v8 + 72);
      v56 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      do
      {
        v57 = v100;
        v56(v100, v54, v7);
        sub_23FD735F8();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v7);
        v32 = v106;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC9B338();
          v32 = v106;
        }
        v58 = *(_QWORD *)(v32 + 16);
        if (v58 >= *(_QWORD *)(v32 + 24) >> 1)
        {
          sub_23FC9B338();
          v32 = v106;
        }
        *(_QWORD *)(v32 + 16) = v58 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v102 + 32))(v32+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(_QWORD *)(v102 + 72) * v58, v3, v35);
        v106 = v32;
        v54 += v55;
        --v52;
        v7 = v105;
      }
      while (v52);
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v78 + 8))(v88, v89);
    v59 = *(_QWORD *)(v32 + 16);
    v60 = *(_QWORD *)(v91 + 16);
    if (__OFADD__(v60, v59))
      goto LABEL_46;
    v29 = v35;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v62 = v91;
    if (!isUniquelyReferenced_nonNull_native || v60 + v59 > *(_QWORD *)(v91 + 24) >> 1)
    {
      sub_23FC992C0();
      v62 = v63;
    }
    v17 = v77;
    v18 = v76;
    v21 = v75;
    v64 = *(_QWORD *)(v32 + 16);
    v91 = v62;
    if (v64)
    {
      v65 = *(_QWORD *)(v62 + 16);
      if ((*(_QWORD *)(v62 + 24) >> 1) - v65 < v59)
        goto LABEL_48;
      v66 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
      v67 = *(_QWORD *)(v102 + 72);
      v68 = v62 + v66 + v67 * v65;
      if (v32 + v66 < v68 + v67 * v59 && v68 < v32 + v66 + v67 * v59)
        goto LABEL_50;
      swift_arrayInitWithCopy();
      if (v59)
      {
        v70 = *(_QWORD *)(v91 + 16);
        v71 = __OFADD__(v70, v59);
        v72 = v70 + v59;
        if (v71)
          goto LABEL_49;
        *(_QWORD *)(v91 + 16) = v72;
      }
    }
    else if (v59)
    {
      goto LABEL_47;
    }
    v28 = v87 + 1;
    swift_bridgeObjectRelease();
    if (v28 == v83)
    {
      swift_bridgeObjectRelease_n();
      return v91;
    }
  }
  v33 = 0;
  v34 = v90;
  v35 = v29;
  while (v33 < *(_QWORD *)(v31 + 16))
  {
    v36 = v35;
    v37 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v38 = v31;
    v103 = *(_QWORD *)(v8 + 72);
    v104 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v34, v31 + v37 + v103 * v33, v7);
    v39 = v8;
    v40 = v7;
    v41 = v97;
    v42 = v34;
    sub_23FD735EC();
    v44 = v98;
    v43 = v99;
    v45 = (*(uint64_t (**)(char *, uint64_t))(v98 + 88))(v41, v99);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
    if (v45 == v93)
    {
      v46 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v46(v96, v42, v40);
      v47 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v34 = v42;
      }
      else
      {
        sub_23FC9B440();
        v34 = v90;
        v47 = v106;
      }
      v31 = v38;
      v49 = v103;
      v48 = v104;
      v50 = *(_QWORD *)(v47 + 16);
      if (v50 >= *(_QWORD *)(v47 + 24) >> 1)
      {
        sub_23FC9B440();
        v34 = v90;
        v47 = v106;
      }
      *(_QWORD *)(v47 + 16) = v50 + 1;
      v7 = v105;
      v46((char *)(v47 + v48 + v50 * v49), v96, v105);
      v106 = v47;
      v35 = v92;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v40);
      v7 = v40;
      v34 = v42;
      v35 = v36;
      v31 = v38;
    }
    ++v33;
    v3 = v94;
    v8 = v95;
    if (v101 == v33)
    {
      v51 = v106;
      v32 = MEMORY[0x24BEE4AF8];
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  result = sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t sub_23FC02B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = sub_23FD71474();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD73DFC();
  sub_23FC0636C(a2);
  v14 = v13;
  v15 = sub_23FD467B0(a3);
  sub_23FC01684((uint64_t)v12, a1, v14, v15, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_23FC02C00(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v117 = a1;
  v81 = sub_23FD73874();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81, v1);
  v79 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_23FD7394C();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84, v3);
  v82 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_23FD738E0();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v5);
  v85 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_23FD73598();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90, v7);
  v88 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_23FD7346C();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93, v9);
  v91 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_23FD73514();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96, v11);
  v94 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FD71BB8();
  v98 = *(_QWORD *)(v13 - 8);
  v99 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v97 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FD738B0();
  v101 = *(_QWORD *)(v16 - 8);
  v102 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v100 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23FD730F4();
  v105 = *(_QWORD *)(v19 - 8);
  v106 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v104 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23FD736D0();
  v108 = *(_QWORD *)(v22 - 8);
  v109 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v107 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FD73C7C();
  v111 = *(_QWORD *)(v25 - 8);
  v112 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v110 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23FD73424();
  v115 = *(_QWORD *)(v28 - 8);
  v116 = v28;
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23FD73418();
  v113 = *(_QWORD *)(v32 - 8);
  v114 = v32;
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v103 = (char *)&v79 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v36);
  v38 = (char *)&v79 - v37;
  v39 = sub_23FBFD684(&qword_256F5D960);
  MEMORY[0x24BDAC7A8](v39, v40);
  v42 = (char *)&v79 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23FD73D0C();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v45);
  v47 = (char *)&v79 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23FD7409C();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v50);
  v52 = (char *)&v79 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  v53 = (*(uint64_t (**)(char *, uint64_t))(v49 + 88))(v52, v48);
  if (v53 != *MEMORY[0x24BE56C70])
  {
    if (v53 == *MEMORY[0x24BE56AF8])
    {
      (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
      v59 = v110;
      v60 = v111;
      v61 = v52;
      v62 = v112;
      (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v61, v112);
      v63 = v117;
      sub_23FD73BEC();
LABEL_32:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v62);
      v77 = sub_23FD7157C();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v63, 0, 1, v77);
      return;
    }
    if (v53 == *MEMORY[0x24BE56B18])
    {
      (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
      v65 = v107;
      v66 = v108;
      v67 = v109;
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v52, v109);
      sub_23FD736C4();
    }
    else
    {
      if (v53 == *MEMORY[0x24BE56BA0])
      {
        (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
        v59 = v104;
        v60 = v105;
        v68 = v52;
        v62 = v106;
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v68, v106);
        v63 = v117;
        sub_23FD73088();
        goto LABEL_32;
      }
      if (v53 == *MEMORY[0x24BE56BC0])
      {
        (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
        v60 = v113;
        v59 = v103;
        v69 = v52;
        v62 = v114;
        (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v103, v69, v114);
        v63 = v117;
        sub_23FD73400();
        goto LABEL_32;
      }
      if (v53 == *MEMORY[0x24BE56C58])
      {
        (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
        v59 = v100;
        v60 = v101;
        v70 = v52;
        v62 = v102;
        (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v100, v70, v102);
        v63 = v117;
        sub_23FD73880();
        goto LABEL_32;
      }
      if (v53 != *MEMORY[0x24BE56C40])
      {
        if (v53 == *MEMORY[0x24BE56B98])
        {
          (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
          v60 = v95;
          v59 = v94;
          v71 = v52;
          v62 = v96;
          (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v71, v96);
          v63 = v117;
          sub_23FD734CC();
        }
        else if (v53 == *MEMORY[0x24BE56B30])
        {
          (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
          v60 = v92;
          v59 = v91;
          v72 = v52;
          v62 = v93;
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v72, v93);
          v63 = v117;
          sub_23FD73454();
        }
        else if (v53 == *MEMORY[0x24BE56B50])
        {
          (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
          v60 = v89;
          v59 = v88;
          v73 = v52;
          v62 = v90;
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v73, v90);
          v63 = v117;
          sub_23FD73568();
        }
        else if (v53 == *MEMORY[0x24BE56C00])
        {
          (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
          v60 = v86;
          v59 = v85;
          v74 = v52;
          v62 = v87;
          (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v74, v87);
          v63 = v117;
          sub_23FD738BC();
        }
        else if (v53 == *MEMORY[0x24BE56C20])
        {
          (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
          v60 = v83;
          v59 = v82;
          v75 = v52;
          v62 = v84;
          (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v75, v84);
          v63 = v117;
          sub_23FD73928();
        }
        else
        {
          if (v53 != *MEMORY[0x24BE56BC8])
          {
            v78 = sub_23FD7157C();
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v117, 1, 1, v78);
            (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v48);
            return;
          }
          (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
          v60 = v80;
          v59 = v79;
          v76 = v52;
          v62 = v81;
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v76, v81);
          v63 = v117;
          sub_23FD7385C();
        }
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
      v65 = v97;
      v66 = v98;
      v67 = v99;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v52, v99);
      sub_23FC03864(v117);
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
    return;
  }
  (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v47, v52, v43);
  sub_23FD737F0();
  v55 = v115;
  v54 = v116;
  if ((*(unsigned int (**)(char *, uint64_t))(v115 + 88))(v31, v116) == *MEMORY[0x24BE55318])
  {
    (*(void (**)(char *, uint64_t))(v55 + 96))(v31, v54);
    v57 = v113;
    v56 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v38, v31, v114);
    sub_23FD73400();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v56);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v43);
    v58 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v43);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v54);
    v58 = 1;
  }
  v64 = sub_23FD7157C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v42, v58, 1, v64);
  sub_23FBFEEEC((uint64_t)v42, v117, &qword_256F5D960);
}

uint64_t sub_23FC03628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a2;
  v2 = sub_23FD7157C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23FD73F64();
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD7409C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v15, v11) == *MEMORY[0x24BE56AC8])
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v15, v11);
    v16 = v29;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v15, v29);
    v27 = v10;
    v17 = sub_23FD73F34();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v26 = v7;
      v19 = *(_QWORD *)(sub_23FD73604() - 8);
      v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      v21 = *(_QWORD *)(v19 + 72);
      while (1)
      {
        sub_23FD735F8();
        v22 = sub_23FD71558();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        if ((v22 & 1) != 0)
          break;
        v20 += v21;
        if (!--v18)
        {
          swift_bridgeObjectRelease();
          v23 = 0;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      v23 = 1;
LABEL_10:
      v24 = v29;
      v7 = v26;
    }
    else
    {
      v24 = v16;
      swift_bridgeObjectRelease();
      v23 = 0;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return 0;
  }
  return v23;
}

uint64_t sub_23FC03864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_23FBFD684(&qword_256F5D538);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC0AC90();
  v6 = sub_23FD72044();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_23FBFEF74((uint64_t)v5, &qword_256F5D538);
    v7 = 1;
  }
  else
  {
    sub_23FD72020();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = 0;
  }
  v8 = sub_23FD7157C();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, v7, 1, v8);
}

void sub_23FC0394C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_23FBFD684(&qword_256F5D948) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23FD3C550();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23FC039D0((uint64_t)v6);
  *a1 = v3;
}

void sub_23FC039D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  uint64_t *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v2 = v1;
  v136 = sub_23FBFD684(&qword_256F5D948);
  v4 = *(_QWORD *)(v136 - 8);
  v6 = MEMORY[0x24BDAC7A8](v136, v5);
  v132 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v142 = (uint64_t)&v125 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v139 = (uint64_t *)((char *)&v125 - v13);
  MEMORY[0x24BDAC7A8](v12, v14);
  v138 = (uint64_t *)((char *)&v125 - v15);
  v16 = *(_QWORD *)(a1 + 8);
  v17 = sub_23FD75338();
  if (v17 >= v16)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      if (v16)
        sub_23FC042F0(0, v16, 1, (_QWORD *)a1);
      return;
    }
    goto LABEL_140;
  }
  v18 = v17;
  sub_23FD30760(v16 / 2);
  v127 = v19;
  v128 = v16;
  v134 = v20;
  v135 = v4;
  if (v16 <= 0)
  {
LABEL_104:
    v22 = MEMORY[0x24BEE4AF8];
    v66 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
    if (v66 < 2)
    {
LABEL_116:
      swift_bridgeObjectRelease();
      if (v128 >= -1)
        goto LABEL_117;
      goto LABEL_144;
    }
    v118 = *(_QWORD *)a1;
    while (1)
    {
      v119 = v66 - 2;
      if (v66 < 2)
        break;
      if (!v118)
        goto LABEL_148;
      v120 = v22;
      a1 = *(_QWORD *)(v22 + 32 + 16 * v119);
      v121 = *(_QWORD *)(v22 + 32 + 16 * (v66 - 1) + 8);
      sub_23FC04530(v118 + *(_QWORD *)(v135 + 72) * a1, v118 + *(_QWORD *)(v135 + 72) * *(_QWORD *)(v22 + 32 + 16 * (v66 - 1)), v118 + *(_QWORD *)(v135 + 72) * v121, v134);
      if (v2)
        goto LABEL_102;
      if (v121 < a1)
        goto LABEL_135;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FD3C35C(v22);
        v120 = v124;
      }
      if (v119 >= *(_QWORD *)(v120 + 16))
        goto LABEL_136;
      v122 = (uint64_t *)(v120 + 32 + 16 * v119);
      *v122 = a1;
      v122[1] = v121;
      v123 = *(_QWORD *)(v120 + 16);
      if (v66 > v123)
        goto LABEL_137;
      memmove((void *)(v120 + 32 + 16 * (v66 - 1)), (const void *)(v120 + 32 + 16 * v66), 16 * (v123 - v66));
      *(_QWORD *)(v120 + 16) = v123 - 1;
      v66 = v123 - 1;
      v22 = v120;
      if (v123 <= 2)
        goto LABEL_116;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    return;
  }
  v126 = v18;
  v21 = 0;
  v22 = MEMORY[0x24BEE4AF8];
  v23 = v16;
  v141 = (uint64_t *)a1;
  while (1)
  {
    v24 = v21;
    v25 = v21 + 1;
    v133 = v21;
    if (v21 + 1 >= v23)
    {
      v31 = v21 + 1;
    }
    else
    {
      v26 = *(_QWORD *)a1;
      v27 = *(_QWORD *)(v4 + 72);
      v28 = v138;
      sub_23FC05EF0(v26 + v27 * v25, (uint64_t)v138);
      v29 = v139;
      sub_23FC05EF0(v26 + v27 * v24, (uint64_t)v139);
      v30 = *v28;
      v143 = *v29;
      v144 = v30;
      sub_23FBFEF74((uint64_t)v29, &qword_256F5D948);
      sub_23FBFEF74((uint64_t)v28, &qword_256F5D948);
      v31 = v24 + 2;
      v140 = v26;
      v145 = v27;
      if (v24 + 2 >= v23)
      {
        v4 = v135;
      }
      else
      {
        v129 = v22;
        v130 = v2;
        v32 = v27 * v25;
        v33 = v26;
        v34 = v27 * v31;
        while (1)
        {
          v35 = v23;
          v36 = v144 < v143;
          v37 = v138;
          sub_23FC05EF0(v33 + v34, (uint64_t)v138);
          v38 = v139;
          sub_23FC05EF0(v33 + v32, (uint64_t)v139);
          v39 = *v37 >= *v38;
          sub_23FBFEF74((uint64_t)v38, &qword_256F5D948);
          sub_23FBFEF74((uint64_t)v37, &qword_256F5D948);
          if (v36 == v39)
            break;
          v33 += v145;
          ++v31;
          v23 = v35;
          if (v31 >= v35)
          {
            v31 = v35;
            v4 = v135;
            v22 = v129;
            v2 = v130;
            v24 = v133;
            goto LABEL_13;
          }
        }
        v4 = v135;
        v22 = v129;
        v2 = v130;
        v24 = v133;
        v23 = v35;
      }
LABEL_13:
      if (v144 < v143)
      {
        if (v31 < v24)
          goto LABEL_141;
        if (v24 < v31)
        {
          v144 = v23;
          v129 = v22;
          v130 = v2;
          v40 = 0;
          v41 = v145;
          v42 = v145 * (v31 - 1);
          v43 = v31 * v145;
          v44 = v24 * v145;
          do
          {
            if (v24 != v31 + v40 - 1)
            {
              v45 = v140;
              if (!v140)
                goto LABEL_147;
              v46 = v140 + v44;
              v47 = v140 + v42;
              sub_23FBFEEEC(v140 + v44, v132, &qword_256F5D948);
              if (v44 < v42 || v46 >= v45 + v43)
              {
                swift_arrayInitWithTakeFrontToBack();
                v41 = v145;
              }
              else
              {
                v41 = v145;
                if (v44 != v42)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_23FBFEEEC(v132, v47, &qword_256F5D948);
            }
            ++v24;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v44 += v41;
          }
          while (v24 < v31 + v40);
          v22 = v129;
          v2 = v130;
          v4 = v135;
          v24 = v133;
          v23 = v144;
        }
      }
    }
    if (v31 < v23)
    {
      if (__OFSUB__(v31, v24))
        goto LABEL_139;
      if (v31 - v24 < v126)
      {
        if (__OFADD__(v24, v126))
          goto LABEL_142;
        if (v24 + v126 >= v23)
          v49 = v23;
        else
          v49 = v24 + v126;
        if (v49 < v24)
          goto LABEL_143;
        if (v31 != v49)
        {
          v129 = v22;
          v130 = v2;
          v50 = *(_QWORD *)(v4 + 72);
          v145 = v50 * (v31 - 1);
          v137 = v50;
          v51 = v31 * v50;
          v131 = v49;
          do
          {
            v52 = 0;
            v140 = v31;
            while (1)
            {
              v143 = v24;
              v53 = v141;
              v54 = *v141;
              v55 = v51;
              v56 = v51 + v52 + *v141;
              v57 = v138;
              sub_23FC05EF0(v56, (uint64_t)v138);
              v58 = v139;
              sub_23FC05EF0(v145 + v52 + v54, (uint64_t)v139);
              v144 = *v57;
              v59 = *v58;
              sub_23FBFEF74((uint64_t)v58, &qword_256F5D948);
              sub_23FBFEF74((uint64_t)v57, &qword_256F5D948);
              if (v144 >= v59)
                break;
              v60 = *v53;
              if (!*v53)
                goto LABEL_145;
              v51 = v55;
              v61 = v60 + v145 + v52;
              sub_23FBFEEEC(v60 + v55 + v52, v142, &qword_256F5D948);
              swift_arrayInitWithTakeFrontToBack();
              sub_23FBFEEEC(v142, v61, &qword_256F5D948);
              v52 -= v137;
              v24 = v143 + 1;
              v62 = v140;
              if (v140 == v143 + 1)
                goto LABEL_46;
            }
            v62 = v140;
            v51 = v55;
LABEL_46:
            v31 = v62 + 1;
            v145 += v137;
            v51 += v137;
            v24 = v133;
          }
          while (v31 != v131);
          v31 = v131;
          v22 = v129;
          v2 = v130;
        }
      }
    }
    if (v31 < v24)
      goto LABEL_138;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v140 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23FD3C278(0, *(_QWORD *)(v22 + 16) + 1, 1, (char *)v22);
      v22 = v116;
    }
    v65 = *(_QWORD *)(v22 + 16);
    v64 = *(_QWORD *)(v22 + 24);
    v66 = v65 + 1;
    if (v65 >= v64 >> 1)
    {
      sub_23FD3C278(v64 > 1, v65 + 1, 1, (char *)v22);
      v22 = v117;
    }
    v67 = v2;
    *(_QWORD *)(v22 + 16) = v66;
    a1 = v22 + 32;
    v68 = (_QWORD *)(v22 + 32 + 16 * v65);
    v69 = v140;
    *v68 = v133;
    v68[1] = v69;
    if (v65)
      break;
    v66 = 1;
LABEL_96:
    v21 = v140;
    a1 = (uint64_t)v141;
    v23 = v141[1];
    v2 = v67;
    v4 = v135;
    if (v140 >= v23)
      goto LABEL_105;
  }
  while (1)
  {
    v70 = v66 - 1;
    if (v66 >= 4)
    {
      v75 = (_QWORD *)(a1 + 16 * v66);
      v76 = *(v75 - 8);
      v77 = *(v75 - 7);
      v81 = __OFSUB__(v77, v76);
      v78 = v77 - v76;
      if (v81)
        goto LABEL_123;
      v80 = *(v75 - 6);
      v79 = *(v75 - 5);
      v81 = __OFSUB__(v79, v80);
      v73 = v79 - v80;
      v74 = v81;
      if (v81)
        goto LABEL_124;
      v82 = v66 - 2;
      v83 = (uint64_t *)(a1 + 16 * (v66 - 2));
      v85 = *v83;
      v84 = v83[1];
      v81 = __OFSUB__(v84, v85);
      v86 = v84 - v85;
      if (v81)
        goto LABEL_125;
      v81 = __OFADD__(v73, v86);
      v87 = v73 + v86;
      if (v81)
        goto LABEL_127;
      if (v87 >= v78)
      {
        v105 = (uint64_t *)(a1 + 16 * v70);
        v107 = *v105;
        v106 = v105[1];
        v81 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v81)
          goto LABEL_133;
        v98 = v73 < v108;
        goto LABEL_85;
      }
    }
    else
    {
      if (v66 != 3)
      {
        v99 = *(_QWORD *)(v22 + 32);
        v100 = *(_QWORD *)(v22 + 40);
        v81 = __OFSUB__(v100, v99);
        v92 = v100 - v99;
        v93 = v81;
        goto LABEL_79;
      }
      v72 = *(_QWORD *)(v22 + 32);
      v71 = *(_QWORD *)(v22 + 40);
      v81 = __OFSUB__(v71, v72);
      v73 = v71 - v72;
      v74 = v81;
    }
    if ((v74 & 1) != 0)
      goto LABEL_126;
    v82 = v66 - 2;
    v88 = (uint64_t *)(a1 + 16 * (v66 - 2));
    v90 = *v88;
    v89 = v88[1];
    v91 = __OFSUB__(v89, v90);
    v92 = v89 - v90;
    v93 = v91;
    if (v91)
      goto LABEL_128;
    v94 = (uint64_t *)(a1 + 16 * v70);
    v96 = *v94;
    v95 = v94[1];
    v81 = __OFSUB__(v95, v96);
    v97 = v95 - v96;
    if (v81)
      goto LABEL_130;
    if (__OFADD__(v92, v97))
      goto LABEL_132;
    if (v92 + v97 >= v73)
    {
      v98 = v73 < v97;
LABEL_85:
      if (v98)
        v70 = v82;
      goto LABEL_87;
    }
LABEL_79:
    if ((v93 & 1) != 0)
      goto LABEL_129;
    v101 = (uint64_t *)(a1 + 16 * v70);
    v103 = *v101;
    v102 = v101[1];
    v81 = __OFSUB__(v102, v103);
    v104 = v102 - v103;
    if (v81)
      goto LABEL_131;
    if (v104 < v92)
      goto LABEL_96;
LABEL_87:
    v109 = v70 - 1;
    if (v70 - 1 >= v66)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v141)
      goto LABEL_146;
    v110 = v22;
    v111 = (uint64_t *)(a1 + 16 * v109);
    v112 = *v111;
    v113 = (_QWORD *)(a1 + 16 * v70);
    v114 = v113[1];
    sub_23FC04530(*v141 + *(_QWORD *)(v135 + 72) * *v111, *v141 + *(_QWORD *)(v135 + 72) * *v113, *v141 + *(_QWORD *)(v135 + 72) * v114, v134);
    if (v67)
      break;
    if (v114 < v112)
      goto LABEL_120;
    if (v70 > *(_QWORD *)(v110 + 16))
      goto LABEL_121;
    *v111 = v112;
    *(_QWORD *)(a1 + 16 * v109 + 8) = v114;
    v115 = *(_QWORD *)(v110 + 16);
    if (v70 >= v115)
      goto LABEL_122;
    v22 = v110;
    v66 = v115 - 1;
    memmove((void *)(a1 + 16 * v70), v113 + 2, 16 * (v115 - 1 - v70));
    *(_QWORD *)(v110 + 16) = v115 - 1;
    if (v115 <= 2)
      goto LABEL_96;
  }
  v2 = v67;
LABEL_102:
  swift_bridgeObjectRelease();
  if (v128 < -1)
  {
    __break(1u);
    goto LABEL_104;
  }
LABEL_117:
  *(_QWORD *)(v127 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23FC042F0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v29 = a1;
  v30 = sub_23FBFD684(&qword_256F5D948);
  v8 = MEMORY[0x24BDAC7A8](v30, v7);
  v35 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v32 = (char *)&v27 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v31 = (uint64_t *)((char *)&v27 - v15);
  v34 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v14 + 72);
    v38 = v16 * (v34 - 1);
    v33 = v16;
    v37 = v16 * v34;
    v17 = (uint64_t *)v32;
    while (2)
    {
      v18 = 0;
      v19 = v29;
      do
      {
        v20 = a4;
        v21 = *a4;
        v22 = v31;
        sub_23FC05EF0(v37 + v18 + v21, (uint64_t)v31);
        sub_23FC05EF0(v38 + v18 + v21, (uint64_t)v17);
        v36 = *v22;
        v23 = *v17;
        sub_23FBFEF74((uint64_t)v17, &qword_256F5D948);
        sub_23FBFEF74((uint64_t)v22, &qword_256F5D948);
        v24 = v36 < v23;
        a4 = v20;
        if (!v24)
          break;
        v25 = *v20;
        if (!*v20)
        {
          __break(1u);
          return;
        }
        v26 = v25 + v38 + v18;
        sub_23FBFEEEC(v25 + v37 + v18, v35, &qword_256F5D948);
        swift_arrayInitWithTakeFrontToBack();
        sub_23FBFEEEC(v35, v26, &qword_256F5D948);
        v18 -= v33;
        ++v19;
        a4 = v20;
      }
      while (v34 != v19);
      v38 += v33;
      v37 += v33;
      if (++v34 != v28)
        continue;
      break;
    }
  }
}

void sub_23FC04530(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v35;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v44;
  int64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;

  v53 = sub_23FBFD684(&qword_256F5D948);
  v10 = MEMORY[0x24BDAC7A8](v53, v9);
  v55 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10, v12);
  v54 = (uint64_t *)((char *)&v47 - v13);
  v15 = *(_QWORD *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v16 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v15 == -1)
    goto LABEL_76;
  v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1)
    goto LABEL_77;
  v20 = v16 / v15;
  v21 = v18 / v15;
  if (v16 / v15 >= v18 / v15)
  {
    sub_23FC9A480(a2, v18 / v15);
    v24 = v21 * v15;
    v22 = a4 + v21 * v15;
    if (v24 < 1 || a1 >= a2)
      goto LABEL_70;
    v47 = v4;
    v48 = v15;
    v50 = a4;
    v51 = -v15;
    v49 = a1;
    while (1)
    {
      v26 = a3;
      v27 = v51;
      a3 += v51;
      v52 = v22 + v51;
      v28 = v54;
      sub_23FC05EF0(v22 + v51, (uint64_t)v54);
      v29 = a2 + v27;
      v30 = v55;
      sub_23FC05EF0(v29, (uint64_t)v55);
      v31 = *v28;
      v32 = *v30;
      sub_23FBFEF74((uint64_t)v30, &qword_256F5D948);
      sub_23FBFEF74((uint64_t)v28, &qword_256F5D948);
      if (v31 < v32)
        break;
      if (v26 < v22 || a3 >= v22)
      {
        v22 = v52;
        swift_arrayInitWithTakeFrontToBack();
LABEL_35:
        v35 = v49;
        a4 = v50;
        goto LABEL_42;
      }
      v35 = v49;
      a4 = v50;
      if (v26 == v22)
      {
        v22 = v52;
      }
      else
      {
        v22 = v52;
        swift_arrayInitWithTakeBackToFront();
      }
LABEL_42:
      v15 = v48;
      if (v22 <= a4 || a2 <= v35)
        goto LABEL_70;
    }
    if (v26 >= a2 && a3 < a2)
    {
      v35 = v49;
      a4 = v50;
      if (v26 != a2)
        swift_arrayInitWithTakeBackToFront();
      a2 = v29;
      goto LABEL_42;
    }
    swift_arrayInitWithTakeFrontToBack();
    a2 = v29;
    goto LABEL_35;
  }
  sub_23FC9A480(a1, v16 / v15);
  v22 = a4 + v20 * v15;
  v52 = a3;
  if (v20 * v15 >= 1 && a2 < a3)
  {
    v47 = v4;
    v37 = v54;
    do
    {
      sub_23FC05EF0(a2, (uint64_t)v37);
      v38 = v55;
      sub_23FC05EF0(a4, (uint64_t)v55);
      v39 = *v37;
      v40 = *v38;
      sub_23FBFEF74((uint64_t)v38, &qword_256F5D948);
      sub_23FBFEF74((uint64_t)v37, &qword_256F5D948);
      if (v39 >= v40)
      {
        if (a1 < a4 || a1 >= a4 + v15)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v41 = a2;
        a4 += v15;
      }
      else
      {
        v41 = a2 + v15;
        if (a1 < a2 || a1 >= v41)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      a1 += v15;
      v44 = a4 >= v22 || v41 >= v52;
      a2 = v41;
    }
    while (!v44);
  }
LABEL_70:
  v45 = v22 - a4;
  if (v15 != -1 || v45 != 0x8000000000000000)
  {
    sub_23FC9A480(a4, v45 / v15);
    return;
  }
LABEL_78:
  __break(1u);
}

uint64_t type metadata accessor for FeedbackLearning.FlowActionEvent(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5D810);
}

unint64_t sub_23FC048F4()
{
  unint64_t result;

  result = qword_256F5D6E0;
  if (!qword_256F5D6E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76478, &type metadata for FeedbackLearning.FlowActionEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D6E0);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.FlowAction(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5D8A0);
}

uint64_t sub_23FC04944(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning()
{
  return &type metadata for FeedbackLearning;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearning.ActionValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = sub_23FD730F4();
    else
      v6 = sub_23FD73C7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.ActionValue(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
    v2 = sub_23FD730F4();
  else
    v2 = sub_23FD73C7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = sub_23FD730F4();
  else
    v4 = sub_23FD73C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23FBFEF18(a1, type metadata accessor for FeedbackLearning.ActionValue);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = sub_23FD730F4();
    else
      v4 = sub_23FD73C7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = sub_23FD730F4();
  else
    v4 = sub_23FD73C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23FBFEF18(a1, type metadata accessor for FeedbackLearning.ActionValue);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = sub_23FD730F4();
    else
      v4 = sub_23FD73C7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FC04D10()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FC04D20()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD73C7C();
  if (v1 <= 0x3F)
  {
    result = sub_23FD730F4();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearning.FlowActionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v11 = sub_23FD730F4();
    else
      v11 = sub_23FD73C7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = sub_23FD730F4();
  else
    v6 = sub_23FD73C7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v8 = sub_23FD730F4();
  else
    v8 = sub_23FD73C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    sub_23FBFEF18(a1 + v7, type metadata accessor for FeedbackLearning.ActionValue);
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v10 = sub_23FD730F4();
    else
      v10 = sub_23FD73C7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v8 = sub_23FD730F4();
  else
    v8 = sub_23FD73C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    sub_23FBFEF18(a1 + v7, type metadata accessor for FeedbackLearning.ActionValue);
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v10 = sub_23FD730F4();
    else
      v10 = sub_23FD73C7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearning.FlowActionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC05298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC06018();
  sub_23FC06178();
  if (v3)
  {
    v5 = v2;
    v4 = v1;
  }
  else
  {
    type metadata accessor for FeedbackLearning.ActionValue(0);
    v4 = sub_23FC06208();
  }
  return sub_23FC06098(v4, v0, v5);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearning.FlowActionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC052EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC06018();
  sub_23FC06188();
  if (v3)
  {
    v5 = v2;
    v4 = v1;
  }
  else
  {
    type metadata accessor for FeedbackLearning.ActionValue(0);
    v4 = sub_23FC06208();
  }
  return sub_23FC0608C(v4, v0, v0, v5);
}

uint64_t sub_23FC0533C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeedbackLearning.ActionValue(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearning.FlowAction(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD7157C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.FlowAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedbackLearning.FlowAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearning.FlowAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedbackLearning.FlowAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for FeedbackLearning.FlowAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearning.FlowAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC057BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v11;

  sub_23FC06018();
  sub_23FC06178();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return sub_23FC06098(v8, v3, v7);
  }
  sub_23FC06250();
  sub_23FC06178();
  if (v9)
  {
    v8 = sub_23FC06208();
    return sub_23FC06098(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearning.FlowAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FC0583C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_23FC06018();
  sub_23FC06188();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_23FC06250();
    sub_23FC06188();
    if (!v10)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
      return;
    }
    v9 = sub_23FC06208();
  }
  sub_23FC0608C(v9, v4, v4, v8);
}

uint64_t sub_23FC058AC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = sub_23FD7157C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23FC05948(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23FC05950(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.FlowActionEvent.CodingKeys()
{
  return &type metadata for FeedbackLearning.FlowActionEvent.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RetrievedValue.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s23IntelligenceFlowRuntime16FeedbackLearningO15FlowActionEventV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FC05A40 + 4 * byte_23FD75FD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FC05A74 + 4 * byte_23FD75FD0[v4]))();
}

uint64_t sub_23FC05A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FC05A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FC05A84);
  return result;
}

uint64_t sub_23FC05A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FC05A98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FC05A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FC05AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.ActionValue.CodingKeys()
{
  return &type metadata for FeedbackLearning.ActionValue.CodingKeys;
}

uint64_t sub_23FC05ACC()
{
  return 0;
}

ValueMetadata *type metadata accessor for FeedbackLearning.ActionValue.ActionCodingKeys()
{
  return &type metadata for FeedbackLearning.ActionValue.ActionCodingKeys;
}

uint64_t getEnumTagSinglePayload for SimilarityError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueO16ActionCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FC05B74 + 4 * byte_23FD75FDA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FC05B94 + 4 * byte_23FD75FDF[v4]))();
}

_BYTE *sub_23FC05B74(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FC05B94(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FC05B9C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FC05BA4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FC05BAC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FC05BB4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.ActionValue.ClientActionCodingKeys()
{
  return &type metadata for FeedbackLearning.ActionValue.ClientActionCodingKeys;
}

unint64_t sub_23FC05BD4()
{
  unint64_t result;

  result = qword_256F5D8E0;
  if (!qword_256F5D8E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76228, &type metadata for FeedbackLearning.ActionValue.ClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D8E0);
  }
  return result;
}

unint64_t sub_23FC05C14()
{
  unint64_t result;

  result = qword_256F5D8E8;
  if (!qword_256F5D8E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD762E0, &type metadata for FeedbackLearning.ActionValue.ActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D8E8);
  }
  return result;
}

unint64_t sub_23FC05C54()
{
  unint64_t result;

  result = qword_256F5D8F0;
  if (!qword_256F5D8F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76398, &type metadata for FeedbackLearning.ActionValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D8F0);
  }
  return result;
}

unint64_t sub_23FC05C94()
{
  unint64_t result;

  result = qword_256F5D8F8;
  if (!qword_256F5D8F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76450, &type metadata for FeedbackLearning.FlowActionEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D8F8);
  }
  return result;
}

unint64_t sub_23FC05CD4()
{
  unint64_t result;

  result = qword_256F5D900;
  if (!qword_256F5D900)
  {
    result = MEMORY[0x2426797E8](&unk_23FD763C0, &type metadata for FeedbackLearning.FlowActionEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D900);
  }
  return result;
}

unint64_t sub_23FC05D14()
{
  unint64_t result;

  result = qword_256F5D908;
  if (!qword_256F5D908)
  {
    result = MEMORY[0x2426797E8](&unk_23FD763E8, &type metadata for FeedbackLearning.FlowActionEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D908);
  }
  return result;
}

unint64_t sub_23FC05D54()
{
  unint64_t result;

  result = qword_256F5D910;
  if (!qword_256F5D910)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76250, &type metadata for FeedbackLearning.ActionValue.ActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D910);
  }
  return result;
}

unint64_t sub_23FC05D94()
{
  unint64_t result;

  result = qword_256F5D918;
  if (!qword_256F5D918)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76278, &type metadata for FeedbackLearning.ActionValue.ActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D918);
  }
  return result;
}

unint64_t sub_23FC05DD4()
{
  unint64_t result;

  result = qword_256F5D920;
  if (!qword_256F5D920)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76198, &type metadata for FeedbackLearning.ActionValue.ClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D920);
  }
  return result;
}

unint64_t sub_23FC05E14()
{
  unint64_t result;

  result = qword_256F5D928;
  if (!qword_256F5D928)
  {
    result = MEMORY[0x2426797E8](&unk_23FD761C0, &type metadata for FeedbackLearning.ActionValue.ClientActionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D928);
  }
  return result;
}

unint64_t sub_23FC05E54()
{
  unint64_t result;

  result = qword_256F5D930;
  if (!qword_256F5D930)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76308, &type metadata for FeedbackLearning.ActionValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D930);
  }
  return result;
}

unint64_t sub_23FC05E94()
{
  unint64_t result;

  result = qword_256F5D938;
  if (!qword_256F5D938)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76330, &type metadata for FeedbackLearning.ActionValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5D938);
  }
  return result;
}

uint64_t sub_23FC05ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FC02B18(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23FC05EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5D948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC05F38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23FC05FB0(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC03628(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23FC06018()
{
  return sub_23FD71474();
}

uint64_t sub_23FC06028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v1, v0);
}

uint64_t sub_23FC06060()
{
  return sub_23FD73C7C();
}

uint64_t sub_23FC0607C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23FC0608C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a3, a4);
}

uint64_t sub_23FC06098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, a3);
}

uint64_t sub_23FC060A4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FC060EC()
{
  return sub_23FD75290();
}

uint64_t sub_23FC06104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23FC0610C()
{
  return 0;
}

uint64_t sub_23FC06128()
{
  return 0;
}

uint64_t sub_23FC06144()
{
  return sub_23FD752D8();
}

uint64_t sub_23FC06158()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FC06160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FC06168()
{
  return sub_23FD75470();
}

uint64_t sub_23FC06170()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC06198()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC061B0()
{
  return sub_23FD752F0();
}

uint64_t sub_23FC06208()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_23FC06214()
{
  return sub_23FD75458();
}

uint64_t sub_23FC06220()
{
  return sub_23FD7544C();
}

uint64_t sub_23FC0622C()
{
  return sub_23FD752D8();
}

unint64_t sub_23FC06238()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23FBFFF2C();
}

uint64_t sub_23FC06244()
{
  return sub_23FD7532C();
}

uint64_t sub_23FC06250()
{
  return sub_23FD7157C();
}

uint64_t sub_23FC06258()
{
  return sub_23FD730F4();
}

uint64_t sub_23FC06260()
{
  return type metadata accessor for FeedbackLearning.FlowAction(0);
}

uint64_t sub_23FC06268(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FC06270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23FC9B624(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_23FD745B8() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_23FD745AC();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_23FC9B624(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_23FC0636C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char v56;
  unint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;

  v72 = sub_23FBFD684(&qword_256F5DA98);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FBFEFE0();
  v71 = v4;
  sub_23FBFD684(&qword_256F5DAA0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  v70 = v7;
  v8 = sub_23FD7157C();
  v69 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v67 = (uint64_t)&v60 - v14;
  v66 = sub_23FBFD684(&qword_256F5DAA8);
  sub_23FBFF168();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v65 = (uint64_t)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v19);
  v64 = (uint64_t)&v60 - v20;
  v73 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23FBFD684(&qword_256F5DAB0);
    v21 = sub_23FD7526C();
  }
  else
  {
    v21 = MEMORY[0x24BEE4B00];
  }
  v22 = *(_QWORD *)(v73 + 64);
  v62 = v73 + 64;
  v23 = -1 << *(_BYTE *)(v73 + 32);
  if (-v23 < 64)
    v24 = ~(-1 << -(char)v23);
  else
    v24 = -1;
  v25 = v24 & v22;
  v60 = -1 << *(_BYTE *)(v73 + 32);
  v61 = (unint64_t)(63 - v23) >> 6;
  v26 = v21 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  v74 = 0;
  v68 = v12;
  v63 = v21;
  if (!v25)
    goto LABEL_9;
LABEL_8:
  v27 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  v28 = v27 | (v74 << 6);
  while (1)
  {
    v37 = v73;
    v38 = *(_QWORD *)(v69 + 72);
    v39 = v64;
    sub_23FC092BC(v64, *(_QWORD *)(v73 + 48) + v38 * v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16));
    v40 = v66;
    *(_QWORD *)(v39 + *(int *)(v66 + 48)) = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v28);
    v41 = v39;
    v42 = v65;
    sub_23FC08FD8(v41, v65, &qword_256F5DAA8);
    v43 = *(int *)(v40 + 48);
    v44 = v71;
    v45 = (uint64_t *)(v71 + *(int *)(v72 + 48));
    sub_23FC091E8(v71, v42);
    v75 = *(_QWORD *)(v42 + v43);
    swift_bridgeObjectRetain();
    sub_23FBFD684(&qword_256F5DAB8);
    sub_23FBFD684(&qword_256F5DAC0);
    swift_dynamicCast();
    v46 = v70;
    sub_23FC091E8(v70, v44);
    v47 = *v45;
    v48 = v67;
    sub_23FC091E8(v67, v46);
    v49 = (uint64_t)v68;
    sub_23FC091E8((uint64_t)v68, v48);
    v50 = v63;
    sub_23FBFEE2C(&qword_256F5DAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
    v51 = sub_23FD74BB8();
    v52 = -1 << *(_BYTE *)(v50 + 32);
    v53 = v51 & ~v52;
    v54 = v53 >> 6;
    if (((-1 << v53) & ~*(_QWORD *)(v26 + 8 * (v53 >> 6))) == 0)
    {
      v56 = 0;
      v57 = (unint64_t)(63 - v52) >> 6;
      while (++v54 != v57 || (v56 & 1) == 0)
      {
        v58 = v54 == v57;
        if (v54 == v57)
          v54 = 0;
        v56 |= v58;
        v59 = *(_QWORD *)(v26 + 8 * v54);
        if (v59 != -1)
        {
          v55 = __clz(__rbit64(~v59)) + (v54 << 6);
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v55 = __clz(__rbit64((-1 << v53) & ~*(_QWORD *)(v26 + 8 * (v53 >> 6)))) | v53 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
    *(_QWORD *)(v26 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
    sub_23FC091E8(*(_QWORD *)(v50 + 48) + v55 * v38, v49);
    *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8 * v55) = v47;
    ++*(_QWORD *)(v50 + 16);
    if (v25)
      goto LABEL_8;
LABEL_9:
    v29 = v74 + 1;
    if (__OFADD__(v74, 1))
      goto LABEL_42;
    if (v29 >= v61)
      goto LABEL_40;
    v30 = *(_QWORD *)(v62 + 8 * v29);
    v31 = v74 + 1;
    if (!v30)
    {
      sub_23FC09294();
      if (v32 == v33)
        goto LABEL_40;
      sub_23FC09288();
      if (!v30)
      {
        sub_23FC09294();
        if (v32 == v33)
          goto LABEL_40;
        sub_23FC09288();
        if (!v30)
        {
          sub_23FC09294();
          if (v32 == v33)
            goto LABEL_40;
          sub_23FC09288();
          if (!v30)
            break;
        }
      }
    }
LABEL_28:
    v25 = (v30 - 1) & v30;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
    v74 = v31;
  }
  v35 = v34 + 4;
  if (v35 >= v61)
  {
LABEL_40:
    swift_release();
    sub_23FC08F30();
    return;
  }
  v30 = *(_QWORD *)(v62 + 8 * v35);
  if (v30)
  {
    v31 = v35;
    goto LABEL_28;
  }
  while (!__OFADD__(v35, 1))
  {
    sub_23FC09294();
    if (v32 == v33)
      goto LABEL_40;
    sub_23FC09288();
    v35 = v36 + 1;
    if (v30)
      goto LABEL_28;
  }
LABEL_43:
  __break(1u);
}

unint64_t sub_23FC06844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t result;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t *v33;
  __int128 *v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int64_t v45;
  uint64_t v46;
  __int128 *v47;
  uint64_t *v48;
  __int128 *v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  _QWORD v53[5];
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];

  v50 = sub_23FBFD684(&qword_256F5DB18);
  v3 = MEMORY[0x24BDAC7A8](v50, v2);
  v48 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v43 - v6;
  v51 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23FBFD684(&qword_256F5DB20);
    v8 = (_QWORD *)sub_23FD7526C();
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v9 = *(_QWORD *)(v51 + 64);
  v46 = v51 + 64;
  v10 = -1 << *(_BYTE *)(v51 + 32);
  if (-v10 < 64)
    v11 = ~(-1 << -(char)v10);
  else
    v11 = -1;
  v12 = v11 & v9;
  v43 = -1 << *(_BYTE *)(v51 + 32);
  v45 = (unint64_t)(63 - v10) >> 6;
  v49 = (__int128 *)v53;
  v47 = (__int128 *)&v55;
  v44 = v8 + 8;
  result = swift_bridgeObjectRetain();
  v52 = 0;
  while (1)
  {
    while (1)
    {
      if (v12)
      {
        v14 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v15 = v14 | (v52 << 6);
      }
      else
      {
        v16 = v52 + 1;
        if (__OFADD__(v52, 1))
          goto LABEL_34;
        if (v16 >= v45)
        {
LABEL_31:
          sub_23FC08F30();
          return (unint64_t)v8;
        }
        v17 = *(_QWORD *)(v46 + 8 * v16);
        v18 = v52 + 1;
        if (!v17)
        {
          v18 = v52 + 2;
          if (v52 + 2 >= v45)
            goto LABEL_31;
          v17 = *(_QWORD *)(v46 + 8 * v18);
          if (!v17)
          {
            v18 = v52 + 3;
            if (v52 + 3 >= v45)
              goto LABEL_31;
            v17 = *(_QWORD *)(v46 + 8 * v18);
            if (!v17)
            {
              v18 = v52 + 4;
              if (v52 + 4 >= v45)
                goto LABEL_31;
              v17 = *(_QWORD *)(v46 + 8 * v18);
              if (!v17)
              {
                v19 = v52 + 5;
                if (v52 + 5 >= v45)
                  goto LABEL_31;
                v17 = *(_QWORD *)(v46 + 8 * v19);
                if (!v17)
                {
                  while (1)
                  {
                    v18 = v19 + 1;
                    if (__OFADD__(v19, 1))
                      goto LABEL_35;
                    if (v18 >= v45)
                      goto LABEL_31;
                    v17 = *(_QWORD *)(v46 + 8 * v18);
                    ++v19;
                    if (v17)
                      goto LABEL_25;
                  }
                }
                v18 = v52 + 5;
              }
            }
          }
        }
LABEL_25:
        v12 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v18 << 6);
        v52 = v18;
      }
      v20 = *(_QWORD *)(v51 + 56);
      v21 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 16 * v15);
      v22 = *v21;
      v23 = v21[1];
      v24 = sub_23FD74798();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = v20 + *(_QWORD *)(v25 + 72) * v15;
      v27 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(&v7[*(int *)(v50 + 48)], v26, v24);
      *(_QWORD *)v7 = v22;
      *((_QWORD *)v7 + 1) = v23;
      v28 = v48;
      sub_23FC08FD8((uint64_t)v7, (uint64_t)v48, &qword_256F5DB18);
      v29 = (char *)v28 + *(int *)(v27 + 48);
      v31 = *v28;
      v30 = v28[1];
      v53[3] = v24;
      v53[4] = MEMORY[0x24BEB9A10];
      v32 = v49;
      v33 = sub_23FBFDDEC((uint64_t *)v49);
      (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 32))(v33, v29, v24);
      v34 = v47;
      sub_23FBFDE28(v32, (uint64_t)v47);
      sub_23FBFDE28(v34, (uint64_t)v56);
      sub_23FBFDE28(v56, (uint64_t)&v54);
      swift_bridgeObjectRetain();
      result = sub_23FC84D84(v31, v30);
      v35 = result;
      if ((v36 & 1) == 0)
        break;
      v37 = (uint64_t *)(v8[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v37 = v31;
      v37[1] = v30;
      v38 = v8[7] + 40 * v35;
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v38);
      result = sub_23FBFDE28(&v54, v38);
    }
    if (v8[2] >= v8[3])
      break;
    *(_QWORD *)((char *)v44 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v39 = (uint64_t *)(v8[6] + 16 * result);
    *v39 = v31;
    v39[1] = v30;
    result = sub_23FBFDE28(&v54, v8[7] + 40 * result);
    v40 = v8[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_33;
    v8[2] = v42;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void ToolInvocationSummaryRetriever.__allocating_init(toolExecutionSession:sessionId:)()
{
  sub_23FC0927C();
  swift_allocObject();
  swift_defaultActor_initialize();
  sub_23FC09270();
  sub_23FC09264(OBJC_IVAR____TtC23IntelligenceFlowRuntime30ToolInvocationSummaryRetriever_sessionId);
  sub_23FC09258();
}

void ToolInvocationSummaryRetriever.init(toolExecutionSession:sessionId:)()
{
  sub_23FC0927C();
  swift_defaultActor_initialize();
  sub_23FC09270();
  sub_23FC09264(OBJC_IVAR____TtC23IntelligenceFlowRuntime30ToolInvocationSummaryRetriever_sessionId);
  sub_23FC09258();
}

uint64_t sub_23FC06D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionIdentityPack(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC06D50(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23FC091F0(a1, a2);
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = sub_23FC0901C();
  v4 = sub_23FD738B0();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = sub_23FC0901C();
  v5 = sub_23FC092A0();
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC06DC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC09134();
  sub_23FD738A4();
  sub_23FD7388C();
  v1 = sub_23FD74B4C();
  sub_23FC06844(v1);
  swift_bridgeObjectRelease();
  sub_23FD74480();
  sub_23FC090C8(*(_QWORD *)(v0 + 80));
  v2 = (_QWORD *)swift_task_alloc();
  v3 = sub_23FC091CC(v2);
  return sub_23FC090A4(v3, v4);
}

uint64_t sub_23FC06F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC090E0();
  sub_23FC090C8(*(_QWORD *)(v0 + 104));
  if (v1)
  {
    sub_23FC09208();
    return sub_23FC0906C();
  }
  else
  {
    sub_23FC09238();
    sub_23FC090D0();
    sub_23FC090C0();
    return sub_23FC090D8(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_23FC06FAC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23FC091F0(a1, a2);
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = sub_23FC0901C();
  v4 = sub_23FD73C7C();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = sub_23FC0901C();
  v5 = sub_23FC092A0();
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC07020()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC09134();
  sub_23FD73C58();
  v1 = sub_23FD73C40();
  sub_23FC07AC4(v1);
  swift_bridgeObjectRelease();
  sub_23FD74480();
  sub_23FC090C8(*(_QWORD *)(v0 + 80));
  v2 = (_QWORD *)swift_task_alloc();
  v3 = sub_23FC091CC(v2);
  return sub_23FC090A4(v3, v4);
}

uint64_t sub_23FC071A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC090E0();
  sub_23FC090C8(*(_QWORD *)(v0 + 104));
  if (v1)
  {
    sub_23FC09208();
    return sub_23FC0906C();
  }
  else
  {
    sub_23FC09238();
    sub_23FC090D0();
    sub_23FC090C0();
    return sub_23FC090D8(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_23FC07204()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FC091AC();
  sub_23FC09248();
  sub_23FC09248();
  sub_23FD72BE4();
  v3 = sub_23FC09250();
  if (sub_23FC09114(v3))
  {
    v4 = (uint8_t *)sub_23FBFEFF4();
    v5 = (_QWORD *)sub_23FBFEFF4();
    *(_DWORD *)v4 = 138412290;
    sub_23FC09248();
    v6 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v1 + 16) = v6;
    sub_23FD75044();
    *v5 = v6;
    sub_23FC0917C();
    sub_23FC0917C();
    _os_log_impl(&dword_23FBF8000, v0, v2, "ToolInvocationSummaryRetriever: Error fetching action summary - %@", v4, 0xCu);
    sub_23FBFD684(&qword_254346A30);
    sub_23FC09124();
    sub_23FBFEFA0();
  }
  sub_23FC0917C();
  sub_23FC0917C();
  sub_23FC0917C();

  sub_23FC090C8(*(_QWORD *)(v1 + 56));
  v7 = sub_23FC09200();
  sub_23FC0902C(v7);
  sub_23FC090D0();
  sub_23FC090C0();
  return sub_23FC090D8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23FC07344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for SessionID(0);
  v3[5] = sub_23FC0901C();
  v3[6] = type metadata accessor for ToolInvocationSummaryOutput(0);
  v3[7] = sub_23FC0901C();
  v3[8] = type metadata accessor for ToolInvocationSummaryInput(0);
  v3[9] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC073B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[9];
  v3 = v0[4];
  v2 = v0[5];
  v4 = v0[3];
  v5 = sub_23FC092A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v4, v5);
  sub_23FC08F38(v3 + OBJC_IVAR____TtC23IntelligenceFlowRuntime30ToolInvocationSummaryRetriever_sessionId, v2);
  sub_23FD7142C();
  v0[10] = v6;
  v7 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v2, v7);
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = v8;
  sub_23FBFEE2C(&qword_256F5DAE8, type metadata accessor for ToolInvocationSummaryInput, (uint64_t)&protocol conformance descriptor for ToolInvocationSummaryInput);
  sub_23FBFEE2C(&qword_256F5DAF0, type metadata accessor for ToolInvocationSummaryInput, (uint64_t)&protocol conformance descriptor for ToolInvocationSummaryInput);
  sub_23FBFEE2C(&qword_256F5DAF8, type metadata accessor for ToolInvocationSummaryOutput, (uint64_t)&protocol conformance descriptor for ToolInvocationSummaryOutput);
  sub_23FBFEE2C(&qword_256F5DB00, type metadata accessor for ToolInvocationSummaryOutput, (uint64_t)&protocol conformance descriptor for ToolInvocationSummaryOutput);
  *v8 = v0;
  v8[1] = sub_23FC07538;
  return sub_23FD714C8();
}

uint64_t sub_23FC07538()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23FC0906C();
}

uint64_t sub_23FC075B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 16);
  sub_23FBFEF18(*(_QWORD *)(v0 + 72), type metadata accessor for ToolInvocationSummaryInput);
  v3 = sub_23FC09200();
  sub_23FC092BC(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, 0, 1, v3);
  sub_23FC090D0();
  sub_23FC090C0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC07650()
{
  uint64_t v0;

  sub_23FBFEF18(*(_QWORD *)(v0 + 72), type metadata accessor for ToolInvocationSummaryInput);
  sub_23FC090D0();
  sub_23FC090C0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC076B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23FD71900();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_23FD745E8();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC07750()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FBFDE40((_QWORD *)(*(_QWORD *)(v0 + 32) + 112), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 136));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_23FC077CC;
  return sub_23FD73BB0();
}

uint64_t sub_23FC077CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return sub_23FC0906C();
}

uint64_t sub_23FC0782C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 48);
  v16 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 16);
  sub_23FC092BC(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v6 = sub_23FD745D0();
  v8 = v7;
  v9 = sub_23FD745DC();
  sub_23FC080F4(v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  MEMORY[0x2426756A8](v6, v8, v11);
  v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v1, v3);
  v12(v2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v5, v16);
  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC07920()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ToolInvocationSummaryRetriever.deinit()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 112);
  sub_23FBFEF18(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime30ToolInvocationSummaryRetriever_sessionId, type metadata accessor for SessionIdentityPack);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ToolInvocationSummaryRetriever.__deallocating_deinit()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 112);
  sub_23FBFEF18(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime30ToolInvocationSummaryRetriever_sessionId, type metadata accessor for SessionIdentityPack);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ToolInvocationSummaryRetriever.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC079E4()
{
  return ToolInvocationSummaryRetriever.unownedExecutor.getter();
}

uint64_t sub_23FC079FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23FBFEF9C;
  return sub_23FC06D50(a1, a2);
}

uint64_t sub_23FC07A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23FBFEF9C;
  return sub_23FC06FAC(a1, a2);
}

void sub_23FC07AC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  BOOL v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  int v65;
  char *v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77[2];
  __int128 v78;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v2 = sub_23FD73730();
  v70 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v69 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23FD74798();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62, v5);
  v60 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_23FBFD684(&qword_256F5DAD0);
  v8 = MEMORY[0x24BDAC7A8](v68, v7);
  v59 = (_QWORD *)((char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v67 = (_QWORD *)((char *)v57 - v12);
  MEMORY[0x24BDAC7A8](v11, v13);
  v66 = (char *)v57 - v14;
  v83 = MEMORY[0x24BEE4B00];
  sub_23FCCB7C8(a1, v79);
  v71 = v79[0];
  v63 = v79[1];
  v72 = v81;
  v15 = v82;
  v57[1] = v80;
  v64 = (unint64_t)(v80 + 64) >> 6;
  v65 = *MEMORY[0x24BE55998];
  swift_bridgeObjectRetain();
  v58 = v2;
  v16 = v68;
  if (!v15)
    goto LABEL_3;
LABEL_2:
  v73 = (v15 - 1) & v15;
  v17 = __clz(__rbit64(v15)) | (v72 << 6);
  while (1)
  {
    v22 = *(_QWORD *)(v71 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v71 + 48) + 16 * v17);
    v25 = *v23;
    v24 = v23[1];
    v26 = sub_23FD73C28();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = v22 + *(_QWORD *)(v27 + 72) * v17;
    v29 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(&v66[*(int *)(v16 + 48)], v28, v26);
    *v29 = v25;
    v29[1] = v24;
    v30 = v67;
    sub_23FC08FD8((uint64_t)v29, (uint64_t)v67, &qword_256F5DAD0);
    v31 = (char *)v30 + *(int *)(v16 + 48);
    swift_bridgeObjectRetain();
    v32 = v69;
    sub_23FD73C1C();
    v33 = v70;
    v34 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v32, v2);
    if (v34 != v65)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v2);
      sub_23FBFEF74((uint64_t)v30, &qword_256F5DAD0);
      goto LABEL_33;
    }
    (*(void (**)(char *, uint64_t))(v33 + 96))(v32, v2);
    v35 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
    v36 = v60;
    v37 = v32;
    v38 = v62;
    v35(v60, v37, v62);
    v75 = v38;
    v76 = MEMORY[0x24BEB9A10];
    v39 = sub_23FBFDDEC((uint64_t *)&v74);
    v35((char *)v39, v36, v38);
    sub_23FBFDE28(&v74, (uint64_t)&v78);
    v40 = v59;
    v41 = (char *)v59 + *(int *)(v16 + 48);
    v42 = *v30;
    v43 = v30[1];
    *v59 = *v30;
    v40[1] = v43;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v41, v31, v26);
    sub_23FBFDE28(&v78, (uint64_t)v77);
    v44 = v83;
    v45 = *(_QWORD *)(v83 + 16);
    if (*(_QWORD *)(v83 + 24) <= v45)
    {
      sub_23FC547DC(v45 + 1, 1);
      v44 = v83;
    }
    sub_23FD7544C();
    sub_23FD74C30();
    v46 = sub_23FD75470();
    v47 = v44 + 64;
    v48 = -1 << *(_BYTE *)(v44 + 32);
    v49 = v46 & ~v48;
    v50 = v49 >> 6;
    if (((-1 << v49) & ~*(_QWORD *)(v44 + 64 + 8 * (v49 >> 6))) == 0)
      break;
    v51 = __clz(__rbit64((-1 << v49) & ~*(_QWORD *)(v44 + 64 + 8 * (v49 >> 6)))) | v49 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
    *(_QWORD *)(v47 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
    v56 = (_QWORD *)(*(_QWORD *)(v44 + 48) + 16 * v51);
    *v56 = v42;
    v56[1] = v43;
    sub_23FBFDE28(v77, *(_QWORD *)(v44 + 56) + 40 * v51);
    ++*(_QWORD *)(v44 + 16);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v41, v26);
    v2 = v58;
LABEL_33:
    v15 = v73;
    if (v73)
      goto LABEL_2;
LABEL_3:
    v18 = v72 + 1;
    if (__OFADD__(v72, 1))
      goto LABEL_37;
    if (v18 >= v64)
      goto LABEL_35;
    v19 = *(_QWORD *)(v63 + 8 * v18);
    v20 = v72 + 1;
    if (!v19)
    {
      v20 = v72 + 2;
      if (v72 + 2 >= v64)
        goto LABEL_35;
      v19 = *(_QWORD *)(v63 + 8 * v20);
      if (!v19)
      {
        v20 = v72 + 3;
        if (v72 + 3 >= v64)
          goto LABEL_35;
        v19 = *(_QWORD *)(v63 + 8 * v20);
        if (!v19)
        {
          v20 = v72 + 4;
          if (v72 + 4 >= v64)
            goto LABEL_35;
          v19 = *(_QWORD *)(v63 + 8 * v20);
          if (!v19)
          {
            v20 = v72 + 5;
            if (v72 + 5 >= v64)
              goto LABEL_35;
            v19 = *(_QWORD *)(v63 + 8 * v20);
            if (!v19)
            {
              v21 = v72 + 6;
              while (v21 < v64)
              {
                v19 = *(_QWORD *)(v63 + 8 * v21++);
                if (v19)
                {
                  v20 = v21 - 1;
                  goto LABEL_18;
                }
              }
LABEL_35:
              sub_23FC08F30();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    v73 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
    v72 = v20;
  }
  v52 = 0;
  v53 = (unint64_t)(63 - v48) >> 6;
  while (++v50 != v53 || (v52 & 1) == 0)
  {
    v54 = v50 == v53;
    if (v50 == v53)
      v50 = 0;
    v52 |= v54;
    v55 = *(_QWORD *)(v47 + 8 * v50);
    if (v55 != -1)
    {
      v51 = __clz(__rbit64(~v55)) + (v50 << 6);
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_23FC080F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  BOOL v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  int64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;

  v2 = sub_23FD745C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v72 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FBFD684(&qword_256F5DB08);
  MEMORY[0x24BDAC7A8](v6, v7);
  v71 = (uint64_t)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23FD718C4();
  v69 = *(_QWORD *)(v76 - 8);
  v10 = MEMORY[0x24BDAC7A8](v76, v9);
  v68 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v65 = (char *)v60 - v13;
  v14 = sub_23FBFD684(&qword_256F5DB10);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v64 = (_QWORD *)((char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v74 = (char *)v60 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v70 = (char *)v60 - v22;
  v82 = MEMORY[0x24BEE4B00];
  sub_23FCCB7C8(a1, v78);
  v73 = v78[0];
  v66 = v78[1];
  v75 = v80;
  v23 = v81;
  v60[0] = v79;
  v67 = (unint64_t)(v79 + 64) >> 6;
  swift_bridgeObjectRetain();
  v62 = v2;
  v61 = v3;
  v63 = v14;
  while (1)
  {
    while (1)
    {
      if (v23)
      {
        v77 = (v23 - 1) & v23;
        v24 = (uint64_t *)v74;
        v25 = __clz(__rbit64(v23)) | (v75 << 6);
      }
      else
      {
        v24 = (uint64_t *)v74;
        v26 = v75 + 1;
        if (__OFADD__(v75, 1))
          goto LABEL_36;
        if (v26 >= v67)
          goto LABEL_34;
        v27 = *(_QWORD *)(v66 + 8 * v26);
        v28 = v75 + 1;
        if (!v27)
        {
          v28 = v75 + 2;
          if (v75 + 2 >= v67)
            goto LABEL_34;
          v27 = *(_QWORD *)(v66 + 8 * v28);
          if (!v27)
          {
            v28 = v75 + 3;
            if (v75 + 3 >= v67)
              goto LABEL_34;
            v27 = *(_QWORD *)(v66 + 8 * v28);
            if (!v27)
            {
              v28 = v75 + 4;
              if (v75 + 4 >= v67)
                goto LABEL_34;
              v27 = *(_QWORD *)(v66 + 8 * v28);
              if (!v27)
              {
                v28 = v75 + 5;
                if (v75 + 5 >= v67)
                  goto LABEL_34;
                v27 = *(_QWORD *)(v66 + 8 * v28);
                if (!v27)
                {
                  v29 = v75 + 6;
                  while (v29 < v67)
                  {
                    v27 = *(_QWORD *)(v66 + 8 * v29++);
                    if (v27)
                    {
                      v28 = v29 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_34:
                  sub_23FC08F30();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        v77 = (v27 - 1) & v27;
        v25 = __clz(__rbit64(v27)) + (v28 << 6);
        v75 = v28;
      }
      v30 = (uint64_t *)(*(_QWORD *)(v73 + 48) + 16 * v25);
      v31 = *v30;
      v32 = v30[1];
      v33 = v70;
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      v34(&v70[*(int *)(v14 + 48)], *(_QWORD *)(v73 + 56) + *(_QWORD *)(v3 + 72) * v25, v2);
      *v33 = v31;
      v33[1] = v32;
      sub_23FC08FD8((uint64_t)v33, (uint64_t)v24, &qword_256F5DB10);
      v35 = (char *)v24 + *(int *)(v14 + 48);
      v36 = v72;
      v34(v72, (unint64_t)v35, v2);
      swift_bridgeObjectRetain();
      v37 = v71;
      sub_23FC08710(v36, v71);
      v38 = v14;
      v39 = v76;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v37, 1, v76) != 1)
        break;
      sub_23FBFEF74((uint64_t)v24, &qword_256F5DB10);
      sub_23FBFEF74(v37, &qword_256F5DB08);
      v14 = v38;
      v23 = v77;
    }
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 32);
    v41 = v65;
    v40(v65, v37, v39);
    v42 = v64;
    v43 = (char *)v64 + *(int *)(v38 + 48);
    v44 = *v24;
    v45 = v24[1];
    v46 = v43;
    *v64 = v44;
    v42[1] = v45;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v43, v35, v2);
    v40(v68, (uint64_t)v41, v39);
    v47 = v82;
    if (*(_QWORD *)(v82 + 24) <= *(_QWORD *)(v82 + 16))
    {
      sub_23FC54A64();
      v47 = v82;
    }
    sub_23FD7544C();
    sub_23FD74C30();
    v48 = sub_23FD75470();
    v49 = v47 + 64;
    v50 = -1 << *(_BYTE *)(v47 + 32);
    v51 = v48 & ~v50;
    v52 = v51 >> 6;
    v14 = v63;
    if (((-1 << v51) & ~*(_QWORD *)(v47 + 64 + 8 * (v51 >> 6))) == 0)
      break;
    v53 = __clz(__rbit64((-1 << v51) & ~*(_QWORD *)(v47 + 64 + 8 * (v51 >> 6)))) | v51 & 0x7FFFFFFFFFFFFFC0;
    v54 = v76;
LABEL_33:
    *(_QWORD *)(v49 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
    v59 = (_QWORD *)(*(_QWORD *)(v47 + 48) + 16 * v53);
    *v59 = v44;
    v59[1] = v45;
    v40((char *)(*(_QWORD *)(v47 + 56) + *(_QWORD *)(v69 + 72) * v53), (uint64_t)v68, v54);
    ++*(_QWORD *)(v47 + 16);
    v3 = v61;
    v2 = v62;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v62);
    v23 = v77;
  }
  v55 = 0;
  v56 = (unint64_t)(63 - v50) >> 6;
  v54 = v76;
  while (++v52 != v56 || (v55 & 1) == 0)
  {
    v57 = v52 == v56;
    if (v52 == v56)
      v52 = 0;
    v55 |= v57;
    v58 = *(_QWORD *)(v49 + 8 * v52);
    if (v58 != -1)
    {
      v53 = __clz(__rbit64(~v58)) + (v52 << 6);
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_23FC08710@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  void (*v32)(uint64_t *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  uint8_t *v53;
  uint64_t v54;
  _QWORD v55[2];
  uint8_t *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v65 = a2;
  v3 = sub_23FD72BF0();
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v62 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD745B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD745C4();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v58 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v59 = (char *)v55 - v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (_QWORD *)((char *)v55 - v20);
  v22 = sub_23FD718C4();
  v63 = *(_QWORD *)(v22 - 8);
  v64 = v22;
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v26 = (char *)v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)v55 - v28;
  v30 = a1;
  v31 = a1;
  v32 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16);
  v32(v21, (uint64_t)v31, v11);
  v33 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v21, v11);
  if (v33 == *MEMORY[0x24BEB93A8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v21, v11);
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v10, v21, v6);
    v34 = sub_23FD745AC();
    MEMORY[0x242675690](v34);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v30, v11);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v35 = (unsigned int *)MEMORY[0x24BE52930];
LABEL_7:
    v37 = v63;
    v38 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v26, *v35, v64);
    v39 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v39(v29, v26, v38);
    v40 = v65;
    v39((char *)v65, v29, v38);
    v41 = 0;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v40, v41, 1, v38);
  }
  v57 = v30;
  if (v33 == *MEMORY[0x24BEB93B0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v21, v11);
    sub_23FC06270(*v21);
    swift_bridgeObjectRelease();
    sub_23FD718E8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v57, v11);
    v35 = (unsigned int *)MEMORY[0x24BE52938];
    goto LABEL_7;
  }
  if (v33 == *MEMORY[0x24BEB9380])
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v21, v11);
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v10, v21, v6);
    v36 = sub_23FD745AC();
    MEMORY[0x242675684](v36);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v57, v11);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v35 = (unsigned int *)MEMORY[0x24BE52928];
    goto LABEL_7;
  }
  v43 = v62;
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v44 = v59;
  v45 = v57;
  v46 = v11;
  v32((uint64_t *)v59, (uint64_t)v57, v11);
  v47 = sub_23FD72BE4();
  v48 = sub_23FD74F54();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v67 = v63;
    *(_DWORD *)v49 = 136315138;
    v55[1] = v49 + 4;
    v56 = v49;
    v32((uint64_t *)v58, (uint64_t)v44, v46);
    v50 = sub_23FD74C0C();
    v66 = sub_23FC9DC40(v50, v51, &v67);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v52 = *(void (**)(char *, uint64_t))(v12 + 8);
    v52(v44, v46);
    v53 = v56;
    _os_log_impl(&dword_23FBF8000, v47, v48, "Unexpected parameter summary case from ToolKit: %s", v56, 0xCu);
    v54 = v63;
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v54, -1, -1);
    MEMORY[0x2426798D8](v53, -1, -1);

    v52(v45, v46);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);
  }
  else
  {

    v52 = *(void (**)(char *, uint64_t))(v12 + 8);
    v52(v44, v46);
    v52(v45, v46);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v61);
  }
  v38 = v64;
  v52((char *)v21, v46);
  v41 = 1;
  v40 = v65;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v40, v41, 1, v38);
}

uint64_t sub_23FC08C28(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_23FC08C5C(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_23FC08C7C(void (*a1)(void))
{
  a1();
  sub_23FBFF0A0();
}

_BYTE **sub_23FC08C98(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_23FC08CA8()
{
  _QWORD **v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23FC0927C();
  v3 = (void *)v2();
  v4 = *v1 + 8;
  sub_23FD75044();
  *v1 = v4;
  v5 = *v0;
  if (*v0)
  {
    *v5 = v3;
    *v0 = v5 + 1;
  }
  else
  {

  }
}

uint64_t dispatch thunk of ActionSummaryRetriever.actionSummary(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FC092A8();
  v0 = sub_23FC09058();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC09184(v1);
  return sub_23FC09100(v2, v3, v4, v5, v6);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FC092A8();
  v0 = sub_23FC09058();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC09184(v1);
  return sub_23FC09100(v2, v3, v4, v5, v6);
}

uint64_t sub_23FC08DD4()
{
  return type metadata accessor for ToolInvocationSummaryRetriever();
}

uint64_t type metadata accessor for ToolInvocationSummaryRetriever()
{
  uint64_t result;

  result = qword_256F5D9D8;
  if (!qword_256F5D9D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FC08E14()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionIdentityPack(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ToolInvocationSummaryRetriever()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ToolInvocationSummaryRetriever.__allocating_init(toolExecutionSession:sessionId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ToolInvocationSummaryRetriever.actionSummary(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23FC09058();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC09214(v1);
  return sub_23FC09150(v2, v3, v4);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23FC09058();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC09214(v1);
  return sub_23FC09150(v2, v3, v4);
}

uint64_t sub_23FC08F30()
{
  return swift_release();
}

uint64_t sub_23FC08F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC08F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23FC0927C();
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_23FC0922C(v4);
  *v5 = v3;
  v5[1] = sub_23FBFD8B8;
  return sub_23FC076B0(v2, v0, v1);
}

void sub_23FC08FD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23FBFD684(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_23FBFF0A0();
}

uint64_t sub_23FC0901C()
{
  return swift_task_alloc();
}

uint64_t sub_23FC0902C(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
  return swift_task_dealloc();
}

uint64_t sub_23FC09058()
{
  return swift_task_alloc();
}

uint64_t sub_23FC0906C()
{
  return swift_task_switch();
}

void sub_23FC09074()
{
  void *v0;

}

uint64_t sub_23FC0907C()
{
  return swift_task_switch();
}

uint64_t sub_23FC09088(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC090A4(uint64_t a1, uint64_t a2)
{
  return sub_23FC07344(a1, a2);
}

uint64_t sub_23FC090C0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC090C8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_23FC090D0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC090D8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC090E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23FC09100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

BOOL sub_23FC09114(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC09124()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FC09134()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[10] + 16))(v0[11], v0[4], v0[9]);
}

uint64_t sub_23FC09150(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23FC09160(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_23FD75044();
}

void sub_23FC0917C()
{
  void *v0;

}

uint64_t sub_23FC09184(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

id sub_23FC091A4()
{
  void *v0;

  return v0;
}

uint64_t sub_23FC091AC()
{
  return sub_23FD724B8();
}

void sub_23FC091B8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t sub_23FC091CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 24);
}

uint64_t sub_23FC091E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FC091F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return sub_23FD72BF0();
}

uint64_t sub_23FC09200()
{
  return sub_23FD71900();
}

uint64_t sub_23FC09214(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FC0922C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t sub_23FC09238()
{
  return swift_task_dealloc();
}

id sub_23FC09248()
{
  void *v0;

  return v0;
}

uint64_t sub_23FC09250()
{
  return sub_23FD74F54();
}

uint64_t sub_23FC09264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23FC06D0C(v1, v2 + a1);
}

uint64_t sub_23FC09270()
{
  uint64_t v0;
  __int128 *v1;

  return sub_23FBFDE28(v1, v0 + 112);
}

uint64_t sub_23FC092A0()
{
  return sub_23FD744A4();
}

uint64_t sub_23FC092BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t ToolInvocationSummaryInput.init(toolInvocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FC092DC(a1, (void (*)(_QWORD))MEMORY[0x24BEB9030], a2);
}

uint64_t ToolInvocationSummaryOutput.init(toolInvocationSummary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FC092DC(a1, (void (*)(_QWORD))MEMORY[0x24BE52980], a2);
}

uint64_t sub_23FC092DC@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  a2(0);
  sub_23FC0A050();
  return sub_23FC06104(a3, a1, v6, *(uint64_t (**)(void))(v5 + 32));
}

uint64_t ToolInvocationSummaryInput.toolInvocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23FD744A4();
  sub_23FC0A050();
  return sub_23FC06104(a1, v1, v4, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_23FC09340(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F766E496C6F6F74 && a2 == 0xEE006E6F69746163)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23FC093E8()
{
  return 0x6F766E496C6F6F74;
}

void sub_23FC0940C()
{
  sub_23FC0973C();
}

uint64_t sub_23FC09428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FC09340(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FC09450()
{
  sub_23FC0955C();
  return sub_23FD754DC();
}

uint64_t sub_23FC09478()
{
  sub_23FC0955C();
  return sub_23FD754E8();
}

void ToolInvocationSummaryInput.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFD684(&qword_256F5DB28);
  sub_23FC0A140();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FBFDE40(a1, a1[3]);
  sub_23FC0955C();
  sub_23FC0A05C();
  sub_23FD744A4();
  sub_23FBFEE2C(&qword_256F5DB38, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9030], MEMORY[0x24BEB9040]);
  sub_23FC09FF8();
  sub_23FC0A070();
  sub_23FC0A094();
}

unint64_t sub_23FC0955C()
{
  unint64_t result;

  result = qword_256F5DB30;
  if (!qword_256F5DB30)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76958, &type metadata for ToolInvocationSummaryInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DB30);
  }
  return result;
}

void ToolInvocationSummaryInput.init(from:)(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23FC0A174(a1);
  v3 = sub_23FD744A4();
  v4 = sub_23FC0A114(v3);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC0A0C4(v6, v14);
  sub_23FBFD684(&qword_256F5DB40);
  sub_23FC0A154();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_23FC0A0A8();
  v10 = type metadata accessor for ToolInvocationSummaryInput(v9);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFDE40(v1, v1[3]);
  sub_23FC0955C();
  sub_23FC0A020();
  if (!v2)
  {
    sub_23FBFEE2C(&qword_256F5DB48, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9030], MEMORY[0x24BEB9048]);
    sub_23FC09FD8();
    sub_23FC0A0E0();
    v12 = sub_23FC0A038();
    sub_23FC0A168(v12, v13, type metadata accessor for ToolInvocationSummaryInput);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v1);
  sub_23FC06000();
}

uint64_t type metadata accessor for ToolInvocationSummaryInput(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5DBD0);
}

uint64_t sub_23FC096B8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023FD83970)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_23FC0973C()
{
  sub_23FD7544C();
  sub_23FC06214();
  sub_23FD75470();
  sub_23FC06054();
}

unint64_t sub_23FC0976C()
{
  return 0xD000000000000015;
}

void sub_23FC09788(uint64_t a1@<X8>)
{
  ToolInvocationSummaryInput.init(from:)(a1);
}

void sub_23FC0979C(_QWORD *a1)
{
  ToolInvocationSummaryInput.encode(to:)(a1);
}

void sub_23FC097B0()
{
  sub_23FD7544C();
  sub_23FC06214();
  sub_23FD75470();
  sub_23FC06054();
}

uint64_t sub_23FC097E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FC096B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FC09808()
{
  sub_23FC09914();
  return sub_23FD754DC();
}

uint64_t sub_23FC09830()
{
  sub_23FC09914();
  return sub_23FD754E8();
}

void ToolInvocationSummaryOutput.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23FBFD684(&qword_256F5DB50);
  sub_23FC0A140();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FBFDE40(a1, a1[3]);
  sub_23FC09914();
  sub_23FC0A05C();
  sub_23FD71900();
  sub_23FBFEE2C(&qword_256F5DB60, (uint64_t (*)(uint64_t))MEMORY[0x24BE52980], MEMORY[0x24BE52990]);
  sub_23FC09FF8();
  sub_23FC0A070();
  sub_23FC0A094();
}

unint64_t sub_23FC09914()
{
  unint64_t result;

  result = qword_256F5DB58;
  if (!qword_256F5DB58)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76908, &type metadata for ToolInvocationSummaryOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DB58);
  }
  return result;
}

void ToolInvocationSummaryOutput.init(from:)(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23FC0A174(a1);
  v3 = sub_23FD71900();
  v4 = sub_23FC0A114(v3);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC0A0C4(v6, v14);
  sub_23FBFD684(&qword_256F5DB68);
  sub_23FC0A154();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_23FC0A0A8();
  v10 = type metadata accessor for ToolInvocationSummaryOutput(v9);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFDE40(v1, v1[3]);
  sub_23FC09914();
  sub_23FC0A020();
  if (!v2)
  {
    sub_23FBFEE2C(&qword_256F5DB70, (uint64_t (*)(uint64_t))MEMORY[0x24BE52980], MEMORY[0x24BE52998]);
    sub_23FC09FD8();
    sub_23FC0A0E0();
    v12 = sub_23FC0A038();
    sub_23FC0A168(v12, v13, type metadata accessor for ToolInvocationSummaryOutput);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v1);
  sub_23FC06000();
}

uint64_t type metadata accessor for ToolInvocationSummaryOutput(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5DC60);
}

void sub_23FC09A70(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_23FBFF0A0();
}

void sub_23FC09AB0(uint64_t a1@<X8>)
{
  ToolInvocationSummaryOutput.init(from:)(a1);
}

void sub_23FC09AC4(_QWORD *a1)
{
  ToolInvocationSummaryOutput.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for ToolInvocationSummaryInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FC09B90(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9030]);
}

uint64_t destroy for ToolInvocationSummaryInput(uint64_t a1, uint64_t a2)
{
  return sub_23FC09BC4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9030]);
}

void initializeWithCopy for ToolInvocationSummaryInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C04(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9030]);
}

void assignWithCopy for ToolInvocationSummaryInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C38(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9030]);
}

void initializeWithTake for ToolInvocationSummaryInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C6C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9030]);
}

void assignWithTake for ToolInvocationSummaryInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09CA4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9030]);
}

uint64_t getEnumTagSinglePayload for ToolInvocationSummaryInput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC09B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FC0A0F4();
  return sub_23FC0A08C(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for ToolInvocationSummaryInput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC09B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC0A0F4();
  v0 = sub_23FC0A12C();
  return sub_23FC0A084(v0, v1, v2, v3);
}

uint64_t sub_23FC09B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FC09D30(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9030]);
}

uint64_t initializeBufferWithCopyOfBuffer for ToolInvocationSummaryOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FC09B90(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52980]);
}

uint64_t sub_23FC09B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)(void);
  uint64_t v7;

  sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A050();
  return sub_23FC06104(v5, v4, v7, *v6);
}

uint64_t destroy for ToolInvocationSummaryOutput(uint64_t a1, uint64_t a2)
{
  return sub_23FC09BC4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52980]);
}

uint64_t sub_23FC09BC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  v4 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void initializeWithCopy for ToolInvocationSummaryOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C04(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52980]);
}

void sub_23FC09C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A050();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16));
  sub_23FBFF0A0();
}

void assignWithCopy for ToolInvocationSummaryOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C38(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52980]);
}

void sub_23FC09C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A050();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24));
  sub_23FBFF0A0();
}

void initializeWithTake for ToolInvocationSummaryOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C6C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52980]);
}

void sub_23FC09C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  v4 = sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23FBFF0A0();
}

void assignWithTake for ToolInvocationSummaryOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09CA4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52980]);
}

void sub_23FC09CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A050();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40));
  sub_23FBFF0A0();
}

uint64_t getEnumTagSinglePayload for ToolInvocationSummaryOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC09CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FC0A104();
  return sub_23FC0A08C(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for ToolInvocationSummaryOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC09D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC0A104();
  v0 = sub_23FC0A12C();
  return sub_23FC0A084(v0, v1, v2, v3);
}

uint64_t sub_23FC09D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FC09D30(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52980]);
}

uint64_t sub_23FC09D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolInvocationSummaryOutput.CodingKeys()
{
  return &type metadata for ToolInvocationSummaryOutput.CodingKeys;
}

uint64_t _s23IntelligenceFlowRuntime27ToolInvocationSummaryOutputV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FC09DEC + 4 * byte_23FD76690[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FC09E0C + 4 * byte_23FD76695[v4]))();
}

_BYTE *sub_23FC09DEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FC09E0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FC09E14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FC09E1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FC09E24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FC09E2C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ToolInvocationSummaryInput.CodingKeys()
{
  return &type metadata for ToolInvocationSummaryInput.CodingKeys;
}

unint64_t sub_23FC09E4C()
{
  unint64_t result;

  result = qword_256F5DC98;
  if (!qword_256F5DC98)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76828, &type metadata for ToolInvocationSummaryInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DC98);
  }
  return result;
}

unint64_t sub_23FC09E8C()
{
  unint64_t result;

  result = qword_256F5DCA0;
  if (!qword_256F5DCA0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD768E0, &type metadata for ToolInvocationSummaryOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DCA0);
  }
  return result;
}

unint64_t sub_23FC09ECC()
{
  unint64_t result;

  result = qword_256F5DCA8;
  if (!qword_256F5DCA8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76850, &type metadata for ToolInvocationSummaryOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DCA8);
  }
  return result;
}

unint64_t sub_23FC09F0C()
{
  unint64_t result;

  result = qword_256F5DCB0;
  if (!qword_256F5DCB0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76878, &type metadata for ToolInvocationSummaryOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DCB0);
  }
  return result;
}

unint64_t sub_23FC09F4C()
{
  unint64_t result;

  result = qword_256F5DCB8;
  if (!qword_256F5DCB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76798, &type metadata for ToolInvocationSummaryInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DCB8);
  }
  return result;
}

unint64_t sub_23FC09F8C()
{
  unint64_t result;

  result = qword_256F5DCC0;
  if (!qword_256F5DCC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD767C0, &type metadata for ToolInvocationSummaryInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5DCC0);
  }
  return result;
}

uint64_t sub_23FC09FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

uint64_t sub_23FC09FD8()
{
  return sub_23FD752D8();
}

uint64_t sub_23FC09FF8()
{
  return sub_23FD7532C();
}

uint64_t sub_23FC0A014@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FC0A020()
{
  return sub_23FD754B8();
}

uint64_t sub_23FC0A038()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 104) + 32))(v0, *(_QWORD *)(v1 - 88), *(_QWORD *)(v1 - 72));
}

uint64_t sub_23FC0A05C()
{
  return sub_23FD754C4();
}

uint64_t sub_23FC0A070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FC0A084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a3, a4);
}

uint64_t sub_23FC0A08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, a3);
}

uint64_t sub_23FC0A0A8()
{
  return 0;
}

void sub_23FC0A0C4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FC0A0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23FC0A0F4()
{
  return sub_23FD744A4();
}

uint64_t sub_23FC0A104()
{
  return sub_23FD71900();
}

uint64_t sub_23FC0A114(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = result;
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t sub_23FC0A12C()
{
  uint64_t v0;

  return v0;
}

void sub_23FC0A168(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC09A70(v3, *(_QWORD *)(v4 - 96), a3);
}

uint64_t sub_23FC0A174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return 0;
}

uint64_t sub_23FC0A188()
{
  uint64_t result;

  result = sub_23FD74BE8();
  qword_254346EB8 = result;
  return result;
}

uint64_t sub_23FC0A1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int domain_answer;
  int v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = sub_23FD72BF0();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x24BDAC7A8](v0, v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v16 - v7;
  v17 = 0;
  domain_answer = os_eligibility_get_domain_answer();
  if (!domain_answer)
  {
    if (v17 == 4)
      return 1;
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    v11 = sub_23FD72BE4();
    v15 = sub_23FD74F3C();
    if (!os_log_type_enabled(v11, v15))
    {
      v5 = v8;
      goto LABEL_9;
    }
    v13 = swift_slowAlloc();
    sub_23FC0A430((float *)v13, 3.8521e-34);
    sub_23FC0A448();
    *(_WORD *)(v13 + 12) = 2048;
    swift_beginAccess();
    v16 = v17;
    sub_23FD75044();
    _os_log_impl(&dword_23FBF8000, v11, v15, "DeviceEligibility: Device is not eligible for domain %llu, eligiblity: %llu", (uint8_t *)v13, 0x16u);
    v5 = v8;
    goto LABEL_8;
  }
  v10 = domain_answer;
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v11 = sub_23FD72BE4();
  v12 = sub_23FD74F54();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    sub_23FC0A430((float *)v13, 3.8521e-34);
    sub_23FC0A448();
    *(_WORD *)(v13 + 12) = 1024;
    v18 = v10;
    sub_23FC0A448();
    _os_log_impl(&dword_23FBF8000, v11, v12, "DeviceEligibility: Unable to determine eligibility for domain %llu, status: %d", (uint8_t *)v13, 0x12u);
LABEL_8:
    MEMORY[0x2426798D8](v13, -1, -1);
  }
LABEL_9:

  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  return 0;
}

float *sub_23FC0A430(float *result, float a2)
{
  uint64_t v2;

  *result = a2;
  *(_QWORD *)(v2 - 96) = 122;
  return result;
}

uint64_t sub_23FC0A448()
{
  return sub_23FD75044();
}

uint64_t sub_23FC0A450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  BOOL v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  BOOL v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v6 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v58 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v53 - v12;
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)&v53 - v16;
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v53 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v53 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v29 = (char *)&v53 - v28;
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v55 = a2;
    v56 = a3;
    v31 = a1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    v59 = *(_QWORD *)(v27 + 72);
    v57 = a1;
    swift_bridgeObjectRetain();
    v32 = v31;
    v54 = v30;
    while (1)
    {
      sub_23FC0A7F4(v32, (uint64_t)v29);
      v33 = v29[*(int *)(v6 + 36)];
      if (!(v33 >> 6))
        goto LABEL_6;
      if (v33 >> 6 == 1)
        break;
      sub_23FC0AB2C();
      if (v33 != 128)
      {
LABEL_7:
        v34 = v25[*(int *)(v6 + 36)];
        if (v34 >> 6)
        {
          if (v34 >> 6 == 1)
          {
            v34 &= 0x3Fu;
            goto LABEL_10;
          }
          sub_23FC0AB08((uint64_t)v25);
          if (v34 == 128)
          {
LABEL_27:
            sub_23FC0AB00();
            sub_23FC0AB10();
            sub_23FC0AB38();
LABEL_28:
            v41 = v57;
            sub_23FC0AAF8();
            result = swift_bridgeObjectRetain();
            v43 = 0;
            v44 = v58;
            v45 = v54;
            while (2)
            {
              v46 = v43 + 1;
              if (__OFADD__(v43, 1))
              {
                __break(1u);
                return result;
              }
              sub_23FC0A7F4(v31, (uint64_t)v17);
              v47 = v17[*(int *)(v6 + 36)];
              if (v47 >> 6)
              {
                if (v47 >> 6 == 1)
                {
                  v47 &= 0x3Fu;
                  goto LABEL_33;
                }
                sub_23FC0AB20();
                if (v47 != 129)
                {
LABEL_36:
                  v48 = v13[*(int *)(v6 + 36)];
                  if (v48 >> 6)
                  {
                    if (v48 >> 6 == 1)
                    {
                      v48 &= 0x3Fu;
                      goto LABEL_39;
                    }
                    sub_23FC0AB08((uint64_t)v13);
                    if (v48 == 128)
                    {
LABEL_54:
                      sub_23FC0AB00();
                      sub_23FC0AB4C();
                      sub_23FC0AB18();
LABEL_55:
                      sub_23FC0AAF8();
                      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v56, 1, 1, v6);
                    }
                  }
                  else
                  {
LABEL_39:
                    sub_23FC0AB08((uint64_t)v13);
                    if (!v48)
                      goto LABEL_54;
                  }
                  v49 = v44[*(int *)(v6 + 36)];
                  if (!(v49 >> 6))
                  {
                    v50 = v49 == 0;
                    goto LABEL_46;
                  }
                  if (v49 >> 6 == 1)
                  {
                    v50 = (v49 & 0x3F) == 0;
LABEL_46:
                    v51 = !v50;
                  }
                  else
                  {
                    v51 = v49 == 129;
                  }
                  sub_23FC0AB00();
                  sub_23FC0AB4C();
                  result = sub_23FC0AB18();
                  if (v51)
                    goto LABEL_55;
LABEL_51:
                  ++v43;
                  v31 += v59;
                  if (v46 == v45)
                  {
                    sub_23FC0AAF8();
                    v52 = v55;
                    swift_bridgeObjectRetain();
                    v38 = v56;
                    v39 = v41;
                    v40 = v52;
                    return sub_23FC0A874(v39, v40, v38);
                  }
                  continue;
                }
              }
              else
              {
LABEL_33:
                sub_23FC0AB20();
                if (!v47)
                  goto LABEL_36;
              }
              break;
            }
            sub_23FC0AB4C();
            result = sub_23FC0AB18();
            goto LABEL_51;
          }
        }
        else
        {
LABEL_10:
          sub_23FC0AB08((uint64_t)v25);
          if (!v34)
            goto LABEL_27;
        }
        v35 = v21[*(int *)(v6 + 36)];
        if (v35 >> 6)
        {
          if (v35 >> 6 == 1)
          {
            v36 = (v35 & 0x3F) == 0;
LABEL_19:
            v37 = !v36;
          }
          else
          {
            v37 = v35 == 129;
          }
          sub_23FC0AB00();
          sub_23FC0AB10();
          sub_23FC0AB38();
          if (v37)
            goto LABEL_28;
          goto LABEL_24;
        }
        v36 = v35 == 0;
        goto LABEL_19;
      }
LABEL_13:
      sub_23FC0AB10();
      sub_23FC0AB38();
LABEL_24:
      v32 += v59;
      if (!--v30)
      {
        a1 = v57;
        sub_23FC0AAF8();
        a2 = v55;
        a3 = v56;
        goto LABEL_26;
      }
    }
    v33 &= 0x3Fu;
LABEL_6:
    sub_23FC0AB2C();
    if (v33)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  v38 = a3;
  v39 = a1;
  v40 = a2;
  return sub_23FC0A874(v39, v40, v38);
}

uint64_t sub_23FC0A7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC0A838(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FC0A874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  char v24;
  _BOOL4 v25;
  unsigned int v26;
  uint64_t v27[2];

  v6 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)v27 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v27[0] = a3;
    v27[1] = a2;
    v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    sub_23FC0A7F4(a1 + v16, (uint64_t)v27 - v13);
    swift_bridgeObjectRetain();
    v17 = v15 - 1;
    if (v15 == 1)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      v18 = v27[0];
      sub_23FC0AAB4((uint64_t)v14, v27[0]);
      sub_23FC0AB40(v18, 0);
      return swift_bridgeObjectRelease();
    }
    v20 = *(_QWORD *)(v7 + 72);
    v21 = a1 + v20 + v16;
    while (1)
    {
      sub_23FC0A7F4(v21, (uint64_t)v11);
      v22 = *(int *)(v6 + 36);
      v23 = v14[v22];
      if (v23 >> 6)
      {
        if (v23 >> 6 == 1)
        {
          v24 = 0;
          v25 = (v23 & 0x3F) == 2;
        }
        else
        {
          v24 = 1;
          v25 = 1;
        }
      }
      else
      {
        v24 = 0;
        v25 = v23 > 1;
      }
      v26 = v11[v22];
      if (v26 >> 6)
      {
        if (v26 >> 6 != 1)
          __asm { BR              X10 }
        if ((v26 & 0x3F) != 2)
        {
          if (v25)
            goto LABEL_22;
          goto LABEL_20;
        }
      }
      else if (v26 < 2)
      {
        if (v25)
          goto LABEL_22;
        goto LABEL_20;
      }
      if ((v24 & 1) != 0)
      {
LABEL_22:
        sub_23FC0A838((uint64_t)v14);
        sub_23FC0AAB4((uint64_t)v11, (uint64_t)v14);
        goto LABEL_23;
      }
LABEL_20:
      sub_23FC0A838((uint64_t)v11);
LABEL_23:
      v21 += v20;
      if (!--v17)
        goto LABEL_3;
    }
  }
  sub_23FC0AB40(a3, 1);
  return swift_bridgeObjectRelease();
}

void sub_23FC0AAAC(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    JUMPOUT(0x23FC0AA88);
  JUMPOUT(0x23FC0AA78);
}

uint64_t sub_23FC0AAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC0AAF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC0AB00()
{
  uint64_t v0;

  return sub_23FC0A838(v0);
}

uint64_t sub_23FC0AB08(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC0A7F4(a1, v1);
}

uint64_t sub_23FC0AB10()
{
  uint64_t v0;

  return sub_23FC0A838(v0);
}

uint64_t sub_23FC0AB18()
{
  uint64_t v0;

  return sub_23FC0A838(v0);
}

uint64_t sub_23FC0AB20()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC0A7F4(v1, v0);
}

uint64_t sub_23FC0AB2C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC0A7F4(v0, v1);
}

uint64_t sub_23FC0AB38()
{
  uint64_t v0;

  return sub_23FC0A838(v0);
}

uint64_t sub_23FC0AB40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FC0AB4C()
{
  uint64_t v0;

  return sub_23FC0A838(v0);
}

uint64_t sub_23FC0AB54(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v14;

  if (a3 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_23FD75248())
  {
    v6 = 4;
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x242678EC4](v6 - 4, a3);
      }
      else
      {
        v7 = *(_QWORD *)(a3 + 8 * v6);
        swift_retain();
      }
      v8 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v14 = v7;
      v9 = a1(&v14);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return v11 & 1;
      }
      v10 = v9;
      swift_release();
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v11 = 1;
        return v11 & 1;
      }
      ++v6;
      if (v8 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v11 = 0;
  return v11 & 1;
}

void sub_23FC0AC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  NSObject *v19;
  char *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_23FC061F0();
  v4 = v3;
  v54 = v5;
  v6 = sub_23FD72044();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC0A0A8();
  v56 = sub_23FD7157C();
  v7 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_23FD71BB8();
  v10 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FC10100();
  v53 = *(_QWORD *)(v13 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC10388();
  sub_23FBFD684(&qword_256F5D538);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC10370();
  v14 = *(_QWORD *)(sub_23FD71BAC() + 16);
  swift_bridgeObjectRelease();
  if (v14 == 1)
  {
    v52 = v12;
    v15 = v13;
    v16 = sub_23FD71BAC();
    sub_23FD4BCEC(v16, v0);
    swift_bridgeObjectRelease();
    v17 = v58;
    sub_23FC100EC(v0, 1, v58);
    if (!v18)
    {
      v35 = v54;
      sub_23FC100A0(v54, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 32));
      v36 = v35;
      v37 = 0;
      v38 = 1;
      v39 = v17;
      goto LABEL_17;
    }
    sub_23FBFEF74(v0, &qword_256F5D538);
    v13 = v15;
    v12 = v52;
  }
  sub_23FD724DC();
  sub_23FC100A0((uint64_t)v12, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v19 = sub_23FD72BE4();
  v51 = sub_23FD74F54();
  v20 = v12;
  if (os_log_type_enabled(v19, (os_log_type_t)v51))
  {
    v48 = v19;
    v49 = v10;
    v50 = v13;
    v21 = (uint8_t *)sub_23FBFEFF4();
    v47 = sub_23FBFEFF4();
    v60 = v47;
    *(_DWORD *)v21 = 136315138;
    v52 = v20;
    v22 = sub_23FD71BAC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v45 = v21;
      v46 = v1;
      v59 = MEMORY[0x24BEE4AF8];
      sub_23FC9B338();
      sub_23FC102C4();
      v44[1] = v22;
      v25 = v22 + v24;
      v27 = *(_QWORD *)(v26 + 72);
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
      do
      {
        v28(v2, v25, v58);
        sub_23FD72020();
        v29 = sub_23FC103B8();
        sub_23FBFF204(v29, v30);
        v31 = v59;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC102E0();
          sub_23FC9B338();
          v31 = v59;
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_23FC10354(v32);
          sub_23FC9B338();
          v31 = v59;
        }
        *(_QWORD *)(v31 + 16) = v33 + 1;
        sub_23FC102C4();
        (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v31 + v34 + *(_QWORD *)(v7 + 72) * v33, v9, v56);
        v59 = v31;
        v25 += v27;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      v21 = v45;
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = MEMORY[0x24BEE4AF8];
    }
    v40 = MEMORY[0x242678AA4](v31, v56);
    v42 = v41;
    sub_23FC1002C();
    v43 = sub_23FC9DC40(v40, v42, &v60);
    sub_23FC10324(v43);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v55);
    sub_23FBFF114(&dword_23FBF8000, v48, (os_log_type_t)v51, "Could not extract the interpreted statement result from a system response, exactly one statement result is expected; results=%s",
      v21);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC100E4((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));

  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
  sub_23FC10304();
  v39 = v58;
LABEL_17:
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v36, v37, v38, v39);
  sub_23FC060D4();
}

void sub_23FC0B0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  unint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  int v107;
  _BOOL4 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  _QWORD v133[6];
  void (*v134)(uint64_t, uint64_t, uint64_t);
  void (*v135)(uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[4];
  unint64_t v162;
  uint64_t v163;
  uint64_t v164[3];

  sub_23FC061F0();
  v150 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  _s29ParameterDisambiguationResultVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = sub_23FBFEFAC((uint64_t)v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v146 = _s27ParameterConfirmationResultVMa(v13);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  v156 = (char *)v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FC10050();
  _s33ParameterCandidatesNotFoundResultVMa(v17);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFEFE0();
  v154 = v20;
  sub_23FC10050();
  v155 = _s15CandidateResultVMa();
  v149 = *(_QWORD *)(v155 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFEFE0();
  v148 = v23;
  sub_23FBFD684(&qword_256F5DDD8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v34, v35);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v38, v39);
  sub_23FC0FFF4();
  v158 = v40;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v41, v42);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v43, v44);
  sub_23FBFF218();
  sub_23FBFEFAC(v45);
  v46 = sub_23FD74798();
  v47 = *(_QWORD *)(v46 - 8);
  v151 = v46;
  v152 = v47;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v48, v49);
  sub_23FBFEFCC();
  v159 = v50;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v53, v54);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v55, v56);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v57, v58);
  sub_23FBFF218();
  sub_23FBFEFAC(v59);
  v60 = sub_23FD746D8();
  sub_23FBFF0B8(v60, (uint64_t)v164);
  v144 = v61;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v62, v63);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v64, v65);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v66, v67);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v68, v69);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v70, v71);
  sub_23FBFF218();
  v73 = sub_23FBFEFAC(v72);
  _s25ParameterNotAllowedResultVMa(v73);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v74, v75);
  sub_23FBFEFE0();
  v153 = v76;
  v77 = sub_23FC10050();
  v78 = _s19ParameterStepResultOMa(v77);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v79, v80);
  v81 = sub_23FC100B8();
  v160 = _s23ParameterStepEvaluationVMa(v81);
  v133[4] = *(_QWORD *)(v160 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v82, v83);
  sub_23FC10388();
  v84 = sub_23FC06250();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v85, v86);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v87, v88);
  v90 = (char *)v133 - v89;
  v91 = sub_23FC10100();
  sub_23FBFF0B8(v91, (uint64_t)&v162);
  v157 = v92;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v93, v94);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v95, v96);
  v98 = (char *)v133 - v97;
  v161[2] = v9;
  v161[3] = v7;
  v139 = v7;
  v162 = v5;
  v99 = (uint64_t)v150;
  sub_23FC10108();
  sub_23FD31038((uint64_t (*)(char *))sub_23FC0F360, (uint64_t)v161, v99);
  v101 = v100;
  sub_23FC10438();
  *(_QWORD *)&v147 = v0;
  v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
  v103 = v84;
  v143 = v90;
  v138 = v9;
  v134 = v102;
  v102((uint64_t)v90, v9, v84);
  v104 = v5;
  sub_23FC101D8();
  sub_23FC101D8();
  v150 = v98;
  v105 = sub_23FD72BE4();
  v106 = sub_23FD74F3C();
  v107 = v106;
  v108 = os_log_type_enabled(v105, v106);
  v137 = v103;
  v140 = v101;
  if (v108)
  {
    v109 = sub_23FBFEFF4();
    v135 = (void (*)(uint64_t, uint64_t))sub_23FBFEFF4();
    v164[0] = (uint64_t)v135;
    *(_DWORD *)v109 = 136315650;
    v133[5] = v109 + 4;
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v110 = (uint64_t)v143;
    v111 = sub_23FD75344();
    LODWORD(v133[0]) = v107;
    v163 = sub_23FC9DC40(v111, v112, v164);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FC103A8(v110, *(uint64_t (**)(uint64_t, uint64_t))(v147 + 8));
    *(_WORD *)(v109 + 12) = 2080;
    sub_23FC10110();
    v163 = sub_23FC10474(v139, v113, v164);
    sub_23FD75044();
    sub_23FC10248();
    *(_WORD *)(v109 + 22) = 2080;
    swift_bridgeObjectRetain();
    v114 = MEMORY[0x242678AA4]();
    *(_QWORD *)&v147 = v105;
    v116 = v115;
    sub_23FC0AAF8();
    v163 = sub_23FC9DC40(v114, v116, v164);
    sub_23FD75044();
    sub_23FC10048();
    sub_23FC102FC();
    sub_23FC10464(&dword_23FBF8000, v147, v133[0], "Matching step evaluations for statementId=%s and parameter=%s: %s", (uint8_t *)v109);
    sub_23FC1045C();
    sub_23FBFEFA0();
  }
  sub_23FC103A8((uint64_t)v143, *(uint64_t (**)(uint64_t, uint64_t))(v147 + 8));

  sub_23FC10048();
  sub_23FC10048();
  sub_23FC10138();
  if (*(_QWORD *)(v101 + 16))
  {
    v133[0] = v5;
    v164[0] = MEMORY[0x24BEE4AF8];
    sub_23FC9B658();
    sub_23FC102C4();
    v157 = *(_QWORD *)(v117 + 72);
    LODWORD(v150) = *MEMORY[0x24BEB9988];
    v147 = xmmword_23FD769D0;
    v118 = v160;
    v143 = (char *)v2;
    v145 = v78;
    v119 = sub_23FC1047C();
    sub_23FC0EDD8(v119, v120, _s23ParameterStepEvaluationVMa);
    sub_23FC0EDD8(v1 + *(int *)(v118 + 28), v2, _s19ParameterStepResultOMa);
    v121 = (char *)&loc_23FC0B84C + 4 * byte_23FD769E0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  sub_23FC0AAF8();
  v122 = MEMORY[0x24BEE4AF8];
  v123 = v141;
  sub_23FC10438();
  v134(v136, v138, v137);
  sub_23FC101D8();
  sub_23FC101D8();
  v124 = sub_23FD72BE4();
  v125 = sub_23FD74F3C();
  if (os_log_type_enabled(v124, v125))
  {
    v126 = sub_23FBFEFF4();
    v160 = sub_23FBFEFF4();
    v164[0] = v160;
    *(_DWORD *)v126 = 136315650;
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v127 = sub_23FD75344();
    v163 = sub_23FC9DC40(v127, v128, v164);
    sub_23FC10158();
    swift_bridgeObjectRelease();
    sub_23FC10220();
    *(_WORD *)(v126 + 12) = 2080;
    swift_bridgeObjectRetain();
    v163 = sub_23FC9DC40(v139, v104, v164);
    sub_23FC10158();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v126 + 22) = 2080;
    swift_bridgeObjectRetain();
    v129 = sub_23FBFD684(&qword_256F5DDE0);
    v130 = MEMORY[0x242678AA4](v122, v129);
    v132 = v131;
    sub_23FC0AAF8();
    v163 = sub_23FC9DC40(v130, v132, v164);
    sub_23FC10158();
    sub_23FC10048();
    swift_bridgeObjectRelease();
    sub_23FC10464(&dword_23FBF8000, v124, v125, "Generated candidate results for statementId=%s and parameter=%s: %s", (uint8_t *)v126);
    sub_23FC1045C();
    sub_23FBFEFA0();
  }
  sub_23FC10220();

  sub_23FC10048();
  sub_23FC10048();
  v135(v123, v142);
  sub_23FC79954();
  sub_23FC0AAF8();
  sub_23FC060D4();
}

uint64_t sub_23FC0C048@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v25;

  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC061D8();
  v12 = &a1[*(int *)(_s15CandidateResultVMa() + 20)];
  *v5 = a2;
  v5[1] = a3;
  sub_23FC1042C();
  sub_23FC10110();
  sub_23FC0C1AC();
  sub_23FBFEF18((uint64_t)v5, type metadata accessor for FeedbackLearning.CandidateParameter);
  v13 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a5, a4, v13);
  v14 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v15 = (_QWORD *)(a5 + v14[5]);
  *v15 = a2;
  v15[1] = a3;
  sub_23FC1042C();
  v16 = a5 + v14[6];
  v17 = sub_23FD72DB8();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v12, v17);
  type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  sub_23FC10304();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v18, v19, v20, v21);
  v22 = *a1;
  *(_BYTE *)(a5 + v14[8]) = v25;
  *(_BYTE *)(a5 + v14[9]) = v22;
  return sub_23FC10110();
}

void sub_23FC0C1AC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t (*v26)(_QWORD);
  int EnumCaseMultiPayload;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  sub_23FC061F0();
  v3 = v0;
  v5 = v4;
  v75 = v7;
  v76 = v6;
  v8 = sub_23FC10130();
  v74 = *(_QWORD *)(v8 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FC10100();
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_23FC0A0A8();
  type metadata accessor for FeedbackLearning.CandidateParameter(v16);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC100D4();
  v21 = v19 - v20;
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char **)((char *)&v70 - v24);
  v73 = v5;
  sub_23FC0EDD8(v5, (uint64_t)&v70 - v24, v26);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v29 = *v25;
      v28 = v25[1];
      v30 = _s33CandidateParameterResolutionStateVMa(0);
      v31 = sub_23FC102B8(*(int *)(v30 + 20));
      v32 = _s14ActionExecutedVMa(0);
      v71 = &v70;
      v72 = v1;
      v33 = v21;
      v34 = v2;
      v35 = v12;
      v36 = v13;
      v37 = *(_QWORD *)((char *)v31 + *(int *)(v32 + 20));
      MEMORY[0x24BDAC7A8](v32, v38);
      *(&v70 - 4) = v3;
      *(&v70 - 3) = v29;
      v39 = v76;
      *(&v70 - 2) = v28;
      *(&v70 - 1) = (char *)v39;
      swift_bridgeObjectRetain();
      v40 = sub_23FC0AB54((uint64_t (*)(uint64_t *))sub_23FC0ED90, (uint64_t)(&v70 - 6), v37);
      sub_23FC1002C();
      v13 = v36;
      v12 = v35;
      v2 = v34;
      v21 = v33;
      swift_bridgeObjectRelease();
      v1 = v72;
    }
    else
    {
      v41 = _s33CandidateParameterResolutionStateVMa(0);
      sub_23FC102B8(*(int *)(v41 + 20));
      v40 = sub_23FC0C804();
    }
  }
  else
  {
    sub_23FBFEF18((uint64_t)v25, type metadata accessor for FeedbackLearning.CandidateParameter);
    v40 = 0;
  }
  v42 = _s33CandidateParameterResolutionStateVMa(0);
  v43 = sub_23FC102B8(*(int *)(v42 + 24));
  v44 = *v43;
  if (!*(_QWORD *)(*v43 + 16))
    goto LABEL_17;
  swift_bridgeObjectRetain();
  sub_23FC84CD4();
  if ((v46 & 1) == 0)
  {
    sub_23FC1002C();
    goto LABEL_17;
  }
  v47 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v45);
  swift_bridgeObjectRetain();
  sub_23FC1002C();
  sub_23FCC3AC8(v73, v47);
  v49 = v48;
  swift_bridgeObjectRelease();
  if (v49 < 2)
  {
LABEL_17:
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v69 = 0;
      goto LABEL_23;
    }
    v49 = 0;
    goto LABEL_19;
  }
  v72 = v2;
  v50 = v1;
  v51 = *(_QWORD *)(v49 + 16);
  if (!v51)
  {
LABEL_14:
    if ((v40 & 1) == 0)
    {
      sub_23FC10310();
      v69 = 1;
      goto LABEL_23;
    }
    v1 = v50;
    v2 = v72;
LABEL_19:
    v56 = v74;
    sub_23FD724DC();
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v12, v76, v8);
    sub_23FC0EDD8(v73, v21, type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_23FC10108();
    v57 = v2;
    v58 = sub_23FD72BE4();
    v59 = v21;
    v60 = sub_23FD74F54();
    if (os_log_type_enabled(v58, v60))
    {
      v61 = sub_23FBFEFF4();
      v76 = sub_23FBFEFF4();
      v78 = v76;
      *(_DWORD *)v61 = 136315650;
      v71 = (_QWORD *)v13;
      sub_23FBFEE2C(&qword_256F5DD90, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54688]);
      v72 = v57;
      v62 = sub_23FD75344();
      v64 = sub_23FC1018C(v62, v63);
      sub_23FC103F0(v64);
      sub_23FD75044();
      sub_23FC1002C();
      sub_23FBFEFFC((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
      *(_WORD *)(v61 + 12) = 2080;
      v77 = v49;
      sub_23FC10108();
      sub_23FBFD684(&qword_256F5DD98);
      v65 = sub_23FD74C0C();
      v77 = sub_23FC9DC40(v65, v66, &v78);
      sub_23FD75044();
      sub_23FC10048();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 22) = 2080;
      FeedbackLearning.CandidateParameter.description.getter();
      v77 = sub_23FC1018C(v67, v68);
      sub_23FD75044();
      sub_23FC1002C();
      sub_23FBFEF18(v59, type metadata accessor for FeedbackLearning.CandidateParameter);
      sub_23FC10464(&dword_23FBF8000, v58, v60, "Marking candidate %s as executed but the candidate does not match resolved candidates %s for parameter %s", (uint8_t *)v61);
      sub_23FC1045C();
      sub_23FBFEFA0();
    }
    sub_23FBFEFFC((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
    sub_23FC10048();
    sub_23FBFEF18(v59, type metadata accessor for FeedbackLearning.CandidateParameter);

    sub_23FC10454(v57, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v69 = 3;
    goto LABEL_23;
  }
  v70 = v12;
  v71 = (_QWORD *)v13;
  sub_23FC102C4();
  v53 = v49 + v52;
  v55 = *(_QWORD *)(v54 + 72);
  sub_23FBFEE2C((unint64_t *)&qword_256F5DDA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54678]);
  sub_23FC10108();
  while ((sub_23FD74BDC() & 1) == 0)
  {
    v53 += v55;
    if (!--v51)
    {
      sub_23FC10310();
      v12 = v70;
      v13 = (uint64_t)v71;
      goto LABEL_14;
    }
  }
  sub_23FC10310();
  sub_23FC10310();
  if ((v40 & 1) != 0)
    v69 = 3;
  else
    v69 = 2;
LABEL_23:
  *v75 = v69;
  sub_23FC060D4();
}

uint64_t sub_23FC0C6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char v14;
  uint64_t v16;

  v7 = _s23ParameterStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD71558();
  sub_23FC0EDD8(a1, (uint64_t)v10, _s23ParameterStepEvaluationVMa);
  if ((v11 & 1) != 0)
  {
    if (sub_23FD731F0() == a3 && v12 == a4)
      v14 = 1;
    else
      v14 = sub_23FD75380();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  sub_23FBFEF18((uint64_t)v10, _s23ParameterStepEvaluationVMa);
  return v14 & 1;
}

uint64_t sub_23FC0C804()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  NSObject *v77;
  unint64_t v78;
  __int128 v79;
  unint64_t v80;
  unint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  NSObject *v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  uint64_t (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t result;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD v182[2];
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;

  sub_23FC061F0();
  v185 = v4;
  v186 = v5;
  v144 = v6;
  v8 = v7;
  v180 = sub_23FC10130();
  v154 = *(_QWORD *)(v180 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v11);
  v12 = sub_23FD74A2C();
  sub_23FBFF0B8(v12, (uint64_t)v182);
  v151 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v16);
  v17 = sub_23FD743F0();
  sub_23FBFF0B8(v17, (uint64_t)&v179);
  v149 = v18;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v21);
  v22 = sub_23FD74474();
  sub_23FBFF0B8(v22, (uint64_t)&v184);
  v161 = v23;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = sub_23FBFEFAC((uint64_t)&v140 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = _s19ToolboxSearchResultVMa(v27);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v29, v30);
  v172 = (uint64_t)&v140 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC10050();
  v32 = sub_23FD72BF0();
  v166 = *(_QWORD *)(v32 - 8);
  v167 = v32;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v33, v34);
  sub_23FC061D8();
  sub_23FBFD684(&qword_256F5DD88);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v35, v36);
  v178 = sub_23FC101B4();
  v171 = *(_QWORD *)(v178 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v37, v38);
  sub_23FBFEFCC();
  v169 = v39;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FBFF218();
  v165 = v42;
  sub_23FBFD684(&qword_256F5DDA8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v43, v44);
  sub_23FC100D4();
  v47 = v45 - v46;
  MEMORY[0x24BDAC7A8](v48, v49);
  sub_23FBFF218();
  v179 = v50;
  sub_23FBFD684(&qword_256F5DDB0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v53, v54);
  sub_23FBFF218();
  v153 = v55;
  v146 = sub_23FBFD684(&qword_256F5DDB8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v56, v57);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v58, v59);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v60, v61);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v62, v63);
  sub_23FC0FFF4();
  v177 = v64;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v65, v66);
  sub_23FC0FFF4();
  v170 = v67;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v68, v69);
  v71 = (char *)&v140 - v70;
  _s14ActionExecutedVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v72, v73);
  sub_23FC10118();
  v75 = *(_QWORD *)(v1 + *(int *)(v74 + 20));
  v182[1] = v8;
  swift_bridgeObjectRetain();
  v76 = sub_23FC8DFDC((uint64_t)sub_23FC0EDC0, (uint64_t)&v181, v75);
  v77 = v0;
  swift_bridgeObjectRelease();
  v173 = v3;
  sub_23FC0EDD8(v1, v3, _s14ActionExecutedVMa);
  v175 = *(_QWORD *)(v76 + 16);
  v163 = *MEMORY[0x24BE56D38];
  v158 = *MEMORY[0x24BE56D28];
  v147 = *MEMORY[0x24BE56D30];
  sub_23FC10108();
  v78 = 0;
  v174 = v76;
  v142 = v76 + 40;
  *(_QWORD *)&v79 = 136315138;
  v157 = v79;
  v156 = MEMORY[0x24BEE4AD8] + 8;
  v159 = v28;
  v168 = v2;
  v176 = v47;
  v145 = v71;
  while (1)
  {
    v80 = v175;
    if (v78 != v175)
    {
      v81 = (unint64_t *)(v142 + 16 * v78);
      v82 = (uint64_t)v179;
      do
      {
        if (v78 >= *(_QWORD *)(v174 + 16))
        {
          __break(1u);
          goto LABEL_32;
        }
        v84 = *(v81 - 1);
        v83 = *v81;
        sub_23FC10108();
        sub_23FD74114();
        v85 = v178;
        sub_23FC100EC(v2, 1, v178);
        if (v86)
        {
          sub_23FBFEF74(v2, &qword_256F5DD88);
          sub_23FD724DC();
          sub_23FC101D8();
          v87 = v77;
          sub_23FD72BE4();
          v88 = v77;
          v89 = sub_23FC09250();
          if (os_log_type_enabled(v87, v89))
          {
            v90 = sub_23FBFEFF4();
            v183 = sub_23FBFEFF4();
            *(_DWORD *)v90 = v157;
            sub_23FC10108();
            *(_QWORD *)(v90 + 4) = sub_23FC9DC40(v84, v83, &v183);
            swift_bridgeObjectRelease_n();
            sub_23FBFF114(&dword_23FBF8000, v87, v89, "Cannot find a tool definition for toolId=%s", (uint8_t *)v90);
            swift_arrayDestroy();
            sub_23FBFEFA0();
          }

          sub_23FC10048();
          (*(void (**)(NSObject *, uint64_t))(v166 + 8))(v88, v167);
          v77 = v88;
          v94 = v177;
          sub_23FC10304();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v95, v96, v97, v28);
          v2 = v168;
        }
        else
        {
          v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 32);
          v92 = v165;
          v91(v165, v2, v85);
          v93 = v92;
          v47 = v176;
          v91((uint64_t)v179 + *(int *)(v28 + 20), v93, v85);
          v82 = (uint64_t)v179;
          *v179 = v84;
          *(_QWORD *)(v82 + 8) = v83;
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v82, 0, 1, v28);
          sub_23FC10108();
          v94 = v177;
        }
        sub_23FC0F3AC(v82, v47, &qword_256F5DDA8);
        sub_23FC100EC(v47, 1, v28);
        if (v86)
        {
          sub_23FC10304();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v98, v99, v100, v180);
          goto LABEL_21;
        }
        v101 = v172;
        sub_23FC0F380(v47, v172, _s19ToolboxSearchResultVMa);
        v102 = v101 + *(int *)(v28 + 20);
        v103 = v171;
        v104 = v169;
        v105 = v178;
        sub_23FC1046C(v169, v102, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 16));
        v106 = (*(uint64_t (**)(uint64_t, uint64_t))(v103 + 88))(v104, v105);
        if (v106 == v163)
        {
          v107 = *(uint64_t (**)(uint64_t, uint64_t))(v103 + 96);
        }
        else
        {
          if (v106 != v158)
          {
            if (v106 != v147)
              goto LABEL_33;
            v114 = v77;
            v115 = *(uint64_t (**)(uint64_t, uint64_t))(v103 + 96);
            v116 = v169;
            sub_23FBFF204(v169, v115);
            v117 = v149;
            v118 = v148;
            sub_23FC100A0(v148, v116, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 32));
            v119 = v150;
            sub_23FD743E4();
            v120 = v164;
            sub_23FD74A08();
            v121 = v119;
            v113 = v120;
            (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v121, v152);
            sub_23FC100E4(v118, *(uint64_t (**)(uint64_t, uint64_t))(v117 + 8));
            sub_23FC10254();
            v28 = v159;
            v77 = v114;
            v2 = v168;
            goto LABEL_20;
          }
          v107 = *(uint64_t (**)(uint64_t, uint64_t))(v103 + 96);
          v104 = v169;
        }
        sub_23FBFF204(v104, v107);
        v108 = v161;
        v109 = v160;
        v110 = v162;
        sub_23FC1046C(v160, v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 32));
        v111 = v164;
        sub_23FD74468();
        sub_23FC10254();
        v112 = v110;
        v113 = v111;
        (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v109, v112);
LABEL_20:
        v47 = v176;
        v94 = v177;
        sub_23FC10440(v113, v177);
        sub_23FBFEF18(v172, _s19ToolboxSearchResultVMa);
        v82 = (uint64_t)v179;
LABEL_21:
        sub_23FBFEF74(v82, &qword_256F5DDA8);
        swift_bridgeObjectRelease();
        v122 = v170;
        sub_23FC10440(v94, v170);
        sub_23FC100EC(v122, 1, v180);
        if (!v86)
        {
          sub_23FC10440(v122, v153);
          v123 = 0;
          ++v78;
          goto LABEL_25;
        }
        ++v78;
        sub_23FBFEF74(v122, &qword_256F5DDB8);
        v81 += 2;
        v80 = v175;
      }
      while (v175 != v78);
    }
    v123 = 1;
    v78 = v80;
LABEL_25:
    v124 = 1;
    v125 = v153;
    v126 = v146;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v153, v123, 1, v146);
    v127 = v125;
    v128 = v155;
    sub_23FC0EE04(v127, v155, &qword_256F5DDB0);
    sub_23FC100EC(v128, 1, v126);
    v129 = (uint64_t)v145;
    if (!v86)
      break;
LABEL_28:
    v132 = v180;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v129, v124, 1, v180);
    v133 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v129, 1, v132);
    if (v133 != 1)
    {
      v134 = v154;
      v135 = v143;
      v136 = v180;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 32))(v143, v129, v180);
      v137 = sub_23FD72D88();
      v138 = v136;
      v47 = v176;
      (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v135, v138);
      if ((v137 & 1) == 0)
        continue;
    }
    sub_23FC10048();
    sub_23FBFEF18(v173, _s14ActionExecutedVMa);
    return v133 != 1;
  }
  v130 = v140;
  sub_23FC0EE04(v155, v140, &qword_256F5DDB8);
  v131 = v141;
  sub_23FC0F3AC(v130, v141, &qword_256F5DDB8);
  sub_23FC100EC(v131, 1, v180);
  if (!v86)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 32))(v129, v131, v180);
    sub_23FBFEF74(v130, &qword_256F5DDB8);
    v124 = 0;
    goto LABEL_28;
  }
LABEL_32:
  sub_23FBFEF18(v173, _s14ActionExecutedVMa);
  __break(1u);
LABEL_33:
  result = sub_23FD75374();
  __break(1u);
  return result;
}

uint64_t sub_23FC0D228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t var50[12];

  v6 = sub_23FD7157C();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)var50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFF388(v9, v12, v13, v14, v15, v16, v17, v18, var50[0], var50[1], var50[2], var50[3], var50[4], var50[5], var50[6], var50[7], var50[8], var50[9], var50[10],
    var50[11]);
  v19 = sub_23FD71558();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  if ((v19 & 1) != 0
    && (swift_bridgeObjectRetain(),
        v20 = sub_23FC0D3D4(),
        sub_23FCC3AFC(a3, a4, (uint64_t)v20),
        v22 = v21,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        v22 >= 2))
  {
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = *(_QWORD *)(sub_23FD72DB8() - 8);
      v25 = v22 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      v26 = *(_QWORD *)(v24 + 72);
      sub_23FBFEE2C((unint64_t *)&qword_256F5DDA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54678]);
      swift_bridgeObjectRetain();
      v27 = v23 - 1;
      do
      {
        v28 = v27;
        LOBYTE(v23) = sub_23FD74BDC();
        if ((v23 & 1) != 0)
          break;
        v27 = v28 - 1;
        v25 += v26;
      }
      while (v28);
      sub_23FC0EDB0(v22);
    }
    sub_23FC0EDB0(v22);
  }
  else
  {
    LOBYTE(v23) = 0;
  }
  return v23 & 1;
}

_QWORD *sub_23FC0D3D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters))
  {
    v2 = *(_QWORD **)(v0
                    + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters);
  }
  else
  {
    v2 = sub_23FC0D908(v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

#error "23FC0D4AC: call analysis failed (funcsize=51)"

void sub_23FC0D504()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23FC061F0();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23FC10100();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5DD88);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = sub_23FC101B4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  sub_23FC10118();
  sub_23FD74114();
  sub_23FC100EC(v2, 1, v14);
  if (v17)
  {
    sub_23FBFEF74(v2, &qword_256F5DD88);
    sub_23FD724DC();
    sub_23FC101D8();
    sub_23FD72BE4();
    v18 = sub_23FC09250();
    if (os_log_type_enabled(v1, v18))
    {
      v19 = (uint8_t *)sub_23FBFEFF4();
      v28 = sub_23FBFEFF4();
      *(_DWORD *)v19 = 136315138;
      sub_23FC10110();
      v21 = sub_23FC10474(v7, v20, &v28);
      sub_23FC10324(v21);
      sub_23FD75044();
      sub_23FC10248();
      sub_23FBFF114(&dword_23FBF8000, v1, v18, "Cannot find a tool definition for toolId=%s", v19);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }

    sub_23FC10048();
    sub_23FC102AC(v0);
    _s19ToolboxSearchResultVMa(0);
    sub_23FC10304();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v24, v25, v26, v27);
  }
  else
  {
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
    v22(v3, v2, v14);
    v23 = _s19ToolboxSearchResultVMa(0);
    v22((uint64_t)v9 + *(int *)(v23 + 20), v3, v14);
    *v9 = v7;
    v9[1] = v5;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v23);
    sub_23FC10110();
  }
  sub_23FC060D4();
}

void sub_23FC0D720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23FC061F0();
  v6 = v5;
  v26 = v7;
  v25 = *(_QWORD *)(sub_23FD74A2C() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC0603C();
  sub_23FD743F0();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC100B8();
  v12 = sub_23FD74474();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_23FC10274();
  v15 = sub_23FD74108();
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v16, v17);
  v18 = sub_23FC0A0A8();
  v19 = _s19ToolboxSearchResultVMa(v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v6 + *(int *)(v19 + 20), v15);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v4, v15);
  if (v20 == *MEMORY[0x24BE56D38] || v20 == *MEMORY[0x24BE56D28])
  {
    sub_23FC101A4();
    sub_23FC10234();
    sub_23FD74468();
    v21 = sub_23FC10130();
    sub_23FC103A0(v26, 0, v22, v21);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v12);
LABEL_6:
    sub_23FC060D4();
    return;
  }
  if (v20 == *MEMORY[0x24BE56D30])
  {
    sub_23FC101A4();
    sub_23FC100A0(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
    sub_23FD743E4();
    sub_23FD74A08();
    sub_23FC102AC(v25);
    sub_23FC100E4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    v23 = sub_23FC10130();
    sub_23FC103A0(v26, 0, v24, v23);
    goto LABEL_6;
  }
  sub_23FD75374();
  __break(1u);
}

_QWORD *sub_23FC0D908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE v21[16];

  v2 = sub_23FD730F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23FD73C7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for FeedbackLearning.ActionValue(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FC0EDD8(a1 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, (uint64_t)v15, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v6, v15, v2);
    v17 = sub_23FD7307C();
    v18 = sub_23FC0EE30(v17);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v15, v7);
    v19 = sub_23FD73C40();
    v18 = sub_23FC0F0A0(v19);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  }
  return v18;
}

void sub_23FC0DAAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  ValueMetadata *v36;
  uint64_t v37;

  sub_23FC061F0();
  v4 = v3;
  v5 = sub_23FC10100();
  v35 = *(_QWORD *)(v5 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC100D4();
  v10 = v8 - v9;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = ((char *)v34 - v13);
  v15 = sub_23FC10290();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  sub_23FC100B8();
  v18 = sub_23FD73730();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC0603C();
  sub_23FC100A0((uint64_t)v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v0 + 88))(v1, v18);
  if (v21 == *MEMORY[0x24BE559A0])
  {
    sub_23FC100E4((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 96));
    v22 = *v1;
    sub_23FD724DC();
    sub_23FC10110();
    sub_23FD72BE4();
    v23 = sub_23FC09250();
    if (os_log_type_enabled(v14, v23))
    {
      v24 = (uint8_t *)sub_23FBFEFF4();
      v37 = sub_23FBFEFF4();
      *(_DWORD *)v24 = 136315138;
      sub_23FC10110();
      v26 = sub_23FC10474(v22, v25, &v37);
      sub_23FC101E0(v26);
      sub_23FD75044();
      sub_23FC10248();
      sub_23FBFF114(&dword_23FBF8000, v14, v23, "Cannot generate candidate identifier for a tool parameter reference, reference=%s", v24);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }

    sub_23FC10048();
    (*(void (**)(NSObject *, uint64_t))(v35 + 8))(v14, v5);
  }
  else if (v21 == *MEMORY[0x24BE55998])
  {
    sub_23FC100E4((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 96));
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v16 + 32))(v2, v1, v15);
    sub_23FC0DE1C();
    sub_23FC10268(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  }
  else
  {
    sub_23FC10438();
    v27 = sub_23FD72BE4();
    v28 = sub_23FD74F54();
    if (os_log_type_enabled(v27, v28))
    {
      v34[2] = v5;
      v29 = (uint8_t *)sub_23FBFEFF4();
      v30 = sub_23FBFEFF4();
      *(_DWORD *)v29 = 136315138;
      v37 = v30;
      v34[1] = v29 + 4;
      v36 = &type metadata for FeedbackLearning;
      sub_23FBFD684(&qword_256F5DDC8);
      v31 = sub_23FD74C0C();
      v33 = sub_23FC9DC40(v31, v32, &v37);
      sub_23FC101E0(v33);
      sub_23FD75044();
      sub_23FC102FC();
      sub_23FBFF114(&dword_23FBF8000, v27, v28, "Cannot generate candidate identifier for a tool parameter, value=%s", v29);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v10, v5);
    (*(void (**)(uint64_t *, uint64_t))(v0 + 8))(v1, v18);
  }
  sub_23FC060D4();
}

void sub_23FC0DE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  sub_23FC061F0();
  v4 = v3;
  v62 = sub_23FC10130();
  v60 = *(_QWORD *)(v62 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  v59 = v7;
  sub_23FBFD684(&qword_256F5DDB8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFCC();
  v61 = v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v57 - v13;
  v15 = sub_23FC10100();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  sub_23FC10274();
  v18 = sub_23FD74798();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  sub_23FC10370();
  v63 = sub_23FD746D8();
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC100D4();
  v25 = v23 - v24;
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFF218();
  v64 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v1, v4, v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 88))(v1, v18) == *MEMORY[0x24BEB9988])
  {
    v61 = v25;
    v62 = v0;
    v58 = v16;
    sub_23FBFEFFC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 96));
    v29 = swift_projectBox();
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v31 = v63;
    v32 = v64;
    v30(v64, v29, v63);
    sub_23FC101F4();
    sub_23FD746CC();
    sub_23FC0E734();
    v34 = v33;
    sub_23FC1002C();
    if (v34)
    {
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v32, v31);
    }
    else
    {
      v60 = v2;
      v44 = v62;
      sub_23FD724DC();
      v45 = v61;
      v30(v61, v32, v31);
      v46 = sub_23FD72BE4();
      v47 = sub_23FD74F54();
      v48 = os_log_type_enabled(v46, v47);
      v49 = v58;
      if (v48)
      {
        v50 = (uint8_t *)sub_23FBFEFF4();
        v65 = sub_23FBFEFF4();
        *(_DWORD *)v50 = 136315138;
        v57 = v50 + 4;
        sub_23FC101D0();
        v51 = MEMORY[0x242678AA4]();
        v59 = v15;
        v52 = v45;
        v54 = v53;
        sub_23FC1002C();
        v55 = sub_23FC9DC40(v51, v54, &v65);
        sub_23FC101E0(v55);
        sub_23FD75044();
        sub_23FC102FC();
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v52, v63);
        sub_23FBFF114(&dword_23FBF8000, v46, v47, "Cannot generate a candidate identifier for a parameter value of collection type, values=%s", v50);
        sub_23FBFF10C();
        sub_23FBFEFA0();
      }

      v56 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v56(v45, v31);
      sub_23FC10454(v44, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
      v56(v64, v31);
    }
  }
  else
  {
    v36 = v59;
    v35 = v60;
    sub_23FBFEFFC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    sub_23FC0E2FC();
    v37 = v61;
    sub_23FC0F3AC((uint64_t)v14, v61, &qword_256F5DDB8);
    v38 = v62;
    sub_23FC100EC(v37, 1, v62);
    v39 = (uint64_t)v14;
    if (!v40)
    {
      v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
      v41(v36, v37, v38);
      sub_23FBFD684(&qword_256F5DDD0);
      v42 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_23FD769D0;
      v41(v43 + v42, v36, v38);
    }
    sub_23FBFEF74(v39, &qword_256F5DDB8);
  }
  sub_23FC060D4();
}

uint64_t sub_23FC0E224()
{
  uint64_t v0;

  sub_23FBFEF18(v0 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, type metadata accessor for FeedbackLearning.ActionValue);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23FC0E26C()
{
  return _s13ActionCreatedCMa(0);
}

uint64_t _s13ActionCreatedCMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5DCF8);
}

uint64_t sub_23FC0E288()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedbackLearning.ActionValue(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23FC0E2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  void (*v40)(_QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_23FC061F0();
  v1 = v0;
  v2 = sub_23FC10100();
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC100D4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFF218();
  v40 = v7;
  v8 = sub_23FC10290();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  sub_23FC100D4();
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)v38 - v14;
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)v38 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  sub_23FC10168((uint64_t)v38 - v21);
  v22 = sub_23FC1047C();
  if (v23(v22) == *MEMORY[0x24BEB9988])
  {
    v39 = v1;
    v24 = sub_23FC1047C();
    v25(v24);
    swift_release();
    sub_23FD724DC();
    sub_23FC10168((uint64_t)v19);
    v26 = sub_23FD72BE4();
    v27 = sub_23FD74F54();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)sub_23FBFEFF4();
      v43 = sub_23FBFEFF4();
      *(_DWORD *)v28 = 136315138;
      v38[2] = v28 + 4;
      v29 = sub_23FD74780();
      v31 = sub_23FC1018C(v29, v30);
      sub_23FC103F0(v31);
      sub_23FD75044();
      sub_23FC1002C();
      sub_23FC10268(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
      sub_23FBFF114(&dword_23FBF8000, v26, v27, "Attempting to extract a candidate identifier for a collection, candidate identifiers should instead be extracted from individual items, value=%s", v28);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FC10268(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));

    sub_23FC10360();
    v35 = 1;
    v34 = v39;
  }
  else
  {
    v32 = sub_23FC1047C();
    v40 = v33;
    v33(v32);
    sub_23FC10168((uint64_t)v15);
    sub_23FD72D70();
    v34 = v1;
    v35 = 0;
  }
  v36 = sub_23FC10130();
  sub_23FC103A0(v34, v35, v37, v36);
  sub_23FC060D4();
}

void sub_23FC0E734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD v43[4];
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23FC061F0();
  v2 = v1;
  v3 = sub_23FC10100();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_256F5DDB8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  v47 = v10;
  sub_23FC10050();
  v11 = sub_23FD72DB8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  sub_23FBFEFCC();
  v49 = v14;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)v43 - v17;
  v48 = sub_23FC10290();
  MEMORY[0x24BDAC7A8](v48, v19);
  sub_23FC10118();
  v20 = *(_QWORD *)(v2 + 16);
  if (v20)
  {
    v43[0] = v7;
    v43[1] = v4;
    v43[2] = v3;
    v43[3] = v2;
    sub_23FC102C4();
    v22 = v2 + v21;
    v24 = *(_QWORD *)(v23 + 72);
    v46 = v23;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
    v44 = v24;
    v45 = v25;
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x24BEE4AF8];
    v27 = v48;
    while (1)
    {
      v45(v0, v22, v27);
      v28 = v47;
      sub_23FC0E2FC();
      sub_23FC100EC(v28, 1, v11);
      if (v29)
        break;
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
      v30(v18, v28, v11);
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v49, v18, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC102E0();
        sub_23FC994FC();
        v26 = v36;
      }
      v32 = *(_QWORD *)(v26 + 16);
      v31 = *(_QWORD *)(v26 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_23FC10354(v31);
        sub_23FC994FC();
        v26 = v37;
      }
      *(_QWORD *)(v26 + 16) = v32 + 1;
      sub_23FC102C4();
      v30((char *)(v26 + v33 + *(_QWORD *)(v12 + 72) * v32), v49, v11);
      sub_23FC10454((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      v34 = sub_23FC103B8();
      v27 = v48;
      sub_23FC100E4(v34, v35);
      v22 += v44;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    v38 = sub_23FC103B8();
    sub_23FC100E4(v38, v39);
    sub_23FC102FC();
    swift_bridgeObjectRelease();
    sub_23FBFEF74(v28, &qword_256F5DDB8);
    sub_23FD724DC();
    v40 = sub_23FD72BE4();
    v41 = sub_23FD74F54();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)sub_23FBFEFF4();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_23FBF8000, v40, v41, "Cannot generate candidate identifiers for a list of values, not all values are candidate id extractable", v42, 2u);
      sub_23FBFEFA0();
    }

    sub_23FC103C8();
  }
LABEL_14:
  sub_23FC060D4();
}

uint64_t sub_23FC0EA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  sub_23FCCB7C8(a1, v19);
  v1 = v19[0];
  v2 = v19[1];
  v3 = v19[3];
  v4 = v19[4];
  v5 = (unint64_t)(v19[2] + 64) >> 6;
  result = sub_23FC10110();
  v7 = MEMORY[0x24BEE4AF8];
  if (!v4)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v9 = v8 | (v3 << 6);
  while (1)
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v9);
    if (!v14)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FC102E0();
      sub_23FC99510();
      v7 = v17;
    }
    v16 = *(_QWORD *)(v7 + 16);
    v15 = *(_QWORD *)(v7 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_23FC10354(v15);
      sub_23FC99510();
      v7 = v18;
    }
    *(_QWORD *)(v7 + 16) = v16 + 1;
    *(_QWORD *)(v7 + 8 * v16 + 32) = v14;
    result = sub_23FC103E8();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v10 >= v5)
      goto LABEL_27;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v5)
        goto LABEL_27;
      v11 = *(_QWORD *)(v2 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v5)
          goto LABEL_27;
        v11 = *(_QWORD *)(v2 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v5)
            goto LABEL_27;
          v11 = *(_QWORD *)(v2 + 8 * v12);
          if (!v11)
          {
            v12 = v3 + 5;
            if (v3 + 5 >= v5)
              goto LABEL_27;
            v11 = *(_QWORD *)(v2 + 8 * v12);
            if (!v11)
            {
              v13 = v3 + 6;
              while (v13 < v5)
              {
                v11 = *(_QWORD *)(v2 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_27:
              swift_release();
              return v7;
            }
          }
        }
      }
    }
LABEL_18:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v3 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23FC0EBF4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  v5 = sub_23FBFD684(qword_256F5DDF0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v16 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v9 = a2(v7, v7 + *(int *)(v5 + 48));
    if (v2)
    {
      sub_23FC103E8();
      sub_23FC10404();
      return v8;
    }
    v10 = v9;
    if (!v9)
      break;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FC102E0();
      sub_23FC9961C();
      v8 = v13;
    }
    v12 = *(_QWORD *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_23FC10354(v11);
      sub_23FC9961C();
      v8 = v14;
    }
    *(_QWORD *)(v8 + 16) = v12 + 1;
    *(_QWORD *)(v8 + 8 * v12 + 32) = v10;
    v7 += v16;
    if (!--v3)
    {
      sub_23FC10404();
      return v8;
    }
  }
  sub_23FC103E8();
  sub_23FC10404();
  return 0;
}

uint64_t _s19ToolboxSearchResultVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5DF78);
}

uint64_t _s33CandidateParameterResolutionStateVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5DEE0);
}

uint64_t _s14ActionExecutedVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5DE50);
}

uint64_t sub_23FC0ED90(uint64_t a1)
{
  uint64_t *v1;

  return sub_23FC0D228(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_23FC0EDB0(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23FC0EDC0(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC0D438(a1, *(_QWORD *)(v1 + 16));
}

void sub_23FC0EDD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23FBFF158(a1, a2, a3);
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23FBFF0A0();
}

void sub_23FC0EE04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23FC102D0(a1, a2, a3);
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23FBFF0A0();
}

_QWORD *sub_23FC0EE30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = sub_23FD74798();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_256F5DDC0);
  result = (_QWORD *)sub_23FD75254();
  v6 = 0;
  v38 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v31 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v33 = result;
  v34 = result + 8;
  v11 = v35;
  v12 = v36;
  v13 = v37;
  if ((v9 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v15 = v6;
  for (i = v14 | (v6 << 6); ; i = __clz(__rbit64(v18)) + (v19 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v23 = *v21;
    v22 = v21[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v11, *(_QWORD *)(v38 + 56) + *(_QWORD *)(v12 + 72) * i, v13);
    swift_bridgeObjectRetain();
    sub_23FC0DE1C();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v13);
    result = v33;
    *(_QWORD *)((char *)v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(result[6] + 16 * i);
    *v26 = v23;
    v26[1] = v22;
    *(_QWORD *)(result[7] + 8 * i) = v25;
    v27 = result[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v29;
    v6 = v15;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v17 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_24;
    if (v17 >= v32)
      return result;
    v18 = *(_QWORD *)(v31 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v32)
        return result;
      v18 = *(_QWORD *)(v31 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v32)
          return result;
        v18 = *(_QWORD *)(v31 + 8 * v19);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
    v15 = v19;
  }
  v20 = v6 + 4;
  if (v6 + 4 >= v32)
    return result;
  v18 = *(_QWORD *)(v31 + 8 * v20);
  if (v18)
  {
    v19 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v19 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v19 >= v32)
      return result;
    v18 = *(_QWORD *)(v31 + 8 * v19);
    ++v20;
    if (v18)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_23FC0F0A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;

  v2 = sub_23FD73730();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v43 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FD73C28();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v40 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_256F5DDC0);
  result = (_QWORD *)sub_23FD75254();
  v9 = 0;
  v46 = a1;
  v12 = *(_QWORD *)(a1 + 64);
  v11 = a1 + 64;
  v10 = v12;
  v13 = 1 << *(_BYTE *)(v11 - 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v10;
  v36 = v11;
  v37 = (unint64_t)(v13 + 63) >> 6;
  v38 = result + 8;
  v39 = result;
  v16 = v40;
  v17 = v41;
  v19 = v42;
  v18 = v43;
  if ((v14 & v10) == 0)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v47 = v9;
  for (i = v20 | (v9 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * i);
    v27 = *v26;
    v28 = v26[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v16, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v17 + 72) * i, v19);
    swift_bridgeObjectRetain();
    sub_23FD73C1C();
    sub_23FC0DAAC();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v45);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v19);
    result = v39;
    *(_QWORD *)((char *)v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v31 = (_QWORD *)(result[6] + 16 * i);
    *v31 = v27;
    v31[1] = v28;
    *(_QWORD *)(result[7] + 8 * i) = v30;
    v32 = result[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v34;
    v9 = v47;
    if (v15)
      goto LABEL_4;
LABEL_5:
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_24;
    if (v22 >= v37)
      return result;
    v23 = *(_QWORD *)(v36 + 8 * v22);
    v24 = v9 + 1;
    if (!v23)
    {
      v24 = v9 + 2;
      if (v9 + 2 >= v37)
        return result;
      v23 = *(_QWORD *)(v36 + 8 * v24);
      if (!v23)
      {
        v24 = v9 + 3;
        if (v9 + 3 >= v37)
          return result;
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_18:
    v15 = (v23 - 1) & v23;
    v47 = v24;
  }
  v25 = v9 + 4;
  if (v9 + 4 >= v37)
    return result;
  v23 = *(_QWORD *)(v36 + 8 * v25);
  if (v23)
  {
    v24 = v9 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v37)
      return result;
    v23 = *(_QWORD *)(v36 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23FC0F360(uint64_t a1)
{
  uint64_t *v1;

  return sub_23FC0C6F4(a1, v1[2], v1[3], v1[4]) & 1;
}

void sub_23FC0F380(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23FBFF158(a1, a2, a3);
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23FBFF0A0();
}

void sub_23FC0F3AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23FC102D0(a1, a2, a3);
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23FBFF0A0();
}

uint64_t *sub_23FC0F3D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD74120();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23FC0F464(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC0F4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FC0F508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FC0F574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23FC0F5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FC0F634()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FC0F640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74120();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23FC06098(a1, a2, v6);
  }
  else
  {
    sub_23FC1020C(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_23FC09258();
  }
}

uint64_t sub_23FC0F69C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FC0F6A8(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(sub_23FD74120() - 8) + 84) == a3)
  {
    v7 = sub_23FC0A12C();
    sub_23FC0608C(v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_23FC09258();
  }
}

uint64_t sub_23FC0F700()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74120();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23FC0F774(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD7157C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = *(int *)(a3 + 24);
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
  }
  return a1;
}

uint64_t sub_23FC0F838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + *(int *)(a2 + 20));
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + *(int *)(a2 + 24));
}

uint64_t sub_23FC0F888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = *(int *)(a3 + 24);
  v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  return a1;
}

uint64_t sub_23FC0F920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23FBFDB34((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  sub_23FBFDB34((uint64_t *)(a1 + *(int *)(a3 + 24)), (uint64_t *)(a2 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_23FC0F990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  return a1;
}

uint64_t sub_23FC0FA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v11);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  return a1;
}

uint64_t sub_23FC0FAB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FC0FAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FC06250();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23FC06098(a1, a2, v6);
  }
  else
  {
    sub_23FC1020C(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 24));
    sub_23FC09258();
  }
}

uint64_t sub_23FC0FB1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FC0FB28(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(sub_23FC06250() - 8) + 84) == a3)
  {
    v7 = sub_23FC0A12C();
    sub_23FC0608C(v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
    sub_23FC09258();
  }
}

uint64_t sub_23FC0FB80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD7157C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23FC0FBF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FD74108();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_23FC0FC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FD74108();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23FC0FCD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FD74108();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_23FC0FD48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD74108();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_23FC0FDC4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FD74108();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23FC0FE20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FD74108();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FC0FE8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FC0FE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23FC1020C(*(_QWORD *)(a1 + 8));
    sub_23FC09258();
  }
  else
  {
    v6 = sub_23FD74108();
    sub_23FC06098(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_23FC0FEF0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FC0FEFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_23FC09258();
  }
  else
  {
    v7 = sub_23FD74108();
    sub_23FC0608C(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_23FC0FF58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74108();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23FC0FFCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t sub_23FC0FFDC@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(_QWORD, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(*(_QWORD *)(v2 - 256), a1, *(_QWORD *)(v3 - 360));
}

uint64_t sub_23FC10000@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FC1000C()
{
  return swift_allocObject();
}

uint64_t sub_23FC1002C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC10048()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FC10050()
{
  return 0;
}

void sub_23FC1005C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v4 - 288);
  sub_23FC0F380(v2, a1 + v1, v3);
}

uint64_t sub_23FC10088()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 232) + 16))(v0, *(_QWORD *)(v1 - 200), *(_QWORD *)(v1 - 240));
}

uint64_t sub_23FC100A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FC100A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v0);
}

uint64_t sub_23FC100B8()
{
  return 0;
}

uint64_t sub_23FC100E4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FC100EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, a3);
}

uint64_t sub_23FC10100()
{
  return sub_23FD72BF0();
}

uint64_t sub_23FC10108()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC10110()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC10130()
{
  return sub_23FD72DB8();
}

uint64_t sub_23FC10138()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 192) + 8);
  v2 = *(_QWORD *)(v0 - 248);
  v3 = *(_QWORD *)(v0 - 384);
  *(_QWORD *)(v0 - 520) = v1;
  return v1(v2, v3);
}

uint64_t sub_23FC10158()
{
  return sub_23FD75044();
}

uint64_t sub_23FC10168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

void sub_23FC10174()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23FBFEF74(v0, v1);
}

uint64_t sub_23FC10180()
{
  return swift_projectBox();
}

uint64_t sub_23FC1018C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t sub_23FC10198@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC101A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_23FC101B4()
{
  return sub_23FD74108();
}

uint64_t sub_23FC101D0()
{
  return sub_23FD746CC();
}

uint64_t sub_23FC101D8()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23FC101E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_23FC101F4()
{
  return swift_release();
}

uint64_t sub_23FC1020C@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t sub_23FC10220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 536))(v1, v0);
}

uint64_t sub_23FC10234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0, v3, v1);
}

uint64_t sub_23FC10248()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FC10254()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, *(_QWORD *)(v1 - 136));
}

uint64_t sub_23FC10268@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FC10274()
{
  return 0;
}

uint64_t sub_23FC10290()
{
  return sub_23FD74798();
}

void sub_23FC10298()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = -127;
  sub_23FC14310();
}

uint64_t sub_23FC102AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

_QWORD *sub_23FC102B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23FBFDE40((_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 24));
}

uint64_t sub_23FC102D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23FBFD684(a3);
}

uint64_t sub_23FC102E0()
{
  return 0;
}

uint64_t sub_23FC102EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 128))(v1, v0);
}

uint64_t sub_23FC102FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC10310()
{
  uint64_t v0;

  return sub_23FC0EDB0(v0);
}

uint64_t sub_23FC10324(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_23FC1033C()
{
  uint64_t v0;

  return v0;
}

BOOL sub_23FC10354@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23FC10360()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t sub_23FC103A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, a4);
}

uint64_t sub_23FC103A8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 536) = a2;
  return a2(a1, v2);
}

uint64_t sub_23FC103B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC103C8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_23FC103E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC103F0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_23FC10404()
{
  return swift_bridgeObjectRelease();
}

void sub_23FC1040C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FBFEF74(v1, v0);
}

void sub_23FC10418()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = -127;
}

uint64_t sub_23FC1042C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FC10438()
{
  return sub_23FD724DC();
}

void sub_23FC10440(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC0EE04(a1, a2, v2);
}

uint64_t sub_23FC10448()
{
  return sub_23FD731CC();
}

uint64_t sub_23FC10454@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FC1045C()
{
  return swift_arrayDestroy();
}

void sub_23FC10464(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x20u);
}

uint64_t sub_23FC1046C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FC10474(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FC1047C()
{
  uint64_t v0;

  return v0;
}

void sub_23FC10488(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  unsigned __int8 v37;

  v35 = sub_23FC12F2C();
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v4);
  sub_23FBFF180();
  v34 = v6 - v5;
  sub_23FBFD684(&qword_256F5DDD8);
  sub_23FBFF168();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v33 - v13;
  v15 = sub_23FC10290();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  sub_23FBFF180();
  v20 = v19 - v18;
  v21 = sub_23FD746D8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  sub_23FBFF180();
  v26 = v25 - v24;
  v27 = *a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, a1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 88))(v20, v15) == *MEMORY[0x24BEB9988])
  {
    sub_23FC12F58(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96));
    v28 = swift_projectBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v28, v21);
    swift_release();
    v29 = sub_23FD746CC();
    v36 = v27;
    sub_23FC10954(v29, &v36);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v21);
  }
  else
  {
    sub_23FC12F58(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v37 = v27;
    sub_23FC106F8((char *)&v37, v14);
    sub_23FC12E68((uint64_t)v14, (uint64_t)v11, &qword_256F5DDD8);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 1, v35) != 1)
    {
      v30 = v34;
      sub_23FC12E88((uint64_t)v11, v34);
      sub_23FBFD684(&qword_256F5DDE8);
      v31 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_23FD769D0;
      sub_23FC12E88(v30, v32 + v31);
    }
    sub_23FBFEF74((uint64_t)v14, &qword_256F5DDD8);
  }
  sub_23FC060D4();
}

uint64_t sub_23FC106F8@<X0>(char *a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _BYTE *v29;
  uint64_t v30;

  v6 = sub_23FD72BF0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F5DDB8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC12F10();
  v11 = sub_23FD72DB8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  sub_23FBFF180();
  v16 = v15 - v14;
  v17 = *a1;
  sub_23FC0E2FC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, 1, v11) == 1)
  {
    v29 = a2;
    sub_23FBFEF74(v3, &qword_256F5DDB8);
    sub_23FD724DC();
    v18 = sub_23FD72BE4();
    v19 = sub_23FD74F54();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)sub_23FBFEFF4();
      v30 = sub_23FBFEFF4();
      *(_DWORD *)v20 = 136315138;
      v21 = FeedbackLearning.CandidateOutcome.description.getter();
      sub_23FC9DC40(v21, v22, &v30);
      sub_23FD75044();
      sub_23FC1002C();
      _os_log_impl(&dword_23FBF8000, v18, v19, "Cannot make a candidate result for an item with outcome %s, item is not candidateId extractable", v20, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
    v23 = sub_23FC12F2C();
    v24 = (uint64_t)v29;
    v25 = 1;
  }
  else
  {
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    v26(v16, v3, v11);
    v27 = sub_23FC12F2C();
    v26((uint64_t)&a2[*(int *)(v27 + 20)], v16, v11);
    *a2 = v17;
    v24 = (uint64_t)a2;
    v25 = 0;
    v23 = v27;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v24, v25, 1, v23);
}

uint64_t sub_23FC10954(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = sub_23FD72BF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FBFD684(&qword_256F5DDD8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = _s15CandidateResultVMa();
  v49 = *(_QWORD *)(v51 - 8);
  v14 = MEMORY[0x24BDAC7A8](v51, v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v42 - v18;
  v20 = sub_23FD74798();
  v22 = MEMORY[0x24BDAC7A8](a1, v21);
  v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
    return MEMORY[0x24BEE4AF8];
  v42 = v8;
  v43 = v5;
  v44 = v4;
  v45 = v22;
  v50 = *a2;
  v27 = v22 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  v28 = *(_QWORD *)(v23 + 72);
  v48 = v23;
  v29 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
  v46 = v28;
  v47 = v29;
  swift_bridgeObjectRetain();
  v30 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v47(v25, v27, v20);
    LOBYTE(v53) = v50;
    sub_23FC106F8((char *)&v53, v12);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v51) == 1)
      break;
    sub_23FC12E88((uint64_t)v12, (uint64_t)v19);
    sub_23FC12ECC((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))_s15CandidateResultVMa);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FC995F4();
      v30 = v32;
    }
    v31 = *(_QWORD *)(v30 + 16);
    if (v31 >= *(_QWORD *)(v30 + 24) >> 1)
    {
      sub_23FC995F4();
      v30 = v33;
    }
    *(_QWORD *)(v30 + 16) = v31 + 1;
    sub_23FC12E88((uint64_t)v16, v30+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v31);
    sub_23FBFEF18((uint64_t)v19, (uint64_t (*)(_QWORD))_s15CandidateResultVMa);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v20);
    v27 += v46;
    if (!--v26)
    {
      swift_bridgeObjectRelease();
      return v30;
    }
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23FBFEF74((uint64_t)v12, &qword_256F5DDD8);
  v34 = v42;
  sub_23FD724DC();
  v35 = sub_23FD72BE4();
  v36 = sub_23FD74F54();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v53 = v38;
    *(_DWORD *)v37 = 136315138;
    LOBYTE(v52) = v50;
    v39 = FeedbackLearning.CandidateOutcome.description.getter();
    v52 = sub_23FC9DC40(v39, v40, &v53);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v35, v36, "Cannot make a collection of candidate results for a list of items with outcome %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v38, -1, -1);
    MEMORY[0x2426798D8](v37, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v44);
  return 0;
}

uint64_t sub_23FC10D7C(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned __int8 v14;

  v4 = sub_23FBFD684(qword_256F5DDF0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v9 = sub_23FC10290();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  v8[*(int *)(v4 + 48)] = (char)a2;
  v14 = a2;
  sub_23FC10488((uint64_t)v8, &v14);
  v11 = v10;
  sub_23FBFEF74((uint64_t)v8, qword_256F5DDF0);
  return v11;
}

void sub_23FC10E38(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47[2];

  _s20DisambiguationResultOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC12F10();
  v10 = sub_23FD72BF0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_23FC12F34();
  v13 = sub_23FC1120C(a1, a2);
  if (!v13)
    goto LABEL_26;
  v14 = sub_23FC0EBF4(v13, a3);
  swift_bridgeObjectRelease();
  if (!v14)
  {
    sub_23FD724DC();
    sub_23FC12ECC(a2, v4, _s20DisambiguationResultOMa);
    swift_bridgeObjectRetain_n();
    v37 = sub_23FD72BE4();
    v38 = sub_23FD74F54();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = sub_23FBFEFF4();
      v47[0] = sub_23FBFEFF4();
      *(_DWORD *)v39 = 136315394;
      v40 = sub_23FC10290();
      v41 = swift_bridgeObjectRetain();
      v42 = MEMORY[0x242678AA4](v41, v40);
      v44 = v43;
      swift_bridgeObjectRelease();
      sub_23FC9DC40(v42, v44, v47);
      sub_23FD75044();
      sub_23FC12F4C();
      sub_23FC1002C();
      *(_WORD *)(v39 + 12) = 2080;
      sub_23FCF14A4();
      sub_23FC9DC40(v45, v46, v47);
      sub_23FD75044();
      sub_23FC1002C();
      sub_23FBFEF18(v4, _s20DisambiguationResultOMa);
      _os_log_impl(&dword_23FBF8000, v37, v38, "Cannot generate candidate results for a disambiguation, could not transform outcomes; items=%s, result=%s",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    sub_23FC12F4C();
    sub_23FBFEF18(v4, _s20DisambiguationResultOMa);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v10);
    goto LABEL_26;
  }
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_24:
    sub_23FC1002C();
LABEL_26:
    sub_23FC060D4();
    return;
  }
  swift_bridgeObjectRetain();
  v16 = 0;
  v17 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v18 = *(_QWORD *)(v14 + 8 * v16 + 32);
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v17 + 16);
    if (__OFADD__(v20, v19))
      break;
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v20 + v19 > *(_QWORD *)(v17 + 24) >> 1)
    {
      sub_23FC995F4();
      v17 = v21;
    }
    if (*(_QWORD *)(v18 + 16))
    {
      v22 = *(_QWORD *)(v17 + 16);
      v23 = (*(_QWORD *)(v17 + 24) >> 1) - v22;
      v24 = sub_23FC12F2C();
      if (v23 < v19)
        goto LABEL_29;
      v25 = *(_QWORD *)(v24 - 8);
      v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v27 = *(_QWORD *)(v25 + 72);
      v28 = v17 + v26 + v27 * v22;
      v29 = v18 + v26;
      v30 = v27 * v19;
      v31 = v28 + v30;
      v32 = v29 + v30;
      if (v29 < v31 && v28 < v32)
        goto LABEL_31;
      swift_arrayInitWithCopy();
      if (v19)
      {
        v34 = *(_QWORD *)(v17 + 16);
        v35 = __OFADD__(v34, v19);
        v36 = v34 + v19;
        if (v35)
          goto LABEL_30;
        *(_QWORD *)(v17 + 16) = v36;
      }
    }
    else if (v19)
    {
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    if (v15 == ++v16)
    {
      sub_23FC1002C();
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_23FD75278();
  __break(1u);
}

uint64_t sub_23FC1120C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t (*v64)(_QWORD);
  int EnumCaseMultiPayload;
  char *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106[2];

  v88 = a1;
  v93 = sub_23FD72BF0();
  v90 = *(_QWORD *)(v93 - 8);
  v4 = MEMORY[0x24BDAC7A8](v93, v3);
  v104 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v84 = (char *)&v80 - v7;
  v8 = sub_23FBFD684(&qword_256F5DFB0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v85 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23FBFD684(&qword_256F5DFB8);
  MEMORY[0x24BDAC7A8](v81, v11);
  v80 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23FBFD684(&qword_256F5DFC0);
  v89 = *(_QWORD *)(v99 - 8);
  v14 = MEMORY[0x24BDAC7A8](v99, v13);
  v91 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v95 = (char *)&v80 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v98 = (char *)&v80 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  MEMORY[0x24BDAC7A8](v23, v24);
  v25 = sub_23FD74798();
  v26 = *(char **)(v25 - 8);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v86 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v94 = (char *)&v80 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v96 = (char *)&v80 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v87 = (char *)&v80 - v38;
  MEMORY[0x24BDAC7A8](v37, v39);
  v102 = (char *)&v80 - v40;
  v103 = sub_23FBFD684(qword_256F5DDF0);
  v97 = *(_QWORD *)(v103 - 8);
  v42 = MEMORY[0x24BDAC7A8](v103, v41);
  v44 = MEMORY[0x24BDAC7A8](v42, v43);
  v101 = (char *)&v80 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v92 = (char *)&v80 - v48;
  MEMORY[0x24BDAC7A8](v47, v49);
  v50 = _s20DisambiguationResultOMa(0);
  v52 = MEMORY[0x24BDAC7A8](v50, v51);
  v82 = (uint64_t)&v80 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v52, v54);
  v83 = (char *)&v80 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55, v57);
  v60 = (char *)&v80 - v59;
  MEMORY[0x24BDAC7A8](v58, v61);
  v63 = (char **)((char *)&v80 - v62);
  v100 = a2;
  sub_23FC12ECC(a2, (uint64_t)&v80 - v62, v64);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
LABEL_7:
    sub_23FC12ECC(v100, (uint64_t)v60, _s20DisambiguationResultOMa);
    v78 = (char *)&loc_23FC117FC + dword_23FC1242C[swift_getEnumCaseMultiPayload()];
    v104 = v26;
    __asm { BR              X10 }
  }
  if (EnumCaseMultiPayload)
  {
    (*((void (**)(_QWORD *, uint64_t))v26 + 1))(v63, v25);
    goto LABEL_7;
  }
  if (*v63 < *(_QWORD *)(v88 + 16))
    goto LABEL_7;
  v66 = v104;
  sub_23FD724DC();
  v67 = v82;
  sub_23FC12ECC(v100, v82, _s20DisambiguationResultOMa);
  swift_bridgeObjectRetain_n();
  v68 = sub_23FD72BE4();
  v69 = sub_23FD74F54();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = swift_slowAlloc();
    v71 = swift_slowAlloc();
    v106[0] = v71;
    *(_DWORD *)v70 = 136315394;
    v72 = swift_bridgeObjectRetain();
    v73 = MEMORY[0x242678AA4](v72, v25);
    v75 = v74;
    swift_bridgeObjectRelease();
    v105 = sub_23FC9DC40(v73, v75, v106);
    sub_23FD75044();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v70 + 12) = 2080;
    sub_23FCF14A4();
    v105 = sub_23FC9DC40(v76, v77, v106);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FBFEF18(v67, _s20DisambiguationResultOMa);
    _os_log_impl(&dword_23FBF8000, v68, v69, "Cannot extract disambiguation outcomes, selected candidate is not within bounds; items=%s, result=%s",
      (uint8_t *)v70,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v71, -1, -1);
    MEMORY[0x2426798D8](v70, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_23FBFEF18(v67, _s20DisambiguationResultOMa);
  }

  (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v93);
  return 0;
}

uint64_t sub_23FC1243C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void (*v107)(char *, char *, uint64_t);
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v119 = a2;
  v120 = a3;
  v118 = sub_23FD72BF0();
  v117 = *(_QWORD *)(v118 - 8);
  v5 = MEMORY[0x24BDAC7A8](v118, v4);
  v136 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v115 = (char *)&v113 - v8;
  v138 = sub_23FBFD684(qword_256F5DFD8);
  v129 = *(_QWORD *)(v138 - 8);
  v10 = MEMORY[0x24BDAC7A8](v138, v9);
  v134 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v133 = (uint64_t)&v113 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v130 = (uint64_t)&v113 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v128 = (char *)&v113 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v127 = (uint64_t)&v113 - v22;
  v23 = sub_23FD74798();
  v139 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v113 - v29;
  v31 = sub_23FBFD684(&qword_256F5DDB8);
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v35 = (char *)&v113 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)&v113 - v37;
  v39 = sub_23FD72DB8();
  v40 = *(_QWORD *)(v39 - 8);
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v44 = (char *)&v113 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42, v45);
  v47 = (char *)&v113 - v46;
  sub_23FC0E2FC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v38, 1, v39) == 1)
  {
    sub_23FBFEF74((uint64_t)v38, &qword_256F5DDB8);
    v48 = v136;
    sub_23FD724DC();
    v49 = sub_23FD72BE4();
    v50 = sub_23FD74F54();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_23FBF8000, v49, v50, "Cannot extract selected value for a disambiguation, selected value is not candidateId extractable", v51, 2u);
      MEMORY[0x2426798D8](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v48, v118);
LABEL_18:
    v86 = sub_23FBFD684(&qword_256F5DFC8);
    v87 = v120;
    v88 = 1;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v87, v88, 1, v86);
  }
  v114 = a1;
  v125 = v44;
  v126 = v35;
  v131 = v27;
  v132 = v40;
  v52 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v116 = v47;
  v124 = v52;
  v52(v47, v38, v39);
  v54 = v119;
  v55 = *(char **)(v119 + 16);
  v56 = MEMORY[0x24BEE4AF8];
  v137 = v39;
  if (v55)
  {
    v57 = v39;
    v58 = v139;
    v59 = (char *)(v119 + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80)));
    v122 = *(_QWORD *)(v139 + 72);
    v60 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
    swift_bridgeObjectRetain();
    v61 = MEMORY[0x24BEE4AF8];
    v62 = v130;
    v123 = v30;
    v121 = v23;
    while (1)
    {
      v60(v30, v59, v23);
      v63 = (uint64_t)v126;
      sub_23FC0E2FC();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v63, 1, v57) == 1)
        break;
      v135 = v59;
      v136 = v55;
      v64 = v30;
      v65 = v57;
      v66 = v23;
      v67 = v60;
      v68 = v125;
      v69 = v61;
      v70 = v124;
      v124(v125, (char *)v63, v65);
      v71 = v128;
      v72 = &v128[*(int *)(v138 + 48)];
      v67(v128, v64, v66);
      v70(v72, v68, v65);
      v61 = v69;
      v73 = (uint64_t)v71;
      v74 = v127;
      sub_23FC12DD8(v73, v127, qword_256F5DFD8);
      sub_23FC12E68(v74, v62, qword_256F5DFD8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC99608();
        v61 = v80;
      }
      v75 = *(_QWORD *)(v61 + 16);
      v76 = v129;
      v78 = v135;
      v77 = v136;
      v60 = v67;
      if (v75 >= *(_QWORD *)(v61 + 24) >> 1)
      {
        sub_23FC99608();
        v76 = v129;
        v61 = v81;
      }
      *(_QWORD *)(v61 + 16) = v75 + 1;
      v79 = v61
          + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))
          + *(_QWORD *)(v76 + 72) * v75;
      v62 = v130;
      sub_23FC12DD8(v130, v79, qword_256F5DFD8);
      sub_23FBFEF74(v74, qword_256F5DFD8);
      v58 = v139;
      v30 = v123;
      v23 = v121;
      (*(void (**)(char *, uint64_t))(v139 + 8))(v123, v121);
      v59 = &v78[v122];
      v55 = v77 - 1;
      v57 = v137;
      if (!v55)
      {
        v54 = swift_bridgeObjectRelease();
        v89 = v120;
        v90 = v116;
        v91 = v132;
        v92 = v134;
        v56 = MEMORY[0x24BEE4AF8];
        goto LABEL_19;
      }
    }
    sub_23FBFEF74(v63, &qword_256F5DDB8);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v82 = v115;
    sub_23FD724DC();
    v83 = sub_23FD72BE4();
    v84 = sub_23FD74F54();
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v85 = 0;
      _os_log_impl(&dword_23FBF8000, v83, v84, "Cannot extract selected value for a disambiguation, not all items are candidateId extractable", v85, 2u);
      MEMORY[0x2426798D8](v85, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v82, v118);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v116, v57);
    goto LABEL_18;
  }
  v61 = MEMORY[0x24BEE4AF8];
  v90 = v116;
  v91 = v132;
  v92 = v134;
  v58 = v139;
  v89 = v120;
LABEL_19:
  MEMORY[0x24BDAC7A8](v54, v53);
  *(&v113 - 2) = (uint64_t)v90;
  sub_23FD31224((uint64_t (*)(char *))sub_23FC12E0C, (uint64_t)(&v113 - 4), v61);
  v94 = v93;
  v95 = *(_QWORD *)(v93 + 16);
  if (v95)
  {
    v140 = v56;
    sub_23FC9B6B0();
    v96 = *(unsigned __int8 *)(v129 + 80);
    v130 = v94;
    v97 = v94 + ((v96 + 32) & ~v96);
    v136 = *(char **)(v129 + 72);
    v98 = v23;
    v99 = v131;
    do
    {
      v100 = v133;
      sub_23FC12E68(v97, v133, qword_256F5DFD8);
      v101 = *(int *)(v138 + 48);
      v102 = &v92[v101];
      v103 = v100 + v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v92, v100, v98);
      v104 = v103;
      v105 = v137;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v102, v104, v137);
      v106 = v92;
      v107 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
      v107(v99, v106, v98);
      v135 = *(char **)(v91 + 8);
      ((void (*)(char *, uint64_t))v135)(v102, v105);
      sub_23FBFEF74(v100, qword_256F5DFD8);
      v56 = v140;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B6B0();
        v56 = v140;
      }
      v108 = *(_QWORD *)(v56 + 16);
      v109 = v131;
      v58 = v139;
      if (v108 >= *(_QWORD *)(v56 + 24) >> 1)
      {
        sub_23FC9B6B0();
        v56 = v140;
      }
      *(_QWORD *)(v56 + 16) = v108 + 1;
      v107((char *)(v56+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v108), v109, v98);
      v140 = v56;
      v97 += (uint64_t)v136;
      --v95;
      v91 = v132;
      v92 = v134;
      v99 = v109;
    }
    while (v95);
    swift_bridgeObjectRelease();
    v89 = v120;
    v23 = v98;
    ((void (*)(char *, uint64_t))v135)(v116, v137);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v137);
  }
  v110 = sub_23FBFD684(&qword_256F5DFC8);
  v111 = *(int *)(v110 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v89, v114, v23);
  *(_QWORD *)(v89 + v111) = v56;
  v87 = v89;
  v88 = 0;
  v86 = v110;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v87, v88, 1, v86);
}

BOOL sub_23FC12D64()
{
  sub_23FBFD684(qword_256F5DFD8);
  sub_23FD72DB8();
  sub_23FC12E28();
  return (sub_23FD74BDC() & 1) == 0;
}

void sub_23FC12DD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23FC102D0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_23FBFF0A0();
}

BOOL sub_23FC12E0C()
{
  return sub_23FC12D64();
}

unint64_t sub_23FC12E28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5DDA0;
  if (!qword_256F5DDA0)
  {
    v1 = sub_23FD72DB8();
    result = MEMORY[0x2426797E8](MEMORY[0x24BE54678], v1);
    atomic_store(result, (unint64_t *)&qword_256F5DDA0);
  }
  return result;
}

void sub_23FC12E68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23FC102D0(a1, a2, a3);
  sub_23FC12EF8(v3);
  sub_23FBFF0A0();
}

uint64_t sub_23FC12E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s15CandidateResultVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23FC12ECC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23FC12EF8(v3);
  sub_23FBFF0A0();
}

uint64_t sub_23FC12EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23FC12F10()
{
  return 0;
}

uint64_t sub_23FC12F2C()
{
  return _s15CandidateResultVMa();
}

uint64_t sub_23FC12F4C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FC12F58@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FC12F64(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(sub_23FBFD684(qword_256F5DDF0) - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    a2(&v15, v6);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    v9 = v15;
    if (!v15)
      break;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FC9961C();
      v8 = v11;
    }
    v10 = *(_QWORD *)(v8 + 16);
    if (v10 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23FC9961C();
      v8 = v12;
    }
    *(_QWORD *)(v8 + 16) = v10 + 1;
    *(_QWORD *)(v8 + 8 * v10 + 32) = v9;
    v6 += v7;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23FC130D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 != 1)
      __asm { BR              X11 }
    v4 = v3 & 0xC0;
    v5 = (v3 ^ v2) & 0x3F;
    if (v4 != 64 || v5 != 0)
      return 0;
  }
  else if (v3 > 0x3F || v2 != v3)
  {
    return 0;
  }
  sub_23FC12F2C();
  return sub_23FD72D88();
}

void sub_23FC1316C(int a1@<W8>)
{
  if (a1 != 128)
    JUMPOUT(0x23FC13118);
  JUMPOUT(0x23FC13134);
}

void sub_23FC131A0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  sub_23FC061F0();
  v3 = v2;
  v37 = v5;
  v38 = v4;
  v6 = sub_23FC12F2C();
  v35 = *(_QWORD *)(v6 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFEFE0();
  v36 = v9;
  sub_23FBFD684(&qword_256F5DDD8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC159C8();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v34 - v14;
  v16 = sub_23FC10290();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  sub_23FBFF180();
  v21 = v20 - v19;
  v34 = sub_23FD746D8();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFF180();
  v26 = v25 - v24;
  v27 = *v3;
  sub_23FD731CC();
  if ((v28 & 1) != 0)
  {
    LODWORD(v37) = v27;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, v38, v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v21, v16) == *MEMORY[0x24BEB9988])
    {
      sub_23FC15A68(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
      v29 = swift_projectBox();
      v30 = v34;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v26, v29, v34);
      swift_release();
      sub_23FD746CC();
      v39 = v37;
      sub_23FC14310();
      sub_23FC1002C();
      (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v26, v30);
      goto LABEL_8;
    }
    sub_23FC15A68(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    LOBYTE(v27) = v37;
  }
  v40 = v27;
  sub_23FC14640();
  sub_23FC12E68((uint64_t)v15, v1, &qword_256F5DDD8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v6) != 1)
  {
    v31 = v36;
    sub_23FC12E88(v1, v36);
    sub_23FBFD684(&qword_256F5DDE8);
    v32 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_23FD769D0;
    sub_23FC12E88(v31, v33 + v32);
  }
  sub_23FBFEF74((uint64_t)v15, &qword_256F5DDD8);
LABEL_8:
  sub_23FC060D4();
}

void sub_23FC13414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  os_log_type_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, _QWORD);
  _QWORD v86[12];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  sub_23FC061F0();
  v2 = v1;
  v86[10] = v3;
  v4 = _s29ParameterDisambiguationResultVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFCC();
  v94 = v7;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC0FFF4();
  v86[6] = v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC15A3C((uint64_t)v86 - v13);
  v87 = sub_23FC10100();
  v86[11] = *(_QWORD *)(v87 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFCC();
  v100 = v16;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC0FFF4();
  v86[7] = v19;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FC15A3C((uint64_t)v86 - v22);
  sub_23FBFD684(&qword_256F5DFB0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FBFEFE0();
  sub_23FC15A3C(v25);
  v86[2] = sub_23FBFD684(&qword_256F5DFB8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFEFE0();
  sub_23FC15A3C(v28);
  v99 = sub_23FBFD684(&qword_256F5DFC0);
  v89 = *(_QWORD *)(v99 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FBFEFCC();
  v91 = v31;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FC0FFF4();
  v95 = v34;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v35, v36);
  sub_23FC0FFF4();
  v98 = v37;
  sub_23FBFF064();
  v40 = MEMORY[0x24BDAC7A8](v38, v39);
  v42 = (char *)v86 - v41;
  MEMORY[0x24BDAC7A8](v40, v43);
  sub_23FC10290();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v44, v45);
  sub_23FBFEFCC();
  v88 = v46;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_23FC0FFF4();
  v93 = v49;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v50, v51);
  sub_23FC0FFF4();
  v96 = v52;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v53, v54);
  sub_23FC0FFF4();
  v86[8] = v55;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v56, v57);
  v102 = (char *)v86 - v58;
  v103 = sub_23FBFD684(qword_256F5DDF0);
  v97 = *(_QWORD *)(v103 - 8);
  sub_23FC05FF4();
  v61 = MEMORY[0x24BDAC7A8](v59, v60);
  MEMORY[0x24BDAC7A8](v61, v62);
  sub_23FC0FFF4();
  v101 = v63;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v64, v65);
  sub_23FC0FFF4();
  v92 = v66;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v67, v68);
  v69 = (_DWORD *)_s20DisambiguationResultOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v70, v71);
  sub_23FBFF180();
  v74 = v73 - v72;
  if (sub_23FC1488C(v2))
  {
    v75 = *(int *)(v4 + 20);
    v86[9] = v2;
    sub_23FC12ECC(v2 + v75, v74, _s20DisambiguationResultOMa);
    v76 = (char *)&loc_23FC13770 + *((int *)qword_23FC14300 + swift_getEnumCaseMultiPayload());
    v90 = v4;
    v104 = v0;
    __asm { BR              X10 }
  }
  v77 = v100;
  sub_23FD724DC();
  v78 = v94;
  sub_23FC12ECC(v2, v94, _s29ParameterDisambiguationResultVMa);
  sub_23FD72BE4();
  v79 = sub_23FC15A04();
  if (sub_23FC15918(v79))
  {
    sub_23FC158C8();
    v105 = sub_23FC15900();
    *v69 = 136315138;
    sub_23FD71474();
    sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v80 = sub_23FC15A5C();
    v82 = sub_23FC1018C(v80, v81);
    sub_23FC158AC(v82);
    sub_23FC1002C();
    sub_23FBFEF18(v78, _s29ParameterDisambiguationResultVMa);
    sub_23FC15884(&dword_23FBF8000, v83, v84, "Skipping generating candidate outcomes for a disambiguation (%s), selected candidate is not within bounds");
    sub_23FC158F0();
    sub_23FBFEFA0();
  }
  sub_23FBFEF18(v78, _s29ParameterDisambiguationResultVMa);

  sub_23FC159B8();
  sub_23FC15AC0(v77, v85);
  sub_23FC060D4();
}

void sub_23FC14310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23FC061F0();
  v4 = v3;
  v6 = v5;
  v7 = sub_23FC10100();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFF180();
  v12 = v11 - v10;
  sub_23FBFD684(&qword_256F5DDD8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC12F34();
  v55 = sub_23FC12F2C();
  v53 = *(_QWORD *)(v55 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC159C8();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v46 - v19;
  v21 = sub_23FC10290();
  MEMORY[0x24BDAC7A8](v6, v22);
  sub_23FBFF180();
  v26 = v25 - v24;
  v27 = *(_DWORD **)(v6 + 16);
  if (v27)
  {
    v46 = v12;
    v47 = v1;
    v48 = v7;
    v49 = v23;
    v54 = *v4;
    sub_23FC102C4();
    v30 = (char *)(v28 + v29);
    v32 = *(_QWORD *)(v31 + 72);
    v52 = v31;
    v33 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 16);
    v50 = v32;
    v51 = v33;
    swift_bridgeObjectRetain();
    v34 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v51(v26, v30, v21);
      LOBYTE(v57) = v54;
      sub_23FC14640();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v55) == 1)
        break;
      sub_23FC12E88(v0, (uint64_t)v20);
      sub_23FC12ECC((uint64_t)v20, v2, (uint64_t (*)(_QWORD))_s15CandidateResultVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC15A74();
        v34 = v38;
      }
      v35 = *(_QWORD *)(v34 + 16);
      if (v35 >= *(_QWORD *)(v34 + 24) >> 1)
      {
        sub_23FC15A74();
        v34 = v39;
      }
      *(_QWORD *)(v34 + 16) = v35 + 1;
      sub_23FC102C4();
      sub_23FC12E88(v2, v34 + v36 + *(_QWORD *)(v37 + 72) * v35);
      sub_23FBFEF18((uint64_t)v20, (uint64_t (*)(_QWORD))_s15CandidateResultVMa);
      sub_23FC15950(v26, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
      v30 += v50;
      v27 = (_DWORD *)((char *)v27 - 1);
      if (!v27)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    sub_23FC15950(v26, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23FBFEF74(v0, &qword_256F5DDD8);
    v40 = v46;
    sub_23FD724DC();
    sub_23FD72BE4();
    v41 = sub_23FC15A04();
    if (sub_23FC15918(v41))
    {
      sub_23FC158C8();
      v57 = sub_23FC15900();
      *v27 = 136315138;
      LOBYTE(v56) = v54;
      v42 = FeedbackLearning.CandidateOutcome.description.getter();
      v56 = sub_23FC15A9C(v42, v43);
      sub_23FD75044();
      sub_23FC1002C();
      sub_23FC15884(&dword_23FBF8000, v44, v45, "Cannot make a candidate result collection for a list of items with outcome %s");
      sub_23FC158F0();
      sub_23FBFEFA0();
    }

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v40, v48);
  }
LABEL_13:
  sub_23FC060D4();
}

uint64_t sub_23FC14640()
{
  uint64_t v0;
  char *v1;
  char *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _BYTE *v31;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  v5 = sub_23FC10100();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F5DDB8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFF180();
  v12 = v11 - v10;
  v13 = sub_23FC10130();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  sub_23FBFF180();
  v18 = v17 - v16;
  v19 = *v2;
  sub_23FC0E2FC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v12, 1, v13) == 1)
  {
    v31 = v4;
    sub_23FBFEF74(v12, &qword_256F5DDB8);
    sub_23FD724DC();
    v20 = sub_23FD72BE4();
    v21 = sub_23FD74F54();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)sub_23FC158C8();
      swift_slowAlloc();
      *(_DWORD *)v22 = 136315138;
      v23 = FeedbackLearning.CandidateOutcome.description.getter();
      sub_23FC15A9C(v23, v24);
      sub_23FD75044();
      sub_23FC1002C();
      _os_log_impl(&dword_23FBF8000, v20, v21, "Cannot make a candidate result for an item with outcome %s, item is not candidateId extractable", v22, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
    v25 = sub_23FC12F2C();
    v26 = (uint64_t)v31;
    v27 = 1;
  }
  else
  {
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
    v28(v18, v12, v13);
    v29 = sub_23FC12F2C();
    v28((uint64_t)&v4[*(int *)(v29 + 20)], v18, v13);
    *v4 = v19;
    v26 = (uint64_t)v4;
    v27 = 0;
    v25 = v29;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v26, v27, 1, v25);
}

BOOL sub_23FC1488C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  v2 = _s20DisambiguationResultOMa(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = _s29ParameterDisambiguationResultVMa(0);
  sub_23FC12ECC(a1 + *(int *)(v6 + 20), (uint64_t)v5, _s20DisambiguationResultOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (!EnumCaseMultiPayload)
      return *v5 < *(_QWORD *)(*(_QWORD *)a1 + 16);
    v9 = sub_23FD74798();
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
  }
  return 1;
}

uint64_t sub_23FC14964@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v112[2];
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;

  v134 = a2;
  v118 = a3;
  v117 = sub_23FD72BF0();
  v116 = *(_QWORD *)(v117 - 8);
  v5 = MEMORY[0x24BDAC7A8](v117, v4);
  v128 = (char *)v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v114 = (char *)v112 - v8;
  v132 = sub_23FBFD684(qword_256F5DFD8);
  v126 = *(_QWORD *)(v132 - 8);
  v10 = MEMORY[0x24BDAC7A8](v132, v9);
  v130 = (char *)v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v131 = (char *)v112 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v127 = (uint64_t)v112 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v125 = (char *)v112 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v124 = (uint64_t)v112 - v22;
  v135 = sub_23FD74798();
  v23 = *(_QWORD *)(v135 - 8);
  v25 = MEMORY[0x24BDAC7A8](v135, v24);
  v27 = (char *)v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)v112 - v29;
  v31 = sub_23FBFD684(&qword_256F5DDB8);
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v35 = (char *)v112 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)v112 - v37;
  v39 = sub_23FD72DB8();
  v40 = *(_QWORD *)(v39 - 8);
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v44 = (char *)v112 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42, v45);
  v47 = (char *)v112 - v46;
  sub_23FC0E2FC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v38, 1, v39) == 1)
  {
    sub_23FBFEF74((uint64_t)v38, &qword_256F5DDB8);
    v48 = v128;
    sub_23FD724DC();
    v49 = sub_23FD72BE4();
    v50 = sub_23FD74F54();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_23FBF8000, v49, v50, "Cannot extract selected value for a disambiguation, selected value is not candidateId extractable", v51, 2u);
      MEMORY[0x2426798D8](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v48, v117);
LABEL_18:
    v82 = sub_23FBFD684(&qword_256F5DFC8);
    v83 = v118;
    v84 = 1;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v83, v84, 1, v82);
  }
  v122 = v44;
  v123 = v35;
  v133 = v23;
  v128 = v27;
  v113 = a1;
  v52 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v115 = v47;
  v121 = v52;
  v52(v47, v38, v39);
  v54 = *v134;
  v55 = *(uint64_t **)(*v134 + 16);
  v56 = MEMORY[0x24BEE4AF8];
  v129 = v40;
  if (v55)
  {
    v57 = v54 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
    v119 = *(_QWORD *)(v133 + 72);
    v58 = *(void (**)(char *, unint64_t, uint64_t))(v133 + 16);
    v112[1] = v54;
    swift_bridgeObjectRetain();
    v59 = v127;
    v60 = v30;
    v120 = v30;
    while (1)
    {
      v58(v60, v57, v135);
      v61 = (uint64_t)v123;
      sub_23FC0E2FC();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v61, 1, v39) == 1)
        break;
      v134 = v55;
      v62 = v39;
      v63 = v122;
      v64 = v60;
      v65 = v56;
      v66 = v121;
      v121(v122, (char *)v61, v62);
      v67 = v125;
      v68 = &v125[*(int *)(v132 + 48)];
      v58(v125, (unint64_t)v64, v135);
      v69 = v63;
      v39 = v62;
      v66(v68, v69, v62);
      v56 = v65;
      v70 = (uint64_t)v67;
      v71 = v124;
      sub_23FC12DD8(v70, v124, qword_256F5DFD8);
      sub_23FC12E68(v71, v59, qword_256F5DFD8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC99608();
        v56 = v76;
      }
      v72 = *(_QWORD *)(v56 + 16);
      v73 = v126;
      v60 = v120;
      v74 = v134;
      if (v72 >= *(_QWORD *)(v56 + 24) >> 1)
      {
        sub_23FC99608();
        v73 = v126;
        v56 = v77;
      }
      *(_QWORD *)(v56 + 16) = v72 + 1;
      v75 = v56
          + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))
          + *(_QWORD *)(v73 + 72) * v72;
      v59 = v127;
      sub_23FC12DD8(v127, v75, qword_256F5DFD8);
      sub_23FBFEF74(v71, qword_256F5DFD8);
      (*(void (**)(char *, uint64_t))(v133 + 8))(v60, v135);
      v57 += v119;
      v55 = (uint64_t *)((char *)v74 - 1);
      if (!v55)
      {
        v54 = swift_bridgeObjectRelease();
        v85 = v118;
        v86 = v115;
        v87 = (uint64_t)v131;
        goto LABEL_19;
      }
    }
    sub_23FBFEF74(v61, &qword_256F5DDB8);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v60, v135);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = v114;
    sub_23FD724DC();
    v79 = sub_23FD72BE4();
    v80 = sub_23FD74F54();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v81 = 0;
      _os_log_impl(&dword_23FBF8000, v79, v80, "Cannot extract selected value for a disambiguation, not all items are candidateId extractable", v81, 2u);
      MEMORY[0x2426798D8](v81, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v78, v117);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v115, v39);
    goto LABEL_18;
  }
  v86 = v115;
  v87 = (uint64_t)v131;
  v85 = v118;
LABEL_19:
  MEMORY[0x24BDAC7A8](v54, v53);
  v112[-2] = v86;
  sub_23FD31224((uint64_t (*)(char *))sub_23FC154C4, (uint64_t)&v112[-4], v56);
  v89 = v88;
  v90 = (uint64_t *)*((_QWORD *)v88 + 2);
  if (v90)
  {
    v127 = v39;
    v136 = MEMORY[0x24BEE4AF8];
    sub_23FC9B6B0();
    v91 = (uint64_t)&v89[(*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80)];
    v92 = *(_QWORD *)(v126 + 72);
    v125 = v89;
    v126 = v92;
    v93 = v128;
    v94 = v133;
    v95 = v135;
    do
    {
      v134 = v90;
      sub_23FC12E68(v91, v87, qword_256F5DFD8);
      v96 = *(int *)(v132 + 48);
      v97 = v130;
      v98 = &v130[v96];
      v99 = v87 + v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v130, v87, v95);
      v100 = v129;
      v101 = v94;
      v102 = v127;
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v98, v99, v127);
      v103 = v87;
      v104 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
      v104(v93, v97, v95);
      v105 = *(void (**)(char *, uint64_t))(v100 + 8);
      v105(v98, v102);
      sub_23FBFEF74(v103, qword_256F5DFD8);
      v106 = v136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B6B0();
        v106 = v136;
      }
      v107 = *(_QWORD *)(v106 + 16);
      v93 = v128;
      v94 = v133;
      v108 = v134;
      if (v107 >= *(_QWORD *)(v106 + 24) >> 1)
      {
        sub_23FC9B6B0();
        v93 = v128;
        v106 = v136;
      }
      *(_QWORD *)(v106 + 16) = v107 + 1;
      v104((char *)(v106+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(_QWORD *)(v94 + 72) * v107), v93, v135);
      v136 = v106;
      v91 += v126;
      v90 = (uint64_t *)((char *)v108 - 1);
      v87 = (uint64_t)v131;
    }
    while (v90);
    swift_bridgeObjectRelease();
    v85 = v118;
    v86 = v115;
    v39 = v127;
  }
  else
  {
    swift_bridgeObjectRelease();
    v105 = *(void (**)(char *, uint64_t))(v129 + 8);
    v106 = MEMORY[0x24BEE4AF8];
    v94 = v133;
  }
  v105(v86, v39);
  v109 = sub_23FBFD684(&qword_256F5DFC8);
  v110 = *(int *)(v109 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v85, v113, v135);
  *(_QWORD *)(v85 + v110) = v106;
  v83 = v85;
  v84 = 0;
  v82 = v109;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v83, v84, 1, v82);
}

void sub_23FC15260(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_23FBFD684(qword_256F5DDF0);
  sub_23FC131A0();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  *a1 = v2;
}

BOOL sub_23FC152D8()
{
  sub_23FBFD684(qword_256F5DFD8);
  sub_23FD72DB8();
  sub_23FBFEE2C((unint64_t *)&qword_256F5DDA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54678]);
  return (sub_23FD74BDC() & 1) == 0;
}

unint64_t sub_23FC15364()
{
  sub_23FD750E0();
  swift_bridgeObjectRelease();
  sub_23FC12F2C();
  sub_23FC10130();
  sub_23FBFEE2C(&qword_256F5DD90, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54688]);
  sub_23FD75344();
  sub_23FD74C48();
  swift_bridgeObjectRelease();
  sub_23FD74C48();
  FeedbackLearning.CandidateOutcome.description.getter();
  sub_23FD74C48();
  sub_23FC15A24();
  sub_23FD74C48();
  return 0xD00000000000001DLL;
}

uint64_t _s15CandidateResultVMa()
{
  uint64_t result;

  result = qword_256F5E038;
  if (!qword_256F5E038)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23FC154AC(_QWORD *a1@<X8>)
{
  sub_23FC15260(a1);
}

BOOL sub_23FC154C4()
{
  return sub_23FC152D8();
}

uint64_t *sub_23FC154E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23FD72DB8();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_23FC15568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23FD72DB8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_23FC155A0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD72DB8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_23FC155FC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD72DB8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_23FC15658(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD72DB8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_23FC156B4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FD72DB8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23FC15710()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC1571C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 61)
  {
    v4 = *a1 & 0x3C | (*a1 >> 6);
    v5 = v4 ^ 0x3F;
    v6 = 64 - v4;
    if (v5 >= 0x3D)
      return 0;
    else
      return v6;
  }
  else
  {
    v10 = sub_23FC10130();
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t sub_23FC15794()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_23FC157A0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 61)
  {
    *result = 4 * (((-(int)a2 >> 2) & 0xF) - 16 * a2);
  }
  else
  {
    v7 = sub_23FC10130();
    return (_BYTE *)_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23FC15810()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD72DB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23FC15884(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_23FC15898()
{
  sub_23FC9B734();
}

uint64_t sub_23FC158AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FC158C8()
{
  return swift_slowAlloc();
}

void sub_23FC158D8()
{
  sub_23FC9B734();
}

uint64_t sub_23FC158F0()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FC15900()
{
  return swift_slowAlloc();
}

uint64_t sub_23FC15910(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

BOOL sub_23FC15918(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23FC15928()
{
  sub_23FC9B734();
}

uint64_t sub_23FC1593C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v0, v1);
}

uint64_t sub_23FC15950@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_23FC15958()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = v0;
}

uint64_t sub_23FC1597C(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23FD71474();
}

void sub_23FC15998()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t sub_23FC159E4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FC159F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 144))(a1, a2, v2);
}

uint64_t sub_23FC159FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FC15A04()
{
  return sub_23FD74F54();
}

BOOL sub_23FC15A0C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23FC15A24()
{
  return swift_bridgeObjectRelease();
}

void sub_23FC15A3C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_23FC15A5C()
{
  return sub_23FD75344();
}

uint64_t sub_23FC15A68@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23FC15A74()
{
  sub_23FC995F4();
}

uint64_t sub_23FC15A80()
{
  return 0;
}

void sub_23FC15A94(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FBFEF18(v2, a2);
}

uint64_t sub_23FC15A9C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t sub_23FC15AB4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC15AC0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_23FC15AC8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23FC9B414();
    v3 = v13;
    v5 = sub_23FBFD684(&qword_256F5E070);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    do
    {
      v9 = a2(v7, *(_QWORD *)(v7 + *(int *)(v5 + 48)));
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_23FC9B414();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      *(_QWORD *)(v13 + 8 * v10 + 32) = v9;
      v7 += v8;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_23FC15BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[4];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = sub_23FBFD684(&qword_256F5E070);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)v31 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v32 = (uint64_t)v31 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v31[1] = a2;
    v31[3] = v2;
    v17 = _s19ValueStepEvaluationVMa(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v36 = *(_QWORD *)(v18 + 72);
    v35 = _s25ValueDisambiguationResultVMa(0);
    v31[2] = a1;
    swift_bridgeObjectRetain();
    v20 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_23FC10E38(*(_QWORD *)(v19 + *(int *)(v17 + 24)), v19 + *(int *)(v17 + 24) + (uint64_t)*(int *)(v35 + 20), (uint64_t (*)(uint64_t, uint64_t))sub_23FC16774);
      if (v21)
      {
        v22 = v21;
        v23 = *(int *)(v34 + 48);
        v24 = v19 + *(int *)(v17 + 20);
        v25 = sub_23FD7157C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v13, v24, v25);
        *(_QWORD *)&v13[v23] = v22;
        v26 = v32;
        sub_23FC16778((uint64_t)v13, v32);
        sub_23FC16778(v26, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC996D4();
          v20 = v28;
        }
        v27 = *(_QWORD *)(v20 + 16);
        if (v27 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_23FC996D4();
          v20 = v29;
        }
        *(_QWORD *)(v20 + 16) = v27 + 1;
        sub_23FC16778((uint64_t)v9, v20+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v27);
      }
      v19 += v36;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v20;
}

uint64_t sub_23FC15E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD v50[2];
  int v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(_QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59[16];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[2];

  v4 = sub_23FD7157C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FBFEFCC();
  v56 = v7;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v50 - v10;
  v12 = sub_23FD72BF0();
  v53 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFCC();
  v58 = v14;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)v50 - v17;
  v60 = a1;
  swift_bridgeObjectRetain();
  v55 = (void (*)(_QWORD, _QWORD))a2;
  sub_23FD31410((uint64_t (*)(char *))sub_23FC16708, (uint64_t)v59, a2);
  v20 = v19;
  v52 = 0;
  sub_23FD724DC();
  v21 = v4;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v54(v11, a1, v4);
  swift_bridgeObjectRetain_n();
  v22 = sub_23FD72BE4();
  v23 = sub_23FD74F3C();
  v51 = v23;
  v24 = os_log_type_enabled(v22, v23);
  v57 = v12;
  if (v24)
  {
    v25 = sub_23FBFEFF4();
    v50[1] = a1;
    v26 = v25;
    v50[0] = sub_23FBFEFF4();
    v62[0] = v50[0];
    *(_DWORD *)v26 = 136315394;
    sub_23FC16734();
    v27 = sub_23FD75344();
    v61 = sub_23FC1018C(v27, v28);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FC167C0((uint64_t)v11);
    *(_WORD *)(v26 + 12) = 2080;
    v29 = _s19ValueStepEvaluationVMa(0);
    v30 = swift_bridgeObjectRetain();
    v31 = MEMORY[0x242678AA4](v30, v29);
    v33 = v32;
    swift_bridgeObjectRelease();
    v61 = sub_23FC9DC40(v31, v33, v62);
    sub_23FD75044();
    sub_23FC10048();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v22, (os_log_type_t)v51, "Matching step evaluations for statementId=%s: %s", (uint8_t *)v26, 0x16u);
    sub_23FC167C8();
    sub_23FBFEFA0();
  }
  sub_23FC167C0((uint64_t)v11);

  sub_23FC10048();
  v34 = *(void (**)(char *, uint64_t))(v53 + 8);
  v34(v18, v12);
  v35 = (uint64_t)v55;
  swift_bridgeObjectRetain();
  v36 = sub_23FC15BD8(v20, v35);
  swift_bridgeObjectRelease();
  v37 = v58;
  sub_23FD724DC();
  v38 = v56;
  v54((char *)v56, a1, v21);
  swift_bridgeObjectRetain_n();
  v39 = sub_23FD72BE4();
  v40 = sub_23FD74F3C();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = sub_23FBFEFF4();
    v55 = (void (*)(_QWORD, _QWORD))v34;
    v42 = v41;
    v54 = (void (*)(char *, uint64_t, uint64_t))sub_23FBFEFF4();
    v62[0] = (uint64_t)v54;
    *(_DWORD *)v42 = 136315394;
    sub_23FC16734();
    v43 = sub_23FD75344();
    v61 = sub_23FC1018C(v43, v44);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FC167C0(v38);
    *(_WORD *)(v42 + 12) = 2080;
    swift_bridgeObjectRetain();
    v45 = sub_23FBFD684(&qword_256F5E070);
    v46 = MEMORY[0x242678AA4](v36, v45);
    v48 = v47;
    swift_bridgeObjectRelease();
    v61 = sub_23FC9DC40(v46, v48, v62);
    sub_23FD75044();
    sub_23FC10048();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v39, v40, "Generated candidate results for statementId=%s: %s", (uint8_t *)v42, 0x16u);
    sub_23FC167C8();
    sub_23FBFEFA0();
  }
  sub_23FC167C0(v38);

  sub_23FC10048();
  v34(v37, v12);
  return v36;
}

uint64_t sub_23FC162FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v3 = sub_23FC15AC8(a3, (uint64_t (*)(uint64_t, _QWORD))sub_23FC166A4);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v3 + 32;
    v6 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v7 = *(_QWORD *)v5;
      v8 = *(_QWORD *)(*(_QWORD *)v5 + 16);
      v9 = *(_QWORD *)(v6 + 16);
      if (__OFADD__(v9, v8))
        break;
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_23FC99270();
        v6 = v10;
      }
      if (*(_QWORD *)(v7 + 16))
      {
        v11 = *(_QWORD *)(v6 + 16);
        v12 = (*(_QWORD *)(v6 + 24) >> 1) - v11;
        v13 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
        if (v12 < v8)
          goto LABEL_24;
        v14 = *(_QWORD *)(v13 - 8);
        v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        v16 = *(_QWORD *)(v14 + 72);
        v17 = v6 + v15 + v16 * v11;
        v18 = v7 + v15;
        v19 = v16 * v8;
        v20 = v17 + v19;
        v21 = v18 + v19;
        if (v18 < v20 && v17 < v21)
          goto LABEL_26;
        swift_arrayInitWithCopy();
        if (v8)
        {
          v23 = *(_QWORD *)(v6 + 16);
          v24 = __OFADD__(v23, v8);
          v25 = v23 + v8;
          if (v24)
            goto LABEL_25;
          *(_QWORD *)(v6 + 16) = v25;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      v5 += 8;
      if (!--v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_23FD75278();
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
LABEL_21:
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void sub_23FC164C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v4[6];

  v4[2] = a3;
  v4[3] = a1;
  v4[4] = a4;
  sub_23FC95298((uint64_t)sub_23FC166AC, (uint64_t)v4, a2);
}

uint64_t sub_23FC1650C@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  char *v22;
  char v23;

  v22 = a1;
  v8 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &a1[*(int *)(_s15CandidateResultVMa() + 20)];
  v13 = sub_23FD7157C();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v11, a2, v13);
  swift_storeEnumTagMultiPayload();
  sub_23FC0C1AC();
  sub_23FC166CC((uint64_t)v11);
  LOBYTE(v11) = v23;
  v14(a4, a3, v13);
  v15 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  v14(&a4[v15[5]], a2, v13);
  swift_storeEnumTagMultiPayload();
  v16 = (uint64_t)&a4[v15[6]];
  v17 = sub_23FD72DB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))((char *)v16, v12, v17);
  v18 = (uint64_t)&a4[v15[7]];
  v19 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v18, 1, 1, v19);
  v21 = *v22;
  a4[v15[8]] = (char)v11;
  a4[v15[9]] = v21;
  return result;
}

void sub_23FC166A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FC164C4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23FC166AC@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_23FC1650C(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23FC166CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FC16708()
{
  return sub_23FD71558() & 1;
}

unint64_t sub_23FC16734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5D950;
  if (!qword_256F5D950)
  {
    v1 = sub_23FD7157C();
    result = MEMORY[0x2426797E8](MEMORY[0x24BE52170], v1);
    atomic_store(result, (unint64_t *)&qword_256F5D950);
  }
  return result;
}

uint64_t sub_23FC16778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5E070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC167C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FC167C8()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FC167D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = sub_23FD747C8();
  MEMORY[0x24BDAC7A8](v3, v4);
  v22 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD74960();
  v20 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v18 = v1;
    v26 = MEMORY[0x24BEE4AF8];
    sub_23FC9B7B8();
    v11 = v26;
    v12 = *(_QWORD *)(sub_23FD715D0() - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v19 = *(_QWORD *)(v12 + 72);
    do
    {
      v25 = v10;
      v14 = sub_23FD715B8();
      v23 = v15;
      v24 = v14;
      sub_23FD715B8();
      sub_23FD715AC();
      sub_23FD715C4();
      sub_23FD7493C();
      v26 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      if (v16 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_23FC9B7B8();
        v11 = v26;
      }
      *(_QWORD *)(v11 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v11+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v16, v9, v21);
      v13 += v19;
      v10 = v25 - 1;
    }
    while (v25 != 1);
  }
  return v11;
}

uint64_t sub_23FC169D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = sub_23FD74A50();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return MEMORY[0x24BEE4AF8];
  v15[1] = v1;
  v18 = MEMORY[0x24BEE4AF8];
  sub_23FC9B78C();
  v9 = v18;
  v10 = *(_QWORD *)(sub_23FD715A0() - 8);
  v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v16 = *(_QWORD *)(v10 + 72);
  do
  {
    sub_23FD71594();
    sub_23FD71588();
    v12 = v8;
    sub_23FD74A44();
    v18 = v9;
    v13 = *(_QWORD *)(v9 + 16);
    if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      sub_23FC9B78C();
      v9 = v18;
    }
    *(_QWORD *)(v9 + 16) = v13 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, v6, v17);
    v11 += v16;
    --v7;
    v8 = v12;
  }
  while (v7);
  return v9;
}

uint64_t sub_23FC16B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = sub_23FD74A50();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return MEMORY[0x24BEE4AF8];
  v15[1] = v1;
  v18 = MEMORY[0x24BEE4AF8];
  sub_23FC9B78C();
  v9 = v18;
  v10 = *(_QWORD *)(sub_23FD715A0() - 8);
  v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v16 = *(_QWORD *)(v10 + 72);
  do
  {
    sub_23FD71594();
    sub_23FD71588();
    v12 = v8;
    sub_23FD74A38();
    v18 = v9;
    v13 = *(_QWORD *)(v9 + 16);
    if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      sub_23FC9B78C();
      v9 = v18;
    }
    *(_QWORD *)(v9 + 16) = v13 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, v6, v17);
    v11 += v16;
    --v7;
    v8 = v12;
  }
  while (v7);
  return v9;
}

void ClientAction.Definition.toolDefinition.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = sub_23FD745F4();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v0);
  sub_23FBFF180();
  v38 = v2 - v1;
  sub_23FD7460C();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFF180();
  sub_23FBFD684(&qword_256F5E078);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFF180();
  v9 = v8 - v7;
  sub_23FBFD684(&qword_256F5E080);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFF180();
  v14 = v13 - v12;
  sub_23FBFD684(&qword_256F5E088);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FBFF180();
  v19 = v18 - v17;
  sub_23FD747C8();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFF180();
  v22 = sub_23FD7451C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  sub_23FBFF180();
  v27 = v26 - v25;
  sub_23FD715B8();
  sub_23FD715B8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v27, *MEMORY[0x24BEB91B0], v22);
  v28 = sub_23FD715F4();
  sub_23FC167D4(v28);
  swift_bridgeObjectRelease();
  sub_23FD715E8();
  v29 = sub_23FD747E0();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v19, 1, 1, v29);
  v30 = sub_23FD74618();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 1, 1, v30);
  v31 = sub_23FD74600();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, 1, 1, v31);
  if ((sub_23FD715DC() & 1) != 0)
  {
    sub_23FBFD684(&qword_256F5E0A8);
    v32 = sub_23FD743D8();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_23FD769D0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x24BEB8ED0], v32);
  }
  v36 = sub_23FD7160C();
  sub_23FC169D0(v36);
  swift_bridgeObjectRelease();
  v37 = sub_23FD71600();
  sub_23FC16B64(v37);
  swift_bridgeObjectRelease();
  sub_23FC17570();
  sub_23FC173AC();
  sub_23FBFD684(&qword_256F5E098);
  sub_23FC177BC(&qword_256F5E0A0, &qword_256F5E098, MEMORY[0x24BEE12C8]);
  sub_23FD75098();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v38, *MEMORY[0x24BEB93F0], v40);
  sub_23FD74444();
  sub_23FC060D4();
}

uint64_t sub_23FC170C8(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23FD75248();
    sub_23FC15A24();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    sub_23FC10110();
    v5 = sub_23FD75248();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    sub_23FC10110();
    v4 = MEMORY[0x242678ED0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    result = sub_23FC17624(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_23FC10110();
    v9 = sub_23FD75248();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_20;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_23FD74CFC();
  }
  __break(1u);
  return result;
}

void sub_23FC1726C()
{
  sub_23FC17570();
}

void sub_23FC17288()
{
  sub_23FC172DC();
}

void sub_23FC172A4()
{
  sub_23FC17570();
}

void sub_23FC172C0()
{
  sub_23FC172DC();
}

void sub_23FC172DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FC17860();
  if (v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v6;
  v9 = sub_23FC17824();
  if (!(_DWORD)v9 || v5 > *(_QWORD *)(v2 + 24) >> 1)
  {
    if (v4 <= v5)
      v10 = v5;
    else
      v10 = v4;
    v2 = sub_23FC17840(v9, v10);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_14;
    goto LABEL_16;
  }
  if ((*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16) < v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = sub_23FBFD684(v8);
  sub_23FC177FC(v11);
  if (!v3)
  {
LABEL_14:
    sub_23FC15A24();
    *v1 = v2;
    sub_23FC060D4();
    return;
  }
  sub_23FC17874();
  if (!v7)
  {
    *(_QWORD *)(v2 + 16) = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_23FC17390()
{
  sub_23FC17570();
}

unint64_t sub_23FC173AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5E090;
  if (!qword_256F5E090)
  {
    v1 = sub_23FD7460C();
    result = MEMORY[0x2426797E8](MEMORY[0x24BEB9448], v1);
    atomic_store(result, (unint64_t *)&qword_256F5E090);
  }
  return result;
}

void sub_23FC173EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  sub_23FC1784C();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23FC17824() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23FC997E4();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23FC17880();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23FC9ADA4(v0 + 32, v3);
  if (!v3)
  {
LABEL_11:
    sub_23FC15A24();
    *v1 = v2;
    sub_23FC17830();
    return;
  }
  sub_23FC17874();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23FC17494()
{
  sub_23FC17570();
}

void sub_23FC174B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23FC1784C();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23FC17824() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23FC9954C();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23FC17880();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23FC9AC08(v0 + 32, v3, v2 + 16 * v7 + 32);
  if (!v3)
  {
LABEL_11:
    sub_23FC15A24();
    *v1 = v2;
    sub_23FC17830();
    return;
  }
  sub_23FC17874();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23FC17554()
{
  sub_23FC17570();
}

void sub_23FC17570()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FC17860();
  if (v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v6;
  v9 = sub_23FC17824();
  if (!(_DWORD)v9 || v5 > *(_QWORD *)(v2 + 24) >> 1)
  {
    if (v4 <= v5)
      v10 = v5;
    else
      v10 = v4;
    v2 = sub_23FC17840(v9, v10);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_14;
    goto LABEL_16;
  }
  v11 = (*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16);
  v12 = v8(0);
  if (v11 < v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_23FC177FC(v12);
  if (!v3)
  {
LABEL_14:
    sub_23FC15A24();
    *v1 = v2;
    sub_23FC060D4();
    return;
  }
  sub_23FC17874();
  if (!v7)
  {
    *(_QWORD *)(v2 + 16) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_23FC17624(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  void (*v10)(_QWORD *);
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13[4];

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23FD75248();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = sub_23FD75248();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_23FC177BC((unint64_t *)&unk_256F5E0B8, &qword_256F5E0B0, MEMORY[0x24BEE12E0]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            sub_23FBFD684(&qword_256F5E0B0);
            v10 = sub_23FC8F700(v13, i, a3);
            v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t **, _QWORD))v10)(v13, 0);
            *(_QWORD *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_23FC9AB4C((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23FC177BC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_23FBFEDE8(a2);
    result = MEMORY[0x2426797E8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23FC177FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unint64_t, uint64_t, unint64_t);
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v6 = *(_QWORD *)(a1 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v4(v1 + v7, v3, v2 + v7 + *(_QWORD *)(v6 + 72) * v5);
}

uint64_t sub_23FC17824()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FC17840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, 1, v2);
}

uint64_t sub_23FC17894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;

  v9[19] = a8;
  v9[20] = v8;
  v9[17] = a6;
  v9[18] = a7;
  v9[15] = a4;
  v9[16] = a5;
  v9[13] = a2;
  v9[14] = a3;
  v9[12] = a1;
  return swift_task_switch();
}

uint64_t sub_23FC178BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t))(v1 + 80))(v3, v1);
  v4 = *(void (**)(uint64_t, uint64_t))(v1 + 56);
  *(_QWORD *)(v0 + 80) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 88) = swift_getAssociatedConformanceWitness();
  sub_23FBFDDEC((uint64_t *)(v0 + 56));
  v4(v3, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 24))(v6, v7, v0 + 16, v0 + 56, v8, v2);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC179D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t v14;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  v14 = type metadata accessor for XPCClientAvatarConfiguration();
  *v13 = v6;
  v13[1] = sub_23FBFD8B8;
  return sub_23FC17894(a1, a2, a3, a4, v14, a5, (uint64_t)&off_256F660B8, a6);
}

uint64_t sub_23FC17A7C()
{
  return sub_23FC179D4();
}

uint64_t sub_23FC17A9C()
{
  return sub_23FBFF89C() & 1;
}

uint64_t sub_23FC17AC0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *v4;
  v10 = *sub_23FBFDE40(a4, a4[3]);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256F5E0D8 + dword_256F5E0D8);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23FBFEF9C;
  return v13(a1, a2, a3, v10, v9);
}

uint64_t sub_23FC17B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v10;
  _QWORD *v11;

  v5[9] = a3;
  v5[10] = a5;
  v5[7] = a1;
  v5[8] = a2;
  v10 = type metadata accessor for SessionCoordinatorResponseCallback(0);
  v5[11] = v10;
  v5[5] = v10;
  v5[6] = &off_2510101F0;
  v5[2] = a4;
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  v5[12] = v11;
  *v11 = v5;
  v11[1] = sub_23FC17C00;
  return sub_23FD6CAEC(a1, a2, a3);
}

uint64_t sub_23FC17C00()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc();
  v3 = (_QWORD *)swift_task_alloc();
  v1[13] = (uint64_t)v3;
  *v3 = v2;
  v3[1] = sub_23FC17C6C;
  return sub_23FD6BBF4(v1[7], v1[8], v1[9]);
}

uint64_t sub_23FC17C6C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23FC17CC0()
{
  uint64_t v0;

  sub_23FBFDE40((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 88));
  sub_23FCB7480(MEMORY[0x24BEE4AF8], (uint64_t)sub_23FBFF828, 0, 0);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC17D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[3];
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;

  v3 = sub_23FD74090();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v22 - v10;
  v26 = sub_23FD7409C();
  v25 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v22[2] = v1;
    v16 = *(_QWORD *)(sub_23FD740CC() - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v24 = *MEMORY[0x24BE56BD0];
    v23 = *(_QWORD *)(v16 + 72);
    v22[1] = a1;
    swift_bridgeObjectRetain();
    v18 = v15 - 1;
    do
    {
      v19 = v18;
      sub_23FD740A8();
      sub_23FD7406C();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v26);
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, v24, v3);
      LOBYTE(v15) = sub_23FD74084();
      v20 = *(void (**)(char *, uint64_t))(v4 + 8);
      v20(v8, v3);
      v20(v11, v3);
      if ((v15 & 1) != 0)
        break;
      v18 = v19 - 1;
      v17 += v23;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  return v15 & 1;
}

uint64_t sub_23FC17EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_23FC9B8E4(0, v2, 0);
    v3 = v18;
    sub_23FC5F584();
    sub_23FC5F570();
    v6 = a1 + v5;
    v17 = *(_QWORD *)(v7 + 72);
    sub_23FBFEE2C(&qword_256F5E4C8, v8, MEMORY[0x24BE56CC8]);
    while (1)
    {
      v9 = sub_23FD73BC8();
      if (v1)
        break;
      v11 = v9;
      v12 = v10;
      v14 = *(_QWORD *)(v18 + 16);
      v13 = *(_QWORD *)(v18 + 24);
      if (v14 >= v13 >> 1)
        sub_23FC9B8E4(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = v18 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v12;
      v6 += v17;
      if (!--v2)
        return v3;
    }
    swift_release();
  }
  return v3;
}

uint64_t sub_23FC18010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = v5;
  v22 = a5;
  v23 = a4;
  v21 = a3;
  v20 = sub_23FD740CC();
  v9 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v24 = MEMORY[0x24BEE4AF8];
    sub_23FC9B4C4();
    v14 = v24;
    v15 = *(_QWORD *)(type metadata accessor for EventPayloadWithPreassignedID(0) - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v19 = *(_QWORD *)(v15 + 72);
    while (1)
    {
      sub_23FC50640(v16, a2, v21, v23, v22, (uint64_t)v12);
      if (v6)
        break;
      v6 = 0;
      v24 = v14;
      v17 = *(_QWORD *)(v14 + 16);
      if (v17 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_23FC9B4C4();
        v14 = v24;
      }
      *(_QWORD *)(v14 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v17, v12, v20);
      v16 += v19;
      if (!--v13)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    v14 = MEMORY[0x24BEE4AF8];
LABEL_10:
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_23FC181D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_23FC5F584();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_23FBFEFE0();
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v16 = MEMORY[0x24BEE4AF8];
    v15 = v6;
    sub_23FC9B4C4();
    v8 = v16;
    v9 = a1 + 40;
    while (1)
    {
      sub_23FC5F4C8();
      sub_23FC5F4C8();
      sub_23FBFEE2C((unint64_t *)&unk_256F61620, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CC0]);
      sub_23FC5E96C();
      sub_23FD73BBC();
      v10 = sub_23FC5E96C();
      if (v1)
        break;
      sub_23FC577B0(v10, v11);
      v12 = *(_QWORD *)(v16 + 16);
      if (v12 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_23FC9B4C4();
      v9 += 16;
      *(_QWORD *)(v16 + 16) = v12 + 1;
      sub_23FC102C4();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v16 + v13 + *(_QWORD *)(v4 + 72) * v12, v15, v3);
      if (!--v7)
        return v8;
    }
    sub_23FC577B0(v10, v11);
    swift_release();
  }
  return v8;
}

uint64_t sub_23FC18354(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v17 = MEMORY[0x24BEE4AF8];
  sub_23FC9B8C8(0, v1, 0);
  v2 = v17;
  result = sub_23FD3C370(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    v6 = result;
    if (result < 1 << *(_BYTE *)(a1 + 32))
    {
      v7 = v5;
      v8 = a1 + 64;
      while ((*(_QWORD *)(v8 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
      {
        if (v7 != *(_DWORD *)(a1 + 36))
          goto LABEL_18;
        v9 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
        v10 = v9[1];
        v14 = v1;
        v15 = *v9;
        v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
        v12 = *(_QWORD *)(v17 + 16);
        v11 = *(_QWORD *)(v17 + 24);
        result = swift_bridgeObjectRetain();
        if (v12 >= v11 >> 1)
          result = (uint64_t)sub_23FC9B8C8((char *)(v11 > 1), v12 + 1, 1);
        *(_QWORD *)(v17 + 16) = v12 + 1;
        v13 = (_QWORD *)(v17 + 24 * v12);
        v13[4] = v15;
        v13[5] = v10;
        v13[6] = v16;
        if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_19;
        v8 = a1 + 64;
        if ((*(_QWORD *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
          goto LABEL_20;
        if (v7 != *(_DWORD *)(a1 + 36))
          goto LABEL_21;
        result = sub_23FD750B0();
        v1 = v14 - 1;
        if (v14 == 1)
          return v2;
        v6 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v7 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_23FC18520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  v3 = sub_23FD74090();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return 0;
  v22 = v1;
  v24 = type metadata accessor for EventPayloadWithPreassignedID(0);
  v13 = *(_QWORD *)(v24 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = *MEMORY[0x24BE56BE0];
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v12 - 1;
  v17 = a1 + v14 + v15 * (v12 - 1);
  v18 = -v15;
  while (1)
  {
    sub_23FD7406C();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, v23, v3);
    v19 = sub_23FD74084();
    v20 = *(void (**)(char *, uint64_t))(v4 + 8);
    v20(v8, v3);
    v20(v11, v3);
    if ((v19 & 1) != 0)
      break;
    --v16;
    v17 += v18;
    if (v16 == -1)
      return 0;
  }
  return v16;
}

void sub_23FC18694(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < a1)
  {
    __break(1u);
  }
  else if ((a1 & 0x8000000000000000) == 0)
  {
    sub_23FC5F584();
    sub_23FC5F564();
    sub_23FC102C4();
    sub_23FC5AFCC();
    sub_23FC5E808();
    return;
  }
  __break(1u);
}

uint64_t sub_23FC186F8(uint64_t result, uint64_t a2)
{
  unint64_t v2;

  v2 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(a2 + 16) >= v2)
  {
    sub_23FD740CC();
    return swift_bridgeObjectRetain();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_23FC18778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  BOOL v22;
  _QWORD v24[3];
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;

  v3 = sub_23FD74090();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v24 - v10;
  v28 = sub_23FD7409C();
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v24[2] = v1;
    v16 = *(_QWORD *)(sub_23FD740CC() - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v26 = *MEMORY[0x24BE56BE8];
    v25 = *(_QWORD *)(v16 + 72);
    v24[1] = a1;
    swift_bridgeObjectRetain();
    v18 = v15 - 1;
    do
    {
      sub_23FD740A8();
      sub_23FD7406C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, v26, v3);
      v19 = sub_23FD74084();
      v20 = *(void (**)(char *, uint64_t))(v4 + 8);
      v20(v8, v3);
      v20(v11, v3);
      v22 = v18-- != 0;
      if ((v19 & 1) == 0)
        break;
      v17 += v25;
    }
    while (v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 1;
  }
  return v19 & 1;
}

unint64_t sub_23FC18940@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    if (*(_QWORD *)(a2 + 16) > result)
    {
      v6 = sub_23FD740CC();
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4, v6);
    }
  }
  __break(1u);
  return result;
}

void sub_23FC189B4(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > a1)
  {
    v6 = type metadata accessor for EventPayloadWithPreassignedID(0);
    sub_23FC0EDD8(a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, a3, type metadata accessor for EventPayloadWithPreassignedID);
    return;
  }
  __break(1u);
}

uint64_t sub_23FC18A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientProxy) = 0;
  v5 = v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_configuration;
  v6 = sub_23FC5DC54();
  sub_23FBFF0F8(v5, v7, v8, v6);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientActionIndexTask) = 0;
  sub_23FC0F380(a1, v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, type metadata accessor for SessionClientID);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_switchboard) = a2;
  return v2;
}

void sub_23FC18AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, NSObject *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23FC10100();
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFE0();
  v55 = v11;
  v12 = sub_23FC5DC54();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v57 = v15;
  v54 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_254346A28);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FBFEFE0();
  v51 = v18;
  v19 = sub_23FD723C8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_256F5E5A8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v3;
  v29 = v3[1];
  v52 = v3[2];
  v53 = v28;
  v49 = v3[3];
  v50 = v29;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientProxy) = v7;
  swift_release();
  v61 = v13;
  v30 = *(void (**)(char *, NSObject *, uint64_t))(v13 + 16);
  v56 = v5;
  v30(v27, v5, v12);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v27, 0, 1, v12);
  v58 = v1;
  sub_23FC59120();
  sub_23FC58F98();
  v31 = sub_23FC5D3FC();
  sub_23FC582EC(v31, v32, &qword_256F5E5A8);
  swift_endAccess();
  sub_23FC100A0((uint64_t)v23, *MEMORY[0x24BE57430], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
  LOBYTE(v1) = sub_23FD723BC();
  sub_23FC59A44(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  if ((v1 & 1) != 0)
  {
    v33 = sub_23FC5DC5C();
    v34 = v51;
    sub_23FBFF0F8(v51, v35, v36, v33);
    v37 = (uint64_t)v54;
    v30(v54, v56, v12);
    v38 = qword_256F5D2D8;
    v39 = v50;
    sub_23FC5A09C();
    v40 = swift_bridgeObjectRetain();
    if (v38 != -1)
      swift_once();
    v41 = qword_256F7F480;
    sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
    v43 = v42;
    v44 = v61;
    v45 = (*(unsigned __int8 *)(v61 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    v46 = (_QWORD *)swift_allocObject();
    v46[2] = v41;
    v46[3] = v43;
    v46[4] = v53;
    v46[5] = v39;
    v46[6] = v52;
    v46[7] = v40;
    sub_23FC06160((uint64_t)v46 + v45, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32));
    sub_23FC58D78();
    v47 = sub_23FD59E94(v34, (uint64_t)&unk_256F5E5B8, (uint64_t)v46);
    *(_QWORD *)(v58 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientActionIndexTask) = v47;
    swift_release();
  }
  else
  {
    sub_23FC5BC80();
    sub_23FC5BD8C();
    v48 = sub_23FC5DB08();
    if (os_log_type_enabled(v5, v48))
    {
      *(_WORD *)sub_23FBFEFF4() = 0;
      sub_23FC5D9D0(&dword_23FBF8000, v5, v48, "Skipping shim indexing since ShimToolRetrieval flag is disabled");
      sub_23FBFEFA0();
    }

    sub_23FC5AFAC(v59);
  }
  sub_23FC060D4();
}

uint64_t sub_23FC18E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v9 = sub_23FD72BF0();
  v8[7] = v9;
  v8[8] = *(_QWORD *)(v9 - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v8[11] = qword_256F7F480;
  type metadata accessor for SessionControlActor();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  swift_retain();
  v8[12] = sub_23FD74D80();
  v8[13] = v10;
  return swift_task_switch();
}

uint64_t sub_23FC18F1C()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;
  __int128 v12;

  sub_23FC58FB0();
  v2 = sub_23FD72BE4();
  v3 = sub_23FD74F6C();
  if (sub_23FC5E334(v3))
  {
    *(_WORD *)sub_23FBFEFF4() = 0;
    sub_23FC5D9D0(&dword_23FBF8000, v2, v0, "Indexing client actions");
    sub_23FBFEFA0();
  }
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v1 + 48);
  v11 = *(_OWORD *)(v1 + 16);
  v12 = *(_OWORD *)(v1 + 32);

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v1 + 112) = v7;
  sub_23FC595C4(v4, v7);
  v8 = swift_task_alloc();
  *(_QWORD *)(v1 + 120) = v8;
  *(_OWORD *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 32) = v12;
  *(_QWORD *)(v8 + 48) = v6;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 128) = v9;
  *v9 = v1;
  v9[1] = sub_23FC19038;
  return sub_23FD72464();
}

uint64_t sub_23FC19038()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC5D3A4();
  *v3 = *v2;
  *(_QWORD *)(v0 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC19094()
{
  os_log_type_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  swift_release();
  sub_23FC58FB0();
  v2 = sub_23FD72BE4();
  v3 = sub_23FD74F6C();
  if (sub_23FC5E334(v3))
  {
    *(_WORD *)sub_23FBFEFF4() = 0;
    sub_23FC5D9D0(&dword_23FBF8000, v2, v0, "Finished indexing client actions");
    sub_23FBFEFA0();
  }
  v4 = (void (*)(uint64_t, uint64_t))v1[14];
  v5 = v1[9];
  v6 = v1[7];

  v4(v5, v6);
  sub_23FC090C0();
  sub_23FC5A574();
  v7 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5B938(v7);
}

uint64_t sub_23FC19140()
{
  uint64_t v0;

  swift_release();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  return sub_23FC5B0D0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC19188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[24] = a3;
  v6[25] = a6;
  v6[23] = a2;
  v7 = sub_23FD74474();
  v6[26] = v7;
  v6[27] = *(_QWORD *)(v7 - 8);
  v6[28] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D90);
  v6[29] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v6[30] = swift_task_alloc();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v6[31] = qword_256F7F480;
  type metadata accessor for SessionControlActor();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  swift_retain();
  v6[32] = sub_23FD74D80();
  v6[33] = v8;
  return swift_task_switch();
}

uint64_t sub_23FC192B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t (*v26)(void);

  sub_23FC5BC54();
  *(_QWORD *)(v0 + 272) = static ToolboxManager.toolboxes()();
  v2 = static ToolboxManager.toolboxes()();
  *(_QWORD *)(v0 + 280) = v2;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 336) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 64);
  if (v6)
  {
    v7 = 0;
    v8 = __clz(__rbit64(v6));
    v9 = (v6 - 1) & v6;
    goto LABEL_5;
  }
  v17 = 63 - v5;
  if (v17 <= 0x7F)
    goto LABEL_29;
  if (!*(_QWORD *)(v2 + 72))
  {
    if (v17 >= 0xC0)
    {
      if (*(_QWORD *)(v2 + 80))
        goto LABEL_8;
      if (v17 >= 0x100)
      {
        if (*(_QWORD *)(v2 + 88))
          goto LABEL_8;
        if (v17 >= 0x140)
        {
          if (*(_QWORD *)(v2 + 96))
            goto LABEL_8;
          if (v17 >= 0x180)
          {
            if (*(_QWORD *)(v2 + 104))
              goto LABEL_8;
            v23 = v17 >> 6;
            v24 = 14;
            while (v24 - 8 < v23)
            {
              if (*(_QWORD *)(v2 + 8 * v24++))
                goto LABEL_8;
            }
          }
        }
      }
    }
LABEL_29:
    swift_release();
    sub_23FC58AC8();
    sub_23FD73010();
    sub_23FD73004();
    sub_23FC5F2E8();
    sub_23FC5F204();
    sub_23FD72FF8();
    sub_23FC58AC8();
    sub_23FC15A24();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    v26 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC5BC14(v26);
  }
LABEL_8:
  sub_23FC5F270();
  v8 = v18 + (v7 << 6);
LABEL_5:
  *(_QWORD *)(v0 + 288) = v9;
  *(_QWORD *)(v0 + 296) = v7;
  v10 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 240);
  sub_23FC58440(*(_QWORD *)(v2 + 56) + 80 * v8, v0 + 16);
  v12 = sub_23FD732EC();
  sub_23FC584E0(v0 + 16, v0 + 96);
  sub_23FC5F398(v0 + 56);
  sub_23FC5847C(v0 + 16);
  v13 = sub_23FD71354();
  sub_23FC5BDAC(v13, v14, v15, v13);
  v16 = sub_23FC5F58C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, 1, 1, v16);
  *(_QWORD *)(v0 + 304) = sub_23FD732D4();
  v19 = *(_QWORD *)(sub_23FC5F49C() + 16);
  if (v19)
  {
    sub_23FC5D340(MEMORY[0x24BEE4AF8]);
    sub_23FC5F264();
    sub_23FC5DC38();
    do
    {
      sub_23FC5F258();
      sub_23FC5F244();
      if (v20)
      {
        sub_23FC5D308();
        v11 = *(_QWORD *)(v0 + 176);
      }
      sub_23FC5B904();
      v12 += v1;
      --v19;
    }
    while (v19);
    sub_23FC595E0();
  }
  else
  {
    sub_23FC595E0();
    v11 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 312) = v11;
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v21;
  sub_23FC5D974(v21, (uint64_t)sub_23FC195A0);
  return sub_23FC5BBF8();
}

uint64_t sub_23FC195A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC5D3A4();
  *v3 = *v2;
  *(_QWORD *)(v0 + 328) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return sub_23FC5A63C();
}

uint64_t sub_23FC195F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  int64_t v25;
  int64_t v26;
  uint64_t (*v27)(void);

  sub_23FC5BC54();
  result = swift_release();
  v3 = v0[41];
  if (!v0[36])
  {
    if (__OFADD__(v0[37], 1))
    {
      __break(1u);
    }
    else
    {
      sub_23FC5F1D8();
      v19 = v18 + 63;
      result = v0[35];
      if (v17 >= (uint64_t)((unint64_t)(v18 + 63) >> 6))
        goto LABEL_29;
      v20 = result + 64;
      v21 = *(_QWORD *)(result + 64 + 8 * v17);
      v4 = v17;
      if (v21)
      {
LABEL_8:
        v5 = (v21 - 1) & v21;
        v7 = __clz(__rbit64(v21)) + (v4 << 6);
        goto LABEL_3;
      }
      v25 = v19 >> 6;
      v4 = v17 + 1;
      if (v17 + 1 >= v25)
        goto LABEL_29;
      v21 = *(_QWORD *)(v20 + 8 * v4);
      if (v21)
        goto LABEL_8;
      v4 = v17 + 2;
      if (v17 + 2 >= v25)
        goto LABEL_29;
      v21 = *(_QWORD *)(v20 + 8 * v4);
      if (v21)
        goto LABEL_8;
      v4 = v17 + 3;
      if (v17 + 3 >= v25)
        goto LABEL_29;
      v21 = *(_QWORD *)(v20 + 8 * v4);
      if (v21)
        goto LABEL_8;
      v26 = v17 + 4;
      if (v26 >= v25)
      {
LABEL_29:
        swift_release();
        sub_23FC58AC8();
        sub_23FD73010();
        sub_23FD73004();
        sub_23FC5F2E8();
        sub_23FC5F204();
        sub_23FD72FF8();
        if (!v3)
        {
          sub_23FC58AC8();
          sub_23FC15A24();
          sub_23FC5A574();
          sub_23FC5AB04();
          sub_23FC5AC3C();
          v27 = (uint64_t (*)(void))sub_23FC5C528();
          return sub_23FC5BC14(v27);
        }
        sub_23FC58AC8();
        sub_23FC15A24();
LABEL_31:
        sub_23FC5F1E4();
        sub_23FC090D0();
        sub_23FC090C0();
        v27 = (uint64_t (*)(void))v0[1];
        return sub_23FC5BC14(v27);
      }
      v21 = *(_QWORD *)(v20 + 8 * v26);
      if (v21)
      {
        v4 = v26;
        goto LABEL_8;
      }
      while (1)
      {
        v4 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (v4 >= v25)
          goto LABEL_29;
        v21 = *(_QWORD *)(v20 + 8 * v4);
        ++v26;
        if (v21)
          goto LABEL_8;
      }
    }
    __break(1u);
    return result;
  }
  sub_23FC5F270();
  v7 = v6 | (v4 << 6);
  result = v0[35];
LABEL_3:
  v0[36] = v5;
  v0[37] = v4;
  v8 = v0[29];
  v9 = v0[30];
  v10 = v0 + 7;
  sub_23FC58440(*(_QWORD *)(result + 56) + 80 * v7, (uint64_t)(v0 + 2));
  sub_23FD732EC();
  v11 = sub_23FC5D408();
  sub_23FC584E0(v11, v12);
  sub_23FC5F398((uint64_t)(v0 + 7));
  sub_23FC5847C((uint64_t)(v0 + 2));
  v13 = sub_23FD71354();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, 1, 1, v13);
  v14 = sub_23FC5F58C();
  sub_23FC5BDAC(v14, v15, v16, v14);
  sub_23FC5F3A0();
  v0[38] = sub_23FD732D4();
  if (v3)
  {
    sub_23FC5F284();
    sub_23FC1002C();
    sub_23FC101F4();
    goto LABEL_31;
  }
  v22 = *(_QWORD *)(sub_23FC5F49C() + 16);
  if (v22)
  {
    sub_23FC5D340(MEMORY[0x24BEE4AF8]);
    sub_23FC5F264();
    sub_23FC5DC38();
    do
    {
      sub_23FC5F258();
      sub_23FC5F244();
      if (v23)
      {
        sub_23FC5D308();
        v8 = v0[22];
      }
      sub_23FC5B904();
      v10 = (_QWORD *)((char *)v10 + v1);
      --v22;
    }
    while (v22);
    sub_23FC595E0();
  }
  else
  {
    sub_23FC595E0();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v0[39] = v8;
  v24 = (_QWORD *)swift_task_alloc();
  v0[40] = v24;
  sub_23FC5D974(v24, (uint64_t)sub_23FC195A0);
  return sub_23FC5BBF8();
}

uint64_t sub_23FC198B8()
{
  uint64_t v0;

  swift_release();
  sub_23FC58AC8();
  sub_23FC595E0();
  sub_23FC101F4();
  swift_task_dealloc();
  sub_23FC090C0();
  sub_23FC5A574();
  return sub_23FC5B0D0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC19914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v7 + 384) = a6;
  *(_QWORD *)(v7 + 392) = v6;
  *(_BYTE *)(v7 + 51) = a5;
  *(_QWORD *)(v7 + 368) = a3;
  *(_QWORD *)(v7 + 376) = a4;
  *(_QWORD *)(v7 + 360) = a1;
  sub_23FBFD684(&qword_254346A28);
  *(_QWORD *)(v7 + 400) = sub_23FC0901C();
  v9 = sub_23FD73160();
  *(_QWORD *)(v7 + 408) = v9;
  *(_QWORD *)(v7 + 416) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 424) = sub_23FC0901C();
  v10 = sub_23FD71BD0();
  *(_QWORD *)(v7 + 432) = v10;
  *(_QWORD *)(v7 + 440) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 448) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 456) = sub_23FC59C3C();
  sub_23FBFD684(&qword_256F5E2E8);
  *(_QWORD *)(v7 + 464) = sub_23FC0901C();
  v11 = sub_23FD71C30();
  *(_QWORD *)(v7 + 472) = v11;
  *(_QWORD *)(v7 + 480) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 488) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 496) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 504) = sub_23FC59C3C();
  sub_23FBFD684(&qword_256F5E2F0);
  *(_QWORD *)(v7 + 512) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5E2F8);
  *(_QWORD *)(v7 + 520) = sub_23FC0901C();
  v12 = sub_23FD71738();
  *(_QWORD *)(v7 + 528) = v12;
  *(_QWORD *)(v7 + 536) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v7 + 544) = sub_23FC0901C();
  v13 = sub_23FD73D3C();
  *(_QWORD *)(v7 + 552) = v13;
  *(_QWORD *)(v7 + 560) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 568) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 576) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 584) = sub_23FC59C3C();
  sub_23FBFD684(&qword_256F61790);
  *(_QWORD *)(v7 + 592) = sub_23FC0901C();
  v14 = sub_23FC10100();
  *(_QWORD *)(v7 + 600) = v14;
  *(_QWORD *)(v7 + 608) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v7 + 616) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 624) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 632) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 640) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 648) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 656) = sub_23FC59C3C();
  v15 = sub_23FD71EB8();
  *(_QWORD *)(v7 + 664) = v15;
  *(_QWORD *)(v7 + 672) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v7 + 680) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 688) = sub_23FC59C3C();
  sub_23FBFD684(&qword_256F5E300);
  *(_QWORD *)(v7 + 696) = sub_23FC0901C();
  v16 = sub_23FD71ED0();
  *(_QWORD *)(v7 + 704) = v16;
  *(_QWORD *)(v7 + 712) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v7 + 720) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5E308);
  *(_QWORD *)(v7 + 728) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 736) = sub_23FC59C3C();
  v17 = sub_23FD71E64();
  *(_QWORD *)(v7 + 744) = v17;
  *(_QWORD *)(v7 + 752) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v7 + 760) = sub_23FC0901C();
  v18 = sub_23FD71EE8();
  *(_QWORD *)(v7 + 768) = v18;
  *(_QWORD *)(v7 + 776) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v7 + 784) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 792) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 800) = sub_23FC59C3C();
  sub_23FC5EA38();
  *(_QWORD *)(v7 + 808) = sub_23FC0901C();
  v19 = sub_23FD72B6C();
  *(_QWORD *)(v7 + 816) = v19;
  *(_QWORD *)(v7 + 824) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v7 + 832) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 840) = sub_23FC59C3C();
  v20 = sub_23FD72B90();
  *(_QWORD *)(v7 + 848) = v20;
  *(_QWORD *)(v7 + 856) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v7 + 864) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 872) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 880) = type metadata accessor for SessionID(0);
  *(_QWORD *)(v7 + 888) = sub_23FC0901C();
  v21 = sub_23FC5D530();
  *(_QWORD *)(v7 + 896) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v7 + 904) = v22;
  *(_QWORD *)(v7 + 912) = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v7 + 920) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 928) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 936) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 944) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 952) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 960) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 968) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 976) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 984) = sub_23FC59C3C();
  v23 = sub_23FC5F584();
  *(_QWORD *)(v7 + 992) = v23;
  *(_QWORD *)(v7 + 1000) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v7 + 1008) = sub_23FC0901C();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  *(_QWORD *)(v7 + 1016) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 1024) = sub_23FC59C3C();
  sub_23FBFD684(&qword_256F5E310);
  *(_QWORD *)(v7 + 1032) = sub_23FC59BAC();
  *(_QWORD *)(v7 + 1040) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 1048) = sub_23FC59C3C();
  *(_QWORD *)(v7 + 1056) = *(_QWORD *)a2;
  *(_OWORD *)(v7 + 1064) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(v7 + 1080) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(v7 + 1088) = *(_OWORD *)(a2 + 32);
  if (qword_256F5D2D8 != -1)
    swift_once();
  *(_QWORD *)(v7 + 1104) = qword_256F7F480;
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  *(_QWORD *)(v7 + 1112) = v24;
  sub_23FC58D78();
  *(_QWORD *)(v7 + 1120) = sub_23FC5CBA4();
  *(_QWORD *)(v7 + 1128) = v25;
  return sub_23FC5A19C();
}

uint64_t sub_23FC19D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;
  NSObject *v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject **v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  unint64_t v40;
  os_signpost_type_t v41;
  os_signpost_id_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87[3];

  v4 = *(_QWORD *)(v3 + 384);
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 1016);
    v6 = *(_QWORD *)(v3 + 992);
    sub_23FD4BCF8(v4, *(_QWORD *)(v3 + 1024));
    v7 = sub_23FC5E880();
    sub_23FC0F3AC(v7, v8, v9);
    v10 = 1;
    sub_23FC100EC(v5, 1, v6);
    if (!v11)
    {
      v12 = *(_QWORD *)(v3 + 1008);
      v13 = *(_QWORD *)(v3 + 1000);
      sub_23FC06160(v12, *(_QWORD *)(v3 + 1016), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
      sub_23FD740B4();
      sub_23FC595C4(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
      v10 = 0;
    }
    v14 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v3 + 1040), v10, 1, *(_QWORD *)(v3 + 880));
    sub_23FC5F358(v14, (uint64_t *)&unk_256F61700);
  }
  else
  {
    sub_23FBFF0F8(*(_QWORD *)(v3 + 1040), a2, a3, *(_QWORD *)(v3 + 880));
  }
  v15 = *(_QWORD *)(v3 + 1048);
  v16 = *(_QWORD *)(v3 + 1032);
  sub_23FC5F340(*(_QWORD *)(v3 + 1040), v15);
  sub_23FC0F3AC(v15, v16, &qword_256F5E310);
  if (sub_23FC5C150(v16) == 1)
  {
    v17 = _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
    sub_23FC5C15C(v17, &qword_256F5E310);
  }
  else
  {
    sub_23FC0F380(*(_QWORD *)(v3 + 1032), *(_QWORD *)(v3 + 888), type metadata accessor for SessionID);
  }
  v18 = *(NSObject **)(v3 + 1096);
  v19 = *(NSObject **)(v3 + 1088);
  v20 = *(NSObject **)(v3 + 1080);
  v21 = *(NSObject **)(v3 + 1072);
  v22 = *(NSObject **)(v3 + 1064);
  v23 = *(NSObject **)(v3 + 1056);
  v24 = *(_QWORD *)(v3 + 984);
  v25 = *(_QWORD *)(v3 + 896);
  v26 = *(_QWORD *)(v3 + 864);
  v84 = *(_QWORD *)(v3 + 976);
  v85 = *(_QWORD *)(v3 + 848);
  v81 = *(_QWORD *)(v3 + 856);
  sub_23FC0F380(*(_QWORD *)(v3 + 888), v24, type metadata accessor for SessionID);
  v27 = (NSObject **)(v24 + *(int *)(v25 + 20));
  *v27 = v23;
  v27[1] = v22;
  v27[2] = v21;
  v27[3] = v20;
  v27[4] = v19;
  v27[5] = v18;
  sub_23FC5AFCC();
  sub_23FC5C180();
  sub_23FC5B578();
  sub_23FD723EC();
  sub_23FD723E0();
  sub_23FD72B84();
  sub_23FD72B48();
  v28 = v85;
  v86 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
  v86(v26, v28);
  sub_23FC0EDD8(v24, v84, type metadata accessor for SessionIdentityPack);
  swift_retain_n();
  sub_23FD72B84();
  sub_23FC5F348();
  v29 = sub_23FC5F140();
  v30 = *(_QWORD *)(v3 + 976);
  if ((v29 & 1) != 0)
  {
    v31 = *(_QWORD *)(v3 + 808);
    v32 = *(_QWORD *)(v3 + 392);
    (*(void (**)(void))(*(_QWORD *)(v3 + 824) + 16))();
    v33 = sub_23FBFEFF4();
    v87[0] = sub_23FBFEFF4();
    *(_DWORD *)v33 = 136315394;
    sub_23FC5E274(v32 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, v31);
    v34 = sub_23FD71438();
    v36 = v35;
    v37 = sub_23FC5D48C();
    sub_23FC5806C(v37, v38);
    *(_QWORD *)(v3 + 344) = sub_23FC9DC40(v34, v36, v87);
    sub_23FD75044();
    sub_23FC15A24();
    sub_23FC5E1B0();
    *(_WORD *)(v33 + 12) = 2080;
    v39 = SessionIdentityPack.description.getter();
    *(_QWORD *)(v3 + 336) = sub_23FC5C074(v39, v40);
    sub_23FC5DAF4();
    sub_23FC1002C();
    sub_23FC5806C(v30, type metadata accessor for SessionIdentityPack);
    sub_23FD72B54();
    sub_23FC5AFA0();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v23, v41, v42, "SessionCreate", "[ClientSessionManager %s] Create Session %s Start", (uint8_t *)v33, 0x16u);
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  v43 = *(_QWORD *)(v3 + 824);

  sub_23FC5E1B0();
  sub_23FC5806C(v30, type metadata accessor for SessionIdentityPack);
  v44 = *(_QWORD *)(v3 + 824);
  v45 = *(_QWORD *)(v3 + 776);
  v46 = *(_QWORD *)(v3 + 768);
  v83 = *(_QWORD *)(v3 + 800);
  v47 = *(_QWORD *)(v3 + 376);
  sub_23FC5AE8C(*(_QWORD *)(v3 + 832), *(_QWORD *)(v3 + 840), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16));
  sub_23FC5B9F8();
  sub_23FBFF1C4();
  v82 = sub_23FC5C018();
  *(_QWORD *)(v3 + 1136) = v82;
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
  v48 = sub_23FBFF1AC();
  ((void (*)(uint64_t))v86)(v48);
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  *(_QWORD *)(v3 + 1144) = v49;
  v49(v83, v47, v46);
  sub_23FC59120();
  sub_23FC5DC54();
  v50 = sub_23FC5E824();
  v53 = 0;
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v50, v51, v52))
    v53 = sub_23FD72050();
  v54 = *(_QWORD *)(v3 + 800);
  v55 = *(_QWORD *)(v3 + 792);
  v56 = *(_QWORD *)(v3 + 768);
  sub_23FC5F508();
  v49(v55, v54, v56);
  v57 = MEMORY[0x24BEE4AF8];
  if (!v53)
  {
    v58 = sub_23FD71E7C();
    if (v58)
      v53 = v58;
    else
      v53 = v57;
  }
  *(_QWORD *)(v3 + 1152) = v53;
  v59 = *(_QWORD *)(v3 + 792);
  v60 = *(_QWORD *)(v3 + 768);
  v61 = *(_QWORD *)(v3 + 744);
  v62 = *(_QWORD *)(v3 + 728);
  v63 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 776) + 8);
  *(_QWORD *)(v3 + 1160) = v63;
  v64 = v63(v59, v60);
  MEMORY[0x242675C24](v64);
  sub_23FC100EC(v62, 1, v61);
  if (v11)
  {
    v65 = *(_QWORD *)(v3 + 728);
    swift_getKeyPath();
    sub_23FD71534();
    sub_23FC58C6C();
    sub_23FD71E4C();
    sub_23FC584B0(v65, &qword_256F5E308);
  }
  else
  {
    v66 = *(_QWORD *)(v3 + 744);
    v67 = *(_QWORD *)(v3 + 736);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 + 752) + 32))(v67, *(_QWORD *)(v3 + 728), v66);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v67, 0, 1, v66);
  }
  v68 = *(_QWORD *)(v3 + 736);
  sub_23FC100EC(v68, 1, *(_QWORD *)(v3 + 744));
  if (v11)
  {
    v69 = *(_QWORD *)(v3 + 984);
    v70 = *(_QWORD *)(v3 + 392);
    swift_release();
    v71 = sub_23FC5A2A8();
    sub_23FC5C15C(v71, &qword_256F5E308);
    sub_23FC57234();
    sub_23FC5A704();
    *v72 = 2;
    swift_willThrow();
    v73 = sub_23FC5C5C0();
    ((void (*)(uint64_t))v63)(v73);
    sub_23FC1CB40(v82, v70, v69);
    sub_23FC5F010();
    v74 = sub_23FC59018();
    sub_23FC5F384(v74, &qword_256F5E310);
    sub_23FC5CC1C(v75, type metadata accessor for SessionIdentityPack);
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC5B2D4();
    sub_23FC090D0();
    sub_23FC5AC3C();
    sub_23FC5AB04();
    sub_23FC5A574();
    sub_23FC090C0();
    sub_23FC5BCA0();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5D7F4();
    sub_23FC5E088();
    sub_23FC5C418();
    sub_23FC5BFD8();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    return sub_23FC5BB70(*(uint64_t (**)(void))(v3 + 8));
  }
  else
  {
    v77 = *(_QWORD *)(v3 + 392);
    sub_23FC1046C(*(_QWORD *)(v3 + 760), v68, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 752) + 32));
    v78 = *(_QWORD *)(v77 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_clientActionIndexTask);
    *(_QWORD *)(v3 + 1168) = v78;
    if (!v78)
    {
      sub_23FC5D880();
      sub_23FC5E6BC();
      if (v11)
      {
        v80 = sub_23FC5EFB4();
        sub_23FC5C15C(v80, &qword_256F5E300);
      }
      else
      {
        sub_23FC5BC30(*(_QWORD *)(v3 + 712));
      }
      sub_23FC5C938();
    }
    sub_23FC58D78();
    v79 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 1176) = v79;
    *(_QWORD *)(v3 + 1184) = sub_23FBFD684(&qword_254346E20);
    *v79 = v3;
    v79[1] = sub_23FC1B294;
    return sub_23FD74E94();
  }
}

uint64_t sub_23FC1B294()
{
  _QWORD *v0;

  sub_23FC5D3A4();
  sub_23FC5AEA0(v0);
  sub_23FC58AC8();
  return sub_23FC5A63C();
}

void sub_23FC1B2D8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  if ((*(_BYTE *)(v0 + 264) & 1) != 0)
  {
    v1 = *(NSObject **)(v0 + 616);
    *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 256);
    swift_willThrowTypedImpl();
    sub_23FC58FB0();
    sub_23FC09248();
    sub_23FC09248();
    sub_23FD72BE4();
    v2 = sub_23FC09250();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)sub_23FBFEFF4();
      v4 = (_QWORD *)sub_23FBFEFF4();
      *(_DWORD *)v3 = 138412290;
      sub_23FC09248();
      v5 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 352) = v5;
      sub_23FD75044();
      *v4 = v5;
      sub_23FC5E59C();
      sub_23FBFF114(&dword_23FBF8000, v1, v2, "Client action indexing failed: %@", v3);
      sub_23FBFD684(&qword_254346A30);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FC5E59C();
    sub_23FC0917C();

    sub_23FC090C8(*(_QWORD *)(v0 + 608));
  }
  sub_23FC5D880();
  sub_23FC5E6BC();
  if (v6)
  {
    v7 = sub_23FC5EFB4();
    sub_23FC5C15C(v7, &qword_256F5E300);
  }
  else
  {
    sub_23FC5BC30(*(_QWORD *)(v0 + 712));
  }
  sub_23FC5C938();
}

uint64_t sub_23FC1C26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  *(_QWORD *)(v0 + 1208) = v2;
  *(_QWORD *)(v0 + 1216) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC1C2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;

  sub_23FC5ACE0();
  v13 = *(_QWORD *)(v12 + 384);
  swift_release();
  if (!v13)
  {
    v15 = *(_QWORD *)(v12 + 416);
    v14 = *(_QWORD *)(v12 + 424);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v12 + 1144))(*(_QWORD *)(v12 + 784), *(_QWORD *)(v12 + 800), *(_QWORD *)(v12 + 768));
    sub_23FD73154();
    sub_23FC53E78(v14);
    sub_23FC10454(v14, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  }
  v47 = *(_BYTE *)(v12 + 85);
  v56 = *(void (**)(uint64_t, uint64_t))(v12 + 1160);
  v57 = *(_QWORD *)(v12 + 1136);
  v46 = *(_QWORD *)(v12 + 1112);
  v16 = *(_QWORD *)(v12 + 984);
  v45 = v16;
  v17 = *(_QWORD *)(v12 + 920);
  v18 = *(_QWORD *)(v12 + 912);
  v19 = *(_QWORD *)(v12 + 904);
  v58 = *(_QWORD *)(v12 + 808);
  v52 = *(_QWORD *)(v12 + 752);
  v53 = *(_QWORD *)(v12 + 800);
  v54 = *(_QWORD *)(v12 + 744);
  v55 = *(_QWORD *)(v12 + 760);
  v51 = *(_QWORD *)(v12 + 768);
  v50 = *(_QWORD *)(v12 + 712);
  v48 = *(_QWORD *)(v12 + 480);
  v21 = *(_QWORD *)(v12 + 392);
  v20 = *(_QWORD *)(v12 + 400);
  v49 = *(_QWORD *)(v12 + 360);
  v22 = sub_23FC5DC5C();
  sub_23FBFF0F8(v20, v23, v24, v22);
  v25 = sub_23FC58AA0();
  swift_weakInit();
  sub_23FC5E274(v16, v17);
  v26 = qword_256F7F480;
  v27 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v28 = (v18 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v26;
  v29[3] = v46;
  v29[4] = v25;
  sub_23FC0F380(v17, (uint64_t)v29 + v27, type metadata accessor for SessionIdentityPack);
  *(_QWORD *)((char *)v29 + v28) = v21;
  sub_23FC58D70();
  sub_23FC58D58();
  sub_23FD59E94(v20, (uint64_t)&unk_256F5E330, (uint64_t)v29);
  swift_release();
  sub_23FC0EDD8(v21 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, v58, type metadata accessor for SessionClientID);
  sub_23FC58D78();
  sub_23FC5E808();
  sub_23FCC4248(v30, v31, v32, v47);
  sub_23FC58AC8();
  sub_23FC5806C(v58, type metadata accessor for SessionClientID);
  v33 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v34 = (void *)sub_23FD74BE8();
  sub_23FC0EDD8(v45, v17, type metadata accessor for SessionIdentityPack);
  objc_msgSend(v33, sel_postNotificationName_object_, v34, sub_23FD753B0());
  swift_unknownObjectRelease();

  sub_23FC58FA0();
  sub_23FC59F48(*(uint64_t (**)(uint64_t))(v48 + 8));
  sub_23FC5AEA8(*(uint64_t (**)(uint64_t))(v50 + 8));
  v56(v53, v51);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v55, v54);
  sub_23FC0EDD8(v45, v49, type metadata accessor for SessionIdentityPack);
  swift_bridgeObjectRelease();
  sub_23FC1CB40(v57, v21, v45);
  v35 = sub_23FC58F00();
  sub_23FC5F384(v35, &qword_256F5E310);
  sub_23FC5806C(v45, type metadata accessor for SessionIdentityPack);
  sub_23FC5B980();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5B2D4();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5AC3C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5CDF0();
  sub_23FC5B2F4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5AB04();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5A574();
  swift_task_dealloc();
  sub_23FC5CDE8();
  sub_23FC5CDD8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC090D0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  swift_task_dealloc();
  sub_23FC5C528();
  sub_23FC5BC38();
  return v36(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12);
}

uint64_t sub_23FC1C84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(v0 + 1136);
  v13 = *(void (**)(uint64_t))(v0 + 1160);
  v14 = *(_QWORD *)(v0 + 984);
  v1 = *(_QWORD *)(v0 + 752);
  v10 = *(_QWORD *)(v0 + 744);
  v11 = *(_QWORD *)(v0 + 760);
  v2 = *(_QWORD *)(v0 + 712);
  v3 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 480);
  v12 = *(_QWORD *)(v0 + 392);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_23FC5B9BC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v6 = sub_23FC5A8DC();
  v13(v6);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  sub_23FC1CB40(v15, v12, v14);
  sub_23FC5F010();
  v7 = swift_release();
  sub_23FC5F384(v7, &qword_256F5E310);
  sub_23FC5A660(v8, type metadata accessor for SessionIdentityPack);
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC1CB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  int v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  char v37;
  const char *v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  os_signpost_id_t v51;
  os_log_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  os_log_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v5 = type metadata accessor for SessionClientID(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v66 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD72B9C();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = (char *)v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v63 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD72B6C();
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v62 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v55 - v16;
  v18 = type metadata accessor for SessionIdentityPack(0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23FD72B90();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD723EC();
  sub_23FC0EDD8(a3, (uint64_t)v21, type metadata accessor for SessionIdentityPack);
  v27 = a2;
  swift_retain_n();
  v28 = sub_23FD72B84();
  sub_23FD72BA8();
  v29 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    v56 = v29;
    v59 = v21;
    v60 = v27;
    v55 = v28;
    v61 = v26;
    swift_retain();
    v30 = v63;
    sub_23FD72BD8();
    swift_release();
    v32 = v64;
    v31 = v65;
    v33 = (*(uint64_t (**)(char *, char *))(v64 + 88))(v30, v65);
    v34 = *MEMORY[0x24BEE7810];
    v35 = v67;
    v36 = v62;
    v57 = v23;
    v58 = v22;
    if (v33 == v34)
    {
      v37 = 0;
      v38 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, char *))(v32 + 8))(v30, v31);
      v38 = "[ClientSessionManager %s] Create Session %s End";
      v37 = 2;
    }
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v36, v17, v68);
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v65 = v17;
    v42 = v36;
    v43 = v41;
    v70 = v41;
    *(_BYTE *)v40 = v37;
    *(_BYTE *)(v40 + 1) = v37;
    *(_WORD *)(v40 + 2) = 2080;
    v44 = v66;
    sub_23FC0EDD8(v60 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, v66, type metadata accessor for SessionClientID);
    v45 = sub_23FD71438();
    v47 = v46;
    sub_23FC5806C(v44, type metadata accessor for SessionClientID);
    v69 = sub_23FC9DC40(v45, v47, &v70);
    sub_23FD75044();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    v48 = (uint64_t)v59;
    v49 = SessionIdentityPack.description.getter();
    v69 = sub_23FC9DC40(v49, v50, &v70);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    sub_23FC5806C(v48, type metadata accessor for SessionIdentityPack);
    v51 = sub_23FD72B54();
    v52 = v55;
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v55, (os_signpost_type_t)v56, v51, "SessionCreate", v38, (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v43, -1, -1);
    MEMORY[0x2426798D8](v40, -1, -1);

    v53 = v68;
    v54 = *(void (**)(char *, uint64_t))(v67 + 8);
    v54(v65, v68);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v61, v58);
    return ((uint64_t (*)(char *, uint64_t))v54)(v42, v53);
  }
  else
  {

    sub_23FC5806C((uint64_t)v21, type metadata accessor for SessionIdentityPack);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v17, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  }
}

uint64_t sub_23FC1CFC4(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  ValueMetadata *v39;
  _UNKNOWN **v40;

  v37 = a4;
  v7 = sub_23FD71E64();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SessionID(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FD73238();
  v18 = sub_23FC1D39C(v16, v17, a1);
  swift_bridgeObjectRelease();
  if (v18)
  {
    sub_23FC0EDD8(a2, (uint64_t)v15, type metadata accessor for SessionID);
    v19 = *(_QWORD *)(a3 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_switchboard);
    type metadata accessor for SessionReverseClientDistributor(0);
    v20 = swift_allocObject();
    sub_23FC0F380((uint64_t)v15, v20 + OBJC_IVAR____TtC23IntelligenceFlowRuntime31SessionReverseClientDistributor_sessionId, type metadata accessor for SessionID);
    *(_QWORD *)(v20 + OBJC_IVAR____TtC23IntelligenceFlowRuntime31SessionReverseClientDistributor_switchboard) = v19;
    v21 = type metadata accessor for XPCClientAvatarConfiguration();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v20;
    v39 = (ValueMetadata *)v21;
    v40 = &off_256F66098;
    v38 = v22;
    swift_retain();
    swift_retain();
    sub_23FC1D4DC((uint64_t)&v38);
    v24 = v23;
    sub_23FC584B0((uint64_t)&v38, &qword_256F5E598);
    swift_release();
  }
  else
  {
    v24 = MEMORY[0x24BEE4AF8];
  }
  v25 = sub_23FD73250();
  v27 = sub_23FC1D39C(v25, v26, a1);
  swift_bridgeObjectRelease();
  if (v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v37, v7);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v28 == *MEMORY[0x24BE537F0])
    {
      v39 = &type metadata for StandardPlannerConfiguration;
      v40 = &off_256F61830;
    }
    else
    {
      if (v28 != *MEMORY[0x24BE537D0])
      {
        swift_bridgeObjectRelease();
        sub_23FC57234();
        swift_allocError();
        *v36 = 2;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      }
      swift_getKeyPath();
      sub_23FD71534();
      swift_release();
      v39 = (ValueMetadata *)&unk_25100F318;
      v40 = &off_256F5EE28;
    }
    sub_23FC1D4DC((uint64_t)&v38);
    sub_23FC584B0((uint64_t)&v38, &qword_256F5E598);
  }
  v29 = sub_23FD7325C();
  v31 = sub_23FC1D39C(v29, v30, a1);
  swift_bridgeObjectRelease();
  if (v31)
  {
    v39 = &type metadata for ExecutorConfiguration;
    v40 = &off_256F5F238;
    sub_23FC1D4DC((uint64_t)&v38);
    sub_23FC584B0((uint64_t)&v38, &qword_256F5E598);
  }
  v32 = sub_23FD7322C();
  v34 = sub_23FC1D39C(v32, v33, a1);
  swift_bridgeObjectRelease();
  if (v34)
  {
    v39 = &type metadata for ActionEvaluationParticipantConfiguration;
    v40 = &off_256F5D480;
    sub_23FC1D4DC((uint64_t)&v38);
    sub_23FC584B0((uint64_t)&v38, &qword_256F5E598);
  }
  v38 = v24;
  sub_23FC173EC();
  sub_23FC173EC();
  sub_23FC173EC();
  return v38;
}

BOOL sub_23FC1D39C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6;
  char v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  char v23;

  if (sub_23FD73208() == a1 && v6 == a2)
    goto LABEL_32;
  v8 = sub_23FC5B06C();
  sub_23FC58D60();
  if ((v8 & 1) != 0)
    return 1;
  if (sub_23FD73238() == a1 && v9 == a2)
  {
LABEL_32:
    sub_23FC15A24();
    return 1;
  }
  v11 = sub_23FC5B06C();
  sub_23FC58D60();
  if ((v11 & 1) != 0)
    return 1;
  if (sub_23FD73250() == a1 && v12 == a2)
    goto LABEL_34;
  v14 = sub_23FC5B06C();
  sub_23FC595E0();
  if ((v14 & 1) != 0)
    return a3 & 1;
  if (sub_23FD73244() == a1 && v15 == a2)
  {
LABEL_34:
    sub_23FC15A24();
    return a3 & 1;
  }
  v17 = sub_23FC5B06C();
  sub_23FC595E0();
  if ((v17 & 1) != 0)
    return a3 & 1;
  if (sub_23FD7325C() == a1 && v18 == a2)
  {
LABEL_36:
    sub_23FC15A24();
    return (a3 >> 1) & 1;
  }
  v20 = sub_23FC5B06C();
  sub_23FC595E0();
  if ((v20 & 1) == 0)
  {
    if (sub_23FD7322C() != a1 || v21 != a2)
    {
      v23 = sub_23FC5B06C();
      sub_23FC595E0();
      if ((v23 & 1) == 0)
        return (~a3 & 0x1F) == 0;
      return (a3 >> 1) & 1;
    }
    goto LABEL_36;
  }
  return (a3 >> 1) & 1;
}

void sub_23FC1D4DC(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  __int128 v4[2];

  sub_23FC0F3AC(a1, (uint64_t)&v2, &qword_256F5E598);
  if (v3)
  {
    sub_23FBFDE28(&v2, (uint64_t)v4);
    sub_23FBFD684(&qword_256F5E5A0);
    v1 = sub_23FC58AA0();
    *(_OWORD *)(v1 + 16) = xmmword_23FD769D0;
    sub_23FBFDE28(v4, v1 + 32);
  }
  else
  {
    sub_23FC584B0((uint64_t)&v2, &qword_256F5E598);
  }
  sub_23FC06054();
}

uint64_t sub_23FC1D568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  type metadata accessor for SessionClientID(0);
  v6[9] = swift_task_alloc();
  type metadata accessor for SessionIdentityPack(0);
  v6[10] = swift_task_alloc();
  v7 = sub_23FD72BF0();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v6[14] = qword_256F7F480;
  type metadata accessor for SessionControlActor();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  swift_retain();
  v6[15] = sub_23FD74D80();
  v6[16] = v8;
  return swift_task_switch();
}

uint64_t sub_23FC1D690()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v4)(void);

  sub_23FC59120();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 136) = Strong;
  if (!Strong)
    return sub_23FD75230();
  v4 = (uint64_t (*)(void))((char *)&dword_256F5E350 + dword_256F5E350);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_23FC1D764;
  return sub_23FC5B0D0(v4);
}

uint64_t sub_23FC1D764()
{
  _QWORD *v0;

  sub_23FC5EA6C();
  sub_23FC5AEA0(v0);
  return sub_23FC0907C();
}

uint64_t sub_23FC1D79C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (void *)v0[13];
  v2 = v0[10];
  v3 = v0[7];
  swift_release();
  sub_23FC58AC8();
  sub_23FC59F80();
  sub_23FC0EDD8(v3, v2, type metadata accessor for SessionIdentityPack);
  sub_23FC5A14C();
  v4 = sub_23FC5DAEC();
  if (sub_23FC5BAE4(v4))
  {
    v5 = (uint8_t *)sub_23FBFEFF4();
    v28 = sub_23FBFEFF4();
    *(_DWORD *)v5 = 136315138;
    v6 = SessionIdentityPack.description.getter();
    v0[5] = sub_23FC9DC40(v6, v7, &v28);
    sub_23FD75044();
    v8 = sub_23FC5A2A8();
    sub_23FC5A660(v8, type metadata accessor for SessionIdentityPack);
    sub_23FC5F458();
    sub_23FBFF114(v9, v10, v11, v12, v5);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v14 = v0[12];
  v13 = v0[13];
  v15 = v0[11];
  sub_23FC5806C(v0[10], type metadata accessor for SessionIdentityPack);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  sub_23FC0EDD8(v0[8] + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, v0[9], type metadata accessor for SessionClientID);
  sub_23FC58C88();
  v16 = sub_23FC5E714();
  sub_23FCC4030(v16, v17, (uint64_t)(v0 + 19), v18, v19, v20, v21, v22, v26, v27, SWORD2(v27), SBYTE6(v27), SHIBYTE(v27));
  sub_23FC5A660(v23, type metadata accessor for SessionClientID);
  sub_23FC58AC0();
  sub_23FC5AC3C();
  sub_23FC090C0();
  sub_23FC090D0();
  v24 = (uint64_t (*)(void))sub_23FC5C528();
  return v24();
}

uint64_t sub_23FC1D9E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  sub_23FC5EA38();
  v2[4] = sub_23FC0901C();
  type metadata accessor for SessionID(0);
  v2[5] = sub_23FC0901C();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v2[6] = qword_256F7F480;
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FC58D78();
  v2[7] = sub_23FC5CBA4();
  v2[8] = v3;
  return sub_23FC5A19C();
}

uint64_t sub_23FC1DAA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t);

  v1 = v0[4];
  v2 = v0[3];
  sub_23FC58D90();
  sub_23FD71E28();
  sub_23FC0EDD8(v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, v1, type metadata accessor for SessionClientID);
  sub_23FCC44CC();
  v0[9] = v3;
  v4 = v0[4];
  sub_23FC101F4();
  sub_23FC5806C(v4, type metadata accessor for SessionClientID);
  sub_23FC5CC1C(v5, type metadata accessor for SessionID);
  v6 = (_QWORD *)sub_23FC09058();
  v0[10] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_23FC1DBFC;
  v7 = sub_23FC5B9C8(v0[2]);
  return v9(v7);
}

uint64_t sub_23FC1DBFC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FC5EA6C();
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  return sub_23FC0907C();
}

uint64_t sub_23FC1DC44()
{
  uint64_t v0;

  swift_release();
  sub_23FC58AC8();
  sub_23FC090C0();
  sub_23FC5A574();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
}

uint64_t sub_23FC1DC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_BYTE *)(v7 + 113) = a5;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  sub_23FC5EA38();
  *(_QWORD *)(v7 + 64) = sub_23FC0901C();
  if (qword_256F5D2D8 != -1)
    swift_once();
  *(_QWORD *)(v7 + 72) = qword_256F7F480;
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FC58D78();
  *(_QWORD *)(v7 + 80) = sub_23FC5CBA4();
  *(_QWORD *)(v7 + 88) = v8;
  return sub_23FC5A19C();
}

uint64_t sub_23FC1DD54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  sub_23FC0EDD8(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, v1, type metadata accessor for SessionClientID);
  sub_23FC58D78();
  sub_23FC5DBEC();
  *(_QWORD *)(v0 + 96) = v2;
  if (v1)
  {
    v3 = *(_BYTE *)(v0 + 112);
    sub_23FC5CC1C(v2, type metadata accessor for SessionClientID);
    sub_23FC58AC8();
    sub_23FC101F4();
    sub_23FC1E5B4();
    sub_23FC5A704();
    *v4 = v3;
    sub_23FC5A574();
    return sub_23FC5B938(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    sub_23FC5806C(*(_QWORD *)(v0 + 64), type metadata accessor for SessionClientID);
    sub_23FC58AC8();
    v6 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 104) = v6;
    *v6 = v0;
    v6[1] = sub_23FC1DE70;
    v7 = sub_23FC5B9C8(*(_QWORD *)(v0 + 24));
    return v8(v7);
  }
}

uint64_t sub_23FC1DE70()
{
  _QWORD *v0;

  sub_23FC5EA6C();
  sub_23FC5AEA0(v0);
  return sub_23FC0907C();
}

uint64_t sub_23FC1DEA8()
{
  uint64_t (*v0)(void);

  swift_release();
  sub_23FC58AC8();
  sub_23FC090C0();
  v0 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5D398(v0);
}

uint64_t sub_23FC1DEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_23FC5EA38();
  v3[5] = sub_23FC0901C();
  if (qword_256F5D2D8 != -1)
    swift_once();
  v3[6] = qword_256F7F480;
  sub_23FC5EA48();
  sub_23FBFEE2C(&qword_256F5E288, (uint64_t (*)(uint64_t))type metadata accessor for SessionControlActor, (uint64_t)&unk_23FD781F4);
  sub_23FC58D78();
  v3[7] = sub_23FC5CBA4();
  v3[8] = v4;
  return sub_23FC5A19C();
}

uint64_t sub_23FC1DF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE *v4;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23FC0EDD8(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, v1, type metadata accessor for SessionClientID);
  sub_23FC58D78();
  sub_23FC5DBEC();
  *(_QWORD *)(v0 + 72) = v2;
  if (v1)
  {
    v3 = *(_BYTE *)(v0 + 80);
    sub_23FC5CC1C(v2, type metadata accessor for SessionClientID);
    sub_23FC58AC8();
    sub_23FC101F4();
    sub_23FC1E5B4();
    sub_23FC5A704();
    *v4 = v3;
    sub_23FC5A574();
    return sub_23FC5B938(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    sub_23FC5806C(*(_QWORD *)(v0 + 40), type metadata accessor for SessionClientID);
    sub_23FC58AC8();
    sub_23FC5F38C();
    return swift_task_switch();
  }
}

uint64_t sub_23FC1E07C()
{
  sub_23FC54304();
  return sub_23FC0907C();
}

uint64_t sub_23FC1E0B0()
{
  uint64_t (*v0)(void);

  swift_release();
  sub_23FC58AC8();
  sub_23FC090C0();
  v0 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5D398(v0);
}

BOOL sub_23FC1E0E4(char a1, char a2)
{
  return a1 == a2;
}

void sub_23FC1E0F4()
{
  sub_23FD75458();
  sub_23FBFF0A0();
}

void sub_23FC1E114()
{
  sub_23FD7544C();
  sub_23FD75458();
  sub_23FD75470();
  sub_23FC06054();
}

BOOL sub_23FC1E150(char *a1, char *a2)
{
  return sub_23FC1E0E4(*a1, *a2);
}

void sub_23FC1E15C()
{
  sub_23FC1E114();
}

void sub_23FC1E164()
{
  sub_23FC1E0F4();
}

uint64_t sub_23FC1E16C()
{
  sub_23FD7544C();
  sub_23FD75458();
  return sub_23FD75470();
}

uint64_t sub_23FC1E1BC()
{
  uint64_t v0;

  sub_23FC5806C(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_sessionClientId, type metadata accessor for SessionClientID);
  sub_23FC5E6B4();
  sub_23FC5E6B4();
  sub_23FC584B0(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ClientSessionManager_configuration, &qword_256F5E5A8);
  sub_23FC5E6B4();
  return v0;
}

uint64_t sub_23FC1E224()
{
  sub_23FC1E1BC();
  sub_23FC5F3F8();
  return swift_deallocClassInstance();
}

uint64_t sub_23FC1E23C()
{
  return type metadata accessor for ClientSessionManager(0);
}

uint64_t type metadata accessor for ClientSessionManager(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F5E110);
}

void sub_23FC1E258()
{
  unint64_t v0;
  unint64_t v1;

  sub_23FD71474();
  if (v0 <= 0x3F)
  {
    sub_23FC1E2F8();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_23FC1E2F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256F5E120)
  {
    sub_23FD72068();
    v0 = sub_23FD75038();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256F5E120);
  }
}

uint64_t sub_23FC1E34C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FC1E368()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[3] + OBJC_IVAR____TtC23IntelligenceFlowRuntime31SessionReverseClientDistributor_sessionId;
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23FC1E3D0;
  return sub_23FCC45F0(v1, v0[2]);
}

uint64_t sub_23FC1E3D0()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC1E3FC()
{
  uint64_t v0;

  sub_23FC5806C(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime31SessionReverseClientDistributor_sessionId, type metadata accessor for SessionID);
  sub_23FC5E6B4();
  sub_23FC5F3F8();
  return swift_deallocClassInstance();
}

uint64_t sub_23FC1E434()
{
  return type metadata accessor for SessionReverseClientDistributor(0);
}

uint64_t type metadata accessor for SessionReverseClientDistributor(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5E1E8);
}

uint64_t sub_23FC1E450()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FC1E4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_23FD75224();
    __break(1u);
  }
  else
  {
    v2 = a2;
    if (a2)
    {
      sub_23FBFD684(&qword_256F5E578);
      v4 = sub_23FD74D2C();
      *(_QWORD *)(v4 + 16) = v2;
      v5 = v4 + 32;
      do
      {
        sub_23FC0F3AC(a1, v5, &qword_256F5E578);
        v5 += 40;
        --v2;
      }
      while (v2);
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    sub_23FC584B0(a1, &qword_256F5E578);
    return v4;
  }
  return result;
}

unint64_t sub_23FC1E5B4()
{
  unint64_t result;

  result = qword_256F61670;
  if (!qword_256F61670)
  {
    result = MEMORY[0x2426797E8](&unk_23FD79C1C, &type metadata for SessionRoutingError);
    atomic_store(result, &qword_256F61670);
  }
  return result;
}

uint64_t sub_23FC1E5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[40];
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v10 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_23FC584E0(v3, (uint64_t)v9);
      sub_23FC584E0((uint64_t)v9, (uint64_t)&v7);
      sub_23FBFD684(&qword_256F5E420);
      type metadata accessor for XPCClientAvatar();
      if ((swift_dynamicCast() & 1) == 0)
        v8 = 0;
      v4 = _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v9);
      if (v8)
      {
        MEMORY[0x242678A74](v4);
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23FD74D14();
        sub_23FD74D44();
        sub_23FD74CFC();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    v5 = v10;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23FC1E730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v45;

  v7[8] = a6;
  v7[9] = v6;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  v9 = sub_23FD71C30();
  v7[10] = v9;
  v7[11] = *(_QWORD *)(v9 - 8);
  v7[12] = swift_task_alloc();
  type metadata accessor for SessionIdentityPack(0);
  v7[13] = swift_task_alloc();
  type metadata accessor for SessionPersistenceManager();
  v7[14] = swift_task_alloc();
  v10 = sub_23FD73D9C();
  v7[15] = v10;
  v7[16] = *(_QWORD *)(v10 - 8);
  v38 = swift_task_alloc();
  v7[17] = v38;
  v11 = sub_23FD71474();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  v37 = swift_task_alloc();
  v7[18] = v37;
  type metadata accessor for SessionID(0);
  v30 = swift_task_alloc();
  v7[19] = v30;
  v12 = sub_23FD73E08();
  v7[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[21] = v13;
  v35 = v13;
  v36 = v12;
  v34 = swift_task_alloc();
  v7[22] = v34;
  v31 = swift_task_alloc();
  v7[23] = v31;
  v7[24] = _s24StandardSessionResourcesVMa();
  v45 = (char *)swift_task_alloc();
  v7[25] = v45;
  v40 = sub_23FBFD684(&qword_256F5E538);
  v14 = *(_QWORD *)(v40 - 8);
  v15 = swift_task_alloc();
  v7[26] = v15;
  v16 = sub_23FBFD684(&qword_256F5E2B8);
  v7[27] = v16;
  v42 = *(_QWORD *)(v16 - 8);
  v7[28] = v42;
  v41 = swift_task_alloc();
  v7[29] = v41;
  v39 = swift_task_alloc();
  v7[30] = v39;
  v17 = sub_23FBFD684(&qword_256F5E478);
  v7[31] = v17;
  v7[32] = *(_QWORD *)(v17 - 8);
  v7[33] = swift_task_alloc();
  swift_defaultActor_initialize();
  v18 = qword_256F605B0;
  v7[34] = qword_256F605B0;
  sub_23FC0EDD8(a1, v6 + v18, type metadata accessor for SessionIdentityPack);
  v19 = *(_QWORD *)(*(_QWORD *)v6 + 112);
  v7[35] = v19;
  v20 = (uint64_t *)(v6 + v19);
  *v20 = a5;
  v20[1] = a6;
  type metadata accessor for SessionCoordinatorCommand(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v15, *MEMORY[0x24BEE6A10], v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23FD74DF8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v40);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
  v7[36] = v21;
  v21(v41, v39, v16);
  v22 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32))(v23 + v22, v41, v16);
  sub_23FCB50C4();
  v25 = v24;
  swift_release();
  v26 = *(_QWORD *)(*(_QWORD *)v6 + 200);
  v7[37] = v26;
  *(_QWORD *)(v6 + v26) = v25;
  sub_23FCB4804(a5, a6, v45);
  sub_23FC0EDD8(a1, v30, type metadata accessor for SessionID);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v37, v30, v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23FD73DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v31, v36);
  sub_23FD73D78();
  sub_23FBFD684(&qword_256F5E540);
  v27 = (_QWORD *)swift_task_alloc();
  v7[38] = v27;
  v27[2] = a2;
  v27[3] = a1;
  v27[4] = v38;
  v27[5] = v45;
  sub_23FBFD684(&qword_256F5E558);
  v28 = (_QWORD *)swift_task_alloc();
  v7[39] = v28;
  *v28 = v7;
  v28[1] = sub_23FC1EE2C;
  return sub_23FD75284();
}

uint64_t sub_23FC1EE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;

  sub_23FC5E39C();
  v30 = (_QWORD *)*v29;
  v96 = (_QWORD *)*v29;
  swift_task_dealloc();
  v92 = v30[25];
  v94 = v30[27];
  if (v28)
  {
    v91 = v28;
    v31 = v30[32];
    v32 = v30[30];
    v33 = v30[28];
    v34 = v30[21];
    v79 = v30[16];
    v82 = v30[33];
    v85 = v30[15];
    v88 = v30[17];
    sub_23FC5AB04();
    sub_23FC5B9BC(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v94);
    sub_23FBFF204(v82, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    sub_23FC5A648();
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v88, v85);
    sub_23FC5806C(v92, (uint64_t (*)(_QWORD))_s24StandardSessionResourcesVMa);
    v65 = v30[33];
    v67 = v30[30];
    v69 = v30[29];
    v71 = v30[26];
    v73 = v30[25];
    v75 = v30[23];
    v77 = v30[22];
    v80 = v30[19];
    v83 = v30[18];
    v86 = v30[17];
    v89 = v30[14];
    v35 = v30[11];
    v93 = v30[13];
    v95 = v30[12];
    v63 = v30[10];
    v36 = v30[5];
    v37 = v30[3];
    sub_23FC5806C(v30[9] + v30[34], type metadata accessor for SessionIdentityPack);
    swift_bridgeObjectRelease();
    sub_23FC5A648();
    swift_release();
    sub_23FBFD684(&qword_256F5E318);
    swift_defaultActor_destroy();
    sub_23FC1002C();
    sub_23FC5A56C();
    sub_23FC101F4();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v63);
    sub_23FC5806C(v37, type metadata accessor for SessionIdentityPack);
    sub_23FC5F4D4();
    swift_deallocPartialClassInstance();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5CDA8();
    sub_23FC5CDF0();
    sub_23FC5CB3C();
    return v38(v38, v39, v40, v41, v42, v43, v44, v45, a9, v63, v65, v67, v69, v71, v73, v75, v77, v80, v83,
             v86,
             v89,
             v91,
             v93,
             v95,
             v96,
             a26,
             a27,
             a28);
  }
  else
  {
    v74 = v30[31];
    v76 = v30[33];
    v84 = v30[30];
    v87 = (void (*)(uint64_t, uint64_t, uint64_t))v30[36];
    v47 = v30[24];
    v90 = v30[21];
    v66 = v30[17];
    v68 = v30[32];
    v48 = v30[14];
    v62 = v30[16];
    v64 = v30[15];
    v49 = v30[13];
    v50 = v30[9];
    v78 = v30[12];
    v81 = v30[10];
    v51 = v30[6];
    v70 = v30[5];
    v72 = v30[11];
    swift_bridgeObjectRelease();
    sub_23FC5AB04();
    v52 = v30[2];
    v53 = sub_23FC5D46C();
    sub_23FC0EDD8(v53, v54, v55);
    SessionPersistenceManager.init(id:)(v49, v48);
    sub_23FC0F380(v48, v50 + *(_QWORD *)(*(_QWORD *)v50 + 152), (uint64_t (*)(_QWORD))type metadata accessor for SessionPersistenceManager);
    *(_QWORD *)(v50 + *(_QWORD *)(*(_QWORD *)v50 + 184)) = *(_QWORD *)(v92 + *(int *)(v47 + 24));
    sub_23FC0EDD8(v92, v50 + *(_QWORD *)(*(_QWORD *)v50 + 192), (uint64_t (*)(_QWORD))_s24StandardSessionResourcesVMa);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v50 + *(_QWORD *)(*(_QWORD *)v50 + 128), v66, v64);
    *(_QWORD *)(v50 + *(_QWORD *)(*(_QWORD *)v50 + 120)) = v52;
    *(_QWORD *)(v50 + *(_QWORD *)(*(_QWORD *)v50 + 176)) = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v50 + *(_QWORD *)(*(_QWORD *)v50 + 160), v76, v74);
    v87(v50 + *(_QWORD *)(*(_QWORD *)v50 + 168), v84, v94);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v78, v70, v81);
    sub_23FC58CA8();
    sub_23FC58C88();
    v56 = sub_23FCB373C();
    v57 = v50 + *(_QWORD *)(*(_QWORD *)v50 + 144);
    *(_BYTE *)v57 = v56 & 1;
    *(_BYTE *)(v57 + 1) = BYTE1(v56) & 1;
    *(_BYTE *)(v57 + 2) = BYTE2(v56) & 1;
    *(_QWORD *)(v57 + 8) = v58;
    sub_23FC5D878();
    v59 = sub_23FD73DE4();
    v60 = *(uint64_t (**)(uint64_t))(v90 + 8);
    v30[40] = v60;
    sub_23FC5AEA8(v60);
    v61 = sub_23FC1FEC0(v59);
    sub_23FC1002C();
    *(_QWORD *)(v50 + *(_QWORD *)(*(_QWORD *)v50 + 136)) = v61;
    sub_23FC5F38C();
    sub_23FC5CB3C();
    return swift_task_switch();
  }
}

uint64_t sub_23FC1F220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
  v10 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRelease();
  sub_23FC5A648();
  sub_23FC101F4();
  sub_23FC10454(v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v13(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v11);
  v6 = sub_23FC5D9C4();
  v7(v6, v15);
  sub_23FC5806C(v5, type metadata accessor for SessionIdentityPack);
  v8 = sub_23FC59F48(*(uint64_t (**)(uint64_t))(v14 + 8));
  sub_23FC5CC1C(v8, (uint64_t (*)(_QWORD))_s24StandardSessionResourcesVMa);
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5A574();
  sub_23FC5B2F4();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5DC9C();
  sub_23FC090D0();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_23FC1F3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[68] = a5;
  v5[67] = a4;
  v5[66] = a3;
  v5[65] = a2;
  v5[64] = a1;
  v6 = sub_23FBFD684(&qword_256F5E568);
  v5[69] = v6;
  v5[70] = *(_QWORD *)(v6 - 8);
  v5[71] = swift_task_alloc();
  v7 = *(_QWORD *)(_s24StandardSessionResourcesVMa() - 8);
  v5[72] = v7;
  v5[73] = *(_QWORD *)(v7 + 64);
  v5[74] = swift_task_alloc();
  v8 = sub_23FD73D9C();
  v5[75] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[76] = v9;
  v5[77] = *(_QWORD *)(v9 + 64);
  v5[78] = swift_task_alloc();
  v10 = *(_QWORD *)(type metadata accessor for SessionIdentityPack(0) - 8);
  v5[79] = v10;
  v5[80] = *(_QWORD *)(v10 + 64);
  v5[81] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A28);
  v5[82] = swift_task_alloc();
  v5[83] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC1F4CC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE v49[32];
  uint64_t v50;

  v1 = (_OWORD *)(v0 + 64);
  v40 = *(_QWORD *)(v0 + 608);
  v41 = *(_QWORD *)(v0 + 632);
  v2 = *(_QWORD *)(v0 + 584);
  v39 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 520);
  v50 = 0;
  memset(v49, 0, sizeof(v49));
  v4 = *(_QWORD *)(v3 + 16);
  v35 = sub_23FC1E4C8((uint64_t)v49, v4);
  v36 = v3 + 32;
  v37 = v2 + 7;
  sub_23FC5AFCC();
  v5 = 0;
  v38 = v4;
  v6 = (__int128 *)(v0 + 288);
  while (1)
  {
    if (v5 == v4)
    {
      v1[1] = 0u;
      v1[2] = 0u;
      v7 = v4;
      *v1 = 0u;
    }
    else
    {
      if (v5 >= v4)
      {
        __break(1u);
        goto LABEL_19;
      }
      v7 = v5 + 1;
      sub_23FC5F398(v36 + 40 * v5);
      *(_QWORD *)v1 = v5;
      sub_23FBFDE28((__int128 *)(v0 + 120), v0 + 72);
    }
    sub_23FC0EE04((uint64_t)v1, v0 + 16, &qword_256F5E570);
    if (!*(_QWORD *)(v0 + 48))
      break;
    v8 = *(_QWORD *)(v0 + 664);
    v48 = v7;
    v9 = *(_QWORD *)(v0 + 648);
    v42 = *(_QWORD *)(v0 + 640);
    v10 = *(_QWORD *)(v0 + 624);
    v43 = *(_QWORD *)(v0 + 616);
    v11 = *(_QWORD *)(v0 + 600);
    v12 = *(_QWORD *)(v0 + 592);
    v44 = v12;
    v45 = v10;
    v13 = *(_QWORD *)(v0 + 544);
    v14 = *(_QWORD *)(v0 + 536);
    v15 = *(_QWORD *)(v0 + 528);
    v47 = *(_QWORD *)(v0 + 16);
    v46 = sub_23FC5DC5C();
    sub_23FBFF0F8(v8, v16, v17, v46);
    sub_23FBFDE28((__int128 *)(v0 + 24), (uint64_t)v6);
    sub_23FC0EDD8(v15, v9, type metadata accessor for SessionIdentityPack);
    sub_23FC1046C(v10, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16));
    sub_23FC0EDD8(v13, v12, (uint64_t (*)(_QWORD))_s24StandardSessionResourcesVMa);
    v18 = (*(unsigned __int8 *)(v41 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v19 = (v42 + *(unsigned __int8 *)(v40 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v20 = (v43 + *(unsigned __int8 *)(v39 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = 0;
    sub_23FBFDE28(v6, v21 + 32);
    sub_23FC0F380(v9, v21 + v18, type metadata accessor for SessionIdentityPack);
    v22 = v11;
    v23 = v46;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 32))(v21 + v19, v45, v22);
    sub_23FC0F380(v44, v21 + v20, (uint64_t (*)(_QWORD))_s24StandardSessionResourcesVMa);
    *(_QWORD *)(v21 + ((v37 + v20) & 0xFFFFFFFFFFFFFFF8)) = v47;
    sub_23FC5AE94();
    sub_23FC5ACA0(v24, v25);
    v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v18, 1, v46);
    v27 = *(_QWORD *)(v0 + 656);
    if (v26 == 1)
    {
      sub_23FC5A4C4(*(_QWORD *)(v0 + 656));
    }
    else
    {
      sub_23FD74DE0();
      sub_23FBFF204(v27, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8));
    }
    if (*(_QWORD *)(v21 + 16))
    {
      sub_23FC5F22C();
      sub_23FC5F0C8();
      sub_23FC5E1A0();
      sub_23FC5E35C();
    }
    else
    {
      v27 = 0;
      v23 = 0;
    }
    v5 = v48;
    v28 = **(_QWORD **)(v0 + 512);
    sub_23FBFD684(&qword_256F5E540);
    v29 = v23 | v27;
    if (v23 | v27)
    {
      v29 = v0 + 448;
      *(_QWORD *)(v0 + 448) = 0;
      *(_QWORD *)(v0 + 456) = 0;
      *(_QWORD *)(v0 + 464) = v27;
      *(_QWORD *)(v0 + 472) = v23;
    }
    v30 = *(_QWORD *)(v0 + 664);
    *(_QWORD *)(v0 + 480) = 1;
    *(_QWORD *)(v0 + 488) = v29;
    *(_QWORD *)(v0 + 496) = v28;
    swift_task_create();
    swift_release();
    sub_23FC5A4C4(v30);
    v1 = (_OWORD *)(v0 + 64);
    v4 = v38;
  }
  swift_bridgeObjectRelease();
  sub_23FBFD684(&qword_256F5E540);
  sub_23FBFD684(&qword_254346E20);
  sub_23FBFF1AC();
  sub_23FD74EAC();
  v31 = v35;
  if ((sub_23FC5D484() & 1) != 0)
    goto LABEL_17;
LABEL_19:
  sub_23FCCB830();
  v31 = v34;
LABEL_17:
  *(_QWORD *)(v0 + 672) = v31;
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 680) = v32;
  *v32 = v0;
  v32[1] = sub_23FC1F908;
  sub_23FC5A818();
  return sub_23FD74ED0();
}

uint64_t sub_23FC1F908()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC1F94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23FC5ACE0();
  if (*(_QWORD *)(v12 + 192))
  {
    v13 = *(_QWORD *)(v12 + 160);
    result = sub_23FBFDE28((__int128 *)(v12 + 168), v12 + 408);
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v15 = *(_QWORD *)(v12 + 672);
      if (v13 < *(_QWORD *)(v15 + 16))
      {
        sub_23FC582EC(v12 + 408, v15 + 40 * v13 + 32, &qword_256F5E578);
        v16 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v12 + 688) = v16;
        *v16 = v12;
        v16[1] = sub_23FC1FC08;
        sub_23FC5A818();
        sub_23FC5BC38();
        return sub_23FD74ED0();
      }
    }
    __break(1u);
  }
  else
  {
    v17 = *(_QWORD *)(v12 + 672);
    sub_23FC090C8(*(_QWORD *)(v12 + 560));
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      a9 = (__int128 *)(v12 + 208);
      swift_bridgeObjectRetain();
      v19 = MEMORY[0x24BEE4AF8];
      v20 = 32;
      do
      {
        sub_23FC0F3AC(*(_QWORD *)(v12 + 672) + v20, v12 + 248, &qword_256F5E578);
        v21 = sub_23FC5A8DC();
        sub_23FC0EE04(v21, v22, &qword_256F5E578);
        if (*(_QWORD *)(v12 + 352))
        {
          sub_23FBFDE28((__int128 *)(v12 + 328), (uint64_t)a9);
          sub_23FBFDE28(a9, v12 + 368);
          if ((sub_23FC5D484() & 1) == 0)
          {
            sub_23FC5DF60();
            sub_23FC99710();
            v19 = v24;
          }
          v23 = *(_QWORD *)(v19 + 16);
          if (v23 >= *(_QWORD *)(v19 + 24) >> 1)
          {
            sub_23FC99710();
            v19 = v25;
          }
          *(_QWORD *)(v19 + 16) = v23 + 1;
          sub_23FBFDE28((__int128 *)(v12 + 368), v19 + 40 * v23 + 32);
        }
        else
        {
          sub_23FC584B0(v12 + 328, &qword_256F5E578);
        }
        v20 += 40;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_task_dealloc();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5BC38();
    return v27(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
  }
  return result;
}

uint64_t sub_23FC1FB88()
{
  uint64_t v0;

  sub_23FC5B950(*(_QWORD *)(v0 + 560));
  sub_23FC1002C();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  return sub_23FC5D3B4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC1FC08()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC1FC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  return swift_task_switch();
}

uint64_t sub_23FC1FC6C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[8];
  v2 = v1[3];
  v3 = v1[4];
  sub_23FBFDE40(v1, v2);
  v4 = *(int **)(v3 + 24);
  sub_23FC5E808();
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  v5 = sub_23FBFDDEC(v0 + 2);
  v10 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v6;
  v7 = sub_23FC5F594();
  sub_23FBFEE2C(&qword_256F5E590, (uint64_t (*)(uint64_t))_s24StandardSessionResourcesVMa, (uint64_t)&unk_23FD79B0C);
  *v6 = v0;
  v6[1] = sub_23FC1FD80;
  return v10(v5, v0[9], v0[10], v0[11], v7, v8, v2, v3);
}

uint64_t sub_23FC1FD80()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23FC5A650();
  *v2 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC1FDD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = *(_QWORD **)(v0 + 56);
  *v1 = *(_QWORD *)(v0 + 96);
  sub_23FBFDE28((__int128 *)(v0 + 16), (uint64_t)(v1 + 1));
  v2 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5AADC(v2);
}

uint64_t sub_23FC1FE04()
{
  uint64_t v0;

  sub_23FC58294(v0 + 16);
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FC1FE30(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v4 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_23FCCB844();
  v4 = v6;
  *v2 = v6;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v4 + 16) > a2)
  {
    sub_23FD740CC();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_23FC1FEC0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = *(_QWORD *)(sub_23FD740CC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = a1 + v4;
  v6 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v7 = 0;
  v30 = a1;
  while (1)
  {
    v8 = sub_23FD74054();
    v10 = v9;
    v11 = sub_23FD73238();
    if (v10)
      break;
    swift_bridgeObjectRelease();
LABEL_11:
    ++v7;
    v5 += v6;
    if (v1 == v7)
      goto LABEL_18;
  }
  if (v8 != v11 || v10 != v12)
  {
    v14 = sub_23FD75380();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_15;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
LABEL_15:
  if (v1 >= v7)
  {
    if (v1 == v7)
    {
LABEL_18:
      v16 = 0;
LABEL_40:
      swift_bridgeObjectRelease();
      return v16;
    }
    v17 = 1;
    v18 = v1;
  }
  else
  {
    v17 = -1;
    v18 = v7;
    v7 = v1;
  }
  v16 = 0;
  v31 = v30 + v4;
  while (1)
  {
    v19 = __OFADD__(v16, v17);
    v16 += v17;
    if (v19)
      break;
    if (v7 == v1)
      goto LABEL_45;
    v20 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_46;
    v7 = v1;
    if (v20 != v1)
    {
      v21 = v31 + v6 * v20;
      v7 = v20;
      while (v7 < v1)
      {
        v22 = sub_23FD74054();
        v24 = v23;
        v25 = sub_23FD73238();
        if (v24)
        {
          if (v22 == v25 && v24 == v26)
          {
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            goto LABEL_39;
          }
          v28 = sub_23FD75380();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v28 & 1) != 0)
            goto LABEL_39;
        }
        else
        {
          result = swift_bridgeObjectRelease();
        }
        v29 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_43;
        ++v7;
        v21 += v6;
        if (v29 == v1)
        {
          v7 = v1;
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
      break;
    }
LABEL_39:
    if (v7 == v18)
      goto LABEL_40;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_23FC200F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23FC20110()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FC57394();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_23FC20190;
  return sub_23FD75164();
}

uint64_t sub_23FC20190()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC201C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3[21] = a2;
  v3[22] = a3;
  v4 = sub_23FBFD684(&qword_256F5E370);
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v5 = sub_23FBFD684(&qword_256F5E378);
  v3[26] = v5;
  v3[27] = *(_QWORD *)(v5 - 8);
  v3[28] = swift_task_alloc();
  v6 = sub_23FBFD684(&qword_256F5E380);
  v3[29] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[30] = v7;
  v3[31] = *(_QWORD *)(v7 + 64);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v8 = sub_23FBFD684(&qword_256F5E388);
  v3[34] = v8;
  v3[35] = *(_QWORD *)(v8 - 8);
  v3[36] = swift_task_alloc();
  v9 = sub_23FBFD684(&qword_256F5E390);
  v3[37] = v9;
  v3[38] = *(_QWORD *)(v9 - 8);
  v3[39] = swift_task_alloc();
  v10 = sub_23FBFD684(&qword_256F5E398);
  v3[40] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[41] = v11;
  v3[42] = *(_QWORD *)(v11 + 64);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v12 = sub_23FBFD684(&qword_256F5E3A0);
  v3[45] = v12;
  v3[46] = *(_QWORD *)(v12 - 8);
  v3[47] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A28);
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v13 = sub_23FBFD684(&qword_256F5E3A8);
  v3[51] = v13;
  v3[52] = *(_QWORD *)(v13 - 8);
  v3[53] = swift_task_alloc();
  v14 = sub_23FBFD684(&qword_256F5E3B0);
  v3[54] = v14;
  v3[55] = *(_QWORD *)(v14 - 8);
  v3[56] = swift_task_alloc();
  v15 = sub_23FBFD684(&qword_256F5E3B8);
  v3[57] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v3[58] = v16;
  v3[59] = *(_QWORD *)(v16 + 64);
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC20434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 152) = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v0 + 16;
    v5 = *(_QWORD *)(v0 + 464);
    v69 = *(_QWORD *)(v0 + 440);
    v55 = *(_QWORD *)(v0 + 368);
    v56 = *(_QWORD *)(v0 + 416);
    v54 = *(_QWORD *)(v0 + 360);
    type metadata accessor for SessionCoordinatorAcceptPayload(0);
    v6 = v2 + 32;
    v60 = *MEMORY[0x24BEE6A10];
    sub_23FC5AFCC();
    v58 = v0 + 16;
    do
    {
      v68 = v3;
      v7 = *(_QWORD *)(v0 + 488);
      v62 = *(_QWORD *)(v0 + 480);
      v8 = *(_QWORD *)(v0 + 424);
      v9 = v5;
      v10 = *(_QWORD *)(v0 + 400);
      v11 = *(_QWORD *)(v0 + 408);
      v63 = *(_QWORD *)(v0 + 176);
      v65 = *(_QWORD *)(v0 + 392);
      v66 = v6;
      sub_23FC5F4B4(v6);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v56 + 104))(v8, v60, v11);
      sub_23FD74DF8();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v8, v11);
      v12 = sub_23FC5DC5C();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, 1, 1, v12);
      sub_23FC5F4B4(v4);
      sub_23FC5A8C8(v62, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      v13 = (*(unsigned __int8 *)(v9 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = 0;
      v14[3] = 0;
      v14[4] = v63;
      sub_23FBFDE28((__int128 *)(v0 + 56), (uint64_t)(v14 + 5));
      v15 = (uint64_t)v14 + v13;
      v5 = v9;
      sub_23FC5A8C8(v15, v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
      sub_23FC0F3AC(v10, v65, &qword_254346A28);
      v16 = sub_23FC5E824();
      v18 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v16, v17, v12);
      sub_23FC58D68();
      v19 = *(_QWORD *)(v0 + 392);
      if ((_DWORD)v18 == 1)
      {
        sub_23FC5B280(*(_QWORD *)(v0 + 392));
      }
      else
      {
        v18 = sub_23FD74DE0();
        v20 = sub_23FC5F300();
        sub_23FC15950(v20, v21);
      }
      v4 = v0 + 16;
      if (v14[2])
      {
        sub_23FC5F22C();
        sub_23FC5F0C8();
        sub_23FC5E1A0();
        sub_23FC5E35C();
      }
      else
      {
        v19 = 0;
        v18 = 0;
      }
      v22 = **(_QWORD **)(v0 + 168);
      v23 = sub_23FC58A94();
      *(_QWORD *)(v23 + 16) = &unk_256F5E3D0;
      *(_QWORD *)(v23 + 24) = v14;
      v24 = v18 | v19;
      if (v18 | v19)
      {
        v24 = v0 + 96;
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 104) = 0;
        *(_QWORD *)(v0 + 112) = v19;
        *(_QWORD *)(v0 + 120) = v18;
      }
      v25 = *(_QWORD *)(v0 + 448);
      v26 = *(_QWORD *)(v0 + 400);
      v27 = *(_QWORD *)(v0 + 376);
      *(_QWORD *)(v0 + 128) = 1;
      *(_QWORD *)(v0 + 136) = v24;
      *(_QWORD *)(v0 + 144) = v22;
      swift_task_create();
      swift_release();
      sub_23FC584B0(v26, &qword_254346A28);
      v28 = v27 + *(int *)(v54 + 48);
      sub_23FC584E0(v58, v27);
      sub_23FC1046C(v28, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16));
      v29 = *(_QWORD *)(v0 + 152);
      if ((sub_23FC5D484() & 1) == 0)
      {
        sub_23FC5DF60();
        sub_23FC998AC();
        v29 = v33;
      }
      v30 = *(_QWORD *)(v29 + 16);
      if (v30 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        sub_23FC998AC();
        v29 = v34;
      }
      v31 = *(_QWORD *)(v0 + 488);
      v32 = *(_QWORD *)(v0 + 376);
      *(_QWORD *)(v29 + 16) = v30 + 1;
      sub_23FC0EE04(v32, v29+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v30, &qword_256F5E3A0);
      *(_QWORD *)(v0 + 152) = v29;
      sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
      sub_23FC10454(v31, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v58);
      v6 = v66 + 40;
      v3 = v68 - 1;
    }
    while (v68 != 1);
    swift_bridgeObjectRelease();
    v1 = *(_QWORD *)(v0 + 176);
  }
  else
  {
    v60 = *MEMORY[0x24BEE6A10];
  }
  v35 = *(_QWORD *)(v0 + 352);
  v36 = *(_QWORD *)(v0 + 328);
  v61 = *(_QWORD *)(v0 + 344);
  v57 = *(_QWORD *)(v0 + 384);
  v59 = *(_QWORD *)(v0 + 320);
  v38 = *(_QWORD *)(v0 + 280);
  v37 = *(_QWORD *)(v0 + 288);
  v64 = *(_QWORD *)(v0 + 192);
  v67 = *(_QWORD *)(v0 + 200);
  sub_23FBFF104();
  v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  type metadata accessor for SessionCoordinatorInjectionRequest(0);
  sub_23FBFEE2C(&qword_256F65DB0, v39, MEMORY[0x24BDCEA88]);
  *(_QWORD *)(v0 + 160) = sub_23FD74B40();
  sub_23FC5F584();
  sub_23FC092BC(v37, v60, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 104));
  sub_23FD74DF8();
  sub_23FC5B3B0(v37, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  sub_23FC5DC5C();
  sub_23FC5E738(v57);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v61, v35, v59);
  v40 = (*(unsigned __int8 *)(v36 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v41 = (char *)swift_allocObject();
  *((_QWORD *)v41 + 2) = 0;
  *((_QWORD *)v41 + 3) = 0;
  *((_QWORD *)v41 + 4) = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(&v41[v40], v61, v59);
  sub_23FC58D90();
  v42 = sub_23FC20CDC(v57, (uint64_t)&unk_256F5E3E8, (uint64_t)v41);
  sub_23FC5F290(v42, &qword_254346A28);
  sub_23FD7229C();
  sub_23FC5A8C8(v67, v60, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 104));
  sub_23FD74DF8();
  sub_23FC10454(v67, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144)) == 1)
  {
    v43 = *(_QWORD *)(v0 + 384);
    v44 = *(_QWORD *)(v0 + 256);
    v45 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 240);
    v47 = *(_QWORD *)(v0 + 176);
    sub_23FC5E738(v43);
    sub_23FC5A8C8(v44, v45, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 16));
    v48 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    v49 = (_QWORD *)swift_allocObject();
    v49[2] = 0;
    v49[3] = 0;
    v49[4] = v47;
    sub_23FC5A8C8((uint64_t)v49 + v48, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 32));
    sub_23FC58CA8();
    v50 = sub_23FC20CDC(v43, (uint64_t)&unk_256F5E400, (uint64_t)v49);
    sub_23FC5F358(v50, &qword_254346A28);
  }
  v51 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 496) = v51;
  sub_23FC10108();
  v52 = (_QWORD *)sub_23FC5C588();
  *(_QWORD *)(v0 + 504) = v52;
  *v52 = v0;
  v52[1] = sub_23FC20AE0;
  return sub_23FC20F28(v51, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 224), v0 + 160);
}

uint64_t sub_23FC20AE0()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC1002C();
  sub_23FC5F38C();
  return sub_23FC5A63C();
}

uint64_t sub_23FC20B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_23FC5E39C();
  v47 = v28[61];
  v48 = v28[60];
  v49 = v28[56];
  v50 = v28[53];
  v51 = v28[50];
  v52 = v28[49];
  v53 = v28[48];
  v54 = v28[47];
  v55 = v28[43];
  v45 = v28[40];
  v46 = v28[44];
  v42 = v28[38];
  v43 = v28[37];
  v44 = v28[41];
  v29 = v28[33];
  v56 = v28[36];
  v57 = v28[32];
  v30 = v28[30];
  v32 = v28[27];
  v31 = v28[28];
  v58 = v28[25];
  sub_23FD74DA4();
  sub_23FCB3884();
  sub_23FC10454(v31, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  sub_23FC595C4(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  sub_23FC5B944(v42);
  sub_23FC5AEA8(*(uint64_t (**)(uint64_t))(v44 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5A574();
  sub_23FC5C980();
  sub_23FC5B2D4();
  sub_23FC5CDA8();
  sub_23FC090D0();
  sub_23FC5CDF0();
  sub_23FC090C0();
  swift_task_dealloc();
  sub_23FC5CB3C();
  return v33(v33, v34, v35, v36, v37, v38, v39, v40, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
           v53,
           v54,
           v55,
           v56,
           v57,
           v58,
           a26,
           a27,
           a28);
}

uint64_t sub_23FC20C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_23FC586E8;
  return sub_23FC50C74(a5, a6);
}

uint64_t sub_23FC20CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];
  _QWORD v21[4];

  v4 = v3;
  v8 = sub_23FBFD684(&qword_254346A28);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC0F3AC(a1, (uint64_t)v11, &qword_254346A28);
  v12 = sub_23FD74DEC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23FC584B0((uint64_t)v11, &qword_254346A28);
  }
  else
  {
    sub_23FD74DE0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v13 = sub_23FD74D80();
    v15 = v14;
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v16 = *v4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = (_QWORD *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    v18 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23FC20E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_23FC586E8;
  return sub_23FC520F0(a5);
}

uint64_t sub_23FC20ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_23FC586E8;
  return sub_23FC52654(a5);
}

uint64_t sub_23FC20F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5[276] = v4;
  v5[275] = a4;
  v5[274] = a3;
  v5[273] = a2;
  v5[272] = a1;
  v6 = sub_23FD72098();
  v5[277] = v6;
  v5[278] = *(_QWORD *)(v6 - 8);
  v5[279] = swift_task_alloc();
  v7 = sub_23FD72080();
  v5[280] = v7;
  v5[281] = *(_QWORD *)(v7 - 8);
  v5[282] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E428);
  v5[283] = swift_task_alloc();
  v8 = sub_23FD721E8();
  v5[284] = v8;
  v5[285] = *(_QWORD *)(v8 - 8);
  v5[286] = swift_task_alloc();
  v9 = sub_23FD720C8();
  v5[287] = v9;
  v5[288] = *(_QWORD *)(v9 - 8);
  v5[289] = swift_task_alloc();
  v10 = sub_23FD721A0();
  v5[290] = v10;
  v5[291] = *(_QWORD *)(v10 - 8);
  v5[292] = swift_task_alloc();
  v11 = sub_23FD72140();
  v5[293] = v11;
  v5[294] = *(_QWORD *)(v11 - 8);
  v5[295] = swift_task_alloc();
  v12 = sub_23FD72158();
  v5[296] = v12;
  v5[297] = *(_QWORD *)(v12 - 8);
  v5[298] = swift_task_alloc();
  v13 = sub_23FD7211C();
  v5[299] = v13;
  v5[300] = *(_QWORD *)(v13 - 8);
  v5[301] = swift_task_alloc();
  v14 = sub_23FD72188();
  v5[302] = v14;
  v5[303] = *(_QWORD *)(v14 - 8);
  v5[304] = swift_task_alloc();
  v15 = sub_23FD72170();
  v5[305] = v15;
  v5[306] = *(_QWORD *)(v15 - 8);
  v5[307] = swift_task_alloc();
  v16 = sub_23FD721AC();
  v5[308] = v16;
  v5[309] = *(_QWORD *)(v16 - 8);
  v5[310] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E430);
  v5[311] = swift_task_alloc();
  v5[312] = swift_task_alloc();
  v17 = sub_23FBFD684(&qword_256F5E3B0);
  v5[313] = v17;
  v5[314] = *(_QWORD *)(v17 - 8);
  v5[315] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E438);
  v5[316] = swift_task_alloc();
  v5[317] = swift_task_alloc();
  v18 = sub_23FD72B9C();
  v5[318] = v18;
  v5[319] = *(_QWORD *)(v18 - 8);
  v5[320] = swift_task_alloc();
  v5[321] = swift_task_alloc();
  v5[322] = type metadata accessor for SessionCoordinatorAcceptPayload(0);
  v5[323] = swift_task_alloc();
  v19 = sub_23FBFD684(&qword_256F5E440);
  v5[324] = v19;
  v5[325] = *(_QWORD *)(v19 - 8);
  v5[326] = swift_task_alloc();
  type metadata accessor for SessionID(0);
  v5[327] = swift_task_alloc();
  v20 = sub_23FBFD684(&qword_256F5E2B8);
  v5[328] = v20;
  v5[329] = *(_QWORD *)(v20 - 8);
  v5[330] = swift_task_alloc();
  v5[331] = swift_task_alloc();
  v21 = sub_23FD72B6C();
  v5[332] = v21;
  v5[333] = *(_QWORD *)(v21 - 8);
  v5[334] = swift_task_alloc();
  v5[335] = swift_task_alloc();
  v5[336] = swift_task_alloc();
  v5[337] = swift_task_alloc();
  v5[338] = swift_task_alloc();
  v5[339] = swift_task_alloc();
  v5[340] = swift_task_alloc();
  v5[341] = swift_task_alloc();
  v5[342] = swift_task_alloc();
  v5[343] = swift_task_alloc();
  v5[344] = swift_task_alloc();
  v22 = sub_23FD72B90();
  v5[345] = v22;
  v5[346] = *(_QWORD *)(v22 - 8);
  v5[347] = swift_task_alloc();
  v5[348] = swift_task_alloc();
  v5[349] = swift_task_alloc();
  v5[350] = swift_task_alloc();
  v5[351] = swift_task_alloc();
  v23 = sub_23FBFD684(&qword_256F5E3A0);
  v5[352] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v5[353] = v24;
  v5[354] = *(_QWORD *)(v24 + 64);
  v5[355] = swift_task_alloc();
  v5[356] = swift_task_alloc();
  v5[357] = swift_task_alloc();
  v25 = sub_23FBFD684(&qword_256F5E448);
  v5[358] = v25;
  v5[359] = *(_QWORD *)(v25 - 8);
  v5[360] = swift_task_alloc();
  v26 = type metadata accessor for EventPayloadWithPreassignedID(0);
  v5[361] = v26;
  v5[362] = *(_QWORD *)(v26 - 8);
  v5[363] = swift_task_alloc();
  sub_23FD73700();
  v5[364] = swift_task_alloc();
  v27 = sub_23FD72278();
  v5[365] = v27;
  v5[366] = *(_QWORD *)(v27 - 8);
  v5[367] = swift_task_alloc();
  sub_23FD7229C();
  v5[368] = swift_task_alloc();
  v28 = sub_23FBFD684(&qword_256F5E450);
  v5[369] = v28;
  v5[370] = *(_QWORD *)(v28 - 8);
  v5[371] = swift_task_alloc();
  v29 = sub_23FD740CC();
  v5[372] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v5[373] = v30;
  v5[374] = *(_QWORD *)(v30 + 64);
  v5[375] = swift_task_alloc();
  v5[376] = swift_task_alloc();
  v5[377] = swift_task_alloc();
  v5[378] = swift_task_alloc();
  v5[379] = swift_task_alloc();
  v5[380] = swift_task_alloc();
  v31 = sub_23FD71474();
  v5[381] = v31;
  v5[382] = *(_QWORD *)(v31 - 8);
  v5[383] = swift_task_alloc();
  v5[384] = swift_task_alloc();
  v5[385] = sub_23FBFD684(&qword_256F5E458);
  v5[386] = swift_task_alloc();
  v5[387] = swift_task_alloc();
  v5[388] = type metadata accessor for SpanMetadata(0);
  v5[389] = swift_task_alloc();
  v5[390] = swift_task_alloc();
  v32 = sub_23FD721C4();
  v5[391] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v5[392] = v33;
  v5[393] = *(_QWORD *)(v33 + 64);
  v5[394] = swift_task_alloc();
  v5[395] = swift_task_alloc();
  v5[396] = type metadata accessor for SessionCoordinatorInjectionRequest(0);
  v5[397] = swift_task_alloc();
  v5[398] = swift_task_alloc();
  v5[399] = sub_23FBFD684((uint64_t *)&unk_256F61700);
  v5[400] = swift_task_alloc();
  v5[401] = swift_task_alloc();
  v5[402] = swift_task_alloc();
  v5[403] = swift_task_alloc();
  v5[404] = swift_task_alloc();
  v34 = sub_23FD73EF8();
  v5[405] = v34;
  v5[406] = *(_QWORD *)(v34 - 8);
  v5[407] = swift_task_alloc();
  v35 = sub_23FD72BF0();
  v5[408] = v35;
  v5[409] = *(_QWORD *)(v35 - 8);
  v5[410] = swift_task_alloc();
  v5[411] = swift_task_alloc();
  v5[412] = swift_task_alloc();
  v5[413] = swift_task_alloc();
  v5[414] = swift_task_alloc();
  v5[415] = swift_task_alloc();
  v5[416] = swift_task_alloc();
  v5[417] = swift_task_alloc();
  v5[418] = swift_task_alloc();
  v5[419] = swift_task_alloc();
  v5[420] = swift_task_alloc();
  v5[421] = swift_task_alloc();
  v5[422] = swift_task_alloc();
  v5[423] = swift_task_alloc();
  v5[424] = swift_task_alloc();
  v5[425] = swift_task_alloc();
  v5[426] = swift_task_alloc();
  v5[427] = swift_task_alloc();
  v5[428] = swift_task_alloc();
  v5[429] = swift_task_alloc();
  v5[430] = swift_task_alloc();
  v5[431] = swift_task_alloc();
  v5[432] = swift_task_alloc();
  v5[433] = swift_task_alloc();
  v5[434] = swift_task_alloc();
  v5[435] = swift_task_alloc();
  v5[436] = swift_task_alloc();
  v5[437] = swift_task_alloc();
  v5[438] = swift_task_alloc();
  v5[439] = swift_task_alloc();
  v36 = sub_23FD73E08();
  v5[440] = v36;
  v5[441] = *(_QWORD *)(v36 - 8);
  v5[442] = swift_task_alloc();
  v5[443] = swift_task_alloc();
  v5[444] = swift_task_alloc();
  v37 = sub_23FD73D9C();
  v5[445] = v37;
  v5[446] = *(_QWORD *)(v37 - 8);
  v5[447] = swift_task_alloc();
  v5[448] = swift_task_alloc();
  v5[449] = swift_task_alloc();
  v5[450] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E460);
  v5[451] = swift_task_alloc();
  v5[452] = swift_task_alloc();
  v38 = *(_QWORD *)(sub_23FBFD684(qword_254346A10) - 8);
  v5[453] = v38;
  v5[454] = *(_QWORD *)(v38 + 64);
  v5[455] = swift_task_alloc();
  v5[456] = swift_task_alloc();
  v5[457] = swift_task_alloc();
  v5[458] = swift_task_alloc();
  v5[459] = swift_task_alloc();
  v5[460] = swift_task_alloc();
  v5[461] = swift_task_alloc();
  v5[462] = swift_task_alloc();
  v5[463] = swift_task_alloc();
  v5[464] = swift_task_alloc();
  v5[465] = type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
  v5[466] = swift_task_alloc();
  v5[467] = swift_task_alloc();
  v39 = sub_23FD7409C();
  v5[468] = v39;
  v5[469] = *(_QWORD *)(v39 - 8);
  v5[470] = swift_task_alloc();
  v5[471] = swift_task_alloc();
  v40 = type metadata accessor for SessionCoordinatorCommand(0);
  v5[472] = v40;
  v5[473] = *(_QWORD *)(v40 - 8);
  v5[474] = swift_task_alloc();
  v5[475] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E468);
  v5[476] = swift_task_alloc();
  v5[477] = swift_task_alloc();
  v41 = sub_23FBFD684(&qword_256F5E470);
  v5[478] = v41;
  v5[479] = *(_QWORD *)(v41 - 8);
  v5[480] = swift_task_alloc();
  v42 = sub_23FD734C0();
  v5[481] = v42;
  v5[482] = *(_QWORD *)(v42 - 8);
  v5[483] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC21B14()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  char *v23;

  sub_23FC5ACE0();
  v1 = v0;
  v2 = v0[483];
  v3 = v0[482];
  v4 = v0[276];
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 184);
  v0[484] = sub_23FD7415C();
  v6 = *MEMORY[0x24BE55560];
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  v0[485] = v7;
  sub_23FC100A0(v2, v6, v7);
  sub_23FD74168();
  v0[486] = *(_QWORD *)(v4 + v5);
  sub_23FC60F04();
  sub_23FC58CA0();
  sub_23FBFD684(&qword_256F5E478);
  sub_23FC5E1D0();
  sub_23FD30888(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 + 16);
  if (v10)
  {
    v11 = v1[473];
    sub_23FBFD684(&qword_256F5E4C0);
    v12 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = sub_23FC564C8();
    v13[3] = 0;
    v13[4] = 0;
    sub_23FC56814((uint64_t)(v13 + 2), (unint64_t)v13 + v12, v10, v9);
  }
  else
  {
    v13 = *(_QWORD **)sub_23FD72344();
    sub_23FC58C88();
  }
  v14 = v1[276];
  sub_23FC58D60();
  v1[271] = v13;
  v15 = *(_QWORD **)v14;
  v1[487] = *(_QWORD *)(*(_QWORD *)v14 + 144);
  v1[488] = v15[16];
  v1[489] = v15[21];
  v1[490] = qword_256F605B0;
  v1[491] = v15[14];
  v1[492] = v15[17];
  v1[493] = v15[22];
  v1[494] = v15[15];
  sub_23FC59120();
  v16 = *MEMORY[0x24BE56C80];
  *((_DWORD *)v1 + 1036) = *MEMORY[0x24BE56C80];
  *((_DWORD *)v1 + 1037) = *MEMORY[0x24BE53D00];
  *((_DWORD *)v1 + 1038) = *MEMORY[0x24BE53D08];
  *((_DWORD *)v1 + 1039) = *MEMORY[0x24BE53CE8];
  *((_DWORD *)v1 + 1040) = *MEMORY[0x24BE53CF8];
  *((_DWORD *)v1 + 1041) = *MEMORY[0x24BE53CF0];
  *((_DWORD *)v1 + 1042) = *MEMORY[0x24BE53D10];
  *((_DWORD *)v1 + 1043) = *MEMORY[0x24BE53CC8];
  *((_DWORD *)v1 + 1044) = *MEMORY[0x24BE53CD0];
  *((_DWORD *)v1 + 1045) = *MEMORY[0x24BE53CD8];
  *((_DWORD *)v1 + 1046) = *MEMORY[0x24BE53CE0];
  *((_DWORD *)v1 + 1047) = *MEMORY[0x24BE53E08];
  *((_DWORD *)v1 + 1048) = *MEMORY[0x24BE53DE8];
  *((_DWORD *)v1 + 1049) = *MEMORY[0x24BE53E28];
  *((_DWORD *)v1 + 1050) = *MEMORY[0x24BE53D50];
  *((_DWORD *)v1 + 1051) = *MEMORY[0x24BE53DD0];
  *((_DWORD *)v1 + 1052) = *MEMORY[0x24BE53D60];
  *((_DWORD *)v1 + 1053) = *MEMORY[0x24BE53E10];
  *((_DWORD *)v1 + 1054) = *MEMORY[0x24BE53D48];
  *((_DWORD *)v1 + 1055) = *MEMORY[0x24BE53D58];
  *((_DWORD *)v1 + 1056) = *MEMORY[0x24BE53DE0];
  *((_DWORD *)v1 + 1057) = *MEMORY[0x24BE53E18];
  *((_DWORD *)v1 + 1058) = *MEMORY[0x24BE53E20];
  *((_DWORD *)v1 + 1059) = *MEMORY[0x24BE53DF8];
  *((_DWORD *)v1 + 1060) = *MEMORY[0x24BE53DD8];
  *((_DWORD *)v1 + 1061) = v16;
  *((_DWORD *)v1 + 1062) = *MEMORY[0x24BE53DC8];
  v17 = (_DWORD *)MEMORY[0x24BE53DF0];
  *((_DWORD *)v1 + 1063) = *MEMORY[0x24BE55548];
  *((_DWORD *)v1 + 1064) = *v17;
  *((_DWORD *)v1 + 1065) = *MEMORY[0x24BEE7810];
  v18 = (_DWORD *)MEMORY[0x24BE53E00];
  *((_DWORD *)v1 + 1066) = *MEMORY[0x24BE53E30];
  *((_DWORD *)v1 + 1067) = *v18;
  v1[495] = 0;
  sub_23FC5D198();
  sub_23FC50264(v19);
  sub_23FC100EC(v9, 1, (uint64_t)(v1 + 70));
  if (!v20)
  {
    sub_23FC5E0F0();
    sub_23FC5E0D8();
    sub_23FC5E0C0();
    sub_23FC5D058();
    sub_23FC5C8D4();
    sub_23FC5D764();
    v23 = (char *)&loc_23FC223C8 + *((int *)qword_23FC2D5E8 + sub_23FC5E018());
    __asm { BR              X9 }
  }
  v21 = (_QWORD *)swift_task_alloc();
  sub_23FC5BB94(v21, (uint64_t)sub_23FC2D608);
  return sub_23FC5A488();
}

void sub_23FC223D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD);
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t (**v63)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  NSObject *v94;
  unint64_t v95;
  uint64_t v96;
  os_log_type_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  NSObject *v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t (**v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t (**v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  os_log_type_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint8_t *v160;
  unint64_t v161;
  uint64_t (**v162)(uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  os_log_type_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _WORD *v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t (**v191)(uint64_t, uint64_t, uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t (**v223)(uint64_t, uint64_t, uint64_t);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t (*v237)(void);
  uint64_t v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;
  _QWORD *v256;
  uint64_t v257;
  char v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  _WORD *v271;
  uint64_t v272;
  void *v273;
  NSObject *v274;
  os_log_type_t v275;
  void *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  _QWORD *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _QWORD *v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  NSObject *v296;
  os_log_type_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  _QWORD *v310;
  uint64_t v311;
  os_log_type_t v312;
  _QWORD *v313;
  int v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  NSObject *v332;
  os_log_type_t v333;
  const char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  _QWORD *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  _QWORD *v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  uint64_t v382;
  uint64_t v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  __int128 *v394;
  uint64_t v395;
  uint64_t v396;
  _QWORD *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char v410;
  char v411;
  _QWORD *v412;
  uint64_t v413;
  char v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  int v419;
  int v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  _QWORD *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint8_t *v447;
  uint64_t v448;
  uint64_t v449;
  _QWORD *v450;
  void *v451;
  NSObject *v452;
  os_log_type_t v453;
  uint64_t v454;
  uint64_t v455;
  int v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  _QWORD *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t (**v483)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v484)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v485)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v486)(uint64_t, uint64_t, uint64_t);
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t (**v490)(uint64_t, uint64_t, uint64_t);
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t (**v494)(uint64_t, uint64_t, uint64_t);
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t (**v498)(uint64_t, uint64_t, uint64_t);
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t (**v502)(uint64_t, uint64_t, uint64_t);
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t (**v506)(uint64_t, uint64_t, uint64_t);
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t (**v513)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v514)(uint64_t, uint64_t, uint64_t);
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t (**v518)(uint64_t, uint64_t, uint64_t);
  uint64_t v519;
  uint64_t v520;
  uint64_t (**v521)(uint64_t, uint64_t, uint64_t);
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t (**v525)(uint64_t, uint64_t, uint64_t);
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t (**v529)(uint64_t, uint64_t, uint64_t);
  __int128 v530;
  uint64_t v531;
  unsigned __int8 *v532;
  uint8_t *v533;
  uint64_t v534;
  uint8_t *v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  int v540;
  uint64_t v541;
  os_log_type_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  _QWORD *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  int v553;
  uint64_t v554;
  char v555;
  uint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  os_log_type_t v560;
  os_log_type_t v561;
  NSObject *v562;
  uint64_t v563;
  NSObject *v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  _QWORD *v569;
  uint64_t v570;

  v4 = *(_QWORD *)(v2 + 3736);
  sub_23FC5AEE4();
  v5 = sub_23FBFD684(&qword_256F5E2B0);
  v6 = sub_23FC5C398(v5);
  sub_23FC0F380(v6, v4, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
  v7 = sub_23FC5E67C();
  v9 = v8;
  v10 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v3 - 200) = v7;
  v11 = sub_23FC5B6DC(v7, v10);
  *(_QWORD *)(v3 - 224) = v12;
  v12(v11);
  sub_23FC5CAD8();
  v13 = *(_QWORD *)(v2 + 8);
  v14 = *(_QWORD **)(v3 - 136);
  v14[501] = v13;
  v15 = sub_23FC5A8DC();
  *(_QWORD *)(v3 - 216) = v16;
  v16(v15);
  v17 = sub_23FC5C884();
  v18 = *(void (**)(uint64_t, _QWORD))(v1 + 8);
  v14[502] = v18;
  v18(v0, *(_QWORD *)(v3 - 160));
  sub_23FC5B8F8();
  sub_23FC1002C();
  v19 = sub_23FBFD684(&qword_256F5E4A8);
  sub_23FC5C534(v19);
  v20 = v14[452];
  if (v21 == 1)
  {
    sub_23FC584B0(v20, &qword_256F5E460);
    sub_23FC5BD28(v9);
  }
  else
  {
    v22 = v14[382];
    v23 = v14[372];
    v24 = v20 + *(int *)(v17 + 48);
    sub_23FC1046C(v9, v20 + *(int *)(v17 + 64), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14[373] + 32));
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, 0, 1, v23);
    sub_23FC100E4(v24, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  }
  v25 = (uint64_t *)v14[466];
  v26 = sub_23FC58AA0();
  v14[504] = v26;
  *(_QWORD *)(v3 - 208) = v26 + 16;
  v27 = sub_23FBFF13C();
  sub_23FC0EDD8(v27, v28, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
  v29 = sub_23FC5CC54();
  v30 = *v25;
  *(_QWORD *)(v3 - 176) = v9;
  if (v29 != 1)
  {
    v65 = v14[466];
    v66 = v14[461];
    v67 = (_QWORD *)v14[390];
    v68 = v30;
    v69 = v14[388];
    v70 = v14[276];
    v71 = sub_23FBFD684(&qword_256F5E2D8);
    sub_23FC0F380(v65 + *(int *)(v71 + 48), (uint64_t)v67, type metadata accessor for SpanMetadata);
    v72 = v67[2];
    *(_QWORD *)(v3 - 184) = v67[1];
    v73 = (_QWORD *)*v67;
    *(_QWORD *)(v26 + 16) = v68;
    v74 = *(int *)(v69 + 24);
    v75 = *(_QWORD *)((char *)v67 + *(int *)(v69 + 28) + 8);
    sub_23FC0F3AC((uint64_t)v67 + v74, v66, qword_254346A10);
    *(_QWORD *)(v3 - 192) = v72;
    sub_23FC5C20C();
    v550 = v75;
    sub_23FC5AC34();
    sub_23FC5BC80();
    v76 = sub_23FC58A94();
    *(_QWORD *)(v76 + 16) = sub_23FC576A8;
    *(_QWORD *)(v76 + 24) = v70;
    v77 = sub_23FC58AA0();
    *(_QWORD *)(v3 - 168) = v73;
    *(_QWORD *)(v77 + 16) = v73;
    v78 = sub_23FC58A94();
    *(_QWORD *)(v78 + 16) = sub_23FC57844;
    *(_QWORD *)(v78 + 24) = v77;
    sub_23FC58D80();
    sub_23FC58D58();
    v79 = sub_23FC5BD8C();
    *(_DWORD *)(v3 - 224) = sub_23FC5DC7C(v79);
    v80 = sub_23FC58AA0();
    *(_QWORD *)(v3 - 160) = v80;
    sub_23FC5C254(v80);
    v565 = sub_23FC58AA0();
    *(_BYTE *)(v565 + 16) = 8;
    v81 = sub_23FC58A94();
    *(_QWORD *)(v81 + 16) = sub_23FC586BC;
    *(_QWORD *)(v81 + 24) = v76;
    v82 = sub_23FC58A94();
    *(_QWORD *)(v82 + 16) = sub_23FC586C0;
    *(_QWORD *)(v82 + 24) = v81;
    v83 = sub_23FC58AA0();
    sub_23FC5EA60(v83);
    v84 = sub_23FC58AA0();
    *(_BYTE *)(v84 + 16) = 8;
    v85 = sub_23FC58A94();
    *(_QWORD *)(v85 + 16) = sub_23FC586CC;
    *(_QWORD *)(v85 + 24) = v78;
    v86 = sub_23FC58A94();
    *(_QWORD *)(v86 + 16) = sub_23FC586C0;
    *(_QWORD *)(v86 + 24) = v85;
    v87 = sub_23FC58AA0();
    sub_23FC5F4EC(v87);
    v88 = sub_23FC58AA0();
    *(_BYTE *)(v88 + 16) = 8;
    v89 = (_QWORD *)sub_23FC58A94();
    v89[2] = sub_23FC57D58;
    v89[3] = v26;
    v90 = sub_23FC58A94();
    *(_QWORD *)(v90 + 16) = sub_23FC58A90;
    *(_QWORD *)(v90 + 24) = v89;
    sub_23FBFD684(&qword_256F5E480);
    v91 = sub_23FC58AA0();
    sub_23FC5A828(v91);
    *(_QWORD *)(v92 + 32) = sub_23FC586E0;
    v89[5] = *(_QWORD *)(v3 - 160);
    v89[6] = sub_23FC586E0;
    v89[7] = v565;
    v89[8] = sub_23FC586D4;
    v89[9] = v82;
    v89[10] = sub_23FC586E0;
    v89[11] = v73;
    v89[12] = sub_23FC586E0;
    v89[13] = v84;
    v89[14] = sub_23FC586D4;
    v89[15] = v86;
    v89[16] = sub_23FC586E0;
    v89[17] = v26;
    v89[18] = sub_23FC586E0;
    v89[19] = v88;
    v89[20] = sub_23FC586DC;
    v89[21] = v90;
    v93 = *(NSObject **)(v3 - 216);
    swift_retain();
    sub_23FC58D90();
    v559 = v82;
    sub_23FC58D80();
    v56 = v73;
    sub_23FC58D68();
    sub_23FC58D78();
    sub_23FC58C88();
    sub_23FC58D58();
    sub_23FC58CA8();
    sub_23FC58D70();
    sub_23FC58D60();
    v94 = v93;
    if (os_log_type_enabled(v93, (os_log_type_t)*(_DWORD *)(v3 - 224)))
    {
      sub_23FC5A2EC();
      v95 = sub_23FBFEFF4();
      v96 = *(_QWORD *)(v3 - 136);
      sub_23FC5CD30(v95);
      *(_QWORD *)(v96 + 824) = sub_23FC586E0;
      *(_QWORD *)(v96 + 832) = *(_QWORD *)(v3 - 160);
      sub_23FC5AB14(v529, v528, v527, v526);
      if (!v73)
      {
        sub_23FC5B04C();
        *(_QWORD *)(v96 + 824) = sub_23FC586E0;
        *(_QWORD *)(v96 + 832) = v565;
        sub_23FC5A0B8(v529, v528, v527);
        *(_QWORD *)(v3 - 144) = v88;
        sub_23FC101F4();
        *(_QWORD *)(v96 + 824) = sub_23FC586D4;
        *(_QWORD *)(v96 + 832) = v559;
        sub_23FC5A0B8(v529, v528, v527);
        sub_23FC58ADC();
        *(_QWORD *)(v96 + 824) = sub_23FC586E0;
        *(_QWORD *)(v96 + 832) = 0;
        sub_23FC5A0B8(v529, v528, v527);
        sub_23FC58CA0();
        *(_QWORD *)(v96 + 824) = sub_23FC586E0;
        *(_QWORD *)(v96 + 832) = v84;
        sub_23FC5A0B8(v529, v528, v527);
        sub_23FC58CA0();
        *(_QWORD *)(v96 + 824) = sub_23FC586D4;
        *(_QWORD *)(v96 + 832) = v86;
        sub_23FC5A0B8(v529, v528, v527);
        sub_23FC58CA0();
        *(_QWORD *)(v96 + 824) = sub_23FC586E0;
        *(_QWORD *)(v96 + 832) = v26;
        sub_23FC5A0B8(v529, v528, v527);
        sub_23FC58CA0();
        *(_QWORD *)(v96 + 824) = sub_23FC586E0;
        *(_QWORD *)(v96 + 832) = *(_QWORD *)(v3 - 144);
        sub_23FC5A0B8(v529, v528, v527);
        sub_23FC58CA0();
        *(_QWORD *)(v96 + 824) = sub_23FC586DC;
        *(_QWORD *)(v96 + 832) = v90;
        sub_23FC5A0B8(v529, v528, v527);
        sub_23FC58AE4();
        sub_23FC5DF30();
        sub_23FC10464(&dword_23FBF8000, *(NSObject **)(v3 - 216), v97, "[SessionCoordinator %s] | [TX %s] Internal transaction turned in with %ld events.", v535);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_143;
    }
    v98 = *(_QWORD **)(v3 - 136);
    *(_QWORD *)(v3 - 224) = v98[436];
    v99 = v98[409];
    v546 = v98[408];
    sub_23FC5B04C();
    sub_23FC101F4();
    swift_release();
    sub_23FC58FA0();
    sub_23FC58C6C();
    sub_23FC58AC0();
    sub_23FC58ADC();
    sub_23FC58AE4();
    sub_23FC58C64();

    (*(void (**)(_QWORD, uint64_t))(v99 + 8))(*(_QWORD *)(v3 - 224), v546);
    v100 = *(_QWORD *)(v3 - 176);
    sub_23FC59120();
    if (!sub_23FC5C098())
    {
      sub_23FC5DBE0();
      v99 = 0;
    }
    sub_23FC5BC88();
    v101 = sub_23FC59E54();
    sub_23FC5B760(v101, v102);
    sub_23FC5B760(v531, v99);
    sub_23FC100EC(v100, 1, v86);
    if (v142)
    {
      v103 = v98[381];
      sub_23FC5BDCC(v98[460]);
      sub_23FC100EC(v99, 1, v103);
      if (v142)
      {
        sub_23FC5BDCC(v98[387]);
LABEL_39:
        sub_23FC5E9C0();
        v166 = v98[276];
        sub_23FC58FB0();
        v167 = sub_23FC58A94();
        *(_QWORD *)(v167 + 16) = sub_23FC576A8;
        *(_QWORD *)(v167 + 24) = v166;
        v168 = sub_23FC58AA0();
        sub_23FC5C844(v168);
        v169 = sub_23FC58A94();
        v170 = sub_23FC5D45C(v169, (uint64_t)sub_23FC57844);
        sub_23FC5C628(v170, v171);
        sub_23FC5B730();
        v172 = swift_allocObject();
        *(_QWORD *)(v3 - 216) = v172;
        sub_23FC5BBC8(v172);
        sub_23FC58D90();
        v173 = sub_23FD72BE4();
        *(_DWORD *)(v3 - 200) = sub_23FC5F350(v173);
        v174 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 160) = v174;
        sub_23FC5D38C(v174);
        v175 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 224) = v175;
        *(_BYTE *)(v175 + 16) = 8;
        v176 = sub_23FC58A94();
        *(_QWORD *)(v176 + 16) = sub_23FC586BC;
        *(_QWORD *)(v176 + 24) = v167;
        v177 = sub_23FC58A94();
        *(_QWORD *)(v177 + 16) = sub_23FC586C0;
        *(_QWORD *)(v177 + 24) = v176;
        v178 = sub_23FC58AA0();
        *(_BYTE *)(v178 + 16) = v166;
        v110 = sub_23FC58AA0();
        *(_BYTE *)(v110 + 16) = 8;
        v179 = sub_23FC58A94();
        *(_QWORD *)(v179 + 16) = sub_23FC586CC;
        *(_QWORD *)(v179 + 24) = v169;
        v180 = sub_23FC58A94();
        *(_QWORD *)(v180 + 16) = sub_23FC586C0;
        *(_QWORD *)(v180 + 24) = v179;
        v181 = sub_23FC58AA0();
        *(_BYTE *)(v181 + 16) = v166;
        v182 = sub_23FC58AA0();
        *(_BYTE *)(v182 + 16) = 8;
        v183 = sub_23FC58A94();
        v184 = *(_QWORD *)(v3 - 216);
        *(_QWORD *)(v183 + 16) = sub_23FC57A78;
        *(_QWORD *)(v183 + 24) = v184;
        v185 = sub_23FC58A94();
        *(_QWORD *)(v185 + 16) = sub_23FC586C0;
        *(_QWORD *)(v185 + 24) = v183;
        v186 = sub_23FC58AA0();
        sub_23FC5A828(v186);
        *(_QWORD *)(v187 + 32) = sub_23FC586E0;
        MEMORY[0x30] = *(_QWORD *)(v3 - 160);
        MEMORY[0x38] = sub_23FC586E0;
        MEMORY[0x40] = *(_QWORD *)(v3 - 224);
        MEMORY[0x48] = sub_23FC586D4;
        MEMORY[0x50] = v177;
        MEMORY[0x58] = sub_23FC586E0;
        MEMORY[0x60] = v178;
        MEMORY[0x68] = sub_23FC586E0;
        MEMORY[0x70] = v110;
        MEMORY[0x78] = sub_23FC586D4;
        MEMORY[0x80] = v180;
        MEMORY[0x88] = sub_23FC586E0;
        MEMORY[0x90] = v181;
        MEMORY[0x98] = sub_23FC586E0;
        MEMORY[0xA0] = v182;
        MEMORY[0xA8] = sub_23FC586D4;
        sub_23FC5CE40();
        sub_23FC58D90();
        v56 = (_QWORD *)v177;
        sub_23FC58D70();
        v107 = (_QWORD *)v178;
        sub_23FC58D58();
        sub_23FC58CA8();
        sub_23FC58D78();
        sub_23FC58F98();
        sub_23FC58D68();
        sub_23FC58C88();
        sub_23FC58D60();
        if (sub_23FC5F0D4(*(os_log_t *)(v3 - 176), (os_log_type_t)*(_DWORD *)(v3 - 200)))
        {
          *(_QWORD *)(v3 - 216) = v56;
          v547 = v181;
          v188 = (_WORD *)sub_23FC5A2EC();
          v189 = sub_23FBFEFF4();
          v190 = *(_QWORD **)(v3 - 136);
          v190[265] = 0;
          v190[266] = v189;
          *v188 = 770;
          v190[264] = v188 + 1;
          v190[107] = sub_23FC586E0;
          v190[108] = *(_QWORD *)(v3 - 160);
          sub_23FC5AB14(v498, v497, v496, v495);
          if (!v56)
          {
            sub_23FC58AC8();
            v191 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5F12C((uint64_t)sub_23FC586E0);
            sub_23FC58FA8(v191, v192, v496);
            sub_23FC58AC0();
            v190[107] = sub_23FC586D4;
            v190[108] = *(_QWORD *)(v3 - 216);
            sub_23FC58FA8(v498, v497, v496);
            *(_QWORD *)(v3 - 144) = v188;
            sub_23FC58AC8();
            v190[107] = sub_23FC586E0;
            v190[108] = v178;
            sub_23FC58FA8(v498, v497, v496);
            sub_23FC58C64();
            v190[107] = sub_23FC586E0;
            v190[108] = v110;
            sub_23FC58FA8(v498, v497, v496);
            sub_23FC58CA0();
            v190[107] = sub_23FC586D4;
            v190[108] = v180;
            sub_23FC58FA8(v498, v497, v496);
            sub_23FC58CA0();
            v190[107] = sub_23FC586E0;
            v190[108] = v547;
            sub_23FC58FA8(v498, v497, v496);
            sub_23FC58CA0();
            v190[107] = sub_23FC586E0;
            v190[108] = v182;
            sub_23FC58FA8(v498, v497, v496);
            sub_23FC58CA0();
            v190[107] = sub_23FC586D4;
            v190[108] = v185;
            sub_23FC58FA8(v498, v497, v496);
            sub_23FC58AC0();
            sub_23FC10464(&dword_23FBF8000, *(NSObject **)(v3 - 176), (os_log_type_t)*(_DWORD *)(v3 - 200), "[SessionCoordinator %s] | [TX %s] Transaction has a query event ID %s that matches the current query event ID.", *(uint8_t **)(v3 - 144));
            sub_23FC1045C();
            sub_23FBFEFA0();
          }
          goto LABEL_143;
        }
        v109 = *(_QWORD **)(v3 - 136);
        *(_QWORD *)(v3 - 216) = v109[434];
        v563 = v109[409];
        *(_QWORD *)(v3 - 200) = v109[390];

        sub_23FC58AC0();
        sub_23FC58C6C();
        sub_23FC58CA0();
        sub_23FC58AC8();
        sub_23FC58ADC();
        sub_23FC58C64();
        sub_23FC58FA0();
        sub_23FC101F4();
        sub_23FC5B04C();
        sub_23FC5B13C(*(uint64_t (**)(void))(v563 + 8));
        sub_23FC5806C(*(_QWORD *)(v3 - 200), type metadata accessor for SpanMetadata);
        v226 = 1;
        goto LABEL_51;
      }
    }
    else
    {
      v141 = v98[381];
      sub_23FC5B760(v98[387], v98[459]);
      sub_23FC5B16C();
      if (!v142)
      {
        v165 = v98[387];
        sub_23FC59444();
        sub_23FBFEE2C(&qword_256F5E4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        sub_23FC59E98();
        sub_23FC5AAB4();
        sub_23FC5A4C4(v531);
        sub_23FC5B1AC(v141);
        sub_23FC5A4C4(v165);
        if ((v99 & 1) != 0)
          goto LABEL_39;
LABEL_42:
        v193 = v98[276];
        sub_23FC58FB0();
        v194 = sub_23FC58A94();
        *(_QWORD *)(v194 + 16) = sub_23FC576A8;
        *(_QWORD *)(v194 + 24) = v193;
        v195 = sub_23FC58AA0();
        v196 = v195;
        sub_23FC5C844(v195);
        v197 = sub_23FC58A94();
        v198 = sub_23FC5D45C(v197, (uint64_t)sub_23FC57844);
        sub_23FC5C628(v198, v199);
        sub_23FC5B730();
        v200 = swift_allocObject();
        sub_23FC5BBC8(v200);
        sub_23FC58D90();
        swift_retain();
        v562 = sub_23FD72BE4();
        v542 = sub_23FD74F6C();
        v201 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 224) = v201;
        sub_23FC5D38C(v201);
        v567 = sub_23FC58AA0();
        sub_23FC5C5CC(v567);
        v202 = sub_23FC58A94();
        *(_QWORD *)(v202 + 16) = sub_23FC586BC;
        *(_QWORD *)(v202 + 24) = v194;
        v203 = sub_23FC58A94();
        *(_QWORD *)(v203 + 16) = sub_23FC586C0;
        *(_QWORD *)(v203 + 24) = v202;
        v204 = sub_23FC58AA0();
        *(_BYTE *)(v204 + 16) = v193;
        v205 = v204;
        v206 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 216) = v206;
        *(_BYTE *)(v206 + 16) = v196;
        v207 = sub_23FC58A94();
        *(_QWORD *)(v207 + 16) = sub_23FC586CC;
        *(_QWORD *)(v207 + 24) = v197;
        v548 = sub_23FC58A94();
        *(_QWORD *)(v548 + 16) = sub_23FC586C0;
        *(_QWORD *)(v548 + 24) = v207;
        v208 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 160) = v208;
        *(_BYTE *)(v208 + 16) = v193;
        v209 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 176) = v209;
        *(_BYTE *)(v209 + 16) = v196;
        v210 = sub_23FC58A94();
        *(_QWORD *)(v210 + 16) = sub_23FC57A78;
        *(_QWORD *)(v210 + 24) = v200;
        v544 = sub_23FC58A94();
        *(_QWORD *)(v544 + 16) = sub_23FC586C0;
        *(_QWORD *)(v544 + 24) = v210;
        v211 = sub_23FC58AA0();
        *(_BYTE *)(v211 + 16) = v193;
        v212 = sub_23FC58AA0();
        *(_BYTE *)(v212 + 16) = v196;
        v213 = sub_23FC58A94();
        v214 = *(_QWORD *)(v3 - 200);
        *(_QWORD *)(v213 + 16) = sub_23FC57D88;
        *(_QWORD *)(v213 + 24) = v214;
        v56 = (_QWORD *)sub_23FC58A94();
        v56[2] = sub_23FC586C0;
        v56[3] = v213;
        v215 = sub_23FC58AA0();
        *(_OWORD *)(v215 + 16) = v530;
        v216 = *(_QWORD *)(v3 - 224);
        v217 = *(_QWORD *)(v3 - 216);
        *(_QWORD *)(v215 + 32) = sub_23FC586E0;
        *(_QWORD *)(v215 + 40) = v216;
        *(_QWORD *)(v215 + 48) = sub_23FC586E0;
        *(_QWORD *)(v215 + 56) = v567;
        *(_QWORD *)(v215 + 64) = sub_23FC586D4;
        *(_QWORD *)(v215 + 72) = v203;
        *(_QWORD *)(v215 + 80) = sub_23FC586E0;
        *(_QWORD *)(v215 + 88) = v205;
        *(_QWORD *)(v215 + 96) = sub_23FC586E0;
        *(_QWORD *)(v215 + 104) = v217;
        *(_QWORD *)(v215 + 112) = sub_23FC586D4;
        *(_QWORD *)(v215 + 120) = v548;
        v218 = *(_QWORD *)(v3 - 160);
        *(_QWORD *)(v215 + 128) = sub_23FC586E0;
        *(_QWORD *)(v215 + 136) = v218;
        v219 = *(_QWORD *)(v3 - 176);
        *(_QWORD *)(v215 + 144) = sub_23FC586E0;
        *(_QWORD *)(v215 + 152) = v219;
        *(_QWORD *)(v215 + 160) = sub_23FC586D4;
        *(_QWORD *)(v215 + 168) = v544;
        *(_QWORD *)(v215 + 176) = sub_23FC586E0;
        *(_QWORD *)(v215 + 184) = v211;
        *(_QWORD *)(v215 + 192) = sub_23FC586E0;
        *(_QWORD *)(v215 + 200) = v212;
        *(_QWORD *)(v215 + 208) = sub_23FC586D4;
        *(_QWORD *)(v215 + 216) = v56;
        swift_retain();
        sub_23FC58F98();
        *(_QWORD *)(v3 - 200) = v203;
        sub_23FC58D58();
        v557 = v205;
        sub_23FC58CA8();
        sub_23FC58D68();
        sub_23FC58D90();
        swift_retain();
        sub_23FC58D68();
        sub_23FC58C88();
        v110 = v211;
        sub_23FC58D78();
        sub_23FC58D70();
        sub_23FC58D80();
        sub_23FC58D60();
        if (os_log_type_enabled(v562, v542))
        {
          v220 = *(_QWORD *)(v3 - 224);
          v221 = *(_QWORD *)(v3 - 216);
          sub_23FC5E198();
          v222 = sub_23FBFEFF4();
          sub_23FC5C88C(v222);
          *(_QWORD *)(v567 + 872) = sub_23FC586E0;
          *(_QWORD *)(v567 + 880) = v220;
          sub_23FC5AB14(v506, v505, v504, v503);
          if (!v56)
          {
            sub_23FC58C6C();
            *(_QWORD *)(v567 + 872) = sub_23FC586E0;
            *(_QWORD *)(v567 + 880) = v567;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58C6C();
            v223 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5E188((uint64_t)sub_23FC586D4);
            sub_23FC58D88(v223, v505, v504);
            sub_23FC58ADC();
            *(_QWORD *)(v567 + 872) = sub_23FC586E0;
            *(_QWORD *)(v567 + 880) = v557;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586E0;
            *(_QWORD *)(v567 + 880) = v221;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586D4;
            *(_QWORD *)(v567 + 880) = v548;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586E0;
            *(_QWORD *)(v567 + 880) = *(_QWORD *)(v3 - 160);
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586E0;
            *(_QWORD *)(v567 + 880) = *(_QWORD *)(v3 - 176);
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586D4;
            *(_QWORD *)(v567 + 880) = v544;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586E0;
            *(_QWORD *)(v567 + 880) = v211;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586E0;
            *(_QWORD *)(v567 + 880) = v212;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58CA0();
            *(_QWORD *)(v567 + 872) = sub_23FC586D4;
            *(_QWORD *)(v567 + 880) = 0;
            sub_23FC58D88(v506, v505, v504);
            sub_23FC58AC0();
            sub_23FC5D698(&dword_23FBF8000, v562, v542, "[SessionCoordinator %s] | [TX %s] Transaction has a query event ID %s that does *not* match the current query event ID %s.");
            sub_23FC5E27C();
            sub_23FBFEFA0();
          }
          goto LABEL_143;
        }
        v107 = *(_QWORD **)(v3 - 136);
        v224 = v107[409];
        v225 = v107[390];

        sub_23FC58FA0();
        sub_23FC58AC8();
        sub_23FC58AE4();
        sub_23FC58AC0();
        sub_23FC58C6C();
        sub_23FC5B04C();
        sub_23FC101F4();
        sub_23FC5B30C();
        sub_23FC5D4A8();
        sub_23FC5E080();
        swift_release();
        sub_23FC5D038();
        sub_23FC5B13C(*(uint64_t (**)(void))(v224 + 8));
        sub_23FC5806C(v225, type metadata accessor for SpanMetadata);
        v226 = 0;
        v109 = v107;
LABEL_51:
        v235 = sub_23FC5F078();
        sub_23FC0EE04(v235, v236, qword_254346A10);
        v144 = v226;
        v229 = v550;
        goto LABEL_55;
      }
      v143 = v98[382];
      sub_23FC5BDCC(v531);
      sub_23FC5B2E8(*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8));
    }
    sub_23FC584B0(v98[387], &qword_256F5E458);
    goto LABEL_42;
  }
  v31 = v14[466];
  v543 = *(_QWORD *)(v31 + 8);
  v545 = *(_QWORD *)(v31 + 16);
  v32 = sub_23FD73238();
  *(_QWORD *)(v3 - 192) = v33;
  *(_QWORD *)(v3 - 184) = v32;
  sub_23FC5DCFC();
  sub_23FC5B0AC();
  sub_23FC5EBB0();
  if (v36)
  {
    __break(1u);
    JUMPOUT(0x23FC2D5A4);
  }
  v37 = v34;
  v38 = v14[276];
  *(_QWORD *)(v38 + v14[492]) = v35;
  sub_23FC58FB0();
  v39 = sub_23FC58A94();
  *(_QWORD *)(v39 + 16) = sub_23FC576A8;
  *(_QWORD *)(v39 + 24) = v38;
  v40 = sub_23FC58AA0();
  *(_QWORD *)(v3 - 168) = v37;
  *(_QWORD *)(v40 + 16) = v37;
  v41 = sub_23FC58A94();
  *(_QWORD *)(v41 + 16) = sub_23FC57844;
  *(_QWORD *)(v41 + 24) = v40;
  v554 = sub_23FC58AA0();
  *(_QWORD *)(v554 + 16) = v30;
  sub_23FC58C88();
  *(_QWORD *)(v3 - 200) = v30;
  sub_23FC5AC34();
  v564 = sub_23FD72BE4();
  sub_23FD74F6C();
  v42 = sub_23FC58AA0();
  *(_QWORD *)(v3 - 160) = v42;
  *(_BYTE *)(v42 + 16) = 32;
  v551 = sub_23FC58AA0();
  *(_BYTE *)(v551 + 16) = 8;
  v43 = sub_23FC58A94();
  *(_QWORD *)(v43 + 16) = sub_23FC586BC;
  *(_QWORD *)(v43 + 24) = v39;
  v44 = sub_23FC58A94();
  *(_QWORD *)(v44 + 16) = sub_23FC586C0;
  *(_QWORD *)(v44 + 24) = v43;
  v45 = sub_23FC58AA0();
  sub_23FC5F3EC(v45);
  v46 = sub_23FC58AA0();
  *(_BYTE *)(v46 + 16) = 8;
  v47 = sub_23FC58A94();
  *(_QWORD *)(v47 + 16) = sub_23FC586CC;
  *(_QWORD *)(v47 + 24) = v41;
  v48 = sub_23FC58A94();
  *(_QWORD *)(v48 + 16) = sub_23FC586C0;
  *(_QWORD *)(v48 + 24) = v47;
  v49 = sub_23FC58AA0();
  sub_23FC5F0B0(v49);
  v50 = sub_23FC58AA0();
  sub_23FC5E920(v50);
  v51 = sub_23FC58A94();
  *(_QWORD *)(v51 + 16) = sub_23FC57B24;
  *(_QWORD *)(v51 + 24) = v554;
  v52 = sub_23FC58A94();
  *(_QWORD *)(v52 + 16) = sub_23FC57B44;
  *(_QWORD *)(v52 + 24) = v51;
  sub_23FBFD684(&qword_256F5E480);
  v53 = sub_23FC58AA0();
  sub_23FC5A828(v53);
  *(_QWORD *)(v54 + 32) = sub_23FC586E0;
  MEMORY[0x48] = *(_QWORD *)(v3 - 160);
  MEMORY[0x50] = sub_23FC586E0;
  v55 = v551;
  MEMORY[0x58] = v551;
  MEMORY[0x60] = sub_23FC586D4;
  MEMORY[0x68] = v44;
  MEMORY[0x70] = sub_23FC586E0;
  MEMORY[0x78] = v14;
  MEMORY[0x80] = sub_23FC586E0;
  MEMORY[0x88] = v46;
  MEMORY[0x90] = sub_23FC586D4;
  MEMORY[0x98] = v48;
  MEMORY[0xA0] = sub_23FC586E0;
  MEMORY[0xA8] = v30;
  MEMORY[0xB0] = sub_23FC586E0;
  MEMORY[0xB8] = v39;
  MEMORY[0xC0] = sub_23FC57B4C;
  sub_23FC5CE40();
  sub_23FC58D78();
  v56 = (_QWORD *)v44;
  sub_23FC58D58();
  v549 = v14;
  sub_23FC58F98();
  sub_23FC58D70();
  sub_23FC58D68();
  sub_23FC58CA8();
  sub_23FC58D90();
  sub_23FC58C88();
  sub_23FC58D60();
  v57 = sub_23FC5DCD0();
  if (sub_23FC5BDA4(v57, v58))
  {
    v59 = (uint8_t *)sub_23FC5A2EC();
    v60 = sub_23FBFEFF4();
    v61 = *(_QWORD *)(v3 - 136);
    *(_QWORD *)(v61 + 2048) = 0;
    *(_QWORD *)(v61 + 2056) = v60;
    sub_23FC5CE28();
    v62[255] = v59;
    v62[111] = sub_23FC586E0;
    v62[112] = *(_QWORD *)(v3 - 160);
    sub_23FC5AB14(v525, v524, v523, v522);
    if (!v44)
    {
      *(_QWORD *)(v3 - 144) = v60;
      sub_23FC58ADC();
      v63 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5EE8C((uint64_t)sub_23FC586E0);
      sub_23FC58D88(v63, v524, v523);
      sub_23FC58AC8();
      *(_QWORD *)(v60 + 888) = sub_23FC586D4;
      *(_QWORD *)(v60 + 896) = 0;
      sub_23FC58D88(v525, v524, v523);
      sub_23FC58AC8();
      *(_QWORD *)(v60 + 888) = sub_23FC586E0;
      *(_QWORD *)(v60 + 896) = v549;
      sub_23FC58D88(v525, v524, v523);
      sub_23FC58C6C();
      *(_QWORD *)(v60 + 888) = sub_23FC586E0;
      *(_QWORD *)(v60 + 896) = v46;
      sub_23FC58D88(v525, v524, v523);
      sub_23FC58C64();
      *(_QWORD *)(v60 + 888) = sub_23FC586D4;
      *(_QWORD *)(v60 + 896) = v48;
      sub_23FC58D88(v525, v524, v523);
      sub_23FC58CA0();
      *(_QWORD *)(v60 + 888) = sub_23FC586E0;
      *(_QWORD *)(v60 + 896) = v30;
      sub_23FC58D88(v525, v524, v523);
      sub_23FC58CA0();
      *(_QWORD *)(v60 + 888) = sub_23FC586E0;
      *(_QWORD *)(v60 + 896) = v39;
      sub_23FC58D88(v525, v524, v523);
      sub_23FC58CA0();
      *(_QWORD *)(v60 + 888) = sub_23FC57B4C;
      *(_QWORD *)(v60 + 896) = v52;
      sub_23FC58D88(v525, v524, v523);
      sub_23FC5DCEC();
      sub_23FC58C6C();
      sub_23FC5DCE0();
      sub_23FC10464(&dword_23FBF8000, v564, v64, "[SessionCoordinator %s] | [TX %s] Client transaction turned in with %ld events.", v59);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    goto LABEL_143;
  }
  v106 = *(_QWORD *)(v3 - 136);
  v107 = *(_QWORD **)(v106 + 3480);
  v108 = *(_QWORD *)(v106 + 3272);
  sub_23FC5B04C();
  sub_23FC58AC8();
  sub_23FC58FA0();
  sub_23FC5D4B0();
  sub_23FC5D4A8();
  sub_23FC58C6C();
  sub_23FC58AE4();
  sub_23FC58F00();
  sub_23FC58AC0();

  sub_23FC5B13C(*(uint64_t (**)(void))(v108 + 8));
  v109 = (_QWORD *)v106;
  sub_23FC5BF2C();
  if (v142)
  {
    sub_23FC5B990();
    sub_23FC5CA2C();
    sub_23FC5B4E0();
    sub_23FC5C9EC();
    sub_23FBFD684(&qword_256F5E378);
    sub_23FC5B544();
    sub_23FBFF204(32, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
  }
  v110 = *(_QWORD *)(v3 - 200);
  v56 = *(_QWORD **)(v3 - 144);
  v111 = sub_23FC18520(v110);
  v113 = v112;
  sub_23FC5AC34();
  v114 = sub_23FC5F3E0((uint64_t)sub_23FCB3DFC);
  v116 = sub_23FC5CB00(v114, v115);
  sub_23FC1002C();
  sub_23FC58CA0();
  v566 = v111;
  if (v116 >= 2)
  {
    v555 = (char)v113;
    *(_QWORD *)(v3 - 144) = v56;
    v117 = v109[276];
    sub_23FC58FB0();
    v118 = sub_23FC58A94();
    *(_QWORD *)(v118 + 16) = sub_23FC576A8;
    *(_QWORD *)(v118 + 24) = v117;
    v119 = sub_23FC58AA0();
    sub_23FC5C844(v119);
    v120 = sub_23FC58A94();
    *(_QWORD *)(v120 + 16) = sub_23FC57844;
    *(_QWORD *)(v120 + 24) = v119;
    sub_23FC58D90();
    sub_23FD72BE4();
    v560 = sub_23FC5B3A8();
    v121 = sub_23FC58AA0();
    sub_23FC59D6C(v121);
    v122 = sub_23FC58AA0();
    sub_23FC5C5CC(v122);
    v123 = sub_23FC58A94();
    *(_QWORD *)(v123 + 16) = sub_23FC586BC;
    *(_QWORD *)(v123 + 24) = v118;
    v107 = (_QWORD *)sub_23FC58A94();
    v107[2] = sub_23FC586C0;
    v107[3] = v123;
    v124 = sub_23FC58AA0();
    sub_23FC5E7AC(v124);
    v125 = sub_23FC58AA0();
    *(_BYTE *)(v125 + 16) = v111;
    v126 = v113;
    v127 = sub_23FC58A94();
    *(_QWORD *)(v127 + 16) = sub_23FC586CC;
    *(_QWORD *)(v127 + 24) = v120;
    v128 = sub_23FC58A94();
    *(_QWORD *)(v128 + 16) = sub_23FC586C0;
    *(_QWORD *)(v128 + 24) = v127;
    v129 = sub_23FC58AA0();
    sub_23FC5928C(v129);
    v130[4] = sub_23FC586E0;
    v130[5] = v121;
    v130[6] = sub_23FC586E0;
    v130[7] = v122;
    v130[8] = sub_23FC586D4;
    v130[9] = v107;
    v130[10] = sub_23FC586E0;
    v130[11] = v56;
    v130[12] = sub_23FC586E0;
    v130[13] = v125;
    v130[14] = sub_23FC586D4;
    v130[15] = v128;
    v131 = v121;
    sub_23FC58D90();
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D80();
    sub_23FC58CA8();
    sub_23FC58D58();
    v132 = sub_23FC58D60();
    v55 = (uint64_t)v126;
    if (sub_23FC5C680(v132, v560))
    {
      v133 = v122;
      sub_23FC58F88();
      v134 = sub_23FBFEFF4();
      v135 = *(_QWORD *)(v3 - 136);
      sub_23FC5B770(v134);
      *(_QWORD *)(v135 + 904) = sub_23FC586E0;
      *(_QWORD *)(v135 + 912) = v131;
      sub_23FC5AB14(v502, v501, v500, v499);
      if (!v56)
      {
        sub_23FC58AC0();
        *(_QWORD *)(v135 + 904) = sub_23FC586E0;
        *(_QWORD *)(v135 + 912) = v133;
        sub_23FC58D88(v502, v501, v500);
        sub_23FC101F4();
        v136 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5F3B8((uint64_t)sub_23FC586D4);
        sub_23FC58D88(v136, v137, v500);
        sub_23FC58C64();
        *(_QWORD *)(v135 + 904) = sub_23FC586E0;
        *(_QWORD *)(v135 + 912) = 0;
        sub_23FC58D88(v502, v501, v500);
        sub_23FC101F4();
        *(_QWORD *)(v135 + 904) = sub_23FC586E0;
        *(_QWORD *)(v135 + 912) = v125;
        sub_23FC58D88(v502, v501, v500);
        sub_23FC101F4();
        v138 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5F3CC((uint64_t)sub_23FC586D4);
        sub_23FC58D88(v138, v139, v500);
        sub_23FC58ADC();
        sub_23FC5DCE0();
        sub_23FC59250(&dword_23FBF8000, v126, v140, "[SessionCoordinator %s] | [TX %s] A client transaction contains more than one query. Only the last one will be used as the current query.", v533);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_143;
    }
    v116 = *(_QWORD *)(v3 - 136);
    sub_23FC58C6C();
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58FA0();
    sub_23FC58AE4();
    sub_23FC58ADC();

    sub_23FC5A808();
    v109 = (_QWORD *)v116;
    v144 = *(_QWORD *)(v3 - 176);
    v110 = *(_QWORD *)(v3 - 200);
    v111 = v566;
    v56 = *(_QWORD **)(v3 - 144);
    if ((v555 & 1) != 0)
      goto LABEL_47;
LABEL_34:
    *(_QWORD *)(v3 - 144) = v56;
    if (v111)
    {
      v145 = v109[276];
      sub_23FC58FB0();
      v146 = sub_23FC58A94();
      *(_QWORD *)(v146 + 16) = sub_23FC576A8;
      *(_QWORD *)(v146 + 24) = v145;
      v147 = (_QWORD *)sub_23FC58AA0();
      sub_23FC5C844((uint64_t)v147);
      v148 = sub_23FC58A94();
      *(_QWORD *)(v148 + 16) = sub_23FC57844;
      *(_QWORD *)(v148 + 24) = v147;
      v149 = sub_23FC58AA0();
      sub_23FC5DB98(v149);
      sub_23FC58CA8();
      v150 = sub_23FD72BE4();
      v561 = sub_23FC5BBC0(v150);
      v556 = sub_23FC58AA0();
      sub_23FC5C0C0(v556);
      v552 = sub_23FC58AA0();
      *(_BYTE *)(v552 + 16) = 8;
      v151 = sub_23FC58A94();
      *(_QWORD *)(v151 + 16) = sub_23FC586BC;
      *(_QWORD *)(v151 + 24) = v146;
      v152 = (_QWORD *)sub_23FC58A94();
      v152[2] = sub_23FC586C0;
      v152[3] = v151;
      v153 = sub_23FC58AA0();
      *(_BYTE *)(v153 + 16) = (_BYTE)v56;
      v154 = sub_23FC58AA0();
      sub_23FC5B71C(v154);
      v155 = sub_23FC58A94();
      *(_QWORD *)(v155 + 16) = sub_23FC586CC;
      *(_QWORD *)(v155 + 24) = v148;
      v55 = sub_23FC58A94();
      *(_QWORD *)(v55 + 16) = sub_23FC586C0;
      *(_QWORD *)(v55 + 24) = v155;
      v144 = sub_23FC58AA0();
      *(_BYTE *)(v144 + 16) = 0;
      v156 = sub_23FC58AA0();
      *(_BYTE *)(v156 + 16) = 8;
      v157 = sub_23FC58A94();
      *(_QWORD *)(v157 + 16) = sub_23FC57D10;
      *(_QWORD *)(v157 + 24) = v147;
      v56 = (_QWORD *)sub_23FC58A94();
      v56[2] = sub_23FC58A90;
      v56[3] = v157;
      v158 = sub_23FC58AA0();
      sub_23FC5A828(v158);
      *(_QWORD *)(v159 + 32) = sub_23FC586E0;
      v147[5] = v556;
      v147[6] = sub_23FC586E0;
      v147[7] = v552;
      v147[8] = sub_23FC586D4;
      v147[9] = v152;
      v147[10] = sub_23FC586E0;
      v147[11] = v153;
      v147[12] = sub_23FC586E0;
      v147[13] = v151;
      v147[14] = sub_23FC586D4;
      v147[15] = v55;
      v147[16] = sub_23FC586E0;
      v147[17] = v144;
      v147[18] = sub_23FC586E0;
      v147[19] = v156;
      v147[20] = sub_23FC586DC;
      v147[21] = v56;
      v116 = v556;
      swift_retain();
      sub_23FC58D58();
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58CA8();
      sub_23FC58D78();
      sub_23FC58C88();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58D60();
      if (sub_23FC5B890(v561))
      {
        v534 = v55;
        v160 = (uint8_t *)sub_23FC5A2EC();
        v161 = sub_23FBFEFF4();
        sub_23FC5EEA0(v161);
        *(_WORD *)v160 = 770;
        v152[247] = v160 + 2;
        v152[117] = sub_23FC586E0;
        v152[118] = v556;
        sub_23FC5AB14(v494, v493, v492, v491);
        if (!v56)
        {
          sub_23FC58AC8();
          v152[117] = sub_23FC586E0;
          v162 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5E228();
          sub_23FC58C90(v162, v163, v492);
          sub_23FC58AC8();
          v152[117] = sub_23FC586D4;
          v152[118] = v152;
          sub_23FC58C90(v494, v493, v492);
          sub_23FC58CA0();
          v152[117] = sub_23FC586E0;
          v152[118] = v153;
          sub_23FC58C90(v494, v493, v492);
          sub_23FC58CA0();
          v152[117] = sub_23FC586E0;
          v152[118] = v151;
          sub_23FC58C90(v494, v493, v492);
          sub_23FC58CA0();
          v152[117] = sub_23FC586D4;
          v152[118] = v534;
          sub_23FC58C90(v494, v493, v492);
          sub_23FC58CA0();
          v152[117] = sub_23FC586E0;
          v152[118] = v144;
          sub_23FC58C90(v494, v493, v492);
          sub_23FC58CA0();
          v152[117] = sub_23FC586E0;
          v152[118] = v156;
          sub_23FC58C90(v494, v493, v492);
          sub_23FC58CA0();
          v152[117] = sub_23FC586DC;
          v152[118] = 0;
          sub_23FC58C90(v494, v493, v492);
          sub_23FC5D274();
          sub_23FC58AE4();
          sub_23FC5DCE0();
          sub_23FC10464(&dword_23FBF8000, *(NSObject **)(v3 - 160), v164, "[SessionCoordinator %s] | [TX %s] A client transaction contains a query at index %ld. Queries should be the first event in their transaction. This may cause incorrect behavior.", v160);
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        goto LABEL_143;
      }
      v107 = *(_QWORD **)(*(_QWORD *)(v3 - 136) + 3272);
      sub_23FC101F4();
      sub_23FC58CA0();
      sub_23FC5D4B0();
      swift_release();
      sub_23FC5D0C4();
      sub_23FC58AC8();
      sub_23FC58AC0();
      sub_23FC58AE4();
      sub_23FC58FA0();
      sub_23FC5D030();
      sub_23FC5C5C0();
      sub_23FC5B13C(v237);
    }
    sub_23FC5BE3C();
    sub_23FC5EFFC();
    sub_23FC5D098();
    v238 = sub_23FC5C6DC();
    (*(void (**)(uint64_t))(v3 - 224))(v238);
    sub_23FC5DDE8();
    (*(void (**)(uint64_t, _QWORD *))(v3 - 216))(v55, v107);
    sub_23FC5E764(v116);
    sub_23FC092BC((uint64_t)v56, v116, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 16));
    sub_23FC5806C(v116, type metadata accessor for EventPayloadWithPreassignedID);
    sub_23FC5CAE0();
  }
  v144 = *(_QWORD *)(v3 - 176);
  if ((v113 & 1) == 0)
    goto LABEL_34;
LABEL_47:
  v227 = v109[401];
  v228 = v109[276];
  sub_23FC58D90();
  v229 = v545;
  sub_23FC5B578();
  v230 = sub_23FC18010(v110, v228, v543, v545, v144);
  *(_QWORD *)(v3 - 144) = v56;
  sub_23FC5A648();
  sub_23FC5A2A8();
  **(_QWORD **)(v3 - 208) = v230;
  sub_23FC59120();
  v56 = &unk_256F61700;
  sub_23FC5E694(v144, v227);
  v231 = sub_23FC5B7A0();
  if (v142)
  {
    sub_23FC5CA04(v231, v232);
    sub_23FC5DA20();
  }
  else
  {
    v233 = v109[379];
    v110 = v109[373];
    v56 = (_QWORD *)v109[372];
    sub_23FC06160(v233, v232, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 32));
    sub_23FC5E1D8();
    sub_23FC5AF38();
    v229 = v234;
    sub_23FC595C4(v233, *(uint64_t (**)(uint64_t, uint64_t))(v110 + 8));
  }
  sub_23FC5D83C();
  v226 = 1;
LABEL_55:
  sub_23FC5B314(v532);
  if (!v226)
  {
    sub_23FC5EFDC();
    sub_23FC59120();
    v239 = sub_23FC5AFCC();
    v56 = *(_QWORD **)(v3 - 144);
    v240 = sub_23FC18778(v239);
    sub_23FC1002C();
    if ((v240 & 1) != 0)
    {
      *(_QWORD *)(v3 - 168) = v56;
      v241 = v109[276];
      sub_23FC58FB0();
      v242 = sub_23FC58A94();
      *(_QWORD *)(v242 + 16) = sub_23FC576A8;
      *(_QWORD *)(v242 + 24) = v241;
      v243 = sub_23FC58AA0();
      sub_23FC5F084(v243);
      v244 = sub_23FC58A94();
      *(_QWORD *)(v244 + 16) = sub_23FC57844;
      *(_QWORD *)(v244 + 24) = v110;
      sub_23FC58C88();
      v245 = sub_23FD72BE4();
      *(_DWORD *)(v3 - 144) = sub_23FD74F3C();
      v246 = sub_23FC58AA0();
      sub_23FC59D6C(v246);
      v109 = (_QWORD *)sub_23FC58AA0();
      sub_23FC59438((uint64_t)v109);
      v247 = sub_23FC58A94();
      *(_QWORD *)(v247 + 16) = sub_23FC586BC;
      *(_QWORD *)(v247 + 24) = v242;
      v248 = sub_23FC58A94();
      *(_QWORD *)(v248 + 16) = sub_23FC586C0;
      *(_QWORD *)(v248 + 24) = v247;
      v249 = sub_23FC58AA0();
      sub_23FC5C6A8(v249);
      v56 = (_QWORD *)sub_23FC58AA0();
      sub_23FC59438((uint64_t)v56);
      v144 = v245;
      v250 = sub_23FC58A94();
      *(_QWORD *)(v250 + 16) = sub_23FC586CC;
      *(_QWORD *)(v250 + 24) = v244;
      v107 = (_QWORD *)sub_23FC58A94();
      v107[2] = sub_23FC586C0;
      v107[3] = v250;
      sub_23FBFD684(&qword_256F5E480);
      v251 = sub_23FC58AA0();
      sub_23FC5928C(v251);
      v252[4] = sub_23FC586E0;
      v252[5] = v246;
      v252[6] = sub_23FC586E0;
      v252[7] = v109;
      v252[8] = sub_23FC586D4;
      v252[9] = v248;
      v252[10] = sub_23FC586E0;
      v252[11] = v229;
      v252[12] = sub_23FC586E0;
      v252[13] = v56;
      v252[14] = sub_23FC586D4;
      v252[15] = v107;
      sub_23FC58CA8();
      sub_23FC58F98();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58D70();
      sub_23FC58D60();
      if (sub_23FC5BF54((os_log_type_t)*(_DWORD *)(v3 - 144)))
      {
        *(_QWORD *)(v3 - 184) = v56;
        *(_QWORD *)(v3 - 176) = v229;
        *(_QWORD *)(v3 - 192) = v144;
        v253 = sub_23FC58F88();
        v254 = sub_23FBFEFF4();
        v255 = *(_QWORD **)(v3 - 136);
        v255[233] = 0;
        *(_QWORD *)(v3 - 208) = v254;
        *(_QWORD *)(v3 - 200) = v253;
        v255[234] = v254;
        sub_23FC5DF3C();
        v255[232] = v253;
        v255[127] = sub_23FC586E0;
        v255[128] = v246;
        sub_23FC5ED7C(v521, v520, v519);
        if (!v56)
        {
          sub_23FC58AE4();
          v255[127] = sub_23FC586E0;
          v255[128] = v109;
          sub_23FC58C5C(v521, v520, v519);
          sub_23FC58AE4();
          v255[127] = sub_23FC586D4;
          v255[128] = v248;
          sub_23FC58C5C(v521, v520, v519);
          sub_23FC58ADC();
          v255[127] = sub_23FC586E0;
          v255[128] = *(_QWORD *)(v3 - 176);
          sub_23FC58C5C(v521, v520, v519);
          sub_23FC58AE4();
          v255[127] = sub_23FC586E0;
          v255[128] = *(_QWORD *)(v3 - 184);
          sub_23FC58C5C(v521, v520, v519);
          sub_23FC58AE4();
          v255[127] = sub_23FC586D4;
          v255[128] = v107;
          sub_23FC58C5C(v521, v520, v519);
          sub_23FC58C64();
          sub_23FC59250(&dword_23FBF8000, *(NSObject **)(v3 - 192), (os_log_type_t)*(_DWORD *)(v3 - 144), "[SessionCoordinator %s] | [TX %s] Transaction is advisory.", *(uint8_t **)(v3 - 200));
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        goto LABEL_143;
      }
      v110 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 3264);
      sub_23FC101F4();
      sub_23FC58F00();
      sub_23FC58ADC();
      sub_23FC58C6C();
      sub_23FC58FA0();
      sub_23FC58C64();

      sub_23FC5A808();
      sub_23FC5E068();
    }
    else
    {
      *(_DWORD *)(v3 - 208) = v532[1];
      *(_DWORD *)(v3 - 200) = *v532;
    }
    v256 = *(_QWORD **)(v109[504] + 16);
    v257 = sub_23FC5AFCC();
    v258 = sub_23FC17D20(v257);
    sub_23FC1002C();
    *(_QWORD *)(v3 - 144) = v56;
    if ((v258 & 1) != 0)
    {
      v256 = (_QWORD *)v109[430];
      v259 = v109[276];
      sub_23FC58FB0();
      v260 = sub_23FC58A94();
      *(_QWORD *)(v260 + 16) = sub_23FC576A8;
      *(_QWORD *)(v260 + 24) = v259;
      v261 = sub_23FC58AA0();
      sub_23FC5A560(v261);
      v262 = sub_23FC58A94();
      *(_QWORD *)(v262 + 16) = sub_23FC57844;
      *(_QWORD *)(v262 + 24) = v144;
      sub_23FC58D80();
      *(_QWORD *)(v3 - 168) = sub_23FD72BE4();
      *(_DWORD *)(v3 - 176) = sub_23FD74F3C();
      v110 = (uint64_t)v109;
      v263 = sub_23FC58AA0();
      sub_23FC59D6C(v263);
      v264 = sub_23FC58AA0();
      sub_23FC5B1B4(v264);
      v56 = (_QWORD *)sub_23FC58A94();
      v56[2] = sub_23FC586BC;
      v56[3] = v260;
      v265 = sub_23FC58A94();
      *(_QWORD *)(v265 + 16) = sub_23FC586C0;
      *(_QWORD *)(v265 + 24) = v56;
      v266 = sub_23FC58AA0();
      sub_23FC5C6A8(v266);
      v267 = sub_23FC58AA0();
      sub_23FC5E784(v267);
      v268 = sub_23FC58A94();
      *(_QWORD *)(v268 + 16) = sub_23FC586CC;
      *(_QWORD *)(v268 + 24) = v262;
      v144 = sub_23FC58A94();
      *(_QWORD *)(v144 + 16) = sub_23FC586C0;
      *(_QWORD *)(v144 + 24) = v268;
      sub_23FBFD684(&qword_256F5E480);
      v269 = sub_23FC58AA0();
      sub_23FC5928C(v269);
      v270[4] = sub_23FC586E0;
      v270[5] = v263;
      v270[6] = sub_23FC586E0;
      v270[7] = v107;
      v270[8] = sub_23FC586D4;
      v270[9] = v265;
      v270[10] = sub_23FC586E0;
      v270[11] = v229;
      v270[12] = sub_23FC586E0;
      v270[13] = v56;
      v270[14] = sub_23FC586D4;
      v270[15] = v144;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC5A8C0(*(os_log_t *)(v3 - 168), (os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v56;
        *(_QWORD *)(v3 - 184) = v229;
        v271 = (_WORD *)sub_23FC58F88();
        v272 = sub_23FBFEFF4();
        *(_QWORD *)(v110 + 1832) = 0;
        *(_QWORD *)(v3 - 208) = v272;
        *(_QWORD *)(v3 - 200) = v271;
        *(_QWORD *)(v110 + 1840) = v272;
        *v271 = 514;
        *(_QWORD *)(v110 + 1824) = v271 + 1;
        *(_QWORD *)(v110 + 1048) = sub_23FC586E0;
        *(_QWORD *)(v110 + 1056) = v263;
        sub_23FC5AB14(v518, v517, v516, v515);
        if (!v56)
        {
          sub_23FC58F00();
          *(_QWORD *)(v110 + 1048) = sub_23FC586E0;
          *(_QWORD *)(v110 + 1056) = v107;
          sub_23FC58C5C(v518, v517, v516);
          sub_23FC58C64();
          *(_QWORD *)(v110 + 1048) = sub_23FC586D4;
          *(_QWORD *)(v110 + 1056) = v265;
          sub_23FC58C5C(v518, v517, v516);
          sub_23FC58ADC();
          *(_QWORD *)(v110 + 1048) = sub_23FC586E0;
          *(_QWORD *)(v110 + 1056) = *(_QWORD *)(v3 - 184);
          sub_23FC58C5C(v518, v517, v516);
          sub_23FC58AE4();
          *(_QWORD *)(v110 + 1048) = sub_23FC586E0;
          *(_QWORD *)(v110 + 1056) = *(_QWORD *)(v3 - 192);
          sub_23FC58C5C(v518, v517, v516);
          sub_23FC58AE4();
          *(_QWORD *)(v110 + 1048) = sub_23FC586D4;
          *(_QWORD *)(v110 + 1056) = v144;
          sub_23FC58C5C(v518, v517, v516);
          sub_23FC58AC0();
          sub_23FC5AFA0();
          sub_23FC5B6D0();
          sub_23FC59250(v273, v274, v275, "[SessionCoordinator %s] | [TX %s] Transaction is work-allowing advisory.", *(uint8_t **)(v3 - 200));
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        goto LABEL_143;
      }
      sub_23FC58F00();
      sub_23FC58C64();
      sub_23FC58ADC();
      sub_23FC58C6C();
      sub_23FC58FA0();
      sub_23FC58AC0();

      sub_23FC5A808();
      sub_23FC5D414();
      v109 = (_QWORD *)v110;
    }
    sub_23FC59A08();
    sub_23FC5D878();
    sub_23FC5CC7C();
    sub_23FC5CC24();
    sub_23FC5BB44();
    if ((v256 & 1) == 0)
    {
      sub_23FC5B474();
      sub_23FC58FB0();
      v298 = sub_23FC58A94();
      *(_QWORD *)(v298 + 16) = sub_23FC576A8;
      *(_QWORD *)(v298 + 24) = v56;
      v299 = sub_23FC58AA0();
      sub_23FC5A560(v299);
      v300 = sub_23FC58A94();
      *(_QWORD *)(v300 + 16) = sub_23FC57844;
      *(_QWORD *)(v300 + 24) = v144;
      sub_23FC58D80();
      sub_23FD72BE4();
      *(_DWORD *)(v3 - 168) = sub_23FC5E508();
      v301 = sub_23FC58AA0();
      sub_23FC5EE40(v301);
      v302 = sub_23FC58AA0();
      sub_23FC5C5CC(v302);
      v303 = sub_23FC58A94();
      *(_QWORD *)(v303 + 16) = sub_23FC586BC;
      *(_QWORD *)(v303 + 24) = v298;
      v304 = sub_23FC58A94();
      *(_QWORD *)(v304 + 16) = sub_23FC586C0;
      *(_QWORD *)(v304 + 24) = v303;
      v56 = (_QWORD *)sub_23FC58AA0();
      *((_BYTE *)v56 + 16) = (_BYTE)v109;
      v305 = sub_23FC58AA0();
      *(_BYTE *)(v305 + 16) = v229;
      v306 = (void *)v144;
      v307 = sub_23FC58A94();
      *(_QWORD *)(v307 + 16) = sub_23FC586CC;
      *(_QWORD *)(v307 + 24) = v300;
      v308 = sub_23FC58A94();
      *(_QWORD *)(v308 + 16) = sub_23FC586C0;
      *(_QWORD *)(v308 + 24) = v307;
      sub_23FBFD684(&qword_256F5E480);
      v309 = sub_23FC58AA0();
      sub_23FC5928C(v309);
      v310[4] = sub_23FC586E0;
      v310[5] = v110;
      v310[6] = sub_23FC586E0;
      v310[7] = v302;
      v310[8] = sub_23FC586D4;
      v310[9] = v304;
      v310[10] = sub_23FC586E0;
      v310[11] = v56;
      v310[12] = sub_23FC586E0;
      v310[13] = v305;
      v310[14] = sub_23FC586D4;
      v310[15] = v308;
      sub_23FC58CA8();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D80();
      sub_23FC58F98();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC5D704((os_log_type_t)*(_DWORD *)(v3 - 168)))
      {
        *(_QWORD *)(v3 - 184) = v305;
        *(_QWORD *)(v3 - 176) = v56;
        *(_QWORD *)(v3 - 192) = v306;
        sub_23FC58F88();
        v311 = sub_23FBFEFF4();
        sub_23FC5C914(v311);
        sub_23FC5AB14(v513, v512, v511, v510);
        if (!v56)
        {
          sub_23FC58AE4();
          v256[157] = sub_23FC586E0;
          v256[158] = v302;
          sub_23FC58C5C(v513, v512, v511);
          sub_23FC58C64();
          v256[157] = sub_23FC586D4;
          v256[158] = v304;
          sub_23FC58C5C(v513, v512, v511);
          sub_23FC58ADC();
          v256[157] = sub_23FC586E0;
          v256[158] = *(_QWORD *)(v3 - 176);
          sub_23FC58C5C(v513, v512, v511);
          sub_23FC58AE4();
          v256[157] = sub_23FC586E0;
          v256[158] = *(_QWORD *)(v3 - 184);
          sub_23FC58C5C(v513, v512, v511);
          sub_23FC58AE4();
          v256[157] = sub_23FC586D4;
          v256[158] = v308;
          sub_23FC58C5C(v513, v512, v511);
          sub_23FC58AC0();
          sub_23FC5C7B8();
          sub_23FC59250(&dword_23FBF8000, *(NSObject **)(v3 - 192), v312, "[SessionCoordinator %s] | [TX %s] Transaction postcondition FAILED. It will be skipped.", *(uint8_t **)(v3 - 200));
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        goto LABEL_143;
      }
      v335 = v256[428];
      v336 = v256[408];
      sub_23FC58AE4();
      sub_23FC58C64();
      sub_23FC58ADC();
      sub_23FC58FA0();
      sub_23FC58F00();
      sub_23FC58AC0();

      sub_23FC5A808();
      sub_23FC5B230();
      if (v142)
      {
        sub_23FC59474();
        v336 = v337;
        sub_23FC103E8();
        sub_23FC5A2C4();
        sub_23FC5A2D8();
        sub_23FC5B224();
        sub_23FBFD684(&qword_256F5E378);
        v335 = *(_QWORD *)(v3 - 184);
        sub_23FC5B2A8();
        sub_23FC5B8F0();
        sub_23FC5B550();
      }
      else
      {
        sub_23FC103E8();
        sub_23FC58AC8();
      }
      v352 = sub_23FC5AAC8();
      sub_23FC5B280(v352);
      sub_23FC5806C(v336, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
      sub_23FC58CA0();
      sub_23FC58AC8();
      v540 = *(_DWORD *)(v305 + 4280);
      goto LABEL_142;
    }
    v276 = (void *)v109[429];
    v277 = v109[276];
    sub_23FC58FB0();
    v278 = sub_23FC58A94();
    *(_QWORD *)(v278 + 16) = sub_23FC576A8;
    *(_QWORD *)(v278 + 24) = v277;
    v279 = sub_23FC58AA0();
    sub_23FC5A560(v279);
    v280 = sub_23FC58A94();
    *(_QWORD *)(v280 + 16) = sub_23FC57844;
    *(_QWORD *)(v280 + 24) = v144;
    sub_23FC58D80();
    v281 = sub_23FD72BE4();
    *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v281);
    v282 = v109;
    v283 = sub_23FC58AA0();
    sub_23FC59D6C(v283);
    v284 = sub_23FC58AA0();
    sub_23FC59438(v284);
    v285 = sub_23FC58A94();
    *(_QWORD *)(v285 + 16) = sub_23FC586BC;
    *(_QWORD *)(v285 + 24) = v278;
    v286 = sub_23FC58A94();
    *(_QWORD *)(v286 + 16) = sub_23FC586C0;
    *(_QWORD *)(v286 + 24) = v285;
    v287 = sub_23FC58AA0();
    sub_23FC5B71C(v287);
    v288 = sub_23FC58AA0();
    sub_23FC59438(v288);
    v289 = sub_23FC58A94();
    *(_QWORD *)(v289 + 16) = sub_23FC586CC;
    *(_QWORD *)(v289 + 24) = v280;
    v290 = sub_23FC58A94();
    *(_QWORD *)(v290 + 16) = sub_23FC586C0;
    *(_QWORD *)(v290 + 24) = v289;
    *(_QWORD *)(v3 - 216) = sub_23FBFD684(&qword_256F5E480);
    v291 = sub_23FC58AA0();
    sub_23FC5928C(v291);
    v56 = sub_23FC586E0;
    v292[4] = sub_23FC586E0;
    v292[5] = v283;
    v292[6] = sub_23FC586E0;
    v292[7] = v284;
    v292[8] = sub_23FC586D4;
    v292[9] = v286;
    v292[10] = sub_23FC586E0;
    v292[11] = v110;
    v292[12] = sub_23FC586E0;
    v292[13] = v288;
    v292[14] = sub_23FC586D4;
    v292[15] = v290;
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D58();
    sub_23FC58CA8();
    sub_23FC58D68();
    sub_23FC58D90();
    sub_23FC58D60();
    if (sub_23FC5A8C0(*(os_log_t *)(v3 - 168), (os_log_type_t)*(_DWORD *)(v3 - 176)))
    {
      *(_QWORD *)(v3 - 192) = v288;
      *(_QWORD *)(v3 - 184) = v110;
      v293 = sub_23FC58F88();
      v294 = sub_23FBFEFF4();
      v282[225] = 0;
      v282[226] = v294;
      sub_23FC5C400();
      v282[224] = v293;
      v282[133] = sub_23FC586E0;
      v282[134] = v283;
      sub_23FC5AB14(v514, v509, v508, v507);
      if (!sub_23FC586E0)
      {
        sub_23FC58F00();
        v282[133] = sub_23FC586E0;
        v282[134] = v284;
        sub_23FC58AD0(v514, v509);
        sub_23FC58C64();
        v282[133] = sub_23FC586D4;
        v282[134] = v286;
        sub_23FC58AD0(v514, v509);
        sub_23FC58ADC();
        v282[133] = sub_23FC586E0;
        v282[134] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v514, v509);
        sub_23FC58AC0();
        v282[133] = sub_23FC586E0;
        v282[134] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v514, v509);
        sub_23FC58AC0();
        v282[133] = sub_23FC586D4;
        v282[134] = v290;
        sub_23FC58AD0(v514, v509);
        sub_23FC101F4();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        sub_23FC59250(v295, v296, v297, "[SessionCoordinator %s] | [TX %s] Transaction postcondition passed.", *(uint8_t **)(v3 - 224));
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_143;
    }
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58ADC();
    sub_23FC58AE4();
    sub_23FC58C6C();
    sub_23FC101F4();

    sub_23FC5A808();
    v313 = (_QWORD *)v282[276];
    v314 = *(_DWORD *)(v3 - 208);
    *(_QWORD *)(v3 - 144) = *(_QWORD *)(v3 - 144);
    if (v314)
    {
      if ((*(_DWORD *)(v3 - 200) & 1) != 0)
      {
        sub_23FC59F80();
        v315 = sub_23FC58A94();
        *(_QWORD *)(v315 + 16) = sub_23FC576A8;
        *(_QWORD *)(v315 + 24) = v313;
        v316 = sub_23FC58AA0();
        sub_23FC5A560(v316);
        v317 = sub_23FC58A94();
        *(_QWORD *)(v317 + 16) = sub_23FC57844;
        *(_QWORD *)(v317 + 24) = v282;
        sub_23FC58D78();
        v318 = sub_23FC5A14C();
        *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v318);
        v319 = sub_23FC58AA0();
        sub_23FC59D6C(v319);
        v320 = sub_23FC58AA0();
        sub_23FC59438(v320);
        v321 = sub_23FC58A94();
        *(_QWORD *)(v321 + 16) = sub_23FC586BC;
        *(_QWORD *)(v321 + 24) = v315;
        v322 = (_QWORD *)sub_23FC58A94();
        v322[2] = sub_23FC586C0;
        v322[3] = v321;
        v323 = sub_23FC58AA0();
        sub_23FC5B71C(v323);
        v324 = sub_23FC58AA0();
        sub_23FC59438(v324);
        v325 = sub_23FC58A94();
        *(_QWORD *)(v325 + 16) = sub_23FC586CC;
        *(_QWORD *)(v325 + 24) = v317;
        v326 = sub_23FC58A94();
        *(_QWORD *)(v326 + 16) = sub_23FC586C0;
        *(_QWORD *)(v326 + 24) = v325;
        v327 = sub_23FC58AA0();
        sub_23FC5928C(v327);
        v56 = sub_23FC586E0;
        v328[4] = sub_23FC586E0;
        v328[5] = v319;
        v328[6] = sub_23FC586E0;
        v328[7] = v320;
        v328[8] = sub_23FC586D4;
        v328[9] = v322;
        v328[10] = sub_23FC586E0;
        v328[11] = v110;
        v328[12] = sub_23FC586E0;
        v328[13] = v324;
        v328[14] = sub_23FC586D4;
        v328[15] = v326;
        sub_23FC58F98();
        sub_23FC58D70();
        sub_23FC58D58();
        sub_23FC58CA8();
        sub_23FC58D68();
        sub_23FC58D90();
        sub_23FC58D60();
        if (sub_23FC5A8C0(*(os_log_t *)(v3 - 168), (os_log_type_t)*(_DWORD *)(v3 - 176)))
        {
          *(_QWORD *)(v3 - 192) = v324;
          *(_QWORD *)(v3 - 184) = v110;
          v329 = sub_23FC58F88();
          v330 = sub_23FBFEFF4();
          v282[221] = 0;
          v282[222] = v330;
          sub_23FC5C400();
          v282[220] = v329;
          v282[135] = sub_23FC586E0;
          v282[136] = v319;
          sub_23FC5AB14(v486, v473, v472, v471);
          if (!sub_23FC586E0)
          {
            sub_23FC58F00();
            v282[135] = sub_23FC586E0;
            v282[136] = v320;
            sub_23FC58AD0(v486, v473);
            sub_23FC58C64();
            v282[135] = sub_23FC586D4;
            v282[136] = v322;
            sub_23FC58AD0(v486, v473);
            sub_23FC58ADC();
            v282[135] = sub_23FC586E0;
            v282[136] = *(_QWORD *)(v3 - 184);
            sub_23FC58AD0(v486, v473);
            sub_23FC58AC0();
            v282[135] = sub_23FC586E0;
            v282[136] = *(_QWORD *)(v3 - 192);
            sub_23FC58AD0(v486, v473);
            sub_23FC58AC0();
            v282[135] = sub_23FC586D4;
            v282[136] = v326;
            sub_23FC58AD0(v486, v473);
            sub_23FC101F4();
            sub_23FC5AFA0();
            sub_23FC5B6D0();
            v334 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work and be sent to client.";
            goto LABEL_94;
          }
LABEL_143:
          sub_23FC5A434(v56);
          return;
        }
        v335 = v282[427];
        goto LABEL_99;
      }
      sub_23FC59F80();
      v353 = sub_23FC58A94();
      *(_QWORD *)(v353 + 16) = sub_23FC576A8;
      *(_QWORD *)(v353 + 24) = v313;
      v354 = sub_23FC58AA0();
      sub_23FC5A560(v354);
      v355 = sub_23FC58A94();
      *(_QWORD *)(v355 + 16) = sub_23FC57844;
      *(_QWORD *)(v355 + 24) = v282;
      sub_23FC58D78();
      v356 = sub_23FC5A14C();
      *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v356);
      v357 = sub_23FC58AA0();
      sub_23FC59D6C(v357);
      v320 = sub_23FC58AA0();
      sub_23FC59438(v320);
      v358 = sub_23FC58A94();
      *(_QWORD *)(v358 + 16) = sub_23FC586BC;
      *(_QWORD *)(v358 + 24) = v353;
      v322 = (_QWORD *)sub_23FC58A94();
      v322[2] = sub_23FC586C0;
      v322[3] = v358;
      v359 = sub_23FC58AA0();
      sub_23FC5B71C(v359);
      v360 = sub_23FC58AA0();
      sub_23FC59438(v360);
      v361 = sub_23FC58A94();
      *(_QWORD *)(v361 + 16) = sub_23FC586CC;
      *(_QWORD *)(v361 + 24) = v355;
      v362 = sub_23FC58A94();
      *(_QWORD *)(v362 + 16) = sub_23FC586C0;
      *(_QWORD *)(v362 + 24) = v361;
      v363 = sub_23FC58AA0();
      sub_23FC5928C(v363);
      v56 = sub_23FC586E0;
      v364[4] = sub_23FC586E0;
      v364[5] = v357;
      v364[6] = sub_23FC586E0;
      v364[7] = v320;
      v364[8] = sub_23FC586D4;
      v364[9] = v322;
      v364[10] = sub_23FC586E0;
      v364[11] = v110;
      v364[12] = sub_23FC586E0;
      v364[13] = v360;
      v364[14] = sub_23FC586D4;
      v364[15] = v362;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58CA8();
      sub_23FC58D68();
      sub_23FC58D90();
      sub_23FC58D60();
      if (sub_23FC5A8C0(*(os_log_t *)(v3 - 168), (os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v360;
        *(_QWORD *)(v3 - 184) = v110;
        v365 = sub_23FC58F88();
        v366 = sub_23FBFEFF4();
        v282[217] = 0;
        v282[218] = v366;
        sub_23FC5C400();
        v282[216] = v365;
        v282[139] = sub_23FC586E0;
        v282[140] = v357;
        sub_23FC5AB14(v485, v476, v475, v474);
        if (sub_23FC586E0)
          goto LABEL_143;
        sub_23FC58F00();
        v282[139] = sub_23FC586E0;
        v282[140] = v320;
        sub_23FC58AD0(v485, v476);
        sub_23FC58C64();
        v282[139] = sub_23FC586D4;
        v282[140] = v322;
        sub_23FC58AD0(v485, v476);
        sub_23FC58ADC();
        v282[139] = sub_23FC586E0;
        v282[140] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v485, v476);
        sub_23FC58AC0();
        v282[139] = sub_23FC586E0;
        v282[140] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v485, v476);
        sub_23FC58AC0();
        v282[139] = sub_23FC586D4;
        v282[140] = v362;
        sub_23FC58AD0(v485, v476);
        sub_23FC101F4();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        v334 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work, but will not be sent to client.";
        goto LABEL_94;
      }
      v335 = v282[426];
    }
    else if ((*(_DWORD *)(v3 - 200) & 1) != 0)
    {
      sub_23FC59F80();
      v338 = sub_23FC58A94();
      *(_QWORD *)(v338 + 16) = sub_23FC576A8;
      *(_QWORD *)(v338 + 24) = v313;
      v339 = sub_23FC58AA0();
      sub_23FC5A560(v339);
      v340 = sub_23FC58A94();
      *(_QWORD *)(v340 + 16) = sub_23FC57844;
      *(_QWORD *)(v340 + 24) = v282;
      sub_23FC58D78();
      v341 = sub_23FC5A14C();
      *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v341);
      v342 = sub_23FC58AA0();
      sub_23FC59D6C(v342);
      v320 = sub_23FC58AA0();
      sub_23FC59438(v320);
      v343 = sub_23FC58A94();
      *(_QWORD *)(v343 + 16) = sub_23FC586BC;
      *(_QWORD *)(v343 + 24) = v338;
      v322 = (_QWORD *)sub_23FC58A94();
      v322[2] = sub_23FC586C0;
      v322[3] = v343;
      v344 = sub_23FC58AA0();
      sub_23FC5B71C(v344);
      v345 = sub_23FC58AA0();
      sub_23FC59438(v345);
      v346 = sub_23FC58A94();
      *(_QWORD *)(v346 + 16) = sub_23FC586CC;
      *(_QWORD *)(v346 + 24) = v340;
      v347 = sub_23FC58A94();
      *(_QWORD *)(v347 + 16) = sub_23FC586C0;
      *(_QWORD *)(v347 + 24) = v346;
      v348 = sub_23FC58AA0();
      sub_23FC5928C(v348);
      v56 = sub_23FC586E0;
      v349[4] = sub_23FC586E0;
      v349[5] = v342;
      v349[6] = sub_23FC586E0;
      v349[7] = v320;
      v349[8] = sub_23FC586D4;
      v349[9] = v322;
      v349[10] = sub_23FC586E0;
      v349[11] = v110;
      v349[12] = sub_23FC586E0;
      v349[13] = v345;
      v349[14] = sub_23FC586D4;
      v349[15] = v347;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58CA8();
      sub_23FC58D68();
      sub_23FC58D90();
      sub_23FC58D60();
      if (sub_23FC5A8C0(*(os_log_t *)(v3 - 168), (os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v345;
        *(_QWORD *)(v3 - 184) = v110;
        v350 = sub_23FC58F88();
        v351 = sub_23FBFEFF4();
        v282[213] = 0;
        v282[214] = v351;
        sub_23FC5C400();
        v282[212] = v350;
        v282[141] = sub_23FC586E0;
        v282[142] = v342;
        sub_23FC5AB14(v484, v479, v478, v477);
        if (sub_23FC586E0)
          goto LABEL_143;
        sub_23FC58F00();
        v282[141] = sub_23FC586E0;
        v282[142] = v320;
        sub_23FC58AD0(v484, v479);
        sub_23FC58C64();
        v282[141] = sub_23FC586D4;
        v282[142] = v322;
        sub_23FC58AD0(v484, v479);
        sub_23FC58ADC();
        v282[141] = sub_23FC586E0;
        v282[142] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v484, v479);
        sub_23FC58AC0();
        v282[141] = sub_23FC586E0;
        v282[142] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v484, v479);
        sub_23FC58AC0();
        v282[141] = sub_23FC586D4;
        v282[142] = v347;
        sub_23FC58AD0(v484, v479);
        sub_23FC101F4();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        v334 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work, but will be sent to client.";
LABEL_94:
        sub_23FC59250(v331, v332, v333, v334, *(uint8_t **)(v3 - 224));
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      v335 = v282[424];
    }
    else
    {
      sub_23FC59F80();
      v367 = sub_23FC58A94();
      *(_QWORD *)(v367 + 16) = sub_23FC576A8;
      *(_QWORD *)(v367 + 24) = v313;
      v368 = sub_23FC58AA0();
      sub_23FC5A560(v368);
      v369 = sub_23FC58A94();
      *(_QWORD *)(v369 + 16) = sub_23FC57844;
      *(_QWORD *)(v369 + 24) = v282;
      sub_23FC58D78();
      v370 = sub_23FC5A14C();
      *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v370);
      v371 = sub_23FC58AA0();
      sub_23FC59D6C(v371);
      v320 = sub_23FC58AA0();
      sub_23FC59438(v320);
      v372 = sub_23FC58A94();
      *(_QWORD *)(v372 + 16) = sub_23FC586BC;
      *(_QWORD *)(v372 + 24) = v367;
      v322 = (_QWORD *)sub_23FC58A94();
      v322[2] = sub_23FC586C0;
      v322[3] = v372;
      v373 = sub_23FC58AA0();
      sub_23FC5B71C(v373);
      v374 = sub_23FC58AA0();
      sub_23FC59438(v374);
      v375 = sub_23FC58A94();
      *(_QWORD *)(v375 + 16) = sub_23FC586CC;
      *(_QWORD *)(v375 + 24) = v369;
      v376 = sub_23FC58A94();
      *(_QWORD *)(v376 + 16) = sub_23FC586C0;
      *(_QWORD *)(v376 + 24) = v375;
      v377 = sub_23FC58AA0();
      sub_23FC5928C(v377);
      v56 = sub_23FC586E0;
      v378[4] = sub_23FC586E0;
      v378[5] = v371;
      v378[6] = sub_23FC586E0;
      v378[7] = v320;
      v378[8] = sub_23FC586D4;
      v378[9] = v322;
      v378[10] = sub_23FC586E0;
      v378[11] = v110;
      v378[12] = sub_23FC586E0;
      v378[13] = v374;
      v378[14] = sub_23FC586D4;
      v378[15] = v376;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58CA8();
      sub_23FC58D68();
      sub_23FC58D90();
      sub_23FC58D60();
      if (sub_23FC5A8C0(*(os_log_t *)(v3 - 168), (os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v374;
        *(_QWORD *)(v3 - 184) = v110;
        v379 = sub_23FC58F88();
        v380 = sub_23FBFEFF4();
        v282[209] = 0;
        v282[210] = v380;
        sub_23FC5C400();
        v282[208] = v379;
        v282[143] = sub_23FC586E0;
        v282[144] = v371;
        sub_23FC5AB14(v483, v482, v481, v480);
        if (sub_23FC586E0)
          goto LABEL_143;
        sub_23FC58F00();
        v282[143] = sub_23FC586E0;
        v282[144] = v320;
        sub_23FC58AD0(v483, v482);
        sub_23FC58C64();
        v282[143] = sub_23FC586D4;
        v282[144] = v322;
        sub_23FC58AD0(v483, v482);
        sub_23FC58ADC();
        v282[143] = sub_23FC586E0;
        v282[144] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v483, v482);
        sub_23FC58AC0();
        v282[143] = sub_23FC586E0;
        v282[144] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v483, v482);
        sub_23FC58AC0();
        v282[143] = sub_23FC586D4;
        v282[144] = v376;
        sub_23FC58AD0(v483, v482);
        sub_23FC101F4();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        v334 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work or be sent to client.";
        goto LABEL_94;
      }
      v335 = v282[423];
    }
LABEL_99:
    v381 = (_QWORD *)v282[408];
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58ADC();
    sub_23FC58AE4();
    sub_23FC58C6C();
    sub_23FC101F4();

    sub_23FC5A808();
    v305 = (uint64_t)v282;
    v382 = sub_23FC5B24C();
    if (v382 != v383)
    {
      sub_23FC5D3D4();
      if (v384 != v36)
        goto LABEL_149;
      sub_23FC5D020();
      sub_23FC59120();
      if ((uint64_t)v282 >= (uint64_t)v313)
      {
LABEL_150:
        __break(1u);
        JUMPOUT(0x23FC2D5BCLL);
      }
      *(_QWORD *)(v3 - 192) = v313;
      do
      {
        v320 = *(_QWORD *)(v305 + 4080);
        v305 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 4072);
        sub_23FC5D8B4();
        *(_QWORD *)(v3 - 184) = v385;
        *(_QWORD *)(v3 - 176) = v386;
        sub_23FC5EECC();
        *(_QWORD *)(v3 - 168) = v387;
        *(_QWORD *)(v3 - 160) = v388;
        sub_23FC5A1AC(v536);
        sub_23FD73FC4();
        sub_23FC5DA88(v536);
        sub_23FC5A09C();
        sub_23FC5A1AC(v539);
        sub_23FC5B194();
        sub_23FC5CC30();
        sub_23FC0F3AC(*(_QWORD *)(v3 - 184), (uint64_t)v322, qword_254346A10);
        sub_23FC5A1AC(v538);
        sub_23FC5BD94();
        sub_23FC5ACFC();
        v381 = *(_QWORD **)(v3 - 176);
        sub_23FC10108();
        sub_23FC5A1AC(v537);
        v335 = v389;
        sub_23FD74000();
        sub_23FC5ACFC();
        sub_23FC5EE74();
      }
      while (!v142);
      swift_endAccess();
    }
    sub_23FC5BB24();
    sub_23FC5E344();
    sub_23FC5F4A8();
    v390 = sub_23FD74B40();
    v391 = sub_23FC5BB14(v390);
    sub_23FC10110();
    if (v391)
    {
      v282 = 0;
      *(_QWORD *)(v3 - 184) = v335;
      do
      {
        v392 = sub_23FC5F360();
        sub_23FC5B844(v392);
        sub_23FC5C5B8(v541);
        v36 = __OFADD__(v282, 1);
        v282 = (_QWORD *)((char *)v282 + 1);
        if (v36)
        {
          __break(1u);
          JUMPOUT(0x23FC2D0A0);
        }
        v393 = *(_QWORD *)(v305 + 4032);
        sub_23FC5D014();
        sub_23FBFDE28(v394, v395);
        sub_23FBFDE40((_QWORD *)v391, *(_QWORD *)(v305 + 120));
        v381 = *(_QWORD **)(v393 + 16);
        v396 = sub_23FC10108();
        v391 = sub_23FC5F5BC(v396);
        sub_23FC595E0();
        if ((v391 & 1) == 0)
          goto LABEL_126;
        if ((*(_DWORD *)(v3 - 208) & 1) != 0)
        {
          v397 = *(_QWORD **)(v3 - 152);
          if ((*(_DWORD *)(v3 - 200) & 1) == 0)
          {
            v398 = *(_QWORD *)(v305 + 120);
            sub_23FC59268(*(_QWORD **)(v3 - 152));
            v399 = sub_23FC5B288();
            v391 = sub_23FC543D0(v391, v398, v399, v400);
            sub_23FC58D60();
            sub_23FC15A24();
            v397 = *(_QWORD **)(v3 - 152);
            if ((v391 & 1) != 0)
              goto LABEL_126;
          }
        }
        else
        {
          if (!*(_DWORD *)(v3 - 200))
            goto LABEL_126;
          v381 = *(_QWORD **)(v3 - 152);
          sub_23FC59268(v381);
          v401 = sub_23FC5B288();
          v391 = sub_23FC5D208(v401, v402);
          sub_23FC15A24();
          sub_23FC58D60();
          if ((v391 & 1) == 0)
            goto LABEL_126;
          sub_23FC5B844((uint64_t)v381);
          sub_23FBFD684(&qword_256F5E420);
          sub_23FC5B294();
          if (!sub_23FC5AA14())
            goto LABEL_126;
          swift_release();
          v397 = *(_QWORD **)(v3 - 152);
        }
        v403 = sub_23FC59268(v397);
        sub_23FC5CC88(v403, v404);
        v406 = v405;
        sub_23FC1002C();
        if ((v406 & 1) != 0)
        {
          v407 = sub_23FC5B24C();
          if (v407 != v408)
          {
            sub_23FC5F4E0();
            if (v384 != v36)
            {
              __break(1u);
LABEL_149:
              __break(1u);
              goto LABEL_150;
            }
            *(_QWORD *)(v3 - 176) = v409;
            *(_QWORD *)(v3 - 168) = v282;
            do
            {
              if (v409 == v406)
              {
                __break(1u);
                JUMPOUT(0x23FC2CD84);
              }
              sub_23FC5DF48();
              sub_23FC59120();
              sub_23FC5BB04();
              sub_23FD73FB8();
              v411 = v410;
              sub_23FC595C4(v391, *(uint64_t (**)(uint64_t, uint64_t))(v320 + 8));
              sub_23FC5BC88();
              if ((v411 & 1) != 0)
              {
                swift_release();
                __break(1u);
                JUMPOUT(0x23FC2D5D0);
              }
              sub_23FC5EE18();
              v412 = *(_QWORD **)(v3 - 152);
              sub_23FC59128(v412);
              sub_23FC5B094();
              sub_23FC59128(v412);
              v413 = sub_23FC5F0DC();
              v391 = v568;
              sub_23FCC4B38(v413, v414, v415, v416);
              v322 = (_QWORD *)sub_23FC59128(v412);
              v320 = v417;
              v282 = v569;
              sub_23FC59120();
              sub_23FC5CD18(v570);
              v406 = v418;
              v110 = *(_QWORD *)(v3 - 256);
              sub_23FC5F298();
              sub_23FC5AD30();
              sub_23FC5DA88(v110);
              sub_23FC5ACFC();
              sub_23FC5F508();
              sub_23FC5EDF0();
            }
            while (!v142);
          }
        }
LABEL_126:
        _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(*(_QWORD *)(v3 - 152));
        v335 = *(_QWORD *)(v3 - 184);
      }
      while (v282 != (_QWORD *)sub_23FC5C5F0());
    }
    sub_23FC5CFE4();
    sub_23FC5AD9C();
    sub_23FC5B2FC();
    if (v142)
      v420 = 0;
    v540 = v419 | v420;
    if (sub_23FCB3EE8(v419 | v420))
    {
      v421 = sub_23FC5A09C();
      sub_23FC5EE10(v421);
      if (v381)
      {
        v422 = *(_QWORD *)(v305 + 2208);
        sub_23FC103E8();
        sub_23FC5A56C();
        sub_23FC58FB0();
        v423 = sub_23FC58A94();
        *(_QWORD *)(v423 + 16) = sub_23FC576A8;
        *(_QWORD *)(v423 + 24) = v422;
        v424 = sub_23FC58AA0();
        sub_23FC5DB98(v424);
        v425 = sub_23FC58A94();
        *(_QWORD *)(v425 + 16) = sub_23FC57844;
        *(_QWORD *)(v425 + 24) = v335;
        v426 = sub_23FC58AA0();
        *(_QWORD *)(v426 + 16) = v381;
        sub_23FC58CA8();
        sub_23FC091A4();
        v427 = sub_23FD72BE4();
        *(_DWORD *)(v3 - 168) = sub_23FC5BBC0(v427);
        v428 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 144) = v428;
        sub_23FC5C0C0(v428);
        v429 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 176) = v429;
        *(_BYTE *)(v429 + 16) = 8;
        v430 = sub_23FC58A94();
        *(_QWORD *)(v430 + 16) = sub_23FC586BC;
        *(_QWORD *)(v430 + 24) = v423;
        v431 = sub_23FC58A94();
        *(_QWORD *)(v431 + 16) = sub_23FC586C0;
        *(_QWORD *)(v431 + 24) = v430;
        v432 = sub_23FC58AA0();
        *(_BYTE *)(v432 + 16) = (_BYTE)v381;
        v433 = sub_23FC58AA0();
        *(_BYTE *)(v433 + 16) = 8;
        v434 = sub_23FC58A94();
        *(_QWORD *)(v434 + 16) = sub_23FC586CC;
        *(_QWORD *)(v434 + 24) = v425;
        v435 = sub_23FC58A94();
        *(_QWORD *)(v435 + 16) = sub_23FC586C0;
        *(_QWORD *)(v435 + 24) = v434;
        v436 = sub_23FC58AA0();
        sub_23FC5AC94(v436);
        v437 = sub_23FC58AA0();
        *(_BYTE *)(v437 + 16) = 8;
        v56 = (_QWORD *)sub_23FC58A94();
        v56[2] = sub_23FC5770C;
        v56[3] = v426;
        v438 = (_QWORD *)sub_23FC58A94();
        v438[2] = sub_23FC586C4;
        v438[3] = v56;
        v439 = sub_23FC58A94();
        *(_QWORD *)(v439 + 16) = sub_23FC586C8;
        *(_QWORD *)(v439 + 24) = v438;
        v440 = sub_23FC58AA0();
        sub_23FC5A828(v440);
        v438[5] = sub_23FC5BA48(v441);
        v438[6] = sub_23FC586E0;
        v442 = *(_QWORD *)(v3 - 176);
        v438[7] = v442;
        v438[8] = sub_23FC586D4;
        v438[9] = v431;
        v438[10] = sub_23FC586E0;
        v438[11] = v432;
        v438[12] = sub_23FC586E0;
        v438[13] = v433;
        v438[14] = sub_23FC586D4;
        v438[15] = v435;
        v438[16] = sub_23FC586E0;
        v438[17] = v436;
        v438[18] = sub_23FC586E0;
        v438[19] = v437;
        v438[20] = sub_23FC586D8;
        sub_23FC5C9E4();
        sub_23FC58D78();
        *(_QWORD *)(v3 - 192) = v431;
        v443 = v435;
        swift_retain();
        *(_QWORD *)(v3 - 200) = v432;
        sub_23FC58D90();
        *(_QWORD *)(v3 - 184) = v433;
        v444 = v436;
        swift_retain();
        sub_23FC58D68();
        sub_23FC58C88();
        sub_23FC58D58();
        sub_23FC58CA8();
        sub_23FC58D60();
        if (sub_23FC5E7B8(*(os_log_t *)(v3 - 160), (os_log_type_t)*(_DWORD *)(v3 - 168)))
        {
          v446 = *(_QWORD *)(v3 - 192);
          v445 = *(_QWORD *)(v3 - 184);
          *(_QWORD *)(v3 - 216) = v437;
          *(_QWORD *)(v3 - 208) = v444;
          *(_QWORD *)(v3 - 224) = v439;
          v447 = (uint8_t *)sub_23FC5A2EC();
          v448 = sub_23FBFEFF4();
          v449 = sub_23FBFEFF4();
          v450 = *(_QWORD **)(v3 - 136);
          v450[199] = v448;
          v450[200] = v449;
          sub_23FC5CE28();
          v450[198] = v447;
          v450[149] = sub_23FC586E0;
          v450[150] = *(_QWORD *)(v3 - 144);
          sub_23FC5A094(v490, v489, v488, v487);
          if (!v56)
          {
            sub_23FC5A928();
            v450[149] = sub_23FC586E0;
            v450[150] = v442;
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58AC8();
            v450[149] = sub_23FC586D4;
            v450[150] = v446;
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58C6C();
            v450[149] = sub_23FC586E0;
            v450[150] = *(_QWORD *)(v3 - 200);
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58CA0();
            v450[149] = sub_23FC586E0;
            v450[150] = v445;
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58CA0();
            v450[149] = sub_23FC586D4;
            v450[150] = v443;
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58CA0();
            v450[149] = sub_23FC586E0;
            v450[150] = *(_QWORD *)(v3 - 208);
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58CA0();
            v450[149] = sub_23FC586E0;
            v450[150] = *(_QWORD *)(v3 - 216);
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58CA0();
            v450[149] = sub_23FC586D8;
            v450[150] = *(_QWORD *)(v3 - 224);
            sub_23FC58FA8(v490, v489, v488);
            sub_23FC58AC0();
            sub_23FC5C7B8();
            sub_23FC5D0CC();
            sub_23FC10464(v451, v452, v453, "[SessionCoordinator %s] | [TX %s] Failed to encode to proto data for debugger: %@", v447);
            sub_23FBFD684(&qword_254346A30);
            sub_23FBFF10C();
            sub_23FBFEFA0();
          }
          goto LABEL_143;
        }
        v336 = *(_QWORD *)(v3 - 136);
        v464 = *(_QWORD *)(v336 + 3400);
        v335 = *(_QWORD *)(v336 + 3272);
        sub_23FC5D848();
        sub_23FC5A928();
        sub_23FC58AC8();
        sub_23FC5BFC0();
        sub_23FC5E080();
        sub_23FC5C410();
        sub_23FC58C64();
        sub_23FC58F00();
        sub_23FC58ADC();
        sub_23FC58AE4();

        sub_23FC10454(v464, *(uint64_t (**)(uint64_t, uint64_t))(v335 + 8));
        *(_QWORD *)(v3 - 144) = 0;
        v305 = v336;
      }
      else
      {
        sub_23FC5F09C();
        *(_DWORD *)(v3 - 184) = v456;
        *(_QWORD *)(v3 - 160) = *(_QWORD *)(v305 + 2960);
        *(_QWORD *)(v3 - 144) = *(_QWORD *)(v305 + 2952);
        sub_23FC5E7D8();
        *(_QWORD *)(v3 - 200) = v457;
        *(_QWORD *)(v3 - 192) = v458;
        v459 = *(_QWORD *)(v305 + 2192);
        *(_QWORD *)(v3 - 176) = v460;
        *(_QWORD *)(v3 - 168) = v459;
        sub_23FC5A56C();
        sub_23FC5A09C();
        v305 = sub_23FC5CC10((uint64_t)sub_23FCB3EF8);
        v336 = v461;
        sub_23FC5A56C();
        sub_23FC5B564();
        v462 = sub_23FC5D408();
        sub_23FC0F3AC(v462, v463, qword_254346A10);
        sub_23FC5C350();
        (*(void (**)(_QWORD *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 216) + 104))(v322, *(unsigned int *)(v3 - 184), *(_QWORD *)(v3 - 200));
        sub_23FC5B814();
        sub_23FBFD684(&qword_256F5E378);
        v335 = *(_QWORD *)(v3 - 176);
        sub_23FC5B544();
        sub_23FC5B0DC(*(_QWORD *)(v3 - 160));
        *(_QWORD *)(v3 - 144) = 0;
      }
    }
    else
    {
      sub_23FC5ADDC();
      sub_23FBFD684(&qword_256F5E498);
      v454 = sub_23FC5AA90();
      sub_23FC0F3AC(v454, v455, qword_254346A10);
      *v322 = v110;
      v322[1] = v282;
      v336 = *(_QWORD *)(v305 + 1552);
      *(_QWORD *)(v335 + v320) = v336;
      sub_23FC5AA0C();
      sub_23FC10108();
      sub_23FC5AAE8();
      sub_23FC50A38(v335, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC55E4C);
      sub_23FC5806C(v335, type metadata accessor for SessionCoordinatorCommand);
    }
    sub_23FC5B6B8();
    if (v142)
    {
      sub_23FC59474();
      v336 = v465;
      sub_23FC103E8();
      sub_23FC5A2C4();
      sub_23FC5A2D8();
      sub_23FC5B224();
      sub_23FBFD684(&qword_256F5E378);
      v335 = *(_QWORD *)(v3 - 184);
      sub_23FC5B2A8();
      sub_23FC5B8F0();
      sub_23FC5B550();
    }
    else
    {
      sub_23FC103E8();
      sub_23FC58AC8();
    }
    v466 = sub_23FC5AAC8();
    sub_23FC5B280(v466);
    sub_23FC5806C(v336, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
    sub_23FC5DEB4();
    sub_23FC58CA0();
    sub_23FC58AC8();
LABEL_142:
    v558 = *(_DWORD *)(v305 + 4276);
    v553 = *(_DWORD *)(v305 + 4272);
    v104 = *(_QWORD *)(v3 - 144);
    *(_DWORD *)(v305 + 4280) = v540;
    *(_DWORD *)(v305 + 4276) = v558;
    *(_DWORD *)(v305 + 4272) = v553;
    *(_QWORD *)(v3 - 144) = v104;
    *(_QWORD *)(v305 + 3960) = v104;
    sub_23FC5D198();
    sub_23FC50264(v105);
    sub_23FC100EC(v335, 1, v336);
    if (!v142)
      JUMPOUT(0x23FC223B8);
    JUMPOUT(0x23FC21EE0);
  }
  v467 = v109[490];
  sub_23FC59120();
  sub_23FC58D78();
  sub_23FC5AAE8();
  v468 = (_QWORD *)sub_23FC5E748();
  v109[512] = v468;
  *v468 = v109;
  v468[1] = sub_23FC38DEC;
  v469 = sub_23FC5D4FC((uint64_t)v56 + v467);
  sub_23FC5A46C(v469, v470);
}

uint64_t sub_23FC2D608()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC2D640()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  char *v19;
  _QWORD *v20;

  sub_23FC5ACE0();
  v2 = (_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 3808);
  v4 = sub_23FC100EC(v3, 1, *(_QWORD *)(v1 + 3776));
  v20 = (_QWORD *)v1;
  if (v5)
  {
    v6 = *(unsigned int *)(v1 + 4244);
    v13 = *(uint64_t **)(v1 + 3792);
    v7 = v2[471];
    v8 = v20[469];
    v0 = v20[465];
    sub_23FC5F290(v4, &qword_256F5E468);
    v9 = (uint64_t (**)())((char *)v13 + *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48));
    sub_23FBFD684(&qword_256F5E348);
    v10 = sub_23FC5A0A4();
    v11 = sub_23FC5BF98(v10);
    sub_23FC5A8C8(v7, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 104));
    sub_23FCB3BE4();
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    v2 = v20;
    sub_23FC10454(v7, v12);
    *v13 = v11;
    v13[1] = 0;
    v13[2] = 0xE000000000000000;
    sub_23FC5BD38();
    sub_23FC5AA0C();
    *v9 = sub_23FBFF828;
    v9[1] = 0;
    sub_23FC5D46C();
    sub_23FC5B1C4();
  }
  else
  {
    v13 = *(uint64_t **)(v1 + 3800);
    sub_23FC0F380(v3, v2[475], type metadata accessor for SessionCoordinatorCommand);
  }
  v14 = sub_23FC5F434();
  sub_23FC50A38(v14, v15);
  sub_23FC5806C((uint64_t)v13, type metadata accessor for SessionCoordinatorCommand);
  sub_23FC5ED3C();
  sub_23FC5D198();
  sub_23FC50264(v16);
  sub_23FC100EC((uint64_t)v13, 1, v0);
  if (!v5)
  {
    sub_23FC5E0F0();
    sub_23FC5E0D8();
    sub_23FC5E0C0();
    sub_23FC5D058();
    sub_23FC5C8D4();
    sub_23FC5D764();
    v19 = (char *)&loc_23FC2DCB0 + dword_23FC38DCC[sub_23FC5E148()];
    __asm { BR              X9 }
  }
  v17 = (_QWORD *)swift_task_alloc();
  v2[496] = v17;
  *v17 = v2;
  v17[1] = sub_23FC2D608;
  return sub_23FC5A488();
}

void sub_23FC2DCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t (**v66)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v67)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t);
  uint64_t v126;
  NSObject *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint8_t *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _WORD *v169;
  uint64_t v170;
  uint64_t (**v171)(uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  uint64_t v192;
  uint8_t *v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t (**v196)(uint64_t, uint64_t, uint64_t);
  uint64_t v197;
  uint64_t (**v198)(uint64_t, uint64_t, uint64_t);
  uint64_t v199;
  os_log_type_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  NSObject *v227;
  uint64_t v228;
  uint8_t *v229;
  uint64_t v230;
  uint64_t (**v231)(uint64_t, uint64_t, uint64_t);
  uint64_t v232;
  os_log_type_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t (*v242)(void);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  uint64_t v281;
  uint64_t v282;
  _QWORD *v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  uint64_t v298;
  uint64_t v299;
  void *v300;
  NSObject *v301;
  os_log_type_t v302;
  _QWORD *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  void *v320;
  NSObject *v321;
  os_log_type_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  os_log_type_t v337;
  _QWORD *v338;
  _QWORD *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  _QWORD *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  _QWORD *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t (**v355)(uint64_t, uint64_t, uint64_t);
  uint64_t v356;
  uint64_t v357;
  void *v358;
  NSObject *v359;
  os_log_type_t v360;
  const char *v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  _QWORD *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t (**v377)(uint64_t, uint64_t, uint64_t);
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  _QWORD *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t (**v393)(uint64_t, uint64_t, uint64_t);
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  _QWORD *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  __int128 *v419;
  uint64_t v420;
  uint64_t v421;
  _QWORD *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  char v435;
  char v436;
  _QWORD *v437;
  uint64_t v438;
  char v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  int v444;
  int v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  _QWORD *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  _WORD *v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t (**v477)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  int v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  void (*v492)(uint64_t, uint64_t);
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t *v498;
  uint64_t v499;
  _QWORD *v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t (**v506)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v507)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v508)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v509)(uint64_t, uint64_t, uint64_t);
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t (**v513)(uint64_t, uint64_t, uint64_t);
  uint64_t v514;
  uint64_t v515;
  uint64_t (**v516)(uint64_t, uint64_t, uint64_t);
  uint64_t v517;
  uint64_t v518;
  uint64_t (**v519)(uint64_t, uint64_t, uint64_t);
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t (**v523)(uint64_t, uint64_t, uint64_t);
  uint64_t v524;
  uint64_t v525;
  uint64_t (**v526)(uint64_t, uint64_t, uint64_t);
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t (**v531)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v532)(uint64_t, uint64_t, uint64_t);
  uint64_t v533;
  uint64_t v534;
  uint64_t (**v535)(uint64_t, uint64_t, uint64_t);
  uint64_t v536;
  uint64_t v537;
  uint64_t (**v538)(uint64_t, uint64_t, uint64_t);
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t (**v543)(uint64_t, uint64_t, uint64_t);
  uint64_t v544;
  uint64_t v545;
  uint64_t (**v546)(uint64_t, uint64_t, uint64_t);
  __int128 v547;
  uint64_t v548;
  unsigned __int8 *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  os_log_type_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  NSObject *v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  char v573;
  NSObject *v574;
  os_log_type_t v575;
  NSObject *v576;
  uint64_t v577;
  void (*v578)(_QWORD *, uint64_t, _QWORD *);
  uint64_t (**v579)(uint64_t, uint64_t, uint64_t);
  int v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;

  sub_23FC5AEE4();
  v4 = sub_23FBFD684(&qword_256F5E2B0);
  v5 = sub_23FC5BF6C(v4);
  sub_23FC0F380(v5, v6, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
  v7 = sub_23FC5E67C();
  v9 = v8;
  v10 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v3 - 200) = v7;
  v11 = sub_23FC5B6DC(v7, v10);
  v578 = (void (*)(_QWORD *, uint64_t, _QWORD *))v12;
  v12(v11);
  sub_23FC5CAD8();
  v13 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v13 + 4008) = *(_QWORD *)(v2 + 8);
  v14 = sub_23FC5A8DC();
  v585 = (uint64_t)v15;
  v15(v14);
  v16 = sub_23FC5C884();
  v17 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  *(_QWORD *)(v13 + 4016) = v17;
  v18 = *(_QWORD *)(v3 - 160);
  *(_QWORD *)(v3 - 256) = v17;
  v17(v0, v18);
  sub_23FC5B8F8();
  sub_23FC1002C();
  v19 = sub_23FBFD684(&qword_256F5E4A8);
  sub_23FC5C534(v19);
  v20 = *(_QWORD *)(v13 + 3616);
  if (v21 == 1)
  {
    sub_23FC584B0(v20, &qword_256F5E460);
    sub_23FC5BD28(v9);
  }
  else
  {
    v22 = *(_QWORD *)(v13 + 3056);
    v23 = *(_QWORD *)(v13 + 2976);
    v24 = v20 + *(int *)(v16 + 48);
    sub_23FC1046C(v9, v20 + *(int *)(v16 + 64), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 + 2984) + 32));
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, 0, 1, v23);
    sub_23FC100E4(v24, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  }
  v25 = *(uint64_t **)(v13 + 3728);
  v26 = sub_23FC58AA0();
  *(_QWORD *)(v13 + 4032) = v26;
  *(_QWORD *)(v3 - 216) = v26 + 16;
  v27 = sub_23FBFF13C();
  sub_23FC0EDD8(v27, v28, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
  v29 = sub_23FC5CC54();
  v30 = *v25;
  *(_QWORD *)(v3 - 176) = v9;
  *(_QWORD *)(v3 - 208) = v26;
  if (v29 != 1)
  {
    v69 = *(_QWORD *)(v13 + 3688);
    v70 = *(uint64_t **)(v13 + 3120);
    v71 = *(_QWORD *)(v13 + 3104);
    v72 = *(_QWORD *)(v13 + 2208);
    v73 = sub_23FBFD684(&qword_256F5E2D8);
    v74 = sub_23FC5DFD8(v73);
    sub_23FC0F380(v74, v75, type metadata accessor for SpanMetadata);
    v76 = v70[2];
    *(_QWORD *)(v3 - 184) = v70[1];
    v77 = v30;
    v78 = *v70;
    *(_QWORD *)(v26 + 16) = v77;
    sub_23FC5DC84();
    sub_23FC0F3AC((uint64_t)v70 + v79, v69, qword_254346A10);
    *(_QWORD *)(v3 - 192) = v76;
    sub_23FC5C20C();
    v572 = v71;
    sub_23FC5AC34();
    sub_23FC58FB0();
    v80 = sub_23FC58A94();
    *(_QWORD *)(v80 + 16) = sub_23FC576A8;
    *(_QWORD *)(v80 + 24) = v72;
    v81 = sub_23FC58AA0();
    *(_QWORD *)(v3 - 168) = v78;
    *(_QWORD *)(v81 + 16) = v78;
    v82 = sub_23FC58A94();
    *(_QWORD *)(v82 + 16) = sub_23FC57844;
    *(_QWORD *)(v82 + 24) = v81;
    sub_23FC58D90();
    sub_23FC58F98();
    *(_QWORD *)(v3 - 224) = sub_23FD72BE4();
    *(_DWORD *)(v3 - 256) = sub_23FD74F6C();
    v83 = sub_23FC58AA0();
    *(_QWORD *)(v3 - 160) = v83;
    sub_23FC5AA24(v83);
    v84 = sub_23FC58AA0();
    sub_23FC5A4CC(v84);
    v85 = sub_23FC58A94();
    *(_QWORD *)(v85 + 16) = sub_23FC586BC;
    *(_QWORD *)(v85 + 24) = v80;
    v86 = sub_23FC58A94();
    *(_QWORD *)(v86 + 16) = sub_23FC586C0;
    *(_QWORD *)(v86 + 24) = v85;
    v87 = sub_23FC58AA0();
    *(_BYTE *)(v87 + 16) = v81;
    v88 = sub_23FC58AA0();
    *(_BYTE *)(v88 + 16) = v71;
    v89 = sub_23FC58A94();
    *(_QWORD *)(v89 + 16) = sub_23FC586CC;
    *(_QWORD *)(v89 + 24) = v82;
    v90 = sub_23FC58A94();
    *(_QWORD *)(v90 + 16) = sub_23FC586C0;
    *(_QWORD *)(v90 + 24) = v89;
    v91 = sub_23FC58AA0();
    *(_BYTE *)(v91 + 16) = 0;
    v92 = sub_23FC58AA0();
    sub_23FC5E7A0(v92);
    v93 = (_QWORD *)sub_23FC58A94();
    v94 = *(_QWORD *)(v3 - 208);
    v93[2] = sub_23FC57D58;
    v93[3] = v94;
    v95 = sub_23FC58A94();
    *(_QWORD *)(v95 + 16) = sub_23FC58A90;
    *(_QWORD *)(v95 + 24) = v93;
    sub_23FBFD684(&qword_256F5E480);
    v96 = sub_23FC58AA0();
    sub_23FC5B81C(v96);
    *(_QWORD *)(v97 + 32) = sub_23FC586E0;
    v93[5] = *(_QWORD *)(v3 - 160);
    v93[6] = sub_23FC586E0;
    v93[7] = v84;
    v93[8] = sub_23FC586D4;
    v93[9] = v86;
    v93[10] = sub_23FC586E0;
    v93[11] = v87;
    v93[12] = sub_23FC586E0;
    v93[13] = v88;
    v93[14] = sub_23FC586D4;
    v93[15] = v90;
    v93[16] = sub_23FC586E0;
    v93[17] = v91;
    v93[18] = sub_23FC586E0;
    v93[19] = v89;
    v93[20] = sub_23FC586DC;
    v93[21] = v95;
    v98 = *(void **)(v3 - 224);
    swift_retain();
    *(_QWORD *)(v3 - 208) = v84;
    sub_23FC58F98();
    sub_23FC58D58();
    v586 = v87;
    sub_23FC58D78();
    v99 = v88;
    sub_23FC58D70();
    sub_23FC58D68();
    sub_23FC58C88();
    sub_23FC58D80();
    sub_23FC58CA8();
    v100 = sub_23FC58D60();
    v101 = v98;
    if (sub_23FC5E5C4(v100, (os_log_type_t)*(_DWORD *)(v3 - 256)))
    {
      v568 = v86;
      v102 = *(_QWORD *)(v3 - 208);
      v561 = v89;
      v103 = (uint8_t *)sub_23FC5A2EC();
      v104 = sub_23FBFEFF4();
      v105 = *(_QWORD *)(v3 - 136);
      *(_QWORD *)(v105 + 2152) = 0;
      *(_QWORD *)(v105 + 2160) = v104;
      sub_23FC5CE28();
      v106[268] = v103;
      v106[103] = sub_23FC586E0;
      v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 152);
      v106[104] = *(_QWORD *)(v3 - 160);
      sub_23FC58C90(v546, v545, v544);
      if (!v66)
      {
        sub_23FC58F00();
        v107 = *(_QWORD *)(v3 - 136);
        *(_QWORD *)(v107 + 824) = sub_23FC586E0;
        *(_QWORD *)(v107 + 832) = v102;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58ADC();
        *(_QWORD *)(v107 + 824) = sub_23FC586D4;
        *(_QWORD *)(v107 + 832) = v568;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58ADC();
        *(_QWORD *)(v107 + 824) = sub_23FC586E0;
        *(_QWORD *)(v107 + 832) = v586;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58AC8();
        *(_QWORD *)(v107 + 824) = sub_23FC586E0;
        *(_QWORD *)(v107 + 832) = v88;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58C6C();
        *(_QWORD *)(v107 + 824) = sub_23FC586D4;
        *(_QWORD *)(v107 + 832) = v90;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58AC8();
        *(_QWORD *)(v107 + 824) = sub_23FC586E0;
        *(_QWORD *)(v107 + 832) = v91;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58AC8();
        *(_QWORD *)(v107 + 824) = sub_23FC586E0;
        *(_QWORD *)(v107 + 832) = v561;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58AC8();
        *(_QWORD *)(v107 + 824) = sub_23FC586DC;
        *(_QWORD *)(v107 + 832) = v95;
        sub_23FC58C90(v546, v545, v544);
        sub_23FC58C6C();
        sub_23FC10464(&dword_23FBF8000, *(NSObject **)(v3 - 224), (os_log_type_t)*(_DWORD *)(v3 - 256), "[SessionCoordinator %s] | [TX %s] Internal transaction turned in with %ld events.", v103);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_147;
    }
    v108 = *(_QWORD **)(v3 - 136);
    v109 = v108[436];
    v110 = v108[409];
    *(_QWORD *)(v3 - 256) = v108[408];
    sub_23FC5B04C();
    sub_23FC5B768();
    sub_23FC58ADC();
    sub_23FC5F1BC();
    sub_23FC58AC8();
    sub_23FC58C6C();
    sub_23FC58F00();
    sub_23FC58FA0();
    sub_23FC58AE4();

    (*(void (**)(uint64_t, _QWORD))(v110 + 8))(v109, *(_QWORD *)(v3 - 256));
    v111 = v108;
    v112 = *(_QWORD *)(v3 - 176);
    sub_23FC59120();
    if (!sub_23FC5C098())
    {
      sub_23FC5DBE0();
      v99 = 0;
    }
    sub_23FC5BC88();
    v113 = sub_23FC59E54();
    sub_23FC5B760(v113, v114);
    sub_23FC5B760(v548, v99);
    sub_23FC100EC(v112, 1, v110);
    if (v146)
    {
      v115 = v108[381];
      sub_23FC5BDCC(v108[460]);
      sub_23FC100EC(v99, 1, v115);
      if (v146)
      {
        sub_23FC5BDCC(v108[387]);
LABEL_43:
        sub_23FC5E9C0();
        v205 = v108[276];
        sub_23FC58FB0();
        v206 = sub_23FC58A94();
        *(_QWORD *)(v206 + 16) = sub_23FC576A8;
        *(_QWORD *)(v206 + 24) = v205;
        v207 = sub_23FC58AA0();
        sub_23FC5C844(v207);
        v208 = sub_23FC58A94();
        v209 = sub_23FC5D45C(v208, (uint64_t)sub_23FC57844);
        sub_23FC5C628(v209, v210);
        sub_23FC5B730();
        v211 = swift_allocObject();
        *(_QWORD *)(v3 - 224) = v211;
        sub_23FC5BBC8(v211);
        sub_23FC58C88();
        *(_QWORD *)(v3 - 200) = sub_23FD72BE4();
        *(_DWORD *)(v3 - 208) = sub_23FD74F6C();
        v212 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 160) = v212;
        sub_23FC59D6C(v212);
        v213 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 256) = v213;
        *(_BYTE *)(v213 + 16) = 8;
        v214 = sub_23FC58A94();
        *(_QWORD *)(v214 + 16) = sub_23FC586BC;
        *(_QWORD *)(v214 + 24) = v206;
        v215 = sub_23FC58A94();
        *(_QWORD *)(v215 + 16) = sub_23FC586C0;
        *(_QWORD *)(v215 + 24) = v214;
        v216 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 176) = v216;
        *(_BYTE *)(v216 + 16) = v99;
        v217 = sub_23FC58AA0();
        *(_BYTE *)(v217 + 16) = 8;
        v218 = sub_23FC58A94();
        *(_QWORD *)(v218 + 16) = sub_23FC586CC;
        *(_QWORD *)(v218 + 24) = v208;
        v219 = sub_23FC58A94();
        *(_QWORD *)(v219 + 16) = sub_23FC586C0;
        *(_QWORD *)(v219 + 24) = v218;
        v220 = sub_23FC58AA0();
        sub_23FC5E920(v220);
        v221 = sub_23FC58AA0();
        *(_BYTE *)(v221 + 16) = 8;
        v222 = sub_23FC58A94();
        v223 = *(_QWORD *)(v3 - 224);
        *(_QWORD *)(v222 + 16) = sub_23FC57A78;
        *(_QWORD *)(v222 + 24) = v223;
        v224 = sub_23FC58A94();
        *(_QWORD *)(v224 + 16) = sub_23FC586C0;
        *(_QWORD *)(v224 + 24) = v222;
        v225 = sub_23FC58AA0();
        sub_23FC5B81C(v225);
        *(_QWORD *)(v226 + 32) = sub_23FC586E0;
        MEMORY[0x30] = *(_QWORD *)(v3 - 160);
        MEMORY[0x38] = sub_23FC586E0;
        MEMORY[0x40] = *(_QWORD *)(v3 - 256);
        MEMORY[0x48] = sub_23FC586D4;
        MEMORY[0x50] = v215;
        MEMORY[0x58] = sub_23FC586E0;
        MEMORY[0x60] = *(_QWORD *)(v3 - 176);
        MEMORY[0x68] = sub_23FC586E0;
        MEMORY[0x70] = v217;
        MEMORY[0x78] = sub_23FC586D4;
        MEMORY[0x80] = v219;
        MEMORY[0x88] = sub_23FC586E0;
        MEMORY[0x90] = v206;
        MEMORY[0x98] = sub_23FC586E0;
        MEMORY[0xA0] = v221;
        MEMORY[0xA8] = sub_23FC586D4;
        sub_23FC5CE40();
        sub_23FC58D78();
        *(_QWORD *)(v3 - 224) = v215;
        v227 = *(NSObject **)(v3 - 200);
        swift_retain();
        sub_23FC58D80();
        LODWORD(v585) = v217;
        sub_23FC58D68();
        v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v219;
        sub_23FC58D70();
        sub_23FC58D90();
        sub_23FC58CA8();
        sub_23FC58C88();
        sub_23FC58D60();
        if (os_log_type_enabled(v227, (os_log_type_t)*(_DWORD *)(v3 - 208)))
        {
          v228 = *(_QWORD *)(v3 - 224);
          v579 = v66;
          v229 = (uint8_t *)sub_23FC5A2EC();
          v230 = sub_23FBFEFF4();
          v111[265] = 0;
          v111[266] = v230;
          sub_23FC5CE28();
          v111[264] = v229;
          v111[107] = sub_23FC586E0;
          v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 152);
          v111[108] = *(_QWORD *)(v3 - 160);
          sub_23FC59698(v519, v518, v517);
          if (!v66)
          {
            sub_23FC58AE4();
            v231 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5F12C((uint64_t)sub_23FC586E0);
            sub_23FC59698(v231, v232, v517);
            sub_23FC58AC0();
            v111[107] = sub_23FC586D4;
            v111[108] = v228;
            sub_23FC59698(v519, v518, v517);
            sub_23FC58C64();
            v111[107] = sub_23FC586E0;
            v111[108] = *(_QWORD *)(v3 - 176);
            sub_23FC59698(v519, v518, v517);
            sub_23FC58AE4();
            v111[107] = sub_23FC586E0;
            v111[108] = v217;
            sub_23FC59698(v519, v518, v517);
            sub_23FC58AE4();
            v111[107] = sub_23FC586D4;
            v111[108] = v579;
            sub_23FC59698(v519, v518, v517);
            sub_23FC58AE4();
            v111[107] = sub_23FC586E0;
            v111[108] = v206;
            sub_23FC59698(v519, v518, v517);
            sub_23FC58AE4();
            v111[107] = sub_23FC586E0;
            v111[108] = v221;
            sub_23FC59698(v519, v518, v517);
            sub_23FC58AE4();
            v111[107] = sub_23FC586D4;
            v111[108] = v224;
            sub_23FC59698(v519, v518, v517);
            sub_23FC58AC0();
            sub_23FC5BF60();
            sub_23FC10464(&dword_23FBF8000, *(NSObject **)(v3 - 200), v233, "[SessionCoordinator %s] | [TX %s] Transaction has a query event ID %s that matches the current query event ID.", v229);
            sub_23FC1045C();
            sub_23FBFEFA0();
          }
          goto LABEL_147;
        }
        sub_23FC5F0F0();
        v119 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 3120);

        sub_23FC58AC0();
        sub_23FC58C6C();
        sub_23FC101F4();
        sub_23FC58FA0();
        sub_23FC5F1BC();
        sub_23FC5B714();
        sub_23FC5D038();
        sub_23FC58AC8();
        sub_23FC5B04C();
        v117 = *(_QWORD **)(v3 - 136);
        sub_23FC5E750();
        sub_23FC5B13C(v242);
        sub_23FC5806C(v119, type metadata accessor for SpanMetadata);
        v203 = 1;
        goto LABEL_51;
      }
    }
    else
    {
      v145 = v108[381];
      sub_23FC5B760(v108[387], v108[459]);
      sub_23FC5B16C();
      if (!v146)
      {
        v204 = v108[387];
        sub_23FC59444();
        sub_23FBFEE2C(&qword_256F5E4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        sub_23FC59E98();
        sub_23FC5AAB4();
        sub_23FC5A4C4(v548);
        sub_23FC5B1AC(v145);
        sub_23FC5A4C4(v204);
        if ((v99 & 1) != 0)
          goto LABEL_43;
LABEL_33:
        v148 = v108[276];
        sub_23FC58FB0();
        v149 = sub_23FC58A94();
        *(_QWORD *)(v149 + 16) = sub_23FC576A8;
        *(_QWORD *)(v149 + 24) = v148;
        v150 = sub_23FC58AA0();
        sub_23FC5C844(v150);
        v151 = sub_23FC58A94();
        v152 = sub_23FC5D45C(v151, (uint64_t)sub_23FC57844);
        sub_23FC5C628(v152, v153);
        sub_23FC5B730();
        v154 = swift_allocObject();
        sub_23FC5BBC8(v154);
        sub_23FC58D90();
        swift_retain();
        v562 = sub_23FD72BE4();
        v554 = sub_23FD74F6C();
        v155 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 176) = v155;
        sub_23FC5D38C(v155);
        v585 = sub_23FC58AA0();
        *(_BYTE *)(v585 + 16) = 8;
        v156 = sub_23FC58A94();
        *(_QWORD *)(v156 + 16) = sub_23FC586BC;
        *(_QWORD *)(v156 + 24) = v149;
        v157 = sub_23FC58A94();
        *(_QWORD *)(v157 + 16) = sub_23FC586C0;
        *(_QWORD *)(v157 + 24) = v156;
        v569 = sub_23FC58AA0();
        *(_BYTE *)(v569 + 16) = v148;
        v158 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 224) = v158;
        *(_BYTE *)(v158 + 16) = 8;
        v159 = sub_23FC58A94();
        *(_QWORD *)(v159 + 16) = sub_23FC586CC;
        *(_QWORD *)(v159 + 24) = v151;
        v567 = sub_23FC58A94();
        *(_QWORD *)(v567 + 16) = sub_23FC586C0;
        *(_QWORD *)(v567 + 24) = v159;
        *(_QWORD *)(v3 - 256) = v157;
        v160 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 160) = v160;
        *(_BYTE *)(v160 + 16) = v148;
        v161 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 208) = v161;
        *(_BYTE *)(v161 + 16) = 8;
        v162 = sub_23FC58A94();
        *(_QWORD *)(v162 + 16) = sub_23FC57A78;
        *(_QWORD *)(v162 + 24) = v154;
        v565 = sub_23FC58A94();
        *(_QWORD *)(v565 + 16) = sub_23FC586C0;
        *(_QWORD *)(v565 + 24) = v162;
        v163 = sub_23FC58AA0();
        *(_BYTE *)(v163 + 16) = v148;
        v119 = sub_23FC58AA0();
        *(_BYTE *)(v119 + 16) = 8;
        v164 = sub_23FC58A94();
        v165 = *(_QWORD *)(v3 - 200);
        *(_QWORD *)(v164 + 16) = sub_23FC57D88;
        *(_QWORD *)(v164 + 24) = v165;
        v166 = sub_23FC58A94();
        *(_QWORD *)(v166 + 16) = sub_23FC586C0;
        *(_QWORD *)(v166 + 24) = v164;
        v167 = sub_23FC58AA0();
        *(_OWORD *)(v167 + 16) = v547;
        *(_QWORD *)(v167 + 32) = sub_23FC586E0;
        *(_QWORD *)(v167 + 40) = *(_QWORD *)(v3 - 176);
        *(_QWORD *)(v167 + 48) = sub_23FC586E0;
        *(_QWORD *)(v167 + 56) = v585;
        *(_QWORD *)(v167 + 64) = sub_23FC586D4;
        *(_QWORD *)(v167 + 72) = v157;
        *(_QWORD *)(v167 + 80) = sub_23FC586E0;
        *(_QWORD *)(v167 + 88) = v569;
        *(_QWORD *)(v167 + 96) = sub_23FC586E0;
        *(_QWORD *)(v167 + 104) = *(_QWORD *)(v3 - 224);
        *(_QWORD *)(v167 + 112) = sub_23FC586D4;
        *(_QWORD *)(v167 + 120) = v567;
        *(_QWORD *)(v167 + 128) = sub_23FC586E0;
        *(_QWORD *)(v167 + 136) = *(_QWORD *)(v3 - 160);
        *(_QWORD *)(v167 + 144) = sub_23FC586E0;
        *(_QWORD *)(v167 + 152) = *(_QWORD *)(v3 - 208);
        *(_QWORD *)(v167 + 160) = sub_23FC586D4;
        *(_QWORD *)(v167 + 168) = v565;
        *(_QWORD *)(v167 + 176) = sub_23FC586E0;
        *(_QWORD *)(v167 + 184) = v163;
        *(_QWORD *)(v167 + 192) = sub_23FC586E0;
        *(_QWORD *)(v167 + 200) = v119;
        *(_QWORD *)(v167 + 208) = sub_23FC586D4;
        *(_QWORD *)(v167 + 216) = v166;
        swift_retain();
        sub_23FC58D90();
        swift_retain();
        sub_23FC58D70();
        sub_23FC58C88();
        sub_23FC58D80();
        swift_retain();
        v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 208);
        swift_retain();
        sub_23FC58D58();
        sub_23FC58D90();
        sub_23FC58CA8();
        sub_23FC58D78();
        sub_23FC58D60();
        if (sub_23FC5BDA4(v562, v554))
        {
          v168 = *(_QWORD *)(v3 - 256);
          *(_QWORD *)(v3 - 200) = v163;
          v169 = (_WORD *)sub_23FC5E198();
          v170 = sub_23FBFEFF4();
          v111[261] = 0;
          v111[262] = v170;
          *v169 = 1026;
          v111[260] = v169 + 1;
          v111[109] = sub_23FC586E0;
          v111[110] = *(_QWORD *)(v3 - 176);
          sub_23FC5AED8(v526, v525, v524);
          if (!v66)
          {
            sub_23FC5B714();
            v111[109] = sub_23FC586E0;
            v111[110] = v585;
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v111[109] = sub_23FC586D4;
            v111[110] = v168;
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC0();
            v111[109] = sub_23FC586E0;
            v111[110] = v569;
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v171 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5E188((uint64_t)sub_23FC586E0);
            sub_23FC58C5C(v171, v525, v524);
            sub_23FC58ADC();
            v111[109] = sub_23FC586D4;
            v111[110] = v567;
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v111[109] = sub_23FC586E0;
            v111[110] = *(_QWORD *)(v3 - 160);
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v111[109] = sub_23FC586E0;
            v111[110] = *(_QWORD *)(v3 - 208);
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v111[109] = sub_23FC586D4;
            v111[110] = v565;
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v111[109] = sub_23FC586E0;
            v111[110] = *(_QWORD *)(v3 - 200);
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v111[109] = sub_23FC586E0;
            v111[110] = v119;
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC8();
            v111[109] = sub_23FC586D4;
            v111[110] = v166;
            sub_23FC58C5C(v526, v525, v524);
            sub_23FC58AC0();
            sub_23FC5D698(&dword_23FBF8000, v562, v554, "[SessionCoordinator %s] | [TX %s] Transaction has a query event ID %s that does *not* match the current query event ID %s.");
            sub_23FC5E27C();
            sub_23FBFEFA0();
          }
          goto LABEL_147;
        }
        v201 = v111[409];
        v202 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 3120);

        sub_23FC58C6C();
        sub_23FC58AE4();
        sub_23FC101F4();
        sub_23FC58AC0();
        sub_23FC58FA0();
        sub_23FC5B04C();
        swift_release();
        sub_23FC5D038();
        sub_23FC5D4A8();
        sub_23FC5CDE0();
        sub_23FC5F1BC();
        sub_23FC5B714();
        v117 = *(_QWORD **)(v3 - 136);
        sub_23FC5B13C(*(uint64_t (**)(void))(v201 + 8));
        sub_23FC5806C(v202, type metadata accessor for SpanMetadata);
        v203 = 0;
LABEL_51:
        v243 = sub_23FC5F078();
        sub_23FC0EE04(v243, v244, qword_254346A10);
        v172 = v203;
        v236 = v572;
        goto LABEL_58;
      }
      v147 = v108[382];
      sub_23FC5BDCC(v548);
      sub_23FC5B2E8(*(uint64_t (**)(uint64_t, uint64_t))(v147 + 8));
    }
    sub_23FC584B0(v108[387], &qword_256F5E458);
    goto LABEL_33;
  }
  v31 = *(_QWORD *)(v13 + 3728);
  v564 = *(_QWORD *)(v31 + 8);
  v566 = *(_QWORD *)(v31 + 16);
  v32 = sub_23FD73238();
  *(_QWORD *)(v3 - 192) = v33;
  *(_QWORD *)(v3 - 184) = v32;
  sub_23FC5DCFC();
  sub_23FC5B0AC();
  sub_23FC5EBB0();
  if (v36)
  {
    __break(1u);
    JUMPOUT(0x23FC38D88);
  }
  v37 = v34;
  v38 = *(_QWORD *)(v13 + 2208);
  *(_QWORD *)(v38 + *(_QWORD *)(v13 + 3936)) = v35;
  sub_23FC58FB0();
  v39 = sub_23FC58A94();
  *(_QWORD *)(v39 + 16) = sub_23FC576A8;
  *(_QWORD *)(v39 + 24) = v38;
  v40 = sub_23FC58AA0();
  *(_QWORD *)(v3 - 168) = v37;
  *(_QWORD *)(v40 + 16) = v37;
  v41 = sub_23FC58A94();
  *(_QWORD *)(v41 + 16) = sub_23FC57844;
  *(_QWORD *)(v41 + 24) = v40;
  v42 = sub_23FC58AA0();
  *(_QWORD *)(v3 - 160) = v42;
  *(_QWORD *)(v42 + 16) = v30;
  sub_23FC58C88();
  *(_QWORD *)(v3 - 200) = v30;
  sub_23FC5B578();
  v574 = sub_23FD72BE4();
  sub_23FD74F6C();
  v43 = sub_23FC58AA0();
  sub_23FC5C254(v43);
  v44 = sub_23FC58AA0();
  sub_23FC59438(v44);
  v45 = sub_23FC58A94();
  *(_QWORD *)(v45 + 16) = sub_23FC586BC;
  *(_QWORD *)(v45 + 24) = v39;
  v46 = sub_23FC58A94();
  *(_QWORD *)(v46 + 16) = sub_23FC586C0;
  *(_QWORD *)(v46 + 24) = v45;
  v47 = sub_23FC58AA0();
  *(_QWORD *)(v3 - 224) = v47;
  *(_BYTE *)(v47 + 16) = v37;
  v48 = sub_23FC58AA0();
  *(_BYTE *)(v48 + 16) = 8;
  v49 = sub_23FC58A94();
  *(_QWORD *)(v49 + 16) = sub_23FC586CC;
  *(_QWORD *)(v49 + 24) = v41;
  v50 = sub_23FC58A94();
  *(_QWORD *)(v50 + 16) = sub_23FC586C0;
  *(_QWORD *)(v50 + 24) = v49;
  v51 = sub_23FC58AA0();
  sub_23FC5F4EC(v51);
  v52 = sub_23FC58AA0();
  *(_BYTE *)(v52 + 16) = 8;
  v53 = sub_23FC58A94();
  v54 = *(_QWORD *)(v3 - 160);
  *(_QWORD *)(v53 + 16) = sub_23FC57B24;
  *(_QWORD *)(v53 + 24) = v54;
  v55 = sub_23FC58A94();
  *(_QWORD *)(v55 + 16) = sub_23FC57B44;
  *(_QWORD *)(v55 + 24) = v53;
  sub_23FBFD684(&qword_256F5E480);
  v56 = sub_23FC58AA0();
  sub_23FC5B81C(v56);
  v57[4] = sub_23FC586E0;
  v57[5] = v43;
  v57[6] = sub_23FC586E0;
  v57[7] = v44;
  v57[8] = sub_23FC586D4;
  v57[9] = v46;
  v58 = *(_QWORD **)(v3 - 224);
  v57[10] = sub_23FC586E0;
  v57[11] = v58;
  v57[12] = sub_23FC586E0;
  v57[13] = v48;
  v57[14] = sub_23FC586D4;
  v57[15] = v50;
  v57[16] = sub_23FC586E0;
  v57[17] = v13;
  v57[18] = sub_23FC586E0;
  v57[19] = v52;
  v57[20] = sub_23FC57B4C;
  v57[21] = v55;
  *(_QWORD *)(v3 - 160) = v43;
  sub_23FC58F98();
  v59 = (_QWORD *)v46;
  v60 = v58;
  swift_retain();
  sub_23FC58D78();
  sub_23FC58D80();
  sub_23FC58C88();
  sub_23FC58D90();
  sub_23FC58D58();
  sub_23FC58D68();
  sub_23FC58CA8();
  sub_23FC58D60();
  v61 = sub_23FC5DCD0();
  if (sub_23FC5E7B8(v61, v62))
  {
    v553 = v13;
    v63 = sub_23FC5A2EC();
    v64 = sub_23FBFEFF4();
    v65 = *(_QWORD **)(v3 - 136);
    v65[256] = 0;
    v65[257] = v64;
    *(_WORD *)v63 = 770;
    v65[255] = v63 + 2;
    v65[111] = sub_23FC586E0;
    v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 152);
    v65[112] = *(_QWORD *)(v3 - 160);
    sub_23FC58C90(v543, v542, v541);
    if (!v66)
    {
      *(_QWORD *)(v3 - 152) = v63;
      sub_23FC5B04C();
      v67 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5EE8C((uint64_t)sub_23FC586E0);
      sub_23FC58C90(v67, v542, v541);
      sub_23FC58AC8();
      *(_QWORD *)(v63 + 888) = sub_23FC586D4;
      *(_QWORD *)(v63 + 896) = v59;
      sub_23FC58C90(v543, v542, v541);
      sub_23FC101F4();
      *(_QWORD *)(v63 + 888) = sub_23FC586E0;
      *(_QWORD *)(v63 + 896) = *(_QWORD *)(v3 - 224);
      sub_23FC58C90(v543, v542, v541);
      sub_23FC58AC8();
      *(_QWORD *)(v63 + 888) = sub_23FC586E0;
      *(_QWORD *)(v63 + 896) = v48;
      sub_23FC58C90(v543, v542, v541);
      sub_23FC58AC8();
      *(_QWORD *)(v63 + 888) = sub_23FC586D4;
      *(_QWORD *)(v63 + 896) = v50;
      sub_23FC58C90(v543, v542, v541);
      sub_23FC58AC8();
      *(_QWORD *)(v63 + 888) = sub_23FC586E0;
      *(_QWORD *)(v63 + 896) = v553;
      sub_23FC58C90(v543, v542, v541);
      sub_23FC58AC8();
      *(_QWORD *)(v63 + 888) = sub_23FC586E0;
      *(_QWORD *)(v63 + 896) = v52;
      sub_23FC58C90(v543, v542, v541);
      sub_23FC58AC8();
      *(_QWORD *)(v63 + 888) = sub_23FC57B4C;
      *(_QWORD *)(v63 + 896) = v55;
      sub_23FC58C90(v543, v542, v541);
      sub_23FC5DCEC();
      sub_23FC58ADC();
      sub_23FC5DCE0();
      sub_23FC10464(&dword_23FBF8000, v574, v68, "[SessionCoordinator %s] | [TX %s] Client transaction turned in with %ld events.", *(uint8_t **)(v3 - 152));
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    goto LABEL_147;
  }
  v117 = *(_QWORD **)(v3 - 136);
  v118 = v117[409];
  sub_23FC5B04C();
  sub_23FC5D4A8();
  sub_23FC58AC8();
  sub_23FC58C64();
  sub_23FC58AC0();
  sub_23FC101F4();
  sub_23FC58ADC();
  sub_23FC58C6C();
  sub_23FC58AE4();

  sub_23FC5B13C(*(uint64_t (**)(void))(v118 + 8));
  sub_23FC5BF2C();
  if (v146)
  {
    sub_23FC5B990();
    sub_23FC5CA2C();
    sub_23FC5B4E0();
    sub_23FC5C9EC();
    sub_23FBFD684(&qword_256F5E378);
    sub_23FC5B544();
    sub_23FBFF204(v118, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }
  v119 = *(_QWORD *)(v3 - 200);
  v120 = *(_QWORD *)(v3 - 152);
  v121 = sub_23FC18520(v119);
  v123 = v122;
  sub_23FC5AC34();
  v124 = sub_23FC5F3E0((uint64_t)sub_23FCB3DFC);
  v126 = sub_23FC5CB00(v124, v125);
  sub_23FC1002C();
  sub_23FC58CA0();
  *(_QWORD *)(v3 - 224) = v121;
  if (v126 < 2)
  {
    v172 = *(_QWORD *)(v3 - 176);
    if ((v123 & 1) != 0)
    {
LABEL_47:
      v234 = v117[401];
      v235 = v117[276];
      sub_23FC58D90();
      v236 = v566;
      sub_23FC5B578();
      v237 = sub_23FC18010(v119, v235, v564, v566, v172);
      *(_QWORD *)(v3 - 152) = v120;
      sub_23FC5A648();
      sub_23FC5A2A8();
      **(_QWORD **)(v3 - 216) = v237;
      sub_23FC59120();
      v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&unk_256F61700;
      sub_23FC5E694(v172, v234);
      v238 = sub_23FC5B7A0();
      if (v146)
      {
        sub_23FC5CA04(v238, v239);
        sub_23FC5DA20();
      }
      else
      {
        v240 = v117[379];
        v119 = v117[373];
        v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v117[372];
        sub_23FC06160(v240, v239, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 32));
        sub_23FC5E1D8();
        sub_23FC5AF38();
        v236 = v241;
        sub_23FC595C4(v240, *(uint64_t (**)(uint64_t, uint64_t))(v119 + 8));
      }
      goto LABEL_57;
    }
  }
  else
  {
    v573 = v123;
    *(_QWORD *)(v3 - 152) = v120;
    v127 = v117[276];
    sub_23FC58FB0();
    v128 = sub_23FC58A94();
    *(_QWORD *)(v128 + 16) = sub_23FC576A8;
    *(_QWORD *)(v128 + 24) = v127;
    v129 = sub_23FC58AA0();
    sub_23FC5C844(v129);
    v130 = sub_23FC58A94();
    *(_QWORD *)(v130 + 16) = sub_23FC57844;
    *(_QWORD *)(v130 + 24) = v129;
    sub_23FC58D90();
    sub_23FD72BE4();
    v575 = sub_23FC15A04();
    v131 = sub_23FC58AA0();
    sub_23FC5C0C0(v131);
    v132 = sub_23FC58AA0();
    sub_23FC59438(v132);
    v133 = sub_23FC58A94();
    *(_QWORD *)(v133 + 16) = sub_23FC586BC;
    *(_QWORD *)(v133 + 24) = v128;
    v59 = (_QWORD *)sub_23FC58A94();
    v59[2] = sub_23FC586C0;
    v59[3] = v133;
    v134 = sub_23FC58AA0();
    *(_BYTE *)(v134 + 16) = v120;
    v135 = sub_23FC58AA0();
    sub_23FC59438(v135);
    v136 = v127;
    v137 = sub_23FC58A94();
    *(_QWORD *)(v137 + 16) = sub_23FC586CC;
    *(_QWORD *)(v137 + 24) = v130;
    v138 = sub_23FC58A94();
    *(_QWORD *)(v138 + 16) = sub_23FC586C0;
    *(_QWORD *)(v138 + 24) = v137;
    v139 = sub_23FC58AA0();
    sub_23FC5928C(v139);
    v140[4] = sub_23FC586E0;
    v140[5] = v131;
    v140[6] = sub_23FC586E0;
    v140[7] = v132;
    v140[8] = sub_23FC586D4;
    v140[9] = v59;
    v140[10] = sub_23FC586E0;
    v140[11] = v134;
    v140[12] = sub_23FC586E0;
    v140[13] = v135;
    v140[14] = sub_23FC586D4;
    v140[15] = v138;
    v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v131;
    sub_23FC58D70();
    sub_23FC58F98();
    sub_23FC58D78();
    sub_23FC58D68();
    sub_23FC58D58();
    sub_23FC58D90();
    sub_23FC58D60();
    if (sub_23FC599FC(v575))
    {
      v141 = v132;
      v142 = (uint8_t *)sub_23FC58F88();
      v143 = sub_23FBFEFF4();
      v144 = *(_QWORD **)(v3 - 136);
      v144[252] = 0;
      v144[253] = v143;
      *(_WORD *)v142 = 514;
      v144[251] = v142 + 2;
      v144[113] = sub_23FC586E0;
      v144[114] = v66;
      sub_23FC5B044(v523, v522, v521, v520);
      if (!v66)
      {
        sub_23FC58AC8();
        v144[113] = sub_23FC586E0;
        v144[114] = v141;
        sub_23FC5A2F4(v523, v522);
        sub_23FC58AC8();
        v144[113] = sub_23FC586D4;
        v144[114] = v59;
        sub_23FC5A2F4(v523, v522);
        sub_23FC58AC8();
        v144[113] = sub_23FC586E0;
        v144[114] = v134;
        sub_23FC5A2F4(v523, v522);
        sub_23FC58AC8();
        v144[113] = sub_23FC586E0;
        v144[114] = v135;
        sub_23FC5A2F4(v523, v522);
        sub_23FC58AC8();
        v144[113] = sub_23FC586D4;
        v144[114] = v138;
        sub_23FC5A2F4(v523, v522);
        sub_23FC58AC8();
        sub_23FC59250(&dword_23FBF8000, v136, v575, "[SessionCoordinator %s] | [TX %s] A client transaction contains more than one query. Only the last one will be used as the current query.", v142);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_147;
    }
    v60 = *(_QWORD **)(v3 - 136);
    sub_23FC58FA0();
    sub_23FC58F00();
    sub_23FC58AC8();
    sub_23FC58C6C();
    sub_23FC58ADC();
    sub_23FC101F4();

    sub_23FC5A808();
    v117 = v60;
    v172 = *(_QWORD *)(v3 - 176);
    v119 = *(_QWORD *)(v3 - 200);
    v120 = *(_QWORD *)(v3 - 152);
    v121 = *(_QWORD *)(v3 - 224);
    if ((v573 & 1) != 0)
      goto LABEL_47;
  }
  *(_QWORD *)(v3 - 152) = v120;
  if (v121)
  {
    v173 = v117[276];
    sub_23FC58FB0();
    v174 = sub_23FC58A94();
    *(_QWORD *)(v174 + 16) = sub_23FC576A8;
    *(_QWORD *)(v174 + 24) = v173;
    v175 = sub_23FC58AA0();
    sub_23FC5C844(v175);
    v176 = sub_23FC58A94();
    *(_QWORD *)(v176 + 16) = sub_23FC57844;
    *(_QWORD *)(v176 + 24) = v175;
    v177 = (_QWORD *)sub_23FC58AA0();
    v177[2] = v121;
    sub_23FC58CA8();
    v576 = sub_23FD72BE4();
    sub_23FD74F54();
    v178 = sub_23FC58AA0();
    *(_QWORD *)(v3 - 160) = v178;
    sub_23FC5C0C0(v178);
    v570 = sub_23FC58AA0();
    *(_BYTE *)(v570 + 16) = 8;
    v179 = sub_23FC58A94();
    *(_QWORD *)(v179 + 16) = sub_23FC586BC;
    *(_QWORD *)(v179 + 24) = v174;
    v180 = sub_23FC58A94();
    *(_QWORD *)(v180 + 16) = sub_23FC586C0;
    *(_QWORD *)(v180 + 24) = v179;
    v181 = sub_23FC58AA0();
    sub_23FC5C108(v181);
    v59 = (_QWORD *)sub_23FC58AA0();
    *((_BYTE *)v59 + 16) = 8;
    v182 = sub_23FC58A94();
    *(_QWORD *)(v182 + 16) = sub_23FC586CC;
    *(_QWORD *)(v182 + 24) = v176;
    v183 = sub_23FC58A94();
    *(_QWORD *)(v183 + 16) = sub_23FC586C0;
    *(_QWORD *)(v183 + 24) = v182;
    v184 = sub_23FC58AA0();
    sub_23FC5F0B0(v184);
    v185 = sub_23FC58AA0();
    *(_BYTE *)(v185 + 16) = 8;
    v186 = sub_23FC58A94();
    *(_QWORD *)(v186 + 16) = sub_23FC57D10;
    *(_QWORD *)(v186 + 24) = v177;
    v187 = sub_23FC58A94();
    *(_QWORD *)(v187 + 16) = sub_23FC58A90;
    *(_QWORD *)(v187 + 24) = v186;
    v188 = sub_23FC58AA0();
    sub_23FC5B81C(v188);
    *(_QWORD *)(v189 + 32) = sub_23FC586E0;
    v177[5] = *(_QWORD *)(v3 - 160);
    v177[6] = sub_23FC586E0;
    v177[7] = v570;
    v177[8] = sub_23FC586D4;
    v177[9] = v180;
    v177[10] = sub_23FC586E0;
    v177[11] = v174;
    v177[12] = sub_23FC586E0;
    v177[13] = v59;
    v177[14] = sub_23FC586D4;
    v177[15] = v183;
    v177[16] = sub_23FC586E0;
    v177[17] = v179;
    v177[18] = sub_23FC586E0;
    v177[19] = v185;
    v177[20] = sub_23FC586DC;
    v177[21] = v187;
    swift_retain();
    v121 = v570;
    swift_retain();
    v120 = v180;
    sub_23FC58D70();
    v60 = (_QWORD *)v174;
    sub_23FC58C88();
    v172 = (uint64_t)v59;
    sub_23FC58D78();
    sub_23FC58D90();
    swift_retain();
    sub_23FC58F98();
    sub_23FC58D68();
    sub_23FC58D60();
    v190 = sub_23FC5DCD0();
    if (sub_23FC5A8C0(v190, v191))
    {
      v192 = v120;
      v551 = v185;
      v193 = (uint8_t *)sub_23FC5A2EC();
      v194 = sub_23FBFEFF4();
      v195 = *(_QWORD **)(v3 - 136);
      v195[248] = 0;
      v195[249] = v194;
      sub_23FC5CE28();
      v195[247] = v193;
      v195[117] = sub_23FC586E0;
      v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 152);
      v195[118] = *(_QWORD *)(v3 - 160);
      sub_23FC58C5C(v516, v515, v514);
      if (!v66)
      {
        sub_23FC5B04C();
        v196 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5F19C((uint64_t)sub_23FC586E0);
        sub_23FC58AD0(v196, v197);
        sub_23FC101F4();
        v195[117] = sub_23FC586D4;
        v195[118] = v192;
        sub_23FC58AD0(v516, v515);
        sub_23FC58AC8();
        v195[117] = sub_23FC586E0;
        v195[118] = v60;
        sub_23FC58AD0(v516, v515);
        sub_23FC58AC8();
        v195[117] = sub_23FC586E0;
        v198 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5E228();
        sub_23FC58AD0(v198, v199);
        sub_23FC58AC8();
        v195[117] = sub_23FC586D4;
        v195[118] = v183;
        sub_23FC58AD0(v516, v515);
        sub_23FC58AC8();
        v195[117] = sub_23FC586E0;
        v195[118] = v179;
        sub_23FC58AD0(v516, v515);
        sub_23FC58AC8();
        v195[117] = sub_23FC586E0;
        v195[118] = v551;
        sub_23FC58AD0(v516, v515);
        sub_23FC58AC8();
        v195[117] = sub_23FC586DC;
        v195[118] = v187;
        sub_23FC58AD0(v516, v515);
        sub_23FC5D274();
        sub_23FC58AC0();
        sub_23FC5DCE0();
        sub_23FC10464(&dword_23FBF8000, v576, v200, "[SessionCoordinator %s] | [TX %s] A client transaction contains a query at index %ld. Queries should be the first event in their transaction. This may cause incorrect behavior.", v193);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_147;
    }
    v117 = *(_QWORD **)(v3 - 136);
    v245 = v117[409];
    sub_23FC5B04C();
    sub_23FC58ADC();
    sub_23FC58FA0();
    sub_23FC58C64();
    sub_23FC58AC0();
    sub_23FC101F4();
    sub_23FC5D338();
    sub_23FC58AE4();
    sub_23FC58C6C();

    sub_23FC5B13C(*(uint64_t (**)(void))(v245 + 8));
  }
  v246 = v117[471];
  v552 = v117[469];
  sub_23FC5BE3C();
  v563 = v247;
  v555 = v117[403];
  v577 = v117[402];
  sub_23FC5EFFC();
  v571 = v248;
  v249 = v117[363];
  v550 = v117[361];
  v578(v59, v117[276] + v250, v60);
  sub_23FC5DDE8();
  ((void (*)(_QWORD *, _QWORD *))v585)(v59, v60);
  sub_23FC5E764(v249);
  sub_23FC092BC(v120, v249, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v172 + 16));
  sub_23FC5806C(v249, type metadata accessor for EventPayloadWithPreassignedID);
  MEMORY[0x2426774A8](v120);
  sub_23FC5E1E0();
  sub_23FC5A8C8(v246, v249 + *(int *)(v550 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v552 + 16));
  sub_23FC5806C(v249, type metadata accessor for EventPayloadWithPreassignedID);
  sub_23FC5BD54();
  sub_23FC10454(v246, *(uint64_t (**)(uint64_t, uint64_t))(v552 + 8));
  (*(void (**)(uint64_t, uint64_t))(v3 - 256))(v121, v563);
  v251 = sub_23FC5C5D8();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v251, v252, v253, v571);
  v254 = *(_QWORD *)(v3 - 176);
  sub_23FC59120();
  sub_23FC5E964(v555, v254);
  sub_23FC58D78();
  sub_23FC5AAE8();
  v255 = sub_23FC5E664();
  v256 = *(_QWORD *)(v3 - 152);
  v261 = sub_23FC18010(v255, v257, v258, v259, v260);
  *(_QWORD *)(v3 - 152) = v256;
  sub_23FC15A24();
  sub_23FC5A56C();
  **(_QWORD **)(v3 - 216) = v261;
  sub_23FC59120();
  sub_23FC5C628(v254, v577);
  sub_23FC100EC(v577, 1, v571);
  if (v146)
    goto LABEL_156;
  v262 = v117[402];
  v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v117[373];
  v263 = v117[372];
  sub_23FC59120();
  sub_23FC1FE30(v540, *(_QWORD *)(v3 - 224));
  sub_23FC1046C(v264, v262, v66[5]);
  sub_23FC5C5B8(v540);
  sub_23FC5C520();
  v119 = v539;
  sub_23FC59120();
  sub_23FC100EC(v254, 1, v263);
  if (v146)
  {
LABEL_157:
    sub_23FC5B768();
    __break(1u);
    goto LABEL_158;
  }
  sub_23FC5C9AC();
  sub_23FC5C520();
  v265 = sub_23FC5B0FC();
  sub_23FC0EE04(v265, v266, qword_254346A10);
  sub_23FC59120();
  sub_23FC100EC(v254, 1, v540);
  if (v146)
  {
LABEL_158:
    sub_23FC5B768();
    __break(1u);
    JUMPOUT(0x23FC38DCCLL);
  }
  sub_23FD73FF4();
  v236 = v267;
  sub_23FC5C5E8();
  v172 = 1;
LABEL_57:
  sub_23FC5D83C();
  v203 = 1;
LABEL_58:
  sub_23FC5B314(v549);
  if (!v203)
  {
    sub_23FC5EFDC();
    sub_23FC59120();
    v268 = sub_23FC5AFCC();
    v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 152);
    v269 = sub_23FC18778(v268);
    sub_23FC1002C();
    if ((v269 & 1) != 0)
    {
      *(_QWORD *)(v3 - 168) = v66;
      v270 = v117[276];
      sub_23FC58FB0();
      v271 = sub_23FC58A94();
      *(_QWORD *)(v271 + 16) = sub_23FC576A8;
      *(_QWORD *)(v271 + 24) = v270;
      v272 = sub_23FC58AA0();
      sub_23FC5F084(v272);
      v273 = sub_23FC58A94();
      *(_QWORD *)(v273 + 16) = sub_23FC57844;
      *(_QWORD *)(v273 + 24) = v119;
      sub_23FC58C88();
      v119 = sub_23FD72BE4();
      *(_DWORD *)(v3 - 152) = sub_23FD74F3C();
      v274 = v117;
      v117 = (_QWORD *)sub_23FC58AA0();
      sub_23FC5C0C0((uint64_t)v117);
      v275 = sub_23FC58AA0();
      sub_23FC59438(v275);
      v276 = sub_23FC58A94();
      *(_QWORD *)(v276 + 16) = sub_23FC586BC;
      *(_QWORD *)(v276 + 24) = v271;
      v277 = sub_23FC58A94();
      *(_QWORD *)(v277 + 16) = sub_23FC586C0;
      *(_QWORD *)(v277 + 24) = v276;
      v236 = sub_23FC58AA0();
      *(_BYTE *)(v236 + 16) = (_BYTE)v66;
      v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58AA0();
      sub_23FC59438((uint64_t)v66);
      v278 = sub_23FC58A94();
      *(_QWORD *)(v278 + 16) = sub_23FC586CC;
      *(_QWORD *)(v278 + 24) = v273;
      v172 = sub_23FC58A94();
      *(_QWORD *)(v172 + 16) = sub_23FC586C0;
      *(_QWORD *)(v172 + 24) = v278;
      sub_23FBFD684(&qword_256F5E480);
      v279 = sub_23FC58AA0();
      sub_23FC5928C(v279);
      v280[4] = sub_23FC586E0;
      v280[5] = v117;
      v280[6] = sub_23FC586E0;
      v280[7] = v275;
      v280[8] = sub_23FC586D4;
      v280[9] = v277;
      v280[10] = sub_23FC586E0;
      v280[11] = v236;
      v280[12] = sub_23FC586E0;
      v280[13] = v66;
      v280[14] = sub_23FC586D4;
      v280[15] = v172;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC599FC((os_log_type_t)*(_DWORD *)(v3 - 152)))
      {
        *(_QWORD *)(v3 - 184) = v66;
        *(_QWORD *)(v3 - 176) = v236;
        *(_QWORD *)(v3 - 192) = v119;
        v281 = sub_23FC58F88();
        v282 = sub_23FBFEFF4();
        v274[233] = 0;
        *(_QWORD *)(v3 - 208) = v282;
        *(_QWORD *)(v3 - 200) = v281;
        v274[234] = v282;
        sub_23FC5DF3C();
        v274[232] = v281;
        v274[127] = sub_23FC586E0;
        v274[128] = v117;
        sub_23FC5ED7C(v538, v537, v536);
        if (!v66)
        {
          sub_23FC58F00();
          v274[127] = sub_23FC586E0;
          v274[128] = v275;
          sub_23FC58AD0(v538, v537);
          sub_23FC58C64();
          v274[127] = sub_23FC586D4;
          v274[128] = v277;
          sub_23FC58AD0(v538, v537);
          sub_23FC58ADC();
          v274[127] = sub_23FC586E0;
          v274[128] = *(_QWORD *)(v3 - 176);
          sub_23FC58AD0(v538, v537);
          sub_23FC58AC8();
          v274[127] = sub_23FC586E0;
          v274[128] = *(_QWORD *)(v3 - 184);
          sub_23FC58AD0(v538, v537);
          sub_23FC58AC8();
          v274[127] = sub_23FC586D4;
          v274[128] = v172;
          sub_23FC58AD0(v538, v537);
          sub_23FC58AC0();
          sub_23FC59250(&dword_23FBF8000, *(NSObject **)(v3 - 192), (os_log_type_t)*(_DWORD *)(v3 - 152), "[SessionCoordinator %s] | [TX %s] Transaction is advisory.", *(uint8_t **)(v3 - 200));
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        goto LABEL_147;
      }
      sub_23FC58F00();
      sub_23FC58C64();
      sub_23FC58ADC();
      sub_23FC58C6C();
      sub_23FC58FA0();
      sub_23FC58AC0();

      sub_23FC5A808();
      sub_23FC5E068();
    }
    else
    {
      *(_DWORD *)(v3 - 208) = v549[1];
      *(_DWORD *)(v3 - 200) = *v549;
    }
    v283 = *(_QWORD **)(v117[504] + 16);
    v284 = sub_23FC5AFCC();
    v285 = sub_23FC17D20(v284);
    sub_23FC1002C();
    *(_QWORD *)(v3 - 152) = v66;
    if ((v285 & 1) != 0)
    {
      v283 = (_QWORD *)v117[430];
      v286 = v117[276];
      sub_23FC58FB0();
      v287 = sub_23FC58A94();
      *(_QWORD *)(v287 + 16) = sub_23FC576A8;
      *(_QWORD *)(v287 + 24) = v286;
      v288 = sub_23FC58AA0();
      sub_23FC5A560(v288);
      v289 = sub_23FC58A94();
      *(_QWORD *)(v289 + 16) = sub_23FC57844;
      *(_QWORD *)(v289 + 24) = v172;
      sub_23FC58D80();
      *(_QWORD *)(v3 - 168) = sub_23FD72BE4();
      *(_DWORD *)(v3 - 176) = sub_23FD74F3C();
      v290 = sub_23FC58AA0();
      sub_23FC59C28(v290);
      v291 = sub_23FC58AA0();
      sub_23FC5A4CC(v291);
      v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58A94();
      v66[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC586BC;
      v66[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v287;
      v292 = sub_23FC58A94();
      *(_QWORD *)(v292 + 16) = sub_23FC586C0;
      *(_QWORD *)(v292 + 24) = v66;
      v293 = sub_23FC58AA0();
      sub_23FC5AEC0(v293);
      v294 = sub_23FC58AA0();
      sub_23FC5BD44(v294);
      v295 = sub_23FC58A94();
      *(_QWORD *)(v295 + 16) = sub_23FC586CC;
      *(_QWORD *)(v295 + 24) = v289;
      v172 = sub_23FC58A94();
      *(_QWORD *)(v172 + 16) = sub_23FC586C0;
      *(_QWORD *)(v172 + 24) = v295;
      sub_23FBFD684(&qword_256F5E480);
      v296 = sub_23FC58AA0();
      sub_23FC5928C(v296);
      v297[4] = sub_23FC586E0;
      v297[5] = v117;
      v297[6] = sub_23FC586E0;
      v297[7] = v291;
      v297[8] = sub_23FC586D4;
      v297[9] = v292;
      v297[10] = sub_23FC586E0;
      v297[11] = v236;
      v297[12] = sub_23FC586E0;
      v297[13] = v66;
      v297[14] = sub_23FC586D4;
      v297[15] = v172;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC599FC((os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v66;
        *(_QWORD *)(v3 - 184) = v236;
        v298 = sub_23FC58F88();
        v299 = sub_23FBFEFF4();
        v283[229] = 0;
        *(_QWORD *)(v3 - 208) = v299;
        *(_QWORD *)(v3 - 200) = v298;
        v283[230] = v299;
        sub_23FC5DF3C();
        v283[228] = v298;
        v283[131] = sub_23FC586E0;
        v283[132] = v117;
        sub_23FC5AED8(v535, v534, v533);
        if (!v66)
        {
          sub_23FC58F00();
          v283[131] = sub_23FC586E0;
          v283[132] = v291;
          sub_23FC58AD0(v535, v534);
          sub_23FC58C64();
          v283[131] = sub_23FC586D4;
          v283[132] = v292;
          sub_23FC58AD0(v535, v534);
          sub_23FC58ADC();
          v283[131] = sub_23FC586E0;
          v283[132] = *(_QWORD *)(v3 - 184);
          sub_23FC58AD0(v535, v534);
          sub_23FC58AC8();
          v283[131] = sub_23FC586E0;
          v283[132] = *(_QWORD *)(v3 - 192);
          sub_23FC58AD0(v535, v534);
          sub_23FC58AC8();
          v283[131] = sub_23FC586D4;
          v283[132] = v172;
          sub_23FC58AD0(v535, v534);
          sub_23FC58AC0();
          sub_23FC5AFA0();
          sub_23FC5B6D0();
          sub_23FC59250(v300, v301, v302, "[SessionCoordinator %s] | [TX %s] Transaction is work-allowing advisory.", *(uint8_t **)(v3 - 200));
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        goto LABEL_147;
      }
      sub_23FC58F00();
      sub_23FC58C64();
      sub_23FC58ADC();
      sub_23FC58C6C();
      sub_23FC58FA0();
      sub_23FC58AC0();

      sub_23FC5A808();
      sub_23FC5D414();
      v117 = v283;
    }
    sub_23FC59A08();
    sub_23FC5D878();
    sub_23FC5CC7C();
    sub_23FC5CC24();
    sub_23FC5BB44();
    if ((v283 & 1) == 0)
    {
      sub_23FC5B474();
      sub_23FC58FB0();
      v323 = sub_23FC58A94();
      *(_QWORD *)(v323 + 16) = sub_23FC576A8;
      *(_QWORD *)(v323 + 24) = v66;
      v324 = sub_23FC58AA0();
      sub_23FC5A560(v324);
      v325 = sub_23FC58A94();
      *(_QWORD *)(v325 + 16) = sub_23FC57844;
      *(_QWORD *)(v325 + 24) = v172;
      sub_23FC58D80();
      sub_23FD72BE4();
      *(_DWORD *)(v3 - 168) = sub_23FC5E508();
      v326 = sub_23FC58AA0();
      sub_23FC5EE40(v326);
      v327 = sub_23FC58AA0();
      sub_23FC5C5CC(v327);
      v328 = sub_23FC58A94();
      *(_QWORD *)(v328 + 16) = sub_23FC586BC;
      *(_QWORD *)(v328 + 24) = v323;
      v329 = sub_23FC58A94();
      *(_QWORD *)(v329 + 16) = sub_23FC586C0;
      *(_QWORD *)(v329 + 24) = v328;
      v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58AA0();
      *((_BYTE *)v66 + 16) = (_BYTE)v117;
      v330 = sub_23FC58AA0();
      *(_BYTE *)(v330 + 16) = v236;
      v331 = (void *)v172;
      v332 = sub_23FC58A94();
      *(_QWORD *)(v332 + 16) = sub_23FC586CC;
      *(_QWORD *)(v332 + 24) = v325;
      v333 = sub_23FC58A94();
      *(_QWORD *)(v333 + 16) = sub_23FC586C0;
      *(_QWORD *)(v333 + 24) = v332;
      sub_23FBFD684(&qword_256F5E480);
      v334 = sub_23FC58AA0();
      sub_23FC5928C(v334);
      v335[4] = sub_23FC586E0;
      v335[5] = v119;
      v335[6] = sub_23FC586E0;
      v335[7] = v327;
      v335[8] = sub_23FC586D4;
      v335[9] = v329;
      v335[10] = sub_23FC586E0;
      v335[11] = v66;
      v335[12] = sub_23FC586E0;
      v335[13] = v330;
      v335[14] = sub_23FC586D4;
      v335[15] = v333;
      sub_23FC58CA8();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D80();
      sub_23FC58F98();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC5D704((os_log_type_t)*(_DWORD *)(v3 - 168)))
      {
        *(_QWORD *)(v3 - 184) = v330;
        *(_QWORD *)(v3 - 176) = v66;
        *(_QWORD *)(v3 - 192) = v331;
        sub_23FC58F88();
        v336 = sub_23FBFEFF4();
        sub_23FC5C914(v336);
        sub_23FC5AED8(v531, v530, v529);
        if (!v66)
        {
          sub_23FC58AE4();
          v283[157] = sub_23FC586E0;
          v283[158] = v327;
          sub_23FC58C5C(v531, v530, v529);
          sub_23FC58C64();
          v283[157] = sub_23FC586D4;
          v283[158] = v329;
          sub_23FC58C5C(v531, v530, v529);
          sub_23FC58ADC();
          v283[157] = sub_23FC586E0;
          v283[158] = *(_QWORD *)(v3 - 176);
          sub_23FC58C5C(v531, v530, v529);
          sub_23FC58AE4();
          v283[157] = sub_23FC586E0;
          v283[158] = *(_QWORD *)(v3 - 184);
          sub_23FC58C5C(v531, v530, v529);
          sub_23FC58AE4();
          v283[157] = sub_23FC586D4;
          v283[158] = v333;
          sub_23FC58C5C(v531, v530, v529);
          sub_23FC58AC0();
          sub_23FC5C7B8();
          sub_23FC59250(&dword_23FBF8000, *(NSObject **)(v3 - 192), v337, "[SessionCoordinator %s] | [TX %s] Transaction postcondition FAILED. It will be skipped.", *(uint8_t **)(v3 - 200));
          sub_23FC58F90();
          sub_23FBFEFA0();
        }
        goto LABEL_147;
      }
      v362 = v283[428];
      v363 = v283[408];
      sub_23FC58AE4();
      sub_23FC58C64();
      sub_23FC58ADC();
      sub_23FC58FA0();
      sub_23FC58F00();
      sub_23FC58AC0();

      sub_23FC5A808();
      sub_23FC5B230();
      if (v146)
      {
        sub_23FC59474();
        v363 = v364;
        sub_23FC103E8();
        sub_23FC5A2C4();
        sub_23FC5A2D8();
        sub_23FC5B224();
        sub_23FBFD684(&qword_256F5E378);
        v362 = *(_QWORD *)(v3 - 184);
        sub_23FC5B2A8();
        sub_23FC5B8F0();
        sub_23FC5B550();
      }
      else
      {
        sub_23FC103E8();
        sub_23FC58AC8();
      }
      v380 = sub_23FC5AAC8();
      sub_23FC5B280(v380);
      sub_23FC5806C(v363, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
      sub_23FC58CA0();
      sub_23FC58AC8();
      v580 = *(_DWORD *)(v330 + 4280);
      goto LABEL_146;
    }
    v303 = (_QWORD *)v117[429];
    v304 = v117[276];
    sub_23FC58FB0();
    v305 = sub_23FC58A94();
    *(_QWORD *)(v305 + 16) = sub_23FC576A8;
    *(_QWORD *)(v305 + 24) = v304;
    v306 = sub_23FC58AA0();
    sub_23FC5A560(v306);
    v307 = sub_23FC58A94();
    *(_QWORD *)(v307 + 16) = sub_23FC57844;
    *(_QWORD *)(v307 + 24) = v172;
    sub_23FC58D80();
    v308 = sub_23FD72BE4();
    *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v308);
    v309 = sub_23FC58AA0();
    sub_23FC59C28(v309);
    v310 = sub_23FC58AA0();
    sub_23FC5A4CC(v310);
    v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58A94();
    v66[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC586BC;
    v66[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v305;
    v311 = sub_23FC58A94();
    *(_QWORD *)(v311 + 16) = sub_23FC586C0;
    *(_QWORD *)(v311 + 24) = v66;
    v312 = sub_23FC58AA0();
    sub_23FC5AEC0(v312);
    v313 = sub_23FC58AA0();
    sub_23FC5BD44(v313);
    v314 = sub_23FC58A94();
    *(_QWORD *)(v314 + 16) = sub_23FC586CC;
    *(_QWORD *)(v314 + 24) = v307;
    v315 = sub_23FC58A94();
    *(_QWORD *)(v315 + 16) = sub_23FC586C0;
    *(_QWORD *)(v315 + 24) = v314;
    *(_QWORD *)(v3 - 216) = sub_23FBFD684(&qword_256F5E480);
    v316 = sub_23FC58AA0();
    sub_23FC5928C(v316);
    v317[4] = sub_23FC586E0;
    v317[5] = v117;
    v317[6] = sub_23FC586E0;
    v317[7] = v310;
    v317[8] = sub_23FC586D4;
    v317[9] = v311;
    v317[10] = sub_23FC586E0;
    v317[11] = v236;
    v317[12] = sub_23FC586E0;
    v317[13] = v66;
    v317[14] = sub_23FC586D4;
    v317[15] = v315;
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58D80();
    sub_23FC58C88();
    sub_23FC58D60();
    if (sub_23FC599FC((os_log_type_t)*(_DWORD *)(v3 - 176)))
    {
      *(_QWORD *)(v3 - 192) = v66;
      *(_QWORD *)(v3 - 184) = v236;
      v318 = sub_23FC58F88();
      v319 = sub_23FBFEFF4();
      v303[225] = 0;
      *(_QWORD *)(v3 - 256) = v319;
      v303[226] = v319;
      sub_23FC5C2A8();
      v303[224] = v318;
      v303[133] = sub_23FC586E0;
      v303[134] = v117;
      sub_23FC5AED8(v532, v528, v527);
      if (!v66)
      {
        sub_23FC58F00();
        v303[133] = sub_23FC586E0;
        v303[134] = v310;
        sub_23FC58AD0(v532, v528);
        sub_23FC58C64();
        v303[133] = sub_23FC586D4;
        v303[134] = v311;
        sub_23FC58AD0(v532, v528);
        sub_23FC58ADC();
        v303[133] = sub_23FC586E0;
        v303[134] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v532, v528);
        sub_23FC58AC8();
        v303[133] = sub_23FC586E0;
        v303[134] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v532, v528);
        sub_23FC58AC8();
        v303[133] = sub_23FC586D4;
        v303[134] = v315;
        sub_23FC58AD0(v532, v528);
        sub_23FC58AC0();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        sub_23FC59250(v320, v321, v322, "[SessionCoordinator %s] | [TX %s] Transaction postcondition passed.", *(uint8_t **)(v3 - 224));
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_147;
    }
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58ADC();
    sub_23FC58C6C();
    sub_23FC58FA0();
    sub_23FC58AC0();

    sub_23FC5A808();
    v338 = v303;
    v339 = (_QWORD *)v303[276];
    if (*(_DWORD *)(v3 - 208))
    {
      if ((*(_DWORD *)(v3 - 200) & 1) != 0)
      {
        sub_23FC59F80();
        v340 = sub_23FC58A94();
        *(_QWORD *)(v340 + 16) = sub_23FC576A8;
        *(_QWORD *)(v340 + 24) = v339;
        v341 = sub_23FC58AA0();
        sub_23FC5A560(v341);
        v342 = sub_23FC58A94();
        *(_QWORD *)(v342 + 16) = sub_23FC57844;
        *(_QWORD *)(v342 + 24) = v315;
        sub_23FC58D78();
        v343 = sub_23FC5A14C();
        *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v343);
        v344 = sub_23FC58AA0();
        sub_23FC59C28(v344);
        v345 = sub_23FC58AA0();
        sub_23FC5A4CC(v345);
        v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58A94();
        v66[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC586BC;
        v66[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v340;
        v346 = (_QWORD *)sub_23FC58A94();
        v346[2] = sub_23FC586C0;
        v346[3] = v66;
        v347 = sub_23FC58AA0();
        sub_23FC5AEC0(v347);
        v348 = sub_23FC58AA0();
        sub_23FC5BD44(v348);
        v349 = sub_23FC58A94();
        *(_QWORD *)(v349 + 16) = sub_23FC586CC;
        *(_QWORD *)(v349 + 24) = v342;
        v350 = sub_23FC58A94();
        *(_QWORD *)(v350 + 16) = sub_23FC586C0;
        *(_QWORD *)(v350 + 24) = v349;
        v351 = sub_23FC58AA0();
        sub_23FC5928C(v351);
        v352[4] = sub_23FC586E0;
        v352[5] = v338;
        v352[6] = sub_23FC586E0;
        v352[7] = v345;
        v352[8] = sub_23FC586D4;
        v352[9] = v346;
        v352[10] = sub_23FC586E0;
        v352[11] = v236;
        v352[12] = sub_23FC586E0;
        v352[13] = v66;
        v352[14] = sub_23FC586D4;
        v352[15] = v350;
        sub_23FC58F98();
        sub_23FC58D70();
        sub_23FC58D58();
        sub_23FC58D68();
        sub_23FC58D80();
        sub_23FC58C88();
        sub_23FC58D60();
        if (sub_23FC599FC((os_log_type_t)*(_DWORD *)(v3 - 176)))
        {
          *(_QWORD *)(v3 - 192) = v66;
          *(_QWORD *)(v3 - 184) = v236;
          v353 = sub_23FC58F88();
          v354 = sub_23FBFEFF4();
          v339[221] = 0;
          *(_QWORD *)(v3 - 256) = v354;
          v339[222] = v354;
          sub_23FC5C2A8();
          v339[220] = v353;
          v339[135] = sub_23FC586E0;
          v339[136] = v338;
          sub_23FC5F3A0();
          sub_23FC5AED8(v355, v356, v357);
          if (!v66)
          {
            sub_23FC58F00();
            v339[135] = sub_23FC586E0;
            v339[136] = v345;
            sub_23FC58AD0(v509, v501);
            sub_23FC58C64();
            v339[135] = sub_23FC586D4;
            v339[136] = v346;
            sub_23FC58AD0(v509, v501);
            sub_23FC58ADC();
            v339[135] = sub_23FC586E0;
            v339[136] = *(_QWORD *)(v3 - 184);
            sub_23FC58AD0(v509, v501);
            sub_23FC58AC8();
            v339[135] = sub_23FC586E0;
            v339[136] = *(_QWORD *)(v3 - 192);
            sub_23FC58AD0(v509, v501);
            sub_23FC58AC8();
            v339[135] = sub_23FC586D4;
            v339[136] = v350;
            sub_23FC58AD0(v509, v501);
            sub_23FC58AC0();
            sub_23FC5AFA0();
            sub_23FC5B6D0();
            v361 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work and be sent to client.";
            goto LABEL_97;
          }
LABEL_147:
          sub_23FC5A434(v66);
          return;
        }
        v362 = v339[427];
        goto LABEL_102;
      }
      sub_23FC59F80();
      v381 = sub_23FC58A94();
      *(_QWORD *)(v381 + 16) = sub_23FC576A8;
      *(_QWORD *)(v381 + 24) = v339;
      v382 = sub_23FC58AA0();
      sub_23FC5A560(v382);
      v383 = sub_23FC58A94();
      *(_QWORD *)(v383 + 16) = sub_23FC57844;
      *(_QWORD *)(v383 + 24) = v315;
      sub_23FC58D78();
      v384 = sub_23FC5A14C();
      *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v384);
      v385 = sub_23FC58AA0();
      sub_23FC59C28(v385);
      v345 = sub_23FC58AA0();
      sub_23FC5A4CC(v345);
      v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58A94();
      v66[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC586BC;
      v66[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v381;
      v346 = (_QWORD *)sub_23FC58A94();
      v346[2] = sub_23FC586C0;
      v346[3] = v66;
      v386 = sub_23FC58AA0();
      sub_23FC5AEC0(v386);
      v387 = sub_23FC58AA0();
      sub_23FC5BD44(v387);
      v388 = sub_23FC58A94();
      *(_QWORD *)(v388 + 16) = sub_23FC586CC;
      *(_QWORD *)(v388 + 24) = v383;
      v350 = sub_23FC58A94();
      *(_QWORD *)(v350 + 16) = sub_23FC586C0;
      *(_QWORD *)(v350 + 24) = v388;
      v389 = sub_23FC58AA0();
      sub_23FC5928C(v389);
      v390[4] = sub_23FC586E0;
      v390[5] = v338;
      v390[6] = sub_23FC586E0;
      v390[7] = v345;
      v390[8] = sub_23FC586D4;
      v390[9] = v346;
      v390[10] = sub_23FC586E0;
      v390[11] = v236;
      v390[12] = sub_23FC586E0;
      v390[13] = v66;
      v390[14] = sub_23FC586D4;
      v390[15] = v350;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC599FC((os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v66;
        *(_QWORD *)(v3 - 184) = v236;
        v391 = sub_23FC58F88();
        v392 = sub_23FBFEFF4();
        v339[217] = 0;
        *(_QWORD *)(v3 - 256) = v392;
        v339[218] = v392;
        sub_23FC5C2A8();
        v339[216] = v391;
        v339[139] = sub_23FC586E0;
        v339[140] = v338;
        sub_23FC5F3A0();
        sub_23FC5AED8(v393, v394, v395);
        if (v66)
          goto LABEL_147;
        sub_23FC58F00();
        v339[139] = sub_23FC586E0;
        v339[140] = v345;
        sub_23FC58AD0(v508, v502);
        sub_23FC58C64();
        v339[139] = sub_23FC586D4;
        v339[140] = v346;
        sub_23FC58AD0(v508, v502);
        sub_23FC58ADC();
        v339[139] = sub_23FC586E0;
        v339[140] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v508, v502);
        sub_23FC58AC8();
        v339[139] = sub_23FC586E0;
        v339[140] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v508, v502);
        sub_23FC58AC8();
        v339[139] = sub_23FC586D4;
        v339[140] = v350;
        sub_23FC58AD0(v508, v502);
        sub_23FC58AC0();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        v361 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work, but will not be sent to client.";
        goto LABEL_97;
      }
      v362 = v339[426];
    }
    else if ((*(_DWORD *)(v3 - 200) & 1) != 0)
    {
      sub_23FC59F80();
      v365 = sub_23FC58A94();
      *(_QWORD *)(v365 + 16) = sub_23FC576A8;
      *(_QWORD *)(v365 + 24) = v339;
      v366 = sub_23FC58AA0();
      sub_23FC5A560(v366);
      v367 = sub_23FC58A94();
      *(_QWORD *)(v367 + 16) = sub_23FC57844;
      *(_QWORD *)(v367 + 24) = v315;
      sub_23FC58D78();
      v368 = sub_23FC5A14C();
      *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v368);
      v369 = sub_23FC58AA0();
      sub_23FC59C28(v369);
      v345 = sub_23FC58AA0();
      sub_23FC5A4CC(v345);
      v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58A94();
      v66[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC586BC;
      v66[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v365;
      v346 = (_QWORD *)sub_23FC58A94();
      v346[2] = sub_23FC586C0;
      v346[3] = v66;
      v370 = sub_23FC58AA0();
      sub_23FC5AEC0(v370);
      v371 = sub_23FC58AA0();
      sub_23FC5BD44(v371);
      v372 = sub_23FC58A94();
      *(_QWORD *)(v372 + 16) = sub_23FC586CC;
      *(_QWORD *)(v372 + 24) = v367;
      v350 = sub_23FC58A94();
      *(_QWORD *)(v350 + 16) = sub_23FC586C0;
      *(_QWORD *)(v350 + 24) = v372;
      v373 = sub_23FC58AA0();
      sub_23FC5928C(v373);
      v374[4] = sub_23FC586E0;
      v374[5] = v338;
      v374[6] = sub_23FC586E0;
      v374[7] = v345;
      v374[8] = sub_23FC586D4;
      v374[9] = v346;
      v374[10] = sub_23FC586E0;
      v374[11] = v236;
      v374[12] = sub_23FC586E0;
      v374[13] = v66;
      v374[14] = sub_23FC586D4;
      v374[15] = v350;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC599FC((os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v66;
        *(_QWORD *)(v3 - 184) = v236;
        v375 = sub_23FC58F88();
        v376 = sub_23FBFEFF4();
        v339[213] = 0;
        *(_QWORD *)(v3 - 256) = v376;
        v339[214] = v376;
        sub_23FC5C2A8();
        v339[212] = v375;
        v339[141] = sub_23FC586E0;
        v339[142] = v338;
        sub_23FC5F3A0();
        sub_23FC5AED8(v377, v378, v379);
        if (v66)
          goto LABEL_147;
        sub_23FC58F00();
        v339[141] = sub_23FC586E0;
        v339[142] = v345;
        sub_23FC58AD0(v507, v503);
        sub_23FC58C64();
        v339[141] = sub_23FC586D4;
        v339[142] = v346;
        sub_23FC58AD0(v507, v503);
        sub_23FC58ADC();
        v339[141] = sub_23FC586E0;
        v339[142] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v507, v503);
        sub_23FC58AC8();
        v339[141] = sub_23FC586E0;
        v339[142] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v507, v503);
        sub_23FC58AC8();
        v339[141] = sub_23FC586D4;
        v339[142] = v350;
        sub_23FC58AD0(v507, v503);
        sub_23FC58AC0();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        v361 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work, but will be sent to client.";
LABEL_97:
        sub_23FC59250(v358, v359, v360, v361, *(uint8_t **)(v3 - 224));
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      v362 = v339[424];
    }
    else
    {
      sub_23FC59F80();
      v396 = sub_23FC58A94();
      *(_QWORD *)(v396 + 16) = sub_23FC576A8;
      *(_QWORD *)(v396 + 24) = v339;
      v397 = sub_23FC58AA0();
      sub_23FC5A560(v397);
      v398 = sub_23FC58A94();
      *(_QWORD *)(v398 + 16) = sub_23FC57844;
      *(_QWORD *)(v398 + 24) = v315;
      sub_23FC58D78();
      v399 = sub_23FC5A14C();
      *(_DWORD *)(v3 - 176) = sub_23FC5B89C(v399);
      v400 = sub_23FC58AA0();
      sub_23FC59C28(v400);
      v345 = sub_23FC58AA0();
      sub_23FC5A4CC(v345);
      v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC58A94();
      v66[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC586BC;
      v66[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v396;
      v346 = (_QWORD *)sub_23FC58A94();
      v346[2] = sub_23FC586C0;
      v346[3] = v66;
      v401 = sub_23FC58AA0();
      sub_23FC5AEC0(v401);
      v402 = sub_23FC58AA0();
      sub_23FC5BD44(v402);
      v403 = sub_23FC58A94();
      *(_QWORD *)(v403 + 16) = sub_23FC586CC;
      *(_QWORD *)(v403 + 24) = v398;
      v350 = sub_23FC58A94();
      *(_QWORD *)(v350 + 16) = sub_23FC586C0;
      *(_QWORD *)(v350 + 24) = v403;
      v404 = sub_23FC58AA0();
      sub_23FC5928C(v404);
      v405[4] = sub_23FC586E0;
      v405[5] = v338;
      v405[6] = sub_23FC586E0;
      v405[7] = v345;
      v405[8] = sub_23FC586D4;
      v405[9] = v346;
      v405[10] = sub_23FC586E0;
      v405[11] = v236;
      v405[12] = sub_23FC586E0;
      v405[13] = v66;
      v405[14] = sub_23FC586D4;
      v405[15] = v350;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC599FC((os_log_type_t)*(_DWORD *)(v3 - 176)))
      {
        *(_QWORD *)(v3 - 192) = v66;
        *(_QWORD *)(v3 - 184) = v236;
        v406 = sub_23FC58F88();
        v407 = sub_23FBFEFF4();
        v339[209] = 0;
        *(_QWORD *)(v3 - 256) = v407;
        v339[210] = v407;
        sub_23FC5C2A8();
        v339[208] = v406;
        v339[143] = sub_23FC586E0;
        v339[144] = v338;
        sub_23FC5AED8(v506, v505, v504);
        if (v66)
          goto LABEL_147;
        sub_23FC58F00();
        v339[143] = sub_23FC586E0;
        v339[144] = v345;
        sub_23FC58AD0(v506, v505);
        sub_23FC58C64();
        v339[143] = sub_23FC586D4;
        v339[144] = v346;
        sub_23FC58AD0(v506, v505);
        sub_23FC58ADC();
        v339[143] = sub_23FC586E0;
        v339[144] = *(_QWORD *)(v3 - 184);
        sub_23FC58AD0(v506, v505);
        sub_23FC58AC8();
        v339[143] = sub_23FC586E0;
        v339[144] = *(_QWORD *)(v3 - 192);
        sub_23FC58AD0(v506, v505);
        sub_23FC58AC8();
        v339[143] = sub_23FC586D4;
        v339[144] = v350;
        sub_23FC58AD0(v506, v505);
        sub_23FC58AC0();
        sub_23FC5AFA0();
        sub_23FC5B6D0();
        v361 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work or be sent to client.";
        goto LABEL_97;
      }
      v362 = v339[423];
    }
LABEL_102:
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58ADC();
    sub_23FC58C6C();
    sub_23FC58FA0();
    sub_23FC58AC0();

    sub_23FC5A808();
    v330 = (uint64_t)v339;
    v408 = sub_23FC5B24C();
    if (v408 != v409)
    {
      sub_23FC5D3D4();
      if (v410 != v36)
        goto LABEL_153;
      sub_23FC5D020();
      sub_23FC59120();
      if (v350 >= (uint64_t)v339)
      {
LABEL_154:
        __break(1u);
        JUMPOUT(0x23FC38DA0);
      }
      *(_QWORD *)(v3 - 192) = v339;
      do
      {
        v345 = *(_QWORD *)(v330 + 4080);
        v330 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 4072);
        v411 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 4056);
        *(_QWORD *)(v3 - 176) = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 4064);
        *(_QWORD *)(v3 - 168) = v411;
        sub_23FC5D8B4();
        *(_QWORD *)(v3 - 184) = v412;
        sub_23FC5EECC();
        *(_QWORD *)(v3 - 160) = v413;
        sub_23FC5A1AC(v556);
        sub_23FC5B8D8();
        sub_23FC5DAD4();
        v119 = (uint64_t)v66;
        sub_23FC5A09C();
        sub_23FC5A1AC(v559);
        sub_23FC5B194();
        sub_23FC5CC30();
        sub_23FC0F3AC(*(_QWORD *)(v3 - 184), (uint64_t)v346, qword_254346A10);
        sub_23FC5A1AC(v558);
        sub_23FC5BD94();
        sub_23FC5ACFC();
        v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 176);
        sub_23FC10108();
        sub_23FC5A1AC(v557);
        v362 = v414;
        sub_23FD74000();
        sub_23FC5ACFC();
        sub_23FC5EE74();
      }
      while (!v146);
      swift_endAccess();
    }
    sub_23FC5BB24();
    sub_23FC5E344();
    sub_23FC5F4A8();
    v415 = sub_23FD74B40();
    v416 = sub_23FC5BB14(v415);
    sub_23FC10110();
    if (v416)
    {
      v350 = 0;
      *(_QWORD *)(v3 - 184) = v362;
      do
      {
        v417 = sub_23FC5F360();
        sub_23FC5B844(v417);
        sub_23FC5C5B8(v560);
        v36 = __OFADD__(v350++, 1);
        if (v36)
        {
          __break(1u);
          JUMPOUT(0x23FC38840);
        }
        v418 = *(_QWORD *)(v330 + 4032);
        sub_23FC5AE94();
        sub_23FBFDE28(v419, v420);
        sub_23FBFDE40((_QWORD *)v416, *(_QWORD *)(v330 + 120));
        v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v418 + 16);
        v421 = sub_23FC10108();
        v416 = sub_23FC5F5BC(v421);
        sub_23FC595E0();
        if ((v416 & 1) == 0)
          goto LABEL_129;
        if ((*(_DWORD *)(v3 - 208) & 1) != 0)
        {
          v422 = *(_QWORD **)(v3 - 144);
          if ((*(_DWORD *)(v3 - 200) & 1) == 0)
          {
            v423 = *(_QWORD *)(v330 + 120);
            sub_23FC59268(*(_QWORD **)(v3 - 144));
            v424 = sub_23FC5B288();
            v416 = sub_23FC543D0(v416, v423, v424, v425);
            sub_23FC58D60();
            sub_23FC15A24();
            v422 = *(_QWORD **)(v3 - 144);
            if ((v416 & 1) != 0)
              goto LABEL_129;
          }
        }
        else
        {
          if (!*(_DWORD *)(v3 - 200))
            goto LABEL_129;
          v66 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 144);
          sub_23FC59268(v66);
          v426 = sub_23FC5B288();
          v416 = sub_23FC5D208(v426, v427);
          sub_23FC15A24();
          sub_23FC58D60();
          if ((v416 & 1) == 0)
            goto LABEL_129;
          sub_23FC5B844((uint64_t)v66);
          sub_23FBFD684(&qword_256F5E420);
          sub_23FC5B294();
          if (!sub_23FC5AA14())
            goto LABEL_129;
          swift_release();
          v422 = *(_QWORD **)(v3 - 144);
        }
        v428 = sub_23FC59268(v422);
        sub_23FC5CC88(v428, v429);
        v431 = v430;
        sub_23FC1002C();
        if ((v431 & 1) != 0)
        {
          v432 = sub_23FC5B24C();
          if (v432 != v433)
          {
            sub_23FC5F4E0();
            if (v410 == v36)
            {
              *(_QWORD *)(v3 - 176) = v434;
              *(_QWORD *)(v3 - 168) = v350;
              while (1)
              {
                if (v434 == v431)
                {
                  __break(1u);
                  JUMPOUT(0x23FC38524);
                }
                sub_23FC5DF48();
                sub_23FC59120();
                sub_23FC5BB04();
                sub_23FD73FB8();
                v436 = v435;
                sub_23FC595C4(v416, *(uint64_t (**)(uint64_t, uint64_t))(v345 + 8));
                sub_23FC5BC88();
                if ((v436 & 1) != 0)
                  break;
                sub_23FC5EE18();
                v437 = *(_QWORD **)(v3 - 144);
                sub_23FC59128(v437);
                sub_23FC5B094();
                sub_23FC59128(v437);
                v438 = sub_23FC5F0DC();
                v416 = v581;
                sub_23FCC4B38(v438, v439, v440, v441);
                v346 = (_QWORD *)sub_23FC59128(v437);
                v345 = v442;
                v350 = v582;
                sub_23FC59120();
                sub_23FC5CD18(v583);
                v431 = v443;
                v119 = v584;
                sub_23FC5F298();
                sub_23FC5AD30();
                sub_23FC5DA88(v584);
                sub_23FC5ACFC();
                sub_23FC5F508();
                sub_23FC5EDF0();
                if (v146)
                  goto LABEL_129;
              }
              swift_release();
              __break(1u);
LABEL_156:
              sub_23FC5B768();
              __break(1u);
              goto LABEL_157;
            }
            __break(1u);
LABEL_153:
            __break(1u);
            goto LABEL_154;
          }
        }
LABEL_129:
        _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(*(_QWORD *)(v3 - 144));
        v362 = *(_QWORD *)(v3 - 184);
      }
      while (v350 != sub_23FC5C5F0());
    }
    sub_23FC5CFE4();
    sub_23FC5AD9C();
    sub_23FC5B2FC();
    if (v146)
      v445 = 0;
    v580 = v444 | v445;
    if (sub_23FCB3EE8(v444 | v445))
    {
      v446 = *(_QWORD *)(*(_QWORD *)(v330 + 4032) + 16);
      v447 = sub_23FC5A09C();
      sub_23FC5EE38(v447);
      if (v66)
      {
        v448 = *(_QWORD *)(v330 + 2208);
        sub_23FC103E8();
        sub_23FC5A56C();
        sub_23FC58FB0();
        v449 = sub_23FC58A94();
        *(_QWORD *)(v449 + 16) = sub_23FC576A8;
        *(_QWORD *)(v449 + 24) = v448;
        v450 = sub_23FC58AA0();
        sub_23FC5DB98(v450);
        v451 = sub_23FC58A94();
        *(_QWORD *)(v451 + 16) = sub_23FC57844;
        *(_QWORD *)(v451 + 24) = v362;
        v452 = sub_23FC58AA0();
        *(_QWORD *)(v452 + 16) = v66;
        sub_23FC58CA8();
        sub_23FC091A4();
        *(_QWORD *)(v3 - 168) = sub_23FD72BE4();
        *(_DWORD *)(v3 - 176) = sub_23FD74F54();
        v453 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 152) = v453;
        sub_23FC5C254(v453);
        v454 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 184) = v454;
        sub_23FC5C00C(v454);
        v455 = sub_23FC58A94();
        *(_QWORD *)(v455 + 16) = sub_23FC586BC;
        *(_QWORD *)(v455 + 24) = v449;
        v456 = sub_23FC58A94();
        *(_QWORD *)(v456 + 16) = sub_23FC586C0;
        *(_QWORD *)(v456 + 24) = v455;
        v457 = sub_23FC58AA0();
        sub_23FC5F550(v457);
        v458 = sub_23FC58AA0();
        *(_QWORD *)(v3 - 160) = v458;
        *(_BYTE *)(v458 + 16) = (_BYTE)v66;
        v459 = sub_23FC58A94();
        *(_QWORD *)(v459 + 16) = sub_23FC586CC;
        *(_QWORD *)(v459 + 24) = v451;
        v460 = sub_23FC58A94();
        *(_QWORD *)(v460 + 16) = sub_23FC586C0;
        *(_QWORD *)(v460 + 24) = v459;
        v461 = sub_23FC58AA0();
        sub_23FC5AC94(v461);
        v462 = sub_23FC58AA0();
        sub_23FC5DBB8(v462);
        v463 = sub_23FC58A94();
        *(_QWORD *)(v463 + 16) = sub_23FC5770C;
        *(_QWORD *)(v463 + 24) = v452;
        v464 = (_QWORD *)sub_23FC58A94();
        v464[2] = sub_23FC586C4;
        v464[3] = v463;
        v465 = sub_23FC58A94();
        *(_QWORD *)(v465 + 16) = sub_23FC586C8;
        *(_QWORD *)(v465 + 24) = v464;
        v466 = sub_23FC58AA0();
        sub_23FC5B81C(v466);
        *(_QWORD *)(v467 + 32) = sub_23FC586E0;
        v363 = *(_QWORD *)(v3 - 160);
        v464[5] = *(_QWORD *)(v3 - 152);
        v464[6] = sub_23FC586E0;
        v468 = *(_QWORD *)(v3 - 184);
        v464[7] = v468;
        v464[8] = sub_23FC586D4;
        v464[9] = v456;
        v464[10] = sub_23FC586E0;
        v464[11] = v446;
        v464[12] = sub_23FC586E0;
        v464[13] = v363;
        v464[14] = sub_23FC586D4;
        v464[15] = v460;
        v464[16] = sub_23FC586E0;
        v464[17] = v461;
        v464[18] = sub_23FC586E0;
        v464[19] = v451;
        v464[20] = sub_23FC586D8;
        sub_23FC5CE40();
        sub_23FC58D80();
        *(_QWORD *)(v3 - 192) = v456;
        sub_23FC58D78();
        sub_23FC58D70();
        sub_23FC58D90();
        v469 = v460;
        sub_23FC58D68();
        v470 = v461;
        sub_23FC58CA8();
        v471 = v451;
        sub_23FC58D58();
        sub_23FC58C88();
        sub_23FC58D60();
        if (os_log_type_enabled(*(os_log_t *)(v3 - 168), (os_log_type_t)*(_DWORD *)(v3 - 176)))
        {
          v472 = v468;
          v473 = *(_QWORD *)(v3 - 192);
          *(_QWORD *)(v3 - 208) = v470;
          *(_QWORD *)(v3 - 200) = v446;
          *(_QWORD *)(v3 - 224) = v465;
          *(_QWORD *)(v3 - 216) = v471;
          v474 = (_WORD *)sub_23FC5A2EC();
          v475 = sub_23FBFEFF4();
          v476 = sub_23FBFEFF4();
          *(_QWORD *)(v330 + 1592) = v475;
          *(_QWORD *)(v330 + 1600) = v476;
          *(_QWORD *)(v3 - 256) = v474;
          *v474 = 770;
          v66 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v474 + 1);
          *(_QWORD *)(v330 + 1584) = v66;
          *(_QWORD *)(v330 + 1192) = sub_23FC586E0;
          *(_QWORD *)(v330 + 1200) = *(_QWORD *)(v3 - 152);
          sub_23FC5A094(v513, v512, v511, v510);
          if (!v66)
          {
            sub_23FC5D7E0();
            *(_QWORD *)(v330 + 1192) = sub_23FC586E0;
            *(_QWORD *)(v330 + 1200) = v472;
            sub_23FC58C90(v513, v512, v511);
            sub_23FC58CA0();
            *(_QWORD *)(v330 + 1192) = sub_23FC586D4;
            *(_QWORD *)(v330 + 1200) = v473;
            sub_23FC58C90(v513, v512, v511);
            sub_23FC58ADC();
            *(_QWORD *)(v330 + 1192) = sub_23FC586E0;
            *(_QWORD *)(v330 + 1200) = *(_QWORD *)(v3 - 200);
            sub_23FC58C90(v513, v512, v511);
            sub_23FC58CA0();
            *(_QWORD *)(v330 + 1192) = sub_23FC586E0;
            *(_QWORD *)(v330 + 1200) = *(_QWORD *)(v3 - 160);
            sub_23FC58C90(v513, v512, v511);
            sub_23FC58C6C();
            *(_QWORD *)(v330 + 1192) = sub_23FC586D4;
            *(_QWORD *)(v330 + 1200) = v469;
            sub_23FC58C90(v513, v512, v511);
            sub_23FC58AC8();
            *(_QWORD *)(v330 + 1192) = sub_23FC586E0;
            *(_QWORD *)(v330 + 1200) = *(_QWORD *)(v3 - 208);
            sub_23FC58C90(v513, v512, v511);
            sub_23FC58AC8();
            *(_QWORD *)(v330 + 1192) = sub_23FC586E0;
            *(_QWORD *)(v330 + 1200) = *(_QWORD *)(v3 - 216);
            sub_23FC58C90(v513, v512, v511);
            sub_23FC58AC8();
            v477 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5EDA8((uint64_t)sub_23FC586D8);
            sub_23FC58C90(v477, v512, v511);
            sub_23FC58ADC();
            sub_23FC5AFA0();
            sub_23FC10464(&dword_23FBF8000, *(NSObject **)(v3 - 168), v478, "[SessionCoordinator %s] | [TX %s] Failed to encode to proto data for debugger: %@", *(uint8_t **)(v3 - 256));
            sub_23FBFD684(&qword_254346A30);
            sub_23FBFF10C();
            sub_23FBFEFA0();
          }
          goto LABEL_147;
        }
        v362 = *(_QWORD *)(v330 + 3400);
        v493 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 3272);
        v494 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 3264);
        sub_23FC5B2A0();
        sub_23FC5D7E0();
        sub_23FC58FA0();
        sub_23FC5BFC0();
        sub_23FC58C64();
        sub_23FC5B04C();
        sub_23FC58AC8();
        sub_23FC58C6C();
        sub_23FC58AE4();
        sub_23FC58AC0();

        v492 = *(void (**)(uint64_t, uint64_t))(v493 + 8);
        v330 = *(_QWORD *)(v3 - 136);
        v490 = v362;
        v491 = v494;
      }
      else
      {
        sub_23FC5F09C();
        *(_DWORD *)(v3 - 176) = v482;
        v483 = *(_QWORD *)(v330 + 2968);
        *(_QWORD *)(v3 - 192) = v484;
        *(_QWORD *)(v3 - 184) = v483;
        v485 = *(_QWORD *)(v330 + 2952);
        *(_QWORD *)(v3 - 160) = *(_QWORD *)(v330 + 2960);
        *(_QWORD *)(v3 - 152) = v485;
        sub_23FC5E7D8();
        *(_QWORD *)(v3 - 200) = v486;
        *(_QWORD *)(v3 - 168) = *(_QWORD *)(v330 + 2192);
        sub_23FC5A56C();
        sub_23FC5A09C();
        v330 = sub_23FC5CC10((uint64_t)sub_23FCB3EF8);
        v363 = v487;
        sub_23FC5A56C();
        sub_23FC5B564();
        v488 = sub_23FC5D408();
        sub_23FC0F3AC(v488, v489, qword_254346A10);
        sub_23FC5C350();
        (*(void (**)(_QWORD *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 216) + 104))(v346, *(unsigned int *)(v3 - 176), *(_QWORD *)(v3 - 200));
        sub_23FC5B814();
        sub_23FBFD684(&qword_256F5E378);
        v362 = *(_QWORD *)(v3 - 184);
        sub_23FD74E1C();
        v490 = sub_23FC5D9B8();
      }
      v492(v490, v491);
      *(_QWORD *)(v3 - 152) = 0;
    }
    else
    {
      sub_23FC5ADDC();
      sub_23FBFD684(&qword_256F5E498);
      v479 = sub_23FC5AA90();
      sub_23FC0F3AC(v479, v480, qword_254346A10);
      *v346 = v119;
      v346[1] = v350;
      v363 = *(_QWORD *)(v330 + 1552);
      *(_QWORD *)(v362 + v345) = v363;
      sub_23FC5AA0C();
      sub_23FC10108();
      sub_23FC5AAE8();
      v481 = sub_23FC5F434();
      sub_23FC50A38(v481, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC55E4C);
      sub_23FC5806C(v362, type metadata accessor for SessionCoordinatorCommand);
    }
    sub_23FC5B6B8();
    if (v146)
    {
      sub_23FC59474();
      v363 = v495;
      sub_23FC103E8();
      sub_23FC5A2C4();
      sub_23FC5A2D8();
      sub_23FC5B224();
      sub_23FBFD684(&qword_256F5E378);
      v362 = *(_QWORD *)(v3 - 184);
      sub_23FC5B2A8();
      sub_23FC5B8F0();
      sub_23FC5B550();
    }
    else
    {
      sub_23FC103E8();
      sub_23FC58AC8();
    }
    v496 = sub_23FC5AAC8();
    sub_23FC5B280(v496);
    sub_23FC5806C(v363, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
    sub_23FC5DEB4();
    sub_23FC58CA0();
    sub_23FC58AC8();
LABEL_146:
    sub_23FC5ED3C();
    *(_DWORD *)(v330 + 4280) = v580;
    *(_DWORD *)(v330 + 4276) = *(_DWORD *)(v3 - 256);
    *(_DWORD *)(v330 + 4272) = v585;
    *(_QWORD *)(v330 + 3960) = *(_QWORD *)(v3 - 152);
    sub_23FC5D198();
    sub_23FC50264(v116);
    sub_23FC100EC(v362, 1, v363);
    if (!v146)
      JUMPOUT(0x23FC2DCA0);
    JUMPOUT(0x23FC2D7B8);
  }
  v497 = v117[490];
  v498 = *(uint64_t **)(v3 - 216);
  sub_23FC59120();
  v499 = *v498;
  sub_23FC58D78();
  sub_23FC5AAE8();
  v500 = (_QWORD *)sub_23FC5E748();
  v117[512] = v500;
  *v500 = v117;
  v500[1] = sub_23FC38DEC;
  sub_23FC5A46C((uint64_t)v66 + v497, v499);
}

uint64_t sub_23FC38DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23FC5F47C();
  *v4 = *v3;
  *(_QWORD *)(v2 + 4104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 4112) = v0;
  return sub_23FC5A19C();
}

void sub_23FC38E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  NSObject *v43;
  os_log_type_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  void *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  os_log_type_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint8_t *v95;
  uint64_t v96;
  void *v97;
  NSObject *v98;
  os_log_type_t v99;
  const char *v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint8_t *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  char v145;
  BOOL v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint8_t *v195;
  uint64_t v196;
  uint64_t (**v197)(uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t (**v199)(uint64_t, uint64_t, uint64_t);
  uint64_t v200;
  uint64_t (**v201)(uint64_t, uint64_t, uint64_t);
  void *v202;
  NSObject *v203;
  os_log_type_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t (**v228)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v229)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v230)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v231)(uint64_t, uint64_t, uint64_t);
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t (**v240)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v241)(uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t (**v245)(uint64_t, uint64_t, uint64_t);
  uint64_t v246;
  uint64_t v247;
  uint64_t (**v248)(uint64_t, uint64_t, uint64_t);
  uint64_t v249;
  int v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  __int128 *v256;
  uint8_t *oslog;
  uint8_t *osloga;
  char v259;
  uint8_t *v260;
  uint8_t *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  os_log_type_t v266;
  os_log_type_t v267;
  NSObject *v268;
  os_log_type_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _BYTE *v273;
  NSObject *v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;

  sub_23FC5ACE0();
  v3 = (_QWORD *)v0;
  v256 = (__int128 *)(v0 + 56);
  v276 = (_QWORD *)(v0 + 96);
  v255 = v0 + 176;
  v254 = v0 + 272;
  v253 = v0 + 304;
  v252 = v0 + 336;
  v272 = v0 + 400;
  v251 = v0 + 432;
  v4 = (_BYTE *)(v0 + 728);
  v248 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v245 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
  v241 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  v231 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1080);
  v230 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1112);
  v229 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1128);
  v228 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1144);
  v240 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1256);
  v239 = v0 + 1480;
  v238 = v0 + 1488;
  v237 = v0 + 1496;
  v233 = v0 + 1592;
  v232 = v0 + 1600;
  v249 = v0 + 1624;
  v227 = v0 + 1664;
  v226 = v0 + 1672;
  v225 = v0 + 1680;
  v224 = v0 + 1696;
  v223 = v0 + 1704;
  v222 = v0 + 1712;
  v221 = v0 + 1728;
  v220 = v0 + 1736;
  v219 = v0 + 1744;
  v218 = v0 + 1760;
  v217 = v0 + 1768;
  v216 = v0 + 1776;
  v236 = v0 + 1792;
  v235 = v0 + 1800;
  v234 = v0 + 1808;
  v244 = v0 + 1824;
  v243 = v0 + 1832;
  v242 = v0 + 1840;
  v247 = v0 + 1856;
  v5 = v0 + 1864;
  v6 = *(_QWORD *)(v0 + 4112);
  v7 = *(_QWORD *)(v0 + 4032);
  swift_release();
  *(_QWORD *)(v7 + 16) = v6;
  swift_bridgeObjectRelease();
  sub_23FC5EEEC();
  v8 = v3[513];
  v279 = v3;
  v246 = v5;
  sub_23FC5EFDC();
  sub_23FC59120();
  v9 = sub_23FC5AFCC();
  LOBYTE(v7) = sub_23FC18778(v9);
  sub_23FC1002C();
  if ((v7 & 1) != 0)
  {
    HIDWORD(v265) = HIDWORD(v8);
    v10 = v3[276];
    sub_23FC58FB0();
    v11 = sub_23FC58A94();
    *(_QWORD *)(v11 + 16) = sub_23FC576A8;
    *(_QWORD *)(v11 + 24) = v10;
    v12 = sub_23FC58AA0();
    sub_23FC5F084(v12);
    v13 = sub_23FC58A94();
    *(_QWORD *)(v13 + 16) = sub_23FC57844;
    *(_QWORD *)(v13 + 24) = v4;
    sub_23FC58C88();
    v273 = (_BYTE *)sub_23FD72BE4();
    LODWORD(v268) = sub_23FD74F3C();
    v3 = (_QWORD *)sub_23FC58AA0();
    sub_23FC59D6C((uint64_t)v3);
    v14 = sub_23FC58AA0();
    sub_23FC5A4CC(v14);
    v15 = sub_23FC58A94();
    *(_QWORD *)(v15 + 16) = sub_23FC586BC;
    *(_QWORD *)(v15 + 24) = v11;
    v2 = sub_23FC58A94();
    *(_QWORD *)(v2 + 16) = sub_23FC586C0;
    *(_QWORD *)(v2 + 24) = v15;
    v16 = sub_23FC58AA0();
    sub_23FC5E7AC(v16);
    v5 = sub_23FC58AA0();
    *(_BYTE *)(v5 + 16) = (_BYTE)v4;
    v4 = v273;
    v17 = sub_23FC58A94();
    *(_QWORD *)(v17 + 16) = sub_23FC586CC;
    *(_QWORD *)(v17 + 24) = v13;
    v1 = sub_23FC58A94();
    *(_QWORD *)(v1 + 16) = sub_23FC586C0;
    *(_QWORD *)(v1 + 24) = v17;
    sub_23FBFD684(&qword_256F5E480);
    v18 = sub_23FC58AA0();
    sub_23FC59258(v18);
    v19[4] = sub_23FC586E0;
    v19[5] = v3;
    v19[6] = sub_23FC586E0;
    v19[7] = v14;
    v19[8] = sub_23FC586D4;
    v19[9] = v2;
    v19[10] = sub_23FC586E0;
    v19[11] = v8;
    v19[12] = sub_23FC586E0;
    v19[13] = v5;
    v19[14] = sub_23FC586D4;
    v19[15] = v1;
    sub_23FC58F98();
    sub_23FC58D58();
    sub_23FC58D70();
    sub_23FC58D80();
    sub_23FC58D68();
    sub_23FC58C88();
    sub_23FC58D60();
    if (sub_23FC599FC((os_log_type_t)v268))
    {
      v20 = v8;
      v21 = (_QWORD *)sub_23FC58F88();
      v22 = sub_23FBFEFF4();
      sub_23FC5C560(v22);
      sub_23FC5EC94(v248, v247, v246);
      if (!v21)
      {
        sub_23FC58F00();
        v279[127] = sub_23FC586E0;
        v279[128] = v14;
        sub_23FC59DC8();
        sub_23FC58CA0();
        v279[127] = sub_23FC586D4;
        v279[128] = v2;
        sub_23FC59DC8();
        sub_23FC58C64();
        v279[127] = sub_23FC586E0;
        v279[128] = v20;
        sub_23FC59DC8();
        sub_23FC101F4();
        v279[127] = sub_23FC586E0;
        v279[128] = v5;
        sub_23FC59DC8();
        sub_23FC58C64();
        v279[127] = sub_23FC586D4;
        v279[128] = v1;
        sub_23FC59DC8();
        sub_23FC58AC0();
        sub_23FC5BF60();
        sub_23FC5F118();
        sub_23FC59250(v23, v24, v25, "[SessionCoordinator %s] | [TX %s] Transaction is advisory.", v261);
        swift_arrayDestroy();
        sub_23FBFEFA0();
      }
      goto LABEL_86;
    }
    sub_23FC58F00();
    sub_23FC58ADC();
    sub_23FC58C64();
    sub_23FC58FA0();
    sub_23FC58C6C();
    sub_23FC58AC0();

    sub_23FC5A810();
    sub_23FC5DE9C();
  }
  else
  {
    sub_23FC5ED28();
    LODWORD(v260) = v26;
  }
  v27 = *(_QWORD *)(v3[504] + 16);
  v28 = sub_23FC5AFCC();
  v29 = sub_23FC17D20(v28);
  sub_23FC1002C();
  v274 = v8;
  if ((v29 & 1) != 0)
  {
    v30 = v3[276];
    sub_23FC58FB0();
    v31 = sub_23FC58A94();
    *(_QWORD *)(v31 + 16) = sub_23FC576A8;
    *(_QWORD *)(v31 + 24) = v30;
    v32 = sub_23FC58AA0();
    sub_23FC5A560(v32);
    v33 = sub_23FC58A94();
    *(_QWORD *)(v33 + 16) = sub_23FC57844;
    *(_QWORD *)(v33 + 24) = v1;
    sub_23FC58D80();
    v268 = sub_23FD72BE4();
    v266 = sub_23FD74F3C();
    v3 = (_QWORD *)sub_23FC58AA0();
    sub_23FC59D6C((uint64_t)v3);
    v34 = sub_23FC58AA0();
    sub_23FC5B1B4(v34);
    v35 = sub_23FC58A94();
    *(_QWORD *)(v35 + 16) = sub_23FC586BC;
    *(_QWORD *)(v35 + 24) = v31;
    v36 = sub_23FC58A94();
    *(_QWORD *)(v36 + 16) = sub_23FC586C0;
    *(_QWORD *)(v36 + 24) = v35;
    v37 = sub_23FC58AA0();
    sub_23FC5C6A8(v37);
    v4 = (_BYTE *)sub_23FC58AA0();
    v4[16] = v1;
    v1 = (uint64_t)v268;
    v38 = sub_23FC58A94();
    *(_QWORD *)(v38 + 16) = sub_23FC586CC;
    *(_QWORD *)(v38 + 24) = v33;
    v8 = sub_23FC58A94();
    *(_QWORD *)(v8 + 16) = sub_23FC586C0;
    *(_QWORD *)(v8 + 24) = v38;
    sub_23FBFD684(&qword_256F5E480);
    v39 = sub_23FC58AA0();
    sub_23FC59258(v39);
    v40[4] = sub_23FC586E0;
    v40[5] = v3;
    v40[6] = sub_23FC586E0;
    v40[7] = v2;
    v40[8] = sub_23FC586D4;
    v40[9] = v36;
    v40[10] = sub_23FC586E0;
    v40[11] = v5;
    v40[12] = sub_23FC586E0;
    v40[13] = v4;
    v40[14] = sub_23FC586D4;
    v40[15] = v8;
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58CA8();
    sub_23FC58D80();
    sub_23FC58D60();
    if (sub_23FC5BF54(v266))
    {
      v262 = v8;
      v21 = (_QWORD *)sub_23FC58F88();
      v41 = sub_23FBFEFF4();
      sub_23FC5C1B4(v41);
      sub_23FC59BF8(v245, v244, v243, v242);
      if (!v21)
      {
        sub_23FC58F00();
        v279[131] = sub_23FC586E0;
        v279[132] = v2;
        sub_23FC58C90(v245, v244, v243);
        sub_23FC58C64();
        v279[131] = sub_23FC586D4;
        v279[132] = v36;
        sub_23FC58C90(v245, v244, v243);
        sub_23FC58ADC();
        v279[131] = sub_23FC586E0;
        v279[132] = v5;
        sub_23FC58C90(v245, v244, v243);
        sub_23FC101F4();
        v279[131] = sub_23FC586E0;
        v279[132] = v4;
        sub_23FC58C90(v245, v244, v243);
        sub_23FC58ADC();
        v279[131] = sub_23FC586D4;
        v279[132] = v262;
        sub_23FC58C90(v245, v244, v243);
        sub_23FC58ADC();
        sub_23FC5B218();
        sub_23FC5B468();
        sub_23FC59250(v42, v43, v44, "[SessionCoordinator %s] | [TX %s] Transaction is work-allowing advisory.", v260);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_86;
    }
    LOBYTE(v27) = (_BYTE)v279;
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58ADC();
    sub_23FC58C6C();
    sub_23FC58AE4();
    sub_23FC58FA0();

    sub_23FC5A810();
    sub_23FC5DA90();
  }
  sub_23FC59A08();
  sub_23FC5D878();
  sub_23FC5CC7C();
  sub_23FC5CC24();
  sub_23FC5BB44();
  if ((v27 & 1) == 0)
  {
    sub_23FC5B474();
    sub_23FC58FB0();
    v65 = sub_23FC58A94();
    *(_QWORD *)(v65 + 16) = sub_23FC576A8;
    *(_QWORD *)(v65 + 24) = v8;
    v66 = sub_23FC58AA0();
    sub_23FC5A560(v66);
    v67 = sub_23FC58A94();
    *(_QWORD *)(v67 + 16) = sub_23FC57844;
    *(_QWORD *)(v67 + 24) = v1;
    sub_23FC58D80();
    v68 = sub_23FD72BE4();
    LODWORD(v265) = sub_23FC5B510(v68);
    v69 = sub_23FC58AA0();
    sub_23FC5AA24(v69);
    v70 = sub_23FC58AA0();
    *(_BYTE *)(v70 + 16) = 8;
    v71 = sub_23FC58A94();
    *(_QWORD *)(v71 + 16) = sub_23FC586BC;
    *(_QWORD *)(v71 + 24) = v65;
    v72 = sub_23FC58A94();
    *(_QWORD *)(v72 + 16) = sub_23FC586C0;
    *(_QWORD *)(v72 + 24) = v71;
    v73 = sub_23FC58AA0();
    sub_23FC5AEC0(v73);
    v74 = sub_23FC58AA0();
    *(_BYTE *)(v74 + 16) = 8;
    v75 = sub_23FC58A94();
    *(_QWORD *)(v75 + 16) = sub_23FC586CC;
    *(_QWORD *)(v75 + 24) = v67;
    v76 = sub_23FC58A94();
    *(_QWORD *)(v76 + 16) = sub_23FC586C0;
    *(_QWORD *)(v76 + 24) = v75;
    sub_23FBFD684(&qword_256F5E480);
    v77 = sub_23FC58AA0();
    sub_23FC59258(v77);
    v21 = sub_23FC586E0;
    v78[4] = sub_23FC586E0;
    v78[5] = v69;
    v78[6] = sub_23FC586E0;
    v78[7] = v70;
    v78[8] = sub_23FC586D4;
    v78[9] = v72;
    v78[10] = sub_23FC586E0;
    v78[11] = v5;
    v78[12] = sub_23FC586E0;
    v78[13] = v74;
    v78[14] = sub_23FC586D4;
    v78[15] = v76;
    sub_23FC58D78();
    sub_23FC58CA8();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58F98();
    sub_23FC58C88();
    sub_23FC58D60();
    if (sub_23FC5BDA4(v268, (os_log_type_t)v265))
    {
      sub_23FC58F88();
      v79 = sub_23FBFEFF4();
      sub_23FC5C188(v79);
      sub_23FC59BF8(v240, v239, v238, v237);
      if (!sub_23FC586E0)
      {
        sub_23FC58AC8();
        v279[157] = sub_23FC586E0;
        v279[158] = v70;
        sub_23FC58C90(v240, v239, v238);
        sub_23FC58C64();
        v279[157] = sub_23FC586D4;
        v279[158] = v72;
        sub_23FC58C90(v240, v239, v238);
        sub_23FC58ADC();
        v279[157] = sub_23FC586E0;
        v279[158] = v5;
        sub_23FC58C90(v240, v239, v238);
        sub_23FC101F4();
        v279[157] = sub_23FC586E0;
        v279[158] = v74;
        sub_23FC58C90(v240, v239, v238);
        sub_23FC58ADC();
        v279[157] = sub_23FC586D4;
        v279[158] = v76;
        sub_23FC58C90(v240, v239, v238);
        sub_23FC58ADC();
        sub_23FC5B218();
        sub_23FC59250(&dword_23FBF8000, v268, v80, "[SessionCoordinator %s] | [TX %s] Transaction postcondition FAILED. It will be skipped.", v260);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_86;
    }
    v101 = v279[408];
    sub_23FC58AC8();
    sub_23FC58AE4();
    sub_23FC58ADC();
    sub_23FC58C6C();
    sub_23FC58F00();
    sub_23FC58AC0();

    sub_23FC5A810();
    sub_23FC5B230();
    if (v102)
    {
      sub_23FC594B8();
      v101 = v103;
      sub_23FC103E8();
      sub_23FC5A2C4();
      sub_23FC5A2D8();
      sub_23FC5B224();
      sub_23FBFD684(&qword_256F5E378);
      v67 = v264;
      sub_23FC5B2A8();
      sub_23FC5B768();
      sub_23FC5B0DC(v265);
    }
    else
    {
      sub_23FC103E8();
      sub_23FC58AC8();
    }
    v116 = sub_23FC5AAC8();
    sub_23FC584B0(v116, qword_254346A10);
    sub_23FC5806C(v101, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
    sub_23FC58CA0();
    sub_23FC58AC8();
    v117 = *(_DWORD *)(v74 + 4280);
    goto LABEL_84;
  }
  v45 = (_QWORD *)v3[429];
  v46 = v3[276];
  sub_23FC58FB0();
  v47 = sub_23FC58A94();
  *(_QWORD *)(v47 + 16) = sub_23FC576A8;
  *(_QWORD *)(v47 + 24) = v46;
  v48 = sub_23FC58AA0();
  sub_23FC5A560(v48);
  v49 = sub_23FC58A94();
  *(_QWORD *)(v49 + 16) = sub_23FC57844;
  *(_QWORD *)(v49 + 24) = v1;
  sub_23FC58D80();
  v50 = sub_23FD72BE4();
  v267 = sub_23FC5B510(v50);
  v51 = v3;
  v52 = sub_23FC58AA0();
  sub_23FC59D6C(v52);
  v53 = sub_23FC58AA0();
  sub_23FC5B1B4(v53);
  v21 = (_QWORD *)sub_23FC58A94();
  v21[2] = sub_23FC586BC;
  v21[3] = v47;
  v54 = sub_23FC58A94();
  *(_QWORD *)(v54 + 16) = sub_23FC586C0;
  *(_QWORD *)(v54 + 24) = v21;
  v55 = sub_23FC58AA0();
  sub_23FC5B71C(v55);
  v56 = sub_23FC58AA0();
  sub_23FC5E784(v56);
  v57 = sub_23FC58A94();
  *(_QWORD *)(v57 + 16) = sub_23FC586CC;
  *(_QWORD *)(v57 + 24) = v49;
  v58 = sub_23FC58A94();
  *(_QWORD *)(v58 + 16) = sub_23FC586C0;
  *(_QWORD *)(v58 + 24) = v57;
  sub_23FBFD684(&qword_256F5E480);
  v59 = sub_23FC58AA0();
  sub_23FC59258(v59);
  v60[4] = sub_23FC586E0;
  v60[5] = v52;
  v60[6] = sub_23FC586E0;
  v60[7] = v2;
  v60[8] = sub_23FC586D4;
  v60[9] = v54;
  v60[10] = sub_23FC586E0;
  v60[11] = v4;
  v60[12] = sub_23FC586E0;
  v60[13] = v21;
  v60[14] = sub_23FC586D4;
  v60[15] = v58;
  sub_23FC58F98();
  sub_23FC58D70();
  sub_23FC58D58();
  sub_23FC58CA8();
  sub_23FC58D80();
  sub_23FC58C88();
  sub_23FC58D60();
  if (sub_23FC5A8C0(v268, v267))
  {
    sub_23FC58F88();
    v61 = sub_23FBFEFF4();
    sub_23FC5C370(v61);
    sub_23FC59BF8(v241, v236, v235, v234);
    if (!v21)
    {
      sub_23FC58F00();
      v51[133] = sub_23FC586E0;
      v51[134] = v2;
      sub_23FC59DA0();
      sub_23FC58C64();
      v51[133] = sub_23FC586D4;
      v51[134] = v54;
      sub_23FC59DA0();
      sub_23FC58ADC();
      v51[133] = sub_23FC586E0;
      v51[134] = v4;
      sub_23FC59DA0();
      sub_23FC58C6C();
      v51[133] = sub_23FC586E0;
      v51[134] = 0;
      sub_23FC59DA0();
      sub_23FC58C6C();
      v51[133] = sub_23FC586D4;
      v51[134] = v58;
      sub_23FC59DA0();
      sub_23FC58AC0();
      sub_23FC5B218();
      sub_23FC5B468();
      sub_23FC59250(v62, v63, v64, "[SessionCoordinator %s] | [TX %s] Transaction postcondition passed.", oslog);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    goto LABEL_86;
  }
  sub_23FC58F00();
  sub_23FC58C64();
  sub_23FC58ADC();
  sub_23FC58AE4();
  sub_23FC58FA0();
  sub_23FC58AC0();

  sub_23FC5A810();
  sub_23FC5EFC0((uint64_t)v274);
  if (!v81)
  {
    if ((v260 & 1) != 0)
    {
      sub_23FC59F80();
      v104 = sub_23FC58A94();
      *(_QWORD *)(v104 + 16) = sub_23FC576A8;
      *(_QWORD *)(v104 + 24) = v45;
      v105 = sub_23FC58AA0();
      sub_23FC5A560(v105);
      v106 = sub_23FC58A94();
      *(_QWORD *)(v106 + 16) = sub_23FC57844;
      *(_QWORD *)(v106 + 24) = v58;
      sub_23FC58D78();
      v107 = sub_23FC5A14C();
      LODWORD(v265) = sub_23FC5B510(v107);
      v108 = sub_23FC58AA0();
      sub_23FC59C28(v108);
      v87 = sub_23FC58AA0();
      sub_23FC5A4CC(v87);
      v21 = (_QWORD *)sub_23FC58A94();
      v21[2] = sub_23FC586BC;
      v21[3] = v104;
      v88 = (_QWORD *)sub_23FC58A94();
      v88[2] = sub_23FC586C0;
      v88[3] = v21;
      v109 = sub_23FC58AA0();
      sub_23FC5AEC0(v109);
      v110 = sub_23FC58AA0();
      sub_23FC5B790(v110);
      v111 = sub_23FC58A94();
      *(_QWORD *)(v111 + 16) = sub_23FC586CC;
      *(_QWORD *)(v111 + 24) = v106;
      v92 = sub_23FC58A94();
      *(_QWORD *)(v92 + 16) = sub_23FC586C0;
      *(_QWORD *)(v92 + 24) = v111;
      v112 = sub_23FC58AA0();
      sub_23FC59258(v112);
      v113[4] = sub_23FC586E0;
      v113[5] = v51;
      v113[6] = sub_23FC586E0;
      v113[7] = v87;
      v113[8] = sub_23FC586D4;
      v113[9] = v88;
      v113[10] = sub_23FC586E0;
      v113[11] = v51;
      v113[12] = sub_23FC586E0;
      v113[13] = v21;
      v113[14] = sub_23FC586D4;
      v113[15] = v92;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (!sub_23FC599FC((os_log_type_t)v265))
      {
        v67 = v45[424];
        goto LABEL_44;
      }
      v114 = (uint8_t *)sub_23FC58F88();
      v115 = sub_23FBFEFF4();
      v45[213] = 0;
      v45[214] = v115;
      osloga = v114;
      *(_WORD *)v114 = 514;
      v45[212] = v114 + 2;
      v45[141] = sub_23FC586E0;
      v45[142] = v51;
      sub_23FC59BF8(v229, v224, v223, v222);
      if (v21)
        goto LABEL_86;
      sub_23FC58F00();
      v45[141] = sub_23FC586E0;
      v45[142] = v87;
      sub_23FC58AD0(v229, v224);
      sub_23FC58C64();
      v45[141] = sub_23FC586D4;
      v45[142] = v88;
      sub_23FC58AD0(v229, v224);
      sub_23FC58ADC();
      v45[141] = sub_23FC586E0;
      v45[142] = v51;
      sub_23FC58AD0(v229, v224);
      sub_23FC58AC8();
      v45[141] = sub_23FC586E0;
      v45[142] = 0;
      sub_23FC58AD0(v229, v224);
      sub_23FC58AC8();
      v45[141] = sub_23FC586D4;
      v45[142] = v92;
      sub_23FC58AD0(v229, v224);
      sub_23FC58AC0();
      sub_23FC5B218();
      sub_23FC5B468();
      v100 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work, but will be sent to client.";
    }
    else
    {
      sub_23FC59F80();
      v130 = sub_23FC58A94();
      *(_QWORD *)(v130 + 16) = sub_23FC576A8;
      *(_QWORD *)(v130 + 24) = v45;
      v131 = sub_23FC58AA0();
      sub_23FC5A560(v131);
      v132 = sub_23FC58A94();
      *(_QWORD *)(v132 + 16) = sub_23FC57844;
      *(_QWORD *)(v132 + 24) = v58;
      sub_23FC58D78();
      v133 = sub_23FC5A14C();
      LODWORD(v265) = sub_23FC5B510(v133);
      v134 = sub_23FC58AA0();
      sub_23FC59C28(v134);
      v87 = sub_23FC58AA0();
      sub_23FC5A4CC(v87);
      v21 = (_QWORD *)sub_23FC58A94();
      v21[2] = sub_23FC586BC;
      v21[3] = v130;
      v88 = (_QWORD *)sub_23FC58A94();
      v88[2] = sub_23FC586C0;
      v88[3] = v21;
      v135 = sub_23FC58AA0();
      sub_23FC5AEC0(v135);
      v136 = sub_23FC58AA0();
      sub_23FC5B790(v136);
      v137 = sub_23FC58A94();
      *(_QWORD *)(v137 + 16) = sub_23FC586CC;
      *(_QWORD *)(v137 + 24) = v132;
      v92 = sub_23FC58A94();
      *(_QWORD *)(v92 + 16) = sub_23FC586C0;
      *(_QWORD *)(v92 + 24) = v137;
      v138 = sub_23FC58AA0();
      sub_23FC59258(v138);
      v139[4] = sub_23FC586E0;
      v139[5] = v51;
      v139[6] = sub_23FC586E0;
      v139[7] = v87;
      v139[8] = sub_23FC586D4;
      v139[9] = v88;
      v139[10] = sub_23FC586E0;
      v139[11] = v51;
      v139[12] = sub_23FC586E0;
      v139[13] = v21;
      v139[14] = sub_23FC586D4;
      v139[15] = v92;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (!sub_23FC599FC((os_log_type_t)v265))
      {
        v67 = v45[423];
        goto LABEL_44;
      }
      v140 = (uint8_t *)sub_23FC58F88();
      v141 = sub_23FBFEFF4();
      v45[209] = 0;
      v45[210] = v141;
      osloga = v140;
      *(_WORD *)v140 = 514;
      v45[208] = v140 + 2;
      v45[143] = sub_23FC586E0;
      v45[144] = v51;
      sub_23FC59BF8(v228, v227, v226, v225);
      if (v21)
        goto LABEL_86;
      sub_23FC58F00();
      v45[143] = sub_23FC586E0;
      v45[144] = v87;
      sub_23FC58AD0(v228, v227);
      sub_23FC58C64();
      v45[143] = sub_23FC586D4;
      v45[144] = v88;
      sub_23FC58AD0(v228, v227);
      sub_23FC58ADC();
      v45[143] = sub_23FC586E0;
      v45[144] = v51;
      sub_23FC58AD0(v228, v227);
      sub_23FC58AC8();
      v45[143] = sub_23FC586E0;
      v45[144] = 0;
      sub_23FC58AD0(v228, v227);
      sub_23FC58AC8();
      v45[143] = sub_23FC586D4;
      v45[144] = v92;
      sub_23FC58AD0(v228, v227);
      sub_23FC58AC0();
      sub_23FC5B218();
      sub_23FC5B468();
      v100 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work or be sent to client.";
    }
LABEL_39:
    sub_23FC59250(v97, v98, v99, v100, osloga);
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  if ((v260 & 1) == 0)
  {
    sub_23FC59F80();
    v118 = sub_23FC58A94();
    *(_QWORD *)(v118 + 16) = sub_23FC576A8;
    *(_QWORD *)(v118 + 24) = v45;
    v119 = sub_23FC58AA0();
    sub_23FC5A560(v119);
    v120 = sub_23FC58A94();
    *(_QWORD *)(v120 + 16) = sub_23FC57844;
    *(_QWORD *)(v120 + 24) = v58;
    sub_23FC58D78();
    v121 = sub_23FC5A14C();
    LODWORD(v265) = sub_23FC5B510(v121);
    v122 = sub_23FC58AA0();
    sub_23FC59C28(v122);
    v87 = sub_23FC58AA0();
    sub_23FC5A4CC(v87);
    v21 = (_QWORD *)sub_23FC58A94();
    v21[2] = sub_23FC586BC;
    v21[3] = v118;
    v88 = (_QWORD *)sub_23FC58A94();
    v88[2] = sub_23FC586C0;
    v88[3] = v21;
    v123 = sub_23FC58AA0();
    sub_23FC5AEC0(v123);
    v124 = sub_23FC58AA0();
    sub_23FC5B790(v124);
    v125 = sub_23FC58A94();
    *(_QWORD *)(v125 + 16) = sub_23FC586CC;
    *(_QWORD *)(v125 + 24) = v120;
    v92 = sub_23FC58A94();
    *(_QWORD *)(v92 + 16) = sub_23FC586C0;
    *(_QWORD *)(v92 + 24) = v125;
    v126 = sub_23FC58AA0();
    sub_23FC59258(v126);
    v127[4] = sub_23FC586E0;
    v127[5] = v51;
    v127[6] = sub_23FC586E0;
    v127[7] = v87;
    v127[8] = sub_23FC586D4;
    v127[9] = v88;
    v127[10] = sub_23FC586E0;
    v127[11] = v51;
    v127[12] = sub_23FC586E0;
    v127[13] = v21;
    v127[14] = sub_23FC586D4;
    v127[15] = v92;
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58D80();
    sub_23FC58C88();
    sub_23FC58D60();
    if (!sub_23FC599FC((os_log_type_t)v265))
    {
      v67 = v45[426];
      goto LABEL_44;
    }
    v128 = (uint8_t *)sub_23FC58F88();
    v129 = sub_23FBFEFF4();
    v45[217] = 0;
    v45[218] = v129;
    osloga = v128;
    *(_WORD *)v128 = 514;
    v45[216] = v128 + 2;
    v45[139] = sub_23FC586E0;
    v45[140] = v51;
    sub_23FC59BF8(v230, v221, v220, v219);
    if (v21)
      goto LABEL_86;
    sub_23FC58F00();
    v45[139] = sub_23FC586E0;
    v45[140] = v87;
    sub_23FC58AD0(v230, v221);
    sub_23FC58C64();
    v45[139] = sub_23FC586D4;
    v45[140] = v88;
    sub_23FC58AD0(v230, v221);
    sub_23FC58ADC();
    v45[139] = sub_23FC586E0;
    v45[140] = v51;
    sub_23FC58AD0(v230, v221);
    sub_23FC58AC8();
    v45[139] = sub_23FC586E0;
    v45[140] = 0;
    sub_23FC58AD0(v230, v221);
    sub_23FC58AC8();
    v45[139] = sub_23FC586D4;
    v45[140] = v92;
    sub_23FC58AD0(v230, v221);
    sub_23FC58AC0();
    sub_23FC5B218();
    sub_23FC5B468();
    v100 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work, but will not be sent to client.";
    goto LABEL_39;
  }
  sub_23FC59F80();
  v82 = sub_23FC58A94();
  *(_QWORD *)(v82 + 16) = sub_23FC576A8;
  *(_QWORD *)(v82 + 24) = v45;
  v83 = sub_23FC58AA0();
  sub_23FC5A560(v83);
  v84 = sub_23FC58A94();
  *(_QWORD *)(v84 + 16) = sub_23FC57844;
  *(_QWORD *)(v84 + 24) = v58;
  sub_23FC58D78();
  v85 = sub_23FC5A14C();
  LODWORD(v265) = sub_23FC5B510(v85);
  v86 = sub_23FC58AA0();
  sub_23FC59C28(v86);
  v87 = sub_23FC58AA0();
  sub_23FC5A4CC(v87);
  v21 = (_QWORD *)sub_23FC58A94();
  v21[2] = sub_23FC586BC;
  v21[3] = v82;
  v88 = (_QWORD *)sub_23FC58A94();
  v88[2] = sub_23FC586C0;
  v88[3] = v21;
  v89 = sub_23FC58AA0();
  sub_23FC5AEC0(v89);
  v90 = sub_23FC58AA0();
  sub_23FC5B790(v90);
  v91 = sub_23FC58A94();
  *(_QWORD *)(v91 + 16) = sub_23FC586CC;
  *(_QWORD *)(v91 + 24) = v84;
  v92 = sub_23FC58A94();
  *(_QWORD *)(v92 + 16) = sub_23FC586C0;
  *(_QWORD *)(v92 + 24) = v91;
  v93 = sub_23FC58AA0();
  sub_23FC59258(v93);
  v94[4] = sub_23FC586E0;
  v94[5] = v51;
  v94[6] = sub_23FC586E0;
  v94[7] = v87;
  v94[8] = sub_23FC586D4;
  v94[9] = v88;
  v94[10] = sub_23FC586E0;
  v94[11] = v51;
  v94[12] = sub_23FC586E0;
  v94[13] = v21;
  v94[14] = sub_23FC586D4;
  v94[15] = v92;
  sub_23FC58F98();
  sub_23FC58D70();
  sub_23FC58D58();
  sub_23FC58D68();
  sub_23FC58D80();
  sub_23FC58C88();
  sub_23FC58D60();
  if (sub_23FC599FC((os_log_type_t)v265))
  {
    v95 = (uint8_t *)sub_23FC58F88();
    v96 = sub_23FBFEFF4();
    v45[221] = 0;
    v45[222] = v96;
    osloga = v95;
    *(_WORD *)v95 = 514;
    v45[220] = v95 + 2;
    v45[135] = sub_23FC586E0;
    v45[136] = v51;
    sub_23FC59BF8(v231, v218, v217, v216);
    if (!v21)
    {
      sub_23FC58F00();
      v45[135] = sub_23FC586E0;
      v45[136] = v87;
      sub_23FC58AD0(v231, v218);
      sub_23FC58C64();
      v45[135] = sub_23FC586D4;
      v45[136] = v88;
      sub_23FC58AD0(v231, v218);
      sub_23FC58ADC();
      v45[135] = sub_23FC586E0;
      v45[136] = v51;
      sub_23FC58AD0(v231, v218);
      sub_23FC58AC8();
      v45[135] = sub_23FC586E0;
      v45[136] = 0;
      sub_23FC58AD0(v231, v218);
      sub_23FC58AC8();
      v45[135] = sub_23FC586D4;
      v45[136] = v92;
      sub_23FC58AD0(v231, v218);
      sub_23FC58AC0();
      sub_23FC5B218();
      sub_23FC5B468();
      v100 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work and be sent to client.";
      goto LABEL_39;
    }
LABEL_86:
    sub_23FC5A434(v21);
    return;
  }
  v67 = v45[427];
LABEL_44:
  sub_23FC58F00();
  sub_23FC58C64();
  sub_23FC58ADC();
  sub_23FC58C6C();
  sub_23FC58FA0();
  sub_23FC58AC0();

  sub_23FC5A810();
  v74 = (uint64_t)v45;
  v142 = sub_23FC5B24C();
  v143 = v276;
  if (v142 != v144)
  {
    sub_23FC5D3D4();
    if (v145 != v146)
    {
      __break(1u);
    }
    else
    {
      sub_23FC5D020();
      sub_23FC59120();
      if (v92 < (uint64_t)v45)
      {
        do
        {
          v87 = *(_QWORD *)(v74 + 4080);
          v74 = v279[509];
          v265 = v279[508];
          v264 = v279[464];
          v88 = (_QWORD *)v279[458];
          v67 = v251;
          sub_23FC5A1AC(v251);
          sub_23FC5B8D8();
          sub_23FC5DAD4();
          v4 = v21;
          sub_23FC5A09C();
          sub_23FC5A1AC(v254);
          sub_23FC5B194();
          sub_23FC5CC30();
          sub_23FC0F3AC(v264, (uint64_t)v88, qword_254346A10);
          sub_23FC5A1AC(v253);
          sub_23FC5BD94();
          sub_23FC5ACFC();
          v21 = (_QWORD *)v265;
          sub_23FC10108();
          sub_23FC5A1AC(v252);
          sub_23FC5DBA4();
          sub_23FC5ACFC();
          sub_23FC5EE74();
        }
        while (!v102);
        swift_endAccess();
        v143 = v276;
        goto LABEL_50;
      }
    }
    __break(1u);
    JUMPOUT(0x23FC44080);
  }
LABEL_50:
  sub_23FC5BB24();
  sub_23FC5E344();
  sub_23FC5F4A8();
  v147 = sub_23FD74B40();
  v148 = sub_23FC5BB14(v147);
  sub_23FC10110();
  if (v148)
  {
    v92 = 0;
    v264 = v67;
    do
    {
      sub_23FC56978(v255, v92, v67);
      sub_23FC5B844(v149);
      sub_23FC5C5B8(v255);
      v146 = __OFADD__(v92++, 1);
      if (v146)
      {
        __break(1u);
        JUMPOUT(0x23FC438CCLL);
      }
      v150 = *(_QWORD *)(v74 + 4032);
      sub_23FBFDE28(v256, (uint64_t)v143);
      v21 = *(_QWORD **)(v74 + 128);
      sub_23FBFDE40(v143, *(_QWORD *)(v74 + 120));
      v4 = *(_BYTE **)(v150 + 16);
      v151 = sub_23FC5AC34();
      v152 = sub_23FC5F5B0(v151);
      sub_23FC5A2A8();
      if ((v152 & 1) == 0)
        goto LABEL_70;
      if ((v259 & 1) != 0)
      {
        if ((v260 & 1) != 0)
          goto LABEL_62;
        v153 = *(_QWORD *)(v74 + 120);
        sub_23FC59F98();
        v154 = sub_23FC5B288();
        v21 = (_QWORD *)v155;
        v156 = sub_23FC543D0(v152, v153, v154, v155);
        sub_23FC58D60();
        sub_23FC595E0();
        if ((v156 & 1) == 0)
          goto LABEL_62;
      }
      else if ((_DWORD)v260)
      {
        v21 = *(_QWORD **)(v74 + 128);
        sub_23FC59F98();
        v157 = sub_23FC5B288();
        v159 = sub_23FC5D1C0(v157, v158);
        sub_23FC595E0();
        sub_23FC58D60();
        if ((v159 & 1) != 0)
        {
          sub_23FC5B844((uint64_t)v276);
          sub_23FBFD684(&qword_256F5E420);
          sub_23FC5B294();
          v21 = (_QWORD *)v249;
          if (sub_23FC5AA14())
          {
            swift_release();
LABEL_62:
            v21 = *(_QWORD **)(v74 + 128);
            v160 = sub_23FC59F98();
            sub_23FC5CC88(v160, v161);
            v163 = v162;
            sub_23FC1002C();
            if ((v163 & 1) != 0)
            {
              v164 = sub_23FC5B24C();
              if (v164 != v165)
              {
                sub_23FC5F4E0();
                if (v145 != v146)
                {
                  __break(1u);
                  JUMPOUT(0x23FC44074);
                }
                v265 = v166;
                do
                {
                  if (v166 == v163)
                  {
                    __break(1u);
                    JUMPOUT(0x23FC435BCLL);
                  }
                  v167 = *(_QWORD *)(v74 + 3040);
                  v168 = *(_QWORD *)(v74 + 2984);
                  sub_23FC59120();
                  sub_23FC5BB04();
                  sub_23FD73FB8();
                  v170 = v169;
                  sub_23FC595C4(v167, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 8));
                  sub_23FC5BC88();
                  if ((v170 & 1) != 0)
                  {
                    swift_release();
                    __break(1u);
                    JUMPOUT(0x23FC44094);
                  }
                  v21 = (_QWORD *)(*(_QWORD *)(v74 + 4032) + 16);
                  v92 = (int64_t)v276;
                  sub_23FC59128(v276);
                  sub_23FC5B094();
                  v171 = sub_23FC59128(v276);
                  sub_23FC5D1D8(v171, v172);
                  v88 = (_QWORD *)sub_23FC59128(v276);
                  v87 = v173;
                  sub_23FC59120();
                  v4 = (_BYTE *)v272;
                  sub_23FC5CD18(v272);
                  sub_23FC5DB84();
                  sub_23FC5AD30();
                  sub_23FC5DA88((uint64_t)v276);
                  sub_23FC5F2B8();
                  sub_23FC5BC88();
                  sub_23FC5F148();
                }
                while (!v102);
              }
            }
          }
        }
      }
LABEL_70:
      v143 = v276;
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v276);
      v67 = v264;
    }
    while (v92 != sub_23FC5C5F0());
  }
  sub_23FC5CFCC();
  sub_23FC5AD9C();
  sub_23FC5B2FC();
  if (sub_23FC5EDD0(v174))
  {
    v175 = sub_23FC5A09C();
    sub_23FC5D26C(v175);
    if (v21)
    {
      v176 = *(_QWORD *)(v74 + 4048);
      v177 = *(_QWORD *)(v74 + 2208);
      sub_23FC103E8();
      sub_23FC5A56C();
      sub_23FC58FB0();
      v178 = sub_23FC58A94();
      *(_QWORD *)(v178 + 16) = sub_23FC576A8;
      *(_QWORD *)(v178 + 24) = v177;
      v179 = sub_23FC58AA0();
      sub_23FC5DB98(v179);
      v180 = sub_23FC58A94();
      *(_QWORD *)(v180 + 16) = sub_23FC57844;
      *(_QWORD *)(v180 + 24) = v67;
      v181 = sub_23FC58AA0();
      *(_QWORD *)(v181 + 16) = v21;
      sub_23FC58CA8();
      sub_23FC091A4();
      v182 = sub_23FD72BE4();
      v269 = sub_23FC5BBC0(v182);
      v277 = sub_23FC58AA0();
      sub_23FC59D6C(v277);
      v265 = sub_23FC58AA0();
      sub_23FC5A4CC(v265);
      v183 = sub_23FC58A94();
      *(_QWORD *)(v183 + 16) = sub_23FC586BC;
      *(_QWORD *)(v183 + 24) = v178;
      v184 = sub_23FC58A94();
      *(_QWORD *)(v184 + 16) = sub_23FC586C0;
      *(_QWORD *)(v184 + 24) = v183;
      v185 = sub_23FC58AA0();
      sub_23FC5C6A8(v185);
      v186 = sub_23FC58AA0();
      *(_BYTE *)(v186 + 16) = v177;
      v187 = sub_23FC58A94();
      *(_QWORD *)(v187 + 16) = sub_23FC586CC;
      *(_QWORD *)(v187 + 24) = v180;
      v188 = sub_23FC58A94();
      *(_QWORD *)(v188 + 16) = sub_23FC586C0;
      *(_QWORD *)(v188 + 24) = v187;
      v189 = sub_23FC58AA0();
      sub_23FC5AC94(v189);
      v190 = sub_23FC58AA0();
      *(_BYTE *)(v190 + 16) = v177;
      v191 = sub_23FC58A94();
      *(_QWORD *)(v191 + 16) = sub_23FC5770C;
      *(_QWORD *)(v191 + 24) = v181;
      v192 = sub_23FC58A94();
      *(_QWORD *)(v192 + 16) = sub_23FC586C4;
      *(_QWORD *)(v192 + 24) = v191;
      v193 = sub_23FC58A94();
      *(_QWORD *)(v193 + 16) = sub_23FC586C8;
      *(_QWORD *)(v193 + 24) = v192;
      v67 = sub_23FC58AA0();
      sub_23FC5B0C4(v67);
      *(_QWORD *)(v67 + 40) = sub_23FC5BA48(v194);
      *(_QWORD *)(v67 + 48) = sub_23FC586E0;
      *(_QWORD *)(v67 + 56) = v265;
      *(_QWORD *)(v67 + 64) = sub_23FC586D4;
      *(_QWORD *)(v67 + 72) = v184;
      *(_QWORD *)(v67 + 80) = sub_23FC586E0;
      *(_QWORD *)(v67 + 88) = v176;
      *(_QWORD *)(v67 + 96) = sub_23FC586E0;
      *(_QWORD *)(v67 + 104) = v186;
      *(_QWORD *)(v67 + 112) = sub_23FC586D4;
      *(_QWORD *)(v67 + 120) = v188;
      *(_QWORD *)(v67 + 128) = sub_23FC586E0;
      *(_QWORD *)(v67 + 136) = v189;
      *(_QWORD *)(v67 + 144) = sub_23FC586E0;
      *(_QWORD *)(v67 + 152) = v190;
      *(_QWORD *)(v67 + 160) = sub_23FC586D8;
      sub_23FC5C9E4();
      sub_23FC58D80();
      v264 = v184;
      sub_23FC58D90();
      v101 = v176;
      sub_23FC58D68();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58F98();
      sub_23FC58C88();
      sub_23FC58CA8();
      sub_23FC58D60();
      if (sub_23FC5A8C0(v274, v269))
      {
        v195 = (uint8_t *)sub_23FC5A2EC();
        v21 = (_QWORD *)sub_23FBFEFF4();
        v196 = sub_23FBFEFF4();
        v279[199] = v21;
        v279[200] = v196;
        *(_WORD *)v195 = 770;
        v279[198] = v195 + 2;
        v197 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5CF8C((uint64_t)sub_23FC586E0);
        sub_23FC5A094(v197, v198, v233, v232);
        if (!v21)
        {
          sub_23FC5A928();
          v199 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5EDBC((uint64_t)sub_23FC586E0);
          sub_23FC58D88(v199, v200, v233);
          sub_23FC58CA0();
          v201 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5EDA8((uint64_t)sub_23FC586D4);
          sub_23FC58D88(v201, (uint64_t)sub_23FC586E0, v233);
          sub_23FC58ADC();
          v279[149] = sub_23FC586E0;
          v279[150] = v176;
          sub_23FC58D88((uint64_t (**)(uint64_t, uint64_t, uint64_t))v188, (uint64_t)sub_23FC586E0, v233);
          sub_23FC58ADC();
          v279[149] = sub_23FC586E0;
          v279[150] = v186;
          sub_23FC58D88((uint64_t (**)(uint64_t, uint64_t, uint64_t))v188, (uint64_t)sub_23FC586E0, v233);
          sub_23FC58C6C();
          v279[149] = sub_23FC586D4;
          v279[150] = v188;
          sub_23FC58D88((uint64_t (**)(uint64_t, uint64_t, uint64_t))v188, (uint64_t)sub_23FC586E0, v233);
          sub_23FC58C6C();
          v279[149] = sub_23FC586E0;
          v279[150] = v189;
          sub_23FC58D88((uint64_t (**)(uint64_t, uint64_t, uint64_t))v188, (uint64_t)sub_23FC586E0, v233);
          sub_23FC58AC0();
          v279[149] = sub_23FC586E0;
          v279[150] = v190;
          sub_23FC58D88((uint64_t (**)(uint64_t, uint64_t, uint64_t))v188, (uint64_t)sub_23FC586E0, v233);
          sub_23FC58C6C();
          v279[149] = sub_23FC586D8;
          v279[150] = v193;
          sub_23FC58D88((uint64_t (**)(uint64_t, uint64_t, uint64_t))v188, (uint64_t)sub_23FC586E0, v233);
          sub_23FC58AC0();
          sub_23FC5BF60();
          sub_23FC5D0CC();
          sub_23FC10464(v202, v203, v204, "[SessionCoordinator %s] | [TX %s] Failed to encode to proto data for debugger: %@", v195);
          sub_23FBFD684(&qword_254346A30);
          sub_23FBFF10C();
          sub_23FBFEFA0();
        }
        goto LABEL_86;
      }
      v74 = (uint64_t)v279;
      v271 = v279[425];
      sub_23FC5DE58();
      v263 = v211;
      sub_23FC5B2A0();
      sub_23FC5A928();
      sub_23FC58FA0();
      sub_23FC5D038();
      sub_23FC101F4();
      sub_23FC58C6C();
      sub_23FC58C64();
      sub_23FC58ADC();
      sub_23FC58AC0();
      sub_23FC58AE4();

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v271, v263);
    }
    else
    {
      LODWORD(v264) = *(_DWORD *)(v74 + 4268);
      v275 = *(_QWORD *)(v74 + 2960);
      v278 = *(_QWORD *)(v74 + 2952);
      v265 = *(_QWORD *)(v74 + 2192);
      v270 = *(_QWORD *)(v74 + 2968);
      sub_23FC5A56C();
      sub_23FC5A09C();
      v74 = sub_23FC5CC10((uint64_t)sub_23FCB3EF8);
      v101 = v208;
      sub_23FC5A56C();
      sub_23FC5B564();
      v209 = sub_23FC5D408();
      sub_23FC0F3AC(v209, v210, qword_254346A10);
      sub_23FC5C330();
      sub_23FC5D0AC();
      sub_23FC5B814();
      sub_23FBFD684(&qword_256F5E378);
      v67 = v270;
      sub_23FC5B544();
      (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v270, v278);
    }
    v274 = 0;
  }
  else
  {
    sub_23FC5ADDC();
    sub_23FBFD684(&qword_256F5E498);
    v205 = sub_23FC5AA90();
    sub_23FC0F3AC(v205, v206, qword_254346A10);
    *v88 = v4;
    v88[1] = v92;
    v101 = *(_QWORD *)(v74 + 1552);
    *(_QWORD *)(v67 + v87) = v101;
    sub_23FC5AA0C();
    sub_23FC10108();
    sub_23FC5AAE8();
    v207 = sub_23FC5DAE0();
    sub_23FC50A38(v207, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC55E4C);
    sub_23FC5806C(v67, type metadata accessor for SessionCoordinatorCommand);
  }
  sub_23FC5B6B8();
  if (v102)
  {
    sub_23FC594B8();
    v101 = v212;
    sub_23FC103E8();
    sub_23FC5A2C4();
    sub_23FC5A2D8();
    sub_23FC5B224();
    sub_23FBFD684(&qword_256F5E378);
    v67 = v264;
    sub_23FC5B2A8();
    sub_23FC5B768();
    sub_23FC5B0DC(v265);
  }
  else
  {
    sub_23FC103E8();
    sub_23FC58AC8();
  }
  v213 = sub_23FC5AAC8();
  sub_23FC584B0(v213, qword_254346A10);
  sub_23FC5806C(v101, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
  sub_23FC5DEB4();
  sub_23FC58CA0();
  sub_23FC58AC8();
  v117 = v250;
LABEL_84:
  *(_DWORD *)(v74 + 4280) = v117;
  *(_QWORD *)(v74 + 3960) = v274;
  sub_23FC5B488();
  sub_23FC100EC(v67, 1, v101);
  if (!v102)
  {
    v214 = (char *)&loc_23FC3B9B8 + *((int *)qword_23FC440B0 + sub_23FC5E148());
    __asm { BR              X9 }
  }
  v215 = (_QWORD *)swift_task_alloc();
  sub_23FC5BB94(v215, (uint64_t)sub_23FC2D608);
  sub_23FC5A488();
}

void sub_23FC440D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  void *v27;
  NSObject *v28;
  os_log_type_t v29;
  const char *v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  void *v69;
  NSObject *v70;
  os_log_type_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  void *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  os_log_type_t v107;
  _QWORD *v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint8_t *v123;
  uint64_t v124;
  int *v125;
  NSObject *v126;
  os_log_type_t v127;
  const char *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint8_t *v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint8_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint8_t *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  char v173;
  BOOL v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint8_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t (**v226)(uint64_t, uint64_t, uint64_t);
  uint64_t v227;
  uint64_t (**v228)(uint64_t, uint64_t, uint64_t);
  uint64_t v229;
  void *v230;
  NSObject *v231;
  os_log_type_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t (**v247)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v248)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v249)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v250)(uint64_t, uint64_t, uint64_t);
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t (**v254)(uint64_t, uint64_t, uint64_t);
  uint64_t v255;
  uint64_t v256;
  uint64_t (**v257)(uint64_t, uint64_t, uint64_t);
  int v258;
  uint8_t *v259;
  uint64_t v260;
  uint8_t *v261;
  uint8_t *v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  uint8_t *v266;
  uint64_t v267;
  uint8_t *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  os_log_type_t v274;
  NSObject *v275;
  os_log_type_t v276;
  os_log_type_t v277;
  uint64_t v278;
  uint64_t v279;
  _BYTE *v280;
  uint64_t v281;
  os_log_type_t v282;
  _QWORD *v283;
  NSObject *v284;
  uint64_t v285;
  _QWORD *v286;

  sub_23FC5ACE0();
  v1 = v0[513];
  v2 = v0[506];
  v3 = v0[432];
  v286 = v0;
  v4 = v0[276];
  swift_release();
  sub_23FC58FB0();
  v5 = sub_23FC58A94();
  *(_QWORD *)(v5 + 16) = sub_23FC576A8;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = sub_23FC58AA0();
  *(_QWORD *)(v6 + 16) = v2;
  v7 = sub_23FC58A94();
  *(_QWORD *)(v7 + 16) = sub_23FC57844;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = sub_23FC58AA0();
  *(_QWORD *)(v8 + 16) = v1;
  sub_23FC58CA8();
  sub_23FC5F500();
  v9 = sub_23FD72BE4();
  v282 = sub_23FC5B728(v9);
  v10 = sub_23FC58AA0();
  sub_23FC59D6C(v10);
  v11 = sub_23FC58AA0();
  *(_BYTE *)(v11 + 16) = 8;
  v12 = sub_23FC58A94();
  *(_QWORD *)(v12 + 16) = sub_23FC586BC;
  *(_QWORD *)(v12 + 24) = v5;
  v13 = sub_23FC58A94();
  *(_QWORD *)(v13 + 16) = sub_23FC586C0;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = sub_23FC58AA0();
  *(_BYTE *)(v14 + 16) = v3;
  v15 = sub_23FC58AA0();
  *(_BYTE *)(v15 + 16) = 8;
  v16 = sub_23FC58A94();
  *(_QWORD *)(v16 + 16) = sub_23FC586CC;
  *(_QWORD *)(v16 + 24) = v7;
  v17 = sub_23FC58A94();
  *(_QWORD *)(v17 + 16) = sub_23FC586C0;
  *(_QWORD *)(v17 + 24) = v16;
  v18 = sub_23FC58AA0();
  *(_BYTE *)(v18 + 16) = 64;
  v19 = sub_23FC58AA0();
  *(_BYTE *)(v19 + 16) = 8;
  v20 = sub_23FC58A94();
  *(_QWORD *)(v20 + 16) = sub_23FC5770C;
  *(_QWORD *)(v20 + 24) = v8;
  v21 = sub_23FC58A94();
  *(_QWORD *)(v21 + 16) = sub_23FC586C4;
  *(_QWORD *)(v21 + 24) = v20;
  v22 = sub_23FC58A94();
  *(_QWORD *)(v22 + 16) = sub_23FC586C8;
  *(_QWORD *)(v22 + 24) = v21;
  sub_23FBFD684(&qword_256F5E480);
  v23 = sub_23FC58AA0();
  *(_OWORD *)(v23 + 16) = xmmword_23FD76BA0;
  *(_QWORD *)(v23 + 32) = sub_23FC586E0;
  *(_QWORD *)(v23 + 40) = v10;
  *(_QWORD *)(v23 + 48) = sub_23FC586E0;
  *(_QWORD *)(v23 + 56) = v11;
  *(_QWORD *)(v23 + 64) = sub_23FC586D4;
  *(_QWORD *)(v23 + 72) = v13;
  *(_QWORD *)(v23 + 80) = sub_23FC586E0;
  *(_QWORD *)(v23 + 88) = v14;
  *(_QWORD *)(v23 + 96) = sub_23FC586E0;
  *(_QWORD *)(v23 + 104) = v15;
  *(_QWORD *)(v23 + 112) = sub_23FC586D4;
  *(_QWORD *)(v23 + 120) = v17;
  *(_QWORD *)(v23 + 128) = sub_23FC586E0;
  *(_QWORD *)(v23 + 136) = v18;
  *(_QWORD *)(v23 + 144) = sub_23FC586E0;
  *(_QWORD *)(v23 + 152) = v19;
  *(_QWORD *)(v23 + 160) = sub_23FC586D8;
  *(_QWORD *)(v23 + 168) = v22;
  v279 = v10;
  sub_23FC58F98();
  sub_23FC58D58();
  sub_23FC58D68();
  sub_23FC58D70();
  sub_23FC58D78();
  sub_23FC58CA8();
  sub_23FC58C88();
  sub_23FC58D90();
  sub_23FC58D80();
  sub_23FC58D60();
  if (os_log_type_enabled(v284, v282))
  {
    v24 = v13;
    v273 = v22;
    v25 = (uint64_t)v286;
    v26 = (uint8_t *)sub_23FC5A2EC();
    v267 = sub_23FBFEFF4();
    v269 = sub_23FBFEFF4();
    v286[238] = v267;
    v286[239] = v269;
    *(_WORD *)v26 = 770;
    v286[237] = v26 + 2;
    v286[121] = sub_23FC586E0;
    v286[122] = v279;
    sub_23FC5A094((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 968), v25 + 1896, v25 + 1904, v25 + 1912);
    if (!v286)
    {
      sub_23FC58C6C();
      MEMORY[0x3C8] = sub_23FC586E0;
      MEMORY[0x3D0] = v11;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC58CA0();
      MEMORY[0x3C8] = sub_23FC586D4;
      MEMORY[0x3D0] = v24;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC58F00();
      MEMORY[0x3C8] = sub_23FC586E0;
      MEMORY[0x3D0] = v14;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC5B714();
      MEMORY[0x3C8] = sub_23FC586E0;
      MEMORY[0x3D0] = v15;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC5C410();
      MEMORY[0x3C8] = sub_23FC586D4;
      MEMORY[0x3D0] = v17;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC5BFC0();
      MEMORY[0x3C8] = sub_23FC586E0;
      MEMORY[0x3D0] = v18;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC5E080();
      MEMORY[0x3C8] = sub_23FC586E0;
      MEMORY[0x3D0] = v19;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC5B768();
      MEMORY[0x3C8] = sub_23FC586D8;
      MEMORY[0x3D0] = v273;
      sub_23FC5A0B8((uint64_t (**)(uint64_t, uint64_t, uint64_t))0x3C8, 1896, 1904);
      sub_23FC5B30C();
      sub_23FC5CEC8();
      sub_23FC10464(v27, v28, v29, v30, v26);
      sub_23FBFD684(&qword_254346A30);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    goto LABEL_89;
  }
  v31 = v286;
  v32 = v286[432];
  sub_23FC5DE58();

  sub_23FC5B04C();
  sub_23FC5B8F0();
  sub_23FC58C6C();
  sub_23FC58ADC();
  sub_23FC58AC8();
  sub_23FC58AE4();
  sub_23FC58AC0();
  sub_23FC101F4();
  sub_23FC58FA0();

  sub_23FC5AF30(*(uint64_t (**)(void))(v23 + 8));
  v34 = 0;
  v283 = v286 + 12;
  v260 = (uint64_t)(v286 + 22);
  v35 = v286 + 91;
  v257 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v286 + 131);
  v250 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v286 + 135);
  v249 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v286 + 139);
  v248 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v286 + 141);
  v247 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v286 + 143);
  v254 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v286 + 157);
  v253 = (uint64_t)(v286 + 185);
  v252 = (uint64_t)(v286 + 186);
  v251 = (uint64_t)(v286 + 199);
  v246 = (uint64_t)(v286 + 208);
  v245 = (uint64_t)(v286 + 212);
  v244 = (uint64_t)(v286 + 216);
  v243 = (uint64_t)(v286 + 220);
  v256 = (uint64_t)(v286 + 228);
  v255 = (uint64_t)(v286 + 229);
  v36 = (uint64_t)(v286 + 233);
  sub_23FC5EEEC();
  sub_23FC5EFDC();
  sub_23FC59120();
  v37 = sub_23FC5AFCC();
  v38 = sub_23FC18778(v37);
  sub_23FC1002C();
  if ((v38 & 1) != 0)
  {
    HIDWORD(v272) = 0;
    v39 = v286[276];
    sub_23FC58FB0();
    v40 = sub_23FC58A94();
    *(_QWORD *)(v40 + 16) = sub_23FC576A8;
    *(_QWORD *)(v40 + 24) = v39;
    v41 = sub_23FC58AA0();
    sub_23FC5F084(v41);
    v42 = sub_23FC58A94();
    *(_QWORD *)(v42 + 16) = sub_23FC57844;
    *(_QWORD *)(v42 + 24) = v35;
    sub_23FC58C88();
    v280 = (_BYTE *)sub_23FD72BE4();
    LODWORD(v275) = sub_23FD74F3C();
    v31 = (_QWORD *)sub_23FC58AA0();
    sub_23FC59D6C((uint64_t)v31);
    v43 = sub_23FC58AA0();
    sub_23FC5A4CC(v43);
    v44 = sub_23FC58A94();
    *(_QWORD *)(v44 + 16) = sub_23FC586BC;
    *(_QWORD *)(v44 + 24) = v40;
    v32 = sub_23FC58A94();
    *(_QWORD *)(v32 + 16) = sub_23FC586C0;
    *(_QWORD *)(v32 + 24) = v44;
    v45 = sub_23FC58AA0();
    sub_23FC5E7AC(v45);
    v36 = sub_23FC58AA0();
    *(_BYTE *)(v36 + 16) = (_BYTE)v286 - 40;
    v35 = v280;
    v46 = sub_23FC58A94();
    *(_QWORD *)(v46 + 16) = sub_23FC586CC;
    *(_QWORD *)(v46 + 24) = v42;
    v18 = sub_23FC58A94();
    *(_QWORD *)(v18 + 16) = sub_23FC586C0;
    *(_QWORD *)(v18 + 24) = v46;
    sub_23FBFD684(&qword_256F5E480);
    v47 = sub_23FC58AA0();
    sub_23FC59258(v47);
    v48[4] = sub_23FC586E0;
    v48[5] = v31;
    v48[6] = sub_23FC586E0;
    v48[7] = v43;
    v48[8] = sub_23FC586D4;
    v48[9] = v32;
    v48[10] = sub_23FC586E0;
    v48[11] = 0;
    v48[12] = sub_23FC586E0;
    v48[13] = v36;
    v48[14] = sub_23FC586D4;
    v48[15] = v18;
    sub_23FC58F98();
    sub_23FC58D58();
    sub_23FC58D70();
    sub_23FC58D80();
    sub_23FC58D68();
    sub_23FC58C88();
    sub_23FC58D60();
    if (sub_23FC599FC((os_log_type_t)v275))
    {
      v25 = sub_23FC58F88();
      v49 = sub_23FBFEFF4();
      sub_23FC5C560(v49);
      sub_23FC5EC94((uint64_t (**)(uint64_t, uint64_t, uint64_t))v286 + 127, (uint64_t)(v286 + 232), (uint64_t)(v286 + 233));
      if (!v25)
      {
        sub_23FC58F00();
        v286[127] = sub_23FC586E0;
        v286[128] = v43;
        sub_23FC59DC8();
        sub_23FC58CA0();
        v286[127] = sub_23FC586D4;
        v286[128] = v32;
        sub_23FC59DC8();
        sub_23FC58C64();
        v286[127] = sub_23FC586E0;
        v286[128] = 0;
        sub_23FC59DC8();
        sub_23FC101F4();
        v286[127] = sub_23FC586E0;
        v286[128] = v36;
        sub_23FC59DC8();
        sub_23FC58C64();
        v286[127] = sub_23FC586D4;
        v286[128] = v18;
        sub_23FC59DC8();
        sub_23FC58AC0();
        sub_23FC5BF60();
        sub_23FC5F118();
        sub_23FC59250(v50, v51, v52, "[SessionCoordinator %s] | [TX %s] Transaction is advisory.", v268);
        swift_arrayDestroy();
        sub_23FBFEFA0();
      }
      goto LABEL_89;
    }
    sub_23FC58F00();
    sub_23FC58ADC();
    sub_23FC58C64();
    sub_23FC58FA0();
    sub_23FC58C6C();
    sub_23FC58AC0();

    sub_23FC5A810();
    sub_23FC5DE9C();
  }
  else
  {
    sub_23FC5ED28();
    LODWORD(v266) = v53;
  }
  v54 = *(_QWORD *)(v31[504] + 16);
  v55 = sub_23FC5AFCC();
  v56 = sub_23FC17D20(v55);
  sub_23FC1002C();
  if ((v56 & 1) != 0)
  {
    v57 = v31[276];
    sub_23FC58FB0();
    v58 = sub_23FC58A94();
    *(_QWORD *)(v58 + 16) = sub_23FC576A8;
    *(_QWORD *)(v58 + 24) = v57;
    v59 = sub_23FC58AA0();
    sub_23FC5A560(v59);
    v60 = sub_23FC58A94();
    *(_QWORD *)(v60 + 16) = sub_23FC57844;
    *(_QWORD *)(v60 + 24) = v18;
    sub_23FC58D80();
    v275 = sub_23FD72BE4();
    v274 = sub_23FD74F3C();
    v31 = (_QWORD *)sub_23FC58AA0();
    sub_23FC59D6C((uint64_t)v31);
    v61 = sub_23FC58AA0();
    sub_23FC5B1B4(v61);
    v62 = sub_23FC58A94();
    *(_QWORD *)(v62 + 16) = sub_23FC586BC;
    *(_QWORD *)(v62 + 24) = v58;
    v63 = sub_23FC58A94();
    *(_QWORD *)(v63 + 16) = sub_23FC586C0;
    *(_QWORD *)(v63 + 24) = v62;
    v64 = sub_23FC58AA0();
    sub_23FC5C6A8(v64);
    v35 = (_BYTE *)sub_23FC58AA0();
    v35[16] = v18;
    v18 = (uint64_t)v275;
    v65 = sub_23FC58A94();
    *(_QWORD *)(v65 + 16) = sub_23FC586CC;
    *(_QWORD *)(v65 + 24) = v60;
    v34 = sub_23FC58A94();
    *(_QWORD *)(v34 + 16) = sub_23FC586C0;
    *(_QWORD *)(v34 + 24) = v65;
    sub_23FBFD684(&qword_256F5E480);
    v66 = sub_23FC58AA0();
    sub_23FC59258(v66);
    v67[4] = sub_23FC586E0;
    v67[5] = v31;
    v67[6] = sub_23FC586E0;
    v67[7] = v32;
    v67[8] = sub_23FC586D4;
    v67[9] = v63;
    v67[10] = sub_23FC586E0;
    v67[11] = v36;
    v67[12] = sub_23FC586E0;
    v67[13] = v35;
    v67[14] = sub_23FC586D4;
    v67[15] = v34;
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58CA8();
    sub_23FC58D80();
    sub_23FC58D60();
    if (sub_23FC5BF54(v274))
    {
      v270 = v34;
      v25 = sub_23FC58F88();
      v68 = sub_23FBFEFF4();
      sub_23FC5C1B4(v68);
      sub_23FC59BF8(v257, v256, v255, (uint64_t)(v286 + 230));
      if (!v25)
      {
        sub_23FC58F00();
        v286[131] = sub_23FC586E0;
        v286[132] = v32;
        sub_23FC58C90(v257, v256, v255);
        sub_23FC58C64();
        v286[131] = sub_23FC586D4;
        v286[132] = v63;
        sub_23FC58C90(v257, v256, v255);
        sub_23FC58ADC();
        v286[131] = sub_23FC586E0;
        v286[132] = v36;
        sub_23FC58C90(v257, v256, v255);
        sub_23FC101F4();
        v286[131] = sub_23FC586E0;
        v286[132] = v35;
        sub_23FC58C90(v257, v256, v255);
        sub_23FC58ADC();
        v286[131] = sub_23FC586D4;
        v286[132] = v270;
        sub_23FC58C90(v257, v256, v255);
        sub_23FC58ADC();
        sub_23FC5B218();
        sub_23FC5B468();
        sub_23FC59250(v69, v70, v71, "[SessionCoordinator %s] | [TX %s] Transaction is work-allowing advisory.", v266);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_89;
    }
    LOBYTE(v54) = (_BYTE)v286;
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58ADC();
    sub_23FC58C6C();
    sub_23FC58AE4();
    sub_23FC58FA0();

    sub_23FC5A810();
    sub_23FC5DA90();
  }
  sub_23FC59A08();
  sub_23FC5D878();
  sub_23FC5CC7C();
  sub_23FC5CC24();
  sub_23FC5BB44();
  if ((v54 & 1) == 0)
  {
    sub_23FC5B474();
    sub_23FC58FB0();
    v92 = sub_23FC58A94();
    *(_QWORD *)(v92 + 16) = sub_23FC576A8;
    *(_QWORD *)(v92 + 24) = v34;
    v93 = sub_23FC58AA0();
    sub_23FC5A560(v93);
    v94 = sub_23FC58A94();
    *(_QWORD *)(v94 + 16) = sub_23FC57844;
    *(_QWORD *)(v94 + 24) = v18;
    sub_23FC58D80();
    v95 = sub_23FD72BE4();
    LODWORD(v272) = sub_23FC5B510(v95);
    v96 = sub_23FC58AA0();
    sub_23FC5AA24(v96);
    v97 = sub_23FC58AA0();
    *(_BYTE *)(v97 + 16) = 8;
    v98 = sub_23FC58A94();
    *(_QWORD *)(v98 + 16) = sub_23FC586BC;
    *(_QWORD *)(v98 + 24) = v92;
    v99 = sub_23FC58A94();
    *(_QWORD *)(v99 + 16) = sub_23FC586C0;
    *(_QWORD *)(v99 + 24) = v98;
    v100 = sub_23FC58AA0();
    sub_23FC5AEC0(v100);
    v101 = sub_23FC58AA0();
    *(_BYTE *)(v101 + 16) = 8;
    v102 = sub_23FC58A94();
    *(_QWORD *)(v102 + 16) = sub_23FC586CC;
    *(_QWORD *)(v102 + 24) = v94;
    v103 = sub_23FC58A94();
    *(_QWORD *)(v103 + 16) = sub_23FC586C0;
    *(_QWORD *)(v103 + 24) = v102;
    sub_23FBFD684(&qword_256F5E480);
    v104 = sub_23FC58AA0();
    sub_23FC59258(v104);
    v25 = (uint64_t)sub_23FC586E0;
    v105[4] = sub_23FC586E0;
    v105[5] = v96;
    v105[6] = sub_23FC586E0;
    v105[7] = v97;
    v105[8] = sub_23FC586D4;
    v105[9] = v99;
    v105[10] = sub_23FC586E0;
    v105[11] = v36;
    v105[12] = sub_23FC586E0;
    v105[13] = v101;
    v105[14] = sub_23FC586D4;
    v105[15] = v103;
    sub_23FC58D78();
    sub_23FC58CA8();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58F98();
    sub_23FC58C88();
    sub_23FC58D60();
    if (sub_23FC5BDA4(v275, (os_log_type_t)v272))
    {
      sub_23FC58F88();
      v106 = sub_23FBFEFF4();
      sub_23FC5C188(v106);
      sub_23FC59BF8(v254, v253, v252, (uint64_t)(v286 + 187));
      if (!sub_23FC586E0)
      {
        sub_23FC58AC8();
        v286[157] = sub_23FC586E0;
        v286[158] = v97;
        sub_23FC58C90(v254, v253, v252);
        sub_23FC58C64();
        v286[157] = sub_23FC586D4;
        v286[158] = v99;
        sub_23FC58C90(v254, v253, v252);
        sub_23FC58ADC();
        v286[157] = sub_23FC586E0;
        v286[158] = v36;
        sub_23FC58C90(v254, v253, v252);
        sub_23FC101F4();
        v286[157] = sub_23FC586E0;
        v286[158] = v101;
        sub_23FC58C90(v254, v253, v252);
        sub_23FC58ADC();
        v286[157] = sub_23FC586D4;
        v286[158] = v103;
        sub_23FC58C90(v254, v253, v252);
        sub_23FC58ADC();
        sub_23FC5B218();
        sub_23FC59250(&dword_23FBF8000, v275, v107, "[SessionCoordinator %s] | [TX %s] Transaction postcondition FAILED. It will be skipped.", v266);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      goto LABEL_89;
    }
    v129 = v286[408];
    sub_23FC58AC8();
    sub_23FC58AE4();
    sub_23FC58ADC();
    sub_23FC58C6C();
    sub_23FC58F00();
    sub_23FC58AC0();

    sub_23FC5A810();
    sub_23FC5B230();
    if (v130)
    {
      sub_23FC594B8();
      v129 = v131;
      sub_23FC103E8();
      sub_23FC5A2C4();
      sub_23FC5A2D8();
      sub_23FC5B224();
      sub_23FBFD684(&qword_256F5E378);
      v94 = v271;
      sub_23FC5B2A8();
      sub_23FC5B768();
      sub_23FC5B0DC(v272);
    }
    else
    {
      sub_23FC103E8();
      sub_23FC58AC8();
    }
    v144 = sub_23FC5AAC8();
    sub_23FC584B0(v144, qword_254346A10);
    sub_23FC5806C(v129, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
    sub_23FC58CA0();
    sub_23FC58AC8();
    v145 = *(_DWORD *)(v101 + 4280);
    goto LABEL_87;
  }
  v72 = (_QWORD *)v31[429];
  v73 = v31[276];
  sub_23FC58FB0();
  v74 = sub_23FC58A94();
  *(_QWORD *)(v74 + 16) = sub_23FC576A8;
  *(_QWORD *)(v74 + 24) = v73;
  v75 = sub_23FC58AA0();
  sub_23FC5A560(v75);
  v76 = sub_23FC58A94();
  *(_QWORD *)(v76 + 16) = sub_23FC57844;
  *(_QWORD *)(v76 + 24) = v18;
  sub_23FC58D80();
  v77 = sub_23FD72BE4();
  LODWORD(v272) = sub_23FC5B510(v77);
  v78 = v31;
  v79 = sub_23FC58AA0();
  sub_23FC59D6C(v79);
  v80 = sub_23FC58AA0();
  sub_23FC5B1B4(v80);
  v25 = sub_23FC58A94();
  *(_QWORD *)(v25 + 16) = sub_23FC586BC;
  *(_QWORD *)(v25 + 24) = v74;
  v81 = sub_23FC58A94();
  *(_QWORD *)(v81 + 16) = sub_23FC586C0;
  *(_QWORD *)(v81 + 24) = v25;
  v82 = sub_23FC58AA0();
  sub_23FC5B71C(v82);
  v83 = sub_23FC58AA0();
  sub_23FC5E784(v83);
  v84 = sub_23FC58A94();
  *(_QWORD *)(v84 + 16) = sub_23FC586CC;
  *(_QWORD *)(v84 + 24) = v76;
  v85 = sub_23FC58A94();
  *(_QWORD *)(v85 + 16) = sub_23FC586C0;
  *(_QWORD *)(v85 + 24) = v84;
  sub_23FBFD684(&qword_256F5E480);
  v86 = sub_23FC58AA0();
  sub_23FC59258(v86);
  v87[4] = sub_23FC586E0;
  v87[5] = v79;
  v87[6] = sub_23FC586E0;
  v87[7] = v32;
  v87[8] = sub_23FC586D4;
  v87[9] = v81;
  v87[10] = sub_23FC586E0;
  v87[11] = v35;
  v87[12] = sub_23FC586E0;
  v87[13] = v25;
  v87[14] = sub_23FC586D4;
  v87[15] = v85;
  sub_23FC58F98();
  sub_23FC58D70();
  sub_23FC58D58();
  sub_23FC58CA8();
  sub_23FC58D80();
  sub_23FC58C88();
  sub_23FC58D60();
  if (sub_23FC5A8C0(v275, (os_log_type_t)v272))
  {
    sub_23FC58F88();
    v88 = sub_23FBFEFF4();
    sub_23FC5C370(v88);
    sub_23FC59BF8((uint64_t (**)(uint64_t, uint64_t, uint64_t))v286 + 133, (uint64_t)(v286 + 224), (uint64_t)(v286 + 225), (uint64_t)(v286 + 226));
    if (!v25)
    {
      sub_23FC58F00();
      v78[133] = sub_23FC586E0;
      v78[134] = v32;
      sub_23FC59DA0();
      sub_23FC58C64();
      v78[133] = sub_23FC586D4;
      v78[134] = v81;
      sub_23FC59DA0();
      sub_23FC58ADC();
      v78[133] = sub_23FC586E0;
      v78[134] = v35;
      sub_23FC59DA0();
      sub_23FC58C6C();
      v78[133] = sub_23FC586E0;
      v78[134] = 0;
      sub_23FC59DA0();
      sub_23FC58C6C();
      v78[133] = sub_23FC586D4;
      v78[134] = v85;
      sub_23FC59DA0();
      sub_23FC58AC0();
      sub_23FC5B218();
      sub_23FC5B468();
      sub_23FC59250(v89, v90, v91, "[SessionCoordinator %s] | [TX %s] Transaction postcondition passed.", v261);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    goto LABEL_89;
  }
  sub_23FC58F00();
  sub_23FC58C64();
  sub_23FC58ADC();
  sub_23FC58AE4();
  sub_23FC58FA0();
  sub_23FC58AC0();

  sub_23FC5A810();
  v108 = v78;
  sub_23FC5EFC0(0);
  if (v109)
  {
    if ((v266 & 1) != 0)
    {
      sub_23FC59F80();
      v110 = sub_23FC58A94();
      *(_QWORD *)(v110 + 16) = sub_23FC576A8;
      *(_QWORD *)(v110 + 24) = v72;
      v111 = sub_23FC58AA0();
      sub_23FC5A560(v111);
      v112 = sub_23FC58A94();
      *(_QWORD *)(v112 + 16) = sub_23FC57844;
      *(_QWORD *)(v112 + 24) = v85;
      sub_23FC58D78();
      v113 = sub_23FC5A14C();
      LODWORD(v272) = sub_23FC5B510(v113);
      v114 = sub_23FC58AA0();
      sub_23FC59C28(v114);
      v115 = sub_23FC58AA0();
      sub_23FC5A4CC(v115);
      v25 = sub_23FC58A94();
      *(_QWORD *)(v25 + 16) = sub_23FC586BC;
      *(_QWORD *)(v25 + 24) = v110;
      v116 = (_QWORD *)sub_23FC58A94();
      v116[2] = sub_23FC586C0;
      v116[3] = v25;
      v117 = sub_23FC58AA0();
      sub_23FC5AEC0(v117);
      v118 = sub_23FC58AA0();
      sub_23FC5B790(v118);
      v119 = sub_23FC58A94();
      *(_QWORD *)(v119 + 16) = sub_23FC586CC;
      *(_QWORD *)(v119 + 24) = v112;
      v120 = sub_23FC58A94();
      *(_QWORD *)(v120 + 16) = sub_23FC586C0;
      *(_QWORD *)(v120 + 24) = v119;
      v121 = sub_23FC58AA0();
      sub_23FC59258(v121);
      v122[4] = sub_23FC586E0;
      v122[5] = v78;
      v122[6] = sub_23FC586E0;
      v122[7] = v115;
      v122[8] = sub_23FC586D4;
      v122[9] = v116;
      v122[10] = sub_23FC586E0;
      v122[11] = v78;
      v122[12] = sub_23FC586E0;
      v122[13] = v25;
      v122[14] = sub_23FC586D4;
      v122[15] = v120;
      sub_23FC58F98();
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58D68();
      sub_23FC58D80();
      sub_23FC58C88();
      sub_23FC58D60();
      if (sub_23FC599FC((os_log_type_t)v272))
      {
        v123 = (uint8_t *)sub_23FC58F88();
        v124 = sub_23FBFEFF4();
        v72[221] = 0;
        v72[222] = v124;
        v262 = v123;
        *(_WORD *)v123 = 514;
        v72[220] = v123 + 2;
        v72[135] = sub_23FC586E0;
        v72[136] = v78;
        sub_23FC59BF8(v250, v243, (uint64_t)(v286 + 221), (uint64_t)(v286 + 222));
        if (!v25)
        {
          sub_23FC58F00();
          v72[135] = sub_23FC586E0;
          v72[136] = v115;
          sub_23FC58AD0(v250, v243);
          sub_23FC58C64();
          v72[135] = sub_23FC586D4;
          v72[136] = v116;
          sub_23FC58AD0(v250, v243);
          sub_23FC58ADC();
          v72[135] = sub_23FC586E0;
          v72[136] = v78;
          sub_23FC58AD0(v250, v243);
          sub_23FC58AC8();
          v72[135] = sub_23FC586E0;
          v72[136] = 0;
          sub_23FC58AD0(v250, v243);
          sub_23FC58AC8();
          v72[135] = sub_23FC586D4;
          v72[136] = v120;
          sub_23FC58AD0(v250, v243);
          sub_23FC58AC0();
          sub_23FC5B218();
          sub_23FC5B468();
          v128 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work and be sent to client.";
          goto LABEL_42;
        }
LABEL_89:
        sub_23FC5A434((id)v25);
        return;
      }
      v94 = v72[427];
      goto LABEL_46;
    }
    sub_23FC59F80();
    v146 = sub_23FC58A94();
    *(_QWORD *)(v146 + 16) = sub_23FC576A8;
    *(_QWORD *)(v146 + 24) = v72;
    v147 = sub_23FC58AA0();
    sub_23FC5A560(v147);
    v148 = sub_23FC58A94();
    *(_QWORD *)(v148 + 16) = sub_23FC57844;
    *(_QWORD *)(v148 + 24) = v85;
    sub_23FC58D78();
    v149 = sub_23FC5A14C();
    LODWORD(v272) = sub_23FC5B510(v149);
    v150 = sub_23FC58AA0();
    sub_23FC59C28(v150);
    v115 = sub_23FC58AA0();
    sub_23FC5A4CC(v115);
    v25 = sub_23FC58A94();
    *(_QWORD *)(v25 + 16) = sub_23FC586BC;
    *(_QWORD *)(v25 + 24) = v146;
    v116 = (_QWORD *)sub_23FC58A94();
    v116[2] = sub_23FC586C0;
    v116[3] = v25;
    v151 = sub_23FC58AA0();
    sub_23FC5AEC0(v151);
    v152 = sub_23FC58AA0();
    sub_23FC5B790(v152);
    v153 = sub_23FC58A94();
    *(_QWORD *)(v153 + 16) = sub_23FC586CC;
    *(_QWORD *)(v153 + 24) = v148;
    v120 = sub_23FC58A94();
    *(_QWORD *)(v120 + 16) = sub_23FC586C0;
    *(_QWORD *)(v120 + 24) = v153;
    v154 = sub_23FC58AA0();
    sub_23FC59258(v154);
    v155[4] = sub_23FC586E0;
    v155[5] = v78;
    v155[6] = sub_23FC586E0;
    v155[7] = v115;
    v155[8] = sub_23FC586D4;
    v155[9] = v116;
    v155[10] = sub_23FC586E0;
    v155[11] = v78;
    v155[12] = sub_23FC586E0;
    v155[13] = v25;
    v155[14] = sub_23FC586D4;
    v155[15] = v120;
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58D80();
    sub_23FC58C88();
    sub_23FC58D60();
    if (sub_23FC599FC((os_log_type_t)v272))
    {
      v156 = (uint8_t *)sub_23FC58F88();
      v157 = sub_23FBFEFF4();
      v72[217] = 0;
      v72[218] = v157;
      v262 = v156;
      *(_WORD *)v156 = 514;
      v72[216] = v156 + 2;
      v72[139] = sub_23FC586E0;
      v72[140] = v78;
      sub_23FC59BF8(v249, v244, (uint64_t)(v286 + 217), (uint64_t)(v286 + 218));
      if (v25)
        goto LABEL_89;
      sub_23FC58F00();
      v72[139] = sub_23FC586E0;
      v72[140] = v115;
      sub_23FC58AD0(v249, v244);
      sub_23FC58C64();
      v72[139] = sub_23FC586D4;
      v72[140] = v116;
      sub_23FC58AD0(v249, v244);
      sub_23FC58ADC();
      v72[139] = sub_23FC586E0;
      v72[140] = v78;
      sub_23FC58AD0(v249, v244);
      sub_23FC58AC8();
      v72[139] = sub_23FC586E0;
      v72[140] = 0;
      sub_23FC58AD0(v249, v244);
      sub_23FC58AC8();
      v72[139] = sub_23FC586D4;
      v72[140] = v120;
      sub_23FC58AD0(v249, v244);
      sub_23FC58AC0();
      sub_23FC5B218();
      sub_23FC5B468();
      v128 = "[SessionCoordinator %s] | [TX %s] Transaction allowed to cause work, but will not be sent to client.";
      goto LABEL_42;
    }
    v94 = v72[426];
    goto LABEL_46;
  }
  if ((v266 & 1) != 0)
  {
    sub_23FC59F80();
    v132 = sub_23FC58A94();
    *(_QWORD *)(v132 + 16) = sub_23FC576A8;
    *(_QWORD *)(v132 + 24) = v72;
    v133 = sub_23FC58AA0();
    sub_23FC5A560(v133);
    v134 = sub_23FC58A94();
    *(_QWORD *)(v134 + 16) = sub_23FC57844;
    *(_QWORD *)(v134 + 24) = v85;
    sub_23FC58D78();
    v135 = sub_23FC5A14C();
    LODWORD(v272) = sub_23FC5B510(v135);
    v136 = sub_23FC58AA0();
    sub_23FC59C28(v136);
    v115 = sub_23FC58AA0();
    sub_23FC5A4CC(v115);
    v25 = sub_23FC58A94();
    *(_QWORD *)(v25 + 16) = sub_23FC586BC;
    *(_QWORD *)(v25 + 24) = v132;
    v116 = (_QWORD *)sub_23FC58A94();
    v116[2] = sub_23FC586C0;
    v116[3] = v25;
    v137 = sub_23FC58AA0();
    sub_23FC5AEC0(v137);
    v138 = sub_23FC58AA0();
    sub_23FC5B790(v138);
    v139 = sub_23FC58A94();
    *(_QWORD *)(v139 + 16) = sub_23FC586CC;
    *(_QWORD *)(v139 + 24) = v134;
    v120 = sub_23FC58A94();
    *(_QWORD *)(v120 + 16) = sub_23FC586C0;
    *(_QWORD *)(v120 + 24) = v139;
    v140 = sub_23FC58AA0();
    sub_23FC59258(v140);
    v141[4] = sub_23FC586E0;
    v141[5] = v78;
    v141[6] = sub_23FC586E0;
    v141[7] = v115;
    v141[8] = sub_23FC586D4;
    v141[9] = v116;
    v141[10] = sub_23FC586E0;
    v141[11] = v78;
    v141[12] = sub_23FC586E0;
    v141[13] = v25;
    v141[14] = sub_23FC586D4;
    v141[15] = v120;
    sub_23FC58F98();
    sub_23FC58D70();
    sub_23FC58D58();
    sub_23FC58D68();
    sub_23FC58D80();
    sub_23FC58C88();
    sub_23FC58D60();
    if (sub_23FC599FC((os_log_type_t)v272))
    {
      v142 = (uint8_t *)sub_23FC58F88();
      v143 = sub_23FBFEFF4();
      v72[213] = 0;
      v72[214] = v143;
      v262 = v142;
      *(_WORD *)v142 = 514;
      v72[212] = v142 + 2;
      v72[141] = sub_23FC586E0;
      v72[142] = v78;
      sub_23FC59BF8(v248, v245, (uint64_t)(v286 + 213), (uint64_t)(v286 + 214));
      if (v25)
        goto LABEL_89;
      sub_23FC58F00();
      v72[141] = sub_23FC586E0;
      v72[142] = v115;
      sub_23FC58AD0(v248, v245);
      sub_23FC58C64();
      v72[141] = sub_23FC586D4;
      v72[142] = v116;
      sub_23FC58AD0(v248, v245);
      sub_23FC58ADC();
      v72[141] = sub_23FC586E0;
      v72[142] = v78;
      sub_23FC58AD0(v248, v245);
      sub_23FC58AC8();
      v72[141] = sub_23FC586E0;
      v72[142] = 0;
      sub_23FC58AD0(v248, v245);
      sub_23FC58AC8();
      v72[141] = sub_23FC586D4;
      v72[142] = v120;
      sub_23FC58AD0(v248, v245);
      sub_23FC58AC0();
      sub_23FC5B218();
      sub_23FC5B468();
      v128 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work, but will be sent to client.";
LABEL_42:
      sub_23FC59250(v125, v126, v127, v128, v262);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    v94 = v72[424];
LABEL_46:
    sub_23FC58F00();
    sub_23FC58C64();
    sub_23FC58ADC();
    sub_23FC58C6C();
    goto LABEL_48;
  }
  sub_23FC59F80();
  v158 = sub_23FC58A94();
  *(_QWORD *)(v158 + 16) = sub_23FC576A8;
  *(_QWORD *)(v158 + 24) = v72;
  v159 = sub_23FC58AA0();
  sub_23FC5A560(v159);
  v160 = sub_23FC58A94();
  *(_QWORD *)(v160 + 16) = sub_23FC57844;
  *(_QWORD *)(v160 + 24) = v85;
  sub_23FC58D78();
  v161 = sub_23FC5A14C();
  v276 = sub_23FD74F6C();
  v162 = sub_23FC58AA0();
  sub_23FC59C28(v162);
  v115 = sub_23FC58AA0();
  sub_23FC5A4CC(v115);
  v25 = sub_23FC58A94();
  *(_QWORD *)(v25 + 16) = sub_23FC586BC;
  *(_QWORD *)(v25 + 24) = v158;
  v116 = (_QWORD *)sub_23FC58A94();
  v116[2] = sub_23FC586C0;
  v116[3] = v25;
  v163 = sub_23FC58AA0();
  sub_23FC5E784(v163);
  v164 = sub_23FC58AA0();
  sub_23FC5EA60(v164);
  v35 = (_BYTE *)v161;
  v165 = sub_23FC58A94();
  *(_QWORD *)(v165 + 16) = sub_23FC586CC;
  *(_QWORD *)(v165 + 24) = v160;
  v120 = sub_23FC58A94();
  *(_QWORD *)(v120 + 16) = sub_23FC586C0;
  *(_QWORD *)(v120 + 24) = v165;
  v166 = sub_23FC58AA0();
  sub_23FC59258(v166);
  v167[4] = sub_23FC586E0;
  v167[5] = v108;
  v167[6] = sub_23FC586E0;
  v167[7] = v115;
  v167[8] = sub_23FC586D4;
  v167[9] = v116;
  v167[10] = sub_23FC586E0;
  v167[11] = v25;
  v167[12] = sub_23FC586E0;
  v167[13] = v161;
  v167[14] = sub_23FC586D4;
  v167[15] = v120;
  sub_23FC58F98();
  sub_23FC58D70();
  sub_23FC58D58();
  sub_23FC58D80();
  sub_23FC58D68();
  sub_23FC58C88();
  sub_23FC58D60();
  if (sub_23FC599FC(v276))
  {
    v168 = (uint8_t *)sub_23FC58F88();
    v169 = sub_23FBFEFF4();
    v72[209] = 0;
    v72[210] = v169;
    v262 = v168;
    *(_WORD *)v168 = 514;
    v72[208] = v168 + 2;
    v72[143] = sub_23FC586E0;
    v72[144] = v108;
    sub_23FC59BF8(v247, v246, (uint64_t)(v286 + 209), (uint64_t)(v286 + 210));
    if (v25)
      goto LABEL_89;
    sub_23FC58F00();
    v72[143] = sub_23FC586E0;
    v72[144] = v115;
    sub_23FC58AD0(v247, v246);
    sub_23FC58C64();
    v72[143] = sub_23FC586D4;
    v72[144] = v116;
    sub_23FC58AD0(v247, v246);
    sub_23FC58ADC();
    v72[143] = sub_23FC586E0;
    v72[144] = 0;
    sub_23FC58AD0(v247, v246);
    sub_23FC58AC8();
    v72[143] = sub_23FC586E0;
    v72[144] = v161;
    sub_23FC58AD0(v247, v246);
    sub_23FC58AC8();
    v72[143] = sub_23FC586D4;
    v72[144] = v120;
    sub_23FC58AD0(v247, v246);
    sub_23FC58AC0();
    sub_23FC5BF60();
    v125 = &dword_23FBF8000;
    v126 = v161;
    v128 = "[SessionCoordinator %s] | [TX %s] Transaction not allowed to cause work or be sent to client.";
    goto LABEL_42;
  }
  v94 = v72[423];
  sub_23FC58F00();
  sub_23FC58C64();
  sub_23FC58ADC();
  sub_23FC58FA0();
LABEL_48:
  swift_release();
  sub_23FC58AC0();

  sub_23FC5A810();
  v101 = (uint64_t)v72;
  v170 = sub_23FC5B24C();
  v171 = v286 + 12;
  if (v170 != v172)
  {
    sub_23FC5D3D4();
    if (v173 != v174)
    {
      __break(1u);
    }
    else
    {
      sub_23FC5D020();
      sub_23FC59120();
      if (v120 < (uint64_t)v72)
      {
        do
        {
          v115 = *(_QWORD *)(v101 + 4080);
          v101 = v286[509];
          v272 = v286[508];
          v271 = v286[464];
          v116 = (_QWORD *)v286[458];
          v94 = (uint64_t)(v286 + 54);
          sub_23FC5A1AC((uint64_t)(v286 + 54));
          sub_23FC5B8D8();
          sub_23FC5DAD4();
          v35 = (_BYTE *)v25;
          sub_23FC5A09C();
          sub_23FC5A1AC((uint64_t)(v286 + 34));
          sub_23FC5B194();
          sub_23FC5CC30();
          sub_23FC0F3AC(v271, (uint64_t)v116, qword_254346A10);
          sub_23FC5A1AC((uint64_t)(v286 + 38));
          sub_23FC5BD94();
          sub_23FC5ACFC();
          v25 = v272;
          sub_23FC10108();
          sub_23FC5A1AC((uint64_t)(v286 + 42));
          sub_23FC5DBA4();
          sub_23FC5ACFC();
          sub_23FC5EE74();
        }
        while (!v130);
        swift_endAccess();
        v171 = v286 + 12;
        goto LABEL_54;
      }
    }
    __break(1u);
    JUMPOUT(0x23FC4FB00);
  }
LABEL_54:
  sub_23FC5BB24();
  sub_23FC5E344();
  sub_23FC5F4A8();
  v175 = sub_23FD74B40();
  v176 = sub_23FC5BB14(v175);
  sub_23FC10110();
  if (v176)
  {
    v120 = 0;
    v271 = v94;
    do
    {
      sub_23FC56978(v260, v120, v94);
      sub_23FC5B844(v177);
      sub_23FC5C5B8(v260);
      v174 = __OFADD__(v120++, 1);
      if (v174)
      {
        __break(1u);
        JUMPOUT(0x23FC4F334);
      }
      v178 = *(_QWORD *)(v101 + 4032);
      sub_23FBFDE28((__int128 *)(v286 + 7), (uint64_t)v171);
      v25 = *(_QWORD *)(v101 + 128);
      sub_23FBFDE40(v171, *(_QWORD *)(v101 + 120));
      v35 = *(_BYTE **)(v178 + 16);
      v179 = sub_23FC5AC34();
      v180 = sub_23FC5F5B0(v179);
      sub_23FC5A2A8();
      if ((v180 & 1) == 0)
        goto LABEL_74;
      if ((v264 & 1) != 0)
      {
        if ((v266 & 1) != 0)
          goto LABEL_66;
        v181 = *(_QWORD *)(v101 + 120);
        sub_23FC59F98();
        v182 = sub_23FC5B288();
        v25 = v183;
        v184 = sub_23FC543D0(v180, v181, v182, v183);
        sub_23FC58D60();
        sub_23FC595E0();
        if ((v184 & 1) == 0)
          goto LABEL_66;
      }
      else if ((_DWORD)v266)
      {
        v25 = *(_QWORD *)(v101 + 128);
        sub_23FC59F98();
        v185 = sub_23FC5B288();
        v187 = sub_23FC5D1C0(v185, v186);
        sub_23FC595E0();
        sub_23FC58D60();
        if ((v187 & 1) != 0)
        {
          sub_23FC5B844((uint64_t)v283);
          sub_23FBFD684(&qword_256F5E420);
          sub_23FC5B294();
          v25 = (uint64_t)(v286 + 203);
          if (sub_23FC5AA14())
          {
            swift_release();
LABEL_66:
            v25 = *(_QWORD *)(v101 + 128);
            v188 = sub_23FC59F98();
            sub_23FC5CC88(v188, v189);
            v191 = v190;
            sub_23FC1002C();
            if ((v191 & 1) != 0)
            {
              v192 = sub_23FC5B24C();
              if (v192 != v193)
              {
                sub_23FC5F4E0();
                if (v173 != v174)
                {
                  __break(1u);
                  JUMPOUT(0x23FC4FAECLL);
                }
                v272 = v194;
                do
                {
                  if (v194 == v191)
                  {
                    __break(1u);
                    JUMPOUT(0x23FC4F034);
                  }
                  v195 = *(_QWORD *)(v101 + 3040);
                  v196 = *(_QWORD *)(v101 + 2984);
                  sub_23FC59120();
                  sub_23FC5BB04();
                  sub_23FD73FB8();
                  v198 = v197;
                  sub_23FC595C4(v195, *(uint64_t (**)(uint64_t, uint64_t))(v196 + 8));
                  sub_23FC5BC88();
                  if ((v198 & 1) != 0)
                  {
                    swift_release();
                    __break(1u);
                    JUMPOUT(0x23FC4FB14);
                  }
                  v25 = *(_QWORD *)(v101 + 4032) + 16;
                  v120 = (int64_t)(v286 + 12);
                  sub_23FC59128(v283);
                  sub_23FC5B094();
                  v199 = sub_23FC59128(v283);
                  sub_23FC5D1D8(v199, v200);
                  v116 = (_QWORD *)sub_23FC59128(v283);
                  v115 = v201;
                  sub_23FC59120();
                  v35 = v286 + 50;
                  sub_23FC5CD18((uint64_t)(v286 + 50));
                  sub_23FC5DB84();
                  sub_23FC5AD30();
                  sub_23FC5DA88((uint64_t)v283);
                  sub_23FC5F2B8();
                  sub_23FC5BC88();
                  sub_23FC5F148();
                }
                while (!v130);
              }
            }
          }
        }
      }
LABEL_74:
      v171 = v286 + 12;
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v283);
      v94 = v271;
    }
    while (v120 != sub_23FC5C5F0());
  }
  sub_23FC5CFCC();
  sub_23FC5AD9C();
  sub_23FC5B2FC();
  if (sub_23FC5EDD0(v202))
  {
    v203 = sub_23FC5A09C();
    sub_23FC5D26C(v203);
    if (v25)
    {
      v204 = *(_QWORD *)(v101 + 2208);
      sub_23FC103E8();
      sub_23FC5A56C();
      sub_23FC58FB0();
      v205 = sub_23FC58A94();
      *(_QWORD *)(v205 + 16) = sub_23FC576A8;
      *(_QWORD *)(v205 + 24) = v204;
      v206 = sub_23FC58AA0();
      sub_23FC5DB98(v206);
      v207 = sub_23FC58A94();
      *(_QWORD *)(v207 + 16) = sub_23FC57844;
      *(_QWORD *)(v207 + 24) = v94;
      v208 = sub_23FC58AA0();
      *(_QWORD *)(v208 + 16) = v25;
      sub_23FC58CA8();
      sub_23FC091A4();
      v209 = sub_23FD72BE4();
      v277 = sub_23FC5BBC0(v209);
      v285 = sub_23FC58AA0();
      sub_23FC59D6C(v285);
      v271 = sub_23FC58AA0();
      sub_23FC5A4CC(v271);
      v210 = sub_23FC58A94();
      *(_QWORD *)(v210 + 16) = sub_23FC586BC;
      *(_QWORD *)(v210 + 24) = v205;
      v211 = sub_23FC58A94();
      *(_QWORD *)(v211 + 16) = sub_23FC586C0;
      *(_QWORD *)(v211 + 24) = v210;
      v212 = sub_23FC58AA0();
      sub_23FC5E920(v212);
      v213 = sub_23FC58AA0();
      *(_BYTE *)(v213 + 16) = v204;
      v214 = sub_23FC58A94();
      *(_QWORD *)(v214 + 16) = sub_23FC586CC;
      *(_QWORD *)(v214 + 24) = v207;
      v215 = sub_23FC58A94();
      *(_QWORD *)(v215 + 16) = sub_23FC586C0;
      *(_QWORD *)(v215 + 24) = v214;
      v216 = (void *)sub_23FC58AA0();
      sub_23FC5AC94((uint64_t)v216);
      v217 = sub_23FC58AA0();
      *(_BYTE *)(v217 + 16) = v204;
      v218 = sub_23FC58A94();
      *(_QWORD *)(v218 + 16) = sub_23FC5770C;
      *(_QWORD *)(v218 + 24) = v208;
      v219 = (_QWORD *)sub_23FC58A94();
      v219[2] = sub_23FC586C4;
      v219[3] = v218;
      v220 = sub_23FC58A94();
      *(_QWORD *)(v220 + 16) = sub_23FC586C8;
      *(_QWORD *)(v220 + 24) = v219;
      v221 = sub_23FC58AA0();
      sub_23FC5A828(v221);
      v219[5] = sub_23FC5BA48(v222);
      v219[6] = sub_23FC586E0;
      v219[7] = v271;
      v219[8] = sub_23FC586D4;
      v219[9] = v211;
      v219[10] = sub_23FC586E0;
      v219[11] = v205;
      v219[12] = sub_23FC586E0;
      v219[13] = v213;
      v219[14] = sub_23FC586D4;
      v219[15] = v215;
      v219[16] = sub_23FC586E0;
      v219[17] = v216;
      v219[18] = sub_23FC586E0;
      v219[19] = v217;
      v219[20] = sub_23FC586D8;
      sub_23FC5C9E4();
      sub_23FC58D78();
      sub_23FC58D68();
      sub_23FC58D90();
      sub_23FC58F98();
      v272 = v215;
      sub_23FC58D70();
      sub_23FC58D58();
      sub_23FC58C88();
      sub_23FC58CA8();
      sub_23FC58D60();
      if (sub_23FC5F4F8(0, v277))
      {
        v263 = v217;
        v265 = v205;
        v223 = (uint8_t *)sub_23FC5A2EC();
        v224 = sub_23FBFEFF4();
        v225 = sub_23FBFEFF4();
        v286[199] = v224;
        v286[200] = v225;
        v259 = v223;
        *(_WORD *)v223 = 770;
        v25 = (uint64_t)(v223 + 2);
        v286[198] = v25;
        v226 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5CF8C((uint64_t)sub_23FC586E0);
        sub_23FC5A094(v226, v227, v251, (uint64_t)(v286 + 200));
        if (!v25)
        {
          sub_23FC5A928();
          v228 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_23FC5EDBC((uint64_t)sub_23FC586E0);
          sub_23FC58C90(v228, v229, v251);
          sub_23FC58CA0();
          v286[149] = sub_23FC586D4;
          v286[150] = v211;
          sub_23FC58C90((uint64_t (**)(uint64_t, uint64_t, uint64_t))v215, v271, v251);
          sub_23FC58ADC();
          v286[149] = sub_23FC586E0;
          v286[150] = v265;
          sub_23FC58C90((uint64_t (**)(uint64_t, uint64_t, uint64_t))v215, v271, v251);
          sub_23FC58ADC();
          v286[149] = sub_23FC586E0;
          v286[150] = v213;
          sub_23FC58C90((uint64_t (**)(uint64_t, uint64_t, uint64_t))v215, v271, v251);
          sub_23FC101F4();
          v286[149] = sub_23FC586D4;
          v286[150] = v215;
          sub_23FC58C90((uint64_t (**)(uint64_t, uint64_t, uint64_t))v215, v271, v251);
          sub_23FC101F4();
          v286[149] = sub_23FC586E0;
          v286[150] = v216;
          sub_23FC58C90((uint64_t (**)(uint64_t, uint64_t, uint64_t))v215, v271, v251);
          sub_23FC101F4();
          v286[149] = sub_23FC586E0;
          v286[150] = v263;
          sub_23FC58C90((uint64_t (**)(uint64_t, uint64_t, uint64_t))v215, v271, v251);
          sub_23FC101F4();
          v286[149] = sub_23FC586D8;
          v286[150] = v220;
          sub_23FC58C90((uint64_t (**)(uint64_t, uint64_t, uint64_t))v215, v271, v251);
          sub_23FC58C6C();
          sub_23FC5BF60();
          sub_23FC5D0CC();
          sub_23FC10464(v230, v231, v232, "[SessionCoordinator %s] | [TX %s] Failed to encode to proto data for debugger: %@", v259);
          sub_23FBFD684(&qword_254346A30);
          sub_23FBFF10C();
          sub_23FBFEFA0();
        }
        goto LABEL_89;
      }
      v129 = (uint64_t)v286;
      v94 = v286[409];
      sub_23FC5B2A0();
      sub_23FC5A928();
      sub_23FC58AC8();
      sub_23FC58FA0();
      sub_23FC58C6C();
      sub_23FC5EAEC();
      sub_23FC5B30C();
      sub_23FC5CDB8();
      sub_23FC58AC0();
      sub_23FC58AE4();

      sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8));
      v101 = (uint64_t)v286;
    }
    else
    {
      LODWORD(v271) = *(_DWORD *)(v101 + 4268);
      v281 = *(_QWORD *)(v101 + 2960);
      v272 = *(_QWORD *)(v101 + 2192);
      v278 = *(_QWORD *)(v101 + 2968);
      sub_23FC5A56C();
      sub_23FC5A09C();
      v101 = sub_23FC5CC10((uint64_t)sub_23FCB3EF8);
      v129 = v236;
      sub_23FC5A56C();
      sub_23FC5B564();
      v237 = sub_23FC5D408();
      sub_23FC0F3AC(v237, v238, qword_254346A10);
      sub_23FC5C330();
      sub_23FC5D0AC();
      sub_23FC5B814();
      sub_23FBFD684(&qword_256F5E378);
      v94 = v278;
      sub_23FC5B544();
      sub_23FC5B0DC(v281);
    }
  }
  else
  {
    sub_23FC5ADDC();
    sub_23FBFD684(&qword_256F5E498);
    v233 = sub_23FC5AA90();
    sub_23FC0F3AC(v233, v234, qword_254346A10);
    *v116 = v35;
    v116[1] = v120;
    v129 = *(_QWORD *)(v101 + 1552);
    *(_QWORD *)(v94 + v115) = v129;
    sub_23FC5AA0C();
    sub_23FC10108();
    sub_23FC5AAE8();
    v235 = sub_23FC5DAE0();
    sub_23FC50A38(v235, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23FC55E4C);
    sub_23FC5806C(v94, type metadata accessor for SessionCoordinatorCommand);
  }
  sub_23FC5B6B8();
  if (v130)
  {
    sub_23FC594B8();
    v129 = v239;
    sub_23FC103E8();
    sub_23FC5A2C4();
    sub_23FC5A2D8();
    sub_23FC5B224();
    sub_23FBFD684(&qword_256F5E378);
    v94 = v271;
    sub_23FC5B2A8();
    sub_23FC5B768();
    sub_23FC5B0DC(v272);
  }
  else
  {
    sub_23FC103E8();
    sub_23FC58AC8();
  }
  v240 = sub_23FC5AAC8();
  sub_23FC584B0(v240, qword_254346A10);
  sub_23FC5806C(v129, type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload);
  sub_23FC5DEB4();
  sub_23FC58CA0();
  sub_23FC58AC8();
  v145 = v258;
LABEL_87:
  *(_DWORD *)(v101 + 4280) = v145;
  *(_QWORD *)(v101 + 3960) = 0;
  sub_23FC5B488();
  sub_23FC100EC(v94, 1, v129);
  if (!v130)
  {
    v241 = (char *)&loc_23FC47208 + *((int *)qword_23FC4FB30 + sub_23FC5E018());
    __asm { BR              X9 }
  }
  v242 = (_QWORD *)swift_task_alloc();
  sub_23FC5BB94(v242, (uint64_t)sub_23FC2D608);
  sub_23FC5A488();
}

uint64_t sub_23FC4FB50()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC4FB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC5ACE0();
  v1 = *(_QWORD *)(v0 + 4024);
  v2 = *(_QWORD *)(v0 + 3840);
  v3 = *(_QWORD *)(v0 + 3832);
  v4 = *(_QWORD *)(v0 + 2208);
  swift_release();
  sub_23FC58AC8();
  v5 = sub_23FC5030C(v4, v1);
  sub_23FC5F290(v5, qword_254346A10);
  swift_release();
  sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  swift_task_dealloc();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5D7F4();
  sub_23FC5E088();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5DA80();
  sub_23FC5CDE8();
  sub_23FC5CDD8();
  sub_23FC5CDC0();
  sub_23FC5CDB0();
  sub_23FC5C418();
  sub_23FC5BFD8();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  return sub_23FC09088(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC50264@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(uint64_t *)(*v1 + 24) < 1)
  {
    v8 = type metadata accessor for SessionCoordinatorCommand(0);
    v6 = a1;
    v7 = 1;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_23FC55A64();
    v3 = *v1;
    v4 = type metadata accessor for SessionCoordinatorCommand(0);
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
    sub_23FC55B18((_QWORD *)(v3 + 16), v3 + ((v5 + 40) & ~v5), a1);
    v6 = a1;
    v7 = 0;
    v8 = v4;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v6, v7, 1, v8);
}

uint64_t sub_23FC5030C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_23FD72BF0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD724C4();
  swift_retain();
  v8 = sub_23FD72BE4();
  v9 = sub_23FD74F6C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v19 = a2;
    v11 = v10;
    v12 = swift_slowAlloc();
    v21 = v12;
    *(_DWORD *)v11 = 136315394;
    v13 = SessionIdentityPack.description.getter();
    v20 = sub_23FC9DC40(v13, v14, &v21);
    sub_23FD75044();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v20 = v19;
    sub_23FC57E74();
    v15 = sub_23FD75068();
    v20 = sub_23FC9DC40(v15, v16, &v21);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v8, v9, "[SessionCoordinator %s] | [TX %s] Finished preprocessing transaction.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v12, -1, -1);
    MEMORY[0x2426798D8](v11, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_23FC5051C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23FC0EDD8(a1 + qword_256F605B0, a2, type metadata accessor for SessionIdentityPack);
}

uint64_t sub_23FC50548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  return a3;
}

uint64_t sub_23FC50588(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = *(_QWORD *)(type metadata accessor for EventPayloadWithPreassignedID(0) - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      swift_retain();
      v9 = a2(v7);
      swift_release();
      if ((v9 & 1) != 0)
        break;
      ++v5;
      v7 += v8;
      if (v4 == v5)
      {
        v5 = v4;
        return sub_23FC56F90(v5, v4, a1, a2);
      }
    }
  }
  else
  {
    v5 = 0;
  }
  return sub_23FC56F90(v5, v4, a1, a2);
}

uint64_t sub_23FC50640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v53 = a4;
  v54 = a5;
  v52 = a3;
  v49 = a2;
  v61 = a6;
  v7 = sub_23FBFD684((uint64_t *)&unk_256F61700);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD740CC();
  v47 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v46 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD71474();
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v59 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FD73700();
  MEMORY[0x24BDAC7A8](v17, v18);
  v58 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FD73E08();
  v50 = *(_QWORD *)(v20 - 8);
  v51 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v48 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23FD73D9C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23FD74090();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = (char *)&v45 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(int *)(type metadata accessor for EventPayloadWithPreassignedID(0) + 20);
  v60 = a1;
  v55 = a1 + v33;
  sub_23FD7406C();
  v34 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v32, v28);
  if (v34 != *MEMORY[0x24BE56BF0] && v34 != *MEMORY[0x24BE56BE0])
  {
    if (v34 == *MEMORY[0x24BE56BE8] || v34 == *MEMORY[0x24BE56BD0])
    {
      v37 = v49 + *(_QWORD *)(*(_QWORD *)v49 + 128);
LABEL_13:
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v37, v23);
      v39 = v48;
      sub_23FD73D6C();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      v40 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v59, v60, v57);
      MEMORY[0x2426774A8](v40);
      sub_23FD73DC0();
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v39, v51);
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  }
  v38 = v54;
  swift_beginAccess();
  sub_23FC0F3AC(v38, (uint64_t)v10, (uint64_t *)&unk_256F61700);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_23FC584B0((uint64_t)v10, (uint64_t *)&unk_256F61700);
    v37 = v49 + *(_QWORD *)(*(_QWORD *)v49 + 128);
    goto LABEL_13;
  }
  v42 = v47;
  v43 = v46;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v10, v11);
  v44 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v59, v60, v57);
  MEMORY[0x2426774A8](v44);
  sub_23FD7400C();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v11);
}

uint64_t sub_23FC50A38(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t *v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;

  result = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    if (*(_QWORD *)(*v2 + 16) < v6 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23FC55BAC(v6);
      v9 = *v2;
    }
    type metadata accessor for SessionCoordinatorCommand(0);
    sub_23FC5F564();
    return a2(v9 + 16, v9 + ((v10 + 40) & ~v10), a1);
  }
  return result;
}

uint64_t sub_23FC50AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a3;
}

uint64_t sub_23FC50B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23FBFD684(&qword_256F5E4D8);
    v6 = sub_23FD7526C();
  }
  else
  {
    v6 = MEMORY[0x24BEE4B00];
  }
  v8 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23FC56094(a1, a2, a3, 1, &v8);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23FC50BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23FBFD684(&qword_256F5E4E8);
    v3 = sub_23FD7526C();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_23FC55EE8(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

uint64_t sub_23FC50C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[42] = a2;
  v3[43] = v2;
  v3[41] = a1;
  v4 = sub_23FD72B9C();
  v3[44] = v4;
  v3[45] = *(_QWORD *)(v4 - 8);
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v5 = sub_23FBFD684(&qword_256F5E2B8);
  v3[48] = v5;
  v3[49] = *(_QWORD *)(v5 - 8);
  v3[50] = swift_task_alloc();
  v6 = sub_23FD73EF8();
  v3[51] = v6;
  v3[52] = *(_QWORD *)(v6 - 8);
  v3[53] = swift_task_alloc();
  v7 = sub_23FD72B6C();
  v3[54] = v7;
  v3[55] = *(_QWORD *)(v7 - 8);
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v8 = sub_23FD72B90();
  v3[61] = v8;
  v3[62] = *(_QWORD *)(v8 - 8);
  v3[63] = swift_task_alloc();
  v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  v3[68] = type metadata accessor for SessionCoordinatorAcceptPayload.Transaction(0);
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  v9 = sub_23FD72BF0();
  v3[71] = v9;
  v3[72] = *(_QWORD *)(v9 - 8);
  v3[73] = swift_task_alloc();
  v3[74] = swift_task_alloc();
  v3[75] = type metadata accessor for SessionCoordinatorAcceptPayload(0);
  v3[76] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E508);
  v3[77] = swift_task_alloc();
  v10 = sub_23FBFD684(&qword_256F5E510);
  v3[78] = v10;
  v3[79] = *(_QWORD *)(v10 - 8);
  v3[80] = swift_task_alloc();
  type metadata accessor for SessionIdentityPack(0);
  v3[81] = swift_task_alloc();
  v3[82] = swift_task_alloc();
  v3[83] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC50F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 664);
  v2 = *(uint64_t **)(v0 + 344);
  v3 = qword_256F605B0;
  *(_QWORD *)(v0 + 672) = qword_256F605B0;
  sub_23FC0EDD8((uint64_t)v2 + v3, v1, type metadata accessor for SessionIdentityPack);
  sub_23FBFD684(&qword_256F5E3B8);
  sub_23FC5E1D0();
  v4 = *v2;
  *(_QWORD *)(v0 + 680) = *(_QWORD *)(*v2 + 168);
  v5 = (_DWORD *)MEMORY[0x24BEE7810];
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v4 + 144);
  *(_DWORD *)(v0 + 848) = *v5;
  v6 = (_QWORD *)swift_task_alloc();
  sub_23FC5A410(v6);
  return sub_23FC5B4F4();
}

uint64_t sub_23FC50FAC()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC50FE0()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  os_signpost_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  os_signpost_id_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD);
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  os_signpost_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  os_signpost_id_t v62;
  _QWORD *v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  os_signpost_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t);
  uint64_t v88;

  sub_23FC100EC(v0[77], 1, v0[75]);
  if (v1)
  {
    sub_23FC090C8(v0[79]);
    v2 = sub_23FC59F80();
    sub_23FC5B5CC(v2, v3, type metadata accessor for SessionIdentityPack);
    v4 = sub_23FC5CCE8();
    sub_23FC584E0(v4, v5);
    v6 = sub_23FC5A14C();
    v7 = sub_23FD74F6C();
    v8 = os_log_type_enabled(v6, v7);
    v9 = v0[83];
    v10 = v0[74];
    v11 = v0[71];
    if (v8)
    {
      v12 = swift_slowAlloc();
      v88 = sub_23FBFEFF4();
      *(_DWORD *)v12 = 136315394;
      v13 = SessionIdentityPack.description.getter();
      v0[36] = sub_23FC9DC40(v13, v14, &v88);
      sub_23FC5E498();
      v15 = sub_23FC0AAF8();
      sub_23FC5A660(v15, type metadata accessor for SessionIdentityPack);
      *(_WORD *)(v12 + 12) = 2080;
      v17 = v0[14];
      v16 = v0[15];
      sub_23FBFDE40(v0 + 11, v17);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
      v18 = sub_23FD73214();
      v20 = v19;
      sub_23FC1002C();
      v0[35] = sub_23FC9DC40(v18, v20, &v88);
      sub_23FC5E498();
      sub_23FC0AAF8();
      sub_23FC5F2A4();
      sub_23FC59250(&dword_23FBF8000, v6, v7, "[SessionCoordinator %s] %s message loop closed.", (uint8_t *)v12);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    v38 = v0[72];

    sub_23FC5F2A4();
    v39 = sub_23FC5E880();
    sub_23FC5806C(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v10, v11);
    sub_23FC5806C(v9, type metadata accessor for SessionIdentityPack);
    swift_task_dealloc();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    swift_task_dealloc();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5CDF0();
    sub_23FC5C9C8();
    __asm { BR              X0 }
  }
  v21 = sub_23FBFF1AC();
  sub_23FC0F380(v21, v22, v23);
  sub_23FC5E714();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v25 = v0[41];
    sub_23FC5BC30(v0[52]);
    sub_23FC584E0(v25, (uint64_t)(v0 + 21));
    sub_23FBFD684(&qword_256F5E420);
    type metadata accessor for XPCClientAvatar();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v26 = v0[64];
      v27 = v0[62];
      v0[100] = v0[34];
      sub_23FD723E0();
      sub_23FC5C170();
      sub_23FD72B84();
      sub_23FD72B48();
      v28 = *(void (**)(uint64_t))(v27 + 8);
      v0[101] = v28;
      v29 = sub_23FC5D48C();
      v28(v29);
      swift_retain_n();
      sub_23FC58D58();
      sub_23FD72B84();
      v30 = sub_23FC5F348();
      if ((sub_23FC5F140() & 1) != 0)
      {
        (*(void (**)(void))(v0[55] + 16))();
        v31 = sub_23FBFEFF4();
        v88 = sub_23FBFEFF4();
        *(_DWORD *)v31 = 136315394;
        v32 = SessionIdentityPack.description.getter();
        v0[32] = sub_23FC5DAFC(v32, v33);
        sub_23FD75044();
        sub_23FC1002C();
        sub_23FC58ADC();
        *(_WORD *)(v31 + 12) = 2080;
        sub_23FD73238();
        sub_23FD73214();
        sub_23FC5A2A8();
        v34 = sub_23FC5F4D4();
        v0[33] = sub_23FC9DC40(v34, v35, v36);
        sub_23FD75044();
        sub_23FC5A648();
        sub_23FC5E1B0();
        v37 = sub_23FD72B54();
        _os_signpost_emit_with_name_impl(&dword_23FBF8000, v26, v30, v37, "StatusUpdateAccept", "[SessionCoordinator %s] - Part: %s - Accept Start", (uint8_t *)v31, 0x16u);
        sub_23FC58F90();
        sub_23FBFEFA0();
      }
      v74 = v0[55];

      sub_23FC58AC8();
      sub_23FC5E1B0();
      v75 = v0[55];
      sub_23FC5AE8C(v0[59], v0[57], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 16));
      sub_23FC5B9F8();
      sub_23FBFF1C4();
      v0[102] = sub_23FC5C018();
      v76 = *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8);
      v0[103] = v76;
      sub_23FC5A734(v76);
      v77 = sub_23FC5A8DC();
      v28(v77);
      v78 = (_QWORD *)swift_task_alloc();
      v0[104] = v78;
      *v78 = v0;
      v78[1] = sub_23FC51D34;
      sub_23FC5B9C8(v0[53]);
      sub_23FC5C9C8();
      return sub_23FD6B89C(v79);
    }
    else
    {
      sub_23FC090C8(v0[52]);
      v63 = (_QWORD *)swift_task_alloc();
      sub_23FC5A410(v63);
      sub_23FC5C9C8();
      return sub_23FD74E4C();
    }
  }
  else
  {
    v42 = v0[70];
    v43 = v0[69];
    v44 = v0[66];
    v46 = v0[61];
    v45 = v0[62];
    v47 = v0[41];
    sub_23FC0F380(v0[76], v42, type metadata accessor for SessionCoordinatorAcceptPayload.Transaction);
    sub_23FD723E0();
    sub_23FC5C170();
    sub_23FD72B84();
    sub_23FD72B48();
    v48 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v0[88] = v48;
    v48(v44, v46);
    sub_23FC0EDD8(v42, (uint64_t)v43, type metadata accessor for SessionCoordinatorAcceptPayload.Transaction);
    v84 = v0 + 26;
    sub_23FC5F4B4(v47);
    swift_retain();
    sub_23FD72B84();
    v49 = sub_23FC5F348();
    v87 = (void (*)(uint64_t))v48;
    if ((sub_23FC5F140() & 1) != 0)
    {
      v80 = v49;
      v50 = v0[69];
      v51 = v0[68];
      (*(void (**)(void))(v0[55] + 16))();
      v52 = sub_23FBFEFF4();
      v88 = sub_23FBFEFF4();
      *(_DWORD *)v52 = 136315650;
      v53 = SessionIdentityPack.description.getter();
      v0[37] = sub_23FC5DAFC(v53, v54);
      sub_23FC5E69C();
      sub_23FC1002C();
      sub_23FC58C6C();
      *(_WORD *)(v52 + 12) = 2080;
      v0[38] = *(_QWORD *)(v50 + *(int *)(v51 + 24));
      sub_23FC57E74();
      v55 = sub_23FD75068();
      v0[39] = sub_23FC5DAFC(v55, v56);
      sub_23FC5E69C();
      sub_23FC1002C();
      sub_23FC5806C(v50, type metadata accessor for SessionCoordinatorAcceptPayload.Transaction);
      *(_WORD *)(v52 + 22) = 2080;
      v57 = v0[29];
      v58 = v0[30];
      sub_23FBFDE40(v84, v57);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
      v59 = sub_23FD73214();
      v61 = v60;
      sub_23FC1002C();
      v0[40] = sub_23FC9DC40(v59, v61, &v88);
      sub_23FC5DAF4();
      sub_23FC5A648();
      sub_23FC5F2A4();
      v62 = sub_23FD72B54();
      _os_signpost_emit_with_name_impl(&dword_23FBF8000, v43, v80, v62, "Accept", "[SessionCoordinator %s] - Span %s - Part: %s - Accept Start", (uint8_t *)v52, 0x20u);
      sub_23FC1045C();
      sub_23FBFEFA0();
    }
    v65 = v0[55];

    v66 = sub_23FC101F4();
    sub_23FC5A660(v66, type metadata accessor for SessionCoordinatorAcceptPayload.Transaction);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v84);
    v67 = v0[68];
    v68 = v0[60];
    v69 = v0[55];
    v86 = v0[50];
    v83 = v0[49];
    v85 = v0[48];
    v81 = v0[70];
    v82 = v0[43] + v0[85];
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v65 + 16))(v0[59], v68, v0[54]);
    sub_23FC5B9F8();
    sub_23FBFF1C4();
    v0[89] = sub_23FC5C018();
    v70 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8);
    v0[90] = v70;
    sub_23FC595C4(v68, v70);
    v71 = sub_23FC5E96C();
    v87(v71);
    v0[91] = sub_23FD7370C();
    v0[92] = *(_QWORD *)(v81 + *(int *)(v67 + 24));
    v0[93] = sub_23FC5C954();
    v0[94] = v72;
    v0[95] = sub_23FC5C954();
    v0[96] = v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v86, v82, v85);
    sub_23FC5F38C();
    sub_23FC5C9C8();
    return swift_task_switch();
  }
}

uint64_t sub_23FC519FC()
{
  _QWORD *v0;

  v0[97] = *(_QWORD *)(v0[43] + v0[86] + 8);
  swift_retain();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC51A3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[97];
  v2 = v0[96];
  v3 = v0[95];
  v4 = v0[92];
  v5 = v0[50];
  v12 = v0[41];
  v13 = v0[70];
  v6 = type metadata accessor for SessionCoordinatorInjectionContext(0);
  sub_23FBFF1C4();
  v7 = sub_23FCBCEC0(v4, v3, v2, v5, v1);
  v0[19] = v6;
  sub_23FBFEE2C(&qword_256F5E518, type metadata accessor for SessionCoordinatorInjectionContext, (uint64_t)&unk_23FD78968);
  v0[20] = v8;
  v0[16] = v7;
  sub_23FD73718();
  v9 = swift_task_alloc();
  v0[98] = v9;
  *(_QWORD *)(v9 + 16) = v13;
  *(_QWORD *)(v9 + 24) = v12;
  v10 = (_QWORD *)swift_task_alloc();
  v0[99] = v10;
  *v10 = v0;
  v10[1] = sub_23FC51BAC;
  return sub_23FD754F4();
}

uint64_t sub_23FC51BAC()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC58FA0();
  v0 = sub_23FC090C0();
  sub_23FC5C15C(v0, &qword_256F5E528);
  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FC51C04()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _WORD *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_23FC5ACE0();
  v2 = *(_QWORD *)(v1 + 712);
  sub_23FC5C170();
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    v3 = *(_DWORD *)(v1 + 848);
    sub_23FC58D78();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FC5C754() != v3)
      sub_23FC090C8(*(_QWORD *)(v1 + 360));
    v4 = (_WORD *)sub_23FBFEFF4();
    v5 = sub_23FC5D894(v4);
    sub_23FC5C128(&dword_23FBF8000, v6, (os_signpost_type_t)v2, v5, "Accept");
    sub_23FBFEFA0();
  }
  v7 = *(void (**)(uint64_t))(v1 + 720);
  v8 = *(void (**)(uint64_t))(v1 + 704);

  v9 = sub_23FC5C5C0();
  v7(v9);
  v10 = sub_23FC5CCE8();
  v8(v10);
  v11 = sub_23FC58AC8();
  sub_23FC5CC1C(v11, type metadata accessor for SessionCoordinatorAcceptPayload.Transaction);
  v12 = (_QWORD *)swift_task_alloc();
  sub_23FC5A410(v12);
  sub_23FC5BC38();
  return sub_23FD74E4C();
}

uint64_t sub_23FC51D34()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23FC5A650();
  *v2 = *v1;
  *(_QWORD *)(v3 + 840) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC51D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _WORD *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  void (*v12)(uint64_t);

  sub_23FC5BC54();
  v1 = *(_QWORD *)(v0 + 816);
  v2 = *(_QWORD *)(v0 + 504);
  sub_23FC5C170();
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    v3 = *(_DWORD *)(v0 + 848);
    sub_23FC58D78();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FC5C754() != v3)
      sub_23FC090C8(*(_QWORD *)(v0 + 360));
    v4 = (_WORD *)sub_23FBFEFF4();
    v5 = sub_23FC5D894(v4);
    sub_23FC5C128(&dword_23FBF8000, v6, (os_signpost_type_t)v1, v5, "StatusUpdateAccept");
    sub_23FBFEFA0();
  }
  sub_23FC5F170();
  v12 = v7;
  sub_23FC5C700(v8);
  sub_23FC58FA0();
  sub_23FC5F3AC();
  v9 = sub_23FC5CCE8();
  v12(v9);
  sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  swift_release();
  v10 = (_QWORD *)swift_task_alloc();
  sub_23FC5A410(v10);
  return sub_23FC5ACA8();
}

uint64_t sub_23FC51E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  _WORD *v39;
  os_signpost_id_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  void (*v47)(uint64_t);

  sub_23FC5BC54();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  v25 = *(NSObject **)(v22 + 648);
  v26 = sub_23FC59F80();
  sub_23FC5B5CC(v26, v27, type metadata accessor for SessionIdentityPack);
  sub_23FC5A14C();
  v28 = sub_23FC15A04();
  if (os_log_type_enabled(v25, v28))
  {
    v29 = (uint8_t *)sub_23FBFEFF4();
    a11 = sub_23FBFEFF4();
    *(_DWORD *)v29 = 136315138;
    v30 = SessionIdentityPack.description.getter();
    *(_QWORD *)(v22 + 248) = sub_23FC9DC40(v30, v31, &a11);
    sub_23FD75044();
    v32 = sub_23FC595E0();
    sub_23FC5A660(v32, type metadata accessor for SessionIdentityPack);
    sub_23FBFF114(&dword_23FBF8000, v25, v28, "[SessionCoordinator %s] Failed to send status update to client.", v29);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v33 = *(void **)(v22 + 840);
  sub_23FC5806C(*(_QWORD *)(v22 + 648), type metadata accessor for SessionIdentityPack);

  v34 = sub_23FC5A798();
  v35(v34);
  v36 = *(_QWORD *)(v22 + 816);
  v37 = *(_QWORD *)(v22 + 504);
  sub_23FC5C170();
  sub_23FD72B84();
  sub_23FC5CC94();
  sub_23FD74FD8();
  if ((sub_23FC5D74C() & 1) != 0)
  {
    v38 = *(_DWORD *)(v22 + 848);
    sub_23FC58D78();
    sub_23FC5EF48();
    sub_23FC58AC8();
    if (sub_23FC5C754() != v38)
      sub_23FC090C8(*(_QWORD *)(v22 + 360));
    v39 = (_WORD *)sub_23FBFEFF4();
    v40 = sub_23FC5D894(v39);
    sub_23FC5C128(&dword_23FBF8000, v41, (os_signpost_type_t)v36, v40, "StatusUpdateAccept");
    sub_23FBFEFA0();
  }
  sub_23FC5F170();
  v47 = v42;
  sub_23FC5C700(v43);
  sub_23FC58FA0();
  sub_23FC5F3AC();
  v44 = sub_23FC5CCE8();
  v47(v44);
  sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
  swift_release();
  v45 = (_QWORD *)swift_task_alloc();
  sub_23FC5A410(v45);
  return sub_23FC5ACA8();
}

uint64_t sub_23FC520F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_23FD72BF0();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v4 = sub_23FD740CC();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  v2[12] = swift_task_alloc();
  v5 = sub_23FBFD684(&qword_256F5E4F8);
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = swift_task_alloc();
  type metadata accessor for SessionPersistenceManager();
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC521E8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FC0EDD8(*(_QWORD *)(v0 + 40) + *(_QWORD *)(**(_QWORD **)(v0 + 40) + 152), *(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for SessionPersistenceManager);
  *(_BYTE *)(v0 + 160) = sub_23FC525E0() & 1;
  sub_23FBFD684(&qword_256F5E398);
  sub_23FC5E1D0();
  *(_QWORD *)(v0 + 136) = qword_256F605B0;
  *(_QWORD *)(v0 + 144) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_23FC52284;
  sub_23FC5A818();
  return sub_23FD74E4C();
}

uint64_t sub_23FC52284()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC522B8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 96);
  sub_23FC100EC(v1, 1, *(_QWORD *)(v0 + 72));
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 128);
    sub_23FC5A314(*(_QWORD *)(v0 + 112));
    sub_23FC5806C(v3, (uint64_t (*)(_QWORD))type metadata accessor for SessionPersistenceManager);
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_BYTE *)(v0 + 160);
    sub_23FC1046C(*(_QWORD *)(v0 + 88), v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 32));
    if ((v5 & 1) != 0)
      sub_23FD73FD0();
    v6 = *(_QWORD *)(v0 + 144);
    SessionPersistenceManager.write(event:)(*(_QWORD *)(v0 + 88));
    if (v6)
    {
      v7 = *(NSObject **)(v0 + 40);
      sub_23FC58FB0();
      sub_23FC58D90();
      sub_23FC091A4();
      sub_23FC58D90();
      sub_23FC091A4();
      sub_23FD72BE4();
      v8 = sub_23FC15A04();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = sub_23FBFEFF4();
        v10 = (_QWORD *)sub_23FBFEFF4();
        v19 = sub_23FBFEFF4();
        *(_DWORD *)v9 = 136315394;
        sub_23FC58ADC();
        v11 = SessionIdentityPack.description.getter();
        *(_QWORD *)(v0 + 16) = sub_23FC9DC40(v11, v12, &v19);
        sub_23FD75044();
        sub_23FC1002C();
        sub_23FC58ADC();
        *(_WORD *)(v9 + 12) = 2112;
        sub_23FC091A4();
        v13 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v0 + 24) = v13;
        sub_23FD75044();
        *v10 = v13;
        sub_23FC09074();
        sub_23FC09074();
        sub_23FC59250(&dword_23FBF8000, v7, v8, "[SessionCoordinator %s] Attempting to persist event had error: %@", (uint8_t *)v9);
        sub_23FBFD684(&qword_254346A30);
        sub_23FBFF10C();
        sub_23FBFEFA0();
      }
      v15 = *(_QWORD *)(v0 + 80);
      v14 = *(_QWORD *)(v0 + 88);
      v16 = *(_QWORD *)(v0 + 72);
      v17 = *(_QWORD *)(v0 + 56);
      sub_23FC58ADC();

      sub_23FC09074();
      sub_23FC09074();
      sub_23FC58ADC();
      sub_23FC09074();
      sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    }
    *(_QWORD *)(v0 + 144) = 0;
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v18;
    *v18 = v0;
    v18[1] = sub_23FC52284;
    sub_23FC5A818();
    return sub_23FD74E4C();
  }
}

uint64_t sub_23FC525E0()
{
  char v0;
  char v2;

  if ((sub_23FD72638() & 1) != 0)
  {
    swift_getKeyPath();
    sub_23FD71534();
    swift_release();
    v0 = v2 ^ 1;
  }
  else
  {
    v0 = 1;
  }
  return v0 & 1;
}

uint64_t sub_23FC52654(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for SessionCoordinatorCommand(0);
  v2[10] = swift_task_alloc();
  v3 = sub_23FBFD684(&qword_256F5E2A8);
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v4 = sub_23FD72BF0();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v5 = sub_23FD7229C();
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E410);
  v2[20] = swift_task_alloc();
  v6 = sub_23FBFD684(&qword_256F5E418);
  v2[21] = v6;
  v2[22] = *(_QWORD *)(v6 - 8);
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC5277C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_23FC1E5F0();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC527B0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[8];
  sub_23FBFD684(&qword_256F5E380);
  sub_23FC5E1D0();
  v0[25] = qword_256F605B0;
  v0[26] = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v2 = (_QWORD *)swift_task_alloc();
  v0[27] = v2;
  *v2 = v0;
  v2[1] = sub_23FC52830;
  sub_23FC5A818();
  return sub_23FC5B4F4();
}

uint64_t sub_23FC52830()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC52864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = v0[20];
  v2 = v0[17];
  v3 = sub_23FC5C150(v1);
  v4 = v0[24];
  if (v3 == 1)
  {
    sub_23FC5A314(v0[22]);
    sub_23FC15A24();
    sub_23FC5A574();
    sub_23FC090D0();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5D4C4();
    __asm { BR              X0 }
  }
  sub_23FC06160(v0[19], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 32));
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23FD75248();
    v6 = result;
  }
  else
  {
    v6 = *(_QWORD *)((v0[24] & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v0[28] = v6;
  if (v6)
  {
    if (v6 < 1)
    {
      __break(1u);
    }
    else
    {
      v0[29] = 0;
      v8 = v0[24];
      if ((v8 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x242678EC4](0);
      }
      else
      {
        v9 = *(_QWORD *)(v8 + 32);
        sub_23FC58D78();
      }
      v0[30] = v9;
      v11 = (_QWORD *)swift_task_alloc();
      v0[31] = v11;
      *v11 = v0;
      v11[1] = sub_23FC52A04;
      sub_23FC5B9C8(v0[19]);
      sub_23FC5D4C4();
      return sub_23FD6B544(v12);
    }
  }
  else
  {
    sub_23FC5C904();
    sub_23FBFF204(0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v10 = (_QWORD *)swift_task_alloc();
    v0[27] = v10;
    *v10 = v0;
    v10[1] = sub_23FC52830;
    sub_23FC5A818();
    sub_23FC5D4C4();
    return sub_23FD74E4C();
  }
  return result;
}

uint64_t sub_23FC52A04()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23FC5A650();
  *v2 = *v1;
  *(_QWORD *)(v3 + 256) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC52A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  swift_release();
  v3 = v2[29] + 1;
  if (v3 == v2[28])
  {
    sub_23FC5C904();
    sub_23FBFF204(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v4 = (_QWORD *)swift_task_alloc();
    v2[27] = (uint64_t)v4;
    *v4 = v2;
    v4[1] = sub_23FC52830;
    sub_23FC5A818();
    return sub_23FC5B4F4();
  }
  else
  {
    v2[29] = v3;
    v6 = v2[24];
    if ((v6 & 0xC000000000000001) != 0)
    {
      v7 = MEMORY[0x242678EC4]();
    }
    else
    {
      v7 = *(_QWORD *)(v6 + 8 * v3 + 32);
      sub_23FC58D78();
    }
    v2[30] = v7;
    v8 = (_QWORD *)swift_task_alloc();
    v2[31] = (uint64_t)v8;
    *v8 = v2;
    v8[1] = sub_23FC52A04;
    v9 = sub_23FC5B9C8(v2[19]);
    return sub_23FD6B544(v9);
  }
}

uint64_t sub_23FC52B30()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  sub_23FC5BC54();
  v1 = v0[8];
  sub_23FC58FB0();
  sub_23FC58D90();
  sub_23FD72BE4();
  v2 = sub_23FC15A04();
  v3 = v2;
  if (sub_23FC5E5C4(v2, (os_log_type_t)v2))
  {
    v4 = sub_23FBFEFF4();
    v5 = sub_23FBFEFF4();
    v0[4] = 0;
    *(_DWORD *)v4 = 136315138;
    v0[5] = 0xE000000000000000;
    v0[6] = v5;
    sub_23FD750E0();
    swift_bridgeObjectRelease();
    v0[2] = 0x7C4449533CLL;
    v0[3] = 0xE500000000000000;
    sub_23FD71438();
    sub_23FD74C48();
    sub_23FC5A648();
    sub_23FC5D758();
    sub_23FC5D530();
    sub_23FC5B578();
    sub_23FC5CC6C();
    sub_23FC5A648();
    sub_23FC5D758();
    sub_23FC5B578();
    sub_23FC5CC6C();
    sub_23FC5A648();
    sub_23FC5D758();
    swift_bridgeObjectRetain();
    sub_23FC5CC6C();
    sub_23FC5A648();
    sub_23FD74C48();
    *(_QWORD *)(v4 + 4) = sub_23FC9DC40(v0[2], v0[3], v0 + 6);
    sub_23FC1002C();
    sub_23FC58AE4();
    sub_23FBFF114(&dword_23FBF8000, v1, v3, "[SessionCoordinator %s] Failed to send debugger event to client.", (uint8_t *)v4);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  swift_release();

  v6 = sub_23FBFF1EC();
  v7(v6);
  v8 = v0[30];
  v10 = v0[12];
  v9 = v0[13];
  v11 = v0[8] + v0[26];
  swift_storeEnumTagMultiPayload();
  sub_23FBFD684(&qword_256F5E2B8);
  sub_23FC5E128();
  sub_23FC58FA0();
  sub_23FC0917C();
  sub_23FC5B3B0(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  v12 = v0[29] + 1;
  if (v12 == v0[28])
  {
    sub_23FC5C904();
    sub_23FBFF204(v11, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v13 = (_QWORD *)swift_task_alloc();
    v0[27] = v13;
    *v13 = v0;
    v13[1] = sub_23FC52830;
    sub_23FC5A818();
    return sub_23FC5ACA8();
  }
  else
  {
    v0[29] = v12;
    v15 = v0[24];
    if ((v15 & 0xC000000000000001) != 0)
    {
      v16 = MEMORY[0x242678EC4]();
    }
    else
    {
      v16 = *(_QWORD *)(v15 + 8 * v12 + 32);
      sub_23FC58D78();
    }
    v0[30] = v16;
    v17 = (_QWORD *)swift_task_alloc();
    v0[31] = v17;
    *v17 = v0;
    v17[1] = sub_23FC52A04;
    v18 = sub_23FC5B9C8(v0[19]);
    return sub_23FD6B544(v18);
  }
}

uint64_t sub_23FC52E24(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144) + 1) != 1)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 16);
    if (v4)
    {
      v5 = *(_QWORD *)(sub_23FD740CC() - 8);
      v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v7 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      while ((sub_23FC52EF4(v6, v2) & 1) != 0)
      {
        v6 += v7;
        if (!--v4)
          return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_23FC57744();
      return swift_willThrowTypedImpl();
    }
  }
  return result;
}

uint64_t sub_23FC52EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v4 = sub_23FD740CC();
  v57 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v56 = (char *)&v53 - v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v53 - v12;
  v14 = type metadata accessor for SessionID(0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23FD71474();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740B4();
  v23 = a2 + qword_256F605B0;
  sub_23FC0EDD8(v23, (uint64_t)v17, type metadata accessor for SessionID);
  v24 = sub_23FD71450();
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v22, v18);
  v26 = v17;
  v27 = v57;
  v25(v26, v18);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v58 = a1;
  v28(v13, a1, v4);
  v54 = v23;
  if ((v24 & 1) != 0)
  {
    v29 = sub_23FD73F88();
    v31 = v30;
    v32 = (_QWORD *)(v23 + *(int *)(type metadata accessor for SessionIdentityPack(0) + 20));
    if (v29 == *v32 && v31 == v32[1])
      v34 = 1;
    else
      v34 = sub_23FD75380();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = 0;
  }
  v35 = v56;
  v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  v36(v13, v4);
  v37 = v58;
  v28(v35, v58, v4);
  if ((v34 & 1) == 0)
  {
    v36(v35, v4);
    v46 = v55;
    v28(v55, v37, v4);
    goto LABEL_18;
  }
  v38 = sub_23FD74030();
  v40 = v39;
  v41 = type metadata accessor for SessionIdentityPack(0);
  v42 = v54 + *(int *)(v41 + 20);
  if (v38 == *(_QWORD *)(v42 + 16) && v40 == *(_QWORD *)(v42 + 24))
  {
    swift_bridgeObjectRelease();
    v36(v35, v4);
    v46 = v55;
    v28(v55, v37, v4);
    goto LABEL_21;
  }
  v44 = v37;
  v45 = sub_23FD75380();
  swift_bridgeObjectRelease();
  v36(v35, v4);
  v46 = v55;
  v28(v55, v44, v4);
  if ((v45 & 1) == 0)
  {
LABEL_18:
    v36(v46, v4);
LABEL_19:
    LOBYTE(v47) = 0;
    return v47 & 1;
  }
LABEL_21:
  v48 = sub_23FD73FDC();
  v50 = v54 + *(int *)(v41 + 20);
  v47 = *(_QWORD *)(v50 + 40);
  if (!v49)
  {
    swift_bridgeObjectRetain();
    v36(v46, v4);
    if (!v47)
    {
      LOBYTE(v47) = 1;
      return v47 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v47)
  {
    if (v48 == *(_QWORD *)(v50 + 32) && v49 == v47)
      LOBYTE(v47) = 1;
    else
      LOBYTE(v47) = sub_23FD75380();
    v36(v46, v4);
  }
  else
  {
    swift_bridgeObjectRetain();
    v36(v46, v4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v47 & 1;
}

uint64_t sub_23FC532D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2[13] = a1;
  v2[14] = v1;
  v3 = sub_23FD7409C();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = sub_23FC0901C();
  v4 = sub_23FD74090();
  v2[18] = v4;
  v2[19] = *(_QWORD *)(v4 - 8);
  v2[20] = sub_23FC5C13C();
  v2[21] = sub_23FC5C588();
  v5 = sub_23FBFF104();
  v2[22] = v5;
  v2[23] = *(_QWORD *)(v5 - 8);
  v2[24] = sub_23FC0901C();
  v6 = sub_23FD726C8();
  v2[25] = v6;
  v2[26] = *(_QWORD *)(v6 - 8);
  v2[27] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5E2A0);
  v2[28] = sub_23FC0901C();
  v7 = type metadata accessor for EventPayloadWithPreassignedID(0);
  v2[29] = v7;
  v2[30] = *(_QWORD *)(v7 - 8);
  v2[31] = sub_23FC5C13C();
  v2[32] = sub_23FC5C588();
  v2[33] = sub_23FC5C588();
  v8 = sub_23FD71E34();
  v2[34] = v8;
  v2[35] = *(_QWORD *)(v8 - 8);
  v2[36] = sub_23FC5C13C();
  v2[37] = sub_23FC5C588();
  v9 = sub_23FC10100();
  v2[38] = v9;
  v2[39] = *(_QWORD *)(v9 - 8);
  v2[40] = sub_23FC0901C();
  v10 = sub_23FC5F59C();
  v2[41] = v10;
  v2[42] = *(_QWORD *)(v10 - 8);
  v2[43] = sub_23FC0901C();
  v2[44] = type metadata accessor for SessionCoordinatorCommand(0);
  v2[45] = sub_23FC0901C();
  v11 = sub_23FBFD684(&qword_256F5E2A8);
  v2[46] = v11;
  v2[47] = *(_QWORD *)(v11 - 8);
  v2[48] = sub_23FC0901C();
  v12 = sub_23FD71AEC();
  v2[49] = v12;
  v2[50] = *(_QWORD *)(v12 - 8);
  v2[51] = sub_23FC0901C();
  v13 = sub_23FD721C4();
  v2[52] = v13;
  v2[53] = *(_QWORD *)(v13 - 8);
  v2[54] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FC53480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, uint64_t, uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,_QWORD *a34,uint64_t a35,uint64_t a36)
{
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t i;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, uint64_t, _QWORD);
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(uint64_t, uint64_t);
  char v77;
  uint64_t v78;
  _QWORD *v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t (**v87)();
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  sub_23FC5E39C();
  a35 = v37;
  a36 = v38;
  a34 = v36;
  v39 = (uint64_t *)v36[14];
  v40 = *v39;
  if (*((_BYTE *)v39 + *(_QWORD *)(*v39 + 144)) == 1)
  {
    sub_23FD71E10();
    if (sub_23FC5C874() == *MEMORY[0x24BE529B8])
    {
      v42 = v36[53];
      v41 = v36[54];
      v43 = v36[51];
      v45 = v36[47];
      v44 = v36[48];
      v46 = v36[45];
      v123 = v36[46];
      sub_23FC59F48(*(uint64_t (**)(uint64_t))(v36[50] + 96));
      sub_23FC06160(v41, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 32));
      sub_23FC06160(v46, v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 16));
      sub_23FC5C5C0();
      swift_storeEnumTagMultiPayload();
      sub_23FBFD684(&qword_256F5E2B8);
      sub_23FC5E128();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v123);
      sub_23FC595C4(v41, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
      goto LABEL_33;
    }
    v47 = (uint64_t *)v36[14];
    sub_23FC090C8(v36[50]);
    v40 = *v47;
    v39 = (uint64_t *)v36[14];
  }
  v114 = v36 + 8;
  v48 = v36[13];
  v50 = v36[42];
  v49 = v36[43];
  v51 = v36[41];
  a23 = MEMORY[0x24BEE4AF8];
  v52 = (uint64_t)v39 + *(_QWORD *)(v40 + 128);
  sub_23FC59120();
  a13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
  a13(v49, v52, v51);
  type metadata accessor for SessionCoordinatorConversions.ConversionContext();
  v53 = sub_23FBFF1C4();
  sub_23FC5A8C8(v53 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime29SessionCoordinatorConversions17ConversionContext_sessionState, v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 32));
  *(_BYTE *)(v53
           + OBJC_IVAR____TtCO23IntelligenceFlowRuntime29SessionCoordinatorConversions17ConversionContext_statementIdIsInert) = 0;
  sub_23FC59120();
  a14 = v52;
  sub_23FCAF240(v48, v53, &a23, v52);
  swift_endAccess();
  for (i = a23; ; a23 = i)
  {
    v58 = *(_QWORD *)(i + 16);
    v59 = MEMORY[0x24BEE4AF8];
    if (v58)
    {
      v60 = v36[30];
      v124 = v36[29];
      v61 = v36[16];
      a24 = MEMORY[0x24BEE4AF8];
      sub_23FC5C180();
      sub_23FC9B99C();
      v59 = a24;
      sub_23FC102C4();
      v63 = i + v62;
      v64 = *(_QWORD *)(v61 + 72);
      v65 = *(void (**)(_QWORD, uint64_t, _QWORD))(v61 + 16);
      do
      {
        v65(v36[31] + *(int *)(v124 + 20), v63, v36[15]);
        _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
        a24 = v59;
        v66 = *(_QWORD *)(v59 + 16);
        if (v66 >= *(_QWORD *)(v59 + 24) >> 1)
        {
          sub_23FC9B99C();
          v59 = a24;
        }
        *(_QWORD *)(v59 + 16) = v66 + 1;
        sub_23FC5E934();
        sub_23FC0F380(v68, v67 + *(_QWORD *)(v60 + 72) * v66, type metadata accessor for EventPayloadWithPreassignedID);
        v63 += v64;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
    }
    *v114 = v59;
    v69 = *(_QWORD *)(v59 + 16);
    if (!v69)
      break;
    v125 = v36[30];
    v116 = v36[19];
    sub_23FC5E934();
    v120 = v70;
    v118 = *MEMORY[0x24BE56BE0];
    while (v69 <= *(_QWORD *)(v59 + 16))
    {
      --v69;
      v71 = v36[32];
      v73 = v36[20];
      v72 = v36[21];
      v74 = v36[18];
      sub_23FC0EDD8(v120 + *(_QWORD *)(v125 + 72) * v69, v71, type metadata accessor for EventPayloadWithPreassignedID);
      sub_23FD7406C();
      sub_23FC092BC(v73, v118, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 104));
      v75 = sub_23FD74084();
      v76 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
      v76(v73, v74);
      v76(v72, v74);
      sub_23FC5806C(v71, type metadata accessor for EventPayloadWithPreassignedID);
      if ((v75 & 1) != 0 || !v69)
      {
        v77 = v75 ^ 1;
        goto LABEL_22;
      }
    }
    __break(1u);
    sub_23FC5DE30();
    sub_23FC998C0();
    i = v110;
    v56 = *(_QWORD *)(v110 + 16);
    v55 = *(_QWORD *)(v110 + 24);
    if (v56 >= v55 >> 1)
    {
      sub_23FC5E28C(v55);
      sub_23FC998C0();
      i = v111;
    }
    v57 = v36[16];
    *(_QWORD *)(i + 16) = v56 + 1;
    sub_23FC5BC30(v57);
    sub_23FC09074();
  }
  v77 = 1;
LABEL_22:
  v79 = (_QWORD *)v36[28];
  v78 = v36[29];
  *(_QWORD *)(swift_task_alloc() + 16) = v114;
  sub_23FC559BC((_QWORD *(*)(_QWORD *__return_ptr, uint64_t *))sub_23FC571B8, v69, v77 & 1, type metadata accessor for EventPayloadWithPreassignedID, v79);
  sub_23FC5B2F4();
  sub_23FC100EC((uint64_t)v79, 1, v78);
  if (v80)
  {
    sub_23FC584B0(v36[28], &qword_256F5E2A0);
  }
  else
  {
    v81 = v36[43];
    v126 = v36[42];
    v82 = v36[33];
    v83 = v36[26];
    sub_23FC0F380(v36[28], v82, type metadata accessor for EventPayloadWithPreassignedID);
    sub_23FC06160(v81, a14, a13);
    sub_23FD71E04();
    sub_23FD73B50();
    sub_23FD73B44();
    sub_23FC5B9BC(*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8));
    swift_bridgeObjectRelease();
    sub_23FC595C4(v81, *(uint64_t (**)(uint64_t, uint64_t))(v126 + 8));
    sub_23FC5806C(v82, type metadata accessor for EventPayloadWithPreassignedID);
  }
  v85 = v36[47];
  v84 = v36[48];
  v86 = (_QWORD *)v36[45];
  v87 = (uint64_t (**)())((char *)v86 + *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48));
  sub_23FC5B578();
  v88 = sub_23FD71E04();
  *v86 = v59;
  v86[1] = v88;
  v86[2] = v89;
  type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
  sub_23FC5AA0C();
  *v87 = sub_23FBFF828;
  v87[1] = 0;
  sub_23FC5B1C4();
  sub_23FBFD684(&qword_256F5E2B8);
  sub_23FD74E1C();
  sub_23FC595C4(v84, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));
  v90 = *(_QWORD *)(v59 + 16);
  if (v90)
  {
    v91 = v36[30];
    v92 = v36[23];
    a24 = MEMORY[0x24BEE4AF8];
    sub_23FC9B970();
    sub_23FC102C4();
    v94 = v59 + v93;
    v127 = *(_QWORD *)(v91 + 72);
    v95 = a24;
    do
    {
      v96 = v36[32];
      v97 = v36[24];
      sub_23FC0EDD8(v94, v96, type metadata accessor for EventPayloadWithPreassignedID);
      sub_23FC5E238(v97, v96, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 16));
      sub_23FC5806C(v96, type metadata accessor for EventPayloadWithPreassignedID);
      if ((sub_23FC5D484() & 1) == 0)
      {
        sub_23FC9B970();
        v95 = a24;
      }
      v98 = *(_QWORD *)(v95 + 16);
      if (v98 >= *(_QWORD *)(v95 + 24) >> 1)
      {
        sub_23FC9B970();
        v95 = a24;
      }
      v99 = v36[24];
      v100 = v36[22];
      *(_QWORD *)(v95 + 16) = v98 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v92 + 32))(v95+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v98, v99, v100);
      a24 = v95;
      v94 += v127;
      --v90;
    }
    while (v90);
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_23FC5A648();
LABEL_33:
  v112 = v36[32];
  v113 = v36[31];
  v115 = v36[28];
  v117 = v36[27];
  v119 = v36[24];
  v121 = v36[21];
  v122 = v36[20];
  v128 = v36[17];
  swift_task_dealloc();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5CB3C();
  return v102(v101, v102, v103, v104, v105, v106, v107, v108, a9, a10, a11, a12, a13, a14, v112, v113, v115, v117, v119,
           v121,
           v122,
           v128,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_23FC53E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = a1;
  v1 = sub_23FD7409C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SessionCoordinatorCommand(0);
  MEMORY[0x24BDAC7A8](v21, v6);
  v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_23FBFD684(&qword_256F5E2A8);
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (**)())((char *)v8 + *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48));
  sub_23FBFD684(&qword_256F5E348);
  v13 = type metadata accessor for EventPayloadWithPreassignedID(0);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23FD769D0;
  v17 = sub_23FD73160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v19, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BE56AE0], v1);
  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v16 + v15 + *(int *)(v13 + 20), v5, v1);
  *v8 = v16;
  v8[1] = 0;
  v8[2] = 0xE000000000000000;
  type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
  swift_storeEnumTagMultiPayload();
  *v12 = sub_23FBFF828;
  v12[1] = 0;
  swift_storeEnumTagMultiPayload();
  sub_23FBFD684(&qword_256F5E2B8);
  sub_23FD74E1C();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v22);
}

uint64_t sub_23FC540AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = v5;
  *(_BYTE *)(v6 + 104) = a4;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 64) = type metadata accessor for SessionCoordinatorCommand(0);
  *(_QWORD *)(v6 + 72) = swift_task_alloc();
  v7 = sub_23FBFD684(&qword_256F5E2A8);
  *(_QWORD *)(v6 + 80) = v7;
  *(_QWORD *)(v6 + 88) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 96) = swift_task_alloc();
  return swift_task_switch();
}

void sub_23FC54140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)();
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  if ((*(_BYTE *)(v0 + 104) & 1) != 0)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(**(_QWORD **)(v0 + 56) + 136));
    sub_23FD73238();
    *(_QWORD *)(v0 + 16) = v2;
    sub_23FC571D4();
    v1 = sub_23FD73CA0();
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 136);
  v5 = *(_QWORD *)(v3 + v4);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD **)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 32);
    v19 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v3 + v4) = v7;
    v11 = (uint64_t (**)())((char *)v8 + *(int *)(sub_23FBFD684(&qword_256F5E2B0) + 48));
    v12 = (_QWORD *)((char *)v8 + *(int *)(sub_23FBFD684(&qword_256F5E2D8) + 48));
    *v8 = v9;
    v13 = type metadata accessor for SpanMetadata(0);
    v14 = (uint64_t)v12 + *(int *)(v13 + 24);
    v15 = sub_23FBFF104();
    sub_23FBFF0F8(v14, v16, v17, v15);
    *v12 = v1;
    v12[1] = v19;
    v12[2] = v10;
    v18 = (uint64_t *)((char *)v12 + *(int *)(v13 + 28));
    *v18 = 0;
    v18[1] = 0xE000000000000000;
    type metadata accessor for SessionCoordinatorCommand.TransactionRequestPayload(0);
    sub_23FC5B1C4();
    *v11 = sub_23FBFF828;
    v11[1] = 0;
    sub_23FC5B1C4();
    sub_23FC5B578();
    sub_23FC5AC34();
    sub_23FBFD684(&qword_256F5E2B8);
    sub_23FD74E1C();
    sub_23FC5A314(v20);
    sub_23FC5A574();
    sub_23FC090C0();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23FC54304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_23FD73D9C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  sub_23FD73D84();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  sub_23FD73F04();
  return swift_release();
}

uint64_t sub_23FC543D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_23FD75380();
}

uint64_t sub_23FC543EC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23FC54450;
  return v6(a1);
}

uint64_t sub_23FC54450()
{
  uint64_t (*v0)(void);

  sub_23FC59C00();
  v0 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5AADC(v0);
}

uint64_t sub_23FC54484(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = 2 * a2;
  type metadata accessor for EventPayloadWithPreassignedID(0);
  return a1;
}

unint64_t sub_23FC544C8(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_23FC544EC(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_23FC5450C()
{
  sub_23FC54D4C();
}

void sub_23FC54530()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23FC061F0();
  v30 = *(_QWORD *)(sub_23FC5D7A8() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC5C638(v6, v26);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC5D4DC(v9, v27);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC5D424();
  sub_23FBFD684(&qword_256F5E5E0);
  v12 = sub_23FC5C828();
  if (!*(_QWORD *)(v0 + 16))
  {
LABEL_36:
    swift_release();
    *v1 = v12;
    sub_23FC060D4();
    return;
  }
  sub_23FC5AE44();
  v13 = 0;
  v33 = v3;
  if (!v2)
    goto LABEL_4;
LABEL_3:
  sub_23FC5DDF0();
  while (1)
  {
    v19 = sub_23FC5D654();
    if ((v20 & 1) != 0)
    {
      sub_23FC5D3F4(v19, v3);
    }
    else
    {
      sub_23FC5F538(v19);
      sub_23FC5AAE8();
    }
    sub_23FC5EC48();
    sub_23FC5D954();
    v21 = sub_23FC5F464();
    if (v21)
    {
      if (v21 == 1)
      {
        sub_23FC5D9F8();
        v3 = v33;
        sub_23FD74C30();
        sub_23FC5A648();
      }
      else
      {
        sub_23FC5EC30();
      }
    }
    else
    {
      v3 = v29;
      sub_23FC06160(v29, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
      sub_23FC5EC3C();
      sub_23FBFEE2C(&qword_256F5DAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
      sub_23FC5D8A0();
      v22 = sub_23FC5ED5C();
      v23(v22);
    }
    sub_23FD75470();
    sub_23FC5B698();
    if (v24)
    {
      sub_23FC5B684();
      while (1)
      {
        sub_23FC5DDDC();
        if (v24)
        {
          if ((v25 & 1) != 0)
            break;
        }
        sub_23FC5DEBC();
        if (!v24)
        {
          sub_23FC5CEA0();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    sub_23FC5CEB4();
LABEL_33:
    sub_23FC5B654();
    sub_23FC5DD64();
    if (v2)
      goto LABEL_3;
LABEL_4:
    v14 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_38;
    if (v14 >= v31)
      goto LABEL_35;
    ++v13;
    if (!*(_QWORD *)(v32 + 8 * v14))
    {
      v13 = v14 + 1;
      if (v14 + 1 >= v31)
        goto LABEL_35;
      if (!*(_QWORD *)(v32 + 8 * v13))
        break;
    }
LABEL_16:
    sub_23FC5DDC4();
  }
  sub_23FC5EC68();
  if (v17 == v18)
  {
LABEL_35:
    sub_23FC5B8F0();
    v1 = v28;
    goto LABEL_36;
  }
  if (*(_QWORD *)(v32 + 8 * v15))
  {
    v13 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v16)
      goto LABEL_35;
    ++v15;
    if (*(_QWORD *)(v32 + 8 * v13))
      goto LABEL_16;
  }
LABEL_39:
  __break(1u);
}

void sub_23FC547DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  int64_t v15;
  int64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  __int128 v39[2];

  v3 = v2;
  v5 = (_QWORD *)*v2;
  sub_23FBFD684(&qword_256F5DB20);
  sub_23FC5E714();
  v38 = a2;
  v6 = sub_23FC5C828();
  if (v5[2])
  {
    sub_23FC5F1D8();
    v37 = v5 + 8;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & v5[8];
    v36 = (unint64_t)(v7 + 63) >> 6;
    v10 = v6 + 64;
    sub_23FC58D80();
    v11 = 0;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v11 << 6); ; i = v21 + (v11 << 6))
    {
      v22 = (uint64_t *)(v5[6] + 16 * i);
      v24 = *v22;
      v23 = v22[1];
      v25 = (__int128 *)(v5[7] + 40 * i);
      if ((v38 & 1) != 0)
      {
        sub_23FBFDE28(v25, (uint64_t)v39);
      }
      else
      {
        sub_23FC584E0((uint64_t)v25, (uint64_t)v39);
        sub_23FC5B578();
      }
      sub_23FD7544C();
      sub_23FC5D4B8();
      sub_23FD74C30();
      v26 = sub_23FD75470() & ~(-1 << *(_BYTE *)(v6 + 32));
      if (((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6))) == 0)
      {
        sub_23FC5B684();
        while (1)
        {
          sub_23FC5DDDC();
          if (v30)
          {
            if ((v27 & 1) != 0)
              break;
          }
          if (v28 == v29)
            v28 = 0;
          if (*(_QWORD *)(v10 + 8 * v28) != -1)
          {
            sub_23FC5EBF4();
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_23FC5EC1C();
LABEL_33:
      sub_23FC5EB9C();
      *(_QWORD *)(v10 + v31) |= v32;
      v34 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v33);
      *v34 = v24;
      v34[1] = v23;
      sub_23FBFDE28(v39, *(_QWORD *)(v6 + 56) + 40 * v33);
      sub_23FC5E980();
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_42;
      if (v14 >= v36)
        goto LABEL_35;
      ++v11;
      if (!v37[v14])
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v36)
          goto LABEL_35;
        if (!v37[v11])
        {
          sub_23FC5EC68();
          if (v17 == v18)
          {
LABEL_35:
            sub_23FC58FA0();
            v3 = v2;
            if ((v38 & 1) != 0)
            {
              sub_23FC5C4C0();
              if (v17 != v18)
                sub_23FC5D37C(v35);
              else
                sub_23FC5B418(v35);
              v5[2] = 0;
            }
            break;
          }
          if (!v37[v15])
          {
            while (1)
            {
              v11 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_43;
              if (v11 >= v16)
                goto LABEL_35;
              ++v15;
              if (v37[v11])
                goto LABEL_19;
            }
          }
          v11 = v15;
        }
      }
LABEL_19:
      sub_23FC5DDB4();
      v9 = v20 & v19;
    }
  }
  sub_23FC58FA0();
  *v3 = v6;
}

void sub_23FC54A64()
{
  uint64_t *v0;
  uint64_t *v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  int64_t v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v45 = sub_23FD718C4();
  v4 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v5);
  sub_23FBFEFE0();
  v44 = v6;
  v7 = (_QWORD *)*v0;
  sub_23FBFD684(&qword_256F5E628);
  sub_23FC5D408();
  v43 = v3;
  v8 = sub_23FC5C828();
  if (v7[2])
  {
    sub_23FC5F1D8();
    v42 = v7 + 8;
    sub_23FC5EC74();
    v11 = v10 & v9;
    v41 = (unint64_t)(v12 + 63) >> 6;
    v13 = v8 + 64;
    sub_23FC58D68();
    v14 = 0;
    if (!v11)
      goto LABEL_4;
LABEL_3:
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v15 | (v14 << 6); ; i = v21 + (v14 << 6))
    {
      v22 = v7[7];
      v23 = v7;
      v24 = (uint64_t *)(v7[6] + 16 * i);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v4 + 72);
      v28 = v22 + v27 * i;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v44, v28, v45);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v44, v28, v45);
        sub_23FC5A09C();
      }
      sub_23FD7544C();
      sub_23FD74C30();
      v29 = sub_23FD75470() & ~(-1 << *(_BYTE *)(v8 + 32));
      if (((-1 << v29) & ~*(_QWORD *)(v13 + 8 * (v29 >> 6))) == 0)
      {
        sub_23FC5B684();
        while (1)
        {
          sub_23FC5DDDC();
          if (v33)
          {
            if ((v30 & 1) != 0)
              break;
          }
          if (v31 == v32)
            v31 = 0;
          if (*(_QWORD *)(v13 + 8 * v31) != -1)
          {
            sub_23FC5EBF4();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_23FC5EC1C();
LABEL_29:
      sub_23FC5EB9C();
      *(_QWORD *)(v13 + v34) |= v35;
      v37 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v36);
      *v37 = v26;
      v37[1] = v25;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(*(_QWORD *)(v8 + 56) + v27 * v36, v44, v45);
      sub_23FC5E980();
      v7 = v23;
      if (v11)
        goto LABEL_3;
LABEL_4:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_38;
      if (v17 >= v41)
        goto LABEL_31;
      ++v14;
      if (!v42[v17])
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v41)
          goto LABEL_31;
        if (!v42[v14])
        {
          v18 = v17 + 2;
          if (v18 >= v41)
          {
LABEL_31:
            sub_23FC58C6C();
            v1 = v0;
            if ((v43 & 1) != 0)
            {
              sub_23FC5C4C0();
              if (v39 != v40)
                *v42 = -1 << v38;
              else
                sub_23FC855F0(0, (unint64_t)(v38 + 63) >> 6, v42);
              v7[2] = 0;
            }
            break;
          }
          if (!v42[v18])
          {
            while (1)
            {
              v14 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_39;
              if (v14 >= v41)
                goto LABEL_31;
              ++v18;
              if (v42[v14])
                goto LABEL_15;
            }
          }
          v14 = v18;
        }
      }
LABEL_15:
      sub_23FC5DDB4();
      v11 = v20 & v19;
    }
  }
  sub_23FC58C6C();
  *v1 = v8;
  sub_23FC060D4();
}

void sub_23FC54D28()
{
  sub_23FC54D4C();
}

void sub_23FC54D4C()
{
  uint64_t *v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  int v6;
  int v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t i;
  int64_t v23;
  _QWORD *v24;
  int64_t v25;
  int64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t (*v42)(uint64_t);
  unint64_t *v43;
  uint64_t v44;
  int v45;

  sub_23FC061F0();
  v43 = v1;
  v44 = v2;
  v4 = v3;
  v5 = v0;
  v7 = v6;
  v42 = v8;
  v9 = v8(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (unint64_t)&v38 - v12;
  v14 = (_QWORD *)*v0;
  sub_23FBFD684(v4);
  v45 = v7;
  v15 = sub_23FD75260();
  if (v14[2])
  {
    sub_23FC5F1D8();
    v40 = v14 + 8;
    sub_23FC5EC74();
    v18 = v17 & v16;
    v38 = v0;
    v39 = (unint64_t)(v19 + 63) >> 6;
    sub_23FC58D70();
    v20 = 0;
    v41 = v14;
    if (!v18)
      goto LABEL_4;
LABEL_3:
    v21 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    for (i = v21 | (v20 << 6); ; i = v31 + (v20 << 6))
    {
      v32 = *(_QWORD *)(v10 + 72);
      v33 = v14[6] + v32 * i;
      if ((v45 & 1) != 0)
      {
        sub_23FC5E238(v13, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
        v34 = *(_QWORD *)(v14[7] + 8 * i);
      }
      else
      {
        sub_23FC5E238(v13, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
        v34 = *(_QWORD *)(v14[7] + 8 * i);
        sub_23FC5A09C();
      }
      sub_23FBFEE2C(v43, v42, v44);
      sub_23FD74BB8();
      sub_23FC5B698();
      if (v35)
      {
        sub_23FC5B684();
        while (1)
        {
          sub_23FC5DDDC();
          if (v35)
          {
            if ((v36 & 1) != 0)
              break;
          }
          sub_23FC5DEBC();
          if (!v35)
          {
            sub_23FC5CEA0();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_23FC5CEB4();
LABEL_28:
      *(_QWORD *)(v15 + 64 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      sub_23FC5E238(*(_QWORD *)(v15 + 48) + v32 * v13, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
      *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v13) = v34;
      sub_23FC5E980();
      v14 = v41;
      if (v18)
        goto LABEL_3;
LABEL_4:
      v23 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_37;
      if (v23 >= v39)
        goto LABEL_30;
      v24 = v40;
      ++v20;
      if (!v40[v23])
      {
        v20 = v23 + 1;
        if (v23 + 1 >= v39)
          goto LABEL_30;
        if (!v40[v20])
        {
          sub_23FC5EC68();
          if (v27 == v28)
          {
LABEL_30:
            sub_23FC58C64();
            v5 = v38;
            if ((v45 & 1) != 0)
            {
              sub_23FC5C4C0();
              if (v27 != v28)
                sub_23FC5D37C(v37);
              else
                sub_23FC5B418(v37);
              v14[2] = 0;
            }
            break;
          }
          if (!v24[v25])
          {
            while (1)
            {
              v20 = v25 + 1;
              if (__OFADD__(v25, 1))
                goto LABEL_38;
              if (v20 >= v26)
                goto LABEL_30;
              ++v25;
              if (v24[v20])
                goto LABEL_16;
            }
          }
          v20 = v25;
        }
      }
LABEL_16:
      sub_23FC5DDB4();
      v18 = v30 & v29;
    }
  }
  sub_23FC58C64();
  *v5 = v15;
  sub_23FC060D4();
}

uint64_t sub_23FC55004(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_23FBFD684(&qword_256F5E4E8);
  v37 = a2;
  v6 = sub_23FD75260();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23FD7544C();
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    swift_bridgeObjectRelease();
    result = sub_23FD75470();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v35)
    {
      swift_release();
      v3 = v34;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_32;
      v18 = *(_QWORD *)(v36 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v35)
  {
    v18 = *(_QWORD *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v35)
          goto LABEL_32;
        v18 = *(_QWORD *)(v36 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v34;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_23FC855F0(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23FC5530C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_23FBFD684(&qword_256F5E4D8);
  v37 = a2;
  v6 = sub_23FD75260();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23FD7544C();
    sub_23FD74C30();
    result = sub_23FD75470();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v35)
    {
      swift_release();
      v3 = v34;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_32;
      v18 = *(_QWORD *)(v36 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v35)
  {
    v18 = *(_QWORD *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v35)
          goto LABEL_32;
        v18 = *(_QWORD *)(v36 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v34;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_23FC855F0(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_23FC55604()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23FC061F0();
  v30 = *(_QWORD *)(sub_23FC5D7A8() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC5C638(v6, v26);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC5D4DC(v9, v27);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC5D424();
  sub_23FBFD684(&qword_256F5E5F0);
  v12 = sub_23FC5C828();
  if (!*(_QWORD *)(v0 + 16))
  {
LABEL_36:
    swift_release();
    *v1 = v12;
    sub_23FC060D4();
    return;
  }
  sub_23FC5AE44();
  v13 = 0;
  v33 = v3;
  if (!v2)
    goto LABEL_4;
LABEL_3:
  sub_23FC5DDF0();
  while (1)
  {
    v19 = sub_23FC5D654();
    if ((v20 & 1) != 0)
    {
      sub_23FC5D3F4(v19, v3);
    }
    else
    {
      sub_23FC5F538(v19);
      sub_23FC5AAE8();
    }
    sub_23FC5EC48();
    sub_23FC5D954();
    v21 = sub_23FC5F464();
    if (v21)
    {
      if (v21 == 1)
      {
        sub_23FC5D9F8();
        v3 = v33;
        sub_23FD74C30();
        sub_23FC5A648();
      }
      else
      {
        sub_23FC5EC30();
      }
    }
    else
    {
      v3 = v29;
      sub_23FC06160(v29, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
      sub_23FC5EC3C();
      sub_23FBFEE2C(&qword_256F5DAC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
      sub_23FC5D8A0();
      v22 = sub_23FC5ED5C();
      v23(v22);
    }
    sub_23FD75470();
    sub_23FC5B698();
    if (v24)
    {
      sub_23FC5B684();
      while (1)
      {
        sub_23FC5DDDC();
        if (v24)
        {
          if ((v25 & 1) != 0)
            break;
        }
        sub_23FC5DEBC();
        if (!v24)
        {
          sub_23FC5CEA0();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    sub_23FC5CEB4();
LABEL_33:
    sub_23FC5B654();
    sub_23FC5DD64();
    if (v2)
      goto LABEL_3;
LABEL_4:
    v14 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_38;
    if (v14 >= v31)
      goto LABEL_35;
    ++v13;
    if (!*(_QWORD *)(v32 + 8 * v14))
    {
      v13 = v14 + 1;
      if (v14 + 1 >= v31)
        goto LABEL_35;
      if (!*(_QWORD *)(v32 + 8 * v13))
        break;
    }
LABEL_16:
    sub_23FC5DDC4();
  }
  sub_23FC5EC68();
  if (v17 == v18)
  {
LABEL_35:
    sub_23FC5B8F0();
    v1 = v28;
    goto LABEL_36;
  }
  if (*(_QWORD *)(v32 + 8 * v15))
  {
    v13 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v16)
      goto LABEL_35;
    ++v15;
    if (*(_QWORD *)(v32 + 8 * v13))
      goto LABEL_16;
  }
LABEL_39:
  __break(1u);
}

unint64_t sub_23FC558B0@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    if (*(_QWORD *)(a2 + 16) > result)
    {
      sub_23FC5F584();
      sub_23FC5F570();
      return (*(uint64_t (**)(uint64_t, unint64_t))(v7 + 16))(a3, a2 + v6 + *(_QWORD *)(v7 + 72) * v4);
    }
  }
  __break(1u);
  return result;
}

void sub_23FC55920(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > a1)
  {
    v6 = type metadata accessor for EventPayloadWithPreassignedID(0);
    sub_23FC0EDD8(a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, a3, type metadata accessor for EventPayloadWithPreassignedID);
    return;
  }
  __break(1u);
}

_QWORD *sub_23FC559A0@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, _QWORD *a4@<X8>)
{
  return sub_23FC559BC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0], a4);
}

_QWORD *sub_23FC559BC@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t (*a4)(_QWORD)@<X5>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((a3 & 1) != 0)
  {
    v9 = a4(0);
    return (_QWORD *)_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a5, 1, 1, v9);
  }
  else
  {
    v11 = a2;
    result = a1(a5, &v11);
    if (!v5)
    {
      v10 = a4(0);
      return (_QWORD *)_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a5, 0, 1, v10);
    }
  }
  return result;
}

uint64_t sub_23FC55A64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t result;

  v1 = *v0;
  v2 = type metadata accessor for SessionCoordinatorCommand(0);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_23FBFD684(&qword_256F5E4C0);
  v5 = swift_allocObject();
  v6 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1)
    sub_23FC566A8(v5 + 16, v5 + ((v4 + 40) & ~v4), (_QWORD *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  result = swift_release();
  *v0 = v5;
  return result;
}

void sub_23FC55B18(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a1[2];
  v7 = type metadata accessor for SessionCoordinatorCommand(0);
  sub_23FC0F380(a2 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6, a3, type metadata accessor for SessionCoordinatorCommand);
  v8 = a1[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    v11 = a1[1];
    if (v10 >= *a1)
      v10 = 0;
    a1[2] = v10;
    if (!__OFSUB__(v11, 1))
    {
      a1[1] = v11 - 1;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_23FC55BAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v2 = v1;
  v3 = *v1;
  v4 = (uint64_t *)(*v1 + 16);
  v5 = *v4;
  if (*v4 >= a1)
  {
    v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SessionCoordinatorCommand(0) - 8) + 80);
    sub_23FBFD684(&qword_256F5E4C0);
    v11 = swift_allocObject();
    v13 = *(_OWORD *)(v3 + 24);
    *(_QWORD *)(v11 + 16) = v5;
    *(_OWORD *)(v11 + 24) = v13;
    if ((uint64_t)v13 >= 1)
      sub_23FC566A8(v11 + 16, v11 + ((v12 + 40) & ~v12), v4, v3 + ((v12 + 40) & ~v12));
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *v1;
    v8 = type metadata accessor for SessionCoordinatorCommand(0);
    sub_23FD72350();
    v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 24);
      sub_23FBFD684(&qword_256F5E4C0);
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = sub_23FC564C8();
      *(_QWORD *)(v11 + 24) = v10;
      *(_QWORD *)(v11 + 32) = 0;
      if (v10 >= 1)
      {
        swift_retain();
        sub_23FC563BC(v11 + 16, v11 + ((v9 + 40) & ~v9), (_QWORD *)(v7 + 16), v7 + ((v9 + 40) & ~v9));
        *(_QWORD *)(v7 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      sub_23FBFD684(&qword_256F5E4C0);
      v11 = swift_allocObject();
      v14 = sub_23FC564C8();
      v15 = *(_QWORD *)(v7 + 24);
      *(_QWORD *)(v11 + 16) = v14;
      *(_QWORD *)(v11 + 24) = v15;
      *(_QWORD *)(v11 + 32) = 0;
      if (v15 >= 1)
        sub_23FC5652C(v11 + 16, v11 + ((v9 + 40) & ~v9), (_QWORD *)(v7 + 16), v7 + ((v9 + 40) & ~v9));
    }
  }
  result = swift_release();
  *v2 = v11;
  return result;
}

void sub_23FC55D98(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1[1];
  v4 = a1[2];
  v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      v9 = __OFSUB__(v5, *a1);
      if (v5 < *a1 || (v5 -= *a1, !v9))
      {
LABEL_9:
        v10 = type metadata accessor for SessionCoordinatorCommand(0);
        sub_23FC0EDD8(a3, a2 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, type metadata accessor for SessionCoordinatorCommand);
        v11 = a1[1];
        v9 = __OFADD__(v11, 1);
        v12 = v11 + 1;
        if (!v9)
        {
          a1[1] = v12;
          return;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      v9 = __OFADD__(v5, *a1);
      v5 += *a1;
      if (v9)
        goto LABEL_13;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
}

void sub_23FC55E4C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v6 = a1[2];
  if (!v6)
  {
LABEL_5:
    v7 = *a1 - 1;
    if (__OFSUB__(*a1, 1))
      goto LABEL_9;
    goto LABEL_6;
  }
  v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_5;
  }
LABEL_6:
  v8 = type metadata accessor for SessionCoordinatorCommand(0);
  sub_23FC0EDD8(a3, a2 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v7, type metadata accessor for SessionCoordinatorCommand);
  a1[2] = v7;
  v9 = a1[1];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (!v10)
  {
    a1[1] = v11;
    return;
  }
  __break(1u);
LABEL_9:
  __break(1u);
}

uint64_t sub_23FC55EE8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  for (i = (uint64_t *)(a1 + 48); ; i += 3)
  {
    v8 = *(i - 2);
    v7 = *(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v12 = sub_23FC84EE0(v8, v7);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      break;
    v16 = v11;
    if (v10[3] >= v15)
    {
      if ((a2 & 1) == 0)
      {
        sub_23FBFD684(&qword_256F65DF0);
        sub_23FD7520C();
      }
    }
    else
    {
      sub_23FC55004(v15, a2 & 1);
      v17 = sub_23FC84EE0(v8, v7);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_18;
      v12 = v17;
    }
    v19 = (_QWORD *)*a3;
    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)(v19[7] + 8 * v12) = v9;
    }
    else
    {
      v19[(v12 >> 6) + 8] |= 1 << v12;
      v20 = (uint64_t *)(v19[6] + 16 * v12);
      *v20 = v8;
      v20[1] = v7;
      *(_QWORD *)(v19[7] + 8 * v12) = v9;
      v21 = v19[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_17;
      v19[2] = v23;
    }
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23FD753C8();
  __break(1u);
  return result;
}

void sub_23FC56094(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  __int128 v31;
  id v32;

  sub_23FC569AC(a1, a2, a3, &v31);
  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_23FC56BFC();
  if (!v8)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_release();
    sub_23FC08F30();
    swift_release();
    return;
  }
  v10 = v7;
  v11 = v8;
  v12 = v9;
  while (1)
  {
    v13 = (_QWORD *)*a5;
    v15 = sub_23FC84D84(v10, v11);
    v16 = v13[2];
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_23FD753C8();
      __break(1u);
      goto LABEL_20;
    }
    v19 = v14;
    if (v13[3] < v18)
      break;
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_23FBFD684(&qword_256F5E4E0);
      sub_23FD7520C();
      if ((v19 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v22 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    v23 = (uint64_t *)(v22[6] + 16 * v15);
    *v23 = v10;
    v23[1] = v11;
    *(_QWORD *)(v22[7] + 8 * v15) = v12;
    v24 = v22[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_18;
    v22[2] = v26;
    v10 = sub_23FC56BFC();
    v11 = v27;
    v12 = v28;
    a4 = 1;
    if (!v27)
      goto LABEL_16;
  }
  sub_23FC5530C(v18, a4 & 1);
  v20 = sub_23FC84D84(v10, v11);
  if ((v19 & 1) != (v21 & 1))
    goto LABEL_19;
  v15 = v20;
  if ((v19 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v29 = (void *)swift_allocError();
  swift_willThrow();
  v32 = v29;
  v30 = v29;
  sub_23FBFD684(&qword_254346E20);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_23FC08F30();
    swift_release();

    return;
  }
LABEL_20:
  sub_23FD750E0();
  sub_23FD74C48();
  sub_23FD751DC();
  sub_23FD74C48();
  sub_23FD75230();
  __break(1u);
}

void sub_23FC563BC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  _BOOL4 v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_20;
  }
  v7 = a3[1];
  v8 = type metadata accessor for SessionCoordinatorCommand(0);
  if (v5 < v7)
  {
    v9 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      v10 = v5;
      v11 = a4;
      goto LABEL_6;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v11 = 0;
  v9 = 0;
  v10 = v7;
LABEL_6:
  v12 = v5 < v7;
  v13 = v9 != 0;
  v14 = v12 && v13;
  if (v12 && v13)
    v15 = v11;
  else
    v15 = 0;
  if (v12 && v13)
    v16 = v9;
  else
    v16 = 0;
  if (v10 >= 1)
  {
    if (a4)
    {
      sub_23FC9A71C(a4 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v4, v10);
      goto LABEL_15;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_15:
  if (!v14 || v16 <= 0)
    return;
  if (!v15)
  {
LABEL_22:
    __break(1u);
    return;
  }
  sub_23FC9A71C(v15, v16);
}

uint64_t sub_23FC564C8()
{
  const void *v0;
  size_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;

  v1 = j__malloc_size(v0);
  result = type metadata accessor for SessionCoordinatorCommand(0);
  v3 = *(_QWORD *)(result - 8);
  v4 = *(_QWORD *)(v3 + 72);
  if (v4)
  {
    v5 = v1 - ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    if (v4 != -1 || v5 != 0x8000000000000000)
      return v5 / v4;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23FC5652C(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v17;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  v8 = a3[1];
  result = type metadata accessor for SessionCoordinatorCommand(0);
  if (v5 < v8)
  {
    v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      v11 = v5;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v12 = 0;
  v10 = 0;
  v11 = v8;
LABEL_6:
  v13 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (v11 < 1)
  {
    v11 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v14 = a4 + v13 * v4;
  if (v14 < a2 + v13 * v11 && v14 + v13 * v11 > a2)
    goto LABEL_30;
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 >= v8 || v10 < 1)
    return result;
  if (!v12)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    result = sub_23FD75278();
    __break(1u);
    return result;
  }
  v17 = a2 + v13 * v11;
  if (v17 + v13 * v10 > v12 && v17 < v12 + v13 * v10)
    goto LABEL_30;
  return swift_arrayInitWithCopy();
}

uint64_t sub_23FC566A8(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = a3[1];
  result = type metadata accessor for SessionCoordinatorCommand(0);
  if (v5 < v8)
  {
    v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      v11 = v5;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v12 = 0;
  v10 = 0;
  v11 = v8;
LABEL_6:
  v13 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (v11 < 1)
    goto LABEL_14;
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v14 = a4 + v13 * v4;
  v15 = a2 + v13 * v4;
  if (v14 < v15 + v13 * v11 && v15 < v14 + v13 * v11)
    goto LABEL_29;
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v10 >= 1)
  {
    if (v12)
    {
      if (a2 + v13 * v10 <= v12 || v12 + v13 * v10 <= a2)
        return swift_arrayInitWithCopy();
LABEL_29:
      result = sub_23FD75278();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_23FC56814(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  result = type metadata accessor for SessionCoordinatorCommand(0);
  v9 = *(_QWORD *)(a4 + 16);
  if (!v9)
  {
LABEL_9:
    *(_QWORD *)(a1 + 8) = a3;
    return result;
  }
  if (v9 > a3)
    goto LABEL_11;
  v10 = *(_QWORD *)(result - 8);
  v11 = a4 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v12 = *(_QWORD *)(v10 + 72) * v9;
  v13 = a2 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a2)
  {
    result = swift_arrayInitWithCopy();
    goto LABEL_9;
  }
LABEL_12:
  result = sub_23FD75278();
  __break(1u);
  return result;
}

uint64_t (*sub_23FC56908(uint64_t *a1, unint64_t a2, uint64_t a3))()
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = a3 & 0xC000000000000001;
  sub_23FC544C8(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v4)
  {
    v7 = sub_23FC5E714();
    v5 = MEMORY[0x242678EC4](v7);
  }
  else
  {
    v5 = swift_retain();
  }
  *a1 = v5;
  return sub_23FC56970;
}

uint64_t sub_23FC56970()
{
  return swift_release();
}

uint64_t (*sub_23FC56978(uint64_t a1, unint64_t a2, uint64_t a3))()
{
  uint64_t (*result)();

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > a2)
  {
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23FC569AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64)
    v8 = ~(-1 << -(char)v4);
  else
    v8 = -1;
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

void sub_23FC569E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  sub_23FC061F0();
  v5 = v4;
  v6 = sub_23FBFD684(&qword_256F5E610);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5E618);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC5DB68();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC5CBEC();
  if (!v14)
  {
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      return;
    }
    v20 = (unint64_t)(v0 + 64) >> 6;
    if (v19 < v20)
    {
      if (*(_QWORD *)(v3 + 8 * v19))
      {
LABEL_7:
        sub_23FC5C278();
        goto LABEL_3;
      }
      if (v13 + 2 < v20)
      {
        if (*(_QWORD *)(v3 + 8 * (v13 + 2)))
          goto LABEL_7;
        if (v13 + 3 < v20)
        {
          if (*(_QWORD *)(v3 + 8 * (v13 + 3)))
            goto LABEL_7;
          if (v13 + 4 < v20)
          {
            if (*(_QWORD *)(v3 + 8 * (v13 + 4)))
              goto LABEL_7;
            if (v13 + 5 < v20)
            {
              if (*(_QWORD *)(v3 + 8 * (v13 + 5)))
                goto LABEL_7;
              v21 = v13 + 6;
              while (v21 < v20)
              {
                if (*(_QWORD *)(v3 + 8 * v21++))
                  goto LABEL_7;
              }
            }
          }
        }
      }
    }
    sub_23FC5E2D4();
    goto LABEL_22;
  }
  sub_23FC5C730();
LABEL_3:
  v16 = *(_QWORD *)(v15 + 48);
  v17 = v15;
  v18 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v1, v16 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v5, v18);
  *(_QWORD *)(v1 + *(int *)(v6 + 48)) = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v5);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v6);
  sub_23FC5B578();
  v5 = v0;
  v2 = v28;
LABEL_22:
  sub_23FC5EACC();
  sub_23FC5F2C4(v23, v24, &qword_256F5E618);
  v25 = 1;
  sub_23FC100EC(v2, 1, v6);
  if (!v26)
  {
    sub_23FC5DB54();
    sub_23FC5ED9C();
    sub_23FC5F414();
    v25 = 0;
  }
  v27 = sub_23FBFD684(&qword_256F5E620);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v25, 1, v27);
  sub_23FC060D4();
}

uint64_t sub_23FC56BFC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    return v19;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v18 < v14)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

void sub_23FC56D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  sub_23FC061F0();
  v5 = v4;
  v6 = sub_23FBFD684(&qword_256F5E5F8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC0603C();
  sub_23FBFD684(&qword_256F5E600);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC5DB68();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC5CBEC();
  if (!v14)
  {
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      return;
    }
    v20 = (unint64_t)(v0 + 64) >> 6;
    if (v19 < v20)
    {
      if (*(_QWORD *)(v3 + 8 * v19))
      {
LABEL_7:
        sub_23FC5C278();
        goto LABEL_3;
      }
      if (v13 + 2 < v20)
      {
        if (*(_QWORD *)(v3 + 8 * (v13 + 2)))
          goto LABEL_7;
        if (v13 + 3 < v20)
        {
          if (*(_QWORD *)(v3 + 8 * (v13 + 3)))
            goto LABEL_7;
          if (v13 + 4 < v20)
          {
            if (*(_QWORD *)(v3 + 8 * (v13 + 4)))
              goto LABEL_7;
            if (v13 + 5 < v20)
            {
              if (*(_QWORD *)(v3 + 8 * (v13 + 5)))
                goto LABEL_7;
              v21 = v13 + 6;
              while (v21 < v20)
              {
                if (*(_QWORD *)(v3 + 8 * v21++))
                  goto LABEL_7;
              }
            }
          }
        }
      }
    }
    sub_23FC5E2D4();
    goto LABEL_22;
  }
  sub_23FC5C730();
LABEL_3:
  v16 = *(_QWORD *)(v15 + 48);
  v17 = v15;
  v18 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  sub_23FC0EDD8(v16 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v5, v1, type metadata accessor for FeedbackLearning.CandidateParameter);
  *(_QWORD *)(v1 + *(int *)(v6 + 48)) = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v5);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v6);
  sub_23FC5B578();
  v5 = v0;
  v2 = v28;
LABEL_22:
  sub_23FC5EACC();
  sub_23FC5F2C4(v23, v24, &qword_256F5E600);
  v25 = 1;
  sub_23FC100EC(v2, 1, v6);
  if (!v26)
  {
    sub_23FC5DB54();
    sub_23FC5ED9C();
    sub_23FC5F414();
    v25 = 0;
  }
  v27 = sub_23FBFD684(&qword_256F5E608);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v25, 1, v27);
  sub_23FC060D4();
}

uint64_t sub_23FC56F90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = a2;
  if (a2 >= result)
  {
    if (result == a2)
      return 0;
    v6 = 1;
    v7 = a2;
    v5 = result;
  }
  else
  {
    v6 = -1;
    v7 = result;
  }
  v8 = 0;
  v9 = *(_QWORD *)(a3 + 16);
  while (1)
  {
    v10 = __OFADD__(v8, v6);
    v8 += v6;
    if (v10)
      break;
    if (v5 == v9)
      goto LABEL_20;
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_21;
    v5 = v9;
    if (v11 != v9)
    {
      result = type metadata accessor for EventPayloadWithPreassignedID(0);
      v12 = *(_QWORD *)(result - 8);
      v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      v5 = v11;
      while (v5 < v9)
      {
        v14 = v13 + *(_QWORD *)(v12 + 72) * v5;
        swift_retain();
        LOBYTE(v14) = a4(v14);
        result = swift_release();
        if ((v14 & 1) != 0)
          goto LABEL_16;
        if (v9 == ++v5)
        {
          v5 = v9;
          goto LABEL_16;
        }
      }
      __break(1u);
      break;
    }
LABEL_16:
    if (v5 == v7)
      return v8;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_23FC570C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_23FC57140;
  return sub_23FC1F3A8(a2, a3, a4, a5, a6);
}

uint64_t sub_23FC57140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23FC5F47C();
  v4 = *v3;
  sub_23FC5AEA0(v5);
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return sub_23FC5B0D0(*(uint64_t (**)(void))(v4 + 8));
}

void sub_23FC57184(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_23FC55920(*a1, *a2, a3);
}

void sub_23FC571B8(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23FC57184(a1, *(uint64_t **)(v2 + 16), a2);
}

unint64_t sub_23FC571D4()
{
  unint64_t result;

  result = qword_256F5E2D0;
  if (!qword_256F5E2D0)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256F5E2D0);
  }
  return result;
}

void sub_23FC57210(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_23FD714D4();
  a1[1] = v2;
  sub_23FBFF0A0();
}

unint64_t sub_23FC57234()
{
  unint64_t result;

  result = qword_256F61710;
  if (!qword_256F61710)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76D54, &type metadata for ClientSessionManager.SessionError);
    atomic_store(result, &qword_256F61710);
  }
  return result;
}

void sub_23FC57270(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_23FC5727C()
{
  swift_weakDestroy();
  sub_23FC5E814();
  return swift_deallocObject();
}

uint64_t sub_23FC57298()
{
  uint64_t v0;

  sub_23FC5D530();
  sub_23FC5E8E8();
  swift_unknownObjectRelease();
  sub_23FC5EAB8();
  v0 = sub_23FBFF104();
  sub_23FC5BFF8(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23FC5E840();
  return sub_23FC5A154();
}

uint64_t sub_23FC57320()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FC5D530();
  sub_23FC5DC00();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5B354(v1);
  return sub_23FC1D568(v2, v3, v4, v5, v6, v7);
}

unint64_t sub_23FC57394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5E358;
  if (!qword_256F5E358)
  {
    v1 = sub_23FBFEDE8(&qword_256F5E318);
    result = MEMORY[0x2426797E8](&unk_23FD78660, v1);
    atomic_store(result, &qword_256F5E358);
  }
  return result;
}

uint64_t sub_23FC573D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = swift_task_alloc();
  v7 = (_QWORD *)sub_23FC0922C(v6);
  *v7 = v3;
  v7[1] = sub_23FC57438;
  return sub_23FC201C4(a1, a2, v2);
}

uint64_t sub_23FC57438()
{
  uint64_t v0;

  sub_23FC59C00();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC57474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FBFD684(&qword_256F5E3B8);
  sub_23FC5E8D8();
  sub_23FC5B968();
  sub_23FC5EAB8();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 40);
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC5D498();
  return sub_23FC5A154();
}

uint64_t sub_23FC574C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FBFD684(&qword_256F5E3B8);
  sub_23FC5F564();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5B354(v1);
  return sub_23FC20C78(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23FC57540()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2C8(v1);
  return sub_23FC5CAF0(v2, v3, v4, v5);
}

uint64_t sub_23FC57588()
{
  return sub_23FC57604(&qword_256F5E398);
}

uint64_t sub_23FC57594()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FBFD684(&qword_256F5E398);
  sub_23FC5D510();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FC20E80(v2, v3, v4, v5, v6);
}

uint64_t sub_23FC575F8()
{
  return sub_23FC57604(&qword_256F5E380);
}

uint64_t sub_23FC57604(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FBFD684(a1);
  sub_23FC5E8D8();
  sub_23FC5B968();
  sub_23FC5EAB8();
  sub_23FBFF204(v1 + v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC5D498();
  return sub_23FC5A154();
}

uint64_t sub_23FC57644()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FBFD684(&qword_256F5E380);
  sub_23FC5D510();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FC20ED4(v2, v3, v4, v5, v6);
}

uint64_t sub_23FC576AC()
{
  return sub_23FC9DA60();
}

_BYTE **sub_23FC576B8(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C98(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_23FC576C4()
{
  uint64_t v0;

  return sub_23FC9DB70(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_23FC576CC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_23FC9DB90(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_23FC576DC()
{
  return sub_23FC57870((uint64_t (*)(_QWORD))MEMORY[0x24BE53D28]);
}

uint64_t sub_23FC576E8()
{
  return sub_23FC578D4((uint64_t (*)(_QWORD))MEMORY[0x24BE53D28]);
}

void sub_23FC5770C()
{
  uint64_t v0;

  sub_23FCB3ECC(*(void **)(v0 + 16));
}

uint64_t sub_23FC57724()
{
  uint64_t v0;

  return sub_23FC08C5C(*(void (**)(void))(v0 + 16));
}

void sub_23FC5772C()
{
  uint64_t v0;

  sub_23FC08C7C(*(void (**)(void))(v0 + 16));
}

void sub_23FC57734()
{
  sub_23FC08CA8();
}

unint64_t sub_23FC57744()
{
  unint64_t result;

  result = qword_256F5E490;
  if (!qword_256F5E490)
  {
    result = MEMORY[0x2426797E8](&unk_23FD78824, &unk_2510102C0);
    atomic_store(result, (unint64_t *)&qword_256F5E490);
  }
  return result;
}

uint64_t sub_23FC577B0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23FC577F4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23FC57838()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57844()
{
  uint64_t v0;

  return sub_23FCB3C2C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23FC5784C()
{
  uint64_t v0;

  return sub_23FC9DAD4(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_23FC57864()
{
  return sub_23FC57870((uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0]);
}

uint64_t sub_23FC57870(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = sub_23FC5F190(a1);
  sub_23FC090C8(*(_QWORD *)(v1 - 8));
  return sub_23FC5D478();
}

uint64_t sub_23FC578C0()
{
  return sub_23FC578D4((uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0]);
}

uint64_t sub_23FC578D4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = sub_23FC5F190(a1);
  v2 = sub_23FC5DC1C(v1);
  return sub_23FC5DC64(v2, v3);
}

uint64_t sub_23FC57904()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57920()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC5793C()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57958()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57974()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57990()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC579B4()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC579C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FBFD684(&qword_256F5E3A0);
  sub_23FC5E8E8();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + ((v1 + 16) & ~v1));
  v2 = sub_23FBFD684(&qword_256F5E3B0);
  sub_23FC5B538(*(_QWORD *)(v2 - 8));
  sub_23FC5D498();
  return sub_23FC5A154();
}

void sub_23FC57A30(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = sub_23FBFD684(&qword_256F5E3A0);
  v3 = (_QWORD *)sub_23FC5EA20(v2);
  sub_23FCB4094(v3, a1);
}

uint64_t sub_23FC57A60()
{
  uint64_t v0;

  return sub_23FC9DB18(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_23FC57A68()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57A78()
{
  return sub_23FC57E30();
}

uint64_t sub_23FC57AAC()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57AB8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FC57ADC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23FCB40D4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23FC57AFC()
{
  swift_bridgeObjectRelease();
  sub_23FC5E814();
  return swift_deallocObject();
}

uint64_t sub_23FC57B18()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57B24()
{
  uint64_t v0;

  return sub_23FCA2130(*(_QWORD *)(v0 + 16));
}

void sub_23FC57B44(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_23FD53D18(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_23FC57B4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FD53CAC(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_23FC57B54()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57B70()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57B8C()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57BA0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23FC57BCC()
{
  unint64_t result;

  result = qword_256F5E4B8;
  if (!qword_256F5E4B8)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BE550F0], MEMORY[0x24BE550E0]);
    atomic_store(result, (unint64_t *)&qword_256F5E4B8);
  }
  return result;
}

uint64_t sub_23FC57C08()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57C14()
{
  uint64_t v0;

  sub_23FC5E814();
  return swift_deallocObject();
}

uint64_t sub_23FC57C48()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57C64()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57C80()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57C9C()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57CB8()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57CD4()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57CF8()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57D04()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57D10()
{
  uint64_t v0;

  return nullsub_1(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23FC57D30()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57D4C()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57D58()
{
  uint64_t v0;

  return sub_23FCB3C30(v0);
}

uint64_t sub_23FC57D78()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57D88()
{
  return sub_23FCB3D28();
}

uint64_t sub_23FC57DB0()
{
  return sub_23FC58AB8();
}

uint64_t sub_23FC57DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FBFD684(qword_254346A10) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = sub_23FBFF104();
  if (!sub_23FC5C150(v0 + v2))
    sub_23FC595C4(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  return sub_23FC5A154();
}

uint64_t sub_23FC57E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v0 = sub_23FBFD684(qword_254346A10);
  v1 = sub_23FC5DC1C(v0);
  return sub_23FC5DC64(v1, v2);
}

unint64_t sub_23FC57E74()
{
  unint64_t result;

  result = qword_256F5E4D0;
  if (!qword_256F5E4D0)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_256F5E4D0);
  }
  return result;
}

void sub_23FC57EB0(_BYTE *a1@<X8>)
{
  *a1 = sub_23FD714EC() & 1;
  sub_23FBFF0A0();
}

uint64_t sub_23FC57ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = swift_task_alloc();
  v7 = (_QWORD *)sub_23FC0922C(v6);
  *v7 = v2;
  v7[1] = sub_23FC57F38;
  return sub_23FCB42F0(a1, v5, v4);
}

uint64_t sub_23FC57F38()
{
  uint64_t v0;

  sub_23FC59C00();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC57F6C()
{
  uint64_t v0;

  v0 = sub_23FBFD684(&qword_256F5E2B8);
  sub_23FC090C8(*(_QWORD *)(v0 - 8));
  return sub_23FC5D478();
}

void sub_23FC57FC4()
{
  uint64_t v0;

  v0 = sub_23FBFD684(&qword_256F5E2B8);
  sub_23FC5EA20(v0);
  sub_23FCB36A0();
}

void sub_23FC57FE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_23FC0922C(v1);
  *v2 = v0;
  v2[1] = sub_23FC586E4;
  sub_23FC5D4C4();
  __asm { BR              X6 }
}

void sub_23FC5806C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_23FC5B538(*(_QWORD *)(v2 - 8));
  sub_23FBFF0A0();
}

uint64_t sub_23FC5809C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC061F0();
  v1 = *(_QWORD *)(sub_23FC5D530() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_23FC5F59C() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_23FC5F594();
  sub_23FC5E8E8();
  swift_unknownObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 32);
  v6 = sub_23FBFF104();
  sub_23FC5B944(*(_QWORD *)(v6 - 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23FC10454(v0 + v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  swift_bridgeObjectRelease();
  v7 = sub_23FD72F14();
  sub_23FC5BFF8(v7);
  swift_release();
  v8 = sub_23FC5F58C();
  sub_23FC5BFF8(v8);
  swift_release();
  sub_23FC5E840();
  return swift_deallocObject();
}

uint64_t sub_23FC581D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FC5D530();
  sub_23FC5F59C();
  sub_23FC5F594();
  sub_23FC5DC00();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5C0CC(v1);
  return sub_23FC1FC4C(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_23FC58294(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x2426798D8);
  return result;
}

void sub_23FC582C8(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_23FD714E0();
  a1[1] = v2;
  sub_23FBFF0A0();
}

void sub_23FC582EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23FC102D0(a1, a2, a3);
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23FBFF0A0();
}

uint64_t sub_23FC58318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5DC54();
  sub_23FC5E8D8();
  sub_23FC5B968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC5D498();
  return sub_23FC5A154();
}

uint64_t sub_23FC58364()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FC5DC54();
  sub_23FC5F564();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5C0CC(v1);
  return sub_23FC18E20(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_23FC583E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5B354(v1);
  return sub_23FC19188(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23FC58440(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ToolBoxDelegates(a2, a1);
  return a2;
}

uint64_t sub_23FC5847C(uint64_t a1)
{
  destroy for ToolBoxDelegates(a1);
  return a1;
}

void sub_23FC584B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23FBFD684(a2);
  sub_23FC5B538(*(_QWORD *)(v2 - 8));
  sub_23FBFF0A0();
}

void sub_23FC584E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_23FBFF0A0();
}

uint64_t getEnumTagSinglePayload for ClientSessionManager.SessionError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientSessionManager.SessionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FC585F4 + 4 * byte_23FD76BC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FC58628 + 4 * byte_23FD76BC0[v4]))();
}

uint64_t sub_23FC58628(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FC58630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FC58638);
  return result;
}

uint64_t sub_23FC58644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FC5864CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FC58650(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FC58658(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23FC58664(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClientSessionManager.SessionError()
{
  return &type metadata for ClientSessionManager.SessionError;
}

unint64_t sub_23FC58680()
{
  unint64_t result;

  result = qword_256F5E630;
  if (!qword_256F5E630)
  {
    result = MEMORY[0x2426797E8](&unk_23FD76D2C, &type metadata for ClientSessionManager.SessionError);
    atomic_store(result, (unint64_t *)&qword_256F5E630);
  }
  return result;
}

uint64_t sub_23FC58A94()
{
  return swift_allocObject();
}

uint64_t sub_23FC58AA0()
{
  return swift_allocObject();
}

uint64_t sub_23FC58AA8()
{
  return swift_deallocObject();
}

uint64_t sub_23FC58AB8()
{
  return swift_deallocObject();
}

uint64_t sub_23FC58AC0()
{
  return swift_release();
}

uint64_t sub_23FC58AC8()
{
  return swift_release();
}

uint64_t sub_23FC58AD0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(a1, a2, v2, v3);
}

uint64_t sub_23FC58ADC()
{
  return swift_release();
}

uint64_t sub_23FC58AE4()
{
  return swift_release();
}

uint64_t sub_23FC58AEC()
{
  _QWORD *v0;
  uint64_t result;

  result = v0[483];
  STACK[0x318] = v0[464];
  STACK[0x320] = v0[463];
  STACK[0x328] = v0[462];
  STACK[0x330] = v0[461];
  STACK[0x338] = v0[460];
  STACK[0x340] = v0[459];
  STACK[0x348] = v0[458];
  STACK[0x350] = v0[457];
  STACK[0x358] = v0[456];
  STACK[0x360] = v0[455];
  STACK[0x368] = v0[452];
  STACK[0x370] = v0[451];
  STACK[0x378] = v0[450];
  STACK[0x380] = v0[449];
  STACK[0x388] = v0[448];
  STACK[0x390] = v0[447];
  STACK[0x398] = v0[444];
  STACK[0x3A0] = v0[443];
  STACK[0x3A8] = v0[442];
  STACK[0x3B0] = v0[439];
  STACK[0x3B8] = v0[438];
  STACK[0x3C0] = v0[437];
  STACK[0x3C8] = v0[436];
  STACK[0x3D0] = v0[435];
  STACK[0x3D8] = v0[434];
  STACK[0x3E0] = v0[433];
  STACK[0x3E8] = v0[432];
  STACK[0x3F0] = v0[431];
  STACK[0x3F8] = v0[430];
  STACK[0x400] = v0[429];
  STACK[0x408] = v0[428];
  STACK[0x410] = v0[427];
  STACK[0x418] = v0[426];
  STACK[0x420] = v0[425];
  STACK[0x428] = v0[424];
  STACK[0x430] = v0[423];
  STACK[0x438] = v0[422];
  STACK[0x440] = v0[421];
  STACK[0x448] = v0[420];
  STACK[0x450] = v0[419];
  return result;
}

uint64_t sub_23FC58C5C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

uint64_t sub_23FC58C64()
{
  return swift_release();
}

uint64_t sub_23FC58C6C()
{
  return swift_release();
}

uint64_t sub_23FC58C74()
{
  uint64_t v0;

  return sub_23FC08C28((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 - 104), v0 - 128, v0 - 120, v0 - 112);
}

uint64_t sub_23FC58C88()
{
  return swift_retain();
}

uint64_t sub_23FC58C90(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

void sub_23FC58C98(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23FC5051C(v1, a1);
}

uint64_t sub_23FC58CA0()
{
  return swift_release();
}

uint64_t sub_23FC58CA8()
{
  return swift_retain();
}

void sub_23FC58CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 - 256) = *(_DWORD *)(v0 + 4204);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  v2 = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(v0 + 2968);
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 208) = v2;
  STACK[0x620] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  *(_QWORD *)(v1 - 240) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2352);
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2344);
  STACK[0x688] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675EDCLL);
}

uint64_t sub_23FC58D58()
{
  return swift_retain();
}

uint64_t sub_23FC58D60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC58D68()
{
  return swift_retain();
}

uint64_t sub_23FC58D70()
{
  return swift_retain();
}

uint64_t sub_23FC58D78()
{
  return swift_retain();
}

uint64_t sub_23FC58D80()
{
  return swift_retain();
}

uint64_t sub_23FC58D88(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

uint64_t sub_23FC58D90()
{
  return swift_retain();
}

uint64_t sub_23FC58D98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  STACK[0x578] = v0[368];
  STACK[0x580] = v0[367];
  STACK[0x588] = v0[364];
  STACK[0x590] = v0[363];
  STACK[0x598] = v0[360];
  STACK[0x5A0] = v0[357];
  STACK[0x5A8] = v0[356];
  STACK[0x5B0] = v0[355];
  STACK[0x5B8] = v0[351];
  STACK[0x5C0] = v0[350];
  STACK[0x5C8] = v0[349];
  STACK[0x5D0] = v0[348];
  STACK[0x5D8] = v0[347];
  STACK[0x5E0] = v0[344];
  STACK[0x5E8] = v0[343];
  STACK[0x5F0] = v0[342];
  STACK[0x5F8] = v0[341];
  STACK[0x600] = v0[340];
  STACK[0x608] = v0[339];
  STACK[0x610] = v0[338];
  STACK[0x618] = v0[337];
  STACK[0x620] = v0[336];
  STACK[0x628] = v0[335];
  STACK[0x630] = v0[334];
  STACK[0x638] = v0[331];
  STACK[0x640] = v0[330];
  STACK[0x648] = v0[327];
  STACK[0x650] = v0[326];
  STACK[0x668] = v0[323];
  STACK[0x670] = v0[321];
  STACK[0x678] = v0[320];
  STACK[0x680] = v0[317];
  STACK[0x688] = v0[316];
  v2 = v0[312];
  *(_QWORD *)(v1 - 256) = v0[315];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[310];
  *(_QWORD *)(v1 - 240) = v0[311];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[304];
  *(_QWORD *)(v1 - 224) = v0[307];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[298];
  *(_QWORD *)(v1 - 208) = v0[301];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[292];
  *(_QWORD *)(v1 - 192) = v0[295];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[286];
  *(_QWORD *)(v1 - 176) = v0[289];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[282];
  *(_QWORD *)(v1 - 160) = v0[283];
  *(_QWORD *)(v1 - 152) = v8;
  *(_QWORD *)(v1 - 144) = v0[279];
  return swift_task_dealloc();
}

uint64_t sub_23FC58F00()
{
  return swift_release();
}

uint64_t sub_23FC58F08(uint64_t (**a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(a1, v3, v2, v1);
}

void sub_23FC58F18()
{
  uint64_t v0;

  STACK[0x650] = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2920);
  *(_QWORD *)(v0 - 200) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2352);
  *(_QWORD *)(v0 - 184) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2344);
  *(_QWORD *)(v0 - 224) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2192);
  JUMPOUT(0x242675EDCLL);
}

uint64_t sub_23FC58F88()
{
  return sub_23FBFEFF4();
}

uint64_t sub_23FC58F90()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FC58F98()
{
  return swift_retain();
}

uint64_t sub_23FC58FA0()
{
  return swift_release();
}

uint64_t sub_23FC58FA8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

uint64_t sub_23FC58FB0()
{
  return sub_23FD724C4();
}

uint64_t sub_23FC58FB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[312];
  *(_QWORD *)(v1 - 256) = v0[315];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[310];
  *(_QWORD *)(v1 - 240) = v0[311];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[304];
  *(_QWORD *)(v1 - 224) = v0[307];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[298];
  *(_QWORD *)(v1 - 208) = v0[301];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[292];
  *(_QWORD *)(v1 - 192) = v0[295];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[286];
  *(_QWORD *)(v1 - 176) = v0[289];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[282];
  *(_QWORD *)(v1 - 160) = v0[283];
  *(_QWORD *)(v1 - 152) = v8;
  *(_QWORD *)(v1 - 144) = v0[279];
  return swift_task_dealloc();
}

uint64_t sub_23FC59018()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[72];
  *(_QWORD *)(v1 - 224) = v0[73];
  *(_QWORD *)(v1 - 216) = v2;
  v3 = v0[68];
  *(_QWORD *)(v1 - 208) = v0[71];
  *(_QWORD *)(v1 - 200) = v3;
  v4 = v0[64];
  *(_QWORD *)(v1 - 192) = v0[65];
  *(_QWORD *)(v1 - 184) = v4;
  v5 = v0[62];
  *(_QWORD *)(v1 - 176) = v0[63];
  *(_QWORD *)(v1 - 168) = v5;
  v6 = v0[58];
  *(_QWORD *)(v1 - 160) = v0[61];
  *(_QWORD *)(v1 - 152) = v6;
  v7 = v0[56];
  *(_QWORD *)(v1 - 144) = v0[57];
  *(_QWORD *)(v1 - 136) = v7;
  v8 = v0[50];
  *(_QWORD *)(v1 - 128) = v0[53];
  *(_QWORD *)(v1 - 120) = v8;
  return swift_release();
}

uint64_t sub_23FC59120()
{
  return swift_beginAccess();
}

uint64_t sub_23FC59128(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23FBFDE40(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

void sub_23FC5914C(unint64_t a1@<X8>)
{
  _QWORD *v1;

  STACK[0x458] = a1;
  STACK[0x460] = v1[417];
  STACK[0x468] = v1[416];
  STACK[0x470] = v1[415];
  STACK[0x478] = v1[414];
  STACK[0x480] = v1[413];
  STACK[0x488] = v1[412];
  STACK[0x490] = v1[411];
  STACK[0x498] = v1[410];
  STACK[0x4A0] = v1[407];
  STACK[0x4A8] = v1[404];
  STACK[0x4B0] = v1[403];
  STACK[0x4B8] = v1[402];
  STACK[0x4C0] = v1[401];
  STACK[0x4C8] = v1[400];
  STACK[0x4D0] = v1[398];
  STACK[0x4D8] = v1[397];
  STACK[0x4E0] = v1[395];
  STACK[0x4E8] = v1[394];
  STACK[0x4F0] = v1[390];
  STACK[0x4F8] = v1[389];
  STACK[0x500] = v1[387];
  STACK[0x508] = v1[386];
  STACK[0x510] = v1[384];
  STACK[0x518] = v1[383];
  STACK[0x520] = v1[380];
  STACK[0x528] = v1[379];
  STACK[0x530] = v1[378];
  STACK[0x540] = v1[377];
  STACK[0x550] = v1[376];
}

uint64_t sub_23FC59240()
{
  return sub_23FD72284();
}

void sub_23FC59250(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

__n128 sub_23FC59258(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x650];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x650];
  return result;
}

uint64_t sub_23FC59268(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23FBFDE40(a1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v1);
}

__n128 sub_23FC5928C(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x660];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x660];
  return result;
}

uint64_t sub_23FC5929C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(a1, a2, v3, v2);
}

void sub_23FC592A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0x620]) = *(_DWORD *)(v0 + 4204);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3160);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3136);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3128);
  STACK[0x688] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2968);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2960);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2952);
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2360);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2352);
  *(_QWORD *)(v1 - 240) = v2;
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2344);
  *(_QWORD *)(v1 - 224) = v3;
  STACK[0x618] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675EDCLL);
}

void sub_23FC59370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0x620]) = *(_DWORD *)(v0 + 4204);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3160);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3136);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3128);
  STACK[0x688] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2968);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2960);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2952);
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2408);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2400);
  *(_QWORD *)(v1 - 240) = v2;
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2392);
  *(_QWORD *)(v1 - 224) = v3;
  STACK[0x618] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675EB8);
}

uint64_t sub_23FC59438(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC59444()
{
  uint64_t v0;
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1[382] + 32))(v1[384], v0, v1[381]);
}

uint64_t sub_23FC59464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23FC59474()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[498];
  v3 = v0[371];
  *(_QWORD *)(v1 - 176) = v0[370];
  *(_QWORD *)(v1 - 168) = v2;
  *(_QWORD *)(v1 - 160) = v0[369];
  *(_QWORD *)(v1 - 192) = v0[274];
  *(_QWORD *)(v1 - 184) = v3;
  return sub_23FD73214();
}

uint64_t sub_23FC594B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[498];
  v3 = v0[371];
  *(_QWORD *)(v1 - 216) = v0[370];
  *(_QWORD *)(v1 - 208) = v2;
  *(_QWORD *)(v1 - 144) = v0[369];
  *(_QWORD *)(v1 - 232) = v0[274];
  *(_QWORD *)(v1 - 224) = v3;
  return sub_23FD73214();
}

void sub_23FC594FC()
{
  sub_23FBFEFA0();
}

uint64_t sub_23FC59504()
{
  return swift_retain();
}

uint64_t sub_23FC5950C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(v1 - 248) = *(_DWORD *)(v0 + 4212);
  v2 = *(_QWORD *)(v0 + 3576);
  v3 = *(_QWORD *)(v0 + 3568);
  v4 = *(_QWORD *)(v0 + 3560);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v0 + 3128);
  v5 = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 240) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 232) = v5;
  STACK[0x620] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2928);
  STACK[0x688] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2344);
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2352);
  *(_QWORD *)(v1 - 216) = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2264);
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v7, v4);
}

uint64_t sub_23FC595C4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FC595CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104))(v3, v0, v2);
}

uint64_t sub_23FC595E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC595E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)(v1 - 232) = *(_DWORD *)(v0 + 4240);
  v2 = *(_QWORD *)(v0 + 3184);
  v3 = *(_QWORD *)(v0 + 3168);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3072);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3056);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3048);
  v7 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2960);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2968);
  *(_QWORD *)(v1 - 208) = v7;
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2952);
  *(_QWORD *)(v1 - 240) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2944);
  STACK[0x688] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2936);
  v8 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2928);
  *(_QWORD *)(v1 - 248) = v8;
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v2 + *(int *)(v3 + 32), v6);
}

uint64_t sub_23FC59698(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

void sub_23FC596A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 - 256) = *(_DWORD *)(v0 + 4204);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  v2 = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(v0 + 2968);
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 208) = v2;
  STACK[0x620] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  *(_QWORD *)(v1 - 240) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2400);
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2392);
  STACK[0x688] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675EB8);
}

uint64_t sub_23FC5974C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v1 - 200) = *(_DWORD *)(v0 + 4232);
  v2 = *(_QWORD *)(v0 + 3160);
  v3 = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 168) = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 160) = v2;
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 184) = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 176) = v3;
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2480);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2472);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2464);
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v6);
}

uint64_t sub_23FC597F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v1 - 200) = *(_DWORD *)(v0 + 4232);
  v2 = *(_QWORD *)(v0 + 3160);
  v3 = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 168) = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 160) = v2;
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 184) = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 176) = v3;
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2480);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2472);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2464);
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v6);
}

uint64_t sub_23FC598A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v1 - 240) = *(_DWORD *)(v0 + 4232);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  v2 = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 208) = v2;
  v3 = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 224) = v3;
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2480);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2472);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2464);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v6);
}

uint64_t sub_23FC59950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v1 - 240) = *(_DWORD *)(v0 + 4232);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  v2 = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 208) = v2;
  v3 = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 224) = v3;
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2480);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2472);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2464);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v6);
}

BOOL sub_23FC599FC@<W0>(os_log_type_t a1@<W8>)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC59A08()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 4000))(*(_QWORD *)(v0 + 3600), *(_QWORD *)(v0 + 2208) + *(_QWORD *)(v0 + 3904), *(_QWORD *)(v0 + 3560));
}

uint64_t sub_23FC59A44@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC59A50(uint64_t (**a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(a1, v2, v3, v1);
}

uint64_t sub_23FC59A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)(v1 - 184) = *(_DWORD *)(v0 + 4240);
  v2 = *(_QWORD *)(v0 + 3184);
  v3 = *(_QWORD *)(v0 + 3168);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3072);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3056);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 3048);
  v7 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2968);
  v8 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2952);
  *(_QWORD *)(v1 - 168) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2960);
  *(_QWORD *)(v1 - 160) = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2944);
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2936);
  *(_QWORD *)(v1 - 216) = v9;
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2928);
  *(_QWORD *)(v1 - 200) = v7;
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2920);
  *(_QWORD *)(v1 - 176) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v2 + *(int *)(v3 + 32), v6);
}

void sub_23FC59B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3128);
  *(_QWORD *)(v0 - 176) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3136);
  *(_QWORD *)(v0 - 168) = v1;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2960);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2952);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2360);
  *(_QWORD *)(v0 - 224) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2968);
  *(_QWORD *)(v0 - 216) = v4;
  *(_QWORD *)(v0 - 208) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2352);
  *(_QWORD *)(v0 - 200) = v2;
  *(_QWORD *)(v0 - 192) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2344);
  *(_QWORD *)(v0 - 184) = v3;
  STACK[0x648] = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2192);
  JUMPOUT(0x242675EDCLL);
}

uint64_t sub_23FC59BAC()
{
  return swift_task_alloc();
}

uint64_t sub_23FC59BC0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[309] + 96))(v0[310], v0[308]);
}

uint64_t sub_23FC59BF8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC08C28(a1, a2, a3, a4);
}

uint64_t sub_23FC59C00()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

__n128 sub_23FC59C10(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x650];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x650];
  return result;
}

__n128 sub_23FC59C1C(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x660];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x660];
  return result;
}

uint64_t sub_23FC59C28(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC59C3C()
{
  return swift_task_alloc();
}

uint64_t sub_23FC59C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v1 - 200) = *(_DWORD *)(v0 + 4196);
  v2 = *(_QWORD *)(v0 + 3160);
  v3 = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 168) = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 160) = v2;
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 184) = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 176) = v3;
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2480);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2472);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2464);
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v6);
}

uint64_t sub_23FC59CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v1 - 240) = *(_DWORD *)(v0 + 4196);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  v2 = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 208) = v2;
  v3 = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 224) = v3;
  v4 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2480);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2472);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2464);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v6);
}

uint64_t sub_23FC59D6C(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC59D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return sub_23FC08C28(v2, v3, v1, v0);
}

uint64_t sub_23FC59D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return sub_23FC08C28(v2, v1, v0, v3);
}

uint64_t sub_23FC59DA0()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(v1, v3, v0, v2);
}

uint64_t sub_23FC59DB4()
{
  uint64_t (**v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(v0, v2, v3, v1);
}

uint64_t sub_23FC59DC8()
{
  uint64_t (**v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(v0, v1, v2, v3);
}

unint64_t sub_23FC59DDC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 2824);
  v3 = *(_QWORD *)(v1 + 2176);
  sub_23FC544EC(v0, 1, v3);
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(_QWORD *)(v2 + 72) * v0;
}

uint64_t sub_23FC59E20()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC59E54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = v1[461];
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1[460], v0, 1, v1[381]);
  return v2;
}

uint64_t sub_23FC59E98()
{
  return sub_23FD74BDC();
}

uint64_t sub_23FC59EB0()
{
  uint64_t v0;
  uint64_t v1;

  LODWORD(STACK[0x620]) = *(_DWORD *)(v0 + 4228);
  STACK[0x5D8] = *(_QWORD *)(v0 + 3776);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(v0 + 3128);
  STACK[0x5E0] = *(_QWORD *)(v0 + 3072);
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(v0 + 2968);
  *(_QWORD *)(v1 - 240) = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(v0 + 2952);
  STACK[0x618] = *(_QWORD *)(v0 + 2944);
  STACK[0x5E8] = *(_QWORD *)(v0 + 2928);
  STACK[0x5F0] = *(_QWORD *)(v0 + 2920);
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(v0 + 2400);
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v0 + 2392);
  STACK[0x688] = *(_QWORD *)(v0 + 2192);
  return sub_23FD72110();
}

void sub_23FC59F3C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23FC59F48@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

void sub_23FC59F50()
{
  sub_23FCB42E4();
}

uint64_t sub_23FC59F80()
{
  return sub_23FD724C4();
}

uint64_t sub_23FC59F88@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_23FC59F98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FBFDE40(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v1);
}

uint64_t sub_23FC59FC0()
{
  return sub_23FD721DC();
}

uint64_t sub_23FC59FD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = v2[462];
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2[456], a2, 1, v2[381]);
  return v3;
}

uint64_t sub_23FC5A010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v3 + 2952);
  *(_QWORD *)(v4 - 200) = *(_QWORD *)(v3 + 2960);
  *(_QWORD *)(v4 - 192) = v5;
  STACK[0x650] = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 2928);
  v6 = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 2920);
  v7 = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 2344);
  *(_QWORD *)(v4 - 184) = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 2352);
  *(_QWORD *)(v4 - 176) = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 2264);
  v9 = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 2192);
  *(_QWORD *)(v4 - 224) = v6;
  *(_QWORD *)(v4 - 216) = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v1, v8, v2);
}

uint64_t sub_23FC5A094(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC08C28(a1, a2, a3, a4);
}

uint64_t sub_23FC5A09C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5A0A4()
{
  return swift_allocObject();
}

uint64_t sub_23FC5A0B8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

void sub_23FC5A0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x688]) = *(_DWORD *)(v0 + 4204);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3160);
  v2 = *(_QWORD *)(v0 + 3136);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v0 + 3128);
  v3 = *(_QWORD *)(v0 + 2968);
  v4 = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 208) = v2;
  v5 = *(_QWORD *)(v0 + 2384);
  *(_QWORD *)(v1 - 256) = v3;
  *(_QWORD *)(v1 - 248) = v5;
  *(_QWORD *)(v1 - 240) = *(_QWORD *)(v0 + 2376);
  *(_QWORD *)(v1 - 232) = v4;
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(v0 + 2368);
  STACK[0x620] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675F00);
}

uint64_t sub_23FC5A140(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC5A14C()
{
  return sub_23FD72BE4();
}

uint64_t sub_23FC5A154()
{
  return swift_deallocObject();
}

uint64_t sub_23FC5A164()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[309] + 96))(v0[310], v0[308]);
}

uint64_t sub_23FC5A190()
{
  return sub_23FD721DC();
}

uint64_t sub_23FC5A19C()
{
  return swift_task_switch();
}

void sub_23FC5A1AC(uint64_t a1)
{
  unint64_t v1;

  sub_23FC1FE30(a1, v1);
}

void sub_23FC5A1B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 - 144) = v0[395];
  v2 = v0[391];
  *(_QWORD *)(v1 - 216) = v0[392];
  *(_QWORD *)(v1 - 208) = v2;
  v3 = v0[370];
  v4 = v0[369];
  *(_QWORD *)(v1 - 248) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2304);
  *(_QWORD *)(v1 - 240) = v3;
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2296);
  *(_QWORD *)(v1 - 224) = v4;
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675E70);
}

void sub_23FC5A230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[395];
  v3 = v0[392];
  *(_QWORD *)(v1 - 168) = v0[391];
  *(_QWORD *)(v1 - 160) = v2;
  v4 = v0[370];
  *(_QWORD *)(v1 - 184) = v0[369];
  *(_QWORD *)(v1 - 176) = v3;
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2304);
  *(_QWORD *)(v1 - 200) = v4;
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2296);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675E70);
}

uint64_t sub_23FC5A2A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5A2B0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 200) + 8))(v0, *(_QWORD *)(v1 - 184));
}

uint64_t sub_23FC5A2C4()
{
  return sub_23FD721D0();
}

uint64_t sub_23FC5A2D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104))(v2, v0, v3);
}

uint64_t sub_23FC5A2EC()
{
  return sub_23FBFEFF4();
}

uint64_t sub_23FC5A2F4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(a1, a2, v2, v3);
}

uint64_t sub_23FC5A300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v0, v3);
}

uint64_t sub_23FC5A314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FC5A320()
{
  uint64_t (**v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(v0, v1, v3, v2);
}

uint64_t sub_23FC5A334()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(v1, v2, v0, v3);
}

uint64_t sub_23FC5A348(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

unint64_t sub_23FC5A350()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FC18940(v0, v1, *(_QWORD *)(v2 + 3016));
}

void sub_23FC5A378()
{
  uint64_t v0;

  STACK[0x650] = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2920);
  *(_QWORD *)(v0 - 200) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2400);
  *(_QWORD *)(v0 - 184) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2392);
  *(_QWORD *)(v0 - 224) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2192);
  JUMPOUT(0x242675EB8);
}

uint64_t sub_23FC5A3E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5A410(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 696) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 616);
}

void sub_23FC5A434(id a1)
{

}

uint64_t sub_23FC5A450(uint64_t a1, uint64_t a2)
{
  return sub_23FCB5ACC(a1, a2);
}

uint64_t sub_23FC5A46C(uint64_t a1, uint64_t a2)
{
  return sub_23FCD3EA4(a1, a2);
}

uint64_t sub_23FC5A488()
{
  return sub_23FD74E58();
}

uint64_t sub_23FC5A4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 144))(v0, v1);
}

uint64_t sub_23FC5A4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 160))(v0, v1);
}

void sub_23FC5A4C4(uint64_t a1)
{
  uint64_t *v1;

  sub_23FC584B0(a1, v1);
}

uint64_t sub_23FC5A4CC(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5A4D8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(a1, a2, v3, v2);
}

uint64_t sub_23FC5A4E4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0x5E8]) = *(_DWORD *)(v1 + 4248);
  v3 = *(_QWORD *)(v1 + 2968);
  v4 = *(_QWORD *)(v1 + 2960);
  *(_QWORD *)(v2 - 216) = *(_QWORD *)(v1 + 2952);
  v5 = *(_QWORD **)(v1 + 2848);
  v6 = *(_QWORD *)(v1 + 2648);
  *(_QWORD *)(v2 - 232) = v4;
  *(_QWORD *)(v2 - 224) = v6;
  v7 = *(_QWORD *)(v1 + 2632);
  *(_QWORD *)(v2 - 256) = v3;
  *(_QWORD *)(v2 - 248) = v7;
  *(_QWORD *)(v2 - 240) = *(_QWORD *)(v1 + 2624);
  STACK[0x5F8] = *(_QWORD *)(v1 + 2192);
  STACK[0x600] = v0;
  v8 = v5[3];
  v9 = v5[4];
  sub_23FBFDE40(v5, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
}

uint64_t sub_23FC5A560(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5A56C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5A574()
{
  return swift_task_dealloc();
}

void sub_23FC5A57C()
{
  sub_23FBFEFA0();
}

void sub_23FC5A584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3160);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3136);
  *(_QWORD *)(v0 - 224) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3128);
  *(_QWORD *)(v0 - 216) = v1;
  *(_QWORD *)(v0 - 144) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2480);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2472);
  *(_QWORD *)(v0 - 240) = v2;
  *(_QWORD *)(v0 - 232) = v3;
  *(_QWORD *)(v0 - 208) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2464);
}

uint64_t sub_23FC5A5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104))(v1, v3, v2);
}

uint64_t sub_23FC5A60C()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5A624()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5A63C()
{
  return swift_task_switch();
}

uint64_t sub_23FC5A648()
{
  return swift_bridgeObjectRelease();
}

void sub_23FC5A650()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_23FC5A660(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FC5806C(v2, a2);
}

uint64_t sub_23FC5A668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v4 + 2208) + a1, v2);
}

void sub_23FC5A68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3160);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3136);
  *(_QWORD *)(v0 - 184) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3128);
  *(_QWORD *)(v0 - 176) = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2480);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2472);
  *(_QWORD *)(v0 - 200) = v2;
  *(_QWORD *)(v0 - 192) = v4;
  *(_QWORD *)(v0 - 168) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2464);
  *(_QWORD *)(v0 - 160) = v3;
}

BOOL sub_23FC5A6F8()
{
  os_log_type_t v0;
  NSObject *v1;

  return os_log_type_enabled(v1, v0);
}

uint64_t sub_23FC5A704()
{
  return swift_allocError();
}

uint64_t sub_23FC5A710()
{
  return sub_23FD72BCC();
}

uint64_t sub_23FC5A734@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC5A740()
{
  uint64_t v0;

  return sub_23FBFDE28(*(__int128 **)(v0 + 2856), *(_QWORD *)(v0 + 2848));
}

uint64_t sub_23FC5A774()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[314] + 32))(v0[315], v0[317] + *(int *)(v0[352] + 48), v0[313]);
}

uint64_t sub_23FC5A798()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23FC5A7A8()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2[444];
  *(_QWORD *)(v3 - 224) = v2[445];
  *(_QWORD *)(v3 - 216) = v4;
  *(_QWORD *)(v3 - 208) = v2[440];
  v5 = v2[378];
  STACK[0x688] = v2[372];
  v6 = v2[359];
  *(_QWORD *)(v3 - 248) = v2[360];
  *(_QWORD *)(v3 - 240) = v6;
  *(_QWORD *)(v3 - 232) = v2[358];
  *(_QWORD *)(v3 - 256) = v2[273];
  return sub_23FC18940(v0, v1, v5);
}

uint64_t sub_23FC5A808()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 160))();
}

uint64_t sub_23FC5A810()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 144))();
}

__n128 sub_23FC5A828(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x560];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x560];
  return result;
}

unint64_t sub_23FC5A838()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = v2[444];
  *(_QWORD *)(v3 - 184) = v2[445];
  *(_QWORD *)(v3 - 176) = v4;
  *(_QWORD *)(v3 - 168) = v2[440];
  v5 = v2[378];
  v6 = v2[372];
  v7 = v2[359];
  *(_QWORD *)(v3 - 208) = v2[360];
  *(_QWORD *)(v3 - 200) = v7;
  *(_QWORD *)(v3 - 192) = v2[358];
  v8 = v2[273];
  *(_QWORD *)(v3 - 224) = v6;
  *(_QWORD *)(v3 - 216) = v8;
  return sub_23FC18940(v0, v1, v5);
}

void sub_23FC5A894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, 1, 1, v0);
  sub_23FCC4B78(v2, v1);
}

BOOL sub_23FC5A8C0(os_log_t oslog, os_log_type_t type)
{
  return os_log_type_enabled(oslog, type);
}

uint64_t sub_23FC5A8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

unint64_t sub_23FC5A8D0@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;

  return sub_23FC18940(v1, v2, a1);
}

uint64_t sub_23FC5A8DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5A8E8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 160) = v0;
  *(_QWORD *)(v2 - 144) = v1;
  return sub_23FBFEFF4();
}

uint64_t sub_23FC5A8F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5A908()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = v1;
  v0[1] = v2;
  return sub_23FD720D4();
}

uint64_t sub_23FC5A928()
{
  return swift_release();
}

uint64_t sub_23FC5A930()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD **)(v0 - 136);
  v2 = v1[486];
  *(_QWORD *)(v0 - 184) = v1[484];
  *(_QWORD *)(v0 - 176) = v2;
  *(_QWORD *)(v0 - 168) = v1[347];
  v3 = v1[341];
  v4 = v1[337];
  v5 = v1[332];
  v6 = v1[276];
  *(_QWORD *)(v0 - 152) = v1[335];
  *(_QWORD *)(v0 - 144) = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x5F0])(v3, v4, v5);
}

uint64_t sub_23FC5A988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 144), *(_QWORD *)(v1 - 160));
}

uint64_t sub_23FC5A998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v3, v0, v1);
}

uint64_t sub_23FC5A9B4()
{
  return sub_23FD721DC();
}

uint64_t sub_23FC5A9BC()
{
  return swift_release();
}

uint64_t sub_23FC5A9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 2528);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v3, a2, 1, *(_QWORD *)(v2 + 2816));
  return v3;
}

uint64_t sub_23FC5AA0C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FC5AA14()
{
  return swift_dynamicCast();
}

uint64_t sub_23FC5AA24(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC5AA30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2488);
}

uint64_t sub_23FC5AA54()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 240) + 8))(v0, *(_QWORD *)(v1 - 224));
}

uint64_t sub_23FC5AA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, unint64_t))(v0 + 104))(v1, *(unsigned int *)(v2 - 256), STACK[0x620]);
}

uint64_t sub_23FC5AA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, unint64_t))(v0 + 104))(v1, *(unsigned int *)(v2 - 216), STACK[0x650]);
}

uint64_t sub_23FC5AA90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = *(_QWORD *)(v1 + 16);
  v2[1] = v3;
  return v0;
}

uint64_t sub_23FC5AAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FC5AAC8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3712);
}

uint64_t sub_23FC5AADC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC5AAE8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5AAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return sub_23FC08C28(v2, v1, v0, v3);
}

uint64_t sub_23FC5AB04()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5AB0C()
{
  return sub_23FBFEFF4();
}

uint64_t sub_23FC5AB14(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC08C28(a1, a2, a3, a4);
}

uint64_t sub_23FC5AB1C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 168) = v0;
  v4 = v2[375];
  v5 = v2[373];
  *(_QWORD *)(v3 - 184) = v2[486];
  *(_QWORD *)(v3 - 176) = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 - 216))(v4, v1, *(_QWORD *)(*(_QWORD *)(v3 - 136) + 2976));
}

uint64_t sub_23FC5AB6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 208) = v0;
  v4 = v2[375];
  v5 = v2[373];
  *(_QWORD *)(v3 - 224) = v2[486];
  *(_QWORD *)(v3 - 216) = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 - 256))(v4, v1, *(_QWORD *)(*(_QWORD *)(v3 - 136) + 2976));
}

uint64_t sub_23FC5ABBC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;
  _QWORD *v4;

  v4[188] = 0;
  STACK[0x688] = a1;
  v4[181] = a1;
  *v3 = 514;
  v4[192] = v3 + 1;
  v4[161] = v2;
  v4[162] = v1;
  return sub_23FC08C28((uint64_t (**)(uint64_t, uint64_t, uint64_t))STACK[0x3C0], STACK[0x3A8], STACK[0x3B0], STACK[0x3B8]);
}

uint64_t sub_23FC5AC0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_23FBFDE40(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_23FC5AC34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5AC3C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5AC44()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5AC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v0);
  sub_23FCC4B78(v1, v2);
}

uint64_t sub_23FC5AC78()
{
  return sub_23FD721B8();
}

uint64_t sub_23FC5AC94(uint64_t result)
{
  *(_BYTE *)(result + 16) = 64;
  return result;
}

void sub_23FC5ACA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC0F3AC(a1, a2, v2);
}

uint64_t sub_23FC5ACA8()
{
  return sub_23FD74E4C();
}

uint64_t sub_23FC5ACC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v0, v1, v2);
}

uint64_t sub_23FC5ACFC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(v0, 0);
}

uint64_t sub_23FC5AD08()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[373] + 32))(v0[378], v0[376], v0[372]);
}

uint64_t sub_23FC5AD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FCC4B38(v0, 0, v1, v2);
}

uint64_t sub_23FC5AD4C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 160) = a1;
  return a1(v1, v2);
}

uint64_t sub_23FC5AD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104))(v1, v2, v3);
}

uint64_t sub_23FC5AD78()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5AD94(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

void sub_23FC5ADBC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1032) = 0;
  *(_QWORD *)(v0 + 1040) = 0xF000000000000000;
}

uint64_t sub_23FC5ADFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[145];
  *(_QWORD *)(v2 - 120) = v1[142];
  *(_QWORD *)(v2 - 112) = v0;
  v4 = v1[123];
  *(_QWORD *)(v2 - 136) = v3;
  *(_QWORD *)(v2 - 128) = v4;
  *(_QWORD *)(v2 - 144) = v1[49];
  return swift_release();
}

uint64_t sub_23FC5AE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 256) = v0;
  v2 = 1 << *(_BYTE *)(*(_QWORD *)(v1 - 168) + 32);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v1 - 168) + 64;
  *(_QWORD *)(v1 - 224) = (unint64_t)(v2 + 63) >> 6;
  return swift_retain();
}

uint64_t sub_23FC5AE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FC5AEA0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t sub_23FC5AEA8@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

__n128 sub_23FC5AEB0(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x540];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x540];
  return result;
}

uint64_t sub_23FC5AEC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5AED8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

void sub_23FC5AEE4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 160) = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 3520);
}

uint64_t sub_23FC5AF30@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return a1();
}

uint64_t sub_23FC5AF38()
{
  uint64_t v0;
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v1);
  return sub_23FD73FF4();
}

void sub_23FC5AF5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2400);
  *(_QWORD *)(v1 - 200) = v0;
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2392);
  STACK[0x648] = *(_QWORD *)(*(_QWORD *)(v1 - 136) + 2192);
  JUMPOUT(0x242675EB8);
}

uint64_t sub_23FC5AFAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FC5AFB8()
{
  uint64_t (**v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(v0, v1, v3, v2);
}

uint64_t sub_23FC5AFCC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5AFD4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FC5AFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104))(v1, v2, v3);
}

uint64_t sub_23FC5B004()
{
  return sub_23FD721F4();
}

uint64_t sub_23FC5B044(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC08C28(a1, a2, a3, a4);
}

uint64_t sub_23FC5B04C()
{
  return swift_release();
}

uint64_t sub_23FC5B054()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5B06C()
{
  return sub_23FD75380();
}

uint64_t sub_23FC5B07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v1, v2, v3);
}

uint64_t sub_23FC5B094()
{
  return sub_23FD73C94();
}

uint64_t sub_23FC5B0AC()
{
  return sub_23FD73C94();
}

__n128 sub_23FC5B0C4(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x540];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x540];
  return result;
}

uint64_t sub_23FC5B0D0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC5B0DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a1 + 8))(v1, *(_QWORD *)(v2 - 144));
}

uint64_t sub_23FC5B0EC()
{
  return sub_23FD72284();
}

void sub_23FC5B0F4()
{
  sub_23FBFEFA0();
}

uint64_t sub_23FC5B0FC()
{
  uint64_t v0;
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v1);
  return v0;
}

uint64_t sub_23FC5B124()
{
  uint64_t v0;

  return sub_23FC08C28((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 - 104), v0 - 128, v0 - 120, v0 - 112);
}

uint64_t sub_23FC5B13C@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return a1();
}

uint64_t sub_23FC5B144()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FC5B16C()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FC5B194()
{
  return sub_23FD74060();
}

uint64_t sub_23FC5B1AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FC5B1B4(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5B1C4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FC5B1CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[371];
  v3 = v0[370];
  *(_QWORD *)(v1 - 176) = v0[369];
  result = v0[356];
  v5 = v0[331];
  *(_QWORD *)(v1 - 192) = v3;
  *(_QWORD *)(v1 - 184) = v5;
  v6 = v0[329];
  *(_QWORD *)(v1 - 216) = v2;
  *(_QWORD *)(v1 - 208) = v6;
  *(_QWORD *)(v1 - 200) = v0[328];
  return result;
}

uint64_t sub_23FC5B210@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 184));
}

uint64_t sub_23FC5B224()
{
  return sub_23FD72284();
}

uint64_t sub_23FC5B24C()
{
  return sub_23FCA2124();
}

uint64_t sub_23FC5B274(uint64_t a1)
{
  uint64_t v1;

  return sub_23FCBACF4(a1, (_QWORD *)(v1 - 104));
}

void sub_23FC5B280(uint64_t a1)
{
  uint64_t *v1;

  sub_23FC584B0(a1, v1);
}

uint64_t sub_23FC5B288()
{
  return sub_23FD73238();
}

uint64_t sub_23FC5B294()
{
  return type metadata accessor for XPCClientAvatar();
}

void sub_23FC5B2A0()
{

}

uint64_t sub_23FC5B2A8()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5B2B4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC577B0(v0, v1);
}

void sub_23FC5B2C0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_23FC5B2CC()
{
  return sub_23FD72284();
}

uint64_t sub_23FC5B2D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5B2DC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC5B2E8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FC5B2F4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5B30C()
{
  return swift_release();
}

void sub_23FC5B314(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  a1[1] = v4;
  *a1 = v2;
  v6[510] = *(_QWORD *)(v7 - 192);
  v6[509] = *(_QWORD *)(v7 - 184);
  v6[508] = v5;
  v6[507] = v1;
  v6[506] = v3;
  v6[505] = *(_QWORD *)(v7 - 160);
  v6[511] = *(_QWORD *)(v6[276] + v6[493]);
}

uint64_t sub_23FC5B354(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FC5B378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
  return *(_QWORD *)(v2 + 3608);
}

uint64_t sub_23FC5B3A8()
{
  return sub_23FD74F54();
}

uint64_t sub_23FC5B3B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FC5B3B8()
{
  return sub_23FD73D90();
}

uint64_t sub_23FC5B3CC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 232) + 8))(v0, *(_QWORD *)(v1 - 216));
}

uint64_t sub_23FC5B3E0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 232) + 8))(v0, *(_QWORD *)(v1 - 216));
}

uint64_t sub_23FC5B3F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 224));
}

uint64_t sub_23FC5B3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23FC5B410()
{
  return ((uint64_t (*)(void))STACK[0x620])();
}

uint64_t sub_23FC5B418@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23FC855F0(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_23FC5B42C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_23FC5B440()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 8))(v0, *(_QWORD *)(v1 - 176));
}

uint64_t sub_23FC5B454()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 8))(v0, *(_QWORD *)(v1 - 176));
}

uint64_t sub_23FC5B474()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5B488()
{
  uint64_t v0;

  return sub_23FC50264(*(_QWORD *)(v0 + 3816));
}

uint64_t sub_23FC5B49C()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5B4B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 144));
}

uint64_t sub_23FC5B4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v0, LODWORD(STACK[0x650]), v2);
}

uint64_t sub_23FC5B4CC()
{
  return sub_23FD721D0();
}

uint64_t sub_23FC5B4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v0, v2, v1);
}

uint64_t sub_23FC5B4F4()
{
  return sub_23FD74E4C();
}

uint64_t sub_23FC5B504(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5B510(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = a1;
  return sub_23FD74F6C();
}

uint64_t sub_23FC5B518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FC5B52C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(a1 + 8))(*(_QWORD *)(v1 - 144));
}

uint64_t sub_23FC5B538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FC5B544()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5B550()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 160));
}

uint64_t sub_23FC5B564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FC50B1C(v2, v0, v1);
}

uint64_t sub_23FC5B578()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5B580()
{
  return sub_23FCB413C();
}

uint64_t sub_23FC5B594(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23FC5B5A4()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return sub_23FC08C28(v1, v0, v3, v2);
}

uint64_t sub_23FC5B5B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return sub_23FD2F9CC(v1, v3, v0, v2);
}

void sub_23FC5B5CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0EDD8(v4, v3, a3);
}

void sub_23FC5B5D8()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 2) = 1;
  JUMPOUT(0x242675F18);
}

uint64_t sub_23FC5B5EC()
{
  return swift_bridgeObjectRelease();
}

void sub_23FC5B600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_23FC0EE04(v1, a1 + v2, v3);
}

uint64_t sub_23FC5B614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  return v3(a1 + v4, v1, v2);
}

uint64_t sub_23FC5B628()
{
  return sub_23FD74048();
}

void sub_23FC5B63C()
{
  _WORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *v0 = 258;
  v3[196] = v0 + 1;
  v3[155] = v1;
  v3[156] = v2;
}

void sub_23FC5B654()
{
  unint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + ((v0 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v0;
  sub_23FC0F380(v3, *(_QWORD *)(v2 + 48) + v5 * v0, v1);
}

uint64_t sub_23FC5B6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a2 + 3992) = a1;
  *(_QWORD *)(*(_QWORD *)(v4 - 136) + 4000) = *(_QWORD *)(v3 + 16);
  return v2;
}

uint64_t sub_23FC5B714()
{
  return swift_release();
}

uint64_t sub_23FC5B71C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5B728(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return sub_23FD74F54();
}

void sub_23FC5B760(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC0F3AC(a1, a2, v2);
}

uint64_t sub_23FC5B768()
{
  return swift_release();
}

unint64_t sub_23FC5B770(unint64_t result)
{
  _WORD *v1;
  _QWORD *v2;

  v2[252] = 0;
  STACK[0x5B0] = result;
  v2[253] = result;
  STACK[0x5B8] = (unint64_t)v1;
  *v1 = 514;
  v2[251] = v1 + 1;
  return result;
}

uint64_t sub_23FC5B790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5B7A0()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FC5B7CC()
{
  uint64_t v0;

  return sub_23FCA30C4(v0);
}

void sub_23FC5B7D4()
{
  sub_23FBFEFA0();
}

uint64_t sub_23FC5B7DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x5A0] = v1[322];
  v3 = v1[276];
  *(_QWORD *)(v2 - 248) = v3;
  STACK[0x598] = v3 + v0;
  STACK[0x5F0] = v1[313];
  return sub_23FD72BCC();
}

uint64_t sub_23FC5B80C()
{
  return sub_23FD723EC();
}

uint64_t sub_23FC5B814()
{
  return sub_23FD72284();
}

__n128 sub_23FC5B81C(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x570];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x570];
  return result;
}

uint64_t sub_23FC5B82C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3232);
}

void sub_23FC5B844(uint64_t a1)
{
  uint64_t v1;

  sub_23FC584E0(a1, v1);
}

void sub_23FC5B84C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FC0F3AC(*(_QWORD *)(v1 + 3232), *(_QWORD *)(v1 + 3200), v0);
}

uint64_t sub_23FC5B864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (**v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  *(_QWORD *)(v3 + 1160) = a1;
  *(_QWORD *)(v3 + 1168) = v1;
  return sub_23FC08C28(v2, STACK[0x388], STACK[0x390], STACK[0x398]);
}

BOOL sub_23FC5B890@<W0>(os_log_type_t a1@<W8>)
{
  uint64_t v1;

  return os_log_type_enabled(*(os_log_t *)(v1 - 160), a1);
}

uint64_t sub_23FC5B89C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return sub_23FD74F6C();
}

void sub_23FC5B8A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[451];
  v3 = v0[441];
  *(_QWORD *)(v1 - 184) = v0[462];
  *(_QWORD *)(v1 - 176) = v3;
  *(_QWORD *)(v1 - 168) = v0[440];
  *(_QWORD *)(v1 - 160) = v2;
}

uint64_t sub_23FC5B8D8()
{
  return sub_23FD73FC4();
}

uint64_t sub_23FC5B8F0()
{
  return swift_release();
}

uint64_t sub_23FC5B8F8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FCA1864(v1, v0);
}

uint64_t sub_23FC5B904()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v0[27];
  v4 = v0[28];
  v6 = v0[26];
  *(_QWORD *)(v1 + 16) = v3;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v2, v4, v6);
}

void sub_23FC5B930()
{
  sub_23FBFEFA0();
}

uint64_t sub_23FC5B938(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC5B944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FC5B950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FC5B95C()
{
  return sub_23FD72284();
}

uint64_t sub_23FC5B968()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FC5B980()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5B988()
{
  return sub_23FD72284();
}

uint64_t sub_23FC5B990()
{
  return sub_23FD73214();
}

uint64_t sub_23FC5B9BC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC5B9C8@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23FC5B9D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23FBFDE40(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_23FC5B9F8()
{
  return sub_23FD72BCC();
}

uint64_t sub_23FC5BA00()
{
  return sub_23FD720A4();
}

uint64_t sub_23FC5BA10()
{
  uint64_t v0;
  uint64_t *v1;

  return sub_23FCC3B74(v0, *v1);
}

uint64_t sub_23FC5BA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

uint64_t sub_23FC5BA30()
{
  return ((uint64_t (*)(void))STACK[0x650])();
}

uint64_t sub_23FC5BA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FC5BA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 32) = v1;
  return *(_QWORD *)(v2 - 144);
}

uint64_t sub_23FC5BA54()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 208) + 8))(*(_QWORD *)(v0 - 216), *(_QWORD *)(v0 - 192));
}

uint64_t sub_23FC5BA64()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5BA6C()
{
  return sub_23FD72224();
}

void sub_23FC5BA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  LODWORD(STACK[0x650]) = *(_DWORD *)(v0 + 4236);
  v2 = *(_QWORD *)(v0 + 2960);
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(v0 + 2968);
  *(_QWORD *)(v1 - 200) = v2;
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 - 224) = *(_QWORD *)(v0 + 2944);
}

uint64_t sub_23FC5BAC4()
{
  return sub_23FD721F4();
}

uint64_t sub_23FC5BAD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 176) + 8))(*(_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 168));
}

BOOL sub_23FC5BAE4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC5BAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

unint64_t sub_23FC5BB04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_23FC18940(v1, *(_QWORD *)(v2 + 16), v0);
}

uint64_t sub_23FC5BB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 1552) = a1;
  return sub_23FCA2130(*(_QWORD *)(v1 + v2));
}

void sub_23FC5BB24()
{
  sub_23FD30814(0);
}

uint64_t sub_23FC5BB34()
{
  return swift_release();
}

uint64_t sub_23FC5BB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FC5BB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t sub_23FC5BB70(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC5BB8C()
{
  return ((uint64_t (*)(void))STACK[0x5F0])();
}

uint64_t sub_23FC5BB94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 3968) = a1;
  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 3808);
}

uint64_t sub_23FC5BBB0()
{
  return sub_23FD72200();
}

uint64_t sub_23FC5BBC0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return sub_23FD74F54();
}

void sub_23FC5BBC8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC0EE04(v2, a1 + v3, v1);
}

uint64_t sub_23FC5BBD8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5BBE8()
{
  return sub_23FD72BB4();
}

uint64_t sub_23FC5BBF8()
{
  return sub_23FD732BC();
}

uint64_t sub_23FC5BC14(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC5BC30@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_23FC5BC70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC0F3AC(v1, *(_QWORD *)(v2 + 2856), v0);
}

uint64_t sub_23FC5BC80()
{
  return sub_23FD724C4();
}

uint64_t sub_23FC5BC88()
{
  return swift_endAccess();
}

uint64_t sub_23FC5BC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FC50B1C(v0, v2, v1);
}

uint64_t sub_23FC5BCA0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BCA8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v3, v0);
}

uint64_t sub_23FC5BCB8()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v1, v3);
}

uint64_t sub_23FC5BCC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = 0;
  *(_QWORD *)(v4 - 112) = a1;
  *(_QWORD *)(v4 - 176) = v3;
  *v3 = 514;
  *(_QWORD *)(v4 - 128) = v3 + 1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v1;
  return v4 - 104;
}

uint64_t sub_23FC5BCF8(uint64_t a1)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = 0;
  *(_QWORD *)(v4 - 112) = a1;
  *v1 = 258;
  *(_QWORD *)(v4 - 128) = v1 + 1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  return v4 - 104;
}

uint64_t sub_23FC5BD28(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23FC5BD38()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5BD44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5BD54()
{
  return sub_23FD73DB4();
}

void sub_23FC5BD64()
{
  uint8_t *v0;
  uint64_t v1;
  const char *v2;
  uint64_t v3;

  sub_23FCDDA9C(v0, 0x16u, *(NSObject **)(v3 - 144), (os_signpost_type_t)*(_DWORD *)(v3 - 168), v1, v2, *(const char **)(v3 - 200));
}

uint64_t sub_23FC5BD8C()
{
  return sub_23FD72BE4();
}

uint64_t sub_23FC5BD94()
{
  return sub_23FD73F7C();
}

BOOL sub_23FC5BDA4(os_log_t oslog, os_log_type_t type)
{
  return os_log_type_enabled(oslog, type);
}

uint64_t sub_23FC5BDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v4, 1, 1, a4);
}

uint64_t sub_23FC5BDBC()
{
  return sub_23FD7223C();
}

void sub_23FC5BDCC(uint64_t a1)
{
  uint64_t *v1;

  sub_23FC584B0(a1, v1);
}

void sub_23FC5BDD4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 2) = 0;
  JUMPOUT(0x242675F30);
}

uint64_t sub_23FC5BDE4()
{
  return sub_23FD73DCC();
}

uint64_t sub_23FC5BDF4(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5BE04(uint64_t result)
{
  _BYTE *v1;
  char v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 120) = 0;
  *(_QWORD *)(v3 - 112) = result;
  *v1 = v2;
  v1[1] = v2;
  *(_QWORD *)(v3 - 128) = v1 + 2;
  return result;
}

uint64_t sub_23FC5BE20()
{
  return _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
}

uint64_t sub_23FC5BE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t (**a35)(uint64_t, uint64_t, uint64_t))
{
  return sub_23FC08C28(a35, a32, a33, a34);
}

uint64_t sub_23FC5BE50()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = v0[300];
  *(_QWORD *)(v1 - 192) = v0[299];
  *(_QWORD *)(v1 - 224) = v0[274];
  return sub_23FD72110();
}

void sub_23FC5BE74()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = v0[371];
  *(_QWORD *)(v1 - 200) = v0[370];
  *(_QWORD *)(v1 - 184) = v0[369];
  STACK[0x648] = v0[368];
}

void sub_23FC5BEA0()
{
  uint64_t v0;

  STACK[0x650] = *(_QWORD *)(*(_QWORD *)(v0 - 136) + 2192);
  JUMPOUT(0x242675F00);
}

void sub_23FC5BEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 232) = v1;
  *(_QWORD *)(v4 - 224) = v2;
  *(_QWORD *)(v4 - 248) = v0;
  *(_QWORD *)(v4 - 240) = v3;
}

BOOL sub_23FC5BF54@<W0>(os_log_type_t a1@<W8>)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC5BF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(v2 - 136) + 3976) = *v3;
  *(_QWORD *)(*(_QWORD *)(v2 - 136) + 3984) = v3[1];
  return v1;
}

uint64_t sub_23FC5BF98(uint64_t a1)
{
  return sub_23FC54484(a1, 1);
}

uint64_t sub_23FC5BFA0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFA8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFB0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFB8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFC0()
{
  return swift_release();
}

uint64_t sub_23FC5BFC8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFD0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFD8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFE0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFE8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFF0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5BFF8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23FC5C00C(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5C018()
{
  return sub_23FD72BC0();
}

uint64_t sub_23FC5C058()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FC5C06C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C074(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t sub_23FC5C07C()
{
  return sub_23FD724C4();
}

uint64_t sub_23FC5C084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 4120) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
}

uint64_t sub_23FC5C098()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FC5C0C0(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC5C0CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FC5C0F8()
{
  return sub_23FD73DE4();
}

uint64_t sub_23FC5C100()
{
  return sub_23FD72BE4();
}

uint64_t sub_23FC5C108(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5C114()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C11C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23FC5C128(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  NSObject *v5;
  const char *v6;
  uint8_t *v7;

  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

uint64_t sub_23FC5C13C()
{
  return swift_task_alloc();
}

uint64_t sub_23FC5C150(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

void sub_23FC5C15C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

void sub_23FC5C164(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0EDD8(v3, v4, a3);
}

uint64_t sub_23FC5C170()
{
  return sub_23FD723E0();
}

uint64_t sub_23FC5C178@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23FC5C180()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5C188(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = *(_QWORD **)(v4 - 136);
  v5[186] = 0;
  v5[187] = result;
  *(_QWORD *)(v4 - 240) = v3;
  *v3 = 514;
  v5[185] = v3 + 1;
  v5[157] = v2;
  v5[158] = v1;
  return result;
}

uint64_t sub_23FC5C1B4(uint64_t result)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = *(_QWORD **)(v4 - 136);
  v5[229] = 0;
  v5[230] = result;
  *(_QWORD *)(v4 - 240) = v2;
  *v2 = 514;
  v5[228] = v2 + 1;
  v5[131] = v1;
  v5[132] = v3;
  return result;
}

uint64_t sub_23FC5C1E0(uint64_t a1)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[244] = 0;
  v4[240] = a1;
  *(_QWORD *)(v6 - 168) = v1;
  *v1 = 258;
  v4[250] = v1 + 1;
  v4[123] = v2;
  v4[124] = v3;
  return v5;
}

uint64_t sub_23FC5C20C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5C214(uint64_t a1)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = 0;
  *(_QWORD *)(v4 - 112) = a1;
  *(_QWORD *)(v4 - 176) = a1;
  *(_QWORD *)(v4 - 168) = v1;
  *v1 = 514;
  *(_QWORD *)(v4 - 128) = v1 + 1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  return v4 - 104;
}

uint64_t sub_23FC5C240()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2480);
}

uint64_t sub_23FC5C254(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC5C260()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = *(_QWORD *)(v1 - 104);
  return v0;
}

void sub_23FC5C278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = v0;
}

uint64_t sub_23FC5C2A0()
{
  return ((uint64_t (*)(void))STACK[0x618])();
}

void sub_23FC5C2A8()
{
  _WORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0;
  *v0 = 514;
}

uint64_t sub_23FC5C2B8(uint64_t result)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 208) = v2;
  *(_QWORD *)(v6 - 200) = result;
  v5[204] = v2;
  v5[202] = result;
  *(_QWORD *)(v6 - 192) = v1;
  *v1 = 514;
  v5[205] = v1 + 1;
  v5[151] = v3;
  v5[152] = v4;
  return result;
}

uint64_t sub_23FC5C2E0()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5C2E8(uint64_t result)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 208) = v3;
  *(_QWORD *)(v6 - 200) = result;
  v5[258] = v3;
  v5[254] = result;
  *(_QWORD *)(v6 - 192) = v1;
  *v1 = 514;
  v5[263] = v1 + 1;
  v5[115] = v2;
  v5[116] = v4;
  return result;
}

uint64_t sub_23FC5C310()
{
  uint64_t v0;
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1[392] + 32))(v1[395], v0, v1[391]);
}

uint64_t sub_23FC5C330()
{
  return sub_23FD72230();
}

uint64_t sub_23FC5C350()
{
  return sub_23FD72230();
}

unint64_t sub_23FC5C370(unint64_t result)
{
  uint64_t v1;
  _WORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3[225] = 0;
  STACK[0x620] = result;
  v3[226] = result;
  STACK[0x688] = (unint64_t)v2;
  *v2 = 514;
  v3[224] = v2 + 1;
  v3[133] = v1;
  v3[134] = v4;
  return result;
}

uint64_t sub_23FC5C398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(v2 - 136) + 3976) = *v3;
  *(_QWORD *)(*(_QWORD *)(v2 - 136) + 3984) = v3[1];
  return v1;
}

uint64_t sub_23FC5C3C0(uint64_t result)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 200) = v3;
  *(_QWORD *)(v6 - 192) = result;
  v5[231] = v3;
  v5[190] = result;
  *(_QWORD *)(v6 - 184) = v2;
  *v2 = 514;
  v5[223] = v2 + 1;
  v5[105] = v4;
  v5[106] = v1;
  return result;
}

void sub_23FC5C3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 184) = v2;
  *(_QWORD *)(v3 - 176) = v0;
  *(_QWORD *)(v3 - 192) = v1;
}

void sub_23FC5C400()
{
  _WORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0;
  *v0 = 514;
}

uint64_t sub_23FC5C410()
{
  return swift_release();
}

uint64_t sub_23FC5C418()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C420()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C428()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C430()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C438()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C440()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C448()
{
  return swift_release();
}

uint64_t sub_23FC5C450()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5C458()
{
  uint64_t v0;
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1[392] + 32))(v1[395], v0, v1[391]);
}

uint64_t sub_23FC5C490(uint64_t result)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[188] = 0;
  *(_QWORD *)(v5 - 224) = result;
  v4[181] = result;
  *(_QWORD *)(v5 - 208) = v1;
  *v1 = 514;
  v4[192] = v1 + 1;
  v4[161] = v3;
  v4[162] = v2;
  return result;
}

uint64_t sub_23FC5C4B8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  return sub_23FCBACF4(result, a2);
}

uint64_t sub_23FC5C4D0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2648);
}

uint64_t sub_23FC5C4F8()
{
  return swift_dynamicCast();
}

uint64_t sub_23FC5C500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_23FC18010(v3, v1, v2, v0, v4);
}

uint64_t sub_23FC5C520()
{
  return swift_endAccess();
}

uint64_t sub_23FC5C528()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23FC5C534(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FC5C558()
{
  return swift_release();
}

uint64_t sub_23FC5C560(uint64_t result)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = *(_QWORD **)(v4 - 136);
  v5[233] = 0;
  *(_QWORD *)(v4 - 240) = result;
  *(_QWORD *)(v4 - 232) = v2;
  v5[234] = result;
  *v2 = 514;
  v5[232] = v2 + 1;
  v5[127] = v1;
  v5[128] = v3;
  return result;
}

uint64_t sub_23FC5C588()
{
  return swift_task_alloc();
}

void sub_23FC5C590()
{
  uint8_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FCDDA9C(v0, 0x16u, *(NSObject **)(v2 - 144), (os_signpost_type_t)*(_DWORD *)(v2 - 208), v1, *(const char **)(v2 - 240), *(const char **)(v2 - 248));
}

void sub_23FC5C5B0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

uint64_t sub_23FC5C5B8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

uint64_t sub_23FC5C5C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5C5CC(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5C5D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5C5E8()
{
  return swift_endAccess();
}

uint64_t sub_23FC5C5F0()
{
  uint64_t v0;

  return sub_23FCA2130(v0);
}

__n128 sub_23FC5C5F8(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x550];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x550];
  return result;
}

__n128 sub_23FC5C608(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x530];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x530];
  return result;
}

void sub_23FC5C618(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC0F3AC(a1, a2, v2);
}

uint64_t sub_23FC5C620(char a1)
{
  uint64_t v1;

  return sub_23FCB422C(a1, v1);
}

void sub_23FC5C628(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC0F3AC(a1, a2, v2);
}

uint64_t sub_23FC5C630()
{
  return sub_23FD72BD8();
}

uint64_t sub_23FC5C638@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for FeedbackLearning.CandidateParameter(0);
}

uint64_t sub_23FC5C658(uint64_t result)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[246] = 0;
  v4[245] = result;
  *(_QWORD *)(v5 - 216) = v1;
  *v1 = 258;
  v4[259] = v1 + 1;
  v4[119] = v2;
  v4[120] = v3;
  return result;
}

BOOL sub_23FC5C680(uint64_t a1, os_log_type_t a2)
{
  NSObject *v2;

  return os_log_type_enabled(v2, a2);
}

void sub_23FC5C688()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 3840);

}

uint64_t sub_23FC5C6A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5C6B4(uint64_t result)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[246] = 0;
  v4[245] = result;
  *(_QWORD *)(v5 - 176) = v2;
  *v2 = 258;
  v4[259] = v2 + 1;
  v4[119] = v1;
  v4[120] = v3;
  return result;
}

uint64_t sub_23FC5C6DC()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x5B0] = *(_QWORD *)(v1 + 2888);
  return v0;
}

void sub_23FC5C6F4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_23FCB41A0(a1, a2, v3, v4, a3);
}

void sub_23FC5C700(void *a1@<X8>)
{

}

void sub_23FC5C71C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FC584B0(*(_QWORD *)(v1 + 3200), v0);
}

uint64_t sub_23FC5C728()
{
  return swift_release();
}

void sub_23FC5C730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = v0;
}

uint64_t sub_23FC5C754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

void sub_23FC5C764()
{
  uint64_t v0;

}

unint64_t sub_23FC5C770()
{
  return STACK[0x5B8];
}

void sub_23FC5C7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = *(_QWORD *)(v1 + 2376);
  *(_QWORD *)(v2 - 192) = v0;
}

void sub_23FC5C7E8()
{
  uint64_t v0;

}

void sub_23FC5C7F4()
{
  JUMPOUT(0x242675F48);
}

uint64_t sub_23FC5C800()
{
  return sub_23FCB3BE4();
}

uint64_t sub_23FC5C80C()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x648] = *(_QWORD *)(v0 + 2920);
  *(_QWORD *)(v1 - 216) = *(_QWORD *)(v0 + 2192);
  return sub_23FD73214();
}

uint64_t sub_23FC5C828()
{
  return sub_23FD75260();
}

uint64_t sub_23FC5C834()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 168) + 8))(*(_QWORD *)(v0 - 152), *(_QWORD *)(v0 - 160));
}

uint64_t sub_23FC5C844(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = *(_QWORD *)(v1 - 168);
  return result;
}

void sub_23FC5C850()
{
  JUMPOUT(0x242675EDCLL);
}

uint64_t sub_23FC5C85C()
{
  return sub_23FD73D6C();
}

void sub_23FC5C868(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x34u);
}

uint64_t sub_23FC5C874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t sub_23FC5C884()
{
  return sub_23FD73DE4();
}

unint64_t sub_23FC5C88C(unint64_t result)
{
  _WORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = *(_QWORD **)(v2 - 136);
  v3[261] = 0;
  STACK[0x5B0] = result;
  v3[262] = result;
  STACK[0x5B8] = (unint64_t)v1;
  *v1 = 1026;
  v3[260] = v1 + 1;
  return result;
}

void sub_23FC5C8B0()
{
  JUMPOUT(0x242675F00);
}

void sub_23FC5C8BC()
{
  JUMPOUT(0x242675E28);
}

void sub_23FC5C8C8()
{
  JUMPOUT(0x242675E40);
}

void sub_23FC5C8D4()
{
  uint64_t v0;

  STACK[0x420] = v0 + 2040;
  STACK[0x418] = v0 + 2048;
  STACK[0x410] = v0 + 2056;
}

uint64_t sub_23FC5C8F8()
{
  return sub_23FD720B0();
}

uint64_t sub_23FC5C904()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5C914(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2[186] = 0;
  *(_QWORD *)(v5 - 208) = result;
  *(_QWORD *)(v5 - 200) = v3;
  v2[187] = result;
  *v3 = 514;
  v2[185] = v3 + 1;
  v2[157] = v1;
  v2[158] = v4;
  return result;
}

void sub_23FC5C938()
{
  JUMPOUT(0x242675C60);
}

uint64_t sub_23FC5C954()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_23FBFDE40(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_23FC5C980()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C988()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5C990()
{
  return sub_23FD74048();
}

uint64_t sub_23FC5C9AC()
{
  return sub_23FD74048();
}

uint64_t sub_23FC5C9E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 168) = v1;
  return swift_retain();
}

uint64_t sub_23FC5C9EC()
{
  return sub_23FD72284();
}

uint64_t sub_23FC5C9F8()
{
  return sub_23FD723EC();
}

void sub_23FC5CA04(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC584B0(a2, v2);
}

uint64_t sub_23FC5CA10()
{
  return sub_23FD721D0();
}

uint64_t sub_23FC5CA2C()
{
  return sub_23FD721D0();
}

uint64_t sub_23FC5CA48()
{
  return sub_23FD72218();
}

void sub_23FC5CA54()
{
  JUMPOUT(0x242675FFCLL);
}

uint64_t sub_23FC5CA60()
{
  return sub_23FD720B0();
}

void sub_23FC5CA6C()
{
  JUMPOUT(0x242675FC0);
}

uint64_t sub_23FC5CA78()
{
  return sub_23FD73D6C();
}

uint64_t sub_23FC5CA84()
{
  return sub_23FCB3BE4();
}

void sub_23FC5CA90()
{
  JUMPOUT(0x242676008);
}

void sub_23FC5CA9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC0EE04(v3, a1 + v2, v1);
}

void sub_23FC5CAAC()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FC584B0(*(_QWORD *)(v1 + 2848), v0);
}

uint64_t sub_23FC5CAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a18 + 8))(a20, a19);
}

uint64_t sub_23FC5CAC8()
{
  return sub_23FD72BB4();
}

uint64_t sub_23FC5CAD8()
{
  return sub_23FD73D6C();
}

void sub_23FC5CAE0()
{
  JUMPOUT(0x2426774A8);
}

uint64_t sub_23FC5CAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23FC5CB00(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return sub_23FC50588(a1, a2);
}

uint64_t sub_23FC5CB0C()
{
  return sub_23FD73D6C();
}

uint64_t sub_23FC5CB18()
{
  return sub_23FD74E1C();
}

void sub_23FC5CB24()
{
  JUMPOUT(0x242676014);
}

void sub_23FC5CB30()
{
  JUMPOUT(0x242675EB8);
}

void sub_23FC5CB58()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 184) = *(_DWORD *)(v0 + 4256);
}

uint64_t sub_23FC5CB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(a1 + a2, v3, v2);
}

uint64_t sub_23FC5CB8C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC186F8(v0, v1);
}

uint64_t sub_23FC5CB98()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC577F4(v0, v1);
}

uint64_t sub_23FC5CBA4()
{
  return sub_23FD74D80();
}

uint64_t sub_23FC5CBB0()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5CBBC()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5CBC8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  STACK[0x5B8] = (unint64_t)a2;
  return a2(a1, v2);
}

uint64_t sub_23FC5CBD4(uint64_t a1)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))STACK[0x648])(a1, v1);
}

uint64_t sub_23FC5CBE0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23FC577F4(v1, v0);
}

void sub_23FC5CBEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
}

uint64_t sub_23FC5CC10(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC50AD4(a1, 0, v1);
}

void sub_23FC5CC1C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FC5806C(v2, a2);
}

uint64_t sub_23FC5CC24()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

uint64_t sub_23FC5CC30()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1, 0);
}

uint64_t sub_23FC5CC3C()
{
  return sub_23FD73D60();
}

uint64_t sub_23FC5CC48()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(v0, 0);
}

uint64_t sub_23FC5CC54()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC5CC6C()
{
  return sub_23FD74C48();
}

uint64_t sub_23FC5CC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23FC5CC88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23FCC3B30(a1, a2, *(_QWORD *)(v2 + 1552));
}

uint64_t sub_23FC5CC94()
{
  return sub_23FD72BA8();
}

void sub_23FC5CCA4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FC0F3AC(*(_QWORD *)(v1 + 3696), *(_QWORD *)(v1 + 3664), v0);
}

uint64_t sub_23FC5CCC0()
{
  return sub_23FC60F04();
}

uint64_t sub_23FC5CCCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  STACK[0x5F0] = (unint64_t)v4;
  return v4(v0, v1, v2);
}

uint64_t sub_23FC5CCE8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5CCF4()
{
  return sub_23FD73214();
}

void sub_23FC5CD00()
{
  JUMPOUT(0x242676020);
}

uint64_t sub_23FC5CD0C()
{
  return sub_23FD72284();
}

void sub_23FC5CD18(uint64_t a1)
{
  unint64_t v1;

  sub_23FC1FE30(a1, v1);
}

uint64_t sub_23FC5CD24@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, unint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(unsigned int *)(v2 - 248), STACK[0x688]);
}

unint64_t sub_23FC5CD30(unint64_t result)
{
  _WORD *v1;
  _QWORD *v2;

  v2[269] = 0;
  STACK[0x5B8] = result;
  v2[270] = result;
  STACK[0x5C0] = (unint64_t)v1;
  *v1 = 770;
  v2[268] = v1 + 1;
  return result;
}

uint64_t sub_23FC5CD50()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5CD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 232) = v0;
  *(_QWORD *)(v3 - 224) = v2;
  *(_QWORD *)(v3 - 216) = v1;
}

uint64_t sub_23FC5CD90()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 240) + 104))(v0, *(unsigned int *)(v1 - 224), *(_QWORD *)(v1 - 232));
}

uint64_t sub_23FC5CDA8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5CDB0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5CDB8()
{
  return swift_release();
}

uint64_t sub_23FC5CDC0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5CDC8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2264);
}

uint64_t sub_23FC5CDD8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5CDE0()
{
  return swift_release();
}

uint64_t sub_23FC5CDE8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5CDF0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5CDF8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(STACK[0x650] + 104))(v0, *(unsigned int *)(v1 - 208), *(_QWORD *)(v1 - 224));
}

uint64_t sub_23FC5CE10()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(STACK[0x650] + 104))(v0, *(unsigned int *)(v1 - 200), *(_QWORD *)(v1 - 224));
}

void sub_23FC5CE28()
{
  _WORD *v0;

  *v0 = 770;
}

uint64_t sub_23FC5CE34(uint64_t result)
{
  *(_QWORD *)(result + 16) = STACK[0x568];
  return result;
}

uint64_t sub_23FC5CE40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 168) = v1;
  return swift_retain();
}

void sub_23FC5CE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 2384);
  *(_QWORD *)(v2 - 216) = v0;
  *(_QWORD *)(v2 - 208) = v3;
}

void sub_23FC5CE68()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0[395];
  *(_QWORD *)(v1 - 176) = v0[392];
  *(_QWORD *)(v1 - 168) = v0[391];
}

uint64_t sub_23FC5CE88()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, _QWORD, unint64_t))(STACK[0x5E8] + 104))(v0, LODWORD(STACK[0x620]), STACK[0x5F0]);
}

uint64_t sub_23FC5CED4(uint64_t result)
{
  char v1;
  _BYTE *v2;
  _QWORD *v3;
  uint64_t v4;

  v3[215] = 0;
  *(_QWORD *)(v4 - 256) = result;
  v3[211] = result;
  *v2 = v1;
  v2[1] = v1;
  v3[219] = v2 + 2;
  return result;
}

uint64_t sub_23FC5CEF4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 208) + 104))(v0, *(unsigned int *)(v1 - 184), *(_QWORD *)(v1 - 192));
}

void sub_23FC5CF0C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 2792);
  *(_QWORD *)(v2 - 216) = *(_QWORD *)(v1 + 2760);
  *(_QWORD *)(v2 - 208) = v3;

}

uint64_t sub_23FC5CF24()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 984);
}

uint64_t sub_23FC5CF44()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 200) + 104))(v0, *(unsigned int *)(v1 - 184), *(_QWORD *)(v1 - 192));
}

uint64_t sub_23FC5CF5C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23FC5CF8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 1192) = a1;
  *(_QWORD *)(v1 + 1200) = *(_QWORD *)(v2 - 144);
  return STACK[0x380];
}

void sub_23FC5CFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 3528);
  *(_QWORD *)(v2 - 224) = v0;
  *(_QWORD *)(v2 - 216) = v3;
  *(_QWORD *)(v2 - 208) = *(_QWORD *)(v1 + 3520);
}

uint64_t sub_23FC5CFCC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5CFE4()
{
  return swift_bridgeObjectRelease();
}

void sub_23FC5CFFC()
{
  uint64_t v0;

  sub_23FC9B894(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t sub_23FC5D020()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 4032) + 16;
}

void sub_23FC5D030()
{
  uint64_t v0;

}

uint64_t sub_23FC5D038()
{
  return swift_release();
}

uint64_t sub_23FC5D040()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D048()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D050()
{
  return swift_task_dealloc();
}

void sub_23FC5D058()
{
  uint64_t v0;

  STACK[0x638] = v0 + 776;
  STACK[0x3C8] = v0 + 800;
  STACK[0x448] = v0 + 824;
}

void sub_23FC5D098()
{
  uint64_t v0;

  STACK[0x5A8] = *(_QWORD *)(v0 + 2912);
}

uint64_t sub_23FC5D0AC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 256) + 104))(v0, *(unsigned int *)(v1 - 224), *(_QWORD *)(v1 - 240));
}

uint64_t sub_23FC5D0C4()
{
  return swift_release();
}

uint64_t sub_23FC5D0D8()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D0F0()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D108()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D120()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D138()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D150()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D168()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D180()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D1A8()
{
  return sub_23FD72B60();
}

uint64_t sub_23FC5D1B0(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5D1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23FC543D0(v2, v3, a1, a2);
}

uint64_t sub_23FC5D1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23FCC4B38(v2, 0, a1, a2);
}

uint64_t sub_23FC5D1F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

uint64_t sub_23FC5D208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23FC543D0(v2, v3, a1, a2);
}

uint64_t sub_23FC5D220()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 208);
}

uint64_t sub_23FC5D240(uint64_t result)
{
  *(_QWORD *)(result + 16) = STACK[0x558];
  return result;
}

uint64_t sub_23FC5D26C(uint64_t a1)
{
  return sub_23FC17EE0(a1);
}

void sub_23FC5D294()
{
  _QWORD *v0;
  uint64_t v1;

  STACK[0x3D8] = v0[330];
  STACK[0x3E0] = v0[328];
  *(_QWORD *)(v1 - 256) = v0[326];
}

uint64_t sub_23FC5D2C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FC5D2E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_23FC5D308()
{
  sub_23FC9B83C();
}

void sub_23FC5D320()
{
  sub_23FC9B868();
}

uint64_t sub_23FC5D338()
{
  return swift_release();
}

void sub_23FC5D340(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  sub_23FC9B83C();
}

uint64_t sub_23FC5D358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))STACK[0x650])(v0, v1, *(_QWORD *)(v2 - 184));
}

uint64_t sub_23FC5D370(uint64_t result)
{
  *(_QWORD *)(result + 16) = STACK[0x550];
  return result;
}

void sub_23FC5D37C(char a1@<W8>)
{
  _QWORD *v1;

  *v1 = -1 << a1;
}

uint64_t sub_23FC5D38C(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC5D398(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23FC5D3A4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23FC5D3B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC5D3C0(uint64_t result)
{
  *(_QWORD *)(result + 16) = STACK[0x540];
  return result;
}

uint64_t sub_23FC5D3CC()
{
  return ((uint64_t (*)(void))STACK[0x5B8])();
}

uint64_t sub_23FC5D3E4()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5D3F4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0F380(a1, a2, v2);
}

uint64_t sub_23FC5D3FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5D408()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5D414()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 208) = 1;
}

uint64_t sub_23FC5D444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FC5D45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = v3;
  return v2;
}

uint64_t sub_23FC5D46C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5D478()
{
  return swift_deallocObject();
}

uint64_t sub_23FC5D484()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FC5D48C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5D498()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5D4A8()
{
  return swift_release();
}

uint64_t sub_23FC5D4B0()
{
  return swift_release();
}

void sub_23FC5D4DC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FC5D4FC@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23FC5D530()
{
  return type metadata accessor for SessionIdentityPack(0);
}

void sub_23FC5D538()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 208) = *(_DWORD *)(v0 + 4212);
}

uint64_t sub_23FC5D554()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 248) + 8))(v0, *(_QWORD *)(v1 - 232));
}

uint64_t sub_23FC5D568(uint64_t result)
{
  _WORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[202] = result;
  *(_QWORD *)(v4 - 232) = v1;
  *v1 = 514;
  v3[205] = v1 + 1;
  v3[151] = v2;
  return result;
}

void sub_23FC5D584()
{
  uint64_t v0;

  LODWORD(STACK[0x650]) = *(_DWORD *)(v0 + 4204);
}

uint64_t sub_23FC5D5A0()
{
  return ((uint64_t (*)(void))STACK[0x630])();
}

uint64_t sub_23FC5D5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  STACK[0x620] = (unint64_t)v3;
  return v3(v1, v0);
}

uint64_t sub_23FC5D5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  STACK[0x650] = (unint64_t)v3;
  return v3(v1, v0);
}

void sub_23FC5D5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 144) = v0[395];
  v2 = v0[391];
  *(_QWORD *)(v1 - 168) = v0[392];
  *(_QWORD *)(v1 - 160) = v2;
}

void sub_23FC5D5EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = *(_QWORD *)(v0 + 2968);
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(v0 + 2960);
}

uint64_t sub_23FC5D608()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 256) + 104))(v0, *(unsigned int *)(v1 - 232), *(_QWORD *)(v1 - 248));
}

uint64_t sub_23FC5D61C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(v0, *(_QWORD *)(v1 - 192));
}

unint64_t sub_23FC5D630()
{
  return STACK[0x650];
}

uint64_t sub_23FC5D64C()
{
  return sub_23FD7502C();
}

uint64_t sub_23FC5D654()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 - 168) + 48) + *(_QWORD *)(*(_QWORD *)(v1 - 200) + 72) * v0;
}

uint64_t sub_23FC5D670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, unint64_t))(a1 + 104))(v1, LODWORD(STACK[0x650]), STACK[0x648]);
}

uint64_t sub_23FC5D684(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  *(_QWORD *)(v2 - 136) = v1 + 1;
  return SessionIdentityPack.description.getter();
}

void sub_23FC5D698(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x2Au);
}

uint64_t sub_23FC5D6A4(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  *(_QWORD *)(v2 - 136) = v1 + 1;
  return SessionIdentityPack.description.getter();
}

void sub_23FC5D6B8()
{
  JUMPOUT(0x2426759C0);
}

void sub_23FC5D6CC()
{
  uint64_t v0;
  uint64_t v1;
  _WORD *v2;
  _QWORD *v3;

  *v2 = 514;
  v3[174] = v2 + 1;
  v3[163] = v0;
  v3[164] = v1;
}

uint64_t sub_23FC5D6E8(uint64_t result)
{
  _WORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[179] = 0;
  *(_QWORD *)(v3 - 208) = result;
  *(_QWORD *)(v3 - 200) = v1;
  v2[180] = result;
  *v1 = 514;
  v2[178] = v1 + 1;
  return result;
}

BOOL sub_23FC5D704@<W0>(os_log_type_t a1@<W8>)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC5D710()
{
  return sub_23FD724C4();
}

uint64_t sub_23FC5D724()
{
  return sub_23FD724C4();
}

uint64_t sub_23FC5D738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 88) = a1;
  *(_QWORD *)(v4 + 96) = a2;
  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = a4;
  *(_BYTE *)(v4 + 120) = 0;
  return sub_23FD72548();
}

uint64_t sub_23FC5D74C()
{
  return sub_23FD7502C();
}

uint64_t sub_23FC5D758()
{
  return sub_23FD74C48();
}

void sub_23FC5D764()
{
  uint64_t v0;

  STACK[0x440] = v0 + 2144;
  STACK[0x438] = v0 + 2152;
  STACK[0x430] = v0 + 2160;
}

void sub_23FC5D780()
{
  sub_23FC9B868();
}

void sub_23FC5D794()
{
  sub_23FC9B868();
}

uint64_t sub_23FC5D7A8()
{
  return sub_23FD7157C();
}

uint64_t sub_23FC5D7BC(unsigned __int8 a1)
{
  uint64_t *v1;

  return sub_23FC1CFC4(a1, v1[123], v1[49], v1[95]);
}

uint64_t sub_23FC5D7D0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D7D8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D7E0()
{
  return swift_release();
}

uint64_t sub_23FC5D7E8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 160);
}

uint64_t sub_23FC5D7F4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D7FC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D804()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D80C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D814()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D81C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D824()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D82C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D834()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5D83C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC5030C(*(_QWORD *)(v1 + 2208), v0);
}

void sub_23FC5D848()
{

}

uint64_t sub_23FC5D850()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D864()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5D878()
{
  return sub_23FD73D6C();
}

uint64_t sub_23FC5D880()
{
  return sub_23FD71EDC();
}

uint64_t sub_23FC5D894(_WORD *a1)
{
  *a1 = 0;
  return sub_23FD72B54();
}

uint64_t sub_23FC5D8A0()
{
  return sub_23FD74BC4();
}

uint64_t sub_23FC5D8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v2, LODWORD(STACK[0x5D8]), v1);
}

uint64_t sub_23FC5D8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 104))(v0, *(unsigned int *)(v2 - 240), *(_QWORD *)(v2 - 256));
}

uint64_t sub_23FC5D8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 104))(v0, *(unsigned int *)(v2 - 200), *(_QWORD *)(v2 - 216));
}

uint64_t sub_23FC5D90C()
{
  return sub_23FD72BE4();
}

uint64_t sub_23FC5D914()
{
  return swift_task_dealloc();
}

void sub_23FC5D91C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[505] = *(_QWORD *)(v1 - 144);
  v0[511] = *(_QWORD *)(v0[276] + v0[493]);
}

uint64_t sub_23FC5D938()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2648);
}

void sub_23FC5D954()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_23FC0EDD8(v1, *(_QWORD *)(v2 - 176), v0);
}

void sub_23FC5D968()
{
  void *v0;

}

uint64_t sub_23FC5D974@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 184);
}

uint64_t sub_23FC5D990()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, _QWORD))STACK[0x5E8])(v0, *(_QWORD *)(v1 - 208));
}

uint64_t sub_23FC5D9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  STACK[0x5E8] = (unint64_t)v2;
  return v2(v0, v1);
}

uint64_t sub_23FC5D9B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5D9C4()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5D9D0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_23FC5D9DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5D9F8()
{
  return sub_23FD75458();
}

uint64_t sub_23FC5DA0C()
{
  return sub_23FD72BB4();
}

uint64_t sub_23FC5DA20()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 1, 1, v1);
}

void sub_23FC5DA4C()
{
  sub_23FCB596C();
}

void sub_23FC5DA60()
{
  sub_23FCB596C();
}

void sub_23FC5DA74(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  sub_23FC189B4(v2, v1, a1);
}

uint64_t sub_23FC5DA80()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5DA88(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

void sub_23FC5DA90()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 248) = 1;
  STACK[0x5D0] = *(_QWORD *)(v0 - 160);
}

uint64_t sub_23FC5DAAC()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x620] = (unint64_t)v0;
  return v0(v1, v3, v2);
}

uint64_t sub_23FC5DAC0()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x650] = (unint64_t)v0;
  return v0(v1, v3, v2);
}

uint64_t sub_23FC5DAD4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(v0, 0);
}

uint64_t sub_23FC5DAE0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5DAEC()
{
  return sub_23FD74F6C();
}

uint64_t sub_23FC5DAF4()
{
  return sub_23FD75044();
}

uint64_t sub_23FC5DAFC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t sub_23FC5DB08()
{
  return sub_23FD74F6C();
}

uint64_t sub_23FC5DB10(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FC5DB3C()
{
  return sub_23FD74168();
}

uint64_t sub_23FC5DB48(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v4, a2, v3);
}

void sub_23FC5DB54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC0EE04(v1, *(_QWORD *)(v2 - 104), v0);
}

uint64_t sub_23FC5DB84()
{
  return sub_23FD73FE8();
}

uint64_t sub_23FC5DB98(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5DBA4()
{
  return sub_23FD74000();
}

uint64_t sub_23FC5DBB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

void sub_23FC5DBC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3632);
}

uint64_t sub_23FC5DBE0()
{
  return sub_23FD74048();
}

void sub_23FC5DBEC()
{
  sub_23FCC44CC();
}

uint64_t sub_23FC5DC1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 16) & ~v2);
}

uint64_t sub_23FC5DC54()
{
  return sub_23FD72068();
}

uint64_t sub_23FC5DC5C()
{
  return sub_23FD74DEC();
}

uint64_t sub_23FC5DC64(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FC5DC6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 248) + 8))(*(_QWORD *)(v0 - 256), *(_QWORD *)(v0 - 232));
}

uint64_t sub_23FC5DC7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = a1;
  return sub_23FD74F6C();
}

uint64_t sub_23FC5DC94()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5DC9C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5DCA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 248) + 8))(*(_QWORD *)(v0 - 224), *(_QWORD *)(v0 - 240));
}

uint64_t sub_23FC5DCB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 240) + 8))(*(_QWORD *)(v0 - 216), *(_QWORD *)(v0 - 224));
}

void sub_23FC5DCC4()
{
  _WORD *v0;

  *v0 = 770;
}

unint64_t sub_23FC5DCD0()
{
  return STACK[0x650];
}

uint64_t sub_23FC5DCFC()
{
  return sub_23FD73238();
}

uint64_t sub_23FC5DD04@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  STACK[0x5D8] = v1;
  STACK[0x5E0] = v2;
  return sub_23FD73238();
}

uint64_t sub_23FC5DD14()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 200) + 8))(*(_QWORD *)(v0 - 176), *(_QWORD *)(v0 - 184));
}

void sub_23FC5DD24(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  uint64_t v7;

  sub_23FCDDA9C(a1, a2, a3, a4, v7, a6, a7);
}

BOOL sub_23FC5DD2C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

unint64_t sub_23FC5DD3C()
{
  return STACK[0x600];
}

void sub_23FC5DD4C()
{
  uint64_t v0;

  LODWORD(STACK[0x650]) = *(_DWORD *)(v0 + 4204);
}

void sub_23FC5DD64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v1) = v0;
  ++*(_QWORD *)(v2 + 16);
}

uint64_t sub_23FC5DD7C(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5DD8C(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

void sub_23FC5DD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 3160);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v0 + 3128);
  *(_QWORD *)(v1 - 152) = v2;
}

uint64_t sub_23FC5DDE8()
{
  return sub_23FD73D6C();
}

void sub_23FC5DE08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[370];
  *(_QWORD *)(v1 - 248) = v0[371];
  *(_QWORD *)(v1 - 240) = v2;
  *(_QWORD *)(v1 - 232) = v0[369];
}

uint64_t sub_23FC5DE20()
{
  return ((uint64_t (*)(void))STACK[0x648])();
}

uint64_t sub_23FC5DE28()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5DE30()
{
  return 0;
}

uint64_t sub_23FC5DE48()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_23FC5DE64(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return v1;
}

uint64_t sub_23FC5DE7C(float a1)
{
  float *v1;

  *v1 = a1;
  return SessionIdentityPack.description.getter();
}

BOOL sub_23FC5DE8C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23FC5DE9C()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 248) = 0;
  *(_DWORD *)(v0 - 240) = 1;
}

uint64_t sub_23FC5DEB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC5DECC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5DEE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5DEFC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 96) = result;
  return result;
}

uint64_t sub_23FC5DF18()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 448);
}

void sub_23FC5DF3C()
{
  _WORD *v0;

  *v0 = 514;
}

uint64_t sub_23FC5DF48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 4032) + 16;
}

uint64_t sub_23FC5DF60()
{
  return 0;
}

uint64_t sub_23FC5DFA8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_23FC9DC40(v0, v1, (uint64_t *)(v2 - 104));
}

uint64_t sub_23FC5DFB8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, unint64_t))(v1 + 8))(v0, STACK[0x688]);
}

uint64_t sub_23FC5DFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 224));
}

uint64_t sub_23FC5DFD8(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 48);
}

void sub_23FC5DFE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 3608);
}

uint64_t sub_23FC5E000(uint64_t result)
{
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 1520) = result;
  *(_QWORD *)(v3 - 224) = v1;
  *v1 = 514;
  *(_QWORD *)(v2 + 1784) = v1 + 1;
  return result;
}

uint64_t sub_23FC5E018()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC5E028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v1 + 32))(a1 + *(_QWORD *)(v1 + 72) * v2);
}

uint64_t sub_23FC5E038()
{
  return sub_23FD73D6C();
}

uint64_t sub_23FC5E040()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 544);
}

uint64_t sub_23FC5E058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

void sub_23FC5E068()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 200) = 1;
}

uint64_t sub_23FC5E080()
{
  return swift_release();
}

uint64_t sub_23FC5E088()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E090()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E098()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E0A0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E0A8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E0B0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E0B8()
{
  return swift_task_dealloc();
}

void sub_23FC5E0C0()
{
  uint64_t v0;

  STACK[0x3F8] = v0 + 704;
  STACK[0x3D0] = v0 + 728;
}

void sub_23FC5E0D8()
{
  uint64_t v0;

  STACK[0x3E8] = v0 + 608;
  STACK[0x3D8] = v0 + 632;
}

void sub_23FC5E0F0()
{
  uint64_t v0;

  STACK[0x640] = v0 + 208;
  STACK[0x3E0] = v0 + 240;
}

uint64_t sub_23FC5E108()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E110()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E118()
{
  return sub_23FD73D24();
}

uint64_t sub_23FC5E128()
{
  return sub_23FD74E1C();
}

uint64_t sub_23FC5E138()
{
  return sub_23FD74D8C();
}

uint64_t sub_23FC5E148()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC5E168()
{
  return sub_23FD71EA0();
}

uint64_t sub_23FC5E178(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return sub_23FD72BA8();
}

uint64_t sub_23FC5E188@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 872) = a1;
  *(_QWORD *)(v3 + 880) = v2;
  return v1;
}

uint64_t sub_23FC5E198()
{
  return sub_23FBFEFF4();
}

uint64_t sub_23FC5E1A0()
{
  return sub_23FD74D80();
}

uint64_t sub_23FC5E1B0()
{
  return swift_release_n();
}

uint64_t sub_23FC5E1B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = v1;
  *(_QWORD *)(v2 - 144) = a1;
  return sub_23FD72BA8();
}

uint64_t sub_23FC5E1C8()
{
  return sub_23FD73D6C();
}

uint64_t sub_23FC5E1D0()
{
  return sub_23FD74E40();
}

uint64_t sub_23FC5E1D8()
{
  return sub_23FD74048();
}

void sub_23FC5E1E0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_23FC189B4(v1, v2, v0);
}

uint64_t sub_23FC5E1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, a3);
}

uint64_t sub_23FC5E218()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E220(uint64_t a1)
{
  return sub_23FC181D4(a1);
}

uint64_t sub_23FC5E228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 944) = v1;
  return v0;
}

uint64_t sub_23FC5E238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FC5E240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23FC50AD4(a1, a2, v2);
}

uint64_t sub_23FC5E248()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = v0;
  return swift_retain();
}

uint64_t sub_23FC5E250(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5E25C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 208) + 8))(*(_QWORD *)(v0 - 184), *(_QWORD *)(v0 - 200));
}

void sub_23FC5E26C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;

  sub_23FCB40E0(a1, a2, a3, a4, a5, v6, a6);
}

void sub_23FC5E274(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0EDD8(a1, a2, v2);
}

uint64_t sub_23FC5E27C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FC5E284@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  return sub_23FCBACF4(result, a2);
}

BOOL sub_23FC5E28C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23FC5E2A4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E2AC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E2B4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E2BC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E2C4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E2CC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E2D4()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, v0);
}

uint64_t sub_23FC5E2FC()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))STACK[0x5F0])(v1, v0);
}

uint64_t sub_23FC5E30C()
{
  return sub_23FBFEFF4();
}

uint64_t sub_23FC5E314()
{
  return swift_release();
}

uint64_t sub_23FC5E31C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E324()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E32C()
{
  return swift_task_dealloc();
}

BOOL sub_23FC5E334(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

unint64_t sub_23FC5E344()
{
  return sub_23FC57BCC();
}

uint64_t sub_23FC5E34C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E35C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FC5E36C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E374()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E37C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E384()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E38C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E394()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3B8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3C0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3C8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3D0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3D8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3E0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3E8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3F0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E3F8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E400()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E408()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E410()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E418()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E420()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E428()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E430()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E438()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E440()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E448()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E450()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E458()
{
  return sub_23FD740A8();
}

uint64_t sub_23FC5E460()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E468()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E470()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E478()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E480()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E488()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E490()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E498()
{
  return sub_23FD75044();
}

uint64_t sub_23FC5E4A0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E4A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 1304) = a1;
  *(_QWORD *)(v3 + 1312) = v2;
  return v1;
}

uint64_t sub_23FC5E4C0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E4C8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E4D0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E4D8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E4E0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E4E8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E4F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 176))();
}

uint64_t sub_23FC5E4F8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E500()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E508()
{
  return sub_23FD74F6C();
}

uint64_t sub_23FC5E510()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E518()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E520()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E528()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E530()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E544()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E54C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E554()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E55C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E564()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E56C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E574()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E57C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E584()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E58C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E594()
{
  return swift_task_dealloc();
}

void sub_23FC5E59C()
{
  void *v0;

  sub_23FC57270(v0, 1);
  sub_23FC57270(v0, 1);
}

void sub_23FC5E5BC()
{
  JUMPOUT(0x2426759CCLL);
}

BOOL sub_23FC5E5C4(uint64_t a1, os_log_type_t a2)
{
  NSObject *v2;

  return os_log_type_enabled(v2, a2);
}

uint64_t sub_23FC5E5CC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E5D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E5DC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E5E4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E5EC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E5F4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E5FC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E604()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E60C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E614()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E61C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E624()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E62C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E634()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E63C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E644()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E64C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E654()
{
  uint64_t v0;

  return sub_23FCA30C4(v0);
}

uint64_t sub_23FC5E65C()
{
  return sub_23FCA2124();
}

uint64_t sub_23FC5E664()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E67C()
{
  return swift_allocBox();
}

uint64_t sub_23FC5E684()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E68C()
{
  return sub_23FD73E68();
}

void sub_23FC5E694(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC0F3AC(a1, a2, v2);
}

uint64_t sub_23FC5E69C()
{
  return sub_23FD75044();
}

uint64_t sub_23FC5E6A4()
{
  return sub_23FD74168();
}

uint64_t sub_23FC5E6AC()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E6B4()
{
  return swift_release();
}

uint64_t sub_23FC5E6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
  return *(_QWORD *)(v2 + 720);
}

uint64_t sub_23FC5E6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
  return *(_QWORD *)(v2 + 504);
}

uint64_t sub_23FC5E70C()
{
  uint64_t v0;

  return sub_23FCA30C4(v0);
}

uint64_t sub_23FC5E714()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E720()
{
  return swift_endAccess();
}

uint64_t sub_23FC5E728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  STACK[0x5F0] = (unint64_t)v2;
  return v2(v0, v1);
}

uint64_t sub_23FC5E738(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23FC5E748()
{
  return swift_task_alloc();
}

uint64_t sub_23FC5E750()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E75C()
{
  return sub_23FD73E50();
}

void sub_23FC5E764(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;

  sub_23FC189B4(v1, *(_QWORD *)(v2 - 200), a1);
}

uint64_t sub_23FC5E774()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))STACK[0x618])(v0, v1);
}

uint64_t sub_23FC5E784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5E790(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23FC5E7A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5E7AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

BOOL sub_23FC5E7B8(os_log_t oslog, os_log_type_t type)
{
  return os_log_type_enabled(oslog, type);
}

void sub_23FC5E7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = *(_QWORD *)(v1 + 2928);
  *(_QWORD *)(v2 - 208) = v0;
}

void sub_23FC5E7F0()
{
  uint64_t v0;

  STACK[0x530] = *(_QWORD *)(v0 + 3040);
  STACK[0x540] = *(_QWORD *)(v0 + 3032);
}

uint64_t sub_23FC5E814()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E824()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E830()
{
  __int128 *v0;

  return sub_23FBFDE28(v0, STACK[0x680]);
}

uint64_t sub_23FC5E840()
{
  uint64_t v0;

  return v0;
}

_BYTE *sub_23FC5E850()
{
  _BYTE *v0;

  return sub_23FCB427C(v0);
}

_BYTE *sub_23FC5E860()
{
  _BYTE *v0;

  return sub_23FCB4270(v0);
}

uint64_t sub_23FC5E870()
{
  __int128 *v0;
  uint64_t v1;

  return sub_23FBFDE28(v0, *(_QWORD *)(v1 - 232));
}

uint64_t sub_23FC5E880()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E88C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E894()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E89C()
{
  return sub_23FD73214();
}

uint64_t sub_23FC5E8A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5E8B0(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FC5E8F8(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FC5E920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5E92C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC5E944()
{
  return sub_23FD720E0();
}

uint64_t sub_23FC5E94C()
{
  return sub_23FD72134();
}

uint64_t sub_23FC5E954()
{
  return sub_23FD73DE4();
}

uint64_t sub_23FC5E95C()
{
  return sub_23FD72B84();
}

void sub_23FC5E964(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC582EC(a1, a2, v2);
}

uint64_t sub_23FC5E96C()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5E978()
{
  sub_23FBFEFA0();
}

void sub_23FC5E980()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

__n128 sub_23FC5E990(uint64_t a1)
{
  __n128 result;

  result = *(__n128 *)&STACK[0x530];
  *(_OWORD *)(a1 + 16) = *(_OWORD *)&STACK[0x530];
  return result;
}

uint64_t sub_23FC5E9A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5E9B8()
{
  return sub_23FD720F8();
}

uint64_t sub_23FC5E9D8()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5E9E0()
{
  uint64_t v0;

  return sub_23FC50BE8(v0);
}

uint64_t sub_23FC5E9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 136))(v0, v1);
}

uint64_t sub_23FC5E9F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5EA18()
{
  return sub_23FD73DE4();
}

uint64_t sub_23FC5EA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 16) & ~v2);
}

uint64_t sub_23FC5EA38()
{
  return type metadata accessor for SessionClientID(0);
}

uint64_t sub_23FC5EA40()
{
  return type metadata accessor for SessionCoordinatorResponseCallback(0);
}

uint64_t sub_23FC5EA48()
{
  return type metadata accessor for SessionControlActor();
}

void sub_23FC5EA50(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FC5806C(a1, v1);
}

uint64_t sub_23FC5EA58()
{
  return sub_23FD71C00();
}

uint64_t sub_23FC5EA60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

void sub_23FC5EA6C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23FC5EA7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 824) = a1;
  *(_QWORD *)(v2 + 832) = STACK[0x5E8];
  return v1;
}

uint64_t sub_23FC5EA94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 824) = a1;
  *(_QWORD *)(v2 + 832) = STACK[0x5E0];
  return v1;
}

uint64_t sub_23FC5EAAC(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 1176) = result;
  *(_QWORD *)(v2 + 1184) = a2;
  return result;
}

uint64_t sub_23FC5EAB8()
{
  return swift_release();
}

void sub_23FC5EACC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v3;
  v1[1] = v5;
  v1[2] = v0;
  v1[3] = v2;
  v1[4] = v4;
}

uint64_t sub_23FC5EAEC()
{
  return swift_release();
}

uint64_t sub_23FC5EAF4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5EB1C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))STACK[0x5E8])(a1, a2, STACK[0x3E0]);
}

uint64_t sub_23FC5EB34()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5EB54()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5EB68()
{
  uint64_t v0;

  LODWORD(STACK[0x650]) = *(_DWORD *)(v0 + 4228);
}

void sub_23FC5EB7C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  STACK[0x2C8] = v2;
  STACK[0x2D0] = v1;
  STACK[0x2D8] = v0;
}

uint64_t sub_23FC5EB90@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t sub_23FC5EBBC()
{
  return swift_allocObject();
}

uint64_t sub_23FC5EBC8()
{
  uint64_t v0;

  return v0;
}

BOOL sub_23FC5EBDC()
{
  os_log_type_t v0;
  NSObject *v1;

  return os_log_type_enabled(v1, v0);
}

uint64_t sub_23FC5EC08()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FC5EC14()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5EC30()
{
  return sub_23FD75458();
}

uint64_t sub_23FC5EC3C()
{
  return sub_23FD75458();
}

uint64_t sub_23FC5EC48()
{
  return sub_23FD7544C();
}

uint64_t sub_23FC5EC54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3160);
}

uint64_t sub_23FC5EC94(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

uint64_t sub_23FC5ECA0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = *(_QWORD *)(v1 - 208);
  return result;
}

uint64_t sub_23FC5ECAC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5ECC0()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5ECFC()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 248) = 1;
}

void sub_23FC5ED10()
{
  unint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = 0;
  STACK[0x5D0] = v0;
}

void sub_23FC5ED1C()
{
  unint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0;
  STACK[0x5D0] = v0;
}

void sub_23FC5ED28()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 248) = *(unsigned __int8 *)(STACK[0x528] + 1);
}

void sub_23FC5ED3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 256) = *(_DWORD *)(v0 + 4276);
  LODWORD(STACK[0x698]) = *(_DWORD *)(v0 + 4272);
}

uint64_t sub_23FC5ED50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 104))(v1);
}

uint64_t sub_23FC5ED5C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5ED70()
{
  return sub_23FD71C24();
}

uint64_t sub_23FC5ED7C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

uint64_t sub_23FC5ED9C()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t sub_23FC5EDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 1192) = a1;
  *(_QWORD *)(v2 + 1200) = *(_QWORD *)(v3 - 224);
  return v1;
}

uint64_t sub_23FC5EDBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 1192) = a1;
  *(_QWORD *)(v3 + 1200) = v1;
  return v2;
}

BOOL sub_23FC5EDD0@<W0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x5C8]) = a1 | v1;
  return sub_23FCB3EE8(a1 | v1);
}

void sub_23FC5EDDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v0 + 3120);
}

uint64_t sub_23FC5EE04()
{
  return sub_23FD71C24();
}

uint64_t sub_23FC5EE10(uint64_t a1)
{
  return sub_23FC17EE0(a1);
}

void sub_23FC5EE18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0 + 1;
}

uint64_t sub_23FC5EE38(uint64_t a1)
{
  return sub_23FC17EE0(a1);
}

uint64_t sub_23FC5EE40(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC5EE54()
{
  return sub_23FD7250C();
}

uint64_t sub_23FC5EE6C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5EE80(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_23FC5EE8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v4 + 888) = a1;
  *(_QWORD *)(v4 + 896) = v1;
  return v2;
}

unint64_t sub_23FC5EEA0(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)(v2 + 1984) = 0;
  STACK[0x598] = result;
  *(_QWORD *)(v2 + 1992) = result;
  return result;
}

uint64_t sub_23FC5EEE0()
{
  return sub_23FD72500();
}

void sub_23FC5EF00()
{
  unint64_t v0;

  STACK[0x618] = v0;
}

uint64_t sub_23FC5EF20@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = a1;
  return sub_23FD71714();
}

uint64_t sub_23FC5EF40()
{
  return sub_23FD72B60();
}

uint64_t sub_23FC5EF48()
{
  return sub_23FD72BD8();
}

uint64_t sub_23FC5EF50()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5EF58()
{
  return swift_task_dealloc();
}

void sub_23FC5EF60(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x12u);
}

void sub_23FC5EF6C()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 256;
}

uint64_t sub_23FC5EF94()
{
  uint64_t (*v0)(_QWORD, _QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 + 680), *(_QWORD *)(v1 + 664));
}

uint64_t sub_23FC5EFA0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 688);
}

uint64_t sub_23FC5EFB4()
{
  return sub_23FD71EC4();
}

void sub_23FC5EFC0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
}

uint64_t sub_23FC5EFD4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5EFDC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 4032) + 16;
}

uint64_t sub_23FC5F010()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1136);
}

void sub_23FC5F024()
{
  JUMPOUT(0x242678AA4);
}

uint64_t sub_23FC5F030()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5F044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 1224) = a1;
  *(_QWORD *)(v2 + 1232) = *(_QWORD *)(v3 - 168);
  return v1;
}

uint64_t sub_23FC5F058()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5F078()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3688);
}

uint64_t sub_23FC5F084(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5F090()
{
  return sub_23FC60F04();
}

uint64_t sub_23FC5F0B0(uint64_t result)
{
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t sub_23FC5F0BC()
{
  return sub_23FC60F04();
}

uint64_t sub_23FC5F0C8()
{
  return swift_unknownObjectRetain();
}

BOOL sub_23FC5F0D4(os_log_t oslog, os_log_type_t type)
{
  return os_log_type_enabled(oslog, type);
}

uint64_t sub_23FC5F0DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5F124(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return sub_23FD74F54();
}

uint64_t sub_23FC5F12C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 856) = a1;
  *(_QWORD *)(v3 + 864) = v2;
  return v1;
}

uint64_t sub_23FC5F140()
{
  return sub_23FD7502C();
}

uint64_t sub_23FC5F15C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5F168()
{
  return sub_23FD72B60();
}

uint64_t sub_23FC5F190(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23FC5F19C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 936) = a1;
  *(_QWORD *)(v3 + 944) = v1;
  return v2;
}

void sub_23FC5F1B0()
{
  unint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = v0;
  STACK[0x5D0] = v0;
}

uint64_t sub_23FC5F1BC()
{
  return swift_release();
}

uint64_t sub_23FC5F1E4()
{
  return swift_task_dealloc();
}

void sub_23FC5F218()
{
  unint64_t v0;

  STACK[0x5D0] = v0;
}

uint64_t sub_23FC5F22C()
{
  return swift_getObjectType();
}

uint64_t sub_23FC5F238()
{
  return sub_23FD7502C();
}

void sub_23FC5F244()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 176) = v1;
}

void sub_23FC5F258()
{
  ClientAction.Definition.toolDefinition.getter();
}

uint64_t sub_23FC5F264()
{
  return sub_23FD71630();
}

uint64_t sub_23FC5F284()
{
  return swift_release();
}

void sub_23FC5F290(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

uint64_t sub_23FC5F298()
{
  return sub_23FD73FE8();
}

uint64_t sub_23FC5F2A4()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0);
}

uint64_t sub_23FC5F2AC()
{
  uint64_t v0;

  return sub_23FC52E24(v0);
}

uint64_t sub_23FC5F2B8()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1, 0);
}

void sub_23FC5F2C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0EE04(v3, v4, a3);
}

uint64_t sub_23FC5F2D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[31] = v1;
  v2[32] = a1;
  v2[33] = v3;
  return swift_retain();
}

uint64_t sub_23FC5F2DC(uint64_t a1)
{
  return sub_23FC18354(a1);
}

uint64_t sub_23FC5F2E8()
{
  return sub_23FD73B14();
}

uint64_t sub_23FC5F2F4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5F300()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5F30C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5F314()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5F31C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5F324()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5F32C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC5F334()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FCA1864(v0, v1);
}

void sub_23FC5F340(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23FC0EE04(a1, a2, v2);
}

uint64_t sub_23FC5F348()
{
  return sub_23FD74FE4();
}

uint64_t sub_23FC5F350(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return sub_23FD74F6C();
}

void sub_23FC5F358(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

uint64_t sub_23FC5F360()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_23FC56978(v0, v2, v1);
  return v3;
}

void sub_23FC5F384(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

void sub_23FC5F398(uint64_t a1)
{
  uint64_t v1;

  sub_23FC584E0(a1, v1);
}

uint64_t sub_23FC5F3AC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23FC5F3B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 904) = a1;
  *(_QWORD *)(v3 + 912) = v2;
  return v1;
}

uint64_t sub_23FC5F3CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 904) = a1;
  *(_QWORD *)(v3 + 912) = v2;
  return v1;
}

uint64_t sub_23FC5F3E0(uint64_t a1)
{
  uint64_t v1;

  return sub_23FC50548(a1, 0, v1);
}

uint64_t sub_23FC5F3EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_23FC5F3F8()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5F40C()
{
  sub_23FBFEFA0();
}

void sub_23FC5F414()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23FC584B0(v0, v1);
}

uint64_t sub_23FC5F420()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5F434()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5F440()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23FC5806C(v1, v0);
}

uint64_t sub_23FC5F44C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t v65;

  return sub_23FC08C28(a1, a2, v65, a65);
}

uint64_t sub_23FC5F464()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC5F470(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

void sub_23FC5F47C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23FC5F49C()
{
  return sub_23FD72050();
}

uint64_t sub_23FC5F4A8()
{
  uint64_t v0;

  return v0;
}

void sub_23FC5F4B4(uint64_t a1)
{
  uint64_t v1;

  sub_23FC584E0(a1, v1);
}

uint64_t sub_23FC5F4BC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23FC5F4C8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC577F4(v0, v1);
}

uint64_t sub_23FC5F4D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC5F4EC(uint64_t result)
{
  *(_BYTE *)(result + 16) = 0;
  return result;
}

BOOL sub_23FC5F4F8(os_log_t oslog, os_log_type_t type)
{
  return os_log_type_enabled(oslog, type);
}

id sub_23FC5F500()
{
  void *v0;

  return v0;
}

uint64_t sub_23FC5F508()
{
  return swift_endAccess();
}

void sub_23FC5F524()
{
  sub_23FC997D0();
}

uint64_t sub_23FC5F530()
{
  return swift_release();
}

void sub_23FC5F538(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23FC0EDD8(a1, v2, v1);
}

uint64_t sub_23FC5F550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

BOOL sub_23FC5F55C(os_log_t oslog, os_log_type_t type)
{
  return os_log_type_enabled(oslog, type);
}

uint64_t sub_23FC5F584()
{
  return sub_23FD740CC();
}

uint64_t sub_23FC5F58C()
{
  return sub_23FD74120();
}

uint64_t sub_23FC5F594()
{
  return _s24StandardSessionResourcesVMa();
}

uint64_t sub_23FC5F59C()
{
  return sub_23FD73D9C();
}

BOOL sub_23FC5F5A4()
{
  os_log_type_t v0;
  NSObject *v1;

  return os_log_type_enabled(v1, v0);
}

uint64_t sub_23FC5F5B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23FC5F5BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23FC5F5C8(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

uint64_t sub_23FC5F5DC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23FC08C28(a1, a2, a3, v3);
}

uint64_t sub_23FC5F5F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 824) = a1;
  *(_QWORD *)(v3 + 832) = v2;
  return v1;
}

uint64_t sub_23FC5F608(_QWORD *a1)
{
  sub_23FBFDE40(a1, a1[3]);
  sub_23FD742D0();
  return sub_23FD742DC();
}

uint64_t sub_23FC5F648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_23FD734C0();
  v18 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FBFF180();
  v4 = v3 - v2;
  v5 = sub_23FD72BF0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_23FBFF180();
  v10 = v9 - v8;
  sub_23FD72488();
  swift_retain_n();
  v11 = sub_23FD72BE4();
  v12 = sub_23FD74F48();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)sub_23FBFEFF4();
    v19 = sub_23FBFEFF4();
    *(_DWORD *)v13 = 136315138;
    v14 = sub_23FD74138();
    v16 = sub_23FC9DC40(v14, v15, &v19);
    sub_23FC101E0(v16);
    sub_23FD75044();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v11, v12, "CurareFSServiceSubscriber received event: %s", v13, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  sub_23FD74144();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v4, v0);
  return sub_23FD742D0();
}

uint64_t sub_23FC5F854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_23FD72BF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  sub_23FBFF180();
  v5 = v4 - v3;
  sub_23FD72488();
  v6 = sub_23FD72BE4();
  v7 = sub_23FD74F48();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_23FBFEFF4();
    v13 = sub_23FBFEFF4();
    *(_DWORD *)v8 = 136315138;
    sub_23FBFD684(&qword_256F5E6F8);
    v9 = sub_23FD74C0C();
    v11 = sub_23FC9DC40(v9, v10, &v13);
    sub_23FC101E0(v11);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v6, v7, "CurareFSServiceSubscriber received completion: %s", v8, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v5, v0);
}

uint64_t sub_23FC5F9C8()
{
  uint64_t v0;

  sub_23FC5FB58(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25CurareFSServiceSubscriber_id);
  return swift_deallocClassInstance();
}

uint64_t sub_23FC5F9F8()
{
  return type metadata accessor for CurareFSServiceSubscriber();
}

uint64_t type metadata accessor for CurareFSServiceSubscriber()
{
  uint64_t result;

  result = qword_256F5E668;
  if (!qword_256F5E668)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FC5FA38()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionIdentityPack(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FC5FAA4(_QWORD *a1)
{
  return sub_23FC5F608(a1);
}

uint64_t sub_23FC5FAB8()
{
  return sub_23FC5F648();
}

uint64_t sub_23FC5FAD0()
{
  return sub_23FC5F854();
}

uint64_t sub_23FC5FAE8()
{
  return sub_23FD74288();
}

unint64_t sub_23FC5FB0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5E6F0;
  if (!qword_256F5E6F0)
  {
    v1 = type metadata accessor for CurareFSServiceSubscriber();
    result = MEMORY[0x2426797E8](&unk_23FD76DBC, v1);
    atomic_store(result, (unint64_t *)&qword_256F5E6F0);
  }
  return result;
}

uint64_t sub_23FC5FB4C()
{
  return MEMORY[0x24BEE40A8];
}

uint64_t sub_23FC5FB58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SessionIdentityPack(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23FC5FB94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_23FD74F90();
  v13 = *(_QWORD *)(v4 - 8);
  v14 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC0603C();
  v6 = sub_23FD74F78();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6, v8);
  v9 = sub_23FD74ABC();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC605B0(a1, v1 + OBJC_IVAR____TtC23IntelligenceFlowRuntime19DefaultEventHandler_subscriber);
  sub_23FC605F8();
  sub_23FD750E0();
  sub_23FD74C48();
  sub_23FBFD684(&qword_256F5E7F0);
  sub_23FD74294();
  sub_23FC606B8(&qword_256F5E7F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9420], MEMORY[0x24BDB9430]);
  sub_23FD75344();
  sub_23FD74C48();
  swift_bridgeObjectRelease();
  sub_23FD74AA4();
  sub_23FC606B8(&qword_254346B68, v7, MEMORY[0x24BEE5698]);
  sub_23FC6087C();
  sub_23FC6086C((unint64_t *)&qword_254346B60);
  sub_23FD75098();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v2, *MEMORY[0x24BEE5750], v14);
  v11 = sub_23FD74FC0();
  sub_23FC60634(a1);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligenceFlowRuntime19DefaultEventHandler_subscriptionQueue) = v11;
  sub_23FC060D4();
}

uint64_t sub_23FC5FDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD aBlock[6];
  __int128 v9[2];

  v2 = v1;
  v3 = *(NSObject **)(v1 + OBJC_IVAR____TtC23IntelligenceFlowRuntime19DefaultEventHandler_subscriptionQueue);
  sub_23FC60768(a1, (uint64_t)v9);
  v4 = sub_23FC58AA0();
  *(_QWORD *)(v4 + 16) = v2;
  sub_23FBFDE28(v9, v4 + 24);
  v5 = sub_23FC58AA0();
  *(_QWORD *)(v5 + 16) = sub_23FC607D4;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_23FC607F0;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23FC5FF48;
  aBlock[3] = &unk_25100EDA0;
  v6 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23FC5FF1C()
{
  return sub_23FD74324();
}

uint64_t sub_23FC5FF48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_23FC5FF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v4 = v1;
  v6 = sub_23FD74A98();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FC60820();
  sub_23FC60884();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC0603C();
  v11 = sub_23FC58AA0();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = a1;
  v12 = sub_23FC60898((uint64_t)sub_23FC94110);
  swift_retain();
  swift_retain();
  sub_23FD74AB0();
  sub_23FC606B8(&qword_256F5E800, v7, MEMORY[0x24BEE5468]);
  sub_23FC6087C();
  sub_23FC6086C(&qword_256F5E810);
  sub_23FC6085C();
  MEMORY[0x242678D68](0, v3, v2, v12);
  _Block_release(v12);
  sub_23FC6084C();
  sub_23FC6083C();
  swift_release();
  sub_23FD742D0();
  sub_23FC060D4();
}

uint64_t sub_23FC600E4()
{
  return sub_23FD74330();
}

uint64_t sub_23FC6011C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v4 = v1;
  v6 = sub_23FD74A98();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FC60820();
  sub_23FC60884();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC0603C();
  v11 = sub_23FC58AA0();
  *(_QWORD *)(v11 + 16) = v4;
  *(_BYTE *)(v11 + 24) = a1 & 1;
  v12 = sub_23FC60898((uint64_t)sub_23FC94110);
  swift_retain();
  sub_23FD74AB0();
  sub_23FC606B8(&qword_256F5E800, v7, MEMORY[0x24BEE5468]);
  sub_23FC6087C();
  sub_23FC6086C(&qword_256F5E810);
  sub_23FC6085C();
  MEMORY[0x242678D68](0, v3, v2, v12);
  _Block_release(v12);
  sub_23FC6084C();
  sub_23FC6083C();
  return swift_release();
}

uint64_t sub_23FC602A8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v12[16];

  v3 = sub_23FD72BF0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FD72488();
  v8 = sub_23FD72BE4();
  v9 = sub_23FD74F48();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23FBF8000, v8, v9, "Subscribers: Received completion", v10, 2u);
    MEMORY[0x2426798D8](v10, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  v12[15] = a2 & 1;
  return sub_23FD74318();
}

uint64_t sub_23FC603C0()
{
  uint64_t v0;

  sub_23FC60634(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime19DefaultEventHandler_subscriber);

  return swift_deallocClassInstance();
}

uint64_t sub_23FC60400()
{
  return type metadata accessor for DefaultEventHandler();
}

uint64_t type metadata accessor for DefaultEventHandler()
{
  uint64_t result;

  result = qword_256F5E738;
  if (!qword_256F5E738)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23FC60440()
{
  unint64_t v0;

  sub_23FC604B8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23FC604B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256F5E748[0])
  {
    sub_23FD7415C();
    v0 = sub_23FD742E8();
    if (!v1)
      atomic_store(v0, qword_256F5E748);
  }
}

uint64_t sub_23FC6051C(uint64_t a1)
{
  return sub_23FC5FDE0(a1);
}

void sub_23FC6053C(uint64_t *a1)
{
  sub_23FC5FF68(*a1);
}

uint64_t sub_23FC60560(char *a1)
{
  return sub_23FC6011C(*a1);
}

uint64_t sub_23FC60584()
{
  return sub_23FC606B8(&qword_256F5E7E8, (uint64_t (*)(uint64_t))type metadata accessor for DefaultEventHandler, (uint64_t)&unk_23FD76E64);
}

uint64_t sub_23FC605B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5E7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23FC605F8()
{
  unint64_t result;

  result = qword_254346B70;
  if (!qword_254346B70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254346B70);
  }
  return result;
}

uint64_t sub_23FC60634(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F5E7F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FC60674()
{
  sub_23FC60874();
  return swift_deallocObject();
}

uint64_t sub_23FC60694()
{
  uint64_t v0;

  return sub_23FC602A8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23FC606A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23FC606B0()
{
  return swift_release();
}

uint64_t sub_23FC606B8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2426797E8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23FC606F8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_23FBFEDE8(a2);
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23FC60738()
{
  sub_23FC60874();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FC60760()
{
  return sub_23FC600E4();
}

uint64_t sub_23FC60768(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23FC607AC()
{
  uint64_t v0;

  sub_23FC60874();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_23FC607D4()
{
  return sub_23FC5FF1C();
}

uint64_t sub_23FC607E0()
{
  return swift_deallocObject();
}

uint64_t sub_23FC607F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23FC60820()
{
  return sub_23FD74ABC();
}

uint64_t sub_23FC6083C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FC6084C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FC6085C()
{
  return sub_23FD75098();
}

uint64_t sub_23FC6086C(unint64_t *a1)
{
  uint64_t *v1;

  return sub_23FC606F8(a1, v1);
}

uint64_t sub_23FC60874()
{
  return swift_release();
}

uint64_t sub_23FC6087C()
{
  uint64_t *v0;

  return sub_23FBFD684(v0);
}

void *sub_23FC60898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t sub_23FC608A4()
{
  sub_23FC606B8(&qword_256F5E8F0, (uint64_t (*)(uint64_t))type metadata accessor for DefaultEventLogSender, (uint64_t)&unk_23FD76F18);
  return sub_23FD74384();
}

uint64_t sub_23FC608F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FBFD684(&qword_256F5E968);
  sub_23FBFF1C4();
  *(_QWORD *)(v2 + 16) = sub_23FD74360();
  sub_23FC62410(a1, v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime21DefaultEventLogSender_id);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligenceFlowRuntime21DefaultEventLogSender_eventParentID) = a2;
  sub_23FC6097C(a1, a2);
  sub_23FC5FB58(a1);
  return v2;
}

void sub_23FC6097C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  type metadata accessor for SessionIdentityPack(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFF180();
  v8 = v7 - v6;
  v35 = sub_23FBFD684(&qword_256F5E7F0);
  MEMORY[0x24BDAC7A8](v35, v9);
  sub_23FC100D4();
  v12 = (uint64_t *)(v10 - v11);
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC606B8(&qword_256F5E8F0, (uint64_t (*)(uint64_t))type metadata accessor for DefaultEventLogSender, (uint64_t)&unk_23FD76F18);
  sub_23FD74384();
  sub_23FC62410(a1, v8);
  type metadata accessor for TaskStepLoggingSubscriber();
  sub_23FBFF1C4();
  v36 = sub_23FD0426C(v8, a2);
  sub_23FC606B8((unint64_t *)&qword_256F5E970, (uint64_t (*)(uint64_t))type metadata accessor for TaskStepLoggingSubscriber, (uint64_t)&unk_23FD7B838);
  sub_23FD7427C();
  sub_23FBFD684(&qword_256F5E978);
  v15 = sub_23FC58AA0();
  *(_QWORD *)(v15 + 16) = v36;
  *v12 = v15;
  sub_23FC58D78();
  v16 = sub_23FC62660();
  v18 = v17;
  v19 = sub_23FC58A94();
  *(_QWORD *)(v19 + 16) = v16;
  *(_QWORD *)(v19 + 24) = v18;
  v12[1] = (uint64_t)sub_23FC625E0;
  v12[2] = v19;
  v12[3] = (uint64_t)sub_23FC62544;
  v12[4] = v36;
  swift_retain();
  v20 = sub_23FC62660();
  v22 = v21;
  v23 = sub_23FC58A94();
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = v22;
  sub_23FC626F8(v23, (uint64_t)sub_23FC62600);
  swift_release();
  type metadata accessor for DefaultEventHandler();
  sub_23FBFF1C4();
  sub_23FC6271C();
  sub_23FBFD684(&qword_256F5E980);
  sub_23FC62570();
  sub_23FC606B8(&qword_256F5E940, (uint64_t (*)(uint64_t))type metadata accessor for DefaultEventHandler, (uint64_t)&unk_23FD76E8C);
  sub_23FC62668();
  swift_release();
  swift_release();
  sub_23FD74384();
  sub_23FC62410(a1, v8);
  type metadata accessor for CurareFSServiceSubscriber();
  v24 = sub_23FBFF1C4();
  sub_23FC06D0C(v8, v24 + OBJC_IVAR____TtC23IntelligenceFlowRuntime25CurareFSServiceSubscriber_id);
  sub_23FC606B8((unint64_t *)&qword_256F5E6F0, (uint64_t (*)(uint64_t))type metadata accessor for CurareFSServiceSubscriber, (uint64_t)&unk_23FD76DBC);
  sub_23FD7427C();
  sub_23FBFD684(qword_256F5E990);
  v25 = sub_23FC58AA0();
  *(_QWORD *)(v25 + 16) = v24;
  *v12 = v25;
  sub_23FC58D78();
  v26 = sub_23FC62660();
  v28 = v27;
  v29 = sub_23FC58A94();
  *(_QWORD *)(v29 + 16) = v26;
  *(_QWORD *)(v29 + 24) = v28;
  v12[1] = (uint64_t)sub_23FC625E0;
  v12[2] = v29;
  v12[3] = (uint64_t)sub_23FC625B4;
  v12[4] = v24;
  swift_retain();
  v30 = sub_23FC62660();
  v32 = v31;
  v33 = sub_23FC58A94();
  *(_QWORD *)(v33 + 16) = v30;
  *(_QWORD *)(v33 + 24) = v32;
  sub_23FC626F8(v33, (uint64_t)sub_23FC62600);
  swift_release();
  swift_allocObject();
  sub_23FC6271C();
  sub_23FC62668();
  swift_release();
  swift_release();
  sub_23FC060D4();
}

uint64_t sub_23FC60D34()
{
  uint64_t v0;

  sub_23FC60D64();
  swift_release();
  sub_23FC5FB58(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime21DefaultEventLogSender_id);
  return v0;
}

void sub_23FC60D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;

  v2 = sub_23FC10100();
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC62604();
  v5 = sub_23FD72BE4();
  v6 = sub_23FD74F48();
  if (os_log_type_enabled(v5, v6))
  {
    *(_WORD *)sub_23FBFEFF4() = 0;
    sub_23FC626A4(&dword_23FBF8000, v5, v6, "ODPEvent Publisher finished with .cancel");
    sub_23FBFEFA0();
  }

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  sub_23FC62684();
  sub_23FC6264C();
}

uint64_t sub_23FC60E18()
{
  sub_23FC60D34();
  return swift_deallocClassInstance();
}

uint64_t sub_23FC60E3C()
{
  return type metadata accessor for DefaultEventLogSender();
}

uint64_t type metadata accessor for DefaultEventLogSender()
{
  uint64_t result;

  result = qword_256F5E850;
  if (!qword_256F5E850)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FC60E7C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionIdentityPack(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FC60F04()
{
  return sub_23FD74348();
}

uint64_t sub_23FC60F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC10370();
  sub_23FD74DC8();
  v6 = sub_23FD74DEC();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, 0, 1, v6);
  v7 = (_QWORD *)sub_23FC58AA0();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  v7[5] = v1;
  swift_retain();
  sub_23FC58D78();
  sub_23FC6126C(v2, (uint64_t)&unk_256F5E900, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_23FC60FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[4] = a4;
  v5[5] = a5;
  v6 = sub_23FD734C0();
  v5[6] = v6;
  v5[7] = *(_QWORD *)(v6 - 8);
  v5[8] = swift_task_alloc();
  v7 = sub_23FD72BF0();
  v5[9] = v7;
  v5[10] = *(_QWORD *)(v7 - 8);
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC61068()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23FD72488();
  swift_retain_n();
  v1 = sub_23FD72BE4();
  v2 = sub_23FD74F48();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 56);
    v4 = (uint8_t *)sub_23FBFEFF4();
    v14 = sub_23FBFEFF4();
    *(_DWORD *)v4 = 136315138;
    sub_23FD74144();
    v5 = sub_23FD734B4();
    v7 = v6;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v13);
    *(_QWORD *)(v0 + 24) = sub_23FC9DC40(v5, v7, &v14);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23FBF8000, v1, v2, "Sending async ODP event %s", v4, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 72);
  swift_release_n();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 32);
  sub_23FD74348();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC6126C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD74DEC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v6) == 1)
  {
    sub_23FC6233C(a1, &qword_254346A28);
  }
  else
  {
    sub_23FD74DE0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23FD74D80();
    swift_unknownObjectRelease();
  }
  v7 = sub_23FC58A94();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23FC613A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = sub_23FC10100();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  sub_23FC62604();
  v4 = sub_23FD72BE4();
  v5 = sub_23FD74F48();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)sub_23FBFEFF4();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23FBF8000, v4, v5, "Sending subscriptions is not supported (for now)", v6, 2u);
    sub_23FBFEFA0();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_23FC61468(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  os_log_type_t v15;
  uint64_t v16;

  v3 = sub_23FC10100();
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC100D4();
  v8 = (char *)(v6 - v7);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v16 - v11;
  if ((a1 & 1) != 0)
  {
    sub_23FD72488();
    v13 = sub_23FD72BE4();
    v15 = sub_23FD74F48();
    if (os_log_type_enabled(v13, v15))
    {
      *(_WORD *)sub_23FBFEFF4() = 0;
      sub_23FC626A4(&dword_23FBF8000, v13, v15, "ODPEvent Publisher finished with .completed");
LABEL_6:
      sub_23FBFEFA0();
    }
  }
  else
  {
    sub_23FD72488();
    v13 = sub_23FD72BE4();
    v14 = sub_23FD74F48();
    if (os_log_type_enabled(v13, v14))
    {
      *(_WORD *)sub_23FBFEFF4() = 0;
      sub_23FC626A4(&dword_23FBF8000, v13, v14, "ODPEvent Publisher finished with .failure");
      goto LABEL_6;
    }
    v12 = v8;
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v12, v3);
  sub_23FC62684();
  sub_23FC6264C();
}

void sub_23FC615BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[6];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[6];

  v86 = a3;
  v84 = a1;
  sub_23FBFD684(&qword_256F5E918);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFF180();
  v9 = v8 - v7;
  v10 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v75 = (uint64_t)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC62708();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFF218();
  v79 = v16;
  sub_23FC62708();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFF218();
  v77 = v19;
  sub_23FC62708();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFF218();
  v85 = v22;
  sub_23FC62708();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FBFF218();
  v82 = v25;
  v78 = v26;
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)v74 - v29;
  v83 = sub_23FBFD684(&qword_256F5E7F0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v31, v32);
  sub_23FC100D4();
  v76 = v33 - v34;
  v37 = MEMORY[0x24BDAC7A8](v35, v36);
  v39 = (_QWORD *)((char *)v74 - v38);
  MEMORY[0x24BDAC7A8](v37, v40);
  v42 = (char *)v74 - v41;
  v43 = sub_23FC10100();
  v80 = *(_QWORD *)(v43 - 8);
  v81 = v43;
  MEMORY[0x24BDAC7A8](v43, v44);
  sub_23FC62604();
  v45 = sub_23FD72BE4();
  v46 = sub_23FD74F48();
  if (os_log_type_enabled(v45, v46))
  {
    v74[2] = v9;
    v47 = sub_23FBFEFF4();
    v74[1] = v3;
    v48 = (uint8_t *)v47;
    v49 = sub_23FBFEFF4();
    v74[5] = v10;
    v88[0] = v49;
    v74[3] = v39;
    *(_DWORD *)v48 = 136315138;
    v74[4] = v42;
    v50 = sub_23FC62660();
    v87 = sub_23FC9DC40(v50, v51, v88);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v45, v46, "IN receive<S>(subscriber: S) %s", v48, 0xCu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }

  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v3, v81);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v30, v84, a2);
  sub_23FC62620(v82);
  if (sub_23FC626F0())
  {
    sub_23FC62728(v9, 0);
    v52 = v9;
    v53 = v76;
    sub_23FC62224(v52, v76);
    sub_23FC62224(v53, (uint64_t)v39);
  }
  else
  {
    sub_23FC62728(v9, 1);
    sub_23FC6233C(v9, &qword_256F5E918);
    sub_23FD7427C();
    sub_23FD74300();
    sub_23FC62620(v85);
    *v39 = sub_23FD7430C();
    sub_23FC62620(v77);
    sub_23FBFD684(&qword_256F5E920);
    sub_23FC626B0();
    v84 = v54;
    if ((sub_23FC626F0() & 1) != 0)
    {
      sub_23FC6262C();
      v55 = sub_23FC58AA0();
      sub_23FC62698(v55);
      v56 = sub_23FC62334;
    }
    else
    {
      sub_23FC626D0();
      sub_23FC62714(v57, &qword_256F5E928);
      sub_23FC626C0();
      v58 = sub_23FC62660();
      v60 = v59;
      v55 = sub_23FC58A94();
      *(_QWORD *)(v55 + 16) = v58;
      *(_QWORD *)(v55 + 24) = v60;
      v56 = sub_23FC61F00;
    }
    v39[1] = (uint64_t)v56;
    v39[2] = v55;
    v61 = v85;
    sub_23FC62620(v85);
    v62 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v63 = swift_allocObject();
    v64 = v86;
    *(_QWORD *)(v63 + 16) = a2;
    *(_QWORD *)(v63 + 24) = v64;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v63 + v62, v61, a2);
    v39[3] = (uint64_t)sub_23FC62180;
    v39[4] = v63;
    sub_23FC62620(v79);
    sub_23FBFD684(&qword_256F5E930);
    sub_23FC626B0();
    if (sub_23FC626F0())
    {
      sub_23FC6262C();
      v65 = sub_23FC58AA0();
      sub_23FC62698(v65);
      v66 = sub_23FC6232C;
    }
    else
    {
      sub_23FC626D0();
      sub_23FC62714(v67, &qword_256F5E938);
      sub_23FC62620(v75);
      sub_23FC626B0();
      if (!sub_23FC626F0())
      {
        sub_23FC626D0();
        sub_23FC62714(v68, &qword_256F5E928);
        sub_23FC626C0();
        v69 = sub_23FC62660();
        v71 = v70;
        v72 = sub_23FC58A94();
        *(_QWORD *)(v72 + 16) = v69;
        *(_QWORD *)(v72 + 24) = v71;
        v39[5] = (uint64_t)sub_23FC6221C;
        v39[6] = v72;
        goto LABEL_14;
      }
      sub_23FC6262C();
      v65 = sub_23FC58AA0();
      sub_23FC62698(v65);
      v66 = sub_23FC622E0;
    }
    v39[5] = (uint64_t)v66;
    v39[6] = v65;
  }
LABEL_14:
  sub_23FC62224((uint64_t)v39, (uint64_t)v42);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v30, a2);
  type metadata accessor for DefaultEventHandler();
  sub_23FBFF1C4();
  sub_23FC5FB94((uint64_t)v42);
  v88[0] = v73;
  sub_23FC606B8(&qword_256F5E940, (uint64_t (*)(uint64_t))type metadata accessor for DefaultEventHandler, (uint64_t)&unk_23FD76E8C);
  sub_23FD74354();
  sub_23FC060D4();
}

uint64_t sub_23FC61BD4()
{
  return sub_23FC60F04();
}

void sub_23FC61BDC(char *a1)
{
  sub_23FC61468(*a1);
}

uint64_t sub_23FC61BE4()
{
  return sub_23FC613A8();
}

void sub_23FC61BF8()
{
  sub_23FC60D64();
}

uint64_t sub_23FC61C18()
{
  return sub_23FC608A4();
}

uint64_t sub_23FC61C38()
{
  return sub_23FC60F04();
}

uint64_t sub_23FC61C58(uint64_t a1)
{
  uint64_t v1;

  sub_23FC60F34(a1);
  return sub_23FC61CD8(*(uint64_t (**)(void))(v1 + 8));
}

void sub_23FC61C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC615BC(a1, a2, a3);
}

uint64_t sub_23FC61CAC()
{
  return sub_23FC606B8(&qword_256F5E8F0, (uint64_t (*)(uint64_t))type metadata accessor for DefaultEventLogSender, (uint64_t)&unk_23FD76F18);
}

uint64_t sub_23FC61CD8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC61CE0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FC61D14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23FBFD8B8;
  return sub_23FC60FE0(a1, v4, v5, v7, v6);
}

uint64_t sub_23FC61D8C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23FC61DF0;
  return v6(a1);
}

uint64_t sub_23FC61DF0()
{
  uint64_t v0;

  sub_23FBFF004();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC61E18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FC61E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23FC61EAC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256F5E908 + dword_256F5E908))(a1, v4);
}

uint64_t sub_23FC61EAC()
{
  uint64_t v0;

  sub_23FBFF004();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC61ED0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FC61F00()
{
  uint64_t v0;

  return sub_23FC61ED0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23FC61F08(_QWORD *a1)
{
  sub_23FBFDE40(a1, a1[3]);
  return sub_23FD75344();
}

uint64_t sub_23FC61F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v24;
  __int128 v25[2];
  uint64_t v26;
  _QWORD v27[4];

  v6 = sub_23FD75488();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FBFD684(&qword_256F5E948);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21((char *)v25 - v22, a1, a4);
  sub_23FBFD684(&qword_256F5E950);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23FBFDE28(v25, (uint64_t)v27);
    sub_23FBFDE40(v27, v27[3]);
    sub_23FD751F4();
    return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v27);
  }
  else
  {
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    sub_23FC6233C((uint64_t)v25, &qword_256F5E958);
    v21(v18, a1, a4);
    v24 = sub_23FD7547C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v14, 1, 1, v24);
    sub_23FC623CC((uint64_t)v9);
    return sub_23FD75494();
  }
}

uint64_t sub_23FC62128()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_23FC62180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = sub_23FD7415C();
  return sub_23FC61F44(v3, v4, MEMORY[0x24BEE4078], v1);
}

uint64_t sub_23FC621E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  a3[3] = MEMORY[0x24BEE0D00];
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC621F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FC6221C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23FC621E0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23FC62224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5E7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC6226C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  sub_23FBFDE40(a1, a1[3]);
  result = sub_23FD75344();
  a2[3] = MEMORY[0x24BEE0D00];
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_23FC622BC()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23FC622E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23FC6226C((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23FC622E8(_QWORD *a1)
{
  sub_23FBFDE40(a1, a1[3]);
  return sub_23FD75398();
}

uint64_t sub_23FC6232C()
{
  uint64_t v0;

  return sub_23FC622E8((_QWORD *)(v0 + 16));
}

uint64_t sub_23FC62334()
{
  uint64_t v0;

  return sub_23FC61F08((_QWORD *)(v0 + 16));
}

uint64_t sub_23FC6233C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23FBFD684(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23FC62378(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    if (result)
    {
      sub_23FBFD684(&qword_256F5E960);
      result = sub_23FD74D2C();
      *(_QWORD *)(result + 16) = v1;
    }
    else
    {
      return MEMORY[0x24BEE4AF8];
    }
  }
  return result;
}

uint64_t sub_23FC623CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BEE43C0];
  v3 = sub_23FD75488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23FC62410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionIdentityPack(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23FC62454(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = sub_23FD75488();
  sub_23FC626E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC10370();
  sub_23FBFD684(&qword_256F5E948);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFF180();
  v12 = v11 - v10;
  swift_retain();
  sub_23FC62378(0);
  v13 = sub_23FD7547C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v12, 1, 1, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BEE43C0], v5);
  a2(0);
  sub_23FD75494();
  sub_23FC6264C();
}

void sub_23FC62544()
{
  uint64_t v0;

  sub_23FC62454((uint64_t)&v0, (void (*)(_QWORD))type metadata accessor for TaskStepLoggingSubscriber);
}

unint64_t sub_23FC62570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5E988;
  if (!qword_256F5E988)
  {
    v1 = sub_23FBFEDE8(&qword_256F5E980);
    result = MEMORY[0x2426797E8](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_256F5E988);
  }
  return result;
}

void sub_23FC625B4()
{
  uint64_t v0;

  sub_23FC62454((uint64_t)&v0, (void (*)(_QWORD))type metadata accessor for CurareFSServiceSubscriber);
}

uint64_t sub_23FC62604()
{
  return sub_23FD72488();
}

uint64_t sub_23FC62620(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_23FC6262C()
{
  uint64_t v0;

  sub_23FBFDE28((__int128 *)(v0 - 176), v0 - 128);
  return sub_23FBFDE28((__int128 *)(v0 - 128), v0 - 176);
}

uint64_t sub_23FC62660()
{
  return sub_23FD75500();
}

uint64_t sub_23FC62668()
{
  return sub_23FD743A8();
}

uint64_t sub_23FC62684()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23FD7433C();
}

uint64_t sub_23FC62698(uint64_t a1)
{
  uint64_t v1;

  return sub_23FBFDE28((__int128 *)(v1 - 176), a1 + 16);
}

void sub_23FC626A4(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_23FC626B0()
{
  uint64_t v0;

  return v0 - 176;
}

uint64_t sub_23FC626C0()
{
  return swift_getDynamicType();
}

double sub_23FC626D0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 144) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  return result;
}

uint64_t sub_23FC626F0()
{
  return swift_dynamicCast();
}

uint64_t sub_23FC626F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a1;
  return sub_23FC62224(v3, v2);
}

uint64_t sub_23FC62714(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_23FC6233C(v2 - 176, a2);
}

void sub_23FC6271C()
{
  uint64_t v0;

  sub_23FC5FB94(v0);
}

uint64_t sub_23FC62728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FC62738()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23FC627D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int v32;
  uint64_t v33;

  v2 = sub_23FD747F8();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v11 = (char *)&v29 - v10;
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v29 - v13;
  v15 = *(_QWORD *)(a1 + 56);
  v30 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v31 = (unint64_t)(v16 + 63) >> 6;
  v32 = *MEMORY[0x24BEB9CF8];
  v33 = a1;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  while (v18)
  {
    v21 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v22 = v21 | (v20 << 6);
LABEL_22:
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v26(v14, *(_QWORD *)(v33 + 48) + *(_QWORD *)(v3 + 72) * v22, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v14, v2);
    v26(v7, (unint64_t)v11, v2);
    LODWORD(v26) = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v2);
    v27 = *(void (**)(char *, uint64_t))(v3 + 8);
    v27(v7, v2);
    result = ((uint64_t (*)(char *, uint64_t))v27)(v11, v2);
    if ((_DWORD)v26 == v32)
    {
      v28 = 1;
LABEL_25:
      swift_release();
      return v28;
    }
  }
  v23 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v23 >= v31)
    goto LABEL_24;
  v24 = *(_QWORD *)(v30 + 8 * v23);
  ++v20;
  if (v24)
    goto LABEL_21;
  v20 = v23 + 1;
  if (v23 + 1 >= v31)
    goto LABEL_24;
  v24 = *(_QWORD *)(v30 + 8 * v20);
  if (v24)
    goto LABEL_21;
  v20 = v23 + 2;
  if (v23 + 2 >= v31)
    goto LABEL_24;
  v24 = *(_QWORD *)(v30 + 8 * v20);
  if (v24)
    goto LABEL_21;
  v20 = v23 + 3;
  if (v23 + 3 >= v31)
    goto LABEL_24;
  v24 = *(_QWORD *)(v30 + 8 * v20);
  if (v24)
  {
LABEL_21:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_22;
  }
  v25 = v23 + 4;
  if (v25 >= v31)
  {
LABEL_24:
    v28 = 0;
    goto LABEL_25;
  }
  v24 = *(_QWORD *)(v30 + 8 * v25);
  if (v24)
  {
    v20 = v25;
    goto LABEL_21;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v31)
      goto LABEL_24;
    v24 = *(_QWORD *)(v30 + 8 * v20);
    ++v25;
    if (v24)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23FC62A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_23FD74798();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v16[1] = v1;
    v19 = MEMORY[0x24BEE4AF8];
    sub_23FC9B6B0();
    v9 = v19;
    v10 = type metadata accessor for DisambiguationListItem(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v17 = *(_QWORD *)(v11 + 72);
    v18 = v10;
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v13(v7, v12 + *(int *)(v18 + 20), v3);
      v19 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      if (v14 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_23FC9B6B0();
        v9 = v19;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, v7, v3);
      v12 += v17;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void sub_23FC62BF0()
{
  swift_allocObject();
  sub_23FC62C5C();
}

uint64_t sub_23FC62C44()
{
  uint64_t v0;

  return v0;
}

void sub_23FC62C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;

  swift_defaultActor_initialize();
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23FC75FC8();
  sub_23FC75DA4();
  *(_QWORD *)(v0 + v1) = sub_23FD74B40();
  sub_23FD7157C();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ToolExecutionEventStream(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  MEMORY[0x2426797E8](&unk_23FD83280, v5);
  type metadata accessor for ToolExecution();
}

uint64_t sub_23FC62DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FC75D78();
  sub_23FC75DA4();
  sub_23FC74C30(&qword_256F5DAC8, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  *(_QWORD *)(v0 + v4) = sub_23FD74B40();
  v5 = *(_QWORD *)(v3 - 8);
  sub_23FC092BC(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104), v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v12 = v2;
  v13 = v8;
  v6 = sub_23FBFDDEC((uint64_t *)&v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v6, v9, v2);
  sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23FBFDE28(&v11, v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  sub_23FBFDE28(v10, v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  return v0;
}

uint64_t sub_23FC62E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v14)(void);

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = *v3;
  sub_23FBFD684(qword_256F5EC20);
  v4[6] = sub_23FC0901C();
  v8 = v5 + 80;
  v7 = *(_QWORD *)(v5 + 80);
  v6 = *(_QWORD *)(v8 + 8);
  v9 = (_QWORD *)sub_23FC752E8();
  v4[7] = v9;
  v10 = sub_23FC756E8(v9);
  return sub_23FC75AC0(v10, v11, v12, v7, v6, v14);
}

uint64_t sub_23FC62F28()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC62F60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(void);

  sub_23FC75AD4();
  v1 = v0[6];
  v2 = sub_23FC75FD8();
  v3 = sub_23FC100EC(v1, 1, v2);
  if (v4)
  {
    v6 = v0[3];
    v5 = v0[4];
    sub_23FC5C15C(v3, qword_256F5EC20);
    sub_23FC75764();
    sub_23FC74C30(&qword_256F5EAC0, (void (*)(uint64_t))type metadata accessor for RuntimeError);
    sub_23FC5A704();
    *v7 = v6;
    v7[1] = v5;
    swift_storeEnumTagMultiPayload();
    sub_23FC5AAE8();
    swift_willThrow();
    sub_23FC090D0();
    v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_23FC1046C(v0[2], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
    sub_23FC090D0();
    v8 = (uint64_t (*)(void))sub_23FC5C528();
  }
  return v8();
}

void sub_23FC63040(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[2];
  uint64_t v18;

  v18 = a3;
  v6 = *v3;
  swift_getAssociatedTypeWitness();
  sub_23FC76430();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23FC76848();
  v8 = sub_23FD75038();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v17[-1] - v11;
  v13 = (uint64_t *)((char *)v3 + *(_QWORD *)(v6 + 128));
  swift_beginAccess();
  v14 = *v13;
  v17[0] = a1;
  v17[1] = a2;
  sub_23FC5AAE8();
  sub_23FC5AFCC();
  MEMORY[0x242678930](v17, v14, MEMORY[0x24BEE0D00], AssociatedTypeWitness, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
  {
    sub_23FC7689C(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    type metadata accessor for RuntimeError();
    sub_23FC74C30(&qword_256F5EAC0, (void (*)(uint64_t))type metadata accessor for RuntimeError);
    sub_23FC7565C();
    *v15 = a1;
    v15[1] = a2;
    swift_storeEnumTagMultiPayload();
    sub_23FC5AAE8();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v18, v12, AssociatedTypeWitness);
  }
  sub_23FC06000();
}

void sub_23FC63208(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  sub_23FD73730();
  sub_23FC768F4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFF180();
  v8 = (uint64_t *)(v7 - v6);
  sub_23FC766E0(v7 - v6);
  v9 = sub_23FC5CCE8();
  v11 = v10(v9);
  if (v11 == *MEMORY[0x24BE559A0])
  {
    sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    v13 = *v8;
    v12 = v8[1];
    swift_getAssociatedTypeWitness();
    sub_23FC5C5C0();
    swift_getAssociatedConformanceWitness();
    sub_23FC76430();
    a1[3] = swift_getAssociatedTypeWitness();
    a1[4] = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
    v14 = sub_23FBFDDEC(a1);
    sub_23FC63040(v13, v12, (uint64_t)v14);
    swift_bridgeObjectRelease();
    if (v1)
      sub_23FC58294((uint64_t)a1);
  }
  else if (v11 == *MEMORY[0x24BE55998])
  {
    sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    v15 = sub_23FD74798();
    v16 = MEMORY[0x24BEB9A10];
    a1[3] = v15;
    a1[4] = v16;
    v17 = sub_23FBFDDEC(a1);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v17, v8, v15);
  }
  else
  {
    type metadata accessor for RuntimeError();
    sub_23FC74C30(&qword_256F5EAC0, (void (*)(uint64_t))type metadata accessor for RuntimeError);
    sub_23FC7565C();
    sub_23FC766E0(v18);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_23FC06000();
}

void sub_23FC63414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v8 + 120) = a7;
  *(_QWORD *)(v8 + 128) = v7;
  *(_BYTE *)(v8 + 1205) = a6;
  *(_BYTE *)(v8 + 1204) = a5;
  *(_QWORD *)(v8 + 104) = a3;
  *(_QWORD *)(v8 + 112) = a4;
  *(_QWORD *)(v8 + 88) = a1;
  *(_QWORD *)(v8 + 96) = a2;
  v9 = sub_23FD71B7C();
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 152) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 160) = sub_23FC5C588();
  v10 = sub_23FD71D44();
  *(_QWORD *)(v8 + 168) = v10;
  *(_QWORD *)(v8 + 176) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 184) = sub_23FC0901C();
  v11 = sub_23FD71D5C();
  *(_QWORD *)(v8 + 192) = v11;
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 208) = sub_23FC0901C();
  v12 = sub_23FD71D68();
  *(_QWORD *)(v8 + 216) = v12;
  *(_QWORD *)(v8 + 224) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 232) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EB08);
  *(_QWORD *)(v8 + 240) = sub_23FC0901C();
  v13 = sub_23FD71FE4();
  *(_QWORD *)(v8 + 248) = v13;
  *(_QWORD *)(v8 + 256) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 264) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EB28);
  *(_QWORD *)(v8 + 272) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 280) = sub_23FC5C588();
  *(_QWORD *)(v8 + 288) = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EAE8);
  *(_QWORD *)(v8 + 296) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 304) = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EBD8);
  *(_QWORD *)(v8 + 312) = sub_23FC0901C();
  v14 = sub_23FC76568();
  *(_QWORD *)(v8 + 320) = v14;
  *(_QWORD *)(v8 + 328) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v8 + 336) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 344) = sub_23FC5C588();
  v15 = sub_23FC76840();
  *(_QWORD *)(v8 + 352) = v15;
  *(_QWORD *)(v8 + 360) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v8 + 368) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 376) = sub_23FC5C588();
  v16 = sub_23FC76818();
  *(_QWORD *)(v8 + 384) = v16;
  *(_QWORD *)(v8 + 392) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v8 + 400) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 408) = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EBE0);
  *(_QWORD *)(v8 + 416) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 424) = sub_23FC5C588();
  v17 = sub_23FC10100();
  *(_QWORD *)(v8 + 432) = v17;
  *(_QWORD *)(v8 + 440) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v8 + 448) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 456) = sub_23FC5C588();
  v18 = sub_23FD71474();
  *(_QWORD *)(v8 + 464) = v18;
  *(_QWORD *)(v8 + 472) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v8 + 480) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EBE8);
  *(_QWORD *)(v8 + 488) = sub_23FC0901C();
  *(_QWORD *)(v8 + 496) = type metadata accessor for TypedValueUndoContext(0);
  *(_QWORD *)(v8 + 504) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAF0);
  *(_QWORD *)(v8 + 512) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 520) = sub_23FC5C588();
  v19 = sub_23FC10290();
  *(_QWORD *)(v8 + 528) = v19;
  *(_QWORD *)(v8 + 536) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v8 + 544) = sub_23FC5C13C();
  *(_QWORD *)(v8 + 552) = sub_23FC5C588();
  *(_QWORD *)(v8 + 560) = sub_23FC5C588();
  *(_QWORD *)(v8 + 568) = sub_23FC5C588();
  *(_QWORD *)(v8 + 576) = sub_23FC5C588();
  *(_QWORD *)(v8 + 584) = sub_23FC5C588();
  *(_QWORD *)(v8 + 592) = sub_23FC5C588();
  *(_QWORD *)(v8 + 600) = sub_23FC5C588();
  *(_QWORD *)(v8 + 608) = sub_23FC5C588();
  sub_23FC76264();
  *(_QWORD *)(v8 + 616) = sub_23FC761D8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 624) = AssociatedTypeWitness;
  v21 = sub_23FC76854();
  *(_QWORD *)(v8 + 632) = v21;
  *(_QWORD *)(v8 + 640) = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v8 + 648) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EB98);
  *(_QWORD *)(v8 + 656) = sub_23FC75A5C();
  *(_QWORD *)(v8 + 664) = sub_23FC75A5C();
  *(_QWORD *)(v8 + 672) = sub_23FC75A5C();
  *(_QWORD *)(v8 + 680) = sub_23FC75A5C();
  *(_QWORD *)(v8 + 688) = sub_23FC75A5C();
  *(_QWORD *)(v8 + 696) = sub_23FBFD684(&qword_256F5EB18);
  *(_QWORD *)(v8 + 704) = sub_23FC75A5C();
  *(_QWORD *)(v8 + 712) = sub_23FC75A5C();
  *(_QWORD *)(v8 + 720) = sub_23FC75A5C();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v8 + 728) = AssociatedConformanceWitness;
  v23 = sub_23FC76848();
  v26 = type metadata accessor for TypedValueExecutionResult(v23, v24, AssociatedConformanceWitness, v25);
  *(_QWORD *)(v8 + 736) = v26;
  *(_QWORD *)(v8 + 744) = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v8 + 752) = sub_23FC76894();
  *(_QWORD *)(v8 + 760) = sub_23FC76894();
  *(_QWORD *)(v8 + 768) = sub_23FC76894();
  v28 = type metadata accessor for ToolExecutionEventStream(255, AssociatedTypeWitness, AssociatedConformanceWitness, v27);
  v29 = MEMORY[0x2426797E8](&unk_23FD83280, v28);
  *(_QWORD *)(v8 + 16) = AssociatedTypeWitness;
  *(_QWORD *)(v8 + 24) = v28;
  *(_QWORD *)(v8 + 32) = AssociatedConformanceWitness;
  sub_23FC7660C(v29);
}

uint64_t sub_23FC63844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10[97] = a1;
  v10[98] = *(_QWORD *)(a1 - 8);
  v10[99] = sub_23FC0901C();
  v11 = sub_23FC767EC();
  v10[100] = v11;
  v10[101] = *(_QWORD *)(v11 - 8);
  v10[102] = sub_23FC0901C();
  v12 = (_QWORD *)sub_23FC752E8();
  v10[103] = v12;
  v13 = sub_23FC756E8(v12);
  return sub_23FC75F28(v13, v14, v15, a10);
}

uint64_t sub_23FC638B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 832) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC63904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t *v56;
  uint64_t EnumCaseMultiPayload;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_23FC75280();
  sub_23FC5A8C8(v56[99], v56[12], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56[98] + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23FC6396C + 4 * word_23FD77000[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v58, v59, v60, v61, v62, v63, v64, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_23FC6396C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(void);

  v2 = v0[102];
  v3 = v0[101];
  *(_QWORD *)(v1 - 112) = v0[100];
  *(_QWORD *)(v1 - 104) = v2;
  v4 = v0[99];
  v5 = v0[41];
  v6 = v0[42];
  v7 = v0[40];
  v8 = v0[37];
  v9 = *(_QWORD *)(v4 + 8);
  v10 = *(void **)(v4 + 16);
  swift_bridgeObjectRelease();
  sub_23FC7621C();
  sub_23FD74B40();
  sub_23FD71CE4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, *MEMORY[0x24BE532D8], v7);
  sub_23FC67F4C(v9, v10, v8);
  sub_23FD73A00();
  sub_23FC102FC();

  (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 112));
  sub_23FC74F74();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  v11 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75070(v11);
}

void sub_23FC6450C()
{
  sub_23FBFEFA0();
}

void sub_23FC64514()
{
  void *v0;

  JUMPOUT(0x23FC645ECLL);
}

void sub_23FC647EC()
{
  sub_23FBFEFA0();
}

void sub_23FC647F4()
{
  void *v0;

  JUMPOUT(0x23FC64828);
}

uint64_t sub_23FC64C8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 848) = v1;
  swift_task_dealloc();
  if (!v1)
    sub_23FC090C8(*(_QWORD *)(*(_QWORD *)(v0 + 624) - 8));
  return sub_23FC5A63C();
}

uint64_t sub_23FC64CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t (*a50)(void))
{
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(void);
  unint64_t v132;
  uint64_t v133;
  uint64_t v135;

  sub_23FC75280();
  v54 = v51[106];
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v51[86], 0, 1, v51[66]);
  if (sub_23FD74450() == 0xD000000000000033 && v55 == 0x800000023FD83700)
  {
    sub_23FC76468();
  }
  else
  {
    v56 = sub_23FC75B98();
    sub_23FC1002C();
    if ((v56 & 1) == 0)
      goto LABEL_6;
  }
  sub_23FC76000();
  v52 = &qword_256F5EB98;
  sub_23FC76278();
  sub_23FC75D88();
LABEL_6:
  v58 = v51[84];
  v59 = v51[66];
  sub_23FC7673C(v51[86], v57, &qword_256F5EB98);
  sub_23FC768D0();
  if (!v117)
  {
    sub_23FC75DE0(v60);
    v64 = (_QWORD *)sub_23FC75410(*(int **)(v58 + 88));
    v51[107] = v64;
    v65 = sub_23FC76144(v64);
    return sub_23FC758FC(v65, v66, v67, v68, a50);
  }
  sub_23FC584B0(v60, &qword_256F5EB98);
  v61 = sub_23FC75A1C();
  sub_23FC75738(v61, v62, &qword_256F5EBE8);
  sub_23FC752FC(v59);
  if (v117)
  {
    sub_23FC584B0(v51[61], &qword_256F5EBE8);
  }
  else
  {
    v70 = v51[62];
    v71 = v51[63];
    sub_23FC76734(v51[61], v63, type metadata accessor for TypedValueUndoContext);
    v72 = *(uint64_t **)(v71 + *(int *)(v70 + 20) + 8);
    if (v72)
    {
      sub_23FC75918();
      sub_23FC5AAE8();
      sub_23FC75E34();
      sub_23FC75E3C();
      sub_23FC5806C(v53, type metadata accessor for TypedValueUndoContext);
      v73 = sub_23FC75DB0();
      sub_23FC103A0((uint64_t)v52, 0, v74, v73);
      sub_23FC7672C((uint64_t)v52, v75, &qword_256F5EAF0);
      goto LABEL_17;
    }
    sub_23FC5806C(v51[63], type metadata accessor for TypedValueUndoContext);
  }
  v76 = v51[96];
  v72 = (uint64_t *)v51[95];
  v50 = v51[93];
  sub_23FC75BF4();
  sub_23FC760E4();
  sub_23FC768A8();
  v77 = sub_23FC75640();
  if (sub_23FC753CC(v77))
  {
    v135 = v51[93];
    v78 = (uint8_t *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    sub_23FC75958(4.8149e-34);
    v79 = sub_23FC7677C();
    v51[10] = sub_23FC76174(v79, v80);
    sub_23FC75CD4();
    sub_23FC595E0();
    sub_23FC75DD4(*(uint64_t (**)(uint64_t, uint64_t))(v135 + 8));
    sub_23FBFF114(&dword_23FBF8000, v76, (os_log_type_t)v53, "DefaultRuntime: Unable to find undo context for %s", v78);
    sub_23FC754FC();
    sub_23FBFEFA0();
  }
  sub_23FC75DB8();

  v81 = sub_23FBFF1AC();
  v82(v81);
  v71 = v51[65];
  v83 = sub_23FC75DB0();
  sub_23FBFF0F8(v71, v84, v85, v83);
LABEL_17:
  sub_23FC75700();
  sub_23FC767CC(MEMORY[0x24BEE4B00]);
  if (v50)
  {
    sub_23FC76520();
LABEL_19:
    sub_23FC75D54(v86, v87);
    v88 = sub_23FBFD684(&qword_256F5DAD0);
    sub_23FC75694(v88);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v71, 0, 1, v53);
    sub_23FC10108();
    goto LABEL_25;
  }
  sub_23FC76510();
  if (!v117 & v91)
  {
    if (!v89[9])
    {
      if (v90 < 0xC0)
        goto LABEL_24;
      if (!v89[10])
      {
        if (v90 < 0x100)
          goto LABEL_24;
        if (!v89[11])
        {
          if (v90 < 0x140)
            goto LABEL_24;
          if (!v89[12])
          {
            v132 = v90 >> 6;
            v133 = 13;
            while (v133 - 8 < v132)
            {
              if (v89[v133++])
                goto LABEL_23;
            }
            goto LABEL_24;
          }
        }
      }
    }
LABEL_23:
    sub_23FC75AE8();
    goto LABEL_19;
  }
LABEL_24:
  v92 = sub_23FBFD684(&qword_256F5DAD0);
  sub_23FC75B00(v92);
LABEL_25:
  v93 = sub_23FC764F0();
  sub_23FC76860(v93, v94, &qword_256F5EBE0);
  v95 = sub_23FBFD684(&qword_256F5DAD0);
  sub_23FC752FC((uint64_t)v72);
  if (v117)
  {
    sub_23FC75FEC();
    sub_23FC75738(v95, v96, &qword_256F5EB98);
    sub_23FC75F80();
    if (v117)
    {
      v50 = sub_23FC75FD0();
      v53 = swift_allocBox();
      sub_23FC76410(v97, *MEMORY[0x24BEB9940]);
      *v72 = v53;
      v98 = sub_23FC5A8C8((uint64_t)v72, *MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 104));
      sub_23FC5C15C(v98, &qword_256F5EB98);
    }
    else
    {
      sub_23FC5A8C8((uint64_t)v72, v95, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32));
    }
    sub_23FC76400();
    if (v50)
    {
      sub_23FC75D00();
      v100 = sub_23FC76580();
      sub_23FBFF0F8(v95, v101, v102, v100);
    }
    v103 = sub_23FC755C8();
    sub_23FC7601C(v103, v104, v105, v106, v107);
    v108 = sub_23FC595E0();
    sub_23FC768B0(v108, &qword_256F5EBD8);
    sub_23FC75C9C(v53, v109, &qword_256F5EAF0);
    v110 = sub_23FC75994();
    sub_23FC76448(v110, *MEMORY[0x24BE53328]);
    sub_23FC75738(v54, v111, &qword_256F5EB18);
    v112 = sub_23FC76578();
    sub_23FC100EC((uint64_t)v72, 1, v112);
    if (v117)
    {
      sub_23FC584B0(v51[89], &qword_256F5EB18);
    }
    else
    {
      v113 = sub_23FC7554C();
      v114 = sub_23FC5AFCC();
      sub_23FC75B4C(v114, type metadata accessor for ResultResponse);
      sub_23FC75C20(v115, v116, &qword_256F5EB18);
      v118 = sub_23FC7550C();
      if (v117)
      {
        sub_23FC75A14(v118, &qword_256F5EB18);
        v119 = sub_23FC76224();
        sub_23FBFF0F8(v54, v120, v121, v119);
      }
      else
      {
        v122 = sub_23FC76720();
        sub_23FC75C9C(v122, v123, &qword_256F5EB28);
        sub_23FC75B4C(v124, type metadata accessor for ResultResponse);
      }
      sub_23FC76714();
      sub_23FC75680(MEMORY[0x24BEE4AF8], v125);
      sub_23FC1002C();

      sub_23FC5F290(v126, &qword_256F5EB28);
    }
    v127 = sub_23FC752A8();
    v128 = sub_23FC753A0(v127);
    sub_23FC5F384(v128, &qword_256F5EAF0);
    sub_23FC75A14(v129, &qword_256F5EB98);
    sub_23FC75C2C(v130, &qword_256F5EB18);
    sub_23FC5B3B0(a47, (uint64_t (*)(uint64_t, uint64_t))v52[1]);
    sub_23FC763E0();
    sub_23FC74F74();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5A574();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC5B2D4();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v131 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC75070(v131);
  }
  else
  {
    sub_23FC751B4();
    sub_23FC75CA4();
    v99 = (_QWORD *)swift_task_alloc();
    sub_23FC758A8(v99);
    return sub_23FC754AC();
  }
}

uint64_t sub_23FC65400()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 864) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC65450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(void);
  unint64_t v118;
  uint64_t v119;
  uint64_t v121;

  sub_23FC75280();
  v49 = v47[83];
  v50 = v47[66];
  sub_23FC595C4(v47[76], *(uint64_t (**)(uint64_t, uint64_t))(v47[67] + 8));
  sub_23FC76278();
  sub_23FC766C0(v49, 0);
  sub_23FC75D88();
  v51 = v47[108];
  v52 = sub_23FC75A1C();
  sub_23FC75738(v52, v53, &qword_256F5EBE8);
  sub_23FC752FC(v49);
  if (v103)
  {
    sub_23FC584B0(v47[61], &qword_256F5EBE8);
  }
  else
  {
    v55 = v47[62];
    v56 = v47[63];
    sub_23FC76734(v47[61], v54, type metadata accessor for TypedValueUndoContext);
    v57 = *(uint64_t **)(v56 + *(int *)(v55 + 20) + 8);
    if (v57)
    {
      sub_23FC75918();
      sub_23FC5AAE8();
      sub_23FC75E34();
      sub_23FC75E3C();
      sub_23FC5806C(v48, type metadata accessor for TypedValueUndoContext);
      v58 = sub_23FC75DB0();
      sub_23FC103A0((uint64_t)&qword_256F5EB98, 0, v59, v58);
      sub_23FC7672C((uint64_t)&qword_256F5EB98, v60, &qword_256F5EAF0);
      goto LABEL_10;
    }
    sub_23FC5806C(v47[63], type metadata accessor for TypedValueUndoContext);
  }
  v61 = v47[96];
  v57 = (uint64_t *)v47[95];
  v50 = v47[93];
  sub_23FC75BF4();
  sub_23FC760E4();
  sub_23FC768A8();
  v62 = sub_23FC75640();
  if (sub_23FC753CC(v62))
  {
    v121 = v47[93];
    v63 = (uint8_t *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    sub_23FC75958(4.8149e-34);
    v64 = sub_23FC7677C();
    v47[10] = sub_23FC76174(v64, v65);
    sub_23FC75CD4();
    sub_23FC595E0();
    sub_23FC75DD4(*(uint64_t (**)(uint64_t, uint64_t))(v121 + 8));
    sub_23FBFF114(&dword_23FBF8000, v61, (os_log_type_t)v48, "DefaultRuntime: Unable to find undo context for %s", v63);
    sub_23FC754FC();
    sub_23FBFEFA0();
  }
  sub_23FC75DB8();

  v66 = sub_23FBFF1AC();
  v67(v66);
  v56 = v47[65];
  v68 = sub_23FC75DB0();
  sub_23FBFF0F8(v56, v69, v70, v68);
LABEL_10:
  sub_23FC75700();
  sub_23FC767CC(MEMORY[0x24BEE4B00]);
  if (v50)
  {
    sub_23FC76520();
LABEL_12:
    sub_23FC75D54(v71, v72);
    v73 = sub_23FBFD684(&qword_256F5DAD0);
    sub_23FC75694(v73);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v56, 0, 1, v48);
    sub_23FC10108();
    goto LABEL_18;
  }
  sub_23FC76510();
  if (!v103 & v76)
  {
    if (!v74[9])
    {
      if (v75 < 0xC0)
        goto LABEL_17;
      if (!v74[10])
      {
        if (v75 < 0x100)
          goto LABEL_17;
        if (!v74[11])
        {
          if (v75 < 0x140)
            goto LABEL_17;
          if (!v74[12])
          {
            v118 = v75 >> 6;
            v119 = 13;
            while (v119 - 8 < v118)
            {
              if (v74[v119++])
                goto LABEL_16;
            }
            goto LABEL_17;
          }
        }
      }
    }
LABEL_16:
    sub_23FC75AE8();
    goto LABEL_12;
  }
LABEL_17:
  v77 = sub_23FBFD684(&qword_256F5DAD0);
  sub_23FC75B00(v77);
LABEL_18:
  v78 = sub_23FC764F0();
  sub_23FC76860(v78, v79, &qword_256F5EBE0);
  v80 = sub_23FBFD684(&qword_256F5DAD0);
  sub_23FC752FC((uint64_t)v57);
  if (v103)
  {
    sub_23FC75FEC();
    sub_23FC75738(v80, v81, &qword_256F5EB98);
    sub_23FC75F80();
    if (v103)
    {
      v50 = sub_23FC75FD0();
      v48 = swift_allocBox();
      sub_23FC76410(v82, *MEMORY[0x24BEB9940]);
      *v57 = v48;
      v83 = sub_23FC5A8C8((uint64_t)v57, *MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 104));
      sub_23FC5C15C(v83, &qword_256F5EB98);
    }
    else
    {
      sub_23FC5A8C8((uint64_t)v57, v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32));
    }
    sub_23FC76400();
    if (v50)
    {
      sub_23FC75D00();
      v86 = sub_23FC76580();
      sub_23FBFF0F8(v80, v87, v88, v86);
    }
    v89 = sub_23FC755C8();
    sub_23FC7601C(v89, v90, v91, v92, v93);
    v94 = sub_23FC595E0();
    sub_23FC768B0(v94, &qword_256F5EBD8);
    sub_23FC75C9C(v48, v95, &qword_256F5EAF0);
    v96 = sub_23FC75994();
    sub_23FC76448(v96, *MEMORY[0x24BE53328]);
    sub_23FC75738(v51, v97, &qword_256F5EB18);
    v98 = sub_23FC76578();
    sub_23FC100EC((uint64_t)v57, 1, v98);
    if (v103)
    {
      sub_23FC584B0(v47[89], &qword_256F5EB18);
    }
    else
    {
      v99 = sub_23FC7554C();
      v100 = sub_23FC5AFCC();
      sub_23FC75B4C(v100, type metadata accessor for ResultResponse);
      sub_23FC75C20(v101, v102, &qword_256F5EB18);
      v104 = sub_23FC7550C();
      if (v103)
      {
        sub_23FC75A14(v104, &qword_256F5EB18);
        v105 = sub_23FC76224();
        sub_23FBFF0F8(v51, v106, v107, v105);
      }
      else
      {
        v108 = sub_23FC76720();
        sub_23FC75C9C(v108, v109, &qword_256F5EB28);
        sub_23FC75B4C(v110, type metadata accessor for ResultResponse);
      }
      sub_23FC76714();
      sub_23FC75680(MEMORY[0x24BEE4AF8], v111);
      sub_23FC1002C();

      sub_23FC5F290(v112, &qword_256F5EB28);
    }
    v113 = sub_23FC752A8();
    v114 = sub_23FC753A0(v113);
    sub_23FC5F384(v114, &qword_256F5EAF0);
    sub_23FC75A14(v115, &qword_256F5EB98);
    sub_23FC75C2C(v116, &qword_256F5EB18);
    sub_23FC5B3B0(a47, (uint64_t (*)(uint64_t, uint64_t))qword_256F5EBA0);
    sub_23FC763E0();
    sub_23FC74F74();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5A574();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC5B2D4();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5D7FC();
    sub_23FC5C114();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v117 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC75070(v117);
  }
  else
  {
    sub_23FC751B4();
    sub_23FC75CA4();
    v84 = (_QWORD *)swift_task_alloc();
    sub_23FC758A8(v84);
    return sub_23FC754AC();
  }
}

uint64_t sub_23FC65AC0()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC75AD4();
  sub_23FC75EF0();
  sub_23FC75274(v2);
  v1[115] = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = v1[47];
    v4 = v1[45];
    swift_bridgeObjectRelease();
    sub_23FC595C4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23FC1002C();
  }
  else
  {
    sub_23FC090C8(v1[45]);
  }
  return sub_23FC75184();
}

uint64_t sub_23FC65B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(unint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(void);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  sub_23FC758C4();
  v1 = *(_QWORD *)(v0 + 872);
  v2 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 536) + 32);
  v2(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 528));
  swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 72) = v1;
  v3 = sub_23FC5E714();
  result = sub_23FC84D84(v3, v4);
  if (__OFADD__(*(_QWORD *)(v1 + 16), (v6 & 1) == 0))
  {
    __break(1u);
    goto LABEL_47;
  }
  v7 = result;
  v8 = v6;
  sub_23FBFD684(&qword_256F5EC10);
  if ((sub_23FD75200() & 1) != 0)
  {
    v9 = sub_23FC84D84(*(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 904));
    if ((v8 & 1) != (v10 & 1))
      return sub_23FD753C8();
    v7 = v9;
  }
  v11 = *(_QWORD **)(v0 + 72);
  if ((v8 & 1) != 0)
  {
    (*(void (**)(unint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 40))(v11[7] + *(_QWORD *)(*(_QWORD *)(v0 + 536) + 72) * v7, *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 528));
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v0 + 904);
  v13 = *(_QWORD *)(v0 + 896);
  v14 = *(_QWORD *)(v0 + 592);
  v15 = *(_QWORD *)(v0 + 536);
  v16 = *(_QWORD *)(v0 + 528);
  v11[(v7 >> 6) + 8] |= 1 << v7;
  v17 = (_QWORD *)(v11[6] + 16 * v7);
  *v17 = v13;
  v17[1] = v12;
  result = v2(v11[7] + *(_QWORD *)(v15 + 72) * v7, v14, v16);
  v18 = v11[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v11[2] = v20;
  swift_bridgeObjectRetain();
LABEL_10:
  v21 = *(_QWORD *)(v0 + 408);
  v22 = *(_QWORD *)(v0 + 392);
  v23 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  sub_23FC1002C();
  result = sub_23FC5B3B0(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  v100 = v23;
  v102 = *(_QWORD *)(v0 + 920);
  v24 = *(_QWORD *)(v0 + 888);
  v25 = *(_QWORD *)(v0 + 880);
  *(_QWORD *)(v0 + 872) = v23;
  if (v24)
  {
    v26 = v0 + 72;
    v27 = (v24 - 1) & v24;
    v28 = __clz(__rbit64(v24)) | (v25 << 6);
    v29 = *(_QWORD *)(v0 + 112);
LABEL_12:
    v30 = *(_QWORD **)(v0 + 416);
    v31 = *(_QWORD *)(v0 + 392);
    v32 = (_QWORD *)(*(_QWORD *)(v29 + 48) + 16 * v28);
    v33 = v32[1];
    *v30 = *v32;
    v30[1] = v33;
    v34 = *(_QWORD *)(v29 + 56) + *(_QWORD *)(v31 + 72) * v28;
    v35 = sub_23FBFD684(&qword_256F5DAD0);
    sub_23FC092BC((uint64_t)v30 + *(int *)(v35 + 48), v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v30, 0, 1, v35);
    sub_23FC5B578();
    goto LABEL_31;
  }
  v37 = v25 + 1;
  if (__OFADD__(v25, 1))
    goto LABEL_48;
  v38 = (1 << *(_BYTE *)(v0 + 1206)) + 63;
  if (v37 < (uint64_t)(v38 >> 6))
  {
    v29 = *(_QWORD *)(v0 + 112);
    v39 = v29 + 64;
    v40 = *(_QWORD *)(v29 + 64 + 8 * v37);
    if (v40)
    {
LABEL_16:
      v26 = v0 + 72;
      v27 = (v40 - 1) & v40;
      v28 = __clz(__rbit64(v40)) + (v37 << 6);
      v25 = v37;
      goto LABEL_12;
    }
    v41 = v38 >> 6;
    v42 = v25 + 2;
    ++v25;
    if (v37 + 1 < v41)
    {
      v40 = *(_QWORD *)(v39 + 8 * v42);
      if (v40)
      {
LABEL_19:
        v37 = v42;
        goto LABEL_16;
      }
      v25 = v37 + 1;
      if (v37 + 2 < v41)
      {
        v40 = *(_QWORD *)(v39 + 8 * (v37 + 2));
        if (v40)
        {
          v37 += 2;
          goto LABEL_16;
        }
        v42 = v37 + 3;
        v25 = v37 + 2;
        if (v37 + 3 < v41)
        {
          v40 = *(_QWORD *)(v39 + 8 * v42);
          if (v40)
            goto LABEL_19;
          while (1)
          {
            v37 = v42 + 1;
            if (__OFADD__(v42, 1))
              break;
            if (v37 >= v41)
            {
              v25 = v41 - 1;
              goto LABEL_30;
            }
            v40 = *(_QWORD *)(v39 + 8 * v37);
            ++v42;
            if (v40)
              goto LABEL_16;
          }
LABEL_49:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_30:
  v26 = v0 + 72;
  v43 = *(_QWORD *)(v0 + 416);
  v44 = sub_23FBFD684(&qword_256F5DAD0);
  sub_23FBFF0F8(v43, v45, v46, v44);
  v27 = 0;
LABEL_31:
  *(_QWORD *)(v0 + 888) = v27;
  *(_QWORD *)(v0 + 880) = v25;
  v47 = *(_QWORD *)(v0 + 424);
  sub_23FC7688C(*(_QWORD *)(v0 + 416), v36, &qword_256F5EBE0);
  sub_23FBFD684(&qword_256F5DAD0);
  sub_23FC752FC(v47);
  if (v78)
  {
    v48 = *(_QWORD *)(v0 + 688);
    v49 = *(_QWORD *)(v0 + 656);
    v50 = *(_QWORD *)(v0 + 528);
    swift_release();
    sub_23FC74908(v48, v49, &qword_256F5EB98);
    v51 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v49, 1, v50);
    v52 = *(_QWORD *)(v0 + 656);
    v53 = *(uint64_t **)(v0 + 584);
    v54 = *(_QWORD *)(v0 + 536);
    if (v51 == 1)
    {
      v55 = sub_23FC75FD0();
      v56 = swift_allocBox();
      sub_23FBFF1E4(v57, *MEMORY[0x24BEB9940], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104));
      *v53 = v56;
      v58 = sub_23FC5AE8C((uint64_t)v53, *MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 104));
      sub_23FC5C15C(v58, &qword_256F5EB98);
    }
    else
    {
      sub_23FC5AE8C(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 656), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32));
    }
    v60 = (_BYTE *)(v26 + 1132);
    sub_23FD740FC();
    if (v102)
    {
      sub_23FC75D00();
      v61 = sub_23FC76580();
      sub_23FBFF0F8(v52, v62, v63, v61);
    }
    v103 = *(_QWORD *)(v0 + 720);
    v64 = *(_QWORD *)(v0 + 712);
    v65 = *(_QWORD *)(v0 + 520);
    v66 = *(_QWORD *)(v0 + 344);
    v67 = *(_QWORD *)(v0 + 328);
    v98 = *(_QWORD *)(v0 + 320);
    v68 = *(_QWORD *)(v0 + 312);
    sub_23FD4A58C(v60[1], (*v60 & 1) == 0, v100, v68, *(_QWORD *)(v0 + 120));
    sub_23FC102FC();
    sub_23FC584B0(v68, &qword_256F5EBD8);
    v69 = sub_23FC5C5C0();
    sub_23FC74908(v69, v70, v71);
    sub_23FD716B4();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v67 + 104))(v66, *MEMORY[0x24BE53328], v98);
    sub_23FC75738(v103, v72, &qword_256F5EB18);
    v73 = sub_23FC76578();
    sub_23FC100EC(v64, 1, v73);
    if (v78)
    {
      sub_23FC584B0(*(_QWORD *)(v0 + 712), &qword_256F5EB18);
    }
    else
    {
      v74 = sub_23FC7554C();
      v75 = sub_23FC5AFCC();
      sub_23FC75B4C(v75, type metadata accessor for ResultResponse);
      sub_23FC75C20(v76, v77, &qword_256F5EB18);
      v79 = sub_23FC7550C();
      if (v78)
      {
        sub_23FC75A14(v79, &qword_256F5EB18);
        v80 = sub_23FC76224();
        sub_23FBFF0F8(v65, v81, v82, v80);
      }
      else
      {
        v83 = sub_23FC76720();
        sub_23FC75C9C(v83, v84, &qword_256F5EB28);
        sub_23FC75B4C(v85, type metadata accessor for ResultResponse);
      }
      sub_23FC76714();
      sub_23FC75680(MEMORY[0x24BEE4AF8], v86);
      sub_23FC1002C();

      sub_23FC5F290(v87, &qword_256F5EB28);
    }
    sub_23FC765D0();
    v101 = v88;
    v104 = v89;
    v97 = *(_QWORD *)(v0 + 768);
    v99 = v90;
    v91 = *(_QWORD *)(v0 + 744);
    v92 = sub_23FC75580();
    v93 = sub_23FC753A0(v92);
    sub_23FC5F384(v93, &qword_256F5EAF0);
    sub_23FC75A14(v94, &qword_256F5EB98);
    sub_23FC75C2C(v95, &qword_256F5EB18);
    sub_23FC5B3B0(v97, *(uint64_t (**)(uint64_t, uint64_t))(v91 + 8));
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v104, v101);
    swift_task_dealloc();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5A574();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5B2F4();
    sub_23FC5B2D4();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    sub_23FC5D82C();
    sub_23FC5D824();
    sub_23FC5D81C();
    sub_23FC5D814();
    sub_23FC5D80C();
    sub_23FC5D804();
    sub_23FC5BFD0();
    sub_23FC5BFC8();
    sub_23FC5BFB8();
    sub_23FC5BFB0();
    sub_23FC5C06C();
    sub_23FC5BFA8();
    sub_23FC5BFA0();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    sub_23FC5CDA8();
    v96 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC75198(v96);
  }
  else
  {
    sub_23FC751B4();
    sub_23FC75CA4();
    v59 = (_QWORD *)swift_task_alloc();
    sub_23FC758A8(v59);
    return sub_23FC67880();
  }
}

uint64_t sub_23FC663D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  sub_23FC756B0();
  sub_23FC75274(v4);
  *(_QWORD *)(v2 + 984) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    sub_23FC1002C();
  else
    *(_QWORD *)(v2 + 992) = a1;
  return sub_23FC75178();
}

uint64_t sub_23FC66450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(void);

  sub_23FC758C4();
  v4 = *(void **)(v1 + 944);
  sub_23FC75588();
  sub_23FC761B0();
  sub_23FBFF1E4(v3, *MEMORY[0x24BE53308], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23FC76194();
  sub_23FC760BC();
  sub_23FC103E8();

  sub_23FC10000(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23FC75940();
  sub_23FC74E50();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v5 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75198(v5);
}

uint64_t sub_23FC66598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  sub_23FC756B0();
  sub_23FC75274(v4);
  *(_QWORD *)(v2 + 1056) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    sub_23FC1002C();
  else
    *(_QWORD *)(v2 + 1064) = a1;
  return sub_23FC75178();
}

uint64_t sub_23FC66618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(void);

  sub_23FC758C4();
  v4 = *(void **)(v1 + 1016);
  sub_23FC75588();
  sub_23FC761B0();
  sub_23FBFF1E4(v3, *MEMORY[0x24BE53308], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23FC76194();
  sub_23FC760BC();
  sub_23FC103E8();

  sub_23FC10000(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23FC75940();
  sub_23FC74E50();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v5 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75198(v5);
}

uint64_t sub_23FC66760()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_23FC5D3A4();
  sub_23FC75274(v3);
  v0[140] = v1;
  swift_task_dealloc();
  sub_23FC090C8(v0[45]);
  if (v1)
  {
    sub_23FC1002C();
    sub_23FC5F38C();
    return sub_23FC75178();
  }
  else
  {
    v5 = (_QWORD *)sub_23FC752E8();
    v0[141] = (uint64_t)v5;
    *v5 = v2;
    v5[1] = sub_23FC66808;
    return sub_23FC75740(v0[71], v0[72], v0[100], v0[77], v6);
  }
}

uint64_t sub_23FC66808()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 1136) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return sub_23FC5A63C();
}

uint64_t sub_23FC66868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23FC758C4();
  v16 = *(_QWORD *)(v0 + 1080);
  v17 = *(void **)(v0 + 1088);
  v20 = *(_QWORD *)(v0 + 576);
  v14 = *(_QWORD *)(v0 + 568);
  v15 = *(_QWORD *)(v0 + 536);
  v1 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 400);
  v18 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 336);
  v12 = *(_QWORD *)(v0 + 328);
  v13 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 200);
  v22 = *(_QWORD *)(v0 + 792) + *(int *)(v0 + 1200);
  sub_23FBFF1E4(*(_QWORD *)(v0 + 560), v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  sub_23FC76624(*MEMORY[0x24BE53690], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104));
  sub_23FD71D50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v4, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v2, *MEMORY[0x24BE532F0], v13);
  sub_23FC67F4C(v16, v17, v3);
  sub_23FC75FE0();
  sub_23FD73A00();
  sub_23FC103E8();

  sub_23FC5C178(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v7 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v7(v14, v1);
  v7(v20, v1);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, v19);
  sub_23FC75940();
  sub_23FC75B44();
  sub_23FC75B34();
  v8(v22);
  sub_23FC74E50();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v9 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75198(v9);
}

uint64_t sub_23FC66AE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 1192) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return sub_23FC5A63C();
}

uint64_t sub_23FC66B44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23FC758C4();
  v17 = v0[144];
  v18 = (void *)v0[145];
  sub_23FC765D0();
  v22 = v0[69];
  v20 = v0[68];
  v21 = v0[67];
  v2 = v0[41];
  v1 = v0[42];
  v3 = v0[37];
  v4 = v0[18];
  v16 = v0[19];
  v19 = v0[66];
  (*(void (**)(_QWORD))(v21 + 16))(v0[70]);
  sub_23FC760C8();
  sub_23FD71F48();
  sub_23FC76248(v1, *MEMORY[0x24BE53300], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23FBFD684(&qword_256F5EBF8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23FD769D0;
  sub_23FC5A8C8(v6 + v5, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v7 = sub_23FC760C8();
  sub_23FC67D10(v7, v8, v17, v18, v9);
  sub_23FC5A2A8();
  v10 = sub_23FC75580();
  sub_23FC103A0(v3, 0, v11, v10);
  sub_23FBFF1AC();
  sub_23FD73A00();
  sub_23FC0AAF8();

  v12 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v12(v20, v19);
  v13 = sub_23FC10454(v16, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FC75C2C(v13, &qword_256F5EB28);
  v12(v22, v19);
  sub_23FC75940();
  sub_23FC74E50();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v14 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75198(v14);
}

uint64_t sub_23FC66DA4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC75280();
  sub_23FC74C64(*(_QWORD *)(v0 + 832));
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v1 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v1);
}

uint64_t sub_23FC66E98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23FC75280();
  sub_23FC7622C();
  v3 = v0[78];
  sub_23FC584B0(v0[90], &qword_256F5EB18);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  sub_23FC74C64(v0[106]);
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v4 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v4);
}

uint64_t sub_23FC66FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23FC75280();
  sub_23FC7622C();
  v3 = sub_23FC090C8(*(_QWORD *)(v0 + 536));
  sub_23FC75C2C(v3, &qword_256F5EB98);
  sub_23FC5F290(v4, &qword_256F5EB18);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC74C64(*(_QWORD *)(v0 + 864));
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v5 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v5);
}

uint64_t sub_23FC670FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  sub_23FC75280();
  v8 = v0[102];
  v1 = v0[101];
  v2 = v0[93];
  sub_23FC090C8(v0[49]);
  v3 = swift_release();
  sub_23FC75A14(v3, &qword_256F5EAF0);
  sub_23FC75C2C(v4, &qword_256F5EB98);
  sub_23FC5F290(v5, &qword_256F5EB18);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FBFF204(v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC74C64(v0[115]);
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v6 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v6);
}

uint64_t sub_23FC67268()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);

  sub_23FC75280();
  v2 = *(void **)(v0 + 944);
  sub_23FC76594();

  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC74C64(*(_QWORD *)(v0 + 984));
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v3 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v3);
}

uint64_t sub_23FC67374()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);

  sub_23FC75280();
  v2 = *(void **)(v0 + 1016);
  sub_23FC76594();

  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC74C64(*(_QWORD *)(v0 + 1056));
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v3 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v3);
}

uint64_t sub_23FC67480()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);

  sub_23FC75280();
  v1 = *(void **)(v0 + 1088);
  v2 = *(_QWORD *)(v0 + 808);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 792) + *(int *)(v0 + 1200);
  swift_bridgeObjectRelease();

  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC75B44();
  sub_23FC75B34();
  v5(v4);
  sub_23FC74C64(*(_QWORD *)(v0 + 1120));
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v6 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v6);
}

uint64_t sub_23FC675C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t (*v7)(void);
  uint64_t v9;
  uint64_t v10;

  sub_23FC75280();
  v1 = *(void **)(v0 + 1088);
  v2 = *(_QWORD *)(v0 + 808);
  v3 = *(_QWORD *)(v0 + 536);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 816);
  v10 = *(_QWORD *)(v0 + 792) + *(int *)(v0 + 1200);
  swift_bridgeObjectRelease();

  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC15950(v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FBFF204(v9, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC75B44();
  sub_23FC75B34();
  v6(v10);
  sub_23FC74C64(*(_QWORD *)(v0 + 1136));
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v7 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v7);
}

uint64_t sub_23FC67728()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;
  uint64_t v10;

  sub_23FC75280();
  v1 = (void *)v0[145];
  v2 = v0[101];
  v9 = v0[100];
  v10 = v0[102];
  v3 = v0[67];
  v4 = v0[18];
  v5 = v0[19];
  swift_bridgeObjectRelease();

  v6 = sub_23FC15950(v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FC5F290(v6, &qword_256F5EB28);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v9);
  sub_23FC74C64(v0[149]);
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5D80C();
  sub_23FC5D804();
  sub_23FC5D7FC();
  sub_23FC5C114();
  sub_23FC5BFD0();
  sub_23FC5BFC8();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v7 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC75070(v7);
}

uint64_t sub_23FC67880()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FC75AD4();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  v4 = *v0;
  v1[5] = *(_QWORD *)(*v0 + 88);
  v1[6] = *(_QWORD *)(v4 + 80);
  v5 = sub_23FC75670();
  v1[7] = v5;
  v1[8] = *(_QWORD *)(v5 - 8);
  v1[9] = sub_23FC0901C();
  v1[10] = sub_23FC754E8();
  v6 = sub_23FC7680C();
  v1[11] = v6;
  v1[12] = *(_QWORD *)(v6 - 8);
  v1[13] = sub_23FC0901C();
  v7 = sub_23FC76840();
  v1[14] = v7;
  v1[15] = *(_QWORD *)(v7 - 8);
  v1[16] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC75184();
}

uint64_t sub_23FC6794C()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  int v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[15] + 16);
  v1(v0[16], v0[3], v0[14]);
  v2 = sub_23FC5E880();
  v4 = v3(v2);
  if (v4 == *MEMORY[0x24BE559A0])
  {
    v5 = (uint64_t *)v0[16];
    v6 = v0[13];
    (*(void (**)(uint64_t *, _QWORD))(v0[15] + 96))(v5, v0[14]);
    sub_23FC63040(*v5, v5[1], v6);
    sub_23FC103E8();
    v7 = (_QWORD *)sub_23FC09058();
    v0[17] = v7;
    *v7 = v0;
    v7[1] = sub_23FC67B1C;
    return sub_23FC75F28(v0[9], v0[6], v0[5], v16);
  }
  else
  {
    if (v4 == *MEMORY[0x24BE55998])
    {
      sub_23FC7597C(v0[15]);
      v9 = sub_23FC10290();
      sub_23FBFF088(v9);
      sub_23FC76420();
      sub_23FC090D0();
      sub_23FC090C0();
      v10 = (uint64_t (*)(void))sub_23FC5C528();
    }
    else
    {
      v12 = v0[15];
      v11 = v0[16];
      v13 = v0[14];
      v14 = v0[3];
      sub_23FC75764();
      sub_23FC74C30(&qword_256F5EAC0, (void (*)(uint64_t))type metadata accessor for RuntimeError);
      sub_23FC5A704();
      v1(v15, v14, v13);
      sub_23FC760C8();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_23FC10454(v11, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      sub_23FC75C8C();
      sub_23FC090C0();
      sub_23FC5A574();
      v10 = (uint64_t (*)(void))v0[1];
    }
    return v10();
  }
}

uint64_t sub_23FC67B1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  sub_23FC756B0();
  sub_23FC75274(v3);
  v1[18] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23FC090C8(v1[12]);
    sub_23FC09208();
    return sub_23FC75178();
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v6 = (_QWORD *)sub_23FC09058();
    v1[19] = v6;
    *v6 = v2;
    v6[1] = sub_23FC67BE4;
    return v7(v1[2], v1[9], v1[7], v1[10], v1[11], AssociatedConformanceWitness);
  }
}

uint64_t sub_23FC67BE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FC75F60();
  v11 = v2;
  v12 = v3;
  v10 = v1;
  v4 = (_QWORD *)*v1;
  v10 = v4;
  v6 = v4[12];
  v5 = v4[13];
  v8 = v4[8];
  v7 = v4[9];
  sub_23FC75274(&v10);
  v4[20] = v0;
  swift_task_dealloc();
  sub_23FC5B3B0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23FC595C4(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  return sub_23FC0906C();
}

uint64_t sub_23FC67C78()
{
  uint64_t (*v0)(void);

  sub_23FC76420();
  sub_23FC090D0();
  sub_23FC090C0();
  v0 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC090D8(v0);
}

uint64_t sub_23FC67CA8()
{
  uint64_t v0;

  sub_23FC75C8C();
  sub_23FC090C0();
  sub_23FC5A574();
  return sub_23FC75B5C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC67CDC()
{
  uint64_t v0;

  sub_23FC75C8C();
  sub_23FC090C0();
  sub_23FC5A574();
  return sub_23FC75B5C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FC67D10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;

  v39[1] = a2;
  v40 = a1;
  v41 = a5;
  sub_23FBFD684(&qword_256F5EB28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFF180();
  v13 = v12 - v11;
  sub_23FBFD684(&qword_256F5EC18);
  sub_23FBFF168();
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)v39 - v20;
  sub_23FBFD684(&qword_256F5EAE8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC75580();
  sub_23FC768F4();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFF180();
  v30 = v29 - v28;
  sub_23FC67F4C(a3, a4, (uint64_t)v25);
  sub_23FC100EC((uint64_t)v25, 1, v5);
  if (v31)
  {
    v32 = sub_23FD71C60();
    sub_23FC5F358(v32, &qword_256F5EAE8);
  }
  else
  {
    sub_23FC092BC(v30, (uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  }
  v34 = v41;
  sub_23FC7673C(v40, v33, &qword_256F5EB28);
  v35 = sub_23FC76224();
  v36 = sub_23FC100EC(v13, 1, v35);
  if (v31)
  {
    sub_23FC5C15C(v36, &qword_256F5EB28);
    sub_23FC76820();
    v37 = (uint64_t)v21;
    v38 = 1;
  }
  else
  {
    sub_23FCD5364((uint64_t)v21);
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8));
    sub_23FC76820();
    v37 = (uint64_t)v21;
    v38 = 0;
  }
  sub_23FC75C34(v37, v38);
  sub_23FC76820();
  if (!sub_23FC75988((uint64_t)v21))
  {
    swift_bridgeObjectRetain();
    sub_23FD71B64();
  }
  sub_23FC74908((uint64_t)v21, (uint64_t)v18, &qword_256F5EC18);
  sub_23FD71C54();
  sub_23FC092BC(v34, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  sub_23FC584B0((uint64_t)v21, &qword_256F5EC18);
}

uint64_t sub_23FC67F4C@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    v4 = a2;
    sub_23FD71C48();
  }
  else
  {
    if (!a1)
    {
      v5 = 1;
      goto LABEL_6;
    }
    sub_23FC5AFCC();
    sub_23FC5E714();
    sub_23FD71C3C();
  }
  v5 = 0;
LABEL_6:
  v6 = sub_23FC75580();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, v5, 1, v6);
}

uint64_t sub_23FC67FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v5 = *v3;
  v6 = sub_23FD73C7C();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAC8);
  v4[16] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EBD0);
  v4[17] = sub_23FC0901C();
  v7 = sub_23FC75FD8();
  v4[18] = v7;
  v4[19] = *(_QWORD *)(v7 - 8);
  v4[20] = sub_23FC0901C();
  v8 = sub_23FC10100();
  v4[21] = v8;
  v4[22] = *(_QWORD *)(v8 - 8);
  v4[23] = sub_23FC0901C();
  v4[24] = *(_QWORD *)(v5 + 88);
  v4[25] = *(_QWORD *)(v5 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[26] = AssociatedTypeWitness;
  v4[27] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[28] = sub_23FC5C13C();
  v4[29] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FC680BC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD);

  v0[30] = sub_23FD73C58();
  v0[31] = v1;
  v0[32] = sub_23FD73C40();
  v2 = (_QWORD *)sub_23FC09058();
  v0[33] = v2;
  *v2 = v0;
  v2[1] = sub_23FC6813C;
  return v4(v0[29], v0[25], v0[24]);
}

uint64_t sub_23FC6813C()
{
  uint64_t v0;

  sub_23FC75A34();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_23FC1002C();
  }
  return sub_23FC5A63C();
}

uint64_t sub_23FC68190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v46;
  _BOOL4 v47;
  unint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_23FC76488();
  a37 = v40;
  a38 = v41;
  a36 = v38;
  v42 = *(_QWORD *)(v38 + 272);
  v43 = sub_23FC743C0((void (*)(__int128 *__return_ptr, char *))sub_23FC748A4, *(_QWORD *)(v38 + 96), *(_QWORD *)(v38 + 256));
  v44 = *(NSObject **)(v38 + 248);
  if (!v42)
  {
    v75 = v43;
    sub_23FC15A24();
    sub_23FD724D0();
    sub_23FC5AFCC();
    sub_23FC5D90C();
    v46 = sub_23FC75640();
    v47 = sub_23FC753CC(v46);
    v48 = *(_QWORD *)(v38 + 248);
    if (v47)
    {
      v49 = *(_QWORD *)(v38 + 240);
      v50 = (uint8_t *)sub_23FBFEFF4();
      a22 = sub_23FBFEFF4();
      *(_DWORD *)v50 = 136315138;
      sub_23FC5C180();
      *(_QWORD *)(v38 + 64) = sub_23FC9DC40(v49, v48, &a22);
      sub_23FC75CD4();
      sub_23FC75E60();
      sub_23FBFF114(&dword_23FBF8000, v44, v39, "DefaultRuntime: No active tool execution found, executing %s", v50);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }

    sub_23FC10048();
    v51 = sub_23FBFF1AC();
    v52(v51);
    v53 = *(_QWORD *)(v38 + 224);
    v54 = *(_QWORD *)(v38 + 232);
    v55 = *(_QWORD *)(v38 + 216);
    sub_23FC76640();
    v56 = *(_QWORD *)(v38 + 128);
    sub_23FC75E58(v57);
    sub_23FC06160(v53, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
    *(_QWORD *)(v38 + 48) = sub_23FD73DE4();
    sub_23FBFD684(&qword_256F5EAD0);
    sub_23FC74828(&qword_256F5EAD8);
    sub_23FD73A24();
    sub_23FC15A24();
    v58 = sub_23FD72434();
    v59 = sub_23FC75988(v56);
    v61 = *(_QWORD *)(v38 + 128);
    v60 = *(_QWORD *)(v38 + 136);
    if ((_DWORD)v59 == 1)
    {
      sub_23FC761A8(v59, &qword_256F5EAC8);
      v62 = sub_23FD73124();
      sub_23FBFF0F8(v60, v63, v64, v62);
    }
    else
    {
      sub_23FD7241C();
      sub_23FBFF204(v61, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8));
    }
    v74 = *(_QWORD *)(v38 + 224);
    v65 = *(_QWORD *)(v38 + 208);
    v66 = *(_QWORD *)(v38 + 160);
    v67 = *(_QWORD *)(v38 + 136);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v70 = swift_getAssociatedConformanceWitness();
    v72 = type metadata accessor for ToolExecutionEventStream(0, AssociatedTypeWitness, v70, v71);
    sub_23FD59FD4(v66, v75, v74, v67, v65, AssociatedConformanceWitness);
    v73 = MEMORY[0x2426797E8](&unk_23FD83280, v72);
    *(_QWORD *)(v38 + 16) = AssociatedTypeWitness;
    *(_QWORD *)(v38 + 24) = v72;
    *(_QWORD *)(v38 + 32) = v70;
    *(_QWORD *)(v38 + 40) = v73;
    type metadata accessor for ToolExecution();
  }
  sub_23FC090C8(*(_QWORD *)(v38 + 216));
  sub_23FC15A24();
  sub_23FC1002C();
  sub_23FC76478();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  return sub_23FC75474(*(uint64_t (**)(void))(v38 + 8));
}

uint64_t sub_23FC6852C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,__int128 a22,uint64_t a23,uint64_t a24,_UNKNOWN **a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(a11 + 16))(a12, a10, a13);
  *(_QWORD *)(v25 + 56) = v27;
  a24 = type metadata accessor for DefaultRuntime(0, v28, v26, v29);
  a25 = &off_25100F130;
  *(_QWORD *)&a22 = a16;
  swift_retain();
  sub_23FD4BF20(a12, v25 + 56, &a22);
  sub_23FBFF204(a18, *(uint64_t (**)(uint64_t, uint64_t))(a17 + 8));
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5C420();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5BFE8();
  sub_23FC5A574();
  v30 = sub_23FC757D0();
  return sub_23FC75490(v30, v31);
}

uint64_t sub_23FC685C4()
{
  uint64_t v0;

  sub_23FC764A4();
  sub_23FC76478();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC68624@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_23FD73730();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD73C1C();
  sub_23FC63208(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_23FC686D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_23FD74924();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = sub_23FC0901C();
  v6 = sub_23FC10100();
  v4[19] = v6;
  v4[20] = *(_QWORD *)(v6 - 8);
  v4[21] = sub_23FC0901C();
  v7 = sub_23FC76838();
  v4[22] = v7;
  v4[23] = *(_QWORD *)(v7 - 8);
  v4[24] = sub_23FC5C13C();
  v4[25] = sub_23FC5C588();
  v8 = sub_23FC76570();
  v4[26] = v8;
  v4[27] = *(_QWORD *)(v8 - 8);
  v4[28] = sub_23FC0901C();
  v9 = sub_23FC75FD8();
  v4[29] = v9;
  v4[30] = *(_QWORD *)(v9 - 8);
  v4[31] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FC68788()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_23FC764BC();
  v2 = v0[27];
  v1 = v0[28];
  sub_23FD73328();
  v3 = sub_23FD73964();
  v5 = v4;
  v0[32] = v4;
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v6 = (_QWORD *)swift_task_alloc();
  v0[33] = v6;
  *v6 = v0;
  v6[1] = sub_23FC6881C;
  return sub_23FC76128(v0[31], v3, v5);
}

uint64_t sub_23FC6881C()
{
  uint64_t v0;

  sub_23FC75A34();
  if (!v0)
    swift_bridgeObjectRelease();
  return sub_23FC5A63C();
}

uint64_t sub_23FC6886C()
{
  uint64_t *v0;
  NSObject *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)();
  void (*v11)(uint64_t);
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23FC764BC();
  v1 = v0[12];
  sub_23FD73310();
  v2 = sub_23FC767A8();
  v3 = v0[25];
  if (v2 == *MEMORY[0x24BE56EE8])
  {
    v4 = v0[21];
    (*(void (**)(uint64_t, uint64_t))(v0[23] + 96))(v0[25], v0[22]);
    v0[35] = *(_QWORD *)(v3 + 8);
    sub_23FD72494();
    sub_23FC5D90C();
    v5 = sub_23FC75640();
    if (sub_23FC09114(v5))
    {
      v6 = (uint8_t *)sub_23FBFEFF4();
      *(_WORD *)v6 = 0;
      sub_23FC754C8(&dword_23FBF8000, v1, (os_log_type_t)v4, "Running SystemCandidateGeneration", v6);
      sub_23FBFEFA0();
    }
    v8 = v0[20];
    v7 = v0[21];

    sub_23FC5B3B0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v9 = (_QWORD *)swift_task_alloc();
    v0[36] = (uint64_t)v9;
    v10 = sub_23FC68A3C;
    goto LABEL_7;
  }
  v11 = *(void (**)(uint64_t))(v0[23] + 8);
  v12 = sub_23FC765C4();
  v11(v12);
  sub_23FD73310();
  v13 = sub_23FC767A8();
  v14 = v0[24];
  if (v13 == *MEMORY[0x24BE56EE0])
  {
    sub_23FC7597C(v0[23]);
    v0[38] = *(_QWORD *)(v14 + 8);
    v9 = (_QWORD *)swift_task_alloc();
    v0[39] = (uint64_t)v9;
    v10 = sub_23FC68AE0;
LABEL_7:
    *v9 = v0;
    v9[1] = v10;
    sub_23FC5B9C8(v0[12]);
    sub_23FC76588();
    return sub_23FC6A4EC(v15, v16, v17, v18, v19, v20);
  }
  ((void (*)(uint64_t, uint64_t))v11)(v0[24], v0[22]);
  v22 = (_QWORD *)swift_task_alloc();
  v0[42] = (uint64_t)v22;
  *v22 = v0;
  v22[1] = sub_23FC68BD0;
  v23 = sub_23FC5B9C8(v0[12]);
  return sub_23FC690B0(v23, v24, v25);
}

uint64_t sub_23FC68A3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23FC5D3A4();
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = v1;
  sub_23FC75274(v4);
  v0[37] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23FC5F38C();
  return sub_23FC5A63C();
}

uint64_t sub_23FC68A9C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC764A4();
  sub_23FC7560C();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  v0 = sub_23FC757D0();
  return sub_23FC754D0(v0, v1);
}

uint64_t sub_23FC68AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 320) = v2;
  *(_QWORD *)(v0 + 328) = v1;
  sub_23FC76470();
  swift_bridgeObjectRelease();
  sub_23FC5F38C();
  return sub_23FC5A63C();
}

uint64_t sub_23FC68B38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FC764A4();
  if (*(_QWORD *)(v0[40] + 16))
  {
    sub_23FC7560C();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    v1 = sub_23FC757D0();
    return sub_23FC754D0(v1, v2);
  }
  else
  {
    sub_23FC1002C();
    v4 = (_QWORD *)swift_task_alloc();
    v0[42] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = sub_23FC68BD0;
    v5 = sub_23FC5B9C8(v0[12]);
    return sub_23FC690B0(v5, v6, v7);
  }
}

uint64_t sub_23FC68BD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23FC5D3A4();
  v0[8] = v2;
  v0[9] = v3;
  v0[10] = v1;
  sub_23FC75274(v4);
  v0[43] = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC68C28()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC764A4();
  sub_23FC7560C();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  v0 = sub_23FC757D0();
  return sub_23FC754D0(v0, v1);
}

uint64_t sub_23FC68C6C()
{
  uint64_t v0;

  sub_23FC764BC();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "23FC68D58: call analysis failed (funcsize=49)"

#error "23FC68E28: call analysis failed (funcsize=49)"

#error "23FC68EF8: call analysis failed (funcsize=49)"

BOOL sub_23FC68F48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  id v21;
  uint64_t v22;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, a1);
  sub_23FC5E880();
  v7 = sub_23FD7535C();
  if (v7)
  {
    v8 = (void *)v7;
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  else
  {
    v8 = (void *)sub_23FC5A704();
    sub_23FC1046C(v9, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  }
  v10 = (void *)sub_23FD7133C();

  v12 = sub_23FC767C4(v11, sel_domain);
  v13 = sub_23FD74BF4();
  v15 = v14;

  if (v13 == sub_23FD74BF4() && v15 == v16)
  {
    v19 = sub_23FC10048();
  }
  else
  {
    sub_23FC5E714();
    v18 = sub_23FC76014();
    sub_23FC1002C();
    v19 = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {

      return 0;
    }
  }
  v21 = sub_23FC767C4(v19, sel_code);

  return v21 == (id)2400;
}

uint64_t sub_23FC690B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t (*v26)(uint64_t);

  v4[35] = a3;
  v4[36] = v3;
  v4[33] = a1;
  v4[34] = a2;
  v5 = *v3;
  v6 = sub_23FC10290();
  v4[37] = v6;
  v4[38] = *(_QWORD *)(v6 - 8);
  v4[39] = sub_23FC0901C();
  v7 = sub_23FC76828();
  v4[40] = v7;
  v4[41] = *(_QWORD *)(v7 - 8);
  v4[42] = sub_23FC0901C();
  v8 = sub_23FD73EA4();
  v4[43] = v8;
  v4[44] = *(_QWORD *)(v8 - 8);
  v4[45] = sub_23FC0901C();
  v9 = sub_23FD73EB0();
  v4[46] = v9;
  v4[47] = *(_QWORD *)(v9 - 8);
  v4[48] = sub_23FC0901C();
  v10 = sub_23FC75FD8();
  v4[49] = v10;
  v4[50] = *(_QWORD *)(v10 - 8);
  v4[51] = sub_23FC0901C();
  v11 = sub_23FD744A4();
  v4[52] = v11;
  v4[53] = *(_QWORD *)(v11 - 8);
  v4[54] = sub_23FC0901C();
  v4[55] = *(_QWORD *)(v5 + 88);
  v4[56] = *(_QWORD *)(v5 + 80);
  sub_23FC76264();
  v4[57] = sub_23FC761D8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[58] = AssociatedTypeWitness;
  v4[59] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[60] = sub_23FC0901C();
  v13 = sub_23FC10100();
  v4[61] = v13;
  v4[62] = *(_QWORD *)(v13 - 8);
  v4[63] = sub_23FC75648();
  v4[64] = sub_23FC75950();
  v14 = sub_23FC76848();
  v18 = type metadata accessor for QualifiedToolKitQuery(v14, v15, v16, v17);
  v4[65] = v18;
  v4[66] = *(_QWORD *)(v18 - 8);
  v4[67] = sub_23FC75648();
  v4[68] = sub_23FC75950();
  v4[69] = sub_23FC75950();
  v19 = sub_23FC76838();
  v4[70] = v19;
  v4[71] = *(_QWORD *)(v19 - 8);
  v4[72] = sub_23FC75648();
  v4[73] = sub_23FC75950();
  v20 = sub_23FC76570();
  v4[74] = v20;
  v4[75] = *(_QWORD *)(v20 - 8);
  v4[76] = sub_23FC75648();
  v4[77] = sub_23FC75950();
  v21 = sub_23FC76854();
  v4[78] = v21;
  v4[79] = *(_QWORD *)(v21 - 8);
  v4[80] = swift_task_alloc();
  v4[81] = swift_task_alloc();
  v22 = sub_23FC767EC();
  v4[82] = v22;
  v4[83] = *(_QWORD *)(v22 - 8);
  v4[84] = sub_23FC0901C();
  v4[85] = *(_QWORD *)(*v3 + 104);
  v23 = (_QWORD *)sub_23FC752E8();
  v4[86] = v23;
  v24 = sub_23FC756E8(v23);
  return v26(v24);
}

uint64_t sub_23FC69310()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 696) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC69360()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD);

  sub_23FC5BC54();
  v1 = v0[77];
  v2 = v0[75];
  sub_23FD73328();
  v3 = sub_23FD73958();
  v5 = v4;
  v0[88] = v4;
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FD73310();
  v6 = (_QWORD *)sub_23FC09058();
  v0[89] = v6;
  *v6 = v0;
  v6[1] = sub_23FC69438;
  return v8(v0[81], v0[34], v3, v5, v0[73], v0[56], v0[55]);
}

uint64_t sub_23FC69438()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23FC75EF0();
  sub_23FC75274(v2);
  v1[90] = v0;
  swift_task_dealloc();
  v3 = v1[73];
  v4 = v1[70];
  v5 = *(void (**)(uint64_t, uint64_t))(v1[71] + 8);
  if (!v0)
    v1[91] = v5;
  v5(v3, v4);
  sub_23FC15A24();
  return sub_23FC0906C();
}

#error "23FC69AF8: call analysis failed (funcsize=403)"

uint64_t sub_23FC69B54()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23FC5ACE0();
  v2 = (_QWORD *)*v1;
  sub_23FC75F18();
  v2[98] = v3;
  v2[99] = v0;
  v4 = sub_23FC76470();
  if (v0)
  {
    v5 = v2[59];
    v6 = v2[53];
    sub_23FC5F358(v4, &qword_256F5EBC0);
    sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23FC1002C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v2[59];
    v7 = v2[60];
    v10 = v2[53];
    v9 = v2[54];
    sub_23FC5F358(v4, &qword_256F5EBC0);
    sub_23FC5B3B0(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    sub_23FC595C4(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }
  return sub_23FC757B4();
}

#error "23FC69F6C: call analysis failed (funcsize=421)"

uint64_t sub_23FC6A330()
{
  uint64_t v0;

  sub_23FC758E0();
  sub_23FC75110();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6A3A8()
{
  uint64_t v0;

  sub_23FC758E0();
  sub_23FC090C8(*(_QWORD *)(v0 + 664));
  sub_23FC75110();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6A430()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC758E0();
  v1 = *(void (**)(uint64_t))(v0 + 768);
  v2 = *(_QWORD *)(v0 + 664);
  v3 = *(_QWORD *)(v0 + 632);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 120);
  v4 = sub_23FC75FE0();
  v1(v4);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC75110();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6A4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7[16] = a6;
  v7[17] = v6;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  v8 = sub_23FD73EA4();
  v7[18] = v8;
  v7[19] = *(_QWORD *)(v8 - 8);
  v7[20] = sub_23FC0901C();
  v9 = sub_23FD73EB0();
  v7[21] = v9;
  v7[22] = *(_QWORD *)(v9 - 8);
  v7[23] = sub_23FC0901C();
  v10 = sub_23FC75B44();
  v7[24] = v10;
  v7[25] = *(_QWORD *)(v10 - 8);
  v7[26] = sub_23FC0901C();
  v11 = sub_23FD74198();
  v7[27] = v11;
  v7[28] = *(_QWORD *)(v11 - 8);
  v7[29] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EB98);
  v7[30] = sub_23FC0901C();
  v12 = sub_23FC10290();
  v7[31] = v12;
  v7[32] = *(_QWORD *)(v12 - 8);
  v7[33] = sub_23FC5C13C();
  v7[34] = sub_23FC5C588();
  v13 = sub_23FC76828();
  v7[35] = v13;
  v7[36] = *(_QWORD *)(v13 - 8);
  v7[37] = sub_23FC0901C();
  v14 = sub_23FC76570();
  v7[38] = v14;
  v7[39] = *(_QWORD *)(v14 - 8);
  v7[40] = sub_23FC5C13C();
  v7[41] = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EBA0);
  v7[42] = sub_23FC0901C();
  v15 = sub_23FD74960();
  v7[43] = v15;
  v7[44] = *(_QWORD *)(v15 - 8);
  v7[45] = sub_23FC5C13C();
  v7[46] = sub_23FC5C588();
  v7[47] = sub_23FC5C588();
  v7[48] = sub_23FC5C588();
  v7[49] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FC6A654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;

  sub_23FC758E0();
  v1 = sub_23FD743FC();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 352);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v39 = *(_QWORD *)(v3 + 72);
    v40 = *(void (**)(uint64_t))(v3 + 16);
    v41 = *(_QWORD *)(v0 + 312);
    sub_23FC5B578();
    while (1)
    {
      v5 = *(_QWORD *)(v0 + 328);
      v6 = sub_23FBFF1EC();
      v40(v6);
      v7 = sub_23FD74948();
      v9 = v8;
      sub_23FD73328();
      v10 = sub_23FD73958();
      v12 = v11;
      sub_23FC5C178(v5, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
      v13 = v7 == v10 && v9 == v12;
      if (v13)
        break;
      v14 = sub_23FC76014();
      sub_23FC1002C();
      sub_23FC103E8();
      if ((v14 & 1) != 0)
        goto LABEL_12;
      (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 344));
      v4 += v39;
      if (!--v2)
      {
        sub_23FC5A648();
        goto LABEL_10;
      }
    }
    sub_23FC5A648();
    sub_23FC103E8();
LABEL_12:
    v16 = *(_QWORD *)(v0 + 384);
    v17 = *(_QWORD *)(v0 + 352);
    v18 = *(_QWORD *)(v0 + 336);
    sub_23FC103E8();
    sub_23FC06160(v18, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
    v15 = 0;
  }
  else
  {
LABEL_10:
    v15 = 1;
  }
  v19 = *(_QWORD *)(v0 + 336);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v19, v15, 1, *(_QWORD *)(v0 + 344));
  sub_23FC5A648();
  sub_23FC752FC(v19);
  if (v13)
  {
    sub_23FC584B0(*(_QWORD *)(v0 + 336), &qword_256F5EBA0);
    v20 = sub_23FD72E24();
    sub_23FC74C30(&qword_256F5EBA8, (void (*)(uint64_t))MEMORY[0x24BE546F0]);
    sub_23FC5A704();
    v22 = v21;
    sub_23FC768B8();
    v23 = sub_23FD73964();
    v25 = v24;
    sub_23FC76794();
    swift_bridgeObjectRelease();
    sub_23FD74C48();
    sub_23FC768B8();
    sub_23FD73958();
    sub_23FC76794();
    sub_23FC5E96C();
    sub_23FD74C48();
    sub_23FC5A56C();
    *v22 = v23;
    v22[1] = v25;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BE546E8], v20);
    swift_willThrow();
    sub_23FC761EC();
    swift_task_dealloc();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5A574();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 392);
    v27 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 352);
    sub_23FC06160(v26, *(_QWORD *)(v0 + 336), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    sub_23FD72E54();
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
    *(_QWORD *)(v0 + 400) = v29;
    sub_23FC06160(v27, v26, v29);
    *(_QWORD *)(v0 + 408) = sub_23FD72E48();
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v30;
    *v30 = v0;
    v30[1] = sub_23FC6A9C4;
    sub_23FC5B9C8(*(_QWORD *)(v0 + 88));
    sub_23FC765E0();
    return sub_23FC6AFCC(v31, v32, v33, v34, v35, v36, v37);
  }
}

uint64_t sub_23FC6A9C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  *(_QWORD *)(v0 + 424) = v2;
  *(_QWORD *)(v0 + 432) = v1;
  sub_23FC76470();
  return sub_23FC5A63C();
}

uint64_t sub_23FC6AA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD);
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 424) + 16);
  if (v1)
  {
    v48 = *(_QWORD *)(v0 + 256);
    v2 = *(_QWORD *)(v0 + 224);
    sub_23FC764E0();
    v5 = v3 + v4;
    v44 = *(_QWORD *)(v6 + 72);
    v43 = *MEMORY[0x24BE56E48];
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x24BEE4AF8];
    v42 = v1;
    while (1)
    {
      v8 = *(_QWORD *)(v0 + 232);
      sub_23FC74860(v5, *(_QWORD *)(v0 + 296));
      sub_23FC76248(v8, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
      sub_23FC74C30(&qword_256F5EBB0, (void (*)(uint64_t))MEMORY[0x24BE56E78]);
      sub_23FC76618();
      sub_23FC76618();
      v9 = *(_QWORD *)(v0 + 232);
      v10 = *(_QWORD *)(v0 + 56) == *(_QWORD *)(v0 + 72) && *(_QWORD *)(v0 + 64) == *(_QWORD *)(v0 + 80);
      if (v10)
        break;
      v11 = sub_23FC76014();
      sub_23FC0AAF8();
      sub_23FC102FC();
      sub_23FC5C178(v9, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      if ((v11 & 1) != 0)
        goto LABEL_10;
      v12 = 1;
LABEL_11:
      v13 = *(_QWORD *)(v0 + 296);
      v15 = *(_QWORD *)(v0 + 240);
      v14 = *(_QWORD *)(v0 + 248);
      sub_23FC766C0(v15, v12);
      sub_23FC5806C(v13, type metadata accessor for RetrievedValue);
      sub_23FC100EC(v15, 1, v14);
      if (v10)
      {
        sub_23FC584B0(*(_QWORD *)(v0 + 240), &qword_256F5EB98);
      }
      else
      {
        v16 = *(void (**)(_QWORD))(v48 + 32);
        ((void (*)(_QWORD, _QWORD, _QWORD))v16)(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
        v17 = sub_23FC5E714();
        v16(v17);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23FC75E98();
          sub_23FC998D4();
          v7 = v22;
        }
        v19 = *(_QWORD *)(v7 + 16);
        if (v19 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_23FC998D4();
          v7 = v23;
        }
        v20 = *(_QWORD *)(v0 + 264);
        v21 = *(_QWORD *)(v0 + 248);
        *(_QWORD *)(v7 + 16) = v19 + 1;
        ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v7+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v19, v20, v21);
      }
      v5 += v44;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        v1 = v42;
        goto LABEL_22;
      }
    }
    sub_23FC10048();
    sub_23FC5C178(v9, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
LABEL_10:
    sub_23FC75E58(v48);
    v12 = 0;
    goto LABEL_11;
  }
  v7 = MEMORY[0x24BEE4AF8];
LABEL_22:
  v24 = *(_QWORD *)(v7 + 16);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 400))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 344));
  if (v24)
  {
    v25 = *(void (**)(_QWORD))(*(_QWORD *)(v0 + 352) + 8);
    ((void (*)(_QWORD, _QWORD))v25)(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344));
    goto LABEL_24;
  }
  v31 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 400))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344));
  if (v1)
  {
    v25 = *(void (**)(_QWORD))(*(_QWORD *)(v0 + 352) + 8);
    ((void (*)(_QWORD, _QWORD))v25)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 344));
    v32 = sub_23FBFF1EC();
    v25(v32);
LABEL_30:
    ((void (*)(_QWORD, _QWORD))v25)(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 344));
    sub_23FC103E8();
    sub_23FC58AC8();
    goto LABEL_31;
  }
  v50 = *(_QWORD *)(v0 + 368);
  v35 = *(_QWORD *)(v0 + 344);
  v34 = *(_QWORD *)(v0 + 352);
  v37 = *(_QWORD *)(v0 + 200);
  v36 = *(_QWORD *)(v0 + 208);
  MEMORY[0x242678708](v31);
  v38 = sub_23FD747A4();
  sub_23FC5C178(v36, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
  v39 = sub_23FC627D0(v38);
  sub_23FC1002C();
  v25 = *(void (**)(_QWORD))(v34 + 8);
  v40 = sub_23FC75FE0();
  v25(v40);
  ((void (*)(uint64_t, uint64_t))v25)(v50, v35);
  if ((v39 & 1) == 0)
    goto LABEL_30;
LABEL_24:
  sub_23FC74908(*(_QWORD *)(v0 + 128), v0 + 16, &qword_256F5EB90);
  v26 = *(_QWORD *)(v0 + 40);
  if (v26)
  {
    v27 = *(_QWORD *)(v0 + 184);
    v28 = *(_QWORD *)(v0 + 160);
    v47 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 152);
    v45 = *(_QWORD *)(v0 + 344);
    v46 = *(_QWORD *)(v0 + 392);
    sub_23FBFDE40((_QWORD *)(v0 + 16), v26);
    sub_23FC5A09C();
    sub_23FD73E8C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v28, *MEMORY[0x24BE56910], v30);
    sub_23FD73E80();
    sub_23FC84B34();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v27, v49);
    ((void (*)(uint64_t, uint64_t))v25)(v46, v45);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  }
  else
  {
    ((void (*)(_QWORD, _QWORD))v25)(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 344));
    sub_23FC103E8();
    v33 = sub_23FC58AC8();
    sub_23FC761A8(v33, &qword_256F5EB90);
  }
LABEL_31:
  swift_task_dealloc();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 424));
}

uint64_t sub_23FC6AF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  _QWORD *v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23FC75D0C();
  v19 = v18[44];
  swift_release();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  v35 = v18[54];
  sub_23FC761EC();
  v29 = v18[33];
  v30 = v18[30];
  v31 = v18[29];
  v32 = v18[26];
  v33 = v18[23];
  v34 = v18[20];
  swift_task_dealloc();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC75CB0();
  return v20(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33, v34, v35, a16, a17, a18);
}

uint64_t sub_23FC6AFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8[27] = a7;
  v8[28] = v7;
  v8[25] = a5;
  v8[26] = a6;
  v8[23] = a3;
  v8[24] = a4;
  v8[21] = a1;
  v8[22] = a2;
  v9 = sub_23FC76838();
  v8[29] = v9;
  v8[30] = *(_QWORD *)(v9 - 8);
  v8[31] = sub_23FC0901C();
  sub_23FC76570();
  v8[32] = sub_23FC0901C();
  v10 = sub_23FD73340();
  v8[33] = v10;
  v8[34] = *(_QWORD *)(v10 - 8);
  v8[35] = sub_23FC0901C();
  v11 = sub_23FC10290();
  v8[36] = v11;
  v8[37] = *(_QWORD *)(v11 - 8);
  v8[38] = sub_23FC0901C();
  v12 = sub_23FD74744();
  v8[39] = v12;
  v8[40] = *(_QWORD *)(v12 - 8);
  v8[41] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EB78);
  v8[42] = sub_23FC0901C();
  v13 = sub_23FC10100();
  v8[43] = v13;
  v8[44] = *(_QWORD *)(v13 - 8);
  v8[45] = sub_23FC5C13C();
  v8[46] = sub_23FC5C588();
  v8[47] = sub_23FC5C588();
  v8[48] = sub_23FC5C588();
  v8[49] = sub_23FC5C588();
  v8[50] = sub_23FC5C588();
  v8[51] = sub_23FC5C588();
  v8[52] = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EB80);
  v8[53] = sub_23FC0901C();
  v14 = sub_23FD741B0();
  v8[54] = v14;
  v8[55] = *(_QWORD *)(v14 - 8);
  v8[56] = sub_23FC0901C();
  v15 = sub_23FC76828();
  v8[57] = v15;
  v8[58] = *(_QWORD *)(v15 - 8);
  v8[59] = sub_23FC5C13C();
  v8[60] = sub_23FC5C588();
  v8[61] = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EB88);
  v8[62] = sub_23FC0901C();
  v16 = sub_23FD747F8();
  v8[63] = v16;
  v8[64] = *(_QWORD *)(v16 - 8);
  v8[65] = sub_23FC5C13C();
  v8[66] = sub_23FC5C588();
  v8[67] = sub_23FC5C588();
  v17 = sub_23FC75B44();
  v8[68] = v17;
  v8[69] = *(_QWORD *)(v17 - 8);
  v8[70] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5E088);
  v8[71] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FC6B1B4()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char v40;
  os_log_type_t v41;
  _WORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  void *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void);
  uint64_t v57;
  NSObject *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  os_log_type_t v65;
  _WORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (*v160)(void);
  uint64_t (*v161)(void);
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  sub_23FC5E39C();
  v167 = v2;
  v168 = v3;
  v166 = v0;
  v4 = *(_QWORD *)(v0 + 568);
  sub_23FD74420();
  v5 = sub_23FD747E0();
  v6 = sub_23FC75988(v4);
  v7 = *(void **)(v0 + 568);
  if ((_DWORD)v6 == 1)
  {
    sub_23FC5C15C(v6, &qword_256F5E088);
    sub_23FD72494();
    sub_23FC5C100();
    v8 = sub_23FC09250();
    if (sub_23FC5E334(v8))
    {
      v9 = (_WORD *)sub_23FBFEFF4();
      sub_23FC75DFC(v9);
      sub_23FC75350(&dword_23FBF8000, v10, v11, "Unable to extract bundleID from tool source application");
      sub_23FBFEFA0();
    }
    v13 = *(_QWORD *)(v0 + 352);
    v12 = *(_QWORD *)(v0 + 360);

    sub_23FC595C4(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    goto LABEL_5;
  }
  v16 = *(_QWORD *)(v0 + 552);
  v17 = *(_QWORD *)(v0 + 544);
  v18 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 576) = sub_23FD747D4();
  *(_QWORD *)(v0 + 584) = v19;
  v20 = sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
  *(_QWORD *)(v0 + 128) = MEMORY[0x24BEE4AF8];
  MEMORY[0x242678708](v20);
  v21 = sub_23FD747A4();
  *(_QWORD *)(v0 + 592) = v21;
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  *(_BYTE *)(v0 + 664) = *(_BYTE *)(v21 + 32);
  sub_23FC763C8();
  if (v23)
  {
    sub_23FC763B0();
    v27 = *(_QWORD *)(v0 + 592);
LABEL_9:
    *(_QWORD *)(v0 + 608) = v26;
    *(_QWORD *)(v0 + 600) = v24;
    v28 = *(_QWORD *)(v0 + 536);
    v29 = *(_QWORD *)(v0 + 528);
    v30 = *(_QWORD *)(v0 + 512);
    sub_23FC06160(v28, *(_QWORD *)(v27 + 48) + *(_QWORD *)(v30 + 72) * v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16));
    sub_23FC06160(v29, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
    *(_QWORD *)(v0 + 152) = sub_23FD73DE4();
    sub_23FBFD684(&qword_256F5EAD0);
    sub_23FC74828(&qword_256F5EAD8);
    sub_23FC76558();
    sub_23FC15A24();
    v31 = (_QWORD *)sub_23FC76160(MEMORY[0x24BE54710]);
    *(_QWORD *)(v0 + 616) = v31;
    v32 = sub_23FC759E8(v31, (uint64_t)sub_23FC6BC10);
    return v33(v32);
  }
  v34 = 63 - v22;
  v35 = *(_QWORD **)(v0 + 592);
  if (v34 > 0x7F)
  {
    if (v35[8])
    {
LABEL_12:
      sub_23FC76370();
      goto LABEL_9;
    }
    if (v34 >= 0xC0)
    {
      if (v35[9])
        goto LABEL_12;
      if (v34 >= 0x100)
      {
        if (v35[10])
          goto LABEL_12;
        if (v34 > 0x13F)
        {
          if (v35[11])
            goto LABEL_12;
          v36 = v34 >> 6;
          v37 = 12;
          while (v37 - 7 < v36)
          {
            if (v35[v37++])
              goto LABEL_12;
          }
        }
      }
    }
  }
  swift_release();
  sub_23FC1002C();
  v39 = *(_QWORD *)(v0 + 424);
  sub_23FD4BD64(*(_QWORD *)(v0 + 128), v39);
  sub_23FC752FC(v39);
  if (v40)
  {
    sub_23FC584B0(*(_QWORD *)(v0 + 424), &qword_256F5EB80);
    sub_23FC7562C();
    sub_23FD72BE4();
    v41 = sub_23FC75B54();
    if (sub_23FC5E334(v41))
    {
      v42 = (_WORD *)sub_23FBFEFF4();
      sub_23FC75DFC(v42);
      sub_23FC75350(&dword_23FBF8000, v43, v44, "No candidates found in SystemCandidateGeneration");
      sub_23FBFEFA0();
    }
    v45 = *(_QWORD *)(v0 + 368);
    sub_23FC7669C();
    sub_23FC595C4(v45, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    goto LABEL_28;
  }
  v46 = *(NSObject **)(v0 + 416);
  sub_23FC748BC(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 480), type metadata accessor for RetrievedValue);
  sub_23FC7562C();
  sub_23FD72BE4();
  v47 = sub_23FC75B54();
  v48 = sub_23FC753CC(v47);
  v49 = &loc_23FD75000;
  if (v48)
  {
    v50 = *(_QWORD *)(v0 + 456);
    v51 = (uint8_t *)sub_23FBFEFF4();
    v165 = sub_23FBFEFF4();
    *(_DWORD *)v51 = 136315138;
    sub_23FC75394();
    v52 = sub_23FC75E34();
    v53 = MEMORY[0x242678AA4](v52, v50);
    sub_23FC102FC();
    *(_QWORD *)(v0 + 160) = sub_23FC767A0(v53, v54, &v165);
    sub_23FC75CD4();
    swift_bridgeObjectRelease();
    sub_23FBFF114(&dword_23FBF8000, v46, (os_log_type_t)v18, "Found candidates %s", v51);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC7669C();
  v55 = sub_23FBFF1AC();
  v160 = v56;
  ((void (*)(uint64_t))v56)(v55);
  v57 = *(_QWORD *)(v0 + 504);
  v58 = *(NSObject **)(v0 + 480);
  sub_23FD74774();
  v59 = sub_23FC5C874();
  v60 = *(_QWORD *)(v0 + 520);
  v61 = *(_QWORD *)(v0 + 512);
  if (v59 != *MEMORY[0x24BEB9CF8])
  {
    sub_23FC7603C(v61);
    sub_23FC7562C();
    sub_23FD72BE4();
    v76 = sub_23FC75B54();
    if (sub_23FC09114(v76))
    {
      v77 = (uint8_t *)sub_23FBFEFF4();
      *(_WORD *)v77 = 0;
      sub_23FC754C8(&dword_23FBF8000, v58, (os_log_type_t)v60, "candidates are not AppEntity types. Skipping identifier query hydration", v77);
      sub_23FBFEFA0();
    }

    v78 = sub_23FC5CCE8();
    v86 = sub_23FC76050(v78, v79, v80, v81, v82, v83, v84, v85, v135, v138, v140, v142, v144, v146, v148, v150, v152, v154, v156,
            v158,
            v160);
    sub_23FC767BC(v86, type metadata accessor for RetrievedValue);
    sub_23FC75394();
    v14 = *(_QWORD *)(v0 + 128);
    goto LABEL_6;
  }
  v62 = *(_QWORD *)(v0 + 336);
  sub_23FC76330(v61);
  swift_release();
  sub_23FD74930();
  v63 = sub_23FD74888();
  v64 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v62, 1, v63);
  sub_23FC5F358(v64, &qword_256F5EB78);
  if ((_DWORD)v64 == 1)
  {
    sub_23FC7562C();
    sub_23FD72BE4();
    v65 = sub_23FC09250();
    if (sub_23FC5E334(v65))
    {
      v66 = (_WORD *)sub_23FBFEFF4();
      sub_23FC75DFC(v66);
      sub_23FC75350(&dword_23FBF8000, v67, v68, "Identifier query not found. Unable to hydrate candidates.");
      sub_23FBFEFA0();
    }
    sub_23FC76320();
    v75 = sub_23FC76050(v57, v60, v69, v70, v71, v72, v73, v74, v135, v138, v140, v142, v144, v146, v148, v150, v152, v154, v156,
            v158,
            v160);
    sub_23FC767BC(v75, type metadata accessor for RetrievedValue);
LABEL_28:
    sub_23FC760DC();
LABEL_5:
    v14 = MEMORY[0x24BEE4AF8];
LABEL_6:
    v136 = v14;
    sub_23FC7508C();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5CDA8();
    sub_23FC5CDF0();
    return sub_23FC7588C(v136, *(uint64_t (**)(void))(v0 + 8));
  }
  sub_23FC75394();
  v87 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + 16);
  if (v87)
  {
    v158 = *(_QWORD *)(v0 + 320);
    sub_23FC76308();
    v164 = *(_QWORD *)(v88 + 72);
    v163 = *MEMORY[0x24BEB99E0];
    v156 = v89;
    sub_23FC101D8();
    v90 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_23FC75E68();
      sub_23FC75B7C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
      if (sub_23FC762F8() == v163)
      {
        v91 = *(_QWORD *)(v0 + 472);
        v92 = *(_QWORD *)(v0 + 328);
        sub_23FC76028();
        v93 = sub_23FC76664();
        v1 = v90;
        sub_23FBFF1E4(v92, v93, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v158 + 16));
        swift_release();
        v49 = (void *)sub_23FD746E4();
        v162 = v94;
        sub_23FC15950(v92, *(uint64_t (**)(uint64_t, uint64_t))(v158 + 8));
        sub_23FC5806C(v91, type metadata accessor for RetrievedValue);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC75E98();
          sub_23FC9954C();
          v90 = v107;
        }
        v64 = *(_QWORD *)(v90 + 16);
        v95 = *(_QWORD *)(v90 + 24);
        if (v64 >= v95 >> 1)
        {
          sub_23FC76688(v95);
          sub_23FC9954C();
          v90 = v108;
        }
        *(_QWORD *)(v90 + 16) = v64 + 1;
        v96 = v90 + 16 * v64;
        *(_QWORD *)(v96 + 32) = v49;
        *(_QWORD *)(v96 + 40) = v162;
      }
      else
      {
        sub_23FC76130();
        sub_23FC7562C();
        sub_23FD72BE4();
        v97 = sub_23FC09250();
        if (sub_23FC75B6C(v97))
        {
          v98 = (uint8_t *)sub_23FBFEFF4();
          *(_WORD *)v98 = 0;
          sub_23FC754C8(&dword_23FBF8000, v64, v1, "Non-AppEntity candidate found in list of expected AppEntity candidates", v98);
          sub_23FBFEFA0();
        }
        sub_23FC762C8();
        v99 = sub_23FC5E96C();
        sub_23FC76050(v99, v100, v101, v102, v103, v104, v105, v106, v135, v138, v140, v142, v144, v146, v148, v150, v152, v154, v156,
          v158,
          v160);
        sub_23FC5806C((uint64_t)v49, type metadata accessor for RetrievedValue);
      }
      v60 += v164;
      --v87;
    }
    while (v87);
    sub_23FC10048();
  }
  else
  {
    v90 = MEMORY[0x24BEE4AF8];
  }
  v109 = *(NSObject **)(v0 + 400);
  sub_23FC7562C();
  sub_23FC101D8();
  sub_23FD72BE4();
  v110 = sub_23FC75B54();
  if (sub_23FC753CC(v110))
  {
    v111 = (uint8_t *)sub_23FBFEFF4();
    v165 = sub_23FBFEFF4();
    *(_DWORD *)v111 = 136315138;
    v112 = sub_23FC5AAE8();
    MEMORY[0x242678AA4](v112, MEMORY[0x24BEE0D00]);
    sub_23FC15A24();
    *(_QWORD *)(v0 + 144) = sub_23FC76348();
    sub_23FC76880();
    sub_23FC10048();
    sub_23FC103E8();
    sub_23FBFF114(&dword_23FBF8000, v109, (os_log_type_t)v18, "Identifiers: %s", v111);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }

  sub_23FC10048();
  v113 = sub_23FC5A8DC();
  sub_23FC76050(v113, v114, v115, v116, v117, v118, v119, v120, v135, v138, v140, v142, v144, v146, v148, v150, v152, v154, v156,
    v158,
    v160);
  sub_23FC7562C();
  v121 = sub_23FD72BE4();
  v122 = sub_23FD74F48();
  if (sub_23FC762C0(v121))
  {
    v123 = (uint8_t *)sub_23FBFEFF4();
    *(_WORD *)v123 = 0;
    sub_23FC754C8(&dword_23FBF8000, v121, v122, "Attempting to run Identifier query", v123);
    sub_23FBFEFA0();
  }
  v124 = *(_QWORD *)(v0 + 392);
  v125 = *(_QWORD *)(v0 + 344);
  v126 = *(_QWORD **)(v0 + 248);
  v127 = *(_QWORD *)(v0 + 240);

  sub_23FC76050(v124, v125, v128, v129, v130, v131, v132, v133, v137, v139, v141, v143, v145, v147, v149, v151, v153, v155, v157,
    v159,
    v161);
  sub_23FD73328();
  *v126 = v90;
  sub_23FC76248((uint64_t)v126, *MEMORY[0x24BE56ED8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 104));
  sub_23FD732F8();
  sub_23FD73334();
  sub_23FD7331C();
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v134 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 640) = v134;
  *v134 = v0;
  v134[1] = sub_23FC6C920;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23FC686D4)(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 216), v0 + 16);
}

uint64_t sub_23FC6BC10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC5D3A4();
  sub_23FC75F18();
  v0[78] = v2;
  v0[79] = v1;
  sub_23FC76470();
  sub_23FC584B0(v0[62], &qword_256F5EB88);
  if (v1)
    sub_23FC1002C();
  return sub_23FC5A63C();
}

void sub_23FC6BC98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  BOOL v48;
  os_log_type_t v49;
  _WORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  NSObject *v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  NSObject *v74;
  os_log_type_t v75;
  _WORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  int v113;
  uint64_t v114;
  uint64_t v115;

  v2 = v0 + 128;
  v3 = *(_QWORD *)(v0 + 624);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 136) = MEMORY[0x24BEE4AF8];
    v112 = (uint64_t *)(v0 + 136);
    sub_23FC9B9C8();
    v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    v8 = *(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16);
    do
    {
      v9 = *(_QWORD *)(v0 + 448);
      v10 = *(_QWORD *)(v0 + 440);
      v8(v9, v6, *(_QWORD *)(v0 + 432));
      sub_23FD7418C();
      sub_23FD741A4();
      sub_23FC5C178(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      v11 = *(_QWORD *)(v0 + 136);
      if ((sub_23FC5D484() & 1) == 0)
      {
        sub_23FC75E98();
        sub_23FC9B9C8();
        v11 = *v112;
      }
      v1 = *(_QWORD *)(v11 + 16);
      if (v1 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_23FC9B9C8();
        v11 = *v112;
      }
      *(_QWORD *)(v11 + 16) = v1 + 1;
      sub_23FC764E0();
      sub_23FC748BC(v14, v11 + v12 + *(_QWORD *)(v13 + 72) * v1, type metadata accessor for RetrievedValue);
      v6 += v7;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23FC5A2A8();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v15 = *(_QWORD *)(v11 + 16);
  v16 = *(_QWORD *)v2;
  v17 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v15 > *(_QWORD *)(v16 + 24) >> 1)
  {
    sub_23FC998FC();
    v16 = v18;
  }
  if (!*(_QWORD *)(v11 + 16))
  {
    if (!v15)
      goto LABEL_25;
    goto LABEL_80;
  }
  v19 = *(_QWORD *)(v16 + 16);
  if ((*(_QWORD *)(v16 + 24) >> 1) - v19 < v15)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v20 = *(_QWORD *)(v0 + 464);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = *(_QWORD *)(v20 + 72);
  v23 = v16 + v21 + v22 * v19;
  if (v11 + v21 < v23 + v22 * v15 && v23 < v11 + v21 + v22 * v15)
    goto LABEL_84;
  swift_arrayInitWithCopy();
  if (v15)
  {
    v25 = *(_QWORD *)(v16 + 16);
    v26 = __OFADD__(v25, v15);
    v27 = v25 + v15;
    if (!v26)
    {
      *(_QWORD *)(v16 + 16) = v27;
      goto LABEL_25;
    }
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
LABEL_25:
  v28 = *(_QWORD *)(v0 + 528);
  v30 = *(_QWORD *)(v0 + 504);
  v29 = *(_QWORD *)(v0 + 512);
  sub_23FC1002C();
  *(_QWORD *)(v0 + 128) = v16;
  sub_23FC5B3B0(v28, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  v31 = *(_QWORD *)(v0 + 608);
  v32 = *(_QWORD *)(v0 + 600);
  if (v31)
  {
    v33 = (v31 - 1) & v31;
    v34 = __clz(__rbit64(v31)) | (v32 << 6);
    v35 = *(_QWORD *)(v0 + 592);
    goto LABEL_27;
  }
  v41 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
LABEL_83:
    __break(1u);
LABEL_84:
    sub_23FD75278();
    sub_23FC75E08();
    return;
  }
  v42 = (1 << *(_BYTE *)(v0 + 664)) + 63;
  v35 = *(_QWORD *)(v0 + 592);
  if (v41 >= (uint64_t)(v42 >> 6))
    goto LABEL_42;
  v43 = v35 + 56;
  v44 = *(_QWORD *)(v35 + 56 + 8 * v41);
  ++v32;
  if (v44)
  {
LABEL_31:
    v33 = (v44 - 1) & v44;
    v34 = __clz(__rbit64(v44)) + (v32 << 6);
LABEL_27:
    *(_QWORD *)(v0 + 608) = v33;
    *(_QWORD *)(v0 + 600) = v32;
    v36 = *(_QWORD *)(v0 + 536);
    v37 = *(_QWORD *)(v0 + 528);
    v38 = *(_QWORD *)(v0 + 512);
    sub_23FC06160(v36, *(_QWORD *)(v35 + 48) + *(_QWORD *)(v38 + 72) * v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16));
    sub_23FC06160(v37, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 32));
    *(_QWORD *)(v0 + 152) = sub_23FD73DE4();
    sub_23FBFD684(&qword_256F5EAD0);
    sub_23FC74828(&qword_256F5EAD8);
    sub_23FC76558();
    sub_23FC15A24();
    v39 = (_QWORD *)sub_23FC76160(MEMORY[0x24BE54710]);
    *(_QWORD *)(v0 + 616) = v39;
    sub_23FC759E8(v39, (uint64_t)sub_23FC6BC10);
    sub_23FC75E08();
    __asm { BR              X6 }
  }
  v45 = v42 >> 6;
  v32 = v41 + 1;
  if (v41 + 1 >= v45)
    goto LABEL_42;
  v44 = *(_QWORD *)(v43 + 8 * v32);
  if (v44)
    goto LABEL_31;
  v32 = v41 + 2;
  if (v41 + 2 >= v45)
    goto LABEL_42;
  v44 = *(_QWORD *)(v43 + 8 * v32);
  if (v44)
    goto LABEL_31;
  v46 = v41 + 3;
  if (v46 >= v45)
  {
LABEL_42:
    swift_release();
    sub_23FC1002C();
    v47 = *(_QWORD *)(v0 + 424);
    sub_23FD4BD64(*(_QWORD *)(v0 + 128), v47);
    sub_23FC752FC(v47);
    if (v48)
    {
      sub_23FC584B0(*(_QWORD *)(v0 + 424), &qword_256F5EB80);
      sub_23FC7562C();
      sub_23FD72BE4();
      v49 = sub_23FC75B54();
      if (sub_23FC5E334(v49))
      {
        v50 = (_WORD *)sub_23FBFEFF4();
        sub_23FC75DFC(v50);
        sub_23FC75350(&dword_23FBF8000, v51, v52, "No candidates found in SystemCandidateGeneration");
        sub_23FBFEFA0();
      }
      v53 = *(_QWORD *)(v0 + 368);
      sub_23FC7669C();
      sub_23FC595C4(v53, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    }
    else
    {
      v54 = *(NSObject **)(v0 + 416);
      sub_23FC748BC(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 480), type metadata accessor for RetrievedValue);
      sub_23FC7562C();
      sub_23FD72BE4();
      v55 = sub_23FC75B54();
      if (sub_23FC753CC(v55))
      {
        v57 = *(_QWORD *)(v0 + 456);
        v58 = (uint8_t *)sub_23FBFEFF4();
        v115 = sub_23FBFEFF4();
        *(_DWORD *)v58 = 136315138;
        sub_23FC75394();
        v59 = sub_23FC75E34();
        v60 = MEMORY[0x242678AA4](v59, v57);
        sub_23FC102FC();
        *(_QWORD *)(v0 + 160) = sub_23FC767A0(v60, v61, &v115);
        sub_23FC75CD4();
        swift_bridgeObjectRelease();
        sub_23FBFF114(&dword_23FBF8000, v54, (os_log_type_t)v30, "Found candidates %s", v58);
        sub_23FBFF10C();
        sub_23FBFEFA0();
      }

      v62 = sub_23FC5A8DC();
      v63(v62);
      v64 = *(NSObject **)(v0 + 480);
      sub_23FD74774();
      v65 = sub_23FC5A8DC();
      v67 = v66(v65);
      v68 = *(_QWORD *)(v0 + 520);
      v69 = *(_QWORD *)(v0 + 512);
      if (v67 != *MEMORY[0x24BEB9CF8])
      {
        sub_23FC7603C(v69);
        sub_23FC7562C();
        sub_23FD72BE4();
        v80 = sub_23FC75B54();
        if (sub_23FC09114(v80))
        {
          v81 = (uint8_t *)sub_23FBFEFF4();
          *(_WORD *)v81 = 0;
          sub_23FC754C8(&dword_23FBF8000, v64, (os_log_type_t)v68, "candidates are not AppEntity types. Skipping identifier query hydration", v81);
          sub_23FBFEFA0();
        }
        v82 = *(_QWORD *)(v0 + 480);

        sub_23FC75FE0();
        sub_23FC75CCC();
        sub_23FC5806C(v82, type metadata accessor for RetrievedValue);
        sub_23FC75394();
LABEL_59:
        swift_task_dealloc();
        sub_23FC5B2F4();
        sub_23FC5B980();
        sub_23FC5BCA0();
        sub_23FC090D0();
        sub_23FC090C0();
        sub_23FC5A574();
        sub_23FC5AB04();
        sub_23FC5AC3C();
        sub_23FC5B2D4();
        sub_23FC5D040();
        sub_23FC5C988();
        sub_23FC5C440();
        sub_23FC5C438();
        sub_23FC5C430();
        sub_23FC5C428();
        sub_23FC5C420();
        sub_23FC5BFE8();
        sub_23FC5BFE0();
        sub_23FC5C980();
        sub_23FC5D834();
        sub_23FC5E0B8();
        sub_23FC5EC14();
        sub_23FC5DC9C();
        sub_23FC5CDA8();
        sub_23FC75E08();
        __asm { BR              X1 }
      }
      v70 = *(_QWORD *)(v0 + 336);
      sub_23FC76330(v69);
      swift_release();
      sub_23FD74930();
      v71 = sub_23FD74888();
      v72 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v70, 1, v71);
      v73 = v72;
      sub_23FC761A8(v72, &qword_256F5EB78);
      v48 = v73 == 1;
      v74 = (v0 + 128);
      if (!v48)
      {
        sub_23FC75394();
        v84 = *(_QWORD *)(*(_QWORD *)v2 + 16);
        if (v84)
        {
          v110 = *(_QWORD *)(v0 + 320);
          sub_23FC76308();
          v86 = *(_QWORD *)(v85 + 72);
          v113 = *MEMORY[0x24BEB99E0];
          sub_23FC101D8();
          v87 = MEMORY[0x24BEE4AF8];
          v109 = v86;
          do
          {
            sub_23FC75E68();
            sub_23FC75B7C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16));
            if (sub_23FC762F8() == v113)
            {
              v88 = *(_QWORD *)(v0 + 472);
              v89 = *(_QWORD *)(v0 + 328);
              sub_23FC76028();
              v90 = sub_23FC76664();
              LOBYTE(v1) = v110;
              sub_23FBFF1E4(v89, v90, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 16));
              swift_release();
              v2 = sub_23FD746E4();
              v111 = v91;
              (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v89, v87);
              sub_23FC5806C(v88, type metadata accessor for RetrievedValue);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23FC75E98();
                sub_23FC9954C();
                v87 = v96;
              }
              v74 = *(NSObject **)(v87 + 16);
              v92 = *(_QWORD *)(v87 + 24);
              v86 = v109;
              if ((unint64_t)v74 >= v92 >> 1)
              {
                sub_23FC76688(v92);
                sub_23FC9954C();
                v87 = v97;
              }
              *(_QWORD *)(v87 + 16) = (char *)&v74->isa + 1;
              v93 = v87 + 16 * (_QWORD)v74;
              *(_QWORD *)(v93 + 32) = v2;
              *(_QWORD *)(v93 + 40) = v111;
            }
            else
            {
              sub_23FC76130();
              sub_23FC7562C();
              sub_23FD72BE4();
              v94 = sub_23FC09250();
              if (sub_23FC75B6C(v94))
              {
                v95 = (uint8_t *)sub_23FBFEFF4();
                *(_WORD *)v95 = 0;
                sub_23FC754C8(&dword_23FBF8000, v74, (os_log_type_t)v1, "Non-AppEntity candidate found in list of expected AppEntity candidates", v95);
                sub_23FBFEFA0();
              }
              sub_23FC762C8();
              sub_23FC5E96C();
              sub_23FC75CCC();
              sub_23FC5806C(v2, type metadata accessor for RetrievedValue);
            }
            v68 += v86;
            --v84;
          }
          while (v84);
          sub_23FC10048();
        }
        else
        {
          v87 = MEMORY[0x24BEE4AF8];
        }
        v98 = *(NSObject **)(v0 + 400);
        sub_23FC7562C();
        sub_23FC101D8();
        sub_23FD72BE4();
        v99 = sub_23FC75B54();
        v114 = v87;
        if (sub_23FC753CC(v99))
        {
          v100 = (uint8_t *)sub_23FBFEFF4();
          v115 = sub_23FBFEFF4();
          *(_DWORD *)v100 = 136315138;
          v101 = sub_23FC5C180();
          MEMORY[0x242678AA4](v101, MEMORY[0x24BEE0D00]);
          sub_23FC0AAF8();
          *(_QWORD *)(v0 + 144) = sub_23FC76348();
          sub_23FC76880();
          sub_23FC10048();
          sub_23FC103E8();
          sub_23FBFF114(&dword_23FBF8000, v98, (os_log_type_t)v30, "Identifiers: %s", v100);
          sub_23FC754FC();
          sub_23FBFEFA0();
        }

        sub_23FC10048();
        sub_23FBFF1AC();
        sub_23FC75CCC();
        sub_23FC7562C();
        v102 = sub_23FD72BE4();
        v103 = sub_23FD74F48();
        if (sub_23FC762C0(v102))
        {
          v104 = (uint8_t *)sub_23FBFEFF4();
          *(_WORD *)v104 = 0;
          sub_23FC754C8(&dword_23FBF8000, v102, v103, "Attempting to run Identifier query", v104);
          sub_23FBFEFA0();
        }
        v105 = v0;
        v106 = *(_QWORD **)(v0 + 248);
        v107 = *(_QWORD *)(v0 + 240);

        sub_23FC75CCC();
        sub_23FD73328();
        *v106 = v114;
        sub_23FC76248((uint64_t)v106, *MEMORY[0x24BE56ED8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 104));
        sub_23FD732F8();
        sub_23FD73334();
        sub_23FC5C5C0();
        sub_23FD7331C();
        *(_QWORD *)(v105 + 48) = 0;
        *(_OWORD *)(v105 + 32) = 0u;
        *(_OWORD *)(v105 + 16) = 0u;
        v108 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v105 + 640) = v108;
        *v108 = v105;
        v108[1] = sub_23FC6C920;
        sub_23FC5B9C8(*(_QWORD *)(v105 + 280));
        sub_23FC75E08();
        sub_23FC686D4();
        return;
      }
      sub_23FC7562C();
      sub_23FD72BE4();
      v75 = sub_23FC09250();
      if (sub_23FC5E334(v75))
      {
        v76 = (_WORD *)sub_23FBFEFF4();
        sub_23FC75DFC(v76);
        sub_23FC75350(&dword_23FBF8000, v77, v78, "Identifier query not found. Unable to hydrate candidates.");
        sub_23FBFEFA0();
      }
      sub_23FC76320();
      v79 = sub_23FC75CCC();
      sub_23FC767BC(v79, type metadata accessor for RetrievedValue);
    }
    sub_23FC760DC();
    goto LABEL_59;
  }
  v44 = *(_QWORD *)(v43 + 8 * v46);
  if (v44)
  {
    v32 = v46;
    goto LABEL_31;
  }
  while (1)
  {
    v32 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v32 >= v45)
      goto LABEL_42;
    v44 = *(_QWORD *)(v43 + 8 * v32);
    ++v46;
    if (v44)
      goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_23FC6C920()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FC75F60();
  v12 = v2;
  v13 = v3;
  v11 = v1;
  v5 = v4;
  v11 = (_QWORD *)*v1;
  v6 = v11;
  sub_23FC75274(&v11);
  v6[81] = v0;
  v7 = swift_task_dealloc();
  v9 = v6[34];
  v8 = v6[35];
  if (!v0)
    v6[82] = v5;
  sub_23FC5F358(v7, &qword_256F5EB90);
  sub_23FC5B3B0(v8, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  return sub_23FC0906C();
}

uint64_t sub_23FC6C9D4()
{
  uint64_t v0;
  uint64_t v2;

  sub_23FC5E39C();
  sub_23FC5806C(*(_QWORD *)(v0 + 480), type metadata accessor for RetrievedValue);
  sub_23FC760DC();
  v2 = *(_QWORD *)(v0 + 656);
  sub_23FC7508C();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  return sub_23FC7588C(v2, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6CA98()
{
  uint64_t v0;

  sub_23FC5E39C();
  sub_23FC090C8(*(_QWORD *)(v0 + 512));
  sub_23FC58AC8();
  sub_23FC760DC();
  sub_23FC7508C();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  return sub_23FC75870(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6CB5C()
{
  uint64_t v0;

  sub_23FC5E39C();
  sub_23FC5806C(*(_QWORD *)(v0 + 480), type metadata accessor for RetrievedValue);
  sub_23FC760DC();
  sub_23FC7508C();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  return sub_23FC75870(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6CC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FC75AD4();
  *(_QWORD *)(v1 + 128) = v2;
  *(_QWORD *)(v1 + 136) = v0;
  *(_BYTE *)(v1 + 314) = v3;
  *(_BYTE *)(v1 + 313) = v4;
  *(_QWORD *)(v1 + 112) = v5;
  *(_QWORD *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 104) = v7;
  v8 = sub_23FC75FD8();
  *(_QWORD *)(v1 + 144) = v8;
  *(_QWORD *)(v1 + 152) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v1 + 160) = sub_23FC0901C();
  sub_23FC75670();
  sub_23FC754E8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v1 + 168) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 + 176) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 + 184) = type metadata accessor for ToolExecutionEvent(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v12 = sub_23FD75038();
  *(_QWORD *)(v1 + 192) = v12;
  *(_QWORD *)(v1 + 200) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v1 + 208) = sub_23FC0901C();
  v13 = sub_23FD73E08();
  *(_QWORD *)(v1 + 216) = v13;
  *(_QWORD *)(v1 + 224) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v1 + 232) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAE8);
  *(_QWORD *)(v1 + 240) = sub_23FC0901C();
  v14 = sub_23FC76568();
  *(_QWORD *)(v1 + 248) = v14;
  *(_QWORD *)(v1 + 256) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v1 + 264) = sub_23FC0901C();
  v15 = sub_23FC10100();
  *(_QWORD *)(v1 + 272) = v15;
  *(_QWORD *)(v1 + 280) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v1 + 288) = sub_23FC5C13C();
  *(_QWORD *)(v1 + 296) = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC75184();
}

uint64_t sub_23FC6CD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23FC5ACE0();
  v2 = sub_23FD73DE4();
  v3 = sub_23FC6D428(v2);
  sub_23FC1002C();
  if ((v3 & 1) != 0)
    goto LABEL_6;
  swift_getKeyPath();
  sub_23FD71534();
  sub_23FC58AC8();
  if ((*(_BYTE *)(v0 + 312) & 1) != 0)
  {
    v4 = *(NSObject **)(v0 + 288);
    sub_23FC757FC();
    sub_23FD72BE4();
    v5 = sub_23FC75640();
    if (sub_23FC762C0(v4))
    {
      v6 = (uint8_t *)sub_23FBFEFF4();
      *(_WORD *)v6 = 0;
      sub_23FC754C8(&dword_23FBF8000, v4, v5, "DefaultRuntime: skipping confirmation due to DisableSearchPlusActConfirmation user default", v6);
      sub_23FBFEFA0();
    }
    v7 = *(_QWORD *)(v0 + 280);

    sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
LABEL_6:
    v9 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = sub_23FD7445C();
    sub_23FC5A8C8(v8, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    v12 = *(_QWORD *)(v0 + 224);
    if ((v11 & 1) != 0)
    {
      v13 = sub_23FC73124(*(_QWORD *)(v0 + 232));
      sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      if ((v13 & 1) == 0)
      {
        v14 = *(_QWORD *)(v0 + 256);
        v15 = *(_QWORD *)(v0 + 240);
        v16 = sub_23FC76804();
        sub_23FC75534(v16);
        v17 = sub_23FC76830();
        sub_23FC75534(v17);
        sub_23FC76284(*MEMORY[0x24BE532D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 104));
        v36 = sub_23FC75580();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v15, 1, 1, v36);
        sub_23FBFF1EC();
        goto LABEL_14;
      }
    }
    else
    {
      sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    }
    v19 = *(_QWORD *)(v0 + 168);
    v18 = *(_QWORD *)(v0 + 176);
    sub_23FC75394();
    v20 = sub_23FC06250();
    v24 = sub_23FC765A4(v20, v21, v22, v23);
    sub_23FC5C180();
    v25 = MEMORY[0x2426797E8](&unk_23FD83280, v24);
    *(_QWORD *)(v0 + 16) = v19;
    *(_QWORD *)(v0 + 24) = v24;
    *(_QWORD *)(v0 + 32) = v18;
    *(_QWORD *)(v0 + 40) = v25;
    sub_23FC767F8();
  }
  sub_23FC757FC();
  v26 = sub_23FD72BE4();
  v27 = sub_23FD74F6C();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)sub_23FBFEFF4();
    *(_WORD *)v28 = 0;
    sub_23FC754C8(&dword_23FBF8000, v26, v27, "DefaultRuntime: requesting confirmation given risk level", v28);
    sub_23FBFEFA0();
  }
  v29 = *(_QWORD *)(v0 + 296);
  v30 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 256);
  v31 = *(_QWORD *)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 240);

  sub_23FC5B3B0(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  sub_23FC7621C();
  sub_23FD74B40();
  sub_23FC76630();
  sub_23FC5AE8C(v31, *MEMORY[0x24BE532D8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v33 = sub_23FC75580();
  sub_23FBFF0F8(v32, v34, v35, v33);
  sub_23FC5E880();
LABEL_14:
  sub_23FD73A00();
  v37 = sub_23FC75A8C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, v37);
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return sub_23FC09088(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6D1A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC764BC();
  v2 = v0[25];
  v1 = v0[26];
  v3 = v0[38] + *(_QWORD *)(*(_QWORD *)v0[38] + 136);
  sub_23FC75394();
  sub_23FC06160(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_23FC58AC8();
  return sub_23FC0906C();
}

uint64_t sub_23FC6D220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23FC5ACE0();
  v3 = *(_QWORD *)(v0 + 208);
  sub_23FC100EC(v3, 1, *(_QWORD *)(v0 + 184));
  if (v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(v3, *(_QWORD *)(v0 + 192));
    goto LABEL_9;
  }
  v5 = sub_23FC768C4();
  if (v5 != 7)
  {
    v15 = sub_23FC5E880();
    v17(v15, v16);
    goto LABEL_9;
  }
  v6 = *(unsigned __int8 *)(v0 + 313);
  v7 = *(void **)(v3 + 16);
  swift_bridgeObjectRelease();

  sub_23FBFD684(&qword_256F5EB20);
  sub_23FC76758();
  sub_23FC76758();
  v8 = swift_release();
  sub_23FC761A8(v8, &qword_256F5EB28);
  if (v6 != 1)
  {
    sub_23FC76640();
    sub_23FC75E58(v20);
    goto LABEL_12;
  }
  if ((sub_23FC73124(*(_QWORD *)(v0 + 128)) & 1) != 0)
  {
LABEL_9:
    sub_23FC76640();
    v18 = *(_BYTE *)(v0 + 313);
    sub_23FC75E58(v19);
    if ((v18 & 1) != 0)
    {
      sub_23FC090C8(*(_QWORD *)(v0 + 152));
      goto LABEL_15;
    }
LABEL_12:
    v21 = *(_QWORD *)(v0 + 152);
    v10 = sub_23FD498BC();
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    if ((v10 & 1) != 0)
    {
      sub_23FC760F8();
      sub_23FD74B40();
      sub_23FC76630();
      v13 = *MEMORY[0x24BE532D8];
      v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104);
      goto LABEL_14;
    }
LABEL_15:
    v23 = 1;
    goto LABEL_16;
  }
  v9 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = sub_23FC76804();
  sub_23FC75534(v11);
  v12 = sub_23FC76830();
  sub_23FC75534(v12);
  v13 = *MEMORY[0x24BE532D0];
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);
LABEL_14:
  sub_23FC76284(v13, v14);
  v22 = sub_23FC75580();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, 1, 1, v22);
  sub_23FBFF1EC();
  sub_23FD73A00();
  v23 = 0;
LABEL_16:
  v24 = sub_23FC75A8C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, v23, 1, v24);
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return sub_23FC09088(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC6D428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(_BYTE *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  _BYTE *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(_BYTE *, uint64_t);
  _BYTE *v58;
  _BYTE *v59;
  char v60;
  void (*v61)(_BYTE *, uint64_t);
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v73;
  void (*v74)(_BYTE *, uint64_t);
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t result;
  _BYTE v82[12];
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  unsigned int (*v103)(_BYTE *, uint64_t);
  uint64_t v104;
  void (*v105)(_BYTE *, uint64_t);
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;

  v2 = sub_23FD71C84();
  v110 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v82[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23FD73A0C();
  v108 = *(_QWORD *)(v6 - 8);
  v109 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v107 = &v82[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_23FD73514();
  v111 = *(_QWORD *)(v9 - 8);
  v112 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v114 = &v82[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_23FD7157C();
  v116 = *(_QWORD *)(v12 - 8);
  v117 = v12;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v115 = &v82[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14, v16);
  v118 = &v82[-v17];
  v18 = sub_23FD7409C();
  v19 = *(_QWORD *)(v18 - 8);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = &v82[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = &v82[-v25];
  v27 = sub_23FD73C7C();
  v106 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v101 = &v82[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = &v82[-v32];
  v34 = sub_23FD740CC();
  MEMORY[0x24BDAC7A8](v34, v35);
  v39 = *(_QWORD *)(a1 + 16);
  if (!v39)
    goto LABEL_45;
  v97 = v33;
  v113 = v5;
  v100 = v2;
  v98 = v27;
  v40 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  v119 = *(_QWORD *)(v38 + 72);
  v41 = &v82[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = v37;
  v43 = v38;
  (*(void (**)(_BYTE *, unint64_t, uint64_t))(v38 + 16))(v41, v40 + v119 * (v39 - 1), v37);
  sub_23FD740A8();
  v102 = a1;
  v44 = *(unsigned int (**)(_BYTE *, uint64_t))(v19 + 88);
  if (v44(v26, v18) != *MEMORY[0x24BE56AF8])
  {
    (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v41, v42);
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v26, v18);
LABEL_45:
    v76 = 1;
    return v76 & 1;
  }
  v94 = v41;
  v95 = v43;
  v96 = v42;
  v105 = *(void (**)(_BYTE *, uint64_t))(v19 + 96);
  v105(v26, v18);
  v45 = v106;
  v46 = (uint64_t)v97;
  v47 = v26;
  v48 = v98;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v106 + 32))(v97, v47, v98);
  v49 = sub_23FC73698(v46, v102);
  if ((v50 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v48);
LABEL_44:
    (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v94, v96);
    goto LABEL_45;
  }
  v103 = v44;
  v104 = v19;
  v51 = sub_23FC73A50(v49, v102);
  v52 = v101;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v45 + 16))(v101, v46, v48);
  if ((v51 & 1) == 0)
  {
    v74 = *(void (**)(_BYTE *, uint64_t))(v45 + 8);
    v74(v52, v48);
    v75 = v48;
LABEL_43:
    v74((_BYTE *)v46, v75);
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  sub_23FD73BEC();
  v53 = *MEMORY[0x24BE56B98];
  v93 = *MEMORY[0x24BE53328];
  v92 = *MEMORY[0x24BE532D8];
  v91 = *MEMORY[0x24BE532E0];
  v90 = *MEMORY[0x24BE532E8];
  v89 = *MEMORY[0x24BE53300];
  v88 = *MEMORY[0x24BE53308];
  v87 = *MEMORY[0x24BE532F0];
  v86 = *MEMORY[0x24BE53310];
  v85 = *MEMORY[0x24BE532D0];
  v84 = *MEMORY[0x24BE532F8];
  v83 = *MEMORY[0x24BE53320];
  swift_bridgeObjectRetain();
  v54 = v111;
  v55 = v112;
  v57 = v103;
  v56 = v104;
  v99 = v53;
  while (1)
  {
    sub_23FD740A8();
    if (v57(v23, v18) == v53)
      break;
    (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v23, v18);
LABEL_36:
    v40 += v119;
    if (!--v39)
    {
      swift_bridgeObjectRelease();
      v73 = 0;
      v61 = *(void (**)(_BYTE *, uint64_t))(v116 + 8);
      goto LABEL_38;
    }
  }
  v105(v23, v18);
  v58 = v114;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 32))(v114, v23, v55);
  v59 = v115;
  sub_23FD734D8();
  v60 = sub_23FD71558();
  v61 = *(void (**)(_BYTE *, uint64_t))(v116 + 8);
  v61(v59, v117);
  if ((v60 & 1) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v58, v55);
    goto LABEL_35;
  }
  v62 = v107;
  sub_23FD73508();
  v63 = v113;
  sub_23FD739F4();
  (*(void (**)(_BYTE *, uint64_t))(v108 + 8))(v62, v109);
  v64 = v110;
  v65 = v100;
  v66 = (*(uint64_t (**)(_BYTE *, uint64_t))(v110 + 88))(v63, v100);
  if (v66 == v93)
    goto LABEL_32;
  if (v66 == v92)
    goto LABEL_50;
  if (v66 == v91)
  {
LABEL_32:
    v54 = v111;
    v55 = v112;
    (*(void (**)(_BYTE *, uint64_t))(v111 + 8))(v58, v112);
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v113, v65);
LABEL_35:
    v57 = v103;
    v56 = v104;
    v53 = v99;
    goto LABEL_36;
  }
  if (v66 != v90 && v66 != v89 && v66 != v88)
  {
    if (v66 != v87 && v66 != v86 && v66 != v85 && v66 != v84 && v66 != v83)
    {
      result = sub_23FD75374();
      __break(1u);
      return result;
    }
    goto LABEL_32;
  }
LABEL_50:
  (*(void (**)(_BYTE *, uint64_t))(v111 + 8))(v58, v112);
  (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v113, v65);
  swift_bridgeObjectRelease();
  v73 = 1;
LABEL_38:
  v61(v118, v117);
  v74 = *(void (**)(_BYTE *, uint64_t))(v106 + 8);
  v74(v101, v98);
  swift_bridgeObjectRelease();
  v46 = (uint64_t)v97;
  if ((v73 & 1) != 0)
  {
    v75 = v98;
    goto LABEL_43;
  }
  if (qword_256F5D2F0 != -1)
    swift_once();
  v77 = qword_256F65BD8;
  v78 = sub_23FD73C58();
  sub_23FC7F9F8(v78, v79, v77);
  v76 = v80;
  swift_bridgeObjectRelease();
  v74((_BYTE *)v46, v98);
  (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v94, v96);
  return v76 & 1;
}

void sub_23FC6DBE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23FC75AD4();
  v1[57] = v2;
  v1[58] = v0;
  v1[55] = v3;
  v1[56] = v4;
  v1[54] = v5;
  v6 = sub_23FD71648();
  v1[59] = v6;
  v1[60] = *(_QWORD *)(v6 - 8);
  v1[61] = sub_23FC0901C();
  v7 = sub_23FD71684();
  v1[62] = v7;
  v1[63] = *(_QWORD *)(v7 - 8);
  v1[64] = sub_23FC0901C();
  v8 = sub_23FD7148C();
  v1[65] = v8;
  v1[66] = *(_QWORD *)(v8 - 8);
  v1[67] = sub_23FC0901C();
  v9 = sub_23FD73160();
  v1[68] = v9;
  v1[69] = *(_QWORD *)(v9 - 8);
  v1[70] = sub_23FC0901C();
  v10 = sub_23FD7409C();
  v1[71] = v10;
  v1[72] = *(_QWORD *)(v10 - 8);
  v1[73] = sub_23FC0901C();
  v11 = sub_23FD71750();
  v1[74] = v11;
  v1[75] = *(_QWORD *)(v11 - 8);
  v1[76] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAF8);
  v1[77] = sub_23FC5C13C();
  v1[78] = sub_23FC5C588();
  v1[79] = sub_23FC5C588();
  v1[80] = sub_23FC5C588();
  v1[81] = sub_23FC5C588();
  v12 = sub_23FD74924();
  v1[82] = v12;
  v1[83] = *(_QWORD *)(v12 - 8);
  v1[84] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAE8);
  v1[85] = sub_23FC0901C();
  v13 = sub_23FC76568();
  v1[86] = v13;
  v1[87] = *(_QWORD *)(v13 - 8);
  v1[88] = sub_23FC5C13C();
  v1[89] = sub_23FC5C588();
  v14 = sub_23FD744EC();
  v1[90] = v14;
  v1[91] = *(_QWORD *)(v14 - 8);
  v1[92] = sub_23FC0901C();
  v15 = sub_23FD744F8();
  v1[93] = v15;
  v1[94] = *(_QWORD *)(v15 - 8);
  v1[95] = sub_23FC0901C();
  sub_23FC75670();
  sub_23FC754E8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[96] = AssociatedTypeWitness;
  v17 = sub_23FD75038();
  v1[97] = v17;
  v1[98] = *(_QWORD *)(v17 - 8);
  v1[99] = sub_23FC0901C();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1[100] = AssociatedConformanceWitness;
  sub_23FC76588();
  v23 = type metadata accessor for TypedValueExecutionResult(v19, v20, v21, v22);
  v1[101] = v23;
  v1[102] = *(_QWORD *)(v23 - 8);
  v1[103] = sub_23FC0901C();
  sub_23FC76588();
  v28 = type metadata accessor for ToolExecutionEventStream(v24, v25, v26, v27);
  v1[104] = v28;
  v29 = MEMORY[0x2426797E8](&unk_23FD83280, v28);
  v1[105] = v29;
  v1[2] = AssociatedTypeWitness;
  v1[3] = v28;
  v1[4] = AssociatedConformanceWitness;
  sub_23FC7660C(v29);
}

uint64_t sub_23FC6DE74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[106] = a1;
  v1[107] = *(_QWORD *)(a1 - 8);
  v1[108] = sub_23FC5C13C();
  v1[109] = sub_23FC5C588();
  v1[110] = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EB00);
  v1[111] = sub_23FC0901C();
  v2 = sub_23FC76840();
  v1[112] = v2;
  v1[113] = *(_QWORD *)(v2 - 8);
  v1[114] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EB08);
  v1[115] = sub_23FC0901C();
  v3 = sub_23FC10100();
  v1[116] = v3;
  v1[117] = *(_QWORD *)(v3 - 8);
  v1[118] = sub_23FC5C13C();
  v1[119] = sub_23FC5C588();
  v1[120] = sub_23FC5C588();
  v1[121] = sub_23FC5C588();
  v1[122] = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EB10);
  v1[123] = sub_23FC0901C();
  v4 = sub_23FD73A0C();
  v1[124] = v4;
  v1[125] = *(_QWORD *)(v4 - 8);
  v1[126] = sub_23FC0901C();
  v5 = sub_23FD72EC0();
  v1[127] = v5;
  v1[128] = *(_QWORD *)(v5 - 8);
  v1[129] = sub_23FC0901C();
  v6 = sub_23FD72E3C();
  v1[130] = v6;
  v1[131] = *(_QWORD *)(v6 - 8);
  v1[132] = sub_23FC0901C();
  v7 = sub_23FC75FD8();
  v1[133] = v7;
  v1[134] = *(_QWORD *)(v7 - 8);
  v1[135] = sub_23FC0901C();
  v8 = sub_23FC06250();
  v1[136] = v8;
  v1[137] = *(_QWORD *)(v8 - 8);
  v1[138] = sub_23FC5C13C();
  v1[139] = sub_23FC5C588();
  v1[140] = sub_23FC5C588();
  v9 = sub_23FD73C7C();
  v1[141] = v9;
  v1[142] = *(_QWORD *)(v9 - 8);
  v1[143] = sub_23FC5C13C();
  v1[144] = sub_23FC5C588();
  v1[145] = sub_23FC5C588();
  v1[146] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC75184();
}

uint64_t sub_23FC6E00C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[146];
  v2 = v0[141];
  v3 = v0[55];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[142] + 16);
  v0[147] = v4;
  v4(v1, v3, v2);
  v5 = sub_23FD73C58();
  v7 = v6;
  v0[148] = v5;
  v0[149] = v6;
  sub_23FD73BEC();
  v8 = (_QWORD *)swift_task_alloc();
  v0[150] = v8;
  *v8 = v0;
  v8[1] = sub_23FC6E0A8;
  return sub_23FC76128(v0[135], v5, v7);
}

uint64_t sub_23FC6E0A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 1208) = v1;
  swift_task_dealloc();
  if (v1)
    sub_23FC766A4();
  return sub_23FC5A63C();
}

uint64_t sub_23FC6E104()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 464) + *(_QWORD *)(**(_QWORD **)(v0 + 464) + 112));
  sub_23FBFDE40(v1, v1[3]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1216) = v2;
  *v2 = v0;
  v2[1] = sub_23FC6E18C;
  return sub_23FD72EF0();
}

uint64_t sub_23FC6E18C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 1224) = v1;
  swift_task_dealloc();
  if (v1)
    sub_23FC766A4();
  return sub_23FC5A63C();
}

uint64_t sub_23FC6E1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;

  sub_23FC764BC();
  v1 = *(_QWORD *)(v0 + 1032);
  v2 = *(_QWORD *)(v0 + 1024);
  sub_23FD72E30();
  sub_23FC5A8C8(v1, *MEMORY[0x24BE54788], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23FC5E714();
  sub_23FC7FAEC();
  *(_BYTE *)(v0 + 1505) = v3 & 1;
  sub_23FC1002C();
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FD73BD4();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1232) = v4;
  *v4 = v0;
  v4[1] = sub_23FC6E2B4;
  return sub_23FC6CC1C();
}

uint64_t sub_23FC6E2B4()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC6E2EC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v21)(void);
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[10];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  sub_23FC753DC();
  v78 = v2;
  v79 = v3;
  v77 = v0;
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 984);
  v6 = sub_23FC752FC(v5);
  if (v7)
  {
    v8 = *(unsigned __int8 *)(v0 + 1505);
    sub_23FC5F358(v6, &qword_256F5EB10);
    if (v8 == 1)
    {
      v9 = *(NSObject **)(v0 + 1192);
      sub_23FC762A8();
      sub_23FC101D8();
      sub_23FC5C100();
      v10 = sub_23FC75640();
      v11 = sub_23FC09114(v10);
      v12 = *(_QWORD *)(v0 + 1192);
      if (v11)
      {
        v13 = *(_QWORD *)(v0 + 1184);
        v14 = (uint8_t *)sub_23FBFEFF4();
        v76[0] = sub_23FBFEFF4();
        *(_DWORD *)v14 = 136315138;
        sub_23FC5C180();
        *(_QWORD *)(v0 + 376) = sub_23FC9DC40(v13, v12, v76);
        sub_23FC75CD4();
        sub_23FC75E60();
        sub_23FBFF114(&dword_23FBF8000, v9, v1, "DefaultRuntime: Disabling OpenWhenRun for %s", v14);
        sub_23FC754FC();
        sub_23FBFEFA0();
      }

      sub_23FC10048();
      v23 = sub_23FBFF1AC();
      v24(v23);
      v25 = *(_QWORD *)(v0 + 920);
      v26 = *(uint64_t **)(v0 + 912);
      v27 = *(_QWORD *)(v0 + 904);
      v28 = *(_QWORD *)(v0 + 896);
      v29 = *(_QWORD *)(v0 + 888);
      v30 = sub_23FC75FD0();
      v31 = swift_allocBox();
      *v32 = 0;
      sub_23FC5AE8C((uint64_t)v32, *MEMORY[0x24BEB9928], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104));
      *v26 = v31;
      v33 = *MEMORY[0x24BEB9A00];
      v34 = sub_23FC10290();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v26, v33, v34);
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x24BE55998], v28);
      v35 = sub_23FD71BC4();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, 1, 1, v35);
      sub_23FC5A8DC();
      sub_23FD73C10();
      v36 = sub_23FC76818();
      sub_23FC103A0(v25, 0, v37, v36);
      v38 = (void (*)(uint64_t, _QWORD))sub_23FD73C34();
      sub_23FCC4C50(v25);
      v38(v0 + 80, 0);
    }
    v39 = *(_QWORD *)(v0 + 1120);
    v40 = *(_QWORD *)(v0 + 1112);
    v41 = *(_QWORD *)(v0 + 1096);
    *(_QWORD *)(v0 + 1240) = sub_23FD73C40();
    sub_23FD724D0();
    v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
    *(_QWORD *)(v0 + 1248) = v42;
    sub_23FC5AE8C(v40, v39, v42);
    sub_23FC101D8();
    sub_23FC5AAE8();
    v43 = sub_23FD72BE4();
    v44 = sub_23FD74F6C();
    v45 = sub_23FC766F8(v43);
    v46 = *(_QWORD *)(v0 + 1192);
    if (v45)
    {
      v47 = *(_QWORD *)(v0 + 1184);
      v69 = *(_QWORD *)(v0 + 1096);
      v48 = sub_23FBFEFF4();
      v76[0] = sub_23FBFEFF4();
      *(_DWORD *)v48 = 136315650;
      sub_23FC5AFCC();
      *(_QWORD *)(v0 + 400) = sub_23FC9DC40(v47, v46, v76);
      sub_23FC5E498();
      sub_23FC75E60();
      *(_WORD *)(v48 + 12) = 2080;
      sub_23FC76818();
      sub_23FC10108();
      v49 = sub_23FD74B28();
      v51 = v50;
      sub_23FC595E0();
      *(_QWORD *)(v0 + 408) = sub_23FC9DC40(v49, v51, v76);
      sub_23FD75044();
      sub_23FC10048();
      sub_23FC103E8();
      *(_WORD *)(v48 + 22) = 2080;
      sub_23FC74C30(&qword_256F5D950, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      v52 = sub_23FD75344();
      *(_QWORD *)(v0 + 416) = sub_23FC760D4(v52, v53);
      sub_23FC5DAF4();
      sub_23FC1002C();
      v54 = *(void (**)(uint64_t))(v69 + 8);
      v55 = sub_23FC5A8DC();
      v54(v55);
      _os_log_impl(&dword_23FBF8000, v43, v44, "DefaultRuntime: Running action %s with parameters - %s and statementId %s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    v56 = *(_QWORD *)(v0 + 1112);
    v57 = *(_QWORD *)(v0 + 1096);
    v58 = *(_QWORD *)(v0 + 1088);
    v59 = *(_QWORD *)(v0 + 936);
    sub_23FC10048();
    sub_23FC10048();
    v60 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v60(v56, v58);

    v61 = *(void (**)(uint64_t))(v59 + 8);
    v62 = sub_23FC5C5C0();
    v61(v62);
    *(_QWORD *)(v0 + 1264) = v61;
    *(_QWORD *)(v0 + 1256) = v60;
    v63 = *(_QWORD *)(v0 + 840);
    v64 = *(_QWORD *)(v0 + 832);
    v65 = *(_QWORD *)(v0 + 800);
    v66 = *(_QWORD *)(v0 + 768);
    *(_QWORD *)(v0 + 1272) = *(_QWORD *)(**(_QWORD **)(v0 + 464) + 136);
    sub_23FC59120();
    sub_23FC5B578();
    *(_QWORD *)(v0 + 48) = v66;
    *(_QWORD *)(v0 + 56) = v64;
    *(_QWORD *)(v0 + 64) = v65;
    *(_QWORD *)(v0 + 72) = v63;
    type metadata accessor for ToolExecution();
  }
  v74 = *(_QWORD *)(v0 + 1128);
  v75 = *(_QWORD *)(v0 + 1168);
  v71 = *(_QWORD *)(v0 + 1120);
  v72 = *(_QWORD *)(v0 + 1136);
  v67 = *(_QWORD *)(v0 + 1096);
  v68 = *(_QWORD *)(v0 + 1088);
  v15 = *(_QWORD *)(v0 + 1080);
  v16 = *(_QWORD *)(v0 + 1072);
  v17 = *(_QWORD *)(v0 + 1056);
  v18 = *(_QWORD *)(v0 + 1048);
  v19 = *(_QWORD *)(v0 + 1008);
  v70 = *(_QWORD *)(v0 + 1000);
  v73 = *(_QWORD *)(v0 + 432);
  swift_bridgeObjectRelease();
  sub_23FC595C4(v17, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23FC5C178(v15, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v71, v68);
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v75, v74);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32);
  v20(v19, v5, v4);
  v20(v73, v19, v4);
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v21 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC750F4(v21);
}

uint64_t sub_23FC6ED54()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23FC756B0();
  sub_23FC75274(v2);
  v1[164] = v0;
  swift_task_dealloc();
  v3 = v1[145];
  v4 = v1[141];
  v5 = *(void (**)(uint64_t, uint64_t))(v1[142] + 8);
  if (v0)
    v1[182] = v5;
  else
    v1[165] = v5;
  v5(v3, v4);
  sub_23FC5F38C();
  return sub_23FC75178();
}

uint64_t sub_23FC6EDCC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0[165];
  v0[176] = v0[162];
  v0[175] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[177] = v2;
  v3 = sub_23FC75F34(v2);
  return sub_23FD4CCE4(v3, v4);
}

uint64_t sub_23FC6EE28()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC6EE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23FC75AD4();
  result = swift_release();
  v4 = *(_QWORD *)(v0 + 1344);
  v5 = *(_QWORD *)(v0 + 1336);
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    v7 = (v5 - 1) & v5;
    v8 = v6 | (v4 << 6);
    result = *(_QWORD *)(v0 + 1328);
    goto LABEL_3;
  }
  v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    v11 = (1 << *(_BYTE *)(v0 + 1506)) + 63;
    result = *(_QWORD *)(v0 + 1328);
    if (v10 >= (uint64_t)(v11 >> 6))
      goto LABEL_18;
    v12 = result + 64;
    v13 = *(_QWORD *)(result + 64 + 8 * v10);
    ++v4;
    if (v13)
    {
LABEL_7:
      v7 = (v13 - 1) & v13;
      v8 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_3:
      *(_QWORD *)(v0 + 1344) = v4;
      *(_QWORD *)(v0 + 1336) = v7;
      *(_QWORD *)(v0 + 1352) = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * v8);
      swift_retain();
      v9 = (_QWORD *)sub_23FC5C588();
      *(_QWORD *)(v0 + 1360) = v9;
      sub_23FC76868(v9, (uint64_t)sub_23FC6EE28);
      sub_23FD4EB40();
    }
    v14 = v11 >> 6;
    v4 = v10 + 1;
    if (v10 + 1 >= v14)
      goto LABEL_18;
    v13 = *(_QWORD *)(v12 + 8 * v4);
    if (v13)
      goto LABEL_7;
    v4 = v10 + 2;
    if (v10 + 2 >= v14)
      goto LABEL_18;
    v13 = *(_QWORD *)(v12 + 8 * v4);
    if (v13)
      goto LABEL_7;
    v15 = v10 + 3;
    if (v15 >= v14)
    {
LABEL_18:
      sub_23FC75FB0();
      sub_23FC75D78();
      sub_23FC75DA4();
      *(_QWORD *)(v2 + v1) = sub_23FC76500();
      sub_23FC76468();
      sub_23FC76250();
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1368) = v16;
      *v16 = v0;
      v16[1] = sub_23FC6F00C;
      v17 = sub_23FC5B9C8(*(_QWORD *)(v0 + 1152));
      return sub_23FC75AAC(v17, v18, v19);
    }
    v13 = *(_QWORD *)(v12 + 8 * v15);
    if (v13)
    {
      v4 = v15;
      goto LABEL_7;
    }
    while (1)
    {
      v4 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v4 >= v14)
        goto LABEL_18;
      v13 = *(_QWORD *)(v12 + 8 * v4);
      ++v15;
      if (v13)
        goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23FC6F00C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  sub_23FC756B0();
  v4 = v2[142];
  sub_23FC75274(v5);
  v2[172] = v1;
  swift_task_dealloc();
  v6 = v2[144];
  v7 = v2[141];
  if (v1)
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v2[187] = v8;
    v8(v6, v7);
    sub_23FC1002C();
  }
  else
  {
    v2[173] = a1;
    v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v2[174] = v9;
    v9(v6, v7);
  }
  return sub_23FC0906C();
}

uint64_t sub_23FC6F0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC75F60();
  v1 = *(_QWORD *)(v0 + 1384);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1248))(*(_QWORD *)(v0 + 1104), *(_QWORD *)(v0 + 1120), *(_QWORD *)(v0 + 1088));
  *(_QWORD *)(v0 + 392) = v1;
  sub_23FC59120();
  sub_23FC76208();
  swift_retain();
  sub_23FD74B88();
  sub_23FC5BC88();
  v2 = *(_QWORD *)(v0 + 1392);
  *(_QWORD *)(v0 + 1408) = *(_QWORD *)(v0 + 1384);
  *(_QWORD *)(v0 + 1400) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1416) = v3;
  v4 = sub_23FC75F34(v3);
  return sub_23FD4CCE4(v4, v5);
}

uint64_t sub_23FC6F18C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 1424) = v1;
  swift_task_dealloc();
  if (v1)
    sub_23FC766A4();
  return sub_23FC5A63C();
}

uint64_t sub_23FC6F1E8()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[107] + 32))(v0[110], v0[109], v0[106]);
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC6F22C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 1507) = *(_BYTE *)(*(_QWORD *)(v0 + 1408) + qword_256F7F4E8);
  return swift_task_switch();
}

void sub_23FC6F258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);

  sub_23FC1046C(*(_QWORD *)(v0 + 864), *(_QWORD *)(v0 + 880), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 856) + 16));
  if (sub_23FC768C4() == 7)
  {
    v14 = *(_QWORD *)(v0 + 1120);
    v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1248);
    v1 = *(_QWORD *)(v0 + 1104);
    v2 = *(_QWORD *)(v0 + 864);
    v3 = *(_QWORD *)(v0 + 824);
    v4 = *(_QWORD *)(v0 + 816);
    v5 = *(_QWORD *)(v0 + 808);
    sub_23FBFEDE8(&qword_256F5EB18);
    v6 = v2 + *(int *)(sub_23FC75FC8() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
    sub_23FC584B0(v6, &qword_256F5EB18);
    sub_23FC1046C(v1, v14, v15);
    *(_QWORD *)(v0 + 336) = 0;
    sub_23FC59120();
    sub_23FD74B70();
    sub_23FD74B88();
    swift_endAccess();
    v7 = sub_23FD71540();
    v9 = v8;
    v10 = sub_23FC75FE0();
    v11(v10);
    *(_QWORD *)(v0 + 304) = v7;
    *(_QWORD *)(v0 + 312) = v9;
    sub_23FC59120();
    sub_23FD74B70();
    sub_23FD74B88();
    sub_23FC5BC88();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 856) + 8))(*(_QWORD *)(v0 + 864), *(_QWORD *)(v0 + 848));
  }
  *(_QWORD *)(v0 + 328) = sub_23FD73DE4();
  sub_23FBFD684(&qword_256F5EAD0);
  sub_23FC74828(&qword_256F5EAD8);
  v12 = sub_23FD73A18();
  *(_QWORD *)(v0 + 1432) = v12;
  sub_23FC595E0();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1440) = v13;
  *v13 = v0;
  v13[1] = sub_23FC6F528;
  sub_23FC63414(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 1080), *(_QWORD *)(v0 + 1240), *(_BYTE *)(v0 + 1505), *(_BYTE *)(v0 + 1507), v12);
}

uint64_t sub_23FC6F528()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 1448) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23FC595E0();
  sub_23FC5F38C();
  return sub_23FC75178();
}

uint64_t sub_23FC6F590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23FC753DC();
  sub_23FC75424();
  sub_23FC10000(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC5C178(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23FC75C5C();
  sub_23FC75B8C();
  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v4 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC750F4(v4);
}

uint64_t sub_23FC6F770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FC753DC();
  v1 = *(_QWORD *)(v0 + 1136);
  sub_23FC090C8(*(_QWORD *)(v0 + 1096));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v2 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC750F4(v2);
}

uint64_t sub_23FC6F890()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23FC753DC();
  v1 = v0[142];
  v2 = v0[137];
  sub_23FC090C8(v0[134]);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v3 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC750F4(v3);
}

uint64_t sub_23FC6F9C4()
{
  uint8_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  NSObject *v10;
  os_log_type_t v11;
  _WORD *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t);

  sub_23FC753DC();
  v2 = *(void **)(v1 + 1312);
  *(_QWORD *)(v1 + 368) = v2;
  v3 = v2;
  sub_23FBFD684(&qword_254346E20);
  sub_23FC5E880();
  if (swift_dynamicCast() && !*(_BYTE *)(v1 + 1504))
  {

    sub_23FC757FC();
    v10 = sub_23FD72BE4();
    v11 = sub_23FD74F6C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (_WORD *)sub_23FBFEFF4();
      sub_23FC75DFC(v12);
      sub_23FC754C8(&dword_23FBF8000, v10, v11, "DefaultRuntime: Starting new execution due to change in action", v0);
      sub_23FBFEFA0();
    }
    v13 = *(void (**)(uint64_t))(v1 + 1264);

    v14 = sub_23FBFF1AC();
    v13(v14);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 1464) = v15;
    sub_23FC76868(v15, (uint64_t)sub_23FC6FC1C);
    sub_23FC757E0();
  }
  v16 = *(void (**)(uint64_t))(v1 + 1256);
  v4 = *(_QWORD *)(v1 + 1080);
  v5 = *(_QWORD *)(v1 + 1072);
  v6 = *(_QWORD *)(v1 + 1048);
  swift_bridgeObjectRelease();
  sub_23FC5E1B0();
  sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_23FC15950(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v7 = sub_23FC5CCE8();
  v16(v7);
  sub_23FC75B8C();
  sub_23FC76750();
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v8 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC750F4(v8);
}

uint64_t sub_23FC6FC1C()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t);
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC75AD4();
  sub_23FC75EF0();
  v2 = (void (*)(uint64_t))v1[147];
  sub_23FC75274(v3);
  swift_task_dealloc();
  v4 = sub_23FC75B24();
  v2(v4);
  v5 = (_QWORD *)swift_task_alloc();
  v1[184] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23FC6FC94;
  v6 = sub_23FC5B9C8(v1[143]);
  return sub_23FC75AAC(v6, v7, v8);
}

uint64_t sub_23FC6FC94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  sub_23FC756B0();
  sub_23FC75274(v4);
  v2[185] = v1;
  swift_task_dealloc();
  v5 = (void (*)(uint64_t, uint64_t))v2[182];
  if (v1)
  {
    v5(v2[143], v2[141]);
    sub_23FC1002C();
  }
  else
  {
    v6 = v2[143];
    v7 = v2[141];
    v2[186] = a1;
    v5(v6, v7);
  }
  return sub_23FC75178();
}

uint64_t sub_23FC6FD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC5ACE0();
  v1 = *(_QWORD *)(v0 + 1488);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1248))(*(_QWORD *)(v0 + 1104), *(_QWORD *)(v0 + 1120), *(_QWORD *)(v0 + 1088));
  *(_QWORD *)(v0 + 384) = v1;
  sub_23FC59120();
  sub_23FD74B70();
  swift_retain();
  sub_23FD74B88();
  sub_23FC5BC88();
  sub_23FC5E1B0();
  sub_23FC76750();
  v2 = *(_QWORD *)(v0 + 1456);
  *(_QWORD *)(v0 + 1408) = *(_QWORD *)(v0 + 1488);
  *(_QWORD *)(v0 + 1400) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1416) = v3;
  v4 = sub_23FC75F34(v3);
  return sub_23FD4CCE4(v4, v5);
}

uint64_t sub_23FC6FE24()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FC753DC();
  v1 = (void (*)(uint64_t))v0[157];
  v2 = v0[134];
  v3 = v0[132];
  v4 = v0[131];
  sub_23FC5E1B0();
  sub_23FC5C178(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v5 = sub_23FC5A8DC();
  v1(v5);
  sub_23FC75B8C();
  sub_23FC76750();
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v6 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC750F4(v6);
}

uint64_t sub_23FC6FF84()
{
  uint64_t *v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FC753DC();
  v1 = (void (*)(uint64_t))v0[187];
  v2 = (void (*)(uint64_t))v0[157];
  v3 = v0[134];
  sub_23FC090C8(v0[131]);
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v4 = sub_23FC5A8DC();
  v2(v4);
  v5 = sub_23FC5E880();
  v1(v5);
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v6 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC750F4(v6);
}

void sub_23FC700CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26,id a27,uint64_t a28,uint64_t a29,uint64_t a30,id a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void (*a38)(uint64_t, uint64_t),uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  _BOOL8 v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (**v81)(uint64_t, uint64_t);
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  void (*v117)(_QWORD);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(void);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  id v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  id v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t);
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(id, uint64_t);

  sub_23FC753DC();
  v55 = *(void **)(v54 + 1424);
  *(_QWORD *)(v54 + 360) = v55;
  v56 = v55;
  sub_23FBFD684(&qword_254346E20);
  sub_23FC5E880();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 1248);
    v65 = *(_QWORD *)(v54 + 1120);
    v66 = *(_QWORD *)(v54 + 1104);
    v67 = *(_QWORD *)(v54 + 1088);

    v64(v66, v65, v67);
    *(_QWORD *)(v54 + 352) = 0;
    sub_23FC59120();
    sub_23FD74B70();
    sub_23FD74B88();
    swift_endAccess();
    v68 = (void *)sub_23FD7133C();
    swift_getErrorValue();
    v69 = sub_23FC68F48(*(_QWORD *)(v54 + 288), *(_QWORD *)(v54 + 296));
    if (v69)
    {
      v149 = *(id *)(v54 + 1424);
      v166 = *(void (**)(uint64_t, uint64_t))(v54 + 1256);
      v159 = *(_QWORD *)(v54 + 1088);
      v162 = *(_QWORD *)(v54 + 1120);
      v141 = *(id *)(v54 + 1080);
      v153 = *(_QWORD *)(v54 + 1072);
      v156 = *(_QWORD *)(v54 + 1064);
      v143 = *(_QWORD *)(v54 + 1048);
      v145 = *(_QWORD *)(v54 + 1040);
      v147 = *(_QWORD *)(v54 + 1056);
      v70 = *(_QWORD *)(v54 + 672);
      v71 = *(_QWORD *)(v54 + 664);
      sub_23FC75764();
      sub_23FC74C30(&qword_256F5EAC0, (void (*)(uint64_t))type metadata accessor for RuntimeError);
      sub_23FC5A704();
      v72 = v68;
      v74 = v73;
      sub_23FD74408();
      v75 = sub_23FC76440();
      v77 = v76;
      sub_23FC15950(v70, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
      *v74 = v75;
      v74[1] = v77;
      sub_23FC75F78();
      sub_23FC76340();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v147, v145);
      (*(void (**)(id, uint64_t))(v153 + 8))(v141, v156);
      v166(v162, v159);
      sub_23FC75CCC();
LABEL_17:
      swift_task_dealloc();
      sub_23FC090D0();
      sub_23FC090C0();
      sub_23FC5A574();
      sub_23FC5AC3C();
      sub_23FC5B2D4();
      sub_23FC5AB04();
      sub_23FC5BCA0();
      sub_23FC5B980();
      sub_23FC5B2F4();
      sub_23FC75A54();
      sub_23FC5EFD4();
      sub_23FC5D050();
      sub_23FC5D048();
      sub_23FC5D040();
      sub_23FC5C988();
      sub_23FC5C440();
      sub_23FC5C438();
      sub_23FC5C430();
      sub_23FC5C428();
      sub_23FC5C420();
      sub_23FC5BFE8();
      sub_23FC5BFE0();
      sub_23FC5C980();
      sub_23FC5D834();
      sub_23FC5E0B8();
      sub_23FC5E0B0();
      sub_23FC5E0A8();
      sub_23FC5E0A0();
      sub_23FC5E098();
      sub_23FC5E090();
      sub_23FC5D82C();
      sub_23FC5D824();
      sub_23FC5C06C();
      sub_23FC5BFA8();
      sub_23FC5BFA0();
      sub_23FC5BFF0();
      sub_23FC5D914();
      sub_23FC5D7D8();
      sub_23FC5D7D0();
      sub_23FC5EC14();
      sub_23FC5DC9C();
      sub_23FC750F4(*(uint64_t (**)(void))(v54 + 8));
      return;
    }
    v78 = sub_23FC767C4(v69, sel_ln_staticDeferredLocalizedString);
    if (!v78)
    {
      sub_23FC75C68();
      v164 = v97;
      v168 = v98;
      v99 = *(_QWORD *)(v54 + 1080);
      v100 = *(_QWORD *)(v54 + 1072);
      v101 = *(_QWORD *)(v54 + 1056);
      v102 = *(_QWORD *)(v54 + 1048);
      v103 = *(_QWORD *)(v54 + 1040);
      swift_willThrow();

      sub_23FC58AC8();
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
      sub_23FC5C178(v99, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
      a38(v168, v164);
      sub_23FC76744();
      goto LABEL_17;
    }
    v167 = v78;
    v79 = sub_23FD73DE4();
    v80 = *(_QWORD *)(v79 + 16);
    v140 = v68;
    if (v80)
    {
      v81 = *(uint64_t (***)(uint64_t, uint64_t))(v54 + 576);
      v169 = *(_QWORD *)(v54 + 552);
      sub_23FD740CC();
      sub_23FC764E0();
      v82 = *MEMORY[0x24BE56AE0];
      v84 = *(_QWORD *)(v83 + 72);
      v86 = v79 + v85 + v84 * (v80 - 1);
      v171 = -v84;
      v163 = v80;
      LODWORD(a38) = *MEMORY[0x24BE56AE0];
      while (1)
      {
        v87 = *(_QWORD *)(v54 + 584);
        v88 = *(_QWORD *)(v54 + 568);
        sub_23FC5A09C();
        sub_23FD740A8();
        v89 = v81[11](v87, v88);
        v90 = *(_QWORD *)(v54 + 616);
        v91 = *(_QWORD *)(v54 + 584);
        if (v89 == v82)
        {
          v92 = *(_QWORD *)(v54 + 560);
          v93 = *(_QWORD *)(v54 + 544);
          sub_23FC15950(*(_QWORD *)(v54 + 584), v81[12]);
          sub_23FC75B7C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v169 + 32));
          sub_23FD73148();
          v94 = v93;
          v82 = (int)a38;
          (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v92, v94);
          sub_23FC75C34(v90, 0);
        }
        else
        {
          sub_23FC75C34(*(_QWORD *)(v54 + 616), 1);
          sub_23FC15950(v91, v81[1]);
        }
        v95 = *(_QWORD *)(v54 + 624);
        sub_23FC748E8(*(_QWORD *)(v54 + 616), v95, &qword_256F5EAF8);
        sub_23FC5A56C();
        LODWORD(v95) = sub_23FC75988(v95);
        sub_23FC584B0(*(_QWORD *)(v54 + 624), &qword_256F5EAF8);
        if ((_DWORD)v95 != 1)
          break;
        v86 += v171;
        if (!--v80)
          goto LABEL_15;
      }
      if (v80 > v163)
      {
        __break(1u);
      }
      else
      {
        v112 = *(_QWORD *)(v54 + 640);
        v113 = *(_QWORD *)(v54 + 632);
        v114 = *(_QWORD *)(v54 + 592);
        sub_23FC74698(v112);
        sub_23FC75738(v112, v115, &qword_256F5EAF8);
        sub_23FC100EC(v113, 1, v114);
        if (!v116)
        {
          v117 = *(void (**)(_QWORD))(*(_QWORD *)(v54 + 600) + 32);
          v118 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v117)(*(_QWORD *)(v54 + 608), *(_QWORD *)(v54 + 632), *(_QWORD *)(v54 + 592));
          sub_23FC5F358(v118, &qword_256F5EAF8);
          v119 = sub_23FBFF1EC();
          v117(v119);
          v96 = 0;
          goto LABEL_21;
        }
      }
      __break(1u);
      return;
    }
LABEL_15:
    v96 = 1;
LABEL_21:
    v120 = *(_QWORD *)(v54 + 648);
    sub_23FC75C34(v120, v96);
    sub_23FC5A56C();
    v121 = sub_23FC75988(v120);
    if ((_DWORD)v121 == 1)
    {
      sub_23FC5C15C(v121, &qword_256F5EAF8);
      v122 = 0;
    }
    else
    {
      v123 = *(_QWORD *)(v54 + 600);
      v124 = *(_QWORD *)(v54 + 528);
      sub_23FD71744();
      sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v123 + 8));
      sub_23FD71480();
      sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v124 + 8));
      v122 = (void *)sub_23FD74BE8();
      sub_23FC5A2A8();
    }
    v142 = *(id *)(v54 + 1424);
    sub_23FC75C68();
    v160 = v125;
    v165 = v126;
    v152 = *(_QWORD *)(v54 + 1072);
    v154 = *(_QWORD *)(v54 + 1064);
    v157 = *(_QWORD *)(v54 + 1080);
    v151 = *(id *)(v54 + 1056);
    v144 = *(_QWORD *)(v54 + 1048);
    v146 = *(_QWORD *)(v54 + 1040);
    v127 = *(_QWORD *)(v54 + 704);
    v138 = *(_QWORD *)(v54 + 696);
    v139 = *(_QWORD *)(v54 + 688);
    v128 = *(_QWORD *)(v54 + 680);
    v136 = *(_QWORD *)(v54 + 512);
    v137 = *(_QWORD *)(v54 + 504);
    v135 = *(_QWORD *)(v54 + 480);
    v129 = objc_msgSend(v167, sel_localizedStringForLocaleIdentifier_, v122);

    sub_23FD74BF4();
    sub_23FC10108();
    v130 = objc_msgSend(v140, sel_domain);
    sub_23FD74BF4();

    objc_msgSend(v140, sel_code);
    v131 = sub_23FC765C4();
    MEMORY[0x242675408](v131);
    sub_23FC76788(v135);
    sub_23FD7166C();
    sub_23FC1046C(v127, v136, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v137 + 16));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v138 + 104))(v127, *MEMORY[0x24BE53320], v139);
    sub_23FC765C4();
    sub_23FD71C3C();
    v132 = sub_23FC75580();
    sub_23FC103A0(v128, 0, v133, v132);
    sub_23FD73A00();

    swift_release();
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v137 + 8));
    (*(void (**)(id, uint64_t))(v144 + 8))(v151, v146);
    (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v157, v154);
    a38(v165, v160);
    sub_23FC76744();
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(_QWORD, _QWORD))(*(_QWORD *)(v54 + 752) + 88))(*(_QWORD *)(v54 + 760), *(_QWORD *)(v54 + 744)) != *MEMORY[0x24BEB9168])
  {
    sub_23FC090C8(*(_QWORD *)(v54 + 752));
    goto LABEL_5;
  }
  v158 = *(_QWORD *)(v54 + 1120);
  v161 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 1248);
  v155 = *(_QWORD *)(v54 + 1104);
  v57 = *(_QWORD *)(v54 + 1088);
  v58 = *(_QWORD *)(v54 + 760);
  v59 = *(_QWORD *)(v54 + 752);
  v60 = *(_QWORD *)(v54 + 736);
  v61 = *(_QWORD *)(v54 + 728);

  sub_23FC5B3B0(v58, *(uint64_t (**)(uint64_t, uint64_t))(v59 + 96));
  sub_23FC5AE8C(v60, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 32));
  v161(v155, v158, v57);
  *(_QWORD *)(v54 + 320) = 0;
  sub_23FC59120();
  sub_23FD74B70();
  sub_23FD74B88();
  swift_endAccess();
  sub_23FC72C48(v60);
  v170 = *(_QWORD *)(v54 + 1128);
  v62 = *(_QWORD *)(v54 + 736);
  v63 = *(_QWORD *)(v54 + 728);
  v104 = *(_QWORD *)(v54 + 712);
  v172 = *(void (**)(id, uint64_t))(v54 + 1400);
  v105 = *(_QWORD *)(v54 + 696);
  v148 = *(_QWORD *)(v54 + 688);
  v150 = *(id *)(v54 + 1168);
  v106 = *(_QWORD *)(v54 + 680);
  v107 = sub_23FC765C4();
  v108(v107);
  v109 = sub_23FC75580();
  sub_23FBFF0F8(v106, v110, v111, v109);
  sub_23FD73A00();
  sub_23FC58AC8();
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v148);
  sub_23FC10454(v62, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
  sub_23FC76658();
  sub_23FC762D8();
  sub_23FC75C5C();
  v172(v150, v170);

LABEL_25:
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v134 = (uint64_t (*)(void))sub_23FC5C528();
  sub_23FC750F4(v134);
}

uint64_t sub_23FC70CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23FC753DC();
  sub_23FC75424();
  sub_23FC10000(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC5C178(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23FC75C5C();
  sub_23FC75B8C();
  sub_23FC74D8C();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v4 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC750F4(v4);
}

uint64_t sub_23FC70DE0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC75AD4();
  v1[13] = v2;
  v1[14] = v0;
  v1[11] = v3;
  v1[12] = v4;
  v5 = *v0;
  v1[15] = *(_QWORD *)(*v0 + 88);
  v1[16] = *(_QWORD *)(v5 + 80);
  v6 = sub_23FC75670();
  v1[17] = v6;
  v1[18] = *(_QWORD *)(v6 - 8);
  v1[19] = sub_23FC0901C();
  v1[20] = sub_23FC754E8();
  v1[21] = swift_getAssociatedTypeWitness();
  sub_23FD75038();
  v1[22] = sub_23FC0901C();
  v7 = sub_23FC10290();
  v1[23] = v7;
  v1[24] = *(_QWORD *)(v7 - 8);
  v1[25] = sub_23FC5C13C();
  v1[26] = sub_23FC5C588();
  v8 = sub_23FC10100();
  v1[27] = v8;
  v1[28] = *(_QWORD *)(v8 - 8);
  v1[29] = sub_23FC5C13C();
  v1[30] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC75184();
}

uint64_t sub_23FC70EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_23FC75D0C();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v29 = v26[26];
  v30 = v26[24];
  v31 = v26[13];
  sub_23FC757FC();
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  v26[31] = v32;
  sub_23FC06160((uint64_t)v29, v31, v32);
  sub_23FC101D8();
  sub_23FD72BE4();
  sub_23FC5DB08();
  if (sub_23FC756C0(v29))
  {
    v33 = v26[26];
    v64 = v26[24];
    v65 = v26[23];
    v34 = v26[12];
    v35 = v26[11];
    v36 = sub_23FBFEFF4();
    a15 = sub_23FBFEFF4();
    *(_DWORD *)v36 = 136315394;
    sub_23FC10108();
    v26[9] = sub_23FC9DC40(v35, v34, &a15);
    sub_23FD75044();
    sub_23FC75E60();
    *(_WORD *)(v36 + 12) = 2080;
    v37 = sub_23FD74780();
    v26[10] = sub_23FC7667C(v37, v38, v39, v40, v41, v42, v43, v44);
    sub_23FD75044();
    sub_23FC1002C();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v33, v65);
    sub_23FC759A8(&dword_23FBF8000, v45, v46, "DefaultRuntime: Adding variable to runtime - %s: %s");
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  v47 = v26[28];
  v48 = v26[24];
  sub_23FC10048();
  v49 = *(void (**)(uint64_t))(v48 + 8);
  v50 = sub_23FC5CCE8();
  v49(v50);

  v51 = *(void (**)(uint64_t))(v47 + 8);
  v52 = sub_23FBFF1EC();
  v51(v52);
  v26[32] = v51;
  v26[33] = v49;
  sub_23FC756C8(v26[15]);
  v66 = v53;
  v54 = (_QWORD *)swift_task_alloc();
  v26[34] = v54;
  *v54 = v26;
  v54[1] = sub_23FC710E8;
  sub_23FC75CB0();
  return v58(v55, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, a13, v66, a15, a16, a17, a18);
}

uint64_t sub_23FC710E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_23FC5D3A4();
  sub_23FC75274(v3);
  v0[35] = v1;
  swift_task_dealloc();
  if (v1)
    return sub_23FC75178();
  v5 = (_QWORD *)sub_23FC752E8();
  v0[36] = (uint64_t)v5;
  *v5 = v2;
  v5[1] = sub_23FC71174;
  return sub_23FC75740(v0[22], v0[13], v0[17], v0[20], v6);
}

uint64_t sub_23FC71174()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23FC75AD4();
  sub_23FC75EF0();
  v3 = v1[18];
  v2 = v1[19];
  sub_23FC75274(v4);
  v1[37] = v0;
  swift_task_dealloc();
  sub_23FC595C4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return sub_23FC75184();
}

uint64_t sub_23FC711DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  void (*v57)(uint64_t);

  sub_23FC75D0C();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v29 = v26[29];
  v56 = v26[23];
  v57 = (void (*)(uint64_t))v26[31];
  v31 = v26[11];
  v30 = v26[12];
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v26[22], 0, 1, v26[21]);
  v26[5] = v31;
  v26[6] = v30;
  sub_23FC59120();
  sub_23FD74B70();
  swift_bridgeObjectRetain();
  sub_23FD74B88();
  swift_endAccess();
  sub_23FC762A8();
  v32 = sub_23FC75FE0();
  v57(v32);
  sub_23FC101D8();
  sub_23FC5C100();
  sub_23FC5DB08();
  if (sub_23FC756C0(v29))
  {
    v55 = (void (*)(uint64_t, uint64_t))v26[33];
    v33 = v26[25];
    v54 = v26[23];
    v34 = v26[11];
    v35 = v26[12];
    v36 = sub_23FBFEFF4();
    a15 = sub_23FBFEFF4();
    *(_DWORD *)v36 = 136315394;
    sub_23FC75E34();
    v26[7] = sub_23FC9DC40(v34, v35, &a15);
    sub_23FC5A8DC();
    sub_23FD75044();
    sub_23FC75E60();
    *(_WORD *)(v36 + 12) = 2080;
    v37 = sub_23FD74780();
    v26[8] = sub_23FC9DC40(v37, v38, &a15);
    sub_23FD75044();
    sub_23FC5A56C();
    v55(v33, v54);
    sub_23FC759A8(&dword_23FBF8000, v39, v40, "DefaultRuntime: Variable added to runtime - %s: %s");
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  v42 = (void (*)(uint64_t))v26[32];
  v41 = (void (*)(uint64_t))v26[33];
  sub_23FC10048();
  v43 = sub_23FC5CCE8();
  v41(v43);

  v44 = sub_23FBFF1EC();
  v42(v44);
  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5C528();
  sub_23FC75CB0();
  return v45(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, v56, v57, a15, a16, a17, a18);
}

uint64_t sub_23FC7144C()
{
  uint64_t v0;

  sub_23FC764BC();
  sub_23FC76180();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC71498()
{
  uint64_t v0;

  sub_23FC764BC();
  sub_23FC76180();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC714E4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[15] = a1;
  v2[16] = v1;
  v2[17] = *v1;
  v3 = sub_23FD736D0();
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 - 8);
  v2[20] = sub_23FC0901C();
  v4 = sub_23FC10100();
  v2[21] = v4;
  v2[22] = *(_QWORD *)(v4 - 8);
  v2[23] = sub_23FC0901C();
  v5 = sub_23FC06250();
  v2[24] = v5;
  v2[25] = *(_QWORD *)(v5 - 8);
  v2[26] = sub_23FC5C13C();
  v2[27] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A63C();
}

void sub_23FC7156C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC758E0();
  v1 = v0[16];
  sub_23FD736B8();
  v0[28] = *(_QWORD *)(*(_QWORD *)v1 + 136);
  sub_23FC75394();
  swift_getAssociatedTypeWitness();
  sub_23FC5CCE8();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = sub_23FC765A4(AssociatedConformanceWitness, v4, v5, v6);
  sub_23FC5AFCC();
  v8 = MEMORY[0x2426797E8](&unk_23FD83280, v7);
  v0[2] = AssociatedTypeWitness;
  v0[3] = v7;
  v0[4] = AssociatedConformanceWitness;
  v0[5] = v8;
  sub_23FC767F8();
}

uint64_t sub_23FC71684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t (*v40)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v20[27] = a1;
  sub_23FC74C30(&qword_256F5DAC8, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  v20[28] = v22;
  v23 = sub_23FC75B24();
  MEMORY[0x242678930](v23);
  sub_23FC1002C();
  v24 = *(void (**)(uint64_t))(v21 + 8);
  v25 = sub_23FBFF1AC();
  v24(v25);
  v26 = v20[10];
  v20[29] = v26;
  if (v26)
  {
    v27 = (_QWORD *)swift_task_alloc();
    v19[32] = v27;
    sub_23FC76868(v27, (uint64_t)sub_23FC718D4);
    sub_23FC765E0();
    sub_23FD4EB40();
  }
  v29 = v19[19];
  v28 = v19[20];
  v30 = v19[15];
  sub_23FC757FC();
  sub_23FC06160(v28, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  v31 = sub_23FD72BE4();
  v32 = sub_23FD74F54();
  if (sub_23FC756C0(v31))
  {
    v33 = v19[26];
    v34 = v19[24];
    v42 = v19[20];
    v43 = v19[19];
    v44 = v19[18];
    v35 = (uint8_t *)sub_23FBFEFF4();
    a19 = sub_23FBFEFF4();
    *(_DWORD *)v35 = 136315138;
    sub_23FD736B8();
    sub_23FC74C30(&qword_256F5D950, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    v36 = sub_23FD75344();
    ((void (*)(uint64_t, uint64_t))v24)(v33, v34);
    v19[13] = sub_23FC767A0(v36, v37, &a19);
    sub_23FC75CD4();
    sub_23FC5A56C();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    sub_23FBFF114(&dword_23FBF8000, v31, v32, "DefaultRuntime: Ignoring cancellation request since there's no current execution for %s", v35);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC090C8(v19[19]);

  v38 = sub_23FBFF1EC();
  v39(v38);
  sub_23FC76458();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5C528();
  sub_23FC765E0();
  return v40();
}

uint64_t sub_23FC718D4()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC09208();
  return sub_23FC0907C();
}

uint64_t sub_23FC7190C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC75F60();
  sub_23FD736B8();
  *(_QWORD *)(v0 + 112) = 0;
  sub_23FC59120();
  sub_23FC76208();
  sub_23FD74B88();
  sub_23FC5BC88();
  swift_release();
  sub_23FC76458();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  v1 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC090D8(v1);
}

uint64_t sub_23FC719B0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v13)(uint64_t);

  sub_23FC75AD4();
  v1[8] = v2;
  v1[9] = v0;
  v1[7] = v3;
  v4 = *v0;
  v5 = sub_23FD71648();
  v1[10] = v5;
  v1[11] = *(_QWORD *)(v5 - 8);
  v1[12] = sub_23FC0901C();
  v6 = sub_23FC10100();
  v1[13] = v6;
  v1[14] = *(_QWORD *)(v6 - 8);
  v1[15] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAE8);
  v1[16] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAF0);
  v1[17] = sub_23FC0901C();
  v7 = sub_23FC10290();
  v1[18] = v7;
  v1[19] = *(_QWORD *)(v7 - 8);
  v1[20] = sub_23FC0901C();
  v8 = sub_23FC76568();
  v1[21] = v8;
  v1[22] = *(_QWORD *)(v8 - 8);
  v1[23] = sub_23FC5C13C();
  v1[24] = sub_23FC5C588();
  v1[25] = *(_QWORD *)(v4 + 88);
  v1[26] = *(_QWORD *)(v4 + 80);
  sub_23FC76588();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[27] = AssociatedTypeWitness;
  v1[28] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v1[29] = sub_23FC0901C();
  v10 = (_QWORD *)sub_23FC09058();
  v1[30] = v10;
  v11 = sub_23FC756E8(v10);
  return v13(v11);
}

uint64_t sub_23FC71AF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD, _QWORD, uint64_t);

  sub_23FC756B0();
  sub_23FC75274(v3);
  v1[31] = v0;
  swift_task_dealloc();
  if (v0)
    return sub_23FC75178();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)sub_23FC09058();
  v1[32] = v6;
  *v6 = v2;
  v6[1] = sub_23FC71BA8;
  return v7(v1[8], v1[27], AssociatedConformanceWitness);
}

uint64_t sub_23FC71BA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 264) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC71BF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_23FC75564();
  v1 = v0[24];
  v2 = v0[22];
  v4 = v0[19];
  v3 = (uint64_t *)v0[20];
  v6 = v0[17];
  v5 = v0[18];
  v7 = sub_23FC75FD0();
  v8 = swift_allocBox();
  sub_23FC5AE8C(v9, *MEMORY[0x24BEB9940], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104));
  *v3 = v8;
  sub_23FC5A8C8((uint64_t)v3, *MEMORY[0x24BEB9A00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  v10 = sub_23FC75DB0();
  sub_23FBFF0F8(v6, v11, v12, v10);
  sub_23FD716B4();
  sub_23FC76284(*MEMORY[0x24BE53328], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23FC7610C();
  sub_23FC75F00();
  v13 = sub_23FC75580();
  sub_23FC75D28(v13);
  sub_23FC75DD4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23FC5AC3C();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5A574();
  sub_23FC5D048();
  sub_23FC5D040();
  v14 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75318(v14);
}

uint64_t sub_23FC71CFC()
{
  uint64_t v0;

  sub_23FC75F60();
  sub_23FC75C04();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC71D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void *v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;

  sub_23FC75564();
  v1 = sub_23FD74528();
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    swift_getErrorValue();
    if (sub_23FC75D98())
    {
      v5 = *(_QWORD *)(v0 + 224);
      sub_23FC75764();
      sub_23FC74C30(&qword_256F5EAC0, (void (*)(uint64_t))type metadata accessor for RuntimeError);
      sub_23FC5A704();
      *v6 = v3;
      v6[1] = v4;
      sub_23FC75F78();
      swift_willThrow();
      sub_23FC761C4();
      sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      sub_23FC75C04();
      sub_23FC090C0();
      sub_23FC5A574();
      sub_23FC5AB04();
      sub_23FC5AC3C();
      sub_23FC5B2D4();
      sub_23FC5B2F4();
      sub_23FC5B980();
      return sub_23FC75318(*(uint64_t (**)(void))(v0 + 8));
    }
    sub_23FC15A24();
  }
  v8 = *(NSObject **)(v0 + 264);
  sub_23FC762A8();
  v9 = v8;
  v10 = v8;
  sub_23FC5C100();
  v11 = sub_23FC09250();
  v12 = sub_23FC762C0(v8);
  v13 = *(void **)(v0 + 264);
  if (v12)
  {
    v14 = (uint8_t *)sub_23FBFEFF4();
    v15 = (_QWORD *)sub_23FBFEFF4();
    *(_DWORD *)v14 = 138412290;
    v16 = v13;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v17;
    sub_23FD75044();
    *v15 = v17;
    sub_23FC761C4();
    sub_23FC761C4();
    sub_23FBFF114(&dword_23FBF8000, v8, v11, "DefaultRuntime: Error occurred during undo: %@", v14);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC761C4();
  sub_23FC761C4();
  v18 = v8;
  v19 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 88);

  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_23FC76248(v22, *MEMORY[0x24BE52260], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 104));
  sub_23FD7166C();
  sub_23FC0917C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x24BE53320], v26);
  sub_23FC7610C();
  sub_23FC75F00();
  v24 = sub_23FC75580();
  sub_23FC75D28(v24);
  sub_23FC75DD4(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  sub_23FC5AC3C();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5A574();
  sub_23FC5D050();
  sub_23FC5D048();
  v25 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75318(v25);
}

uint64_t sub_23FC71FEC()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23FC75AD4();
  v1[17] = v2;
  v1[18] = v0;
  v1[15] = v3;
  v1[16] = v4;
  v5 = *v0;
  v6 = sub_23FD747F8();
  v1[19] = v6;
  v1[20] = *(_QWORD *)(v6 - 8);
  v1[21] = sub_23FC0901C();
  v1[22] = *(_QWORD *)(v5 + 88);
  v1[23] = *(_QWORD *)(v5 + 80);
  sub_23FC75670();
  v1[24] = sub_23FC754E8();
  v7 = sub_23FC7680C();
  v1[25] = v7;
  v1[26] = *(_QWORD *)(v7 - 8);
  v1[27] = sub_23FC0901C();
  sub_23FC76848();
  v8 = swift_checkMetadataState();
  v1[28] = v8;
  v1[29] = *(_QWORD *)(v8 - 8);
  v1[30] = sub_23FC0901C();
  v9 = sub_23FC75B44();
  v1[31] = v9;
  v1[32] = *(_QWORD *)(v9 - 8);
  v1[33] = sub_23FC0901C();
  v10 = sub_23FC10290();
  v1[34] = v10;
  v1[35] = *(_QWORD *)(v10 - 8);
  v1[36] = sub_23FC5C13C();
  v1[37] = sub_23FC5C588();
  v1[38] = sub_23FC5C588();
  v1[39] = sub_23FC5C588();
  v1[40] = sub_23FC5C588();
  v11 = sub_23FC10100();
  v1[41] = v11;
  v1[42] = *(_QWORD *)(v11 - 8);
  v1[43] = sub_23FC5C13C();
  v1[44] = sub_23FC5C588();
  v1[45] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC75184();
}

uint64_t sub_23FC7213C()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD);
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(_QWORD, _QWORD, _QWORD);
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;

  v1 = v0[40];
  v2 = v0[35];
  v4 = v0[32];
  v3 = v0[33];
  v6 = v0[16];
  v5 = v0[17];
  sub_23FC757FC();
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[46] = v7;
  sub_23FC06160((uint64_t)v1, v6, v7);
  sub_23FC092BC(v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_23FD72BE4();
  sub_23FC5DB08();
  if (sub_23FC756C0(v1))
  {
    v8 = v0[40];
    v9 = v0[35];
    v10 = v0[33];
    v27 = v0[34];
    v28 = v0[32];
    v29 = v0[31];
    v11 = sub_23FBFEFF4();
    v31 = sub_23FBFEFF4();
    *(_DWORD *)v11 = 136315394;
    v12 = sub_23FD74780();
    v0[13] = sub_23FC9DC40(v12, v13, &v31);
    sub_23FD75044();
    sub_23FC103E8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v27);
    *(_WORD *)(v11 + 12) = 2080;
    v14 = sub_23FD747B0();
    v0[14] = sub_23FC9DC40(v14, v15, &v31);
    sub_23FC5E498();
    sub_23FC1002C();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v10, v29);
    sub_23FC759A8(&dword_23FBF8000, v16, v17, "DefaultRuntime: Converting %s to %s");
    sub_23FC58F90();
    sub_23FBFEFA0();
  }
  v18 = v0[42];
  v20 = v0[32];
  v19 = v0[33];
  v21 = *(void (**)(_QWORD, _QWORD))(v0[35] + 8);
  v21(v0[40], v0[34]);
  sub_23FC5B3B0(v19, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));

  v22 = *(void (**)(uint64_t))(v18 + 8);
  v23 = sub_23FBFF1EC();
  v22(v23);
  v0[47] = v22;
  v0[48] = v21;
  sub_23FC756C8(v0[22]);
  v30 = v24;
  v25 = (_QWORD *)swift_task_alloc();
  v0[49] = v25;
  *v25 = v0;
  v25[1] = sub_23FC7237C;
  return v30(v0[30], v0[23], v0[22]);
}

uint64_t sub_23FC7237C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 400) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC723CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 368))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 128), v2);
  sub_23FC76548();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  v5 = *(_QWORD *)(v0 + 272);
  if (v4 == *MEMORY[0x24BEB99B0])
  {
    v6 = *(void **)(v0 + 352);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 280) + 96))(*(_QWORD *)(v0 + 304), v5);
    swift_release();
    sub_23FC757FC();
    sub_23FD72BE4();
    v7 = sub_23FC75640();
    if (sub_23FC5E334(v7))
    {
      v8 = (_WORD *)sub_23FBFEFF4();
      sub_23FC75DFC(v8);
      sub_23FC75350(&dword_23FBF8000, v9, v10, "DefaultRuntime: Resolving entity identifier before conversion");
      sub_23FBFEFA0();
    }
    v11 = *(void (**)(uint64_t))(v0 + 376);

    v12 = sub_23FBFF1AC();
    v11(v12);
    v13 = (_QWORD *)sub_23FC752E8();
    *(_QWORD *)(v0 + 408) = v13;
    *v13 = v0;
    v13[1] = sub_23FC72560;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v25)(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192));
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t))(v0 + 384))(*(_QWORD *)(v0 + 304), v5);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
    v16 = *(_QWORD *)(v0 + 312);
    v17 = *(_QWORD *)(v0 + 288);
    v18 = *(_QWORD *)(v0 + 272);
    sub_23FC75394();
    v15(v17, v16, v18);
    v19 = (_QWORD *)sub_23FC752E8();
    *(_QWORD *)(v0 + 440) = v19;
    v20 = sub_23FC75CDC(v19);
    return sub_23FC75AC0(v20, v21, v22, v23, v24, v25);
  }
}

uint64_t sub_23FC72560()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_23FC5D3A4();
  sub_23FC75274(v3);
  v0[52] = v1;
  swift_task_dealloc();
  if (v1)
    return sub_23FC75178();
  v5 = (_QWORD *)sub_23FC752E8();
  v0[53] = (uint64_t)v5;
  *v5 = v2;
  v5[1] = sub_23FC725EC;
  return sub_23FC75740(v0[37], v0[27], v0[28], v0[24], v6);
}

uint64_t sub_23FC725EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 432) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FC7263C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  NSObject *v18;
  _QWORD *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;

  sub_23FC75D0C();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v19[35] + 40))(v19[39], v19[37], v19[34]);
  sub_23FC757FC();
  sub_23FD72BE4();
  v20 = sub_23FC5DB08();
  if (sub_23FC766F8(v18))
  {
    v21 = (uint8_t *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    *(_DWORD *)v21 = 136315138;
    sub_23FBFF1EC();
    sub_23FC75394();
    v22 = sub_23FD74780();
    v19[12] = sub_23FC7667C(v22, v23, v24, v25, v26, v27, v28, v29);
    sub_23FD75044();
    sub_23FC1002C();
    sub_23FBFF114(&dword_23FBF8000, v18, v20, "DefaultRuntime: Entity resolved: %s", v21);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v30 = (void (*)(uint64_t))v19[47];

  v31 = sub_23FBFF1EC();
  v30(v31);
  v32 = sub_23FC5CCE8();
  v33(v32);
  v34 = v19[24];
  sub_23FC75394();
  sub_23FC76548();
  v45 = **(int **)(v34 + 80) + *(_QWORD *)(v34 + 80);
  v35 = (_QWORD *)swift_task_alloc();
  v19[55] = v35;
  sub_23FC75CDC(v35);
  sub_23FC75CB0();
  return v41(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, v45, a15, a16, a17, a18);
}

uint64_t sub_23FC72814()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 448) = v1;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  sub_23FC5F38C();
  return sub_23FC5A63C();
}

uint64_t sub_23FC72874()
{
  uint64_t *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23FC75564();
  v1 = (void (*)(uint64_t, uint64_t))v0[48];
  v2 = v0[39];
  v3 = v0[34];
  sub_23FC76764(v0[29]);
  v1(v2, v3);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5B980();
  sub_23FC5D048();
  sub_23FC5D040();
  v4 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC75318(v4);
}

uint64_t sub_23FC7290C()
{
  uint64_t v0;

  sub_23FC5BC54();
  sub_23FC75364();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC75A54();
  sub_23FC5EFD4();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC72968()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  sub_23FC5BC54();
  v1 = *(void (**)(uint64_t))(v0 + 384);
  sub_23FC090C8(*(_QWORD *)(v0 + 232));
  v2 = sub_23FC5E880();
  v1(v2);
  sub_23FC75364();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC75A54();
  sub_23FC5EFD4();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC729E4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23FC5BC54();
  v1 = *(void (**)(uint64_t))(v0 + 384);
  v2 = *(_QWORD *)(v0 + 232);
  sub_23FC090C8(*(_QWORD *)(v0 + 208));
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v3 = sub_23FC5E880();
  v1(v3);
  sub_23FC75364();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC75A54();
  sub_23FC5EFD4();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC72A6C()
{
  uint64_t v0;
  int v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  sub_23FC75564();
  swift_getErrorValue();
  if (sub_23FC68F48(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80)))
  {
    sub_23FD74774();
    v1 = sub_23FC5C874();
    v2 = *(void **)(v0 + 448);
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v4 = *(_QWORD *)(v0 + 312);
    v5 = *(_QWORD *)(v0 + 272);
    v6 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 160);
    v8 = *(uint64_t **)(v0 + 168);
    if (v1 == *MEMORY[0x24BEB9CF8])
    {
      sub_23FC7597C(v7);
      v9 = *v8;
      v18 = v4;
      v19 = v3;
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      sub_23FC58AC8();
      sub_23FC75764();
      sub_23FC74C30(&qword_256F5EAC0, (void (*)(uint64_t))type metadata accessor for RuntimeError);
      sub_23FC5A704();
      *v12 = v10;
      v12[1] = v11;
      sub_23FC75F78();
      swift_willThrow();

      sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      v19(v18, v5);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v7 + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      swift_willThrow();
      sub_23FC5A734(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      v3(v4, v5);
    }
  }
  else
  {
    v13 = *(void (**)(uint64_t))(v0 + 384);
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    swift_willThrow();
    sub_23FC5B3B0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    v16 = sub_23FC5E880();
    v13(v16);
  }
  swift_task_dealloc();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5EFD4();
  sub_23FC5D050();
  return sub_23FC75318(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FC72C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_23FD71648();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_23FC12F34();
  v6 = sub_23FD744EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FBFF180();
  v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10 - v9, a1, v6);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v11, v6);
  if (v12 == *MEMORY[0x24BEB9150])
  {
    v13 = sub_23FD71CD8();
    sub_23FC753F8(v13);
LABEL_10:
    sub_23FC7664C();
    v16 = sub_23FD71C90();
    sub_23FC753F8(v16);
    goto LABEL_11;
  }
  if (v12 == *MEMORY[0x24BEB90D8])
  {
    v14 = (unsigned int *)MEMORY[0x24BE52248];
  }
  else
  {
    if (v12 == *MEMORY[0x24BEB9148] || v12 == *MEMORY[0x24BEB90A0] || v12 == *MEMORY[0x24BEB90F8])
    {
      sub_23FC7664C();
      v15 = sub_23FD71708();
      sub_23FC753F8(v15);
      goto LABEL_10;
    }
    if (v12 == *MEMORY[0x24BEB90C8]
      || v12 == *MEMORY[0x24BEB9120]
      || v12 == *MEMORY[0x24BEB9138]
      || v12 == *MEMORY[0x24BEB9110]
      || v12 == *MEMORY[0x24BEB90D0]
      || v12 == *MEMORY[0x24BEB9118]
      || v12 == *MEMORY[0x24BEB90F0]
      || v12 == *MEMORY[0x24BEB9108])
    {
      sub_23FC7664C();
      v18 = sub_23FD71F84();
      sub_23FC753F8(v18);
      goto LABEL_10;
    }
    if (v12 == *MEMORY[0x24BEB9130])
    {
      v14 = (unsigned int *)MEMORY[0x24BE522B8];
    }
    else if (v12 == *MEMORY[0x24BEB90E8])
    {
      v14 = (unsigned int *)MEMORY[0x24BE52298];
    }
    else if (v12 == *MEMORY[0x24BEB90A8])
    {
      v14 = (unsigned int *)MEMORY[0x24BE52268];
    }
    else if (v12 == *MEMORY[0x24BEB9100])
    {
      v14 = (unsigned int *)MEMORY[0x24BE522A0];
    }
    else if (v12 == *MEMORY[0x24BEB90B8])
    {
      v14 = (unsigned int *)MEMORY[0x24BE52250];
    }
    else if (v12 == *MEMORY[0x24BEB90C0])
    {
      v14 = (unsigned int *)MEMORY[0x24BE52258];
    }
    else
    {
      if (v12 == *MEMORY[0x24BEB9158])
      {
        sub_23FD744F8();
        sub_23FC74C30(&qword_256F5EAE0, (void (*)(uint64_t))MEMORY[0x24BEB9170]);
        v19 = sub_23FC7565C();
        v21 = sub_23FC76094(v19, v20);
        sub_23FC760A8(v21, *MEMORY[0x24BEB9168]);
        swift_willThrow();
        goto LABEL_12;
      }
      if (v12 == *MEMORY[0x24BEB9128])
      {
        v14 = (unsigned int *)MEMORY[0x24BE522A8];
      }
      else if (v12 == *MEMORY[0x24BEB9140])
      {
        v14 = (unsigned int *)MEMORY[0x24BE522C0];
      }
      else if (v12 == *MEMORY[0x24BEB90B0])
      {
        v14 = (unsigned int *)MEMORY[0x24BE52278];
      }
      else
      {
        if (v12 != *MEMORY[0x24BEB90E0])
        {
          sub_23FD744F8();
          sub_23FC74C30(&qword_256F5EAE0, (void (*)(uint64_t))MEMORY[0x24BEB9170]);
          v22 = sub_23FC7565C();
          v24 = sub_23FC76094(v22, v23);
          sub_23FC760A8(v24, *MEMORY[0x24BEB9168]);
          swift_willThrow();
          sub_23FC7689C(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
          goto LABEL_12;
        }
        v14 = (unsigned int *)MEMORY[0x24BE52290];
      }
    }
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *v14, v3);
  sub_23FD7166C();
LABEL_11:
  sub_23FC7664C();
  v17 = sub_23FD71C84();
  sub_23FC753F8(v17);
LABEL_12:
  sub_23FC06000();
}

uint64_t sub_23FC73124(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v17[2];

  sub_23FBFD684(&qword_256F5EAC8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD73E08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  sub_23FC12F34();
  sub_23FBFDE40((_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)), *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120) + 24));
  v11 = sub_23FD72EE4();
  sub_23FC06160(v2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  if ((v11 & 1) != 0)
  {
    sub_23FC595C4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    v12 = 1;
  }
  else
  {
    v17[1] = sub_23FD73DE4();
    sub_23FBFD684(&qword_256F5EAD0);
    sub_23FC74828(&qword_256F5EAD8);
    sub_23FD73A24();
    sub_23FC103E8();
    v13 = sub_23FD72434();
    sub_23FC100EC((uint64_t)v7, 1, v13);
    if (v14)
    {
      v15 = sub_23FC595C4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
      sub_23FC5F358(v15, &qword_256F5EAC8);
      v12 = 0;
    }
    else
    {
      v12 = sub_23FD72428();
      sub_23FC595C4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
      sub_23FC10454((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
    }
  }
  return v12 & 1;
}

uint64_t sub_23FC732C4()
{
  uint64_t v0;

  sub_23FC090C8(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23FC73338()
{
  sub_23FC732C4();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for DefaultRuntime(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC7493C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultRuntime);
}

uint64_t sub_23FC7335C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC73368()
{
  return sub_23FC7335C();
}

void sub_23FC73380()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FC586E8;
  sub_23FC6DBE8();
}

uint64_t sub_23FC733FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23FC73464;
  return sub_23FC686D4(a1, a2, a3);
}

uint64_t sub_23FC73464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23FC59C00();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t sub_23FC734AC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FC586E8;
  return sub_23FC70DE0();
}

uint64_t sub_23FC73514(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23FC586E8;
  return sub_23FC714E4(a1);
}

uint64_t sub_23FC73564()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FC586E8;
  return sub_23FC719B0();
}

uint64_t sub_23FC735C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FC57438;
  return sub_23FC71FEC();
}

uint64_t sub_23FC73634()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FC586E8;
  return sub_23FC67880();
}

uint64_t sub_23FC73698(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t result;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = a1;
  v3 = sub_23FD7157C();
  v52 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v46 - v9;
  v11 = sub_23FD7409C();
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v48 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FBFD684(&qword_256F5EB60);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_23FBFD684(&qword_256F5EB68);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (uint64_t *)((char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_23FD73F64();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a2;
  sub_23FC79050();
  v27 = sub_23FBFD684(&qword_256F5EB70);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v27) == 1)
  {
    sub_23FC584B0((uint64_t)v17, &qword_256F5EB60);
    return 0;
  }
  v28 = (char *)v17 + *(int *)(v27 + 48);
  v29 = (char *)v21 + *(int *)(v18 + 48);
  *v21 = *v17;
  v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v30(v29, v28, v22);
  v31 = *v21;
  result = ((uint64_t (*)(char *, char *, uint64_t))v30)(v26, (char *)v21 + *(int *)(v18 + 48), v22);
  if (v31 <= 0)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    return 0;
  }
  v46 = v23;
  v47 = v26;
  if ((unint64_t)(v31 - 1) < *(_QWORD *)(v51 + 16))
  {
    sub_23FD740CC();
    v33 = v48;
    sub_23FD740A8();
    v35 = v49;
    v34 = v50;
    if ((*(unsigned int (**)(char *, uint64_t))(v49 + 88))(v33, v50) == *MEMORY[0x24BE56B68])
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
      v36 = v47;
      v37 = sub_23FD73F34();
      v38 = *(_QWORD *)(v37 + 16);
      v39 = v22;
      if (v38)
      {
        v40 = *(_QWORD *)(sub_23FD73604() - 8);
        v41 = *(unsigned __int8 *)(v40 + 80);
        v51 = v37;
        v42 = v37 + ((v41 + 32) & ~v41);
        v43 = *(_QWORD *)(v40 + 72);
        while (1)
        {
          sub_23FD735F8();
          sub_23FD73BEC();
          v44 = sub_23FD71558();
          v45 = *(void (**)(char *, uint64_t))(v52 + 8);
          v45(v7, v3);
          v45(v10, v3);
          if ((v44 & 1) != 0)
            break;
          v42 += v43;
          if (!--v38)
          {
            swift_bridgeObjectRelease();
            v36 = v47;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v39);
        return v31;
      }
      swift_bridgeObjectRelease();
LABEL_14:
      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v39);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v22);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_23FC73A50(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v20 = a1;
  v3 = sub_23FD7157C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FBFD684(&qword_256F5EB30);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FD73514();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a2;
  sub_23FBFD684(&qword_256F5EAD0);
  sub_23FC74828(&qword_256F5EB38);
  sub_23FD73988();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_23FC584B0((uint64_t)v11, &qword_256F5EB30);
    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
    sub_23FD734D8();
    v17 = sub_23FC73C18((uint64_t)v7, v20, a2);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  return v17 & 1;
}

uint64_t sub_23FC73C18(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;

  v102 = a1;
  v5 = sub_23FD72FEC();
  v89 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_23FBFD684(&qword_256F5EB40);
  MEMORY[0x24BDAC7A8](v87, v9);
  v90 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FBFD684(&qword_256F5EB48);
  MEMORY[0x24BDAC7A8](v11, v12);
  v86 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FBFD684(&qword_256F5EB50);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v84 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v82 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v88 = (char *)&v82 - v23;
  v24 = sub_23FD7157C();
  v93 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v25);
  v101 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23FD7409C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_23FD73F64();
  v98 = *(_QWORD *)(v100 - 8);
  v33 = MEMORY[0x24BDAC7A8](v100, v32);
  v95 = (char *)&v82 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v99 = (char *)&v82 - v36;
  v97 = sub_23FD740CC();
  v37 = *(_QWORD *)(v97 - 8);
  result = MEMORY[0x24BDAC7A8](v97, v38);
  v96 = (char *)&v82 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (*(_QWORD *)(a3 + 16) < a2)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v91 = v21;
    v92 = v24;
    v83 = v8;
    v85 = v5;
    v41 = a3 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v42 = *MEMORY[0x24BE56AC8];
    v94 = a3;
    result = swift_bridgeObjectRetain();
    v43 = a2;
    v44 = a2 - 1;
    v45 = v96;
    v46 = v97;
    while (1)
    {
      if (v44 >= v43)
      {
        __break(1u);
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v45, v41 + *(_QWORD *)(v37 + 72) * v44, v46);
      sub_23FD740A8();
      if ((*(unsigned int (**)(char *, uint64_t))(v28 + 88))(v31, v27) == v42)
        break;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v45, v46);
      result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v31, v27);
      --v44;
      v43 = a2;
      if (v44 == -1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v99, v31, v100);
    v47 = sub_23FD73F34();
    v48 = *(_QWORD *)(v47 + 16);
    if (!v48)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      v56 = v98;
      v57 = v99;
      v58 = v95;
      v59 = v100;
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v99, v100);
      v60 = *(void (**)(char *, uint64_t))(v56 + 8);
      v60(v58, v59);
      v60(v57, v59);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v96, v97);
LABEL_14:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    v82 = sub_23FD73604();
    v49 = *(_QWORD *)(v82 - 8);
    v50 = v47 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
    v51 = *(_QWORD *)(v49 + 72);
    v52 = v92;
    v53 = v93;
    v54 = v101;
    while (1)
    {
      sub_23FD735F8();
      v55 = sub_23FD71558();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
      if ((v55 & 1) != 0)
        break;
      v50 += v51;
      if (!--v48)
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v99, v100);
    v62 = sub_23FD73F34();
    v63 = v86;
    sub_23FCA1434(v62, v86);
    swift_bridgeObjectRelease();
    v64 = v82;
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v63, 1, v82) == 1)
    {
      sub_23FC584B0(v63, &qword_256F5EB48);
      v65 = 1;
      v66 = v85;
      v67 = (uint64_t)v90;
      v68 = (uint64_t)v88;
    }
    else
    {
      v68 = (uint64_t)v88;
      sub_23FD735EC();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v63, v64);
      v65 = 0;
      v66 = v85;
      v67 = (uint64_t)v90;
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v68, v65, 1, v66);
    v69 = v89;
    v70 = (uint64_t)v91;
    (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v91, *MEMORY[0x24BE54CB0], v66);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v70, 0, 1, v66);
    v71 = v67 + *(int *)(v87 + 48);
    sub_23FC74908(v68, v67, &qword_256F5EB50);
    sub_23FC74908(v70, v71, &qword_256F5EB50);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v67, 1, v66) == 1)
    {
      sub_23FC584B0(v70, &qword_256F5EB50);
      sub_23FC584B0(v68, &qword_256F5EB50);
      v72 = *(void (**)(char *, uint64_t))(v98 + 8);
      v73 = v100;
      v72(v95, v100);
      v72(v99, v73);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v96, v97);
      swift_bridgeObjectRelease();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v71, 1, v66) == 1)
      {
        sub_23FC584B0(v67, &qword_256F5EB50);
        v61 = 1;
        return v61 & 1;
      }
      goto LABEL_25;
    }
    v74 = v84;
    sub_23FC74908(v67, v84, &qword_256F5EB50);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v71, 1, v66) == 1)
    {
      sub_23FC584B0((uint64_t)v91, &qword_256F5EB50);
      sub_23FC584B0(v68, &qword_256F5EB50);
      v75 = *(void (**)(char *, uint64_t))(v98 + 8);
      v76 = v100;
      v75(v95, v100);
      v75(v99, v76);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v96, v97);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v74, v66);
LABEL_25:
      sub_23FC584B0(v67, &qword_256F5EB40);
      goto LABEL_15;
    }
    v77 = v68;
    v78 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v83, v71, v66);
    sub_23FC74C30(&qword_256F5EB58, (void (*)(uint64_t))MEMORY[0x24BE54D48]);
    v61 = sub_23FD74BDC();
    v79 = *(void (**)(char *, uint64_t))(v69 + 8);
    v79(v78, v66);
    sub_23FC584B0((uint64_t)v91, &qword_256F5EB50);
    sub_23FC584B0(v77, &qword_256F5EB50);
    v80 = *(void (**)(char *, uint64_t))(v98 + 8);
    v81 = v100;
    v80(v95, v100);
    v80(v99, v81);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v96, v97);
    swift_bridgeObjectRelease();
    v79((char *)v74, v66);
    sub_23FC584B0(v67, &qword_256F5EB50);
  }
  else
  {
LABEL_15:
    v61 = 0;
  }
  return v61 & 1;
}

uint64_t sub_23FC743C0(void (*a1)(__int128 *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  void (*v38)(__int128 *__return_ptr, char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 v44[2];
  uint64_t v45;

  v38 = a1;
  v39 = a2;
  v4 = sub_23FD73C28();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v42 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_256F5DB20);
  result = sub_23FD75254();
  v9 = 0;
  v40 = a3;
  v41 = result;
  v12 = *(_QWORD *)(a3 + 64);
  v11 = a3 + 64;
  v10 = v12;
  v13 = 1 << *(_BYTE *)(v11 - 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v10;
  v35 = v11;
  v36 = (unint64_t)(v13 + 63) >> 6;
  v37 = result + 64;
  if ((v14 & v10) == 0)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v15));
  v17 = (v15 - 1) & v15;
  v18 = v16 | (v9 << 6);
  v19 = v42;
  while (1)
  {
    v23 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v18);
    v24 = *v23;
    v25 = v23[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v19, *(_QWORD *)(v40 + 56) + *(_QWORD *)(v5 + 72) * v18, v4);
    swift_bridgeObjectRetain();
    v26 = v45;
    v38(v44, v19);
    if (v26)
    {
      swift_bridgeObjectRelease();
      v34 = v41;
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
      return v34;
    }
    v43 = v24;
    v27 = v17;
    v28 = v9;
    v45 = 0;
    v29 = v5;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
    *(_QWORD *)(v37 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v30 = v41;
    v31 = (_QWORD *)(*(_QWORD *)(v41 + 48) + 16 * v18);
    *v31 = v43;
    v31[1] = v25;
    result = sub_23FBFDE28(v44, *(_QWORD *)(v30 + 56) + 40 * v18);
    v32 = *(_QWORD *)(v30 + 16);
    v20 = __OFADD__(v32, 1);
    v33 = v32 + 1;
    if (v20)
      break;
    *(_QWORD *)(v30 + 16) = v33;
    v5 = v29;
    v9 = v28;
    v15 = v27;
    if (v27)
      goto LABEL_4;
LABEL_5:
    v20 = __OFADD__(v9++, 1);
    v19 = v42;
    if (v20)
      goto LABEL_28;
    if (v9 >= v36)
      return v41;
    v21 = *(_QWORD *)(v35 + 8 * v9);
    if (!v21)
    {
      v22 = v9 + 1;
      if (v9 + 1 >= v36)
        return v41;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (v21)
        goto LABEL_14;
      v22 = v9 + 2;
      if (v9 + 2 >= v36)
        return v41;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (v21)
      {
LABEL_14:
        v9 = v22;
        goto LABEL_15;
      }
      v22 = v9 + 3;
      if (v9 + 3 < v36)
      {
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v9 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_29;
            if (v9 >= v36)
              return v41;
            v21 = *(_QWORD *)(v35 + 8 * v9);
            ++v22;
            if (v21)
              goto LABEL_15;
          }
        }
        goto LABEL_14;
      }
      return v41;
    }
LABEL_15:
    v17 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v9 << 6);
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23FC74698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_23FD73160();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD7409C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v11, v7) == *MEMORY[0x24BE56AE0])
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_23FD73148();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v12 = sub_23FD71750();
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v12);
  }
  else
  {
    v14 = sub_23FD71750();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_23FC747FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FD714F8();
  *a1 = result & 1;
  return result;
}

void sub_23FC74828(_QWORD *a1)
{
  if (!*a1)
  {
    sub_23FBFEDE8(&qword_256F5EAD0);
    sub_23FC767E0();
  }
  sub_23FBFF0A0();
}

uint64_t sub_23FC74860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RetrievedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC748A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_23FC68624(a1);
}

void sub_23FC748BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23FBFF088(v3);
  sub_23FBFF0A0();
}

void sub_23FC748E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23FC102D0(a1, a2, a3);
  sub_23FBFF088(v3);
  sub_23FBFF0A0();
}

void sub_23FC74908(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23FC102D0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_23FBFF0A0();
}

uint64_t sub_23FC7493C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24267974C](a1, v6, a5);
}

uint64_t sub_23FC74968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD72F38();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23FC749A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD72F38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23FC749D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD72F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FC74A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD72F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FC74A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD72F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FC74AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD72F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FC74AE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC74AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FC762B0();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, v0, v2);
}

uint64_t sub_23FC74B1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC74B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FC762B0();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, v0, v0, v2);
}

uint64_t type metadata accessor for DefaultDeviceStateProvider()
{
  uint64_t result;

  result = qword_256F5EC80;
  if (!qword_256F5EC80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FC74B8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD72F38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23FC74BF4(uint64_t a1)
{
  uint64_t v2;

  sub_23FC74C30(&qword_256F5ECB8, (void (*)(uint64_t))type metadata accessor for DefaultDeviceStateProvider);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_23FC74C30(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    sub_23FC767E0();
  }
  sub_23FBFF0A0();
}

uint64_t sub_23FC74C64@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[42];
  *(_QWORD *)(v2 - 208) = v1[43];
  *(_QWORD *)(v2 - 200) = v3;
  v4 = v1[38];
  *(_QWORD *)(v2 - 192) = v1[39];
  *(_QWORD *)(v2 - 184) = v4;
  v5 = v1[36];
  *(_QWORD *)(v2 - 176) = v1[37];
  *(_QWORD *)(v2 - 168) = v5;
  v6 = v1[34];
  *(_QWORD *)(v2 - 160) = v1[35];
  *(_QWORD *)(v2 - 152) = v6;
  v7 = v1[30];
  *(_QWORD *)(v2 - 144) = v1[33];
  *(_QWORD *)(v2 - 136) = v7;
  v8 = v1[26];
  *(_QWORD *)(v2 - 128) = v1[29];
  *(_QWORD *)(v2 - 120) = v8;
  v9 = v1[20];
  *(_QWORD *)(v2 - 112) = v1[23];
  *(_QWORD *)(v2 - 104) = v9;
  *(_QWORD *)(v2 - 96) = v1[19];
  return swift_task_dealloc();
}

uint64_t sub_23FC74D8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[79];
  *(_QWORD *)(v1 - 168) = v0[80];
  *(_QWORD *)(v1 - 160) = v2;
  v3 = v0[77];
  *(_QWORD *)(v1 - 152) = v0[78];
  *(_QWORD *)(v1 - 144) = v3;
  v4 = v0[73];
  *(_QWORD *)(v1 - 136) = v0[76];
  *(_QWORD *)(v1 - 128) = v4;
  v5 = v0[67];
  *(_QWORD *)(v1 - 120) = v0[70];
  *(_QWORD *)(v1 - 112) = v5;
  v6 = v0[61];
  *(_QWORD *)(v1 - 104) = v0[64];
  *(_QWORD *)(v1 - 96) = v6;
  return swift_task_dealloc();
}

uint64_t sub_23FC74E50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[42];
  *(_QWORD *)(v1 - 200) = v0[43];
  *(_QWORD *)(v1 - 192) = v2;
  v3 = v0[38];
  *(_QWORD *)(v1 - 184) = v0[39];
  *(_QWORD *)(v1 - 176) = v3;
  v4 = v0[36];
  *(_QWORD *)(v1 - 168) = v0[37];
  *(_QWORD *)(v1 - 160) = v4;
  v5 = v0[34];
  *(_QWORD *)(v1 - 152) = v0[35];
  *(_QWORD *)(v1 - 144) = v5;
  v6 = v0[30];
  *(_QWORD *)(v1 - 136) = v0[33];
  *(_QWORD *)(v1 - 128) = v6;
  v7 = v0[26];
  *(_QWORD *)(v1 - 120) = v0[29];
  *(_QWORD *)(v1 - 112) = v7;
  v8 = v0[20];
  *(_QWORD *)(v1 - 104) = v0[23];
  *(_QWORD *)(v1 - 96) = v8;
  *(_QWORD *)(v1 - 88) = v0[19];
  return swift_task_dealloc();
}

uint64_t sub_23FC74F74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[39];
  *(_QWORD *)(v1 - 208) = v0[42];
  *(_QWORD *)(v1 - 200) = v2;
  v3 = v0[37];
  *(_QWORD *)(v1 - 192) = v0[38];
  *(_QWORD *)(v1 - 184) = v3;
  v4 = v0[35];
  *(_QWORD *)(v1 - 176) = v0[36];
  *(_QWORD *)(v1 - 168) = v4;
  v5 = v0[33];
  *(_QWORD *)(v1 - 160) = v0[34];
  *(_QWORD *)(v1 - 152) = v5;
  v6 = v0[29];
  *(_QWORD *)(v1 - 144) = v0[30];
  *(_QWORD *)(v1 - 136) = v6;
  v7 = v0[23];
  *(_QWORD *)(v1 - 128) = v0[26];
  *(_QWORD *)(v1 - 120) = v7;
  v8 = v0[19];
  *(_QWORD *)(v1 - 112) = v0[20];
  *(_QWORD *)(v1 - 104) = v8;
  return swift_task_dealloc();
}

uint64_t sub_23FC75070(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC7508C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v1 - 88) = v2;
  return swift_task_dealloc();
}

uint64_t sub_23FC750F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC75110()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC75178()
{
  return swift_task_switch();
}

uint64_t sub_23FC75184()
{
  return swift_task_switch();
}

uint64_t sub_23FC75198(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC751B4()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (char *)v1[53];
  v3 = v1[51];
  v4 = v1[48];
  v5 = v1[49];
  v1[112] = *(_QWORD *)v2;
  v1[113] = *((_QWORD *)v2 + 1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v3, &v2[*(int *)(v0 + 48)], v4);
}

uint64_t sub_23FC751E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v1 - 96) = v2;
  return swift_bridgeObjectRelease();
}

void sub_23FC75274(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23FC7529C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC752A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[102];
  v3 = v0[101];
  *(_QWORD *)(v1 - 112) = v0[100];
  *(_QWORD *)(v1 - 104) = v2;
  *(_QWORD *)(v1 - 128) = v0[96];
  *(_QWORD *)(v1 - 120) = v3;
  return sub_23FD71C6C();
}

uint64_t sub_23FC752E8()
{
  return swift_task_alloc();
}

uint64_t sub_23FC752FC(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_23FC75318(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC75334(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23FC75350(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t sub_23FC75364()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC75394()
{
  return swift_beginAccess();
}

uint64_t sub_23FC753A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, v2, 1, a1);
  return sub_23FD73A00();
}

BOOL sub_23FC753CC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC753F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

uint64_t sub_23FC75410@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = (char *)a1 + *a1;
  return swift_task_alloc();
}

uint64_t sub_23FC75424()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[175];
  v3 = v0[157];
  *(_QWORD *)(v1 - 96) = v0[146];
  *(_QWORD *)(v1 - 88) = v2;
  v4 = v0[141];
  *(_QWORD *)(v1 - 112) = v3;
  *(_QWORD *)(v1 - 104) = v4;
  v5 = v0[140];
  *(_QWORD *)(v1 - 128) = v0[136];
  *(_QWORD *)(v1 - 120) = v5;
  return swift_release();
}

uint64_t sub_23FC75474(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC75490(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FC754AC()
{
  return sub_23FC67880();
}

void sub_23FC754C8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_23FC754D0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FC754E8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_23FC754FC()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FC7550C()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
}

uint64_t sub_23FC75534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

id sub_23FC7554C()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)(v0 + 712) + 16);
}

uint64_t sub_23FC75580()
{
  return sub_23FD71C6C();
}

uint64_t sub_23FC75588()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[102];
  v4 = v1[101];
  *(_QWORD *)(v2 - 112) = v0;
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 96) = v1[100];
  *(_QWORD *)(v2 - 88) = v3;
  *(_QWORD *)(v2 - 120) = v1[11];
  return sub_23FD71FB4();
}

uint64_t sub_23FC755C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v0[90];
  *(_QWORD *)(v2 - 120) = v0[41];
  *(_QWORD *)(v2 - 112) = v0[40];
  *(_QWORD *)(v2 - 104) = v3;
  return *(unsigned __int8 *)(v1 + 1);
}

uint64_t sub_23FC7560C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[30] + 8))(v0[31], v0[29]);
}

uint64_t sub_23FC7562C()
{
  return sub_23FD72494();
}

uint64_t sub_23FC75634()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23FC75640()
{
  return sub_23FD74F6C();
}

uint64_t sub_23FC75648()
{
  return swift_task_alloc();
}

uint64_t sub_23FC7565C()
{
  return swift_allocError();
}

uint64_t sub_23FC75670()
{
  return swift_getAssociatedTypeWitness();
}

void sub_23FC75680(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  sub_23FC67D10(v4, a1, v2, v3, a2);
}

uint64_t sub_23FC75694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2 + *(int *)(a1 + 48), v3, v1);
}

void sub_23FC756B0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

BOOL sub_23FC756C0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23FC756C8@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(*(_QWORD *)(a1 + 64) + 4);
}

uint64_t sub_23FC756E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t sub_23FC75700()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 112);
  *(_BYTE *)(v0 + 1206) = *(_BYTE *)(result + 32);
  return result;
}

void sub_23FC75738(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC74908(a1, v3, a3);
}

uint64_t sub_23FC75740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_23FC7574C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *v2 = v0;
  v2[1] = v1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FC75764()
{
  return type metadata accessor for RuntimeError();
}

uint64_t sub_23FC7576C()
{
  return sub_23FD74408();
}

uint64_t sub_23FC75784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a11 + 8))(v12, a12);
}

uint64_t sub_23FC7579C()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC757B4()
{
  return swift_task_switch();
}

uint64_t sub_23FC757D0()
{
  uint64_t v0;

  return v0;
}

void sub_23FC757E0()
{
  sub_23FD4EB40();
}

uint64_t sub_23FC757FC()
{
  return sub_23FD724D0();
}

uint64_t sub_23FC75804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_23FC75820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 72) = 1;
  *(_QWORD *)(v2 - 96) = **(int **)(v0 + 64) + *(_QWORD *)(v0 + 64);
  return swift_task_alloc();
}

uint64_t sub_23FC75848()
{
  uint64_t v0;
  _QWORD *v1;

  v1[95] = v0;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1[59] + 16))(v1[60], v1[69], v1[58]);
}

uint64_t sub_23FC75870(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC7588C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FC758A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 912) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 600);
}

uint64_t sub_23FC758FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_23FC75918()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[59] + 16))(v0[60], v0[63], v0[58]);
}

uint64_t sub_23FC75940()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 104) + 8))(*(_QWORD *)(v0 - 88), *(_QWORD *)(v0 - 96));
}

uint64_t sub_23FC75950()
{
  return swift_task_alloc();
}

uint64_t sub_23FC75958(float a1)
{
  uint64_t v1;
  float *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  *v2 = a1;
  *(_QWORD *)(v6 - 152) = v2 + 1;
  return v4(v1, v3, v5);
}

uint64_t sub_23FC7597C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23FC75988(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_23FC75994()
{
  return sub_23FD716B4();
}

void sub_23FC759A8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

uint64_t sub_23FC759BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 480);
}

uint64_t sub_23FC759E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 528);
}

void sub_23FC75A14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

uint64_t sub_23FC75A1C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 768) + *(int *)(*(_QWORD *)(v0 + 736) + 36);
}

uint64_t sub_23FC75A34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 272) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23FC75A54()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC75A5C()
{
  return swift_task_alloc();
}

void sub_23FC75A64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
}

uint64_t sub_23FC75A8C()
{
  return sub_23FD73A0C();
}

uint64_t sub_23FC75AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FC67FC8(a1, a2, a3);
}

uint64_t sub_23FC75AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_23FC75B00(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FC75B24()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC75B44()
{
  return sub_23FD747C8();
}

void sub_23FC75B4C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FC5806C(v2, a2);
}

uint64_t sub_23FC75B54()
{
  return sub_23FD74F48();
}

uint64_t sub_23FC75B5C(uint64_t (*a1)(void))
{
  return a1();
}

BOOL sub_23FC75B6C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC75B7C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_23FC75B8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 - 88))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 104));
}

uint64_t sub_23FC75B98()
{
  return sub_23FD75380();
}

uint64_t sub_23FC75BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = *(_QWORD *)(v2 + 336);
  *(_QWORD *)(v1 + 16) = v0;
  return result;
}

uint64_t sub_23FC75BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, _QWORD);

  return v2(*(_QWORD *)(v0 + 312), v1, *(_QWORD *)(v0 + 296));
}

uint64_t sub_23FC75BF4()
{
  return sub_23FD724D0();
}

uint64_t sub_23FC75C04()
{
  return swift_task_dealloc();
}

void sub_23FC75C20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC74908(v3, v4, a3);
}

void sub_23FC75C2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

uint64_t sub_23FC75C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FC75C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  *(_WORD *)(v17 + 12) = 2080;
  return sub_23FC60768(v16, a16);
}

uint64_t sub_23FC75C5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 - 112))(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 128));
}

void sub_23FC75C68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[175];
  v3 = v0[157];
  *(_QWORD *)(v1 - 104) = v0[146];
  *(_QWORD *)(v1 - 96) = v2;
  v4 = v0[141];
  *(_QWORD *)(v1 - 120) = v3;
  *(_QWORD *)(v1 - 112) = v4;
}

uint64_t sub_23FC75C8C()
{
  return swift_task_dealloc();
}

void sub_23FC75C9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC74908(a1, v3, a3);
}

uint64_t sub_23FC75CA4()
{
  return sub_23FD73C1C();
}

uint64_t sub_23FC75CCC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 104))();
}

uint64_t sub_23FC75CD4()
{
  return sub_23FD75044();
}

uint64_t sub_23FC75CDC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 120);
}

void sub_23FC75D00()
{
  void *v0;

}

uint64_t sub_23FC75D28(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
  return sub_23FD73A00();
}

uint64_t sub_23FC75D54@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*(_QWORD *)(result + 48) + 16 * a2);
  v4 = v3[1];
  *v2 = *v3;
  v2[1] = v4;
  return result;
}

uint64_t sub_23FC75D78()
{
  return swift_getTupleTypeMetadata2();
}

void sub_23FC75D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_23FC748E8(v0, v1, v2);
}

BOOL sub_23FC75D98()
{
  uint64_t v0;

  return sub_23FC68F48(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23FC75DA4()
{
  return sub_23FD74D20();
}

uint64_t sub_23FC75DB0()
{
  return sub_23FD716A8();
}

uint64_t sub_23FC75DB8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 744) + 8))(v1, *(_QWORD *)(v0 + 736));
}

uint64_t sub_23FC75DD4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC75DE0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1[67] + 32))(v1[76], a1, v1[66]);
}

_WORD *sub_23FC75DFC(_WORD *result)
{
  *result = 0;
  return result;
}

BOOL sub_23FC75E24(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FC75E34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC75E3C()
{
  return sub_23FD7169C();
}

uint64_t sub_23FC75E58@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_23FC75E60()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FC75E68()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC74860(v1, *(_QWORD *)(v0 + 472));
}

void sub_23FC75E80()
{
  sub_23FC9B9C8();
}

uint64_t sub_23FC75E98()
{
  return 0;
}

uint64_t sub_23FC75EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

uint64_t sub_23FC75EC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

uint64_t sub_23FC75ED8()
{
  return sub_23FD73310();
}

void sub_23FC75EF0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23FC75F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v1, v3);
}

void sub_23FC75F18()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23FC75F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23FC75F34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 872);
}

void sub_23FC75F48()
{
  sub_23FC9B9C8();
}

uint64_t sub_23FC75F78()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FC75F80()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FC75FB0()
{
  return swift_release();
}

uint64_t sub_23FC75FC8()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_23FC75FD0()
{
  return sub_23FD74768();
}

uint64_t sub_23FC75FD8()
{
  return sub_23FD74474();
}

uint64_t sub_23FC75FE0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC75FEC()
{
  return swift_release();
}

uint64_t sub_23FC76000()
{
  uint64_t v0;

  return sub_23FCACC48(*(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 688), *(uint64_t **)(v0 + 680));
}

uint64_t sub_23FC76014()
{
  return sub_23FD75380();
}

void sub_23FC7601C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  sub_23FD4A58C(a1, a2, v5, v6, a5);
}

uint64_t sub_23FC76028()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 96))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
}

uint64_t sub_23FC7603C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FC76050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(void))
{
  return a21();
}

uint64_t sub_23FC76058()
{
  return sub_23FD74198();
}

void sub_23FC7606C()
{
  sub_23FC9B9C8();
}

uint64_t sub_23FC76080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = *(_QWORD *)(v1 + 320);
  *(_QWORD *)(v2 - 88) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC76094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(a2, v2, v3);
}

uint64_t sub_23FC760A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23FC760BC()
{
  return sub_23FD73A00();
}

uint64_t sub_23FC760C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC760D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t sub_23FC760DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC760E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, v1, v3);
}

uint64_t sub_23FC760F8()
{
  return sub_23FD71AF8();
}

uint64_t sub_23FC76128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FC62E9C(a1, a2, a3);
}

uint64_t sub_23FC76130()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
}

uint64_t sub_23FC76144(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 664);
}

uint64_t sub_23FC76160@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = (char *)a1 + *a1;
  return swift_task_alloc();
}

uint64_t sub_23FC76174(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t sub_23FC76180()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC76194()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FC67F4C(v1, v0, v2);
}

void sub_23FC761A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

uint64_t sub_23FC761B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v3, v1);
}

void sub_23FC761C4()
{
  void *v0;

}

uint64_t sub_23FC761CC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC761D8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_23FC761EC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 392);
}

uint64_t sub_23FC76208()
{
  return sub_23FD74B70();
}

uint64_t sub_23FC7621C()
{
  return sub_23FD71AF8();
}

uint64_t sub_23FC76224()
{
  return sub_23FD74840();
}

uint64_t sub_23FC76248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23FC76250()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 1176))(*(_QWORD *)(v0 + 1152), *(_QWORD *)(v0 + 1168), *(_QWORD *)(v0 + 1128));
}

uint64_t sub_23FC76264()
{
  return swift_getAssociatedTypeWitness();
}

void sub_23FC76278()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23FC584B0(v0, v1);
}

uint64_t sub_23FC76284@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

void sub_23FC76290()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 672);
}

uint64_t sub_23FC762A8()
{
  return sub_23FD724D0();
}

uint64_t sub_23FC762B0()
{
  return sub_23FD72F38();
}

BOOL sub_23FC762C0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

void sub_23FC762C8()
{
  void *v0;

}

uint64_t sub_23FC762D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 152) + 8))(*(_QWORD *)(v0 - 136), *(_QWORD *)(v0 - 144));
}

uint64_t sub_23FC762E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 728))(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 560));
}

uint64_t sub_23FC762F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 88))(v1, v2);
}

void sub_23FC76320()
{
  void *v0;

}

uint64_t sub_23FC76330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23FC76340()
{
  return swift_willThrow();
}

uint64_t sub_23FC76348()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_23FC9DC40(v0, v1, (uint64_t *)(v2 - 80));
}

uint64_t sub_23FC76358()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 672);
}

uint64_t sub_23FC76388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 120))(v0, v1);
}

void sub_23FC76398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 368);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v0 + 376);
  *(_QWORD *)(v1 - 96) = v2;
}

uint64_t sub_23FC763E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 120) + 8))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112));
}

uint64_t sub_23FC763F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, a9);
}

uint64_t sub_23FC76400()
{
  return sub_23FD740FC();
}

uint64_t sub_23FC76410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(a1, a2, v2);
}

uint64_t sub_23FC76420()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC76440()
{
  return sub_23FD74918();
}

uint64_t sub_23FC76448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 120) + 104))(v2, a2, *(_QWORD *)(v3 - 112));
}

uint64_t sub_23FC76458()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC76468()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC76470()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC76478()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC764D0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 112);
}

uint64_t sub_23FC764F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0[111] = v2;
  v0[110] = v1;
  return v0[52];
}

uint64_t sub_23FC76500()
{
  return sub_23FD74B40();
}

uint64_t sub_23FC76538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v0, v1, v3);
}

uint64_t sub_23FC76548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_23FC76558()
{
  return sub_23FD73A3C();
}

uint64_t sub_23FC76568()
{
  return sub_23FD71C84();
}

uint64_t sub_23FC76570()
{
  return sub_23FD73970();
}

uint64_t sub_23FC76578()
{
  return type metadata accessor for ResultResponse(0);
}

uint64_t sub_23FC76580()
{
  return sub_23FD7367C();
}

uint64_t sub_23FC76594()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC765A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for ToolExecutionEventStream(255, v5, v4, a4);
}

uint64_t sub_23FC765B4()
{
  uint64_t v0;

  return sub_23FC62A78(v0);
}

uint64_t sub_23FC765C4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC765FC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 104) + 8))(v0, *(_QWORD *)(v1 - 96));
}

void sub_23FC7660C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  type metadata accessor for ToolExecution.Outcome();
}

uint64_t sub_23FC76618()
{
  return sub_23FD74CB4();
}

uint64_t sub_23FC76624@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t sub_23FC76630()
{
  return sub_23FD71CE4();
}

uint64_t sub_23FC76638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FC76640()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t sub_23FC7664C()
{
  return 0;
}

uint64_t sub_23FC76658()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 160), *(_QWORD *)(v1 - 168));
}

uint64_t sub_23FC76664()
{
  return swift_projectBox();
}

uint64_t sub_23FC76670()
{
  return sub_23FD73328();
}

uint64_t sub_23FC7667C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_23FC9DC40(a1, a2, (uint64_t *)va);
}

BOOL sub_23FC76688@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_23FC7669C()
{
  void *v0;

}

uint64_t sub_23FC766A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC766AC()
{
  return swift_willThrow();
}

void sub_23FC766B4()
{
  sub_23FC84B34();
}

uint64_t sub_23FC766C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v2);
}

uint64_t sub_23FC766CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  *(_QWORD *)(v14 + 240) = a1;
  return a14;
}

uint64_t sub_23FC766E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_23FC766EC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

BOOL sub_23FC766F8(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23FC76720()
{
  uint64_t v0;
  uint64_t v1;

  return v1 + *(int *)(v0 + 20);
}

void sub_23FC7672C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC748E8(a1, v3, a3);
}

void sub_23FC76734(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FC748BC(a1, v3, a3);
}

void sub_23FC7673C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC74908(a1, v3, a3);
}

uint64_t sub_23FC76744()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 - 96))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112));
}

void sub_23FC76750()
{
  uint64_t v0;

}

uint64_t sub_23FC76758()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC76764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FC76770()
{
  return sub_23FD73E98();
}

uint64_t sub_23FC7677C()
{
  return sub_23FD74C0C();
}

uint64_t sub_23FC76788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 104))(v1);
}

uint64_t sub_23FC76794()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23FC767A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FC767A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FC767B4()
{
  return swift_getErrorValue();
}

void sub_23FC767BC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FC5806C(v2, a2);
}

id sub_23FC767C4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23FC767CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 872) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC767D4()
{
  return sub_23FD74C0C();
}

void sub_23FC767E0()
{
  JUMPOUT(0x2426797E8);
}

uint64_t sub_23FC767EC()
{
  return swift_checkMetadataState();
}

void sub_23FC767F8()
{
  type metadata accessor for ToolExecution();
}

uint64_t sub_23FC76804()
{
  return sub_23FD71CD8();
}

uint64_t sub_23FC7680C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_23FC76818()
{
  return sub_23FD73C28();
}

uint64_t sub_23FC76820()
{
  return sub_23FD71B94();
}

uint64_t sub_23FC76828()
{
  return type metadata accessor for RetrievedValue(0);
}

uint64_t sub_23FC76830()
{
  return sub_23FD71C90();
}

uint64_t sub_23FC76838()
{
  return sub_23FD741BC();
}

uint64_t sub_23FC76840()
{
  return sub_23FD73730();
}

uint64_t sub_23FC76848()
{
  return 0;
}

uint64_t sub_23FC76854()
{
  return sub_23FD75038();
}

void sub_23FC76860(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC748E8(a1, v3, a3);
}

_QWORD *sub_23FC76868@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_23FC76874()
{
  return sub_23FD73E80();
}

uint64_t sub_23FC76880()
{
  return sub_23FD75044();
}

void sub_23FC7688C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC748E8(a1, v3, a3);
}

uint64_t sub_23FC76894()
{
  return swift_task_alloc();
}

uint64_t sub_23FC7689C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FC768A8()
{
  return sub_23FD72BE4();
}

void sub_23FC768B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FC584B0(v2, a2);
}

uint64_t sub_23FC768B8()
{
  return sub_23FD73328();
}

uint64_t sub_23FC768C4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FC768D0()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
}

void sub_23FC76908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;

  sub_23FC061F0();
  v21 = v1;
  v3 = v2;
  v5 = v4;
  v6 = sub_23FD74120();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FBFF180();
  v11 = v10 - v9;
  v12 = sub_23FBFF104();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_23FBFF180();
  v17 = v16 - v15;
  type metadata accessor for SessionID(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FC061C0();
  sub_23FBFEF40(v5, v0, v20);
  sub_23FC76248(v17, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, v3, v6);
  sub_23FC60768(v21, (uint64_t)&v22);
  type metadata accessor for DummyPlanner();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_23FC76A6C();
  sub_23FC060D4();
}

void sub_23FC76A38(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_23FC76908();
  *a1 = v2;
}

void sub_23FC76A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  sub_23FC061F0();
  v28 = v3;
  v29 = v2;
  v5 = v4;
  v24 = v4;
  v25 = v6;
  v26 = v7;
  v8 = sub_23FD72F14();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFF180();
  v11 = sub_23FD74120();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  sub_23FC061C0();
  v14 = sub_23FD72CB0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  sub_23FBFF180();
  v19 = v18 - v17;
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = v25;
  *(_QWORD *)(v0 + 120) = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v5, v11);
  MEMORY[0x242676A58](v8, MEMORY[0x24BE547F8]);
  sub_23FD72C98();
  sub_23FC06160(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime12DummyPlanner_interpreter, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
  v27 = *(_OWORD *)(v28 + 24);
  v20 = *(_QWORD *)(v28 + 24);
  v21 = sub_23FBFDE40((_QWORD *)v28, v20);
  *(_OWORD *)&v30[3] = v27;
  v22 = sub_23FBFDDEC(v30);
  sub_23FC06160((uint64_t)v22, (uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16));
  sub_23FC10454(v24, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  v23 = sub_23FBFF104();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v29, v23);
  sub_23FBFDE28((__int128 *)v30, v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime12DummyPlanner_instrumentationSender);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v28);
  sub_23FC060D4();
}

uint64_t sub_23FC76C14(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_23FD72BF0();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EDA0);
  v2[10] = sub_23FC5C13C();
  v2[11] = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EDA8);
  v2[12] = sub_23FC0901C();
  sub_23FD71C84();
  v2[13] = sub_23FC0901C();
  v4 = sub_23FD73A0C();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5D960);
  v2[17] = sub_23FC0901C();
  v5 = sub_23FD71BB8();
  v2[18] = v5;
  v2[19] = *(_QWORD *)(v5 - 8);
  v2[20] = sub_23FC0901C();
  v6 = sub_23FD73514();
  v2[21] = v6;
  v2[22] = *(_QWORD *)(v6 - 8);
  v2[23] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EAE8);
  v2[24] = sub_23FC0901C();
  v7 = sub_23FD71C6C();
  v2[25] = v7;
  v2[26] = *(_QWORD *)(v7 - 8);
  v2[27] = sub_23FC0901C();
  sub_23FD71690();
  v2[28] = sub_23FC0901C();
  v8 = sub_23FD73070();
  v2[29] = v8;
  v2[30] = *(_QWORD *)(v8 - 8);
  v2[31] = sub_23FC5C13C();
  v2[32] = sub_23FC5C588();
  sub_23FBFD684(qword_254346A10);
  v2[33] = sub_23FC5C13C();
  v2[34] = sub_23FC5C588();
  v9 = sub_23FD716FC();
  v2[35] = v9;
  v2[36] = *(_QWORD *)(v9 - 8);
  v2[37] = sub_23FC0901C();
  v10 = sub_23FD735E0();
  v2[38] = v10;
  v2[39] = *(_QWORD *)(v10 - 8);
  v2[40] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EDB0);
  v2[41] = sub_23FC0901C();
  v11 = sub_23FBFF104();
  v2[42] = v11;
  v2[43] = *(_QWORD *)(v11 - 8);
  v2[44] = sub_23FC5C13C();
  v2[45] = sub_23FC5C588();
  v12 = sub_23FD72CF8();
  v2[46] = v12;
  v2[47] = *(_QWORD *)(v12 - 8);
  v2[48] = sub_23FC5C13C();
  v2[49] = sub_23FC5C588();
  v13 = sub_23FD733C4();
  v2[50] = v13;
  v2[51] = *(_QWORD *)(v13 - 8);
  v2[52] = sub_23FC0901C();
  v14 = sub_23FD733AC();
  v2[53] = v14;
  v2[54] = *(_QWORD *)(v14 - 8);
  v2[55] = sub_23FC0901C();
  v15 = sub_23FD73424();
  v2[56] = v15;
  v2[57] = *(_QWORD *)(v15 - 8);
  v2[58] = sub_23FC0901C();
  v16 = sub_23FD73D0C();
  v2[59] = v16;
  v2[60] = *(_QWORD *)(v16 - 8);
  v2[61] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EDB8);
  v2[62] = sub_23FC5C13C();
  v2[63] = sub_23FC5C588();
  v17 = sub_23FD73040();
  v2[64] = v17;
  v2[65] = *(_QWORD *)(v17 - 8);
  v2[66] = sub_23FC0901C();
  v18 = sub_23FD73F40();
  v2[67] = v18;
  v2[68] = *(_QWORD *)(v18 - 8);
  v2[69] = sub_23FC0901C();
  v19 = sub_23FD73F64();
  v2[70] = v19;
  v2[71] = *(_QWORD *)(v19 - 8);
  v2[72] = sub_23FC5C13C();
  v2[73] = sub_23FC5C588();
  v2[74] = sub_23FC5C588();
  v20 = sub_23FD74210();
  v2[75] = v20;
  v2[76] = *(_QWORD *)(v20 - 8);
  v2[77] = sub_23FC0901C();
  v21 = sub_23FD7409C();
  v2[78] = v21;
  v2[79] = *(_QWORD *)(v21 - 8);
  v2[80] = sub_23FC5C13C();
  v2[81] = sub_23FC5C588();
  sub_23FBFD684((uint64_t *)&unk_256F61700);
  v2[82] = sub_23FC0901C();
  v22 = sub_23FD73E08();
  v2[83] = v22;
  v2[84] = *(_QWORD *)(v22 - 8);
  v2[85] = sub_23FC5C13C();
  v2[86] = sub_23FC5C588();
  v23 = sub_23FD740CC();
  v2[87] = v23;
  v2[88] = *(_QWORD *)(v23 - 8);
  v2[89] = sub_23FC5C13C();
  v2[90] = sub_23FC5C588();
  v24 = sub_23FD73754();
  v2[91] = v24;
  v2[92] = *(_QWORD *)(v24 - 8);
  v2[93] = sub_23FC0901C();
  v25 = sub_23FD722E4();
  v2[94] = v25;
  v2[95] = *(_QWORD *)(v25 - 8);
  v2[96] = sub_23FC5C13C();
  v2[97] = sub_23FC5C588();
  return sub_23FC5A63C();
}

uint64_t sub_23FC7700C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 *v53;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __n128 *v102;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  _BOOL4 v125;
  uint8_t *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199[3];

  sub_23FD73C88();
  sub_23FD73D84();
  sub_23FD7373C();
  sub_23FD73748();
  v1 = v0[90];
  v2 = v0[86];
  v3 = v0[84];
  v4 = v0[83];
  v5 = v0[82];
  sub_23FD73D6C();
  v6 = sub_23FD73DE4();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v2, v4);
  sub_23FCA1440(v6, v5);
  sub_23FC1002C();
  sub_23FC80398(v1);
  v10 = v7;
  v11 = v0[81];
  v12 = v0[79];
  v13 = v0[78];
  sub_23FBFEF74(v0[82], (uint64_t *)&unk_256F61700);
  sub_23FD740A8();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 88))(v11, v13);
  if (v14 == *MEMORY[0x24BE56C88])
  {
    v192 = v0[97];
    sub_23FC7A524();
    v171 = v15;
    v144 = v0[88];
    v182 = v0[87];
    v16 = v0[81];
    v158 = v0[80];
    sub_23FC7A73C();
    v153 = v17;
    v18 = v0[77];
    v19 = v0[76];
    v164 = v0[75];
    v139 = v0[74];
    v146 = v0[71];
    v148 = v0[70];
    v20 = v0[69];
    v21 = v0[68];
    v22 = v0[67];
    sub_23FC7597C(v17);
    sub_23FC76248(v18, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32));
    sub_23FD73370();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v20, *MEMORY[0x24BE569E0], v22);
    sub_23FC5C20C();
    sub_23FC7A68C();
    sub_23FC7A630();
    sub_23FD73F4C();
    sub_23FBFD684(&qword_256F5EDD0);
    v23 = v144;
    v24 = (__n128 *)sub_23FC7A4A8();
    sub_23FC7A5F0(v24, (__n128)xmmword_23FD769D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16))(v158, v139, v148);
    sub_23FC5A8C8(v158, *MEMORY[0x24BE56AC8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 104));
    v25 = v171;
    sub_23FD74018();
    sub_23FC10454(v158, *(uint64_t (**)(uint64_t, uint64_t))(v153 + 8));
    sub_23FC5B3B0(v139, *(uint64_t (**)(uint64_t, uint64_t))(v146 + 8));
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v164);
LABEL_3:
    sub_23FC7A59C();
    sub_23FC7A708();
    v27 = v192;
LABEL_4:
    v26(v27, v187);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v182);
    goto LABEL_14;
  }
  v28 = v14;
  if (v14 == *MEMORY[0x24BE56AD0])
  {
    sub_23FC7A73C();
    v29 = v0[65];
    v30 = v0[63];
    sub_23FC7597C(v31);
    v32 = sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
    v33 = MEMORY[0x242676DDC](v32);
    sub_23FD4BDD4(v33, v30);
    sub_23FC1002C();
    v34 = sub_23FD739D0();
    v35 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v30, 1, v34);
    v36 = v0[63];
    if (v35 == 1)
    {
      sub_23FBFEF74(v0[63], &qword_256F5EDB8);
    }
    else
    {
      sub_23FD73370();
      sub_23FC7A6FC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8));
    }
    sub_23FC7A4BC();
    v159 = v50;
    v51 = v0[88];
    sub_23FC7A6CC();
    v52 = v0[73];
    v149 = v0[71];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[68] + 104))(v0[69], *MEMORY[0x24BE569E0], v0[67]);
    sub_23FC5C20C();
    sub_23FC7A68C();
    sub_23FC7A630();
    sub_23FD73F4C();
    sub_23FBFD684(&qword_256F5EDD0);
    v53 = (__n128 *)sub_23FC7A4A8();
    sub_23FC7A5F0(v53, (__n128)xmmword_23FD769D0);
    sub_23FC1046C(v1, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 16));
    sub_23FC092BC(v1, *MEMORY[0x24BE56AC8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 104));
    sub_23FD74018();
    sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    sub_23FBFF204(v52, *(uint64_t (**)(uint64_t, uint64_t))(v149 + 8));
    sub_23FC7A5C4();
    sub_23FC7A59C();
    sub_23FC7A58C();
    (*(void (**)(uint64_t))(v51 + 8))(v159);
    goto LABEL_14;
  }
  if (v14 != *MEMORY[0x24BE56C70])
  {
    if (v14 != *MEMORY[0x24BE56AC8])
    {
      if (v14 == *MEMORY[0x24BE56AF0])
      {
        v66 = v0[85];
        v67 = v0[83];
        v68 = v0[41];
        sub_23FC7A568();
        sub_23FD73D6C();
        sub_23FD73DE4();
        v10(v66, v67);
        sub_23FC78D40(v68);
        sub_23FC1002C();
        v69 = sub_23FC7A6E4(v68);
        sub_23FBFEF74(v68, &qword_256F5EDB0);
        if (v69 == 1)
        {
          v70 = v0[93];
          v71 = v0[92];
          v72 = v0[90];
          v73 = v0[88];
          v184 = v0[87];
          v196 = v0[81];
          v74 = v0[80];
          v75 = v0[79];
          sub_23FBFD684(&qword_256F5EDD0);
          *(_OWORD *)(sub_23FC7A5AC() + 16) = xmmword_23FD769D0;
          sub_23FC5A8C8(v74, *MEMORY[0x24BE56C78], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 104));
          sub_23FD74018();
          sub_23FC7A6C4(v74);
          sub_23FC5C178(v70, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
          sub_23FC7A58C();
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v184);
          sub_23FC7A6C4(v196);
          goto LABEL_14;
        }
        goto LABEL_17;
      }
      if (v14 != *MEMORY[0x24BE56BC0])
      {
        if (v14 == *MEMORY[0x24BE56B20])
        {
          v86 = v0[81];
          v87 = v0[79];
          v88 = v0[39];
          v89 = v0[40];
          v90 = v0[38];
          v91 = v0[31];
          v92 = v0[32];
          v189 = v0[25];
          v194 = v0[42];
          v185 = v0[24];
          sub_23FC7A568();
          sub_23FBFF204(v86, *(uint64_t (**)(uint64_t, uint64_t))(v87 + 96));
          v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v89, v86, v90);
          MEMORY[0x242677388](v93);
          sub_23FC7A680();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v94, v95, v96, v194);
          sub_23FD735B0();
          sub_23FD735C8();
          sub_23FD735BC();
          sub_23FD73058();
          sub_23FC7A6C4(v92);
          sub_23FD735BC();
          sub_23FD73064();
          sub_23FC7A6C4(v91);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v185, 1, v189) == 1)
          {
            v97 = v0[24];
            sub_23FD71C60();
            sub_23FBFEF74(v97, &qword_256F5EAE8);
          }
          else
          {
            (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[26] + 32))(v0[27], v0[24], v0[25]);
          }
          v197 = v0[97];
          v187 = v0[94];
          v174 = v0[91];
          v175 = v0[93];
          v25 = v0[90];
          v23 = v0[88];
          v182 = v0[87];
          v117 = v0[80];
          v118 = v0[79];
          v119 = v0[78];
          v167 = v0[40];
          v170 = v0[92];
          v157 = v0[39];
          v120 = v0[37];
          v163 = v0[38];
          v121 = v0[36];
          sub_23FD716E4();
          sub_23FBFD684(&qword_256F5EDD0);
          *(_OWORD *)(sub_23FC7A5AC() + 16) = xmmword_23FD769D0;
          sub_23FC76248(v117, v120, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 16));
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v118 + 104))(v117, *MEMORY[0x24BE56C30], v119);
          sub_23FD74018();
          sub_23FC15950(v117, *(uint64_t (**)(uint64_t, uint64_t))(v118 + 8));
          sub_23FC5C178(v120, *(uint64_t (**)(uint64_t, uint64_t))(v121 + 8));
          (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v167, v163);
          (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v175, v174);
          sub_23FC7A708();
          v27 = v197;
          goto LABEL_4;
        }
        if (v14 != *MEMORY[0x24BE56B48] && v14 != *MEMORY[0x24BE56C58])
        {
          v104 = *MEMORY[0x24BE56B98];
          sub_23FC7A568();
          if (v28 != v104)
          {
            v122 = v0[88];
            _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
            sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 16));
            v123 = sub_23FD72BE4();
            v124 = sub_23FD74F6C();
            v125 = os_log_type_enabled(v123, v124);
            v186 = (void (*)(uint64_t, uint64_t))v0[88];
            if (v125)
            {
              v126 = (uint8_t *)swift_slowAlloc();
              v199[0] = swift_slowAlloc();
              *(_DWORD *)v126 = 136315138;
              sub_23FC79370();
              v127 = sub_23FD75344();
              v0[2] = sub_23FC9DC40(v127, v128, v199);
              sub_23FD75044();
              swift_bridgeObjectRelease();
              sub_23FC7A600();
              _os_log_impl(&dword_23FBF8000, v123, v124, "DummyPlanner does not support handling event: %s", v126, 0xCu);
              swift_arrayDestroy();
              sub_23FBFEFA0();
            }
            sub_23FC7A600();

            sub_23FC763E0();
            v129 = v0[95];
            v130 = v0[93];
            v131 = v0[92];
            v132 = v0[90];
            v133 = v0[87];
            v198 = v0[81];
            v191 = v0[97];
            v195 = v0[78];
            sub_23FC78F94();
            swift_allocError();
            swift_willThrow();
            sub_23FC5B3B0(v130, *(uint64_t (**)(uint64_t, uint64_t))(v131 + 8));
            sub_23FBFF204(v191, *(uint64_t (**)(uint64_t, uint64_t))(v129 + 8));
            v186(v132, v133);
            sub_23FC7A708();
            v8(v198, v195);
            swift_task_dealloc();
            sub_23FC5B2F4();
            sub_23FC5B980();
            sub_23FC5BCA0();
            sub_23FC090D0();
            sub_23FC5AC3C();
            sub_23FC5AB04();
            sub_23FC5A574();
            sub_23FC090C0();
            sub_23FC5B2D4();
            sub_23FC5D050();
            sub_23FC5D048();
            sub_23FC5D040();
            sub_23FC5C988();
            sub_23FC5C440();
            sub_23FC5C438();
            sub_23FC5C430();
            sub_23FC5C428();
            sub_23FC5C420();
            sub_23FC5BFE8();
            sub_23FC5BFE0();
            sub_23FC5C980();
            sub_23FC5D834();
            sub_23FC5E0B8();
            sub_23FC5E0B0();
            sub_23FC5E0A8();
            sub_23FC5E0A0();
            sub_23FC5E098();
            sub_23FC5E090();
            sub_23FC5D82C();
            sub_23FC5D824();
            sub_23FC5D81C();
            sub_23FC5D814();
            swift_task_dealloc();
            swift_task_dealloc();
            sub_23FC5BFB8();
            sub_23FC5BFB0();
            sub_23FC5C06C();
            sub_23FC5BFA8();
            sub_23FC5BFA0();
            sub_23FC5BFF0();
            sub_23FC5D914();
            sub_23FC5D7D8();
            sub_23FC5D7D0();
            sub_23FC5EC14();
            sub_23FC7A570();
            __asm { BR              X0 }
          }
          sub_23FC7A648();
          v181 = v105;
          v177 = v0[92];
          v179 = v0[91];
          v145 = v0[90];
          v152 = v0[88];
          v190 = v0[87];
          v106 = v0[81];
          v169 = v0[80];
          v155 = v0[79];
          v108 = v0[22];
          v107 = v0[23];
          v173 = v0[21];
          v143 = v0[20];
          v109 = v0[17];
          v162 = v0[19];
          v166 = v0[18];
          v110 = v0[16];
          v136 = v0[15];
          v137 = v0[14];
          v111 = v0[12];
          v112 = v0[10];
          v141 = v0[11];
          (*(void (**)(uint64_t))(v155 + 96))(v106);
          sub_23FC1046C(v107, v106, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 32));
          sub_23FD734F0();
          sub_23FD734D8();
          v113 = sub_23FD7157C();
          sub_23FC103A0(v109, 0, v114, v113);
          sub_23FD734FC();
          sub_23FD73508();
          sub_23FD739F4();
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v110, v137);
          sub_23FD71B10();
          sub_23FC5BD28(v141);
          sub_23FC5BD28(v112);
          sub_23FD71B04();
          v115 = sub_23FD71B1C();
          sub_23FC103A0(v111, 0, v116, v115);
          sub_23FD73FF4();
          sub_23FD71BA0();
          sub_23FBFD684(&qword_256F5EDD0);
          *(_OWORD *)(sub_23FC7A5AC() + 16) = xmmword_23FD769D0;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 16))(v169, v143, v166);
          sub_23FC092BC(v169, *MEMORY[0x24BE56C40], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v155 + 104));
          sub_23FD74018();
          sub_23FC5B3B0(v169, *(uint64_t (**)(uint64_t, uint64_t))(v155 + 8));
          sub_23FC15950(v143, *(uint64_t (**)(uint64_t, uint64_t))(v162 + 8));
          (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v173);
          (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v181, v179);
          sub_23FC7A670();
          (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v145, v190);
LABEL_14:
          swift_task_dealloc();
          sub_23FC5B2D4();
          sub_23FC5B2F4();
          sub_23FC5B980();
          sub_23FC5BCA0();
          sub_23FC5AC3C();
          sub_23FC5AB04();
          sub_23FC5A574();
          sub_23FC090D0();
          sub_23FC090C0();
          sub_23FC5D048();
          sub_23FC5D040();
          sub_23FC5C988();
          sub_23FC5C440();
          sub_23FC5C438();
          sub_23FC5C430();
          sub_23FC5C428();
          sub_23FC5C420();
          sub_23FC5BFE8();
          sub_23FC5BFE0();
          sub_23FC5C980();
          sub_23FC5D834();
          sub_23FC5E0B8();
          sub_23FC5E0B0();
          sub_23FC5E0A8();
          sub_23FC5E0A0();
          sub_23FC5E098();
          sub_23FC5E090();
          sub_23FC5D82C();
          sub_23FC5D824();
          sub_23FC5D81C();
          sub_23FC5D814();
          swift_task_dealloc();
          swift_task_dealloc();
          sub_23FC5BFB8();
          sub_23FC5BFB0();
          sub_23FC5C06C();
          sub_23FC5BFA8();
          sub_23FC5BFA0();
          sub_23FC5BFF0();
          sub_23FC5D914();
          sub_23FC5D7D8();
          sub_23FC5D7D0();
          sub_23FC5EC14();
          sub_23FC5DC9C();
          sub_23FC7A570();
          __asm { BR              X1 }
        }
      }
    }
    sub_23FC7A568();
LABEL_17:
    sub_23FC7A73C();
    sub_23FC090C8(v55);
    sub_23FC7A714();
    v56 = (_QWORD *)swift_task_alloc();
    v0[100] = v56;
    *v56 = v0;
    v56[1] = sub_23FC788E4;
LABEL_18:
    sub_23FC7A570();
    return sub_23FD72C8C();
  }
  sub_23FC7A73C();
  v37 = v0[60];
  v38 = v0[58];
  v39 = v0[56];
  v40 = v0[57];
  sub_23FC7597C(v41);
  sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 32));
  sub_23FD737F0();
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v38, v39);
  if (v42 == *MEMORY[0x24BE553A8])
  {
    v43 = v0[95];
    v44 = v0[93];
    v45 = v0[92];
    v188 = v0[90];
    v193 = v0[97];
    v46 = v0[88];
    v178 = v0[87];
    v180 = v0[94];
    v47 = v0[60];
    v48 = v0[61];
    v183 = v0[58];
    v49 = v0[57];
    v176 = v0[56];
    sub_23FC7A568();
    sub_23FC5C178(v48, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    sub_23FC10454(v44, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v193, v180);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v188, v178);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v183, v176);
    goto LABEL_14;
  }
  if (v42 == *MEMORY[0x24BE553B0])
  {
    v192 = v0[97];
    sub_23FC7A524();
    v160 = v58;
    v138 = v0[88];
    v182 = v0[87];
    v59 = v0[80];
    v147 = v0[79];
    v140 = v0[71];
    v60 = v0[69];
    v61 = v0[68];
    v134 = v0[67];
    v135 = v0[74];
    v165 = v0[60];
    v62 = v0[58];
    v168 = v0[59];
    v172 = v0[61];
    v63 = v0[54];
    v64 = v0[55];
    v150 = v0[53];
    sub_23FC7597C(v0[57]);
    sub_23FC1046C(v64, v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 32));
    sub_23FD73370();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v60, *MEMORY[0x24BE569E0], v134);
    sub_23FC5C20C();
    sub_23FC7A68C();
    sub_23FC7A54C();
    sub_23FBFD684(&qword_256F5EDD0);
    v23 = v138;
    v65 = (__n128 *)sub_23FC7A4A8();
    sub_23FC7A5F0(v65, (__n128)xmmword_23FD769D0);
    sub_23FC06160(v59, v135, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 16));
    sub_23FC092BC(v59, *MEMORY[0x24BE56AC8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 104));
    v25 = v160;
    sub_23FD74018();
    sub_23FC5B3B0(v59, *(uint64_t (**)(uint64_t, uint64_t))(v147 + 8));
    sub_23FC7A6FC(*(uint64_t (**)(uint64_t, uint64_t))(v140 + 8));
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v150);
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v172, v168);
    goto LABEL_3;
  }
  if (v42 == *MEMORY[0x24BE553B8])
  {
    v76 = v0[62];
    v77 = v0[58];
    v79 = v0[51];
    v78 = v0[52];
    v80 = v0[50];
    sub_23FC7597C(v0[57]);
    v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 32))(v78, v77, v80);
    v82 = MEMORY[0x24267716C](v81);
    sub_23FD4BDD4(v82, v76);
    sub_23FC1002C();
    v83 = sub_23FD739D0();
    v84 = sub_23FC7A6F0(v76);
    v85 = v0[62];
    if (v84 == 1)
    {
      sub_23FBFEF74(v0[62], &qword_256F5EDB8);
    }
    else
    {
      sub_23FD73370();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v85, v83);
    }
    sub_23FC7A4BC();
    v154 = v99;
    v100 = v0[88];
    sub_23FC7A6CC();
    v101 = v0[72];
    v142 = v0[71];
    v161 = v0[52];
    v151 = v0[51];
    v156 = v0[50];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[68] + 104))(v0[69], *MEMORY[0x24BE569E0], v0[67]);
    sub_23FC5C20C();
    sub_23FC7A68C();
    sub_23FC7A54C();
    sub_23FBFD684(&qword_256F5EDD0);
    v102 = (__n128 *)sub_23FC7A4A8();
    sub_23FC7A5F0(v102, (__n128)xmmword_23FD769D0);
    sub_23FC1046C(v40, v101, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 16));
    sub_23FC5A8C8(v40, *MEMORY[0x24BE56AC8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 104));
    sub_23FD74018();
    sub_23FC10454(v40, *(uint64_t (**)(uint64_t, uint64_t))(v83 + 8));
    sub_23FBFF204(v101, *(uint64_t (**)(uint64_t, uint64_t))(v142 + 8));
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v161, v156);
    sub_23FC7A5C4();
    sub_23FC7A59C();
    sub_23FC7A58C();
    (*(void (**)(uint64_t))(v100 + 8))(v154);
    goto LABEL_14;
  }
  if (v42 == *MEMORY[0x24BE55318])
  {
    sub_23FC7A568();
    sub_23FC7A714();
    v98 = (_QWORD *)swift_task_alloc();
    v0[98] = v98;
    *v98 = v0;
    v98[1] = sub_23FC786B0;
    goto LABEL_18;
  }
  sub_23FC7A570();
  return sub_23FD75374();
}

uint64_t sub_23FC786B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 792) = v0;
  swift_task_dealloc();
  sub_23FC090C8(*(_QWORD *)(v2 + 344));
  return sub_23FC5A63C();
}

uint64_t sub_23FC7871C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FC7A5D4();
  v13 = *(_QWORD *)(v0 + 752);
  v14 = *(_QWORD *)(v0 + 776);
  v1 = *(_QWORD *)(v0 + 720);
  v10 = *(_QWORD *)(v0 + 704);
  v11 = *(_QWORD *)(v0 + 760);
  v12 = *(_QWORD *)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 376);
  v6 = sub_23FD72CEC();
  sub_23FC5C178(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v7 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v1;
  sub_23FC95400((uint64_t)sub_23FC7A28C, v7, v6, v0 + 32);
  v15 = v8;
  sub_23FC15950(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC7A5C4();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v12);
  sub_23FC15A24();
  sub_23FC090D0();
  sub_23FC763E0();
  sub_23FC7A3A8();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  swift_task_dealloc();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  return sub_23FC7A508(v15, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC788E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 808) = v0;
  swift_task_dealloc();
  sub_23FC090C8(*(_QWORD *)(v2 + 344));
  return sub_23FC5A63C();
}

uint64_t sub_23FC78950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FC7A5D4();
  sub_23FC7A648();
  v11 = v1;
  v2 = *(_QWORD *)(v0 + 736);
  v3 = *(_QWORD *)(v0 + 720);
  v12 = *(_QWORD *)(v0 + 696);
  v5 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v6 = sub_23FD72CEC();
  sub_23FC10454(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v7 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v3;
  sub_23FC95400((uint64_t)sub_23FC793B0, v7, v6, v0 + 24);
  v13 = v8;
  sub_23FC15950(v11, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC7A670();
  sub_23FC7A708();
  v9(v3, v12);
  swift_bridgeObjectRelease();
  sub_23FC090D0();
  sub_23FC7A3A8();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC090D0();
  swift_task_dealloc();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  return sub_23FC7A508(v13, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC78AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23FC7A5D4();
  v1 = *(_QWORD *)(v0 + 760);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v9 = *(_QWORD *)(v0 + 720);
  v10 = *(_QWORD *)(v0 + 776);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 696);
  v8 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 456);
  sub_23FC090C8(*(_QWORD *)(v0 + 480));
  sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FBFF204(v10, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v5);
  sub_23FC5C178(v8, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_23FC7A2A4(*(_QWORD *)(v0 + 792));
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  swift_task_dealloc();
  return sub_23FC7A4EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC78C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC7A5D4();
  v1 = *(_QWORD *)(v0 + 776);
  v2 = *(_QWORD *)(v0 + 760);
  sub_23FC7A720();
  v3 = *(_QWORD *)(v0 + 720);
  v4 = *(_QWORD *)(v0 + 704);
  sub_23FC090C8(v5);
  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC10454(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FC7A2A4(*(_QWORD *)(v0 + 808));
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5D82C();
  sub_23FC5D824();
  sub_23FC5D81C();
  sub_23FC5D814();
  sub_23FC5BFB8();
  sub_23FC5BFB0();
  sub_23FC5C06C();
  sub_23FC5BFA8();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  swift_task_dealloc();
  return sub_23FC7A4EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC78D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_23FBFD684(&qword_256F5EB60);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC79050();
  v6 = sub_23FBFD684(&qword_256F5EB70);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_23FBFEF74((uint64_t)v5, &qword_256F5EB60);
    v7 = sub_23FD73F64();
    v8 = a1;
    v9 = 1;
  }
  else
  {
    v10 = &v5[*(int *)(v6 + 48)];
    v11 = sub_23FD73F64();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
    v8 = a1;
    v9 = 0;
    v7 = v11;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v8, v9, 1, v7);
}

void sub_23FC78E44()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = sub_23FD72CB0();
  sub_23FBFF0E4(v1);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime12DummyPlanner_instrumentationSender);
  swift_defaultActor_destroy();
  sub_23FBFF0A0();
}

uint64_t sub_23FC78E94()
{
  sub_23FC78E44();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23FC78EAC()
{
  return type metadata accessor for DummyPlanner();
}

uint64_t type metadata accessor for DummyPlanner()
{
  uint64_t result;

  result = qword_256F5ECF0;
  if (!qword_256F5ECF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FC78EEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD72CB0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23FC78F74()
{
  sub_23FC7A748();
}

void sub_23FC78F7C()
{
  sub_23FC78F74();
}

unint64_t sub_23FC78F94()
{
  unint64_t result;

  result = qword_256F5EDC0;
  if (!qword_256F5EDC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD772F4, &unk_25100F2A0);
    atomic_store(result, (unint64_t *)&qword_256F5EDC0);
  }
  return result;
}

uint64_t sub_23FC78FD0()
{
  sub_23FD7544C();
  sub_23FD75458();
  return sub_23FD75470();
}

uint64_t sub_23FC79014()
{
  sub_23FD7544C();
  sub_23FD75458();
  return sub_23FD75470();
}

void sub_23FC79050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (**v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_23FC061F0();
  v65 = v0;
  v66 = v1;
  v3 = v2;
  v58 = v4;
  v63 = sub_23FD7409C();
  v5 = *(uint64_t (***)(uint64_t, uint64_t))(v63 - 8);
  MEMORY[0x24BDAC7A8](v63, v6);
  sub_23FBFEFE0();
  v60 = v7;
  v57 = sub_23FD73F64();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v8);
  sub_23FBFEFE0();
  v56 = v9;
  v10 = sub_23FD740CC();
  v11 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  v62 = v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_23FBFF180();
  v15 = v14 - v13;
  sub_23FBFD684(&qword_256F5EDD8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC100D4();
  v20 = v18 - v19;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (uint64_t *)((char *)&v55 - v23);
  v25 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_23FC793D8(0, v25, v3);
  v27 = v26;
  v28 = 0;
  v29 = *(_QWORD *)(v26 + 16);
  v59 = *MEMORY[0x24BE56AC8];
  while (1)
  {
    if (v28 == v29)
    {
      v30 = sub_23FC7A734();
      sub_23FC103A0(v20, 1, v31, v30);
      v32 = v29;
      goto LABEL_6;
    }
    if (v28 >= *(_QWORD *)(v27 + 16))
      break;
    v33 = sub_23FC7A734();
    sub_23FC79580(v27+ ((*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72) * v28, v20);
    v32 = v28 + 1;
    sub_23FC7A680();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v34, v35, v36, v33);
LABEL_6:
    sub_23FBFEEEC(v20, (uint64_t)v24, &qword_256F5EDD8);
    v37 = sub_23FC7A734();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v24, 1, v37) == 1)
    {
      swift_bridgeObjectRelease();
      v45 = sub_23FBFD684(&qword_256F5EB70);
      v46 = (uint64_t)v58;
      v47 = 1;
      v48 = 1;
LABEL_11:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v46, v47, v48, v45);
      return;
    }
    v64 = v32;
    v38 = v29;
    v39 = v27;
    v40 = (char *)v24 + *(int *)(v37 + 48);
    v41 = *v24;
    v42 = v62;
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v15, v40, v61);
    v43 = v60;
    sub_23FD740A8();
    sub_23FC15950(v15, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
    v44 = v5[11](v43, v63);
    if (v44 == v59)
    {
      sub_23FC5A648();
      sub_23FC15950(v43, v5[12]);
      v49 = v56;
      v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32);
      v51 = v43;
      v52 = v57;
      v50(v56, v51, v57);
      v53 = sub_23FBFD684(&qword_256F5EB70);
      v54 = (char *)v58 + *(int *)(v53 + 48);
      *v58 = v41;
      v50((uint64_t)v54, v49, v52);
      sub_23FC7A680();
      v45 = v53;
      goto LABEL_11;
    }
    sub_23FC15950(v43, v5[1]);
    v27 = v39;
    v29 = v38;
    v28 = v64;
  }
  __break(1u);
}

unint64_t sub_23FC79370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5EDC8;
  if (!qword_256F5EDC8)
  {
    v1 = sub_23FD740CC();
    result = MEMORY[0x2426797E8](MEMORY[0x24BE56CF0], v1);
    atomic_store(result, (unint64_t *)&qword_256F5EDC8);
  }
  return result;
}

uint64_t sub_23FC793B0()
{
  return sub_23FD74018();
}

void sub_23FC793D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23FBFD684(&qword_256F5EDE0);
  v22 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v23 = (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v22 - v11;
  sub_23FC79CD0(a1, a2, a3);
  v14 = v13;
  v15 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  if (v15 < 2)
    return;
  v16 = 0;
  for (i = v15 - 1; ; --i)
  {
    if (v16 == i)
      goto LABEL_11;
    v18 = *(_QWORD *)(v14 + 16);
    if (v16 >= v18)
      break;
    v19 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v20 = *(_QWORD *)(v22 + 72);
    sub_23FC79580(v14 + v19 + v20 * v16, (uint64_t)v12);
    if (i >= v18)
      goto LABEL_14;
    sub_23FC79580(v14 + v19 + v20 * i, v23);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FCCB858();
      v14 = v21;
    }
    if (v16 >= *(_QWORD *)(v14 + 16))
      goto LABEL_15;
    sub_23FC7A01C(v23, v14 + v19 + v20 * v16);
    if (i >= *(_QWORD *)(v14 + 16))
      goto LABEL_16;
    sub_23FC7A01C((uint64_t)v12, v14 + v19 + v20 * i);
LABEL_11:
    if (v15 >> 1 == ++v16)
      return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t sub_23FC79580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5EDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23FC795C8()
{
  sub_23FC79970();
}

void sub_23FC795E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  size_t v42;
  int64_t v43;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  BOOL v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_23FC061F0();
  v1 = v0;
  sub_23FBFD684(&qword_256F5DDB8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC100D4();
  v6 = v4 - v5;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC7A6AC(v9, v10, v11, v12, v13, v14, v15, v16, v55);
  v17 = sub_23FD72DB8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  sub_23FBFEFE0();
  v62 = v20;
  v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v63 = MEMORY[0x24BEE4AF8] + v22;
  swift_bridgeObjectRetain();
  v23 = 0;
  v24 = 0;
  v65 = 0;
  v25 = 0;
  v26 = v18;
  while (1)
  {
    v27 = v22;
    if (!v24)
      goto LABEL_5;
LABEL_3:
    v28 = *(_QWORD *)(v24 + 16);
    if (v23 == v28)
    {
      sub_23FC7A660(v6);
      sub_23FBFEF74(v6, &qword_256F5DDB8);
      while (1)
      {
LABEL_5:
        v29 = *(_QWORD *)(v1 + 16);
        if (v25 == v29)
        {
          v36 = v64;
          sub_23FC7A660(v64);
          sub_23FC15A24();
          goto LABEL_37;
        }
        if (v25 >= v29)
          break;
        v30 = v25 + 1;
        v31 = *(_QWORD *)(v1 + 8 * v25 + 32);
        swift_bridgeObjectRetain();
        sub_23FC5A648();
        v27 = v22;
        v23 = 0;
        v24 = v31;
        v25 = v30;
        v18 = v26;
        if (v24)
          goto LABEL_3;
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v23 >= v28)
      goto LABEL_43;
    v58 = *(_QWORD *)(v18 + 72);
    v59 = v21;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v6, v24 + v27 + v58 * v23, v17);
    sub_23FC7A680();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v32, v33, v34, v17);
    v35 = v18;
    v36 = v64;
    sub_23FBFEEEC(v6, v64, &qword_256F5DDB8);
    if (sub_23FC7A6E4(v64) == 1)
      break;
    v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
    v57(v62, v64, v17);
    v37 = v65;
    if (v65)
    {
      v38 = v59;
      v18 = v26;
      goto LABEL_34;
    }
    v39 = v59[3];
    if ((uint64_t)((v39 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_46;
    v40 = v39 & 0xFFFFFFFFFFFFFFFELL;
    if (v40 <= 1)
      v41 = 1;
    else
      v41 = v40;
    sub_23FBFD684(&qword_256F5DDD0);
    v66 = v41;
    v60 = (_QWORD *)swift_allocObject();
    v42 = j__malloc_size(v60);
    if (!v58)
      goto LABEL_47;
    v43 = v42 - v22;
    if (v42 - v22 == 0x8000000000000000 && v58 == -1)
      goto LABEL_48;
    v18 = v26;
    v45 = v43 / v58;
    v60[2] = v66;
    v60[3] = 2 * (v43 / v58);
    v46 = (char *)v60 + v22;
    v47 = v59[3];
    v48 = (v47 >> 1) * v58;
    if (v59[2])
    {
      if (v60 >= v59 && v46 < (char *)v59 + v22 + v48)
      {
        if (v60 != v59)
        {
          sub_23FC7A694();
          swift_arrayInitWithTakeBackToFront();
LABEL_31:
          v48 = v56;
          v46 = (char *)v63;
          v45 = v66;
        }
        v59[2] = 0;
        goto LABEL_33;
      }
      sub_23FC7A694();
      swift_arrayInitWithTakeFrontToBack();
      goto LABEL_31;
    }
LABEL_33:
    v63 = (unint64_t)&v46[v48];
    v37 = (v45 & 0x7FFFFFFFFFFFFFFFLL) - (v47 >> 1);
    swift_release();
    v38 = v60;
LABEL_34:
    v50 = __OFSUB__(v37, 1);
    v51 = v37 - 1;
    if (v50)
      goto LABEL_44;
    v65 = v51;
    ++v23;
    v61 = v38;
    v57(v63, v62, v17);
    v63 += v58;
    v21 = v61;
  }
  sub_23FC15A24();
  v21 = v59;
LABEL_37:
  sub_23FC5A648();
  sub_23FBFEF74(v36, &qword_256F5DDB8);
  v52 = v21[3];
  if (v52 < 2)
    goto LABEL_40;
  v53 = v52 >> 1;
  v50 = __OFSUB__(v53, v65);
  v54 = v53 - v65;
  if (!v50)
  {
    v21[2] = v54;
LABEL_40:
    sub_23FC060D4();
    return;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
}

void sub_23FC79954()
{
  sub_23FC79970();
}

void sub_23FC79970()
{
  uint64_t *v0;
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const void *v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  size_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64[2];
  uint64_t *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  const void *v69;
  uint64_t v70;
  uint64_t (*v71)(_QWORD);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_23FC061F0();
  v65 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_23FBFD684(v3);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC100D4();
  v11 = v9 - v10;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v22 = sub_23FC7A6AC(v14, v15, v16, v17, v18, v19, v20, v21, v64[0]);
  v71 = v2;
  v23 = v2(v22);
  MEMORY[0x24BDAC7A8](v23, v24);
  v70 = (uint64_t)v64 - v25;
  v67 = v26;
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v72 = MEMORY[0x24BEE4AF8] + v28;
  v64[1] = v27 | 7;
  swift_bridgeObjectRetain();
  v30 = 0;
  v31 = 0;
  v74 = 0;
  v32 = 0;
  v33 = v28;
  while (1)
  {
    while (1)
    {
      if (!v31)
        goto LABEL_5;
      v34 = *(_QWORD *)(v31 + 16);
      if (v30 != v34)
        break;
      sub_23FC5E738(v11);
      sub_23FBFEF74(v11, v4);
LABEL_5:
      v35 = *(_QWORD *)(v6 + 16);
      if (v32 == v35)
      {
        v42 = v73;
        sub_23FC5E738(v73);
        sub_23FC1002C();
        goto LABEL_36;
      }
      if (v32 >= v35)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v36 = v32 + 1;
      v37 = *(_QWORD *)(v6 + 8 * v32 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30 = 0;
      v31 = v37;
      v32 = v36;
      v28 = v33;
    }
    if (v30 >= v34)
      goto LABEL_42;
    v66 = v29;
    v68 = *(_QWORD *)(v67 + 72);
    v38 = v71;
    sub_23FBFEF40(v31 + v28 + v68 * v30, v11, v71);
    sub_23FC7A680();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v39, v40, v41, v23);
    v42 = v73;
    sub_23FBFEEEC(v11, v73, v4);
    if (sub_23FC7A6F0(v42) == 1)
      break;
    sub_23FBFEEB0(v42, v70, v38);
    v43 = v74;
    if (v74)
    {
      v44 = v66;
      v28 = v33;
      goto LABEL_33;
    }
    v45 = v66[3];
    if ((uint64_t)((v45 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_45;
    v28 = v33;
    v46 = v45 & 0xFFFFFFFFFFFFFFFELL;
    if (v46 <= 1)
      v47 = 1;
    else
      v47 = v46;
    sub_23FBFD684(v65);
    v69 = (const void *)swift_allocObject();
    v48 = j__malloc_size(v69);
    v49 = v68;
    if (!v68)
      goto LABEL_46;
    v50 = v48 - v33;
    if (v48 - v33 == 0x8000000000000000 && v68 == -1)
      goto LABEL_47;
    v52 = v50 / v68;
    v53 = v69;
    *((_QWORD *)v69 + 2) = v47;
    v53[3] = 2 * (v50 / v49);
    v54 = (unint64_t)v53 + v33;
    v55 = v66[3];
    v56 = (v55 >> 1) * v49;
    if (v66[2])
    {
      if (v53 >= v66 && v54 < (unint64_t)v66 + v33 + v56)
      {
        if (v53 != v66)
        {
          sub_23FC7A618();
          swift_arrayInitWithTakeBackToFront();
LABEL_30:
          v56 = v64[0];
          v54 = v72;
          v52 = v74;
        }
        v66[2] = 0;
        goto LABEL_32;
      }
      sub_23FC7A618();
      swift_arrayInitWithTakeFrontToBack();
      goto LABEL_30;
    }
LABEL_32:
    v72 = v54 + v56;
    v43 = (v52 & 0x7FFFFFFFFFFFFFFFLL) - (v55 >> 1);
    swift_release();
    v44 = v69;
LABEL_33:
    v58 = __OFSUB__(v43, 1);
    v59 = v43 - 1;
    if (v58)
      goto LABEL_43;
    v74 = v59;
    ++v30;
    v60 = v72;
    v69 = v44;
    sub_23FBFEEB0(v70, v72, v71);
    v72 = v60 + v68;
    v29 = v69;
  }
  sub_23FC1002C();
  v29 = v66;
LABEL_36:
  swift_bridgeObjectRelease();
  sub_23FBFEF74(v42, v4);
  v61 = v29[3];
  if (v61 < 2)
  {
LABEL_39:
    sub_23FC060D4();
    return;
  }
  v62 = v61 >> 1;
  v58 = __OFSUB__(v62, v74);
  v63 = v62 - v74;
  if (!v58)
  {
    v29[2] = v63;
    goto LABEL_39;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
}

void sub_23FC79CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  int64_t v38;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v55 = sub_23FBFD684(&qword_256F5D958);
  MEMORY[0x24BDAC7A8](v55, v6);
  v54 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23FBFD684(&qword_256F5EDE0);
  v9 = MEMORY[0x24BDAC7A8](v56, v8);
  v11 = (_QWORD *)((char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)v49 - v13;
  v57 = v15;
  v16 = *(unsigned __int8 *)(v15 + 80);
  swift_bridgeObjectRetain();
  v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v18 = a1 - a2;
  if (a1 != a2)
  {
    if (a2 >= a1)
    {
      v20 = 0;
      v19 = 0;
      v49[1] = v16 | 7;
      v50 = (v16 + 32) & ~v16;
      v21 = MEMORY[0x24BEE4AF8] + v50;
      v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v52 = a1;
      v53 = a3;
      v51 = v18;
      while (v18 + v20)
      {
        v23 = *(_QWORD *)(a3 + 16);
        if (v20 == v23)
        {
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
        if (v20 >= v23)
          goto LABEL_39;
        v24 = a1 + v20;
        v25 = sub_23FD740CC();
        v26 = (uint64_t)v14;
        v27 = *(_QWORD *)(v25 - 8);
        v28 = a3
            + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
            + *(_QWORD *)(v27 + 72) * v20;
        v29 = &v54[*(int *)(v55 + 48)];
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v29, v28, v25);
        v30 = (char *)v11 + *(int *)(v56 + 48);
        *v11 = v24;
        v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
        v14 = (char *)v26;
        v31(v30, v29, v25);
        sub_23FBFEEEC((uint64_t)v11, v26, &qword_256F5EDE0);
        if (v19)
        {
          v17 = v22;
        }
        else
        {
          v32 = v22[3];
          if ((uint64_t)((v32 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_41;
          v33 = v32 & 0xFFFFFFFFFFFFFFFELL;
          if (v33 <= 1)
            v34 = 1;
          else
            v34 = v33;
          sub_23FBFD684(&qword_256F5EDE8);
          v35 = *(_QWORD *)(v57 + 72);
          v36 = v50;
          v17 = (_QWORD *)swift_allocObject();
          v37 = j__malloc_size(v17);
          if (!v35)
            goto LABEL_42;
          v38 = v37 - v36;
          if (v37 - v36 == 0x8000000000000000 && v35 == -1)
            goto LABEL_43;
          v40 = v38 / v35;
          v17[2] = v34;
          v17[3] = 2 * (v38 / v35);
          v41 = (char *)v17 + v36;
          v42 = v22[3];
          v43 = (v42 >> 1) * v35;
          if (v22[2])
          {
            if (v17 < v22 || v41 >= (char *)v22 + v50 + v43)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 != v22)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22[2] = 0;
          }
          v21 = (uint64_t)&v41[v43];
          v19 = (v40 & 0x7FFFFFFFFFFFFFFFLL) - (v42 >> 1);
          swift_release();
        }
        v45 = __OFSUB__(v19--, 1);
        a3 = v53;
        if (v45)
          goto LABEL_40;
        ++v20;
        sub_23FBFEEEC((uint64_t)v14, v21, &qword_256F5EDE0);
        v21 += *(_QWORD *)(v57 + 72);
        v22 = v17;
        v18 = v51;
        a1 = v52;
        if (!(v51 + v20))
          goto LABEL_32;
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  v19 = 0;
LABEL_32:
  swift_bridgeObjectRelease();
  v22 = v17;
LABEL_34:
  v46 = v22[3];
  if (v46 >= 2)
  {
    v47 = v46 >> 1;
    v45 = __OFSUB__(v47, v19);
    v48 = v47 - v19;
    if (!v45)
    {
      v22[2] = v48;
      return;
    }
LABEL_45:
    __break(1u);
  }
}

uint64_t sub_23FC7A01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5EDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC7A064(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FC7A0A4 + 4 * byte_23FD77170[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FC7A0C4 + 4 * byte_23FD77175[v4]))();
}

_BYTE *sub_23FC7A0A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FC7A0C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FC7A0CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FC7A0D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FC7A0DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FC7A0E4(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for DummyPlannerError()
{
  sub_23FC7A748();
}

_QWORD *initializeBufferWithCopyOfBuffer for ClientGroupID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClientGroupID()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for TranscriptEntityQueryingService.Policy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ClientSessionID(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for ClientGroupID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17WaterfallMediatorVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17WaterfallMediatorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DummyPlannerConfiguration()
{
  sub_23FC7A748();
}

_UNKNOWN **sub_23FC7A234()
{
  return &off_25100F200;
}

unint64_t sub_23FC7A244()
{
  unint64_t result;

  result = qword_256F5EE20;
  if (!qword_256F5EE20)
  {
    result = MEMORY[0x2426797E8](&unk_23FD772CC, &unk_25100F2A0);
    atomic_store(result, (unint64_t *)&qword_256F5EE20);
  }
  return result;
}

_UNKNOWN **sub_23FC7A280()
{
  return &off_25100F1E0;
}

uint64_t sub_23FC7A28C()
{
  return sub_23FC793B0();
}

uint64_t sub_23FC7A2A4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[27];
  *(_QWORD *)(v2 - 184) = v1[28];
  *(_QWORD *)(v2 - 176) = v3;
  v4 = v1[23];
  *(_QWORD *)(v2 - 168) = v1[24];
  *(_QWORD *)(v2 - 160) = v4;
  v5 = v1[17];
  *(_QWORD *)(v2 - 152) = v1[20];
  *(_QWORD *)(v2 - 144) = v5;
  v6 = v1[13];
  *(_QWORD *)(v2 - 136) = v1[16];
  *(_QWORD *)(v2 - 128) = v6;
  v7 = v1[11];
  *(_QWORD *)(v2 - 120) = v1[12];
  *(_QWORD *)(v2 - 112) = v7;
  v8 = v1[9];
  *(_QWORD *)(v2 - 104) = v1[10];
  *(_QWORD *)(v2 - 96) = v8;
  return swift_task_dealloc();
}

uint64_t sub_23FC7A3A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[24];
  *(_QWORD *)(v1 - 184) = v0[27];
  *(_QWORD *)(v1 - 176) = v2;
  v3 = v0[20];
  *(_QWORD *)(v1 - 168) = v0[23];
  *(_QWORD *)(v1 - 160) = v3;
  v4 = v0[16];
  *(_QWORD *)(v1 - 152) = v0[17];
  *(_QWORD *)(v1 - 144) = v4;
  v5 = v0[12];
  *(_QWORD *)(v1 - 136) = v0[13];
  *(_QWORD *)(v1 - 128) = v5;
  v6 = v0[10];
  *(_QWORD *)(v1 - 120) = v0[11];
  *(_QWORD *)(v1 - 112) = v6;
  *(_QWORD *)(v1 - 104) = v0[9];
  return swift_task_dealloc();
}

uint64_t sub_23FC7A4A8()
{
  return swift_allocObject();
}

void sub_23FC7A4BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[97];
  v3 = v0[95];
  *(_QWORD *)(v1 - 120) = v0[94];
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 144) = v0[93];
  *(_QWORD *)(v1 - 136) = v3;
  v4 = v0[91];
  *(_QWORD *)(v1 - 160) = v0[92];
  *(_QWORD *)(v1 - 152) = v4;
}

uint64_t sub_23FC7A4EC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC7A508(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_23FC7A524()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[95];
  *(_QWORD *)(v1 - 120) = v0[94];
  *(_QWORD *)(v1 - 144) = v0[93];
  *(_QWORD *)(v1 - 136) = v2;
  v3 = v0[91];
  *(_QWORD *)(v1 - 160) = v0[92];
  *(_QWORD *)(v1 - 152) = v3;
}

uint64_t sub_23FC7A54C()
{
  return sub_23FD73F4C();
}

uint64_t sub_23FC7A568()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC7A58C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 136) + 8))(*(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 120));
}

uint64_t sub_23FC7A59C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 160) + 8))(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 152));
}

uint64_t sub_23FC7A5AC()
{
  return swift_allocObject();
}

uint64_t sub_23FC7A5B4@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_23FC7A5C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 184) + 8))(*(_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 176));
}

__n128 *sub_23FC7A5F0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_23FC7A600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8);
  *(_QWORD *)(v2 - 128) = v3;
  return v3(v0, v1);
}

uint64_t sub_23FC7A618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = v2;
  *(_QWORD *)(v3 - 88) = v1;
  *(_QWORD *)(v3 - 104) = v2;
  *(_QWORD *)(v3 - 176) = v0;
  return result;
}

void sub_23FC7A648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 776);
  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v0 + 752);
  *(_QWORD *)(v1 - 104) = v2;
}

uint64_t sub_23FC7A660(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v1);
}

uint64_t sub_23FC7A670()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 128) + 8))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112));
}

uint64_t sub_23FC7A68C()
{
  return sub_23FD73F58();
}

uint64_t sub_23FC7A694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = v2;
  *(_QWORD *)(v3 - 88) = v1;
  *(_QWORD *)(v3 - 104) = v2;
  *(_QWORD *)(v3 - 160) = v0;
  return result;
}

uint64_t sub_23FC7A6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 96) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_23FC7A6C4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23FC7A6CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v0 + 696);
}

uint64_t sub_23FC7A6E4(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_23FC7A6F0(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_23FC7A6FC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FC7A714()
{
  return _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
}

uint64_t sub_23FC7A720()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 744);
}

uint64_t sub_23FC7A734()
{
  uint64_t *v0;

  return sub_23FBFD684(v0);
}

uint64_t sub_23FC7A750()
{
  char v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FC7E1CC();
  sub_23FBFEE2C(&qword_256F5EBB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE56E78], MEMORY[0x24BE56E98]);
  sub_23FC7E2D4();
  sub_23FC7E2D4();
  if (v5 == v3 && v6 == v4)
    v1 = 1;
  else
    v1 = sub_23FD75380();
  sub_23FC15A24();
  sub_23FC1002C();
  return v1 & 1;
}

uint64_t RetrievedValue.init(value:source:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC10290();
  sub_23FC0A050();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a3, a1);
  v7 = a3 + *(int *)(type metadata accessor for RetrievedValue(0) + 20);
  sub_23FC7E1CC();
  sub_23FC0A050();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, a2);
}

uint64_t type metadata accessor for RetrievedValue(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5EF00);
}

uint64_t static RetrievedValue.== infix(_:_:)()
{
  if ((sub_23FD7478C() & 1) == 0)
    return 0;
  type metadata accessor for RetrievedValue(0);
  return sub_23FC7A750();
}

uint64_t RetrievedValue.hash(into:)()
{
  sub_23FC10290();
  sub_23FBFEE2C(&qword_256F5EE58, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
  sub_23FC7E240();
  type metadata accessor for RetrievedValue(0);
  sub_23FC7E1CC();
  sub_23FBFEE2C(&qword_256F5EE60, (uint64_t (*)(uint64_t))MEMORY[0x24BE56E78], MEMORY[0x24BE56E90]);
  return sub_23FC7E240();
}

uint64_t sub_23FC7A948(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FC7AA24()
{
  sub_23FD7544C();
  sub_23FD75458();
  return sub_23FD75470();
}

uint64_t sub_23FC7AA68(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656372756F73;
  else
    return 0x65756C6176;
}

uint64_t sub_23FC7AA98()
{
  return sub_23FC7AA24();
}

uint64_t sub_23FC7AAA0()
{
  char *v0;

  return sub_23FC7AA68(*v0);
}

uint64_t sub_23FC7AAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FC7A948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FC7AACC()
{
  sub_23FC7AC80();
  return sub_23FD754DC();
}

uint64_t sub_23FC7AAF4()
{
  sub_23FC7AC80();
  return sub_23FD754E8();
}

uint64_t RetrievedValue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FBFD684(&qword_256F5EE68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FC12F34();
  sub_23FBFDE40(a1, a1[3]);
  sub_23FC7AC80();
  sub_23FD754C4();
  sub_23FD74798();
  sub_23FBFEE2C(&qword_256F5EE78, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A28]);
  sub_23FC06244();
  if (!v1)
  {
    type metadata accessor for RetrievedValue(0);
    sub_23FD74198();
    sub_23FBFEE2C(&qword_256F5EE80, (uint64_t (*)(uint64_t))MEMORY[0x24BE56E78], MEMORY[0x24BE56E88]);
    sub_23FC06244();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_23FC7AC80()
{
  unint64_t result;

  result = qword_256F5EE70;
  if (!qword_256F5EE70)
  {
    result = MEMORY[0x2426797E8](&unk_23FD775E4, &type metadata for RetrievedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5EE70);
  }
  return result;
}

uint64_t RetrievedValue.hashValue.getter()
{
  sub_23FD7544C();
  sub_23FC10290();
  sub_23FBFEE2C(&qword_256F5EE58, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
  sub_23FC7E250();
  type metadata accessor for RetrievedValue(0);
  sub_23FC7E1CC();
  sub_23FBFEE2C(&qword_256F5EE60, (uint64_t (*)(uint64_t))MEMORY[0x24BE56E78], MEMORY[0x24BE56E90]);
  sub_23FC7E250();
  return sub_23FD75470();
}

void RetrievedValue.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v23 = a2;
  v25 = sub_23FD74198();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v4);
  sub_23FBFEFE0();
  v24 = v5;
  v27 = sub_23FD74798();
  v6 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v7);
  sub_23FBFEFE0();
  v26 = v8;
  v29 = sub_23FBFD684(&qword_256F5EE88);
  MEMORY[0x24BDAC7A8](v29, v9);
  v10 = sub_23FC7E1F4();
  v11 = type metadata accessor for RetrievedValue(v10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFDE40(a1, a1[3]);
  sub_23FC7AC80();
  v28 = v2;
  v16 = v30;
  sub_23FD754B8();
  if (v16)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)a1);
  }
  else
  {
    v17 = (uint64_t)v15;
    v18 = (uint64_t)a1;
    v19 = v24;
    v20 = v25;
    v32 = 0;
    sub_23FBFEE2C(&qword_256F5EE90, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A40]);
    sub_23FD752D8();
    v30 = v6;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v17, v26, v27);
    v31 = 1;
    sub_23FBFEE2C(&qword_256F5EE98, (uint64_t (*)(uint64_t))MEMORY[0x24BE56E78], MEMORY[0x24BE56EA0]);
    sub_23FD752D8();
    sub_23FC7E224();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v17 + *(int *)(v11 + 20), v19, v20);
    sub_23FC7E058(v17, v23, (void (*)(_QWORD))type metadata accessor for RetrievedValue);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v18);
    sub_23FBFEF18(v17, type metadata accessor for RetrievedValue);
  }
}

void sub_23FC7AFE4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  RetrievedValue.init(from:)(a1, a2);
}

uint64_t sub_23FC7AFF8(_QWORD *a1)
{
  return RetrievedValue.encode(to:)(a1);
}

uint64_t sub_23FC7B018()
{
  sub_23FD7544C();
  sub_23FD74798();
  sub_23FBFEE2C(&qword_256F5EE58, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
  sub_23FD74BC4();
  sub_23FD74198();
  sub_23FBFEE2C(&qword_256F5EE60, (uint64_t (*)(uint64_t))MEMORY[0x24BE56E78], MEMORY[0x24BE56E90]);
  sub_23FD74BC4();
  return sub_23FD75470();
}

void sub_23FC7B0CC()
{
  sub_23FBFEE2C(&qword_256F5EEA0, type metadata accessor for RetrievedValue, (uint64_t)&protocol conformance descriptor for RetrievedValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for RetrievedValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD74798();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD74198();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for RetrievedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FD74198();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for RetrievedValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD74198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for RetrievedValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD74198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for RetrievedValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD74198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for RetrievedValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FD74798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD74198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RetrievedValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC7B3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FC10290();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = sub_23FC7E1CC();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for RetrievedValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC7B464(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23FC10290();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = sub_23FC7E1CC();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, a2, a2, v9);
}

uint64_t sub_23FC7B4CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD74798();
  if (v1 <= 0x3F)
  {
    result = sub_23FD74198();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23FC7B550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = sub_23FC7E230();
  v5[12] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[13] = v7;
  v5[14] = *(_QWORD *)(v7 + 64);
  v5[15] = sub_23FC7E09C();
  return sub_23FC0907C();
}

uint64_t sub_23FC7B5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t);

  sub_23FC7E2E0();
  sub_23FD714BC();
  v3 = sub_23FD7142C();
  sub_23FC7E1B4(v3, v4);
  sub_23FC7E310();
  v5 = (*(unsigned __int8 *)(v0 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v6 = swift_allocObject();
  *(_QWORD *)(v1 + 136) = v6;
  *(_QWORD *)(v6 + 16) = v2;
  sub_23FC7E260(v6 + v5);
  sub_23FC7E2C0();
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 144) = v7;
  sub_23FC7E2FC();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE56700];
  sub_23FD73A0C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BE55F28];
  sub_23FBFEE2C(&qword_256F5D6D0, v8, MEMORY[0x24BE56718]);
  sub_23FBFEE2C(&qword_256F5D6A0, v8, MEMORY[0x24BE56710]);
  sub_23FBFEE2C(&qword_256F5F148, v9, MEMORY[0x24BE55F40]);
  sub_23FBFEE2C(qword_256F5F150, v9, MEMORY[0x24BE55F38]);
  *v7 = v1;
  v7[1] = sub_23FC7B750;
  return sub_23FD714A4();
}

uint64_t sub_23FC7B750()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  sub_23FC7E118();
  if (v0)
    return sub_23FC0906C();
  swift_release();
  sub_23FC1002C();
  sub_23FC090C0();
  v2 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC090D8(v2);
}

uint64_t sub_23FC7B7AC()
{
  uint64_t v0;

  sub_23FC7E2A8();
  sub_23FC1002C();
  sub_23FC090C0();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7B7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return swift_task_switch();
}

uint64_t sub_23FC7B800()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);
  uint64_t v10;

  sub_23FC75AD4();
  sub_23FC7E294();
  sub_23FC7E0F4(v1);
  sub_23FC7E154();
  v2 = (_QWORD *)sub_23FC09058();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_23FC7B878;
  sub_23FC7E210();
  return v9(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23FC7B878()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *v1;
  v2 = v5;
  sub_23FC75274(&v5);
  *(_QWORD *)(v2 + 144) = v0;
  v3 = swift_task_dealloc();
  sub_23FC7E2CC(v3, &qword_256F5F0A0);
  return swift_task_switch();
}

uint64_t sub_23FC7B8F0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  v1 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5AADC(v1);
}

uint64_t sub_23FC7B918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = sub_23FC7E230();
  v4[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 + 64);
  v4[15] = sub_23FC7E09C();
  return sub_23FC0907C();
}

uint64_t sub_23FC7B96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  sub_23FC7E2E0();
  v9 = sub_23FD7142C();
  sub_23FC7E1B4(v9, v3);
  sub_23FC7E310();
  v4 = (*(unsigned __int8 *)(v0 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v5 = swift_allocObject();
  *(_QWORD *)(v1 + 136) = v5;
  *(_QWORD *)(v5 + 16) = v2;
  sub_23FC7E260(v5 + v4);
  sub_23FC7E2C0();
  swift_retain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 144) = v6;
  sub_23FD73340();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE55288];
  sub_23FBFD684(&qword_256F5F100);
  sub_23FBFEE2C(&qword_256F5F108, v7, MEMORY[0x24BE552A0]);
  sub_23FBFEE2C(&qword_256F5F110, v7, MEMORY[0x24BE55298]);
  sub_23FC7DA74(&qword_256F5F118, &qword_256F5F120, (uint64_t)&protocol conformance descriptor for RetrievedValue, MEMORY[0x24BEE12D0]);
  sub_23FC7DA74(&qword_256F5F128, &qword_256F5F130, (uint64_t)&protocol conformance descriptor for RetrievedValue, MEMORY[0x24BEE12A0]);
  *v6 = v1;
  v6[1] = sub_23FC7BB28;
  return sub_23FD714C8();
}

uint64_t sub_23FC7BB28()
{
  uint64_t v0;

  sub_23FC7E118();
  if (!v0)
  {
    swift_release();
    sub_23FC1002C();
  }
  return sub_23FC0906C();
}

uint64_t sub_23FC7BB80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23FC7BBBC()
{
  uint64_t v0;

  sub_23FC7E2A8();
  sub_23FC1002C();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC7BBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return swift_task_switch();
}

uint64_t sub_23FC7BC14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  sub_23FC75AD4();
  sub_23FC7E294();
  sub_23FC7E0F4(v1);
  sub_23FC7E154();
  v2 = (_QWORD *)sub_23FC09058();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_23FC7BC8C;
  sub_23FC7E210();
  return v8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23FC7BC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  sub_23FC75AD4();
  a15 = v18;
  a16 = v19;
  a14 = v17;
  v21 = v20;
  a14 = (_QWORD *)*v17;
  v22 = a14;
  sub_23FC75274(&a14);
  v22[18] = v16;
  v23 = swift_task_dealloc();
  if (!v16)
    v22[19] = v21;
  sub_23FC7E2CC(v23, &qword_256F5EB90);
  sub_23FC7E210();
  return swift_task_switch();
}

uint64_t sub_23FC7BD1C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  **(_QWORD **)(v0 + 96) = *(_QWORD *)(v0 + 152);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  v1 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5AADC(v1);
}

uint64_t sub_23FC7BD50()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7BD7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_23FD739AC();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_23FC0901C();
  v4 = sub_23FD73904();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = sub_23FC0901C();
  return sub_23FC0907C();
}

uint64_t sub_23FC7BDE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);

  sub_23FD7142C();
  *(_QWORD *)(v0 + 80) = v1;
  swift_bridgeObjectRetain();
  sub_23FD73994();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE55EC0];
  sub_23FBFEE2C(&qword_256F5F0C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE55EC0], MEMORY[0x24BE55ED0]);
  sub_23FBFEE2C(&qword_256F5F0D0, v3, MEMORY[0x24BE55EC8]);
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE55CA8];
  sub_23FBFEE2C(&qword_256F5F0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE55CA8], MEMORY[0x24BE55CB8]);
  sub_23FBFEE2C(&qword_256F5F0E0, v4, MEMORY[0x24BE55CB0]);
  *v2 = v0;
  v2[1] = sub_23FC7BF2C;
  return sub_23FD714C8();
}

uint64_t sub_23FC7BF2C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;

  v8 = *v1;
  v2 = v8;
  sub_23FC75274(&v8);
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23FC090C8(v2[5]);
    swift_release();
    sub_23FC15A24();
  }
  else
  {
    v4 = v2[8];
    v3 = v2[9];
    v5 = v2[7];
    v6 = v2[5];
    swift_release();
    sub_23FC15A24();
    sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return sub_23FC0906C();
}

uint64_t sub_23FC7BFF4()
{
  uint64_t (*v0)(void);

  sub_23FC7E2B4();
  sub_23FC090D0();
  v0 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5AADC(v0);
}

uint64_t sub_23FC7C01C()
{
  uint64_t v0;

  sub_23FC7E2B4();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7C048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  v4 = sub_23FD74798();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5F0E8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC7C0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);

  v2 = sub_23FD739A0();
  *(_QWORD *)(v1 + 120) = v2;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v1 + 176) = v3;
  v4 = -1;
  v5 = -1 << v3;
  v6 = *(_QWORD *)(v2 + 64);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  *(_QWORD *)(v1 + 128) = OBJC_IVAR____TtC23IntelligenceFlowRuntime8Executor_runtime;
  v7 = v4 & v6;
  if (v7)
  {
    v8 = 0;
    v9 = __clz(__rbit64(v7));
    v10 = (v7 - 1) & v7;
LABEL_5:
    v11 = *(_QWORD **)(v1 + 104);
    v0 = *(_QWORD *)(v1 + 80);
    v12 = *(_QWORD *)(v1 + 88);
    v13 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v9);
    v14 = v13[1];
    *v11 = *v13;
    v11[1] = v14;
    v15 = *(_QWORD *)(v2 + 56) + *(_QWORD *)(v12 + 72) * v9;
    v16 = sub_23FBFD684(&qword_256F5DB18);
    sub_23FC1046C((uint64_t)v11 + *(int *)(v16 + 48), v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v11, 0, 1, v16);
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  v17 = 63 - v5;
  if ((unint64_t)(63 - v5) <= 0x7F)
  {
    v8 = 0;
  }
  else
  {
    v18 = *(_QWORD *)(v2 + 72);
    if (v18)
    {
      v8 = 1;
LABEL_9:
      v10 = (v18 - 1) & v18;
      v9 = __clz(__rbit64(v18)) + (v8 << 6);
      goto LABEL_5;
    }
    if (v17 < 0xC0)
    {
      v8 = 1;
    }
    else
    {
      v18 = *(_QWORD *)(v2 + 80);
      if (v18)
      {
        v8 = 2;
        goto LABEL_9;
      }
      if (v17 < 0x100)
      {
        v8 = 2;
      }
      else
      {
        v18 = *(_QWORD *)(v2 + 88);
        if (v18)
        {
          v8 = 3;
          goto LABEL_9;
        }
        if (v17 < 0x140)
        {
          v8 = 3;
        }
        else
        {
          v18 = *(_QWORD *)(v2 + 96);
          if (v18)
          {
            v8 = 4;
            goto LABEL_9;
          }
          v36 = v17 >> 6;
          v37 = 13;
          while (v37 - 8 < v36)
          {
            v18 = *(_QWORD *)(v2 + 8 * v37++);
            if (v18)
            {
              v8 = v37 - 9;
              goto LABEL_9;
            }
          }
          v8 = v36 - 1;
        }
      }
    }
  }
  v19 = *(_QWORD *)(v1 + 104);
  v20 = sub_23FBFD684(&qword_256F5DB18);
  sub_23FBFF0F8(v19, v21, v22, v20);
  v10 = 0;
LABEL_12:
  *(_QWORD *)(v1 + 136) = v8;
  *(_QWORD *)(v1 + 144) = v10;
  sub_23FC7E304();
  v23 = sub_23FBFD684(&qword_256F5DB18);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v23) == 1)
  {
    swift_release();
    sub_23FD738F8();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    v24 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC7E188(v24);
  }
  else
  {
    v26 = *(uint64_t **)(v1 + 112);
    v28 = *(_QWORD *)(v1 + 88);
    v27 = *(_QWORD *)(v1 + 96);
    v29 = *(_QWORD *)(v1 + 80);
    v30 = *(_QWORD *)(v1 + 72) + *(_QWORD *)(v1 + 128);
    v31 = *v26;
    v32 = v26[1];
    *(_QWORD *)(v1 + 152) = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v27, (char *)v26 + *(int *)(v23 + 48), v29);
    sub_23FC584E0(v30, v1 + 16);
    v33 = *(_QWORD *)(v1 + 40);
    v34 = *(_QWORD *)(v1 + 48);
    sub_23FBFDE40((_QWORD *)(v1 + 16), v33);
    v35 = (_QWORD *)sub_23FC752E8();
    *(_QWORD *)(v1 + 160) = v35;
    *v35 = v1;
    v35[1] = sub_23FC7C3B8;
    return sub_23FC7E17C(v31, v32, *(_QWORD *)(v1 + 96), v33, v34, v38);
  }
}

uint64_t sub_23FC7C3B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 168) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return sub_23FC0906C();
}

uint64_t sub_23FC7C418()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t (*v34)(void);

  sub_23FC090C8(*(_QWORD *)(v0 + 88));
  result = sub_23FC7E270();
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  if (v2)
  {
    v4 = (v2 - 1) & v2;
    v5 = __clz(__rbit64(v2)) | (v3 << 6);
    v6 = *(_QWORD *)(v0 + 120);
LABEL_3:
    v7 = *(char **)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v10 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v5);
    v11 = v10[1];
    *(_QWORD *)v7 = *v10;
    *((_QWORD *)v7 + 1) = v11;
    v12 = *(_QWORD *)(v6 + 56) + *(_QWORD *)(v9 + 72) * v5;
    v13 = sub_23FBFD684(&qword_256F5DB18);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(&v7[*(int *)(v13 + 48)], v12, v8);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v13);
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  v14 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  v15 = (1 << *(_BYTE *)(v0 + 176)) + 63;
  if (v14 < (uint64_t)(v15 >> 6))
  {
    v6 = *(_QWORD *)(v0 + 120);
    v16 = v6 + 64;
    v17 = *(_QWORD *)(v6 + 64 + 8 * v14);
    if (v17)
    {
LABEL_7:
      v4 = (v17 - 1) & v17;
      v5 = __clz(__rbit64(v17)) + (v14 << 6);
      v3 = v14;
      goto LABEL_3;
    }
    v18 = v15 >> 6;
    v19 = v3 + 2;
    ++v3;
    if (v14 + 1 < v18)
    {
      v17 = *(_QWORD *)(v16 + 8 * v19);
      if (v17)
      {
LABEL_10:
        v14 = v19;
        goto LABEL_7;
      }
      v3 = v14 + 1;
      if (v14 + 2 < v18)
      {
        v17 = *(_QWORD *)(v16 + 8 * (v14 + 2));
        if (v17)
        {
          v14 += 2;
          goto LABEL_7;
        }
        v19 = v14 + 3;
        v3 = v14 + 2;
        if (v14 + 3 < v18)
        {
          v17 = *(_QWORD *)(v16 + 8 * v19);
          if (v17)
            goto LABEL_10;
          while (1)
          {
            v14 = v19 + 1;
            if (__OFADD__(v19, 1))
              break;
            if (v14 >= v18)
            {
              v3 = v18 - 1;
              goto LABEL_21;
            }
            v17 = *(_QWORD *)(v16 + 8 * v14);
            ++v19;
            if (v17)
              goto LABEL_7;
          }
LABEL_26:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_21:
  v7 = *(char **)(v0 + 104);
  v20 = sub_23FBFD684(&qword_256F5DB18);
  sub_23FBFF0F8((uint64_t)v7, v21, v22, v20);
  v4 = 0;
LABEL_22:
  *(_QWORD *)(v0 + 136) = v3;
  *(_QWORD *)(v0 + 144) = v4;
  sub_23FC7E304();
  v23 = sub_23FBFD684(&qword_256F5DB18);
  v24 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v23);
  v25 = *(uint64_t **)(v0 + 112);
  if (v24 == 1)
  {
    swift_release();
    sub_23FD738F8();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5A574();
    v26 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC7E188(v26);
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 96);
    v29 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 128);
    v31 = *v25;
    v32 = v25[1];
    *(_QWORD *)(v0 + 152) = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v27, (char *)v25 + *(int *)(v23 + 48), v29);
    sub_23FC584E0(v30, v0 + 16);
    sub_23FC7E1D4();
    v33 = (_QWORD *)sub_23FC09058();
    *(_QWORD *)(v0 + 160) = v33;
    *v33 = v0;
    v33[1] = sub_23FC7C3B8;
    return sub_23FC7E17C(v31, v32, *(_QWORD *)(v0 + 96), (uint64_t)v25, v23, v34);
  }
}

uint64_t sub_23FC7C6C8()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC75AD4();
  (*(void (**)(_QWORD, _QWORD))(v0[11] + 8))(v0[12], v0[10]);
  swift_release();
  sub_23FC7E270();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC7E210();
  return v1(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23FC7C730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return sub_23FC7E238();
}

uint64_t sub_23FC7C744()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t);

  sub_23FC7E0F4(v2[8]);
  sub_23FC7E1D4();
  v3 = (_QWORD *)sub_23FC09058();
  v2[9] = v3;
  *v3 = v2;
  v3[1] = sub_23FC7C7B8;
  return v5(v2[7], v0, v1);
}

uint64_t sub_23FC7C7B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  return sub_23FC0906C();
}

uint64_t sub_23FC7C80C()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7C838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[19] = a3;
  v4[20] = v3;
  v4[17] = a1;
  v4[18] = a2;
  sub_23FD7157C();
  v4[21] = sub_23FC0901C();
  v5 = sub_23FC7E2FC();
  v4[22] = v5;
  v4[23] = *(_QWORD *)(v5 - 8);
  v4[24] = sub_23FC0901C();
  v6 = sub_23FD74558();
  v4[25] = v6;
  v4[26] = *(_QWORD *)(v6 - 8);
  v4[27] = sub_23FC0901C();
  v7 = sub_23FD73298();
  v4[28] = v7;
  v4[29] = *(_QWORD *)(v7 - 8);
  v4[30] = sub_23FC5C13C();
  v4[31] = swift_task_alloc();
  sub_23FBFD684(qword_254346A10);
  v4[32] = sub_23FC0901C();
  v8 = sub_23FD71474();
  v4[33] = v8;
  v4[34] = *(_QWORD *)(v8 - 8);
  v4[35] = sub_23FC5C13C();
  v4[36] = swift_task_alloc();
  return sub_23FC0906C();
}

void sub_23FC7C920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = sub_23FD73370();
  v5 = v4;
  sub_23FD73580();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v1) == 1)
  {
    v6 = *(_QWORD *)(v0 + 248);
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 160);
    sub_23FBFEF74(*(_QWORD *)(v0 + 256), qword_254346A10);
    sub_23FC584E0(v7 + OBJC_IVAR____TtC23IntelligenceFlowRuntime8Executor_runtime, v0 + 16);
    sub_23FBFDE40((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    sub_23FD73568();
    sub_23FD750E0();
    swift_bridgeObjectRetain();
    sub_23FC1002C();
    sub_23FD74C48();
    sub_23FBFD684(&qword_256F5F090);
    v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FBFD684(&qword_256F5F098) - 8) + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_23FD769D0;
    v11 = (_QWORD *)(v10 + v9);
    *v11 = 0x6F6974617265706FLL;
    v11[1] = 0xE90000000000006ELL;
    swift_bridgeObjectRetain();
    sub_23FD7358C();
    sub_23FC7D000(v3, v5, v6);
    sub_23FC15A24();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v6, v29);
    sub_23FD73C28();
    sub_23FD74B40();
    sub_23FD73BE0();
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v12;
    *v12 = v0;
    v12[1] = sub_23FC7CE44;
    sub_23FC7E278();
    __asm { BR              X6 }
  }
  v14 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 224);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  sub_23FD7358C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v15, *MEMORY[0x24BE551B8], v17);
  v18 = MEMORY[0x242677040](v14, v15);
  v19 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v19(v15, v17);
  v19(v14, v17);
  if ((v18 & 1) != 0)
  {
    v21 = *(_QWORD *)(v0 + 280);
    v20 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 264);
    v22 = *(_QWORD *)(v0 + 272);
    sub_23FC7E0F4(*(_QWORD *)(v0 + 160));
    sub_23FBFDE40((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v20, v23);
    sub_23FD7454C();
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v24;
    *v24 = v0;
    v24[1] = sub_23FC7CD80;
    sub_23FC7E278();
    __asm { BR              X4 }
  }
  v26 = *(_QWORD *)(v0 + 272);
  sub_23FC15A24();
  sub_23FC7E2F4();
  sub_23FBFEE2C(&qword_256F5F0A8, type metadata accessor for ExecutorError, (uint64_t)&unk_23FD776A0);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  sub_23FC7E0A8();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC7E278();
  __asm { BR              X0 }
}

uint64_t sub_23FC7CD80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 304) = v1;
  swift_task_dealloc();
  sub_23FC090C8(*(_QWORD *)(v0 + 208));
  return sub_23FC0906C();
}

uint64_t sub_23FC7CDE4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC090C8(*(_QWORD *)(v0 + 272));
  sub_23FC7E270();
  sub_23FC7E138();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  v1 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC7E100(v1);
}

uint64_t sub_23FC7CE44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 320) = v1;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v0 + 184);
  sub_23FBFEF74(v0 + 56, &qword_256F5F0A0);
  sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return sub_23FC0906C();
}

uint64_t sub_23FC7CED0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  sub_23FC7E138();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  v1 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC7E100(v1);
}

uint64_t sub_23FC7CF24()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  sub_23FC7E0A8();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7CF8C()
{
  uint64_t v0;

  sub_23FC090C8(*(_QWORD *)(v0 + 272));
  sub_23FC7E270();
  sub_23FC7E0A8();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7D000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v33;
  uint64_t v35;

  sub_23FBFD684(&qword_256F5EB00);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  v35 = v10;
  sub_23FBFD684(&qword_256F5F0B0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC10370();
  v13 = sub_23FD73298();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  sub_23FC061D8();
  v16 = sub_23FD747F8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  sub_23FC7E1F4();
  v33 = sub_23FD73730();
  v19 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v20);
  sub_23FC12F34();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = 0xD00000000000001CLL;
  v21[5] = 0x800000023FD840D0;
  *v6 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v6, *MEMORY[0x24BEB9CF8], v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v3, *MEMORY[0x24BE551B8], v13);
  swift_bridgeObjectRetain();
  MEMORY[0x242677040](a3, v3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v13);
  sub_23FD746FC();
  v22 = swift_allocBox();
  v23 = sub_23FD74990();
  sub_23FBFF0F8(v4, v24, v25, v23);
  sub_23FD746F0();
  *v5 = v22;
  v26 = *MEMORY[0x24BEB9990];
  sub_23FC10290();
  sub_23FC0A050();
  (*(void (**)(uint64_t *, uint64_t))(v27 + 104))(v5, v26);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v19 + 104))(v5, *MEMORY[0x24BE55998], v33);
  v28 = sub_23FD71BC4();
  sub_23FBFF0F8(v35, v29, v30, v28);
  return sub_23FD73C10();
}

uint64_t sub_23FC7D268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  return sub_23FC7E238();
}

uint64_t sub_23FC7D280()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  sub_23FC7E0F4(v2[10]);
  sub_23FC7E1D4();
  v3 = (_QWORD *)sub_23FC09058();
  v2[11] = v3;
  *v3 = v2;
  v3[1] = sub_23FC7D2F8;
  return v5(v2[7], v2[8], v2[9], v0, v1);
}

uint64_t sub_23FC7D2F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 96) = v1;
  swift_task_dealloc();
  return sub_23FC0906C();
}

uint64_t sub_23FC7D34C()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FC7D378()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23FD71474();
  sub_23FBFF0E4(v1);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime8Executor_runtime);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime8Executor_instrumentationSender);
  swift_defaultActor_destroy();
  sub_23FBFF0A0();
}

uint64_t sub_23FC7D3D0()
{
  sub_23FC7D378();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23FC7D3E8()
{
  return type metadata accessor for Executor(0);
}

uint64_t type metadata accessor for Executor(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F5EF60);
}

uint64_t sub_23FC7D404()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RetrievedValue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FC7D4D4 + 4 * byte_23FD77375[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FC7D508 + 4 * asc_23FD77370[v4]))();
}

uint64_t sub_23FC7D508(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FC7D510(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FC7D518);
  return result;
}

uint64_t sub_23FC7D524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FC7D52CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FC7D530(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FC7D538(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RetrievedValue.CodingKeys()
{
  return &type metadata for RetrievedValue.CodingKeys;
}

unint64_t sub_23FC7D558()
{
  unint64_t result;

  result = qword_256F5F078;
  if (!qword_256F5F078)
  {
    result = MEMORY[0x2426797E8](&unk_23FD77574, &type metadata for RetrievedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5F078);
  }
  return result;
}

unint64_t sub_23FC7D598()
{
  unint64_t result;

  result = qword_256F5F080;
  if (!qword_256F5F080)
  {
    result = MEMORY[0x2426797E8](&unk_23FD774E4, &type metadata for RetrievedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5F080);
  }
  return result;
}

unint64_t sub_23FC7D5D8()
{
  unint64_t result;

  result = qword_256F5F088;
  if (!qword_256F5F088)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7750C, &type metadata for RetrievedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F5F088);
  }
  return result;
}

uint64_t sub_23FC7D614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v6;

  sub_23FC7E2F4();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC061D8();
  sub_23FC7E058(v1, v0, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
      return 3;
    v6 = 2;
  }
  else
  {
    v6 = 1;
  }
  sub_23FBFEF18(v0, type metadata accessor for ExecutorError);
  return v6;
}

uint64_t sub_23FC7D6A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  _BYTE v19[80];

  v2 = v0;
  v3 = sub_23FC7E2FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FC7E2F4();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC10370();
  sub_23FC7E058(v2, (uint64_t)v1, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v15 = *v1;
    v16 = v1[1];
    sub_23FBFD684((uint64_t *)&unk_256F5F208);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23FD769D0;
    *(_QWORD *)(inited + 32) = 25705;
    *(_QWORD *)(inited + 40) = 0xE200000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v15;
    *(_QWORD *)(inited + 56) = v16;
    return sub_23FD74B40();
  }
  if (EnumCaseMultiPayload != 1)
    return sub_23FD74B40();
  sub_23FC1046C((uint64_t)v7, (uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_23FBFD684((uint64_t *)&unk_256F5F208);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_23FD769D0;
  *(_QWORD *)(v12 + 32) = 0x6E6F69746361;
  *(_QWORD *)(v12 + 40) = 0xE600000000000000;
  *(_QWORD *)(v12 + 72) = v3;
  v13 = sub_23FBFDDEC((uint64_t *)(v12 + 48));
  sub_23FC1046C((uint64_t)v13, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v14 = sub_23FD74B40();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

uint64_t sub_23FC7D874()
{
  sub_23FBFEE2C(&qword_256F5F200, type metadata accessor for ExecutorError, (uint64_t)&unk_23FD77660);
  return sub_23FD753F8();
}

uint64_t sub_23FC7D8B4()
{
  sub_23FBFEE2C(&qword_256F5F200, type metadata accessor for ExecutorError, (uint64_t)&unk_23FD77660);
  return sub_23FD753EC();
}

uint64_t sub_23FC7D8F4()
{
  uint64_t v0;

  v0 = *(_QWORD *)aExecutorerror_0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t type metadata accessor for ExecutorError(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5F1C8);
}

uint64_t sub_23FC7D944()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FC7D970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = swift_task_alloc();
  v7 = (_QWORD *)sub_23FC0922C(v6);
  *v7 = v3;
  v7[1] = sub_23FC7E094;
  return sub_23FC7C048(a1, a2, v2);
}

uint64_t sub_23FC7D9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5F0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC7DA1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FC75AD4();
  sub_23FC7E230();
  sub_23FC7E0C4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  sub_23FC7E194(v1);
  sub_23FC7E210();
  return sub_23FC7BBF4(v2, v3, v4, v5, v6);
}

uint64_t sub_23FC7DA74(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = sub_23FBFEDE8(&qword_256F5F100);
    sub_23FBFEE2C(a2, type metadata accessor for RetrievedValue, a3);
    v11 = v10;
    result = MEMORY[0x2426797E8](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23FC7DAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23FC7E230();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_23FC7DB88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FC75AD4();
  sub_23FC7E230();
  sub_23FC7E0C4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  sub_23FC7E194(v1);
  sub_23FC7E210();
  return sub_23FC7B7E0(v2, v3, v4, v5, v6);
}

uint64_t *sub_23FC7DBE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23FD73C7C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FC7DCB4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23FD73C7C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (!(_DWORD)result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23FC7DD14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23FD73C7C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23FC7DDC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23FBFEF18((uint64_t)a1, type metadata accessor for ExecutorError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_23FD73C7C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23FC7DE8C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23FD73C7C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23FC7DF18(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23FBFEF18((uint64_t)a1, type metadata accessor for ExecutorError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23FD73C7C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23FC7DFBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD73C7C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23FC7E02C()
{
  sub_23FBFEE2C(&qword_256F5F0A8, type metadata accessor for ExecutorError, (uint64_t)&unk_23FD776A0);
}

void sub_23FC7E058(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v5;

  a3(0);
  sub_23FC0A050();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  sub_23FBFF0A0();
}

uint64_t sub_23FC7E09C()
{
  return swift_task_alloc();
}

uint64_t sub_23FC7E0A8()
{
  return swift_task_dealloc();
}

void sub_23FC7E0F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_23FC584E0(a1 + v1, v2);
}

uint64_t sub_23FC7E100(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC7E118()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23FC7E138()
{
  return swift_task_dealloc();
}

void sub_23FC7E154()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FBFDE40(v1, *(_QWORD *)(v3 + 40));
  sub_23FC584E0(v2, v0);
}

uint64_t sub_23FC7E17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_23FC7E188(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC7E194(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FC7E1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 128) = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v6, v5);
}

uint64_t sub_23FC7E1CC()
{
  return sub_23FD74198();
}

_QWORD *sub_23FC7E1D4()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23FBFDE40(v0, *(_QWORD *)(v1 + 40));
}

uint64_t sub_23FC7E1F4()
{
  return 0;
}

uint64_t sub_23FC7E224()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 96));
}

uint64_t sub_23FC7E230()
{
  return sub_23FD73E08();
}

uint64_t sub_23FC7E238()
{
  return swift_task_switch();
}

uint64_t sub_23FC7E240()
{
  return sub_23FD74BC4();
}

uint64_t sub_23FC7E250()
{
  return sub_23FD74BC4();
}

uint64_t sub_23FC7E260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(a1, v2, v3);
}

uint64_t sub_23FC7E270()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0);
}

uint64_t sub_23FC7E2A8()
{
  return swift_release();
}

uint64_t sub_23FC7E2B4()
{
  return swift_task_dealloc();
}

uint64_t sub_23FC7E2C0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;

  return sub_23FBFDE28(v2, v1 + v0);
}

void sub_23FC7E2CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FBFEF74(v2, a2);
}

uint64_t sub_23FC7E2D4()
{
  return sub_23FD74CB4();
}

uint64_t sub_23FC7E2F4()
{
  return type metadata accessor for ExecutorError(0);
}

uint64_t sub_23FC7E2FC()
{
  return sub_23FD73C7C();
}

uint64_t sub_23FC7E304()
{
  uint64_t v0;

  return sub_23FC7D9D0(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

void sub_23FC7E310()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FC584E0(v0, v1);
}

ValueMetadata *type metadata accessor for ExecutorConfiguration()
{
  return &type metadata for ExecutorConfiguration;
}

_UNKNOWN **sub_23FC7E32C()
{
  return &off_25100F478;
}

uint64_t sub_23FC7E338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8[30] = a7;
  v8[31] = a8;
  v8[28] = a5;
  v8[29] = a6;
  v8[26] = a3;
  v8[27] = a4;
  v8[24] = a1;
  v8[25] = a2;
  v10 = sub_23FD71690();
  v8[32] = v10;
  v8[33] = *(_QWORD *)(v10 - 8);
  v8[34] = sub_23FC0901C();
  v11 = sub_23FD73070();
  v8[35] = v11;
  v8[36] = *(_QWORD *)(v11 - 8);
  v8[37] = sub_23FC0901C();
  v12 = sub_23FD716D8();
  v8[38] = v12;
  v8[39] = *(_QWORD *)(v12 - 8);
  v8[40] = sub_23FC0901C();
  v13 = sub_23FD735E0();
  v8[41] = v13;
  v8[42] = *(_QWORD *)(v13 - 8);
  v8[43] = sub_23FC0901C();
  v14 = sub_23FD74798();
  v8[44] = v14;
  v8[45] = *(_QWORD *)(v14 - 8);
  v8[46] = swift_task_alloc();
  v8[47] = swift_task_alloc();
  v15 = sub_23FD7157C();
  v8[48] = v15;
  v8[49] = *(_QWORD *)(v15 - 8);
  v8[50] = sub_23FC0901C();
  v16 = sub_23FD734A8();
  v8[51] = v16;
  v8[52] = *(_QWORD *)(v16 - 8);
  v8[53] = sub_23FC0901C();
  v17 = sub_23FD7319C();
  v8[54] = v17;
  v8[55] = *(_QWORD *)(v17 - 8);
  v8[56] = sub_23FC0901C();
  v18 = sub_23FD7409C();
  v8[57] = v18;
  v8[58] = *(_QWORD *)(v18 - 8);
  v8[59] = sub_23FC0901C();
  v19 = sub_23FD740CC();
  v8[60] = v19;
  v8[61] = *(_QWORD *)(v19 - 8);
  v8[62] = sub_23FC0901C();
  v20 = sub_23FD73E08();
  v8[63] = v20;
  v8[64] = *(_QWORD *)(v20 - 8);
  v8[65] = sub_23FC0901C();
  v21 = sub_23FD71474();
  v8[66] = v21;
  v8[67] = *(_QWORD *)(v21 - 8);
  v8[68] = sub_23FC0901C();
  type metadata accessor for SessionID(0);
  v8[69] = sub_23FC0901C();
  v8[70] = *(_QWORD *)(a7 - 8);
  v8[71] = sub_23FC0901C();
  v22 = sub_23FD74120();
  v8[72] = v22;
  v8[73] = *(_QWORD *)(v22 - 8);
  v8[74] = sub_23FC0901C();
  return swift_task_switch();
}

void sub_23FC7E52C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  v1 = v0[74];
  v2 = v0[71];
  v3 = v0[30];
  v10 = v0[70];
  v5 = v0[28];
  v4 = v0[29];
  v6 = v0[24];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[73] + 16))(v1, v0[26], v0[72]);
  v7 = (_QWORD *)(v6 + *(int *)(type metadata accessor for SessionIdentityPack(0) + 20));
  v8 = v7[1];
  v11[0] = *v7;
  v11[1] = v8;
  sub_23FC60768(v4, (uint64_t)(v0 + 2));
  type metadata accessor for ShortcutsToolContext(0);
  sub_23FBFF1C4();
  swift_bridgeObjectRetain();
  v9 = sub_23FD3EC50(v1, (uint64_t)v11, (uint64_t)(v0 + 2));
  v0[75] = v9;
  sub_23FBFD684(&qword_256F5F260);
  v0[22] = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v2, v5, v3);
  v0[10] = type metadata accessor for DefaultDeviceStateProvider();
  v0[11] = sub_23FC7F550();
  sub_23FBFDDEC(v0 + 7);
  swift_retain();
  sub_23FD72F2C();
  sub_23FC62BF0();
}

uint64_t sub_23FC7EBB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC756B0();
  *v3 = *v2;
  *(_QWORD *)(v1 + 664) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23FC15A24();
  return sub_23FC5A19C();
}

void sub_23FC7EC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  BOOL v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD, uint64_t, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = *(_QWORD *)(v0 + 432);
  sub_23FC090C8(*(_QWORD *)(v0 + 488));
  sub_23FC7F67C();
  sub_23FC7F6F4();
  if (v3)
  {
LABEL_11:
    sub_23FC7F9EC();
    sub_23FC58AC8();
    sub_23FC7F5FC();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    v22 = sub_23FC7F994();
    sub_23FC7F770(v22, v23);
  }
  else
  {
    v60 = v0 + 184;
    while (1)
    {
      sub_23FC7F874(v2);
      if (v5)
      {
        __break(1u);
        goto LABEL_29;
      }
      sub_23FC7F5C8(v4);
      sub_23FC7F9E4();
      v6 = sub_23FC5E058();
      if (v6 == (_DWORD)v1)
        break;
      if (v6 == *(_DWORD *)(v0 + 704))
      {
        sub_23FC7F68C();
        sub_23FC7F7DC();
        sub_23FC7F904();
        sub_23FC7F8EC();
        v7 = sub_23FC7F838();
        if (sub_23FC7F984(v7, v8, v9, v10, v11, v12, v13, v14, v53, v56, (uint64_t)v58, v60, v61, v62, v63, v64) == (_DWORD)v65)
        {
          sub_23FC7F858();
          sub_23FC7F910();
          sub_23FBFD684(&qword_256F5F270);
          sub_23FBFD684(&qword_256F5F278);
          v47 = (__n128 *)sub_23FC7F654();
          v48 = sub_23FC7F7C8(v47, (__n128)xmmword_23FD769D0);
          sub_23FC7F848(v48, v49);
          *(_QWORD *)(v0 + 672) = sub_23FC7F930();
          v50 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 680) = v50;
          v51 = sub_23FC7F888(v50, (uint64_t)sub_23FC7EEE4);
LABEL_27:
          sub_23FC7F738(v51);
          return;
        }
        v15 = *(_QWORD *)(v0 + 488);
        v1 = *(_QWORD *)(v0 + 480);
        v17 = *(_QWORD *)(v0 + 264);
        v16 = *(_QWORD *)(v0 + 272);
        v18 = *(_QWORD *)(v0 + 256);
        sub_23FC090C8(*(_QWORD *)(v0 + 336));
        sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
      }
      else
      {
        sub_23FC7F78C();
        v19 = sub_23FC7F93C();
        v21(v19, v20);
      }
      sub_23FC7F6F4();
      if (v3)
        goto LABEL_11;
    }
    v24 = *(_QWORD *)(v0 + 472);
    sub_23FC7597C(*(_QWORD *)(v0 + 464));
    sub_23FC7F7B4();
    v54 = sub_23FC7F9B8();
    if (!*(_QWORD *)(v54 + 16))
    {
LABEL_26:
      sub_23FC7F9C0();
      v52 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 656) = v52;
      v51 = sub_23FC7F89C(v52, (uint64_t)sub_23FC7EBB4);
      goto LABEL_27;
    }
    sub_23FC7F804();
    while (1)
    {
      sub_23FC7F6C0(v25, v26, v27, v28, v29, v30, v31, v32, v54, v56, v58);
      sub_23FC7F9D4();
      sub_23FC7F9CC();
      sub_23FC7F708();
      v33 = sub_23FC7F8F8();
      sub_23FC7F8C4(v33, v34, v35, v36, v37, v38, v39, v40, v55, v57, v59, v60, v61, v62, v63, v64, v65);
      sub_23FC7F9DC();
      sub_23FC7F720();
      sub_23FC7F8B0();
      if (v42)
        break;
      v43 = v41;
      sub_23FBFD684(&qword_256F5EC10);
      if ((sub_23FC7F8D8() & 1) != 0)
      {
        sub_23FC7F828();
        sub_23FC7F95C();
        if (!v3)
        {
          sub_23FC7F754();
          return;
        }
      }
      sub_23FC7F94C();
      if ((v43 & 1) != 0)
      {
        sub_23FC7F7A0(v44);
      }
      else
      {
        sub_23FC7F590(v44);
        v45 = *(_QWORD *)(v24 + 16);
        v42 = __OFADD__(v45, 1);
        v46 = v45 + 1;
        if (v42)
          goto LABEL_30;
        sub_23FC7F924(v46);
      }
      sub_23FC7F7F0();
      sub_23FC5A648();
      sub_23FC7F67C();
      sub_23FC7F9A4();
      if (v3)
        goto LABEL_26;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
}

uint64_t sub_23FC7EEE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC756B0();
  *v3 = *v2;
  *(_QWORD *)(v1 + 688) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23FC15A24();
  return sub_23FC5A19C();
}

void sub_23FC7EF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD, uint64_t, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 336);
  sub_23FC090C8(*(_QWORD *)(v0 + 312));
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC7F6F4();
  if (v5)
  {
LABEL_11:
    sub_23FC7F9EC();
    sub_23FC58AC8();
    sub_23FC7F5FC();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    v24 = sub_23FC7F994();
    sub_23FC7F770(v24, v25);
  }
  else
  {
    v65 = v0 + 184;
    while (1)
    {
      sub_23FC7F874(v4);
      if (v7)
      {
        __break(1u);
        goto LABEL_29;
      }
      sub_23FC7F5C8(v6);
      sub_23FC7F9E4();
      v8 = sub_23FC5E058();
      if (v8 == (_DWORD)v2)
        break;
      if (v8 == *(_DWORD *)(v0 + 704))
      {
        sub_23FC7F68C();
        sub_23FC7F7DC();
        sub_23FC7F904();
        sub_23FC7F8EC();
        v9 = sub_23FC7F838();
        v17 = sub_23FC7F984(v9, v10, v11, v12, v13, v14, v15, v16, v58, v61, (uint64_t)v63, v65, v66, v67, v68, v69);
        v19 = *(_QWORD *)(v0 + 264);
        v18 = *(_QWORD *)(v0 + 272);
        v20 = *(_QWORD *)(v0 + 256);
        if (v17 == (_DWORD)v70)
        {
          v50 = *(_QWORD *)(v0 + 312);
          v49 = *(_QWORD *)(v0 + 320);
          v51 = *(_QWORD *)(v0 + 304);
          (*(void (**)(_QWORD, _QWORD))(v19 + 96))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v49, v18, v51);
          sub_23FBFD684(&qword_256F5F270);
          sub_23FBFD684(&qword_256F5F278);
          v52 = (__n128 *)sub_23FC7F654();
          v53 = sub_23FC7F7C8(v52, (__n128)xmmword_23FD769D0);
          sub_23FC7F848(v53, v54);
          *(_QWORD *)(v0 + 672) = sub_23FC7F930();
          v55 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 680) = v55;
          v56 = sub_23FC7F888(v55, (uint64_t)sub_23FC7EEE4);
LABEL_27:
          sub_23FC7F738(v56);
          return;
        }
        v2 = *(_QWORD *)(v0 + 480);
        sub_23FC090C8(*(_QWORD *)(v0 + 336));
        sub_23FC7F67C();
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      }
      else
      {
        sub_23FC7F78C();
        v21 = sub_23FC7F93C();
        v23(v21, v22);
      }
      sub_23FC7F6F4();
      if (v5)
        goto LABEL_11;
    }
    v26 = *(_QWORD *)(v0 + 472);
    sub_23FC7597C(*(_QWORD *)(v0 + 464));
    sub_23FC7F7B4();
    v59 = sub_23FC7F9B8();
    if (!*(_QWORD *)(v59 + 16))
    {
LABEL_26:
      sub_23FC7F9C0();
      v57 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 656) = v57;
      v56 = sub_23FC7F89C(v57, (uint64_t)sub_23FC7EBB4);
      goto LABEL_27;
    }
    sub_23FC7F804();
    while (1)
    {
      sub_23FC7F6C0(v27, v28, v29, v30, v31, v32, v33, v34, v59, v61, v63);
      sub_23FC7F9D4();
      sub_23FC7F9CC();
      sub_23FC7F708();
      v35 = sub_23FC7F8F8();
      sub_23FC7F8C4(v35, v36, v37, v38, v39, v40, v41, v42, v60, v62, v64, v65, v66, v67, v68, v69, v70);
      sub_23FC7F9DC();
      sub_23FC7F720();
      sub_23FC7F8B0();
      if (v44)
        break;
      v45 = v43;
      sub_23FBFD684(&qword_256F5EC10);
      if ((sub_23FC7F8D8() & 1) != 0)
      {
        sub_23FC7F828();
        sub_23FC7F95C();
        if (!v5)
        {
          sub_23FC7F754();
          return;
        }
      }
      sub_23FC7F94C();
      if ((v45 & 1) != 0)
      {
        sub_23FC7F7A0(v46);
      }
      else
      {
        sub_23FC7F590(v46);
        v47 = *(_QWORD *)(v26 + 16);
        v44 = __OFADD__(v47, 1);
        v48 = v47 + 1;
        if (v44)
          goto LABEL_30;
        sub_23FC7F924(v48);
      }
      sub_23FC7F7F0();
      sub_23FC5A648();
      sub_23FC7F67C();
      sub_23FC7F9A4();
      if (v5)
        goto LABEL_26;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
}

uint64_t sub_23FC7F244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  swift_release();
  sub_23FC58AC8();
  swift_release();
  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 432);
  sub_23FC7F96C();
  v5(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B980();
  swift_task_dealloc();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7F340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  v1 = *(_QWORD *)(v0 + 312);
  swift_release();
  sub_23FC58AC8();
  swift_release();
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 480);
  sub_23FC7F96C();
  v6(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v5);
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5A574();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5B2F4();
  swift_task_dealloc();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC090C0();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  return sub_23FC75334(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC7F44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;
  uint64_t v18;

  *(_QWORD *)(v8 + 16) = a1;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 24) = v16;
  *v16 = v8;
  v16[1] = sub_23FC7F4F0;
  return sub_23FC7E338(a2, a3, a4, a5, a6, a7, a8, v18);
}

uint64_t sub_23FC7F4F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  _QWORD *v6;

  sub_23FC756B0();
  v5 = *v3;
  *v6 = v5;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v2 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

_UNKNOWN **sub_23FC7F544()
{
  return &off_25100F458;
}

unint64_t sub_23FC7F550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5F268;
  if (!qword_256F5F268)
  {
    v1 = type metadata accessor for DefaultDeviceStateProvider();
    result = MEMORY[0x2426797E8](&unk_23FD77154, v1);
    atomic_store(result, (unint64_t *)&qword_256F5F268);
  }
  return result;
}

uint64_t sub_23FC7F590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(unint64_t);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v1 + 8 * (v5 >> 6) + 64) |= 1 << v5;
  v6 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v5);
  *v6 = v4;
  v6[1] = v3;
  return v2(*(_QWORD *)(v1 + 56) + *(_QWORD *)(a1 + 72) * v5);
}

uint64_t sub_23FC7F5C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v2 + 488) + 16))(*(_QWORD *)(v2 + 496), v1+ ((*(unsigned __int8 *)(v2 + 696) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 696))+ *(_QWORD *)(*(_QWORD *)(v2 + 488) + 72) * a1, *(_QWORD *)(v2 + 480));
}

uint64_t sub_23FC7F5FC()
{
  return swift_release();
}

uint64_t sub_23FC7F654()
{
  return swift_allocObject();
}

uint64_t sub_23FC7F67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23FC7F68C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[58] + 96))(v0[59], v0[57]);
}

uint64_t sub_23FC7F6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v11;

  return a11(*(_QWORD *)(v11 + 424), a2, *(_QWORD *)(v11 + 408));
}

uint64_t sub_23FC7F708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

unint64_t sub_23FC7F720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 184) = v2;
  return sub_23FC84D84(v3, v1);
}

uint64_t sub_23FC7F738(uint64_t a1)
{
  return sub_23FC7BD7C(a1);
}

uint64_t sub_23FC7F754()
{
  return sub_23FD753C8();
}

uint64_t sub_23FC7F770(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FC7F78C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[61] + 8))(v0[62], v0[60]);
}

uint64_t sub_23FC7F7A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 40))(*(_QWORD *)(v1 + 56) + *(_QWORD *)(a1 + 72) * v2);
}

uint64_t sub_23FC7F7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v1, v3);
}

uint64_t sub_23FC7F7C8(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_23FD735B0();
}

uint64_t sub_23FC7F7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v1, v2);
}

uint64_t sub_23FC7F7F0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_23FC7F828()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC84D84(v1, v0);
}

uint64_t sub_23FC7F838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FC7F848(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a1;
  v2[1] = a2;
  return sub_23FD716C0();
}

uint64_t sub_23FC7F858()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[33] + 96))(v0[34], v0[32]);
}

void sub_23FC7F874(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 640) = a1;
}

uint64_t sub_23FC7F888@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23FC7F89C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_23FC7F8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a15 + 32))(a17, v17, a16);
}

uint64_t sub_23FC7F8D8()
{
  return sub_23FD75200();
}

uint64_t sub_23FC7F8EC()
{
  return sub_23FD73058();
}

uint64_t sub_23FC7F8F8()
{
  return sub_23FD7349C();
}

uint64_t sub_23FC7F904()
{
  return sub_23FD735BC();
}

uint64_t sub_23FC7F910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v2, v1);
}

uint64_t sub_23FC7F924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FC7F930()
{
  return sub_23FD74B40();
}

uint64_t sub_23FC7F93C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC7F984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v16, a16);
}

uint64_t sub_23FC7F994()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 616);
}

uint64_t sub_23FC7F9B8()
{
  return sub_23FD73190();
}

uint64_t sub_23FC7F9C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 648) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC7F9CC()
{
  return sub_23FD71540();
}

uint64_t sub_23FC7F9D4()
{
  return sub_23FD73178();
}

uint64_t sub_23FC7F9DC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FC7F9E4()
{
  return sub_23FD740A8();
}

uint64_t sub_23FC7F9EC()
{
  return swift_bridgeObjectRelease();
}

void sub_23FC7F9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23FD7544C();
    sub_23FD74C30();
    v6 = sub_23FC06168();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_23FC8A40C();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_23FC8A684() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_23FC8A40C();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((sub_23FC8A684() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_23FC8A40C();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_23FC7FAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  sub_23FC061F0();
  v1 = v0;
  sub_23FD72EC0();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC8A510();
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 40);
    sub_23FBFEE2C(&qword_256F5F360, (uint64_t (*)(uint64_t))MEMORY[0x24BE54790], MEMORY[0x24BE54798]);
    sub_23FC8A4CC();
    sub_23FC8A274();
    if ((v6 & 1) != 0)
    {
      sub_23FC8A77C();
      do
      {
        sub_23FC8A600();
        sub_23FBFEE2C(&qword_256F5F368, (uint64_t (*)(uint64_t))MEMORY[0x24BE54790], MEMORY[0x24BE547A0]);
        sub_23FC8A470();
        sub_23FC8A458();
        if ((v5 & 1) != 0)
          break;
        sub_23FC8A52C();
      }
      while ((v7 & 1) != 0);
    }
  }
  sub_23FC060D4();
}

BOOL sub_23FC7FBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_23FD75440();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_23FC7FC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  sub_23FC061F0();
  v1 = v0;
  sub_23FD72DB8();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC8A510();
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 40);
    sub_23FBFEE2C(&qword_256F5E5D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54670]);
    sub_23FC8A4CC();
    sub_23FC8A274();
    if ((v6 & 1) != 0)
    {
      sub_23FC8A77C();
      do
      {
        sub_23FC8A600();
        sub_23FBFEE2C((unint64_t *)&qword_256F5DDA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54678]);
        sub_23FC8A470();
        sub_23FC8A458();
        if ((v5 & 1) != 0)
          break;
        sub_23FC8A52C();
      }
      while ((v7 & 1) != 0);
    }
  }
  sub_23FC060D4();
}

uint64_t sub_23FC7FD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  v9[19] = a8;
  v9[20] = v8;
  v9[17] = a6;
  v9[18] = a7;
  v9[15] = a4;
  v9[16] = a5;
  v9[13] = a2;
  v9[14] = a3;
  v9[12] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[21] = AssociatedTypeWitness;
  v9[22] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[23] = sub_23FC0901C();
  v11 = sub_23FD74120();
  v9[24] = v11;
  v9[25] = *(_QWORD *)(v11 - 8);
  v9[26] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

void sub_23FC7FDD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  _QWORD *v4;

  v1 = v0[19];
  v2 = v0[17];
  sub_23FC8A5B4();
  v3 = *(void (**)(uint64_t, uint64_t))(v1 + 56);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  sub_23FBFDDEC(v0 + 2);
  v3(v2, v1);
  sub_23FC8A5B4();
  sub_23FC8A5B4();
  v4 = (_QWORD *)sub_23FC09058();
  v0[27] = (uint64_t)v4;
  swift_getAssociatedConformanceWitness();
  *v4 = v0;
  v4[1] = sub_23FC7FF20;
  sub_23FC5BC38();
  __asm { BR              X8 }
}

uint64_t sub_23FC7FF20()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v9;

  v2 = (_QWORD *)*v1;
  v9 = v2;
  v3 = v2[25];
  v5 = v2[22];
  v4 = v2[23];
  v6 = v2[21];
  sub_23FC75274(&v9);
  v2[28] = v0;
  swift_task_dealloc();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)(v2 + 7));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (!v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)(v2 + 2));
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5C528();
    sub_23FC5BC38();
    __asm { BR              X0 }
  }
  sub_23FC5A9A8();
  sub_23FC5BC38();
  return swift_task_switch();
}

uint64_t sub_23FC7FFE4()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  sub_23FC090D0();
  sub_23FC090C0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_23FC8002C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  int v19;
  _BOOL8 v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;

  v2 = sub_23FD7409C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD740CC();
  MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return 0;
  v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v36 = *MEMORY[0x24BE56AF8];
  v35 = *MEMORY[0x24BE56B18];
  v34 = *MEMORY[0x24BE56B28];
  v33 = *MEMORY[0x24BE56AF0];
  v32 = *MEMORY[0x24BE56B90];
  v31 = *MEMORY[0x24BE56B50];
  v30 = *MEMORY[0x24BE56C20];
  v14 = *(_QWORD *)(v9 + 72);
  v28 = a1;
  v29 = v14;
  v15 = v9;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  v17 = v12 - 1;
  do
  {
    v18 = v17;
    v16(v11, v13, v7);
    sub_23FD740A8();
    v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    v26 = v19 == v36 || v19 == v35 || v19 == v34 || v19 == v33 || v19 == v32 || v19 == v31 || v19 == v30;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v7);
    if (v26)
      break;
    v17 = v18 - 1;
    v13 += v29;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v26;
}

void sub_23FC80234(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _BYTE v12[24];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = a1;
  v4 = sub_23FBFD684(&qword_256F5F2B8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FC12E68(v2, (uint64_t)v7, &qword_256F5F2B8);
  v8 = sub_23FBFD684(&qword_256F5F2C0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_23FBFEF74((uint64_t)v7, &qword_256F5F2B8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23FD736AC();
    sub_23FC8938C();
    swift_allocError();
    v9 = v14;
    v10 = v13;
    *(_OWORD *)v11 = *(_OWORD *)&v12[8];
    *(_OWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 32) = v9;
    swift_willThrow();
  }
  else
  {
    sub_23FC12DD8((uint64_t)v7, a2, &qword_256F5F2C0);
  }
}

uint64_t sub_23FC80398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  sub_23FBFD684((uint64_t *)&unk_256F61700);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC10118();
  sub_23FC12E68(v1, v2, (uint64_t *)&unk_256F61700);
  v6 = sub_23FD740CC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v6) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, v2, v6);
  sub_23FBFEF74(v2, (uint64_t *)&unk_256F61700);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23FD736AC();
  sub_23FC8938C();
  swift_allocError();
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v11;
  return swift_willThrow();
}

uint64_t sub_23FC804EC()
{
  return sub_23FC80028();
}

BOOL sub_23FC8050C(uint64_t a1)
{
  return sub_23FC8002C(a1);
}

uint64_t sub_23FC80530()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_23FC75AD4();
  sub_23FC8A6DC();
  v5 = *v1;
  v7 = *sub_23FBFDE40(v6, v6[3]);
  v8 = (_QWORD *)sub_23FC09058();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23FBFD8B8;
  return v10(v4, v2, v0, v7, v5);
}

uint64_t sub_23FC805B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD *v16;

  v15 = swift_task_alloc();
  v16 = (_QWORD *)sub_23FC0922C(v15);
  *v16 = v7;
  v16[1] = sub_23FC7E094;
  return sub_23FC7FD44(a1, a2, a3, a4, a7, a5, (uint64_t)&off_256F5F218, a6);
}

uint64_t sub_23FC8064C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_23FD74F18();
  v8 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23FC8A7F0(&v7);
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    sub_23FC15A24();
    return v8;
  }
  else
  {
    v5 = v2;
    sub_23FC15A24();
  }
  return v5;
}

uint64_t sub_23FC806EC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  uint64_t v14;

  v12 = sub_23FD74F18();
  result = sub_23FCCB7C8(a1, v13);
  v3 = v13[1];
  v4 = v13[3];
  v5 = v14;
  v6 = (unint64_t)(v13[2] + 64) >> 6;
  if (!v14)
    goto LABEL_3;
LABEL_2:
  v5 &= v5 - 1;
  while (1)
  {
    swift_bridgeObjectRetain();
    sub_23FC8A7F0(&v11);
    result = swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v7 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v7 >= v6)
      goto LABEL_21;
    v8 = *(_QWORD *)(v3 + 8 * v7);
    v9 = v4 + 1;
    if (!v8)
    {
      v9 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_21;
      v8 = *(_QWORD *)(v3 + 8 * v9);
      if (!v8)
      {
        v9 = v4 + 3;
        if (v4 + 3 >= v6)
          goto LABEL_21;
        v8 = *(_QWORD *)(v3 + 8 * v9);
        if (!v8)
        {
          v9 = v4 + 4;
          if (v4 + 4 >= v6)
            goto LABEL_21;
          v8 = *(_QWORD *)(v3 + 8 * v9);
          if (!v8)
          {
            v9 = v4 + 5;
            if (v4 + 5 >= v6)
              goto LABEL_21;
            v8 = *(_QWORD *)(v3 + 8 * v9);
            if (!v8)
            {
              v10 = v4 + 6;
              while (v10 < v6)
              {
                v8 = *(_QWORD *)(v3 + 8 * v10++);
                if (v8)
                {
                  v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return v12;
            }
          }
        }
      }
    }
LABEL_18:
    v5 = (v8 - 1) & v8;
    v4 = v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_23FC80860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23FD74F18();
  v9 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    for (i = 0; i != v3; ++i)
    {
      v5 = *(_QWORD *)(a1 + 8 * i + 32);
      sub_23FC859DC(&v8, v5);
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    v6 = v2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_23FC808F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23FC061F0();
  v21 = v1;
  v22 = v2;
  v4 = v3;
  v5 = sub_23FD74A2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, MEMORY[0x24BEBA5E0]);
  sub_23FC8A4F4();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v19 - v9;
  sub_23FBFEE2C(&qword_256F5F340, v11, MEMORY[0x24BEBA5F8]);
  sub_23FC8A790();
  v12 = sub_23FD74F18();
  v20 = v12;
  v13 = *(_QWORD *)(v4 + 16);
  if (v13)
  {
    v14 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v15 = *(_QWORD *)(v6 + 72);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    do
    {
      v16(v0, v14, v5);
      sub_23FC85AD4((uint64_t)v10, v0);
      sub_23FC595C4((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      v14 += v15;
      --v13;
    }
    while (v13);
    sub_23FC15A24();
    return v20;
  }
  else
  {
    v17 = v12;
    sub_23FC15A24();
  }
  return v17;
}

void sub_23FC80A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unsigned int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23FC061F0();
  v54 = v3;
  v55 = v4;
  v6 = v5;
  v7 = sub_23FD7316C();
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFF180();
  v12 = v11 - v10;
  v13 = sub_23FBFF104();
  v52 = *(_QWORD *)(v13 - 8);
  v53 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFF180();
  v51 = v17 - v16;
  v18 = sub_23FD7409C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  sub_23FBFF180();
  v23 = v22 - v21;
  sub_23FBFD684(&qword_256F5F328);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FC8A4F4();
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v48 - v28;
  v30 = sub_23FC8A3EC();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v31, v32);
  sub_23FC10118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v23, v6, v18);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v23, v18);
  if (v33 == *MEMORY[0x24BE56AF8])
  {
    v34 = (unsigned int *)MEMORY[0x24BE55C78];
LABEL_11:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v0, *v34, v30);
    v35 = 0;
    goto LABEL_12;
  }
  if (v33 == *MEMORY[0x24BE56B18])
  {
    v34 = (unsigned int *)MEMORY[0x24BE55C88];
    goto LABEL_11;
  }
  if (v33 == *MEMORY[0x24BE56B28])
  {
    v34 = (unsigned int *)MEMORY[0x24BE55C80];
    goto LABEL_11;
  }
  if (v33 == *MEMORY[0x24BE56B50])
  {
    v34 = (unsigned int *)MEMORY[0x24BE55C68];
    goto LABEL_11;
  }
  if (v33 == *MEMORY[0x24BE56C20])
  {
    v34 = (unsigned int *)MEMORY[0x24BE55C70];
    goto LABEL_11;
  }
  v35 = 1;
LABEL_12:
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v35, 1, v30);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
  sub_23FC12DD8(v0, (uint64_t)v29, &qword_256F5F328);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v29, 1, v30) == 1)
  {
    sub_23FBFEF74((uint64_t)v29, &qword_256F5F328);
    v36 = type metadata accessor for ExecutorLogging(0);
    v37 = v55;
    v38 = 1;
    v39 = 1;
  }
  else
  {
    v40 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 32);
    v40(v2, v29, v30);
    sub_23FC8A634();
    sub_23FBFF1E4(v12, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    v41 = v49;
    sub_23FC06160(v12, *MEMORY[0x24BE54FA0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 104));
    v42 = v51;
    v43 = v54;
    sub_23FD73820();
    sub_23FC595C4(v12, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    v44 = v55;
    v40(v55, (char *)v2, v30);
    v45 = type metadata accessor for ExecutorLogging(0);
    v46 = v44 + *(int *)(v45 + 24);
    sub_23FC7E230();
    sub_23FC8A29C();
    v47(v46, v43);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v44 + *(int *)(v45 + 20), v42, v53);
    sub_23FC8A71C();
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v37, v38, v39, v36);
  sub_23FC060D4();
}

uint64_t sub_23FC80D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  sub_23FBFD684(&qword_256F5EAE8);
  v5[13] = swift_task_alloc();
  v6 = sub_23FD71648();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v7 = sub_23FD71C84();
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v8 = sub_23FD73118();
  v5[20] = v8;
  v5[21] = *(_QWORD *)(v8 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = sub_23FD71474();
  v5[24] = swift_task_alloc();
  sub_23FBFD684(qword_254346A10);
  v5[25] = swift_task_alloc();
  v9 = sub_23FD73A0C();
  v5[26] = v9;
  v5[27] = *(_QWORD *)(v9 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v10 = sub_23FD72BF0();
  v5[31] = v10;
  v5[32] = *(_QWORD *)(v10 - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v11 = sub_23FD747C8();
  v5[35] = v11;
  v5[36] = *(_QWORD *)(v11 - 8);
  v5[37] = swift_task_alloc();
  v12 = sub_23FD7394C();
  v5[38] = v12;
  v5[39] = *(_QWORD *)(v12 - 8);
  v5[40] = swift_task_alloc();
  v13 = sub_23FD73598();
  v5[41] = v13;
  v5[42] = *(_QWORD *)(v13 - 8);
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5F2B8);
  v5[45] = swift_task_alloc();
  v5[46] = sub_23FBFD684(&qword_256F5F2C0);
  v5[47] = swift_task_alloc();
  v14 = sub_23FD740CC();
  v5[48] = v14;
  v5[49] = *(_QWORD *)(v14 - 8);
  v5[50] = swift_task_alloc();
  v15 = sub_23FD736D0();
  v5[51] = v15;
  v5[52] = *(_QWORD *)(v15 - 8);
  v5[53] = swift_task_alloc();
  v16 = sub_23FD741E0();
  v5[54] = v16;
  v5[55] = *(_QWORD *)(v16 - 8);
  v5[56] = swift_task_alloc();
  v17 = sub_23FD73E08();
  v5[57] = v17;
  v5[58] = *(_QWORD *)(v17 - 8);
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v18 = sub_23FD73C7C();
  v5[61] = v18;
  v5[62] = *(_QWORD *)(v18 - 8);
  v5[63] = swift_task_alloc();
  v5[64] = swift_task_alloc();
  v5[65] = swift_task_alloc();
  v19 = sub_23FD74798();
  v5[66] = v19;
  v5[67] = *(_QWORD *)(v19 - 8);
  v5[68] = swift_task_alloc();
  v5[69] = swift_task_alloc();
  v5[70] = swift_task_alloc();
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  v20 = sub_23FD7157C();
  v5[73] = v20;
  v5[74] = *(_QWORD *)(v20 - 8);
  v5[75] = swift_task_alloc();
  v5[76] = swift_task_alloc();
  v5[77] = swift_task_alloc();
  v21 = sub_23FD7319C();
  v5[78] = v21;
  v5[79] = *(_QWORD *)(v21 - 8);
  v5[80] = swift_task_alloc();
  v22 = sub_23FD7409C();
  v5[81] = v22;
  v5[82] = *(_QWORD *)(v22 - 8);
  v5[83] = swift_task_alloc();
  v5[2] = v4;
  return swift_task_switch();
}

unint64_t sub_23FC8119C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int8x16_t *v33;
  int8x16_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  int8x16_t *v44;
  int8x16_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  char v67;
  unint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  unint64_t result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint8_t *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130[3];

  v1 = v0 + 2;
  v2 = v0[83];
  v3 = v0[82];
  v4 = v0[81];
  sub_23FD740A8();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4);
  if (v5 == *MEMORY[0x24BE56AF8])
  {
    v6 = *(_QWORD *)(v129 + 664);
    sub_23FC8A808();
    v7 = *(_QWORD *)(v129 + 520);
    v8 = *(_QWORD *)(v129 + 496);
    v9 = *(_QWORD *)(v129 + 464);
    sub_23FC8A6CC(v10);
    sub_23FC06160(v7, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    sub_23FD73D6C();
    v11 = sub_23FD73DE4();
    sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    LOBYTE(v7) = sub_23FC83BE4(v11);
    sub_23FC1002C();
    v12 = *(_QWORD *)(v129 + 520);
    if ((v7 & 1) != 0)
    {
      v13 = *(_QWORD *)(v129 + 496);
      sub_23FD724D0();
      sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
      v14 = sub_23FD72BE4();
      v15 = sub_23FD74F6C();
      v16 = os_log_type_enabled(v14, v15);
      v17 = *(_QWORD *)(v129 + 272);
      v18 = *(_QWORD *)(v129 + 248);
      v19 = *(_QWORD *)(v129 + 256);
      if (v16)
      {
        v20 = (uint8_t *)sub_23FBFEFF4();
        v130[0] = sub_23FBFEFF4();
        *(_DWORD *)v20 = 136315138;
        sub_23FBFEE2C(&qword_256F5F300, (uint64_t (*)(uint64_t))MEMORY[0x24BE56700], MEMORY[0x24BE56720]);
        v21 = sub_23FD75344();
        *(_QWORD *)(v129 + 56) = sub_23FC9DC40(v21, v22, v130);
        sub_23FD75044();
        swift_bridgeObjectRelease();
        sub_23FC8A674();
        _os_log_impl(&dword_23FBF8000, v14, v15, "Executor: Skipping action execution due to safety mode being enabled: %s", v20, 0xCu);
        swift_arrayDestroy();
        sub_23FBFEFA0();
      }
      sub_23FC8A674();

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      sub_23FC8A554();
    }
    v32 = *(_QWORD *)(v129 + 88);
    v33 = (int8x16_t *)sub_23FC8A864();
    *(_QWORD *)(v129 + 736) = v33;
    v34 = *(int8x16_t *)(v129 + 72);
    v33[1].i64[0] = (uint64_t)v1;
    v33[1].i64[1] = v12;
    v33[2] = vextq_s8(v34, v34, 8uLL);
    v33[3].i64[0] = v32;
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v129 + 744) = v35;
    *v35 = v129;
    v35[1] = sub_23FC8255C;
    goto LABEL_11;
  }
  if (v5 == *MEMORY[0x24BE56B18])
  {
    v23 = *(_QWORD *)(v129 + 664);
    sub_23FC8A808();
    v24 = *(_QWORD *)(v129 + 464);
    v25 = *(_QWORD *)(v129 + 472);
    v26 = *(_QWORD *)(v129 + 456);
    v27 = *(_QWORD *)(v129 + 416);
    v28 = *(_QWORD *)(v129 + 424);
    v29 = *(_QWORD *)(v129 + 408);
    v126 = *(_QWORD *)(v129 + 376);
    sub_23FC7597C(v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v28, v23, v29);
    sub_23FD73D6C();
    v31 = sub_23FD73DE4();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
    *(_QWORD *)(v129 + 32) = v31;
    *(_QWORD *)(swift_task_alloc() + 16) = v28;
    sub_23FBFD684(&qword_256F5EAD0);
    sub_23FC891DC();
    sub_23FD73988();
    sub_23FC090C0();
    swift_bridgeObjectRelease();
    sub_23FC80234(0xD000000000000030, v126);
    v78 = *(_QWORD *)(v129 + 512);
    v79 = *(_QWORD *)(v129 + 496);
    v81 = *(_QWORD *)(v129 + 392);
    v80 = *(_QWORD *)(v129 + 400);
    v83 = *(_QWORD *)(v129 + 376);
    v82 = *(_QWORD *)(v129 + 384);
    v84 = *(_QWORD *)(v129 + 368);
    sub_23FBFEF74(*(_QWORD *)(v129 + 360), &qword_256F5F2B8);
    v85 = v83 + *(int *)(v84 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v80, v83, v82);
    sub_23FC1046C(v78, v85, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 32));
    v86 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v129 + 808) = v86;
    *v86 = v129;
    v86[1] = sub_23FC82CEC;
    sub_23FC8A0CC();
    return sub_23FC7C730(v87);
  }
  if (v5 == *MEMORY[0x24BE56B28])
  {
    sub_23FC8A808();
    v36 = *(_QWORD *)(v129 + 440);
    sub_23FC7597C(v37);
    sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32));
    v38 = sub_23FD741D4();
    *(_QWORD *)(v129 + 696) = v38;
    v39 = *(_QWORD *)(v38 + 16);
    *(_QWORD *)(v129 + 704) = v39;
    if (v39)
    {
      v40 = *(_QWORD *)(sub_23FD73340() - 8);
      v41 = *(_DWORD *)(v40 + 80);
      *(_DWORD *)(v129 + 848) = v41;
      *(_QWORD *)(v129 + 760) = *(_QWORD *)(v40 + 72);
      *(_QWORD *)(v129 + 776) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v129 + 768) = 0;
      v42 = *(_QWORD *)(v129 + 88);
      v43 = v38 + ((v41 + 32) & ~(unint64_t)v41);
      v44 = (int8x16_t *)sub_23FC8A864();
      *(_QWORD *)(v129 + 784) = v44;
      v45 = *(int8x16_t *)(v129 + 72);
      v44[1].i64[0] = (uint64_t)v1;
      v44[1].i64[1] = v43;
      v44[2] = vextq_s8(v45, v45, 8uLL);
      v44[3].i64[0] = v42;
      v46 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v129 + 792) = v46;
      sub_23FBFD684(&qword_256F5F100);
      *v46 = v129;
      v46[1] = sub_23FC8281C;
LABEL_11:
      sub_23FC8A0CC();
      return sub_23FD72464();
    }
    sub_23FC15A24();
    v107 = *(_QWORD *)(v129 + 656);
    v108 = *(_QWORD *)(v129 + 440);
    v109 = *(_QWORD *)(v129 + 64);
    sub_23FD741C8();
    sub_23FD74048();
    sub_23FD73610();
    sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8));
    sub_23FC1046C(v109, *MEMORY[0x24BE56B48], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 104));
    sub_23FC8A71C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v47, v48, v49, v50);
LABEL_13:
    sub_23FC8A170();
    swift_task_dealloc();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC5BFF0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5C528();
    sub_23FC8A0CC();
    __asm { BR              X0 }
  }
  if (v5 == *MEMORY[0x24BE56AF0])
  {
    v52 = *(_QWORD *)(v129 + 632);
    sub_23FC7597C(*(_QWORD *)(v129 + 656));
    sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32));
    v53 = sub_23FD73190();
    v54 = *(_QWORD *)(v53 + 16);
    if (v54)
    {
      v123 = *(_QWORD *)(v129 + 592);
      v128 = *(_QWORD *)(v129 + 536);
      v55 = *(_QWORD *)(sub_23FD734A8() - 8);
      v56 = v53 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      v57 = *(_QWORD *)(v55 + 72);
      v58 = (_QWORD *)MEMORY[0x24BEE4B00];
      while (1)
      {
        v125 = v54;
        v59 = *(_QWORD *)(v129 + 616);
        v60 = *(_QWORD *)(v129 + 584);
        v61 = *(_QWORD *)(v129 + 576);
        v62 = *(_QWORD *)(v129 + 568);
        v127 = *(_QWORD *)(v129 + 528);
        sub_23FD73178();
        v63 = sub_23FD71540();
        v65 = v64;
        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v59, v60);
        v124 = v56;
        sub_23FD7349C();
        v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32);
        v66(v62, v61, v127);
        swift_isUniquelyReferenced_nonNull_native();
        v130[0] = (uint64_t)v58;
        result = sub_23FC8A72C();
        if (__OFADD__(v58[2], (v67 & 1) == 0))
          break;
        v68 = result;
        v69 = v67;
        sub_23FBFD684(&qword_256F5EC10);
        v58 = (_QWORD *)v130[0];
        if ((sub_23FD75200() & 1) != 0)
        {
          v70 = sub_23FC8A72C();
          if ((v69 & 1) != (v71 & 1))
          {
            sub_23FC8A0CC();
            return sub_23FD753C8();
          }
          v68 = v70;
        }
        v72 = *(_QWORD *)(v129 + 568);
        v73 = *(_QWORD *)(v129 + 528);
        if ((v69 & 1) != 0)
        {
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v128 + 40))(*(_QWORD *)(v130[0] + 56) + *(_QWORD *)(v128 + 72) * v68, v72, v73);
        }
        else
        {
          *(_QWORD *)(v130[0] + 8 * (v68 >> 6) + 64) |= 1 << v68;
          v74 = (uint64_t *)(v58[6] + 16 * v68);
          *v74 = v63;
          v74[1] = v65;
          result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v66)(v58[7] + *(_QWORD *)(v128 + 72) * v68, v72, v73);
          v75 = v58[2];
          v76 = __OFADD__(v75, 1);
          v77 = v75 + 1;
          if (v76)
            goto LABEL_41;
          v58[2] = v77;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v56 = v124 + v57;
        --v54;
        if (v125 == 1)
          goto LABEL_35;
      }
      __break(1u);
LABEL_41:
      __break(1u);
    }
    else
    {
      v58 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_35:
      *(_QWORD *)(v129 + 672) = v58;
      sub_23FC15A24();
      v118 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v129 + 680) = v118;
      *v118 = v129;
      v118[1] = sub_23FC820B4;
      sub_23FC8A0CC();
      return sub_23FC7BD7C(v119);
    }
  }
  else
  {
    if (v5 == *MEMORY[0x24BE56B50])
    {
      v89 = *(_QWORD *)(v129 + 664);
      sub_23FC8A808();
      v90 = *(_QWORD *)(v129 + 480);
      v91 = *(_QWORD *)(v129 + 464);
      v92 = *(_QWORD *)(v129 + 352);
      v93 = *(_QWORD *)(v129 + 336);
      sub_23FC8A6CC(v94);
      sub_23FC092BC(v92, v89, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 32));
      sub_23FC5E1C8();
      v95 = sub_23FC5C0F8();
      sub_23FC595C4(v90, *(uint64_t (**)(uint64_t, uint64_t))(v91 + 8));
      LOBYTE(v90) = sub_23FC83BE4(v95);
      sub_23FC1002C();
      v96 = *(_QWORD *)(v129 + 352);
      if ((v90 & 1) != 0)
      {
        v97 = *(_QWORD *)(v129 + 336);
        sub_23FD724D0();
        sub_23FC7A5B4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 16));
        v98 = sub_23FD72BE4();
        v99 = sub_23FD74F6C();
        v100 = os_log_type_enabled(v98, v99);
        v102 = *(_QWORD *)(v129 + 256);
        v101 = *(_QWORD *)(v129 + 264);
        v103 = *(_QWORD *)(v129 + 248);
        if (v100)
        {
          v104 = (uint8_t *)sub_23FBFEFF4();
          v130[0] = sub_23FBFEFF4();
          *(_DWORD *)v104 = 136315138;
          sub_23FBFEE2C(&qword_256F5F2D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE55670], MEMORY[0x24BE55680]);
          v105 = sub_23FD75344();
          *(_QWORD *)(v129 + 24) = sub_23FC9DC40(v105, v106, v130);
          sub_23FD75044();
          swift_bridgeObjectRelease();
          sub_23FC8A76C();
          _os_log_impl(&dword_23FBF8000, v98, v99, "Executor: Skipping undo/redo execution due to safety mode being enabled: %s", v104, 0xCu);
          swift_arrayDestroy();
          sub_23FBFEFA0();
        }
        sub_23FC8A76C();

        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
        sub_23FC8A554();
      }
      v120 = *(_QWORD *)(v129 + 80);
      v121 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v129 + 824) = v121;
      v121[2] = v1;
      v121[3] = v96;
      v121[4] = v120;
      v122 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v129 + 832) = v122;
      *v122 = v129;
      v122[1] = sub_23FC830A8;
      goto LABEL_11;
    }
    v110 = *(_QWORD *)(v129 + 664);
    v111 = *(_QWORD *)(v129 + 656);
    if (v5 != *MEMORY[0x24BE56C20])
    {
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v129 + 64), 1, 1, *(_QWORD *)(v129 + 648));
      sub_23FBFF204(v110, *(uint64_t (**)(uint64_t, uint64_t))(v111 + 8));
      goto LABEL_13;
    }
    v113 = *(_QWORD *)(v129 + 312);
    v112 = *(_QWORD *)(v129 + 320);
    sub_23FBFF204(*(_QWORD *)(v129 + 664), *(uint64_t (**)(uint64_t, uint64_t))(v111 + 96));
    sub_23FC092BC(v112, v110, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 32));
    sub_23FD73934();
    sub_23FD73940();
    v114 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v129 + 712) = v114;
    *v114 = v129;
    v114[1] = sub_23FC822A8;
    sub_23FC8A0CC();
    return sub_23FC7D268(v115, v116, v117);
  }
  return result;
}

uint64_t sub_23FC820B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 688) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FC8210C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23FC8A104();
  v1 = v0[81];
  v2 = v0[8];
  sub_23FC090C8(v0[79]);
  sub_23FC89E84(v2, 1, 1, v1);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v3 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC89F70(v3);
}

uint64_t sub_23FC821E4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC8A0E8();
  sub_23FC090C8(*(_QWORD *)(v0 + 632));
  sub_23FC89DBC(*(_QWORD *)(v0 + 688));
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v1 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC89F54(v1);
}

uint64_t sub_23FC822A8()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  sub_23FC75AD4();
  sub_23FC75EF0();
  sub_23FC75274(v2);
  v1[90] = v0;
  swift_task_dealloc();
  v3 = v1[69];
  v4 = v1[67];
  sub_23FC090C8(v1[36]);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  if (!v0)
    v1[91] = (uint64_t)v5;
  sub_23FBFF204(v3, v5);
  sub_23FC5A9A8();
  return sub_23FC75184();
}

uint64_t sub_23FC82328()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  sub_23FC8A104();
  v13 = (void (*)(uint64_t, uint64_t))v0[91];
  v14 = v0[82];
  v1 = v0[70];
  v2 = v0[66];
  v3 = v0[40];
  v11 = v0[39];
  v12 = v0[38];
  v4 = v0[8];
  sub_23FBFF1E4(v0[68], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[67] + 16));
  sub_23FD73D84();
  sub_23FD73F04();
  sub_23FC58AC8();
  sub_23FD73928();
  sub_23FD73868();
  v13(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v12);
  sub_23FC1046C(v4, *MEMORY[0x24BE56BC8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 104));
  sub_23FC8A71C();
  sub_23FC89E84(v5, v6, v7, v8);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v9 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC89F70(v9);
}

uint64_t sub_23FC8249C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC8A0E8();
  sub_23FC090C8(*(_QWORD *)(v0 + 312));
  sub_23FC89DBC(*(_QWORD *)(v0 + 720));
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v1 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC89F54(v1);
}

uint64_t sub_23FC8255C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 752) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FC825B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;

  sub_23FC8A104();
  sub_23FC8A65C();
  v2 = v1[65];
  v14 = v1[62];
  v15 = v1[61];
  v3 = v1[29];
  v4 = v1[30];
  v5 = v1[26];
  v6 = v1[27];
  v7 = v1[23];
  sub_23FC8A7C4();
  v8 = sub_23FC8A704();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v8, v9, v10, v7);
  sub_23FD73C58();
  sub_23FC092BC(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  sub_23FD73D84();
  sub_23FD73F04();
  sub_23FC58AC8();
  sub_23FD73BEC();
  sub_23FD734E4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v2, v15);
  sub_23FC8A4E0(v11, *MEMORY[0x24BE56B98]);
  sub_23FC89E84(v0, 0, 1, v2);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v12 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC89F70(v12);
}

uint64_t sub_23FC8275C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC8A0E8();
  sub_23FC090C8(*(_QWORD *)(v0 + 496));
  sub_23FC89DBC(*(_QWORD *)(v0 + 752));
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v1 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC89F54(v1);
}

uint64_t sub_23FC8281C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_23FC75274(&v4);
  *(_QWORD *)(v2 + 800) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_23FC1002C();
  }
  sub_23FC090C0();
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FC8289C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int8x16_t *v21;
  int8x16_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23FC8A104();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  sub_23FC953D4((uint64_t)sub_23FC89310, v3, v1, v0 + 48);
  sub_23FC15A24();
  sub_23FC5B2F4();
  sub_23FD7310C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v5 = *(_QWORD *)(v0 + 776);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23FC8A84C();
    v5 = v24;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_23FC8A84C();
    v5 = v25;
  }
  v7 = *(_QWORD *)(v0 + 704);
  v9 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 768) + 1;
  *(_QWORD *)(v5 + 16) = v6 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v5+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v6, v8, v10);
  if (v11 == v7)
  {
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v0 + 648);
    v14 = *(_QWORD *)(v0 + 440);
    v13 = *(_QWORD *)(v0 + 448);
    v26 = *(_QWORD *)(v0 + 432);
    v27 = *(_QWORD *)(v0 + 656);
    v15 = *(_QWORD *)(v0 + 64);
    sub_23FD741C8();
    sub_23FD74048();
    sub_23FD73610();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v26);
    sub_23FC06160(v15, *MEMORY[0x24BE56B48], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 104));
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v15, 0, 1, v12);
    sub_23FC8A170();
    swift_task_dealloc();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5BCA0();
    sub_23FC5B980();
    sub_23FC75A54();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    sub_23FC5CDA8();
    v16 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC89F70(v16);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 768) + 1;
    *(_QWORD *)(v0 + 776) = v5;
    *(_QWORD *)(v0 + 768) = v18;
    v19 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 696)
        + ((*(unsigned __int8 *)(v0 + 848) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 848))
        + *(_QWORD *)(v0 + 760) * v18;
    v21 = (int8x16_t *)sub_23FC8A864();
    *(_QWORD *)(v0 + 784) = v21;
    v22 = *(int8x16_t *)(v0 + 72);
    v21[1].i64[0] = v0 + 16;
    v21[1].i64[1] = v20;
    v21[2] = vextq_s8(v22, v22, 8uLL);
    v21[3].i64[0] = v19;
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 792) = v23;
    sub_23FBFD684(&qword_256F5F100);
    *v23 = v0;
    v23[1] = sub_23FC8281C;
    return sub_23FD72464();
  }
}

uint64_t sub_23FC82C2C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC8A0E8();
  sub_23FC090C8(*(_QWORD *)(v0 + 440));
  sub_23FC89DBC(*(_QWORD *)(v0 + 800));
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v1 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC89F54(v1);
}

uint64_t sub_23FC82CEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 816) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC82D44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23FC8A104();
  v26 = v0[82];
  v27 = v0[81];
  v1 = v0[64];
  v20 = v0[62];
  v22 = v0[61];
  v23 = v0[52];
  v24 = v0[51];
  v25 = v0[53];
  v18 = v0[50];
  v19 = v0[49];
  v21 = v0[48];
  v2 = v0[25];
  v3 = v0[23];
  v4 = v0[19];
  v5 = v0[16];
  v15 = v0[18];
  v16 = v0[17];
  v6 = v0[14];
  v7 = v0[15];
  v8 = v0[13];
  v17 = v0[8];
  sub_23FD74048();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, 0, 1, v3);
  sub_23FD73C58();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE52270], v6);
  sub_23FD7166C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v4, *MEMORY[0x24BE53320], v16);
  v9 = sub_23FD71C6C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v8, 1, 1, v9);
  sub_23FD73A00();
  sub_23FD73D84();
  sub_23FD73F04();
  sub_23FC58AC8();
  sub_23FD73BEC();
  sub_23FD734E4();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v22);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v17, *MEMORY[0x24BE56B98], v27);
  v10 = sub_23FC8A704();
  sub_23FC89E84(v10, v11, v12, v27);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v13 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC89F70(v13);
}

uint64_t sub_23FC82FC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23FC8A0E8();
  v2 = v0[52];
  v1 = v0[53];
  v3 = v0[49];
  sub_23FC090C8(v0[62]);
  sub_23FC7529C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC89DBC(v0[102]);
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v4 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC89F54(v4);
}

uint64_t sub_23FC830A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 840) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0906C();
}

uint64_t sub_23FC83100()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FC8A104();
  sub_23FC8A65C();
  v13 = v1[44];
  v14 = v1[42];
  v15 = v1[41];
  v3 = v1[28];
  v2 = v1[29];
  v5 = v1[26];
  v4 = v1[27];
  v6 = v1[23];
  sub_23FC8A7C4();
  v7 = sub_23FC8A704();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v7, v8, v9, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v5);
  sub_23FD73D84();
  sub_23FD73F04();
  sub_23FC58AC8();
  sub_23FD73568();
  sub_23FC5A9A8();
  sub_23FD734E4();
  sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  sub_23FC8A4E0(v10, *MEMORY[0x24BE56B98]);
  sub_23FC89E84(v0, 0, 1, v13);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  sub_23FC5CDF0();
  v11 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC89F70(v11);
}

uint64_t sub_23FC83280()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FC8A0E8();
  sub_23FC090C8(*(_QWORD *)(v0 + 336));
  sub_23FC89DBC(*(_QWORD *)(v0 + 840));
  sub_23FC090D0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC090C0();
  sub_23FC5BCA0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v1 = (uint64_t (*)(void))sub_23FC75634();
  return sub_23FC89F54(v1);
}

uint64_t sub_23FC83340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  int v56;
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v100 = a4;
  v112 = a2;
  v110 = a1;
  v114 = a5;
  v6 = sub_23FD740CC();
  v107 = *(_QWORD *)(v6 - 8);
  v108 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v97 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FD72BF0();
  v102 = *(_QWORD *)(v9 - 8);
  v103 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v109 = (char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FBFD684(qword_254346A10);
  MEMORY[0x24BDAC7A8](v12, v13);
  v96 = (char *)v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_23FD73514();
  v99 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101, v15);
  v98 = (char *)v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FBFD684(&qword_256F5EAE8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v94 = (uint64_t)v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_23FD71C84();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93, v20);
  v22 = (char *)v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23FD73A0C();
  v105 = *(uint8_t **)(v23 - 8);
  v106 = v23;
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v95 = (char *)v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v104 = (char *)v90 - v28;
  v29 = sub_23FBFD684(&qword_256F5D960);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23FD7409C();
  v34 = *(_QWORD *)(v33 - 8);
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v38 = (char *)v90 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)v90 - v40;
  v42 = sub_23FD7157C();
  v43 = *(_QWORD *)(v42 - 8);
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v91 = (char *)v90 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v45, v47);
  v90[1] = (char *)v90 - v49;
  MEMORY[0x24BDAC7A8](v48, v50);
  v52 = (char *)v90 - v51;
  v115 = a3;
  sub_23FD740A8();
  sub_23FC84770((uint64_t)v32);
  v113 = v34;
  v53 = *(void (**)(char *, uint64_t))(v34 + 8);
  v54 = v41;
  v55 = v33;
  v53(v54, v33);
  v56 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v32, 1, v42);
  v111 = v53;
  if (v56 == 1)
  {
    sub_23FBFEF74((uint64_t)v32, &qword_256F5D960);
    sub_23FD724D0();
    v57 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v97, v115, v108);
    v58 = sub_23FD72BE4();
    v59 = sub_23FD74F54();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      v117 = v106;
      *(_DWORD *)v60 = 136315138;
      v105 = v60 + 4;
      sub_23FD740A8();
      sub_23FBFEE2C((unint64_t *)&qword_256F5F2B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE56C90], MEMORY[0x24BE56CA0]);
      v61 = sub_23FD75344();
      v62 = v57;
      v64 = v63;
      v65 = (uint64_t (*)(char *, uint64_t))v111;
      v111(v38, v55);
      v116 = sub_23FC9DC40(v61, v64, &v117);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v62, v108);
      _os_log_impl(&dword_23FBF8000, v58, v59, "Unable to find statement ID for event: %s", v60, 0xCu);
      v66 = v106;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v66, -1, -1);
      MEMORY[0x2426798D8](v60, -1, -1);

      (*(void (**)(char *, uint64_t))(v102 + 8))(v109, v103);
      v67 = v113;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v107 + 8))(v57, v108);

      (*(void (**)(char *, uint64_t))(v102 + 8))(v109, v103);
      v67 = v113;
      v65 = (uint64_t (*)(char *, uint64_t))v111;
    }
    v68 = v112;
    v84 = v110;
    type metadata accessor for RuntimeError();
    sub_23FBFEE2C(&qword_256F5EAC0, (uint64_t (*)(uint64_t))type metadata accessor for RuntimeError, (uint64_t)&unk_23FD78138);
    swift_allocError();
    *v85 = v84;
    v85[1] = v68;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_23FD71510();
    v86 = *MEMORY[0x24BE55030];
    v87 = sub_23FD731A8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 104))(v38, v86, v87);
    v88 = *MEMORY[0x24BE54F38];
    v89 = sub_23FD7313C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 104))(v38, v88, v89);
    (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v38, *MEMORY[0x24BE56B00], v55);
    sub_23FD74018();
    return v65(v38, v55);
  }
  else
  {
    v90[0] = v43;
    v69 = v52;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v52, v32, v42);
    v70 = v112;
    swift_bridgeObjectRetain();
    MEMORY[0x242675A80](v110, v70);
    v71 = *MEMORY[0x24BE53590];
    v72 = sub_23FD71CD8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 104))(v22, v71, v72);
    v73 = *MEMORY[0x24BE53360];
    v74 = sub_23FD71C90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v22, v73, v74);
    (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v22, *MEMORY[0x24BE532D0], v93);
    v75 = sub_23FD71C6C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v94, 1, 1, v75);
    v76 = v104;
    sub_23FD73A00();
    v77 = (uint64_t)v96;
    sub_23FD74048();
    v78 = sub_23FD71474();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v77, 0, 1, v78);
    (*((void (**)(char *, char *, uint64_t))v105 + 2))(v95, v76, v106);
    sub_23FD73D84();
    sub_23FD73F04();
    swift_release();
    v79 = v90[0];
    (*(void (**)(char *, char *, uint64_t))(v90[0] + 16))(v91, v69, v42);
    v80 = v98;
    sub_23FD734E4();
    v81 = v99;
    v82 = v101;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v38, v80, v101);
    (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v38, *MEMORY[0x24BE56B98], v55);
    sub_23FD74018();
    v111(v38, v55);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
    (*((void (**)(char *, uint64_t))v105 + 1))(v104, v106);
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v69, v42);
  }
}

uint64_t sub_23FC83BE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  char v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v2 = sub_23FD73D0C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD74210();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v44 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD73040();
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v39 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD7409C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
    goto LABEL_14;
  v42 = v8;
  v43 = v7;
  v36 = v6;
  v37 = v3;
  v38 = v2;
  v20 = *(_QWORD *)(sub_23FD740CC() - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = *MEMORY[0x24BE56C88];
  v23 = *MEMORY[0x24BE56AD0];
  v24 = *MEMORY[0x24BE56C70];
  v25 = *MEMORY[0x24BE56B90];
  v26 = *(_QWORD *)(v20 + 72);
  v45 = swift_bridgeObjectRetain();
  v27 = v45 + v21 + v26 * (v19 - 1);
  v28 = -v26;
  while (1)
  {
    sub_23FD740A8();
    v29 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v18, v14);
    if (v29 == v22)
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
      v31 = v42;
      v30 = v43;
      v32 = v44;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v44, v18, v43);
      v33 = sub_23FD741EC();
LABEL_12:
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
      swift_bridgeObjectRelease();
      return v34 & 1;
    }
    if (v29 == v23)
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
      v32 = v39;
      v31 = v40;
      v30 = v41;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v39, v18, v41);
      v33 = sub_23FD73034();
      goto LABEL_12;
    }
    if (v29 == v24)
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
      v32 = v36;
      v31 = v37;
      v30 = v38;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v18, v38);
      v33 = sub_23FD73CC4();
      goto LABEL_12;
    }
    if (v29 == v25)
      break;
    --v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    v27 += v28;
    if (!v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
LABEL_14:
  v34 = 0;
  return v34 & 1;
}

uint64_t sub_23FC83ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v7 = sub_23FD73E08();
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC83F38()
{
  uint64_t *v0;
  uint64_t updated;
  uint64_t v2;
  _QWORD *v3;

  sub_23FC75AD4();
  sub_23FD73D6C();
  updated = type metadata accessor for EventScopedProgressUpdateHandler(0);
  sub_23FC8A7E4(updated, (uint64_t)&off_25100F698);
  v2 = sub_23FC5F584();
  sub_23FC8A3B4(v2);
  sub_23FC8A6A4();
  v3 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23FC83FD8;
  return sub_23FC7B550(v0[7], v0[9], v0[15], (uint64_t)(v0 + 2));
}

uint64_t sub_23FC83FD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  sub_23FC75AD4();
  sub_23FC75EF0();
  v2 = v1[15];
  v3 = v1[14];
  sub_23FC75274(v4);
  v1[17] = v0;
  swift_task_dealloc();
  sub_23FC595C4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (v0)
  {
    sub_23FC5A9A8();
    return sub_23FC75184();
  }
  else
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)(v1 + 2));
    sub_23FC090D0();
    v6 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC8A2D0(v6);
  }
}

uint64_t sub_23FC84048()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC8407C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = sub_23FD73E08();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC840E4()
{
  uint64_t *v0;
  uint64_t updated;
  uint64_t v2;
  _QWORD *v3;

  sub_23FC75AD4();
  sub_23FD73D6C();
  updated = type metadata accessor for EventScopedProgressUpdateHandler(0);
  sub_23FC8A7E4(updated, (uint64_t)&off_25100F688);
  v2 = sub_23FC5F584();
  sub_23FC8A3B4(v2);
  sub_23FC8A6A4();
  v3 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23FC84180;
  return sub_23FC7B918(v0[8], v0[14], (uint64_t)(v0 + 2));
}

uint64_t sub_23FC84180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  sub_23FC75EF0();
  sub_23FC75274(v5);
  v3[16] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23FC090C8(v3[13]);
    sub_23FC5A9A8();
    return sub_23FC0906C();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v3[13] + 8))(v3[14], v3[12]);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)(v3 + 2));
    sub_23FC5A574();
    return sub_23FC8A5E0(a1, *(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_23FC8421C()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  sub_23FC090D0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FC84258(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v2 = sub_23FD7157C();
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_23FD74198();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FD74798();
  MEMORY[0x24BDAC7A8](v9, v10);
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v13 = type metadata accessor for RetrievedValue(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1 + *(int *)(v13 + 20), v4);
  sub_23FD73D84();
  sub_23FD73F04();
  swift_release();
  return sub_23FD74180();
}

uint64_t sub_23FC843A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a2;
  v38 = a3;
  v37 = sub_23FD7157C();
  v35 = *(_QWORD *)(v37 - 8);
  v5 = MEMORY[0x24BDAC7A8](v37, v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v33 - v9;
  v11 = sub_23FD7409C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FD73C7C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v15, v11) != *MEMORY[0x24BE56AF8])
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    v25 = v38;
LABEL_6:
    v31 = sub_23FBFD684(&qword_256F5F2C0);
    v29 = v25;
    v30 = 1;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, v30, 1, v31);
  }
  v34 = a1;
  (*(void (**)(char *, uint64_t))(v12 + 96))(v15, v11);
  v21 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v21(v20, v15, v16);
  sub_23FD73BEC();
  sub_23FD736B8();
  v22 = sub_23FD71558();
  v23 = *(void (**)(char *, uint64_t))(v35 + 8);
  v24 = v37;
  v23(v7, v37);
  v23(v10, v24);
  v25 = v38;
  if ((v22 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    goto LABEL_6;
  }
  v26 = sub_23FBFD684(&qword_256F5F2C0);
  v27 = v25 + *(int *)(v26 + 48);
  v28 = sub_23FD740CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v34, v28);
  v21((char *)v27, v20, v16);
  v29 = v25;
  v30 = 0;
  v31 = v26;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, v30, 1, v31);
}

uint64_t sub_23FC84618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_23FD73E08();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FC8467C()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23FD73D6C();
  v1 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23FC846DC;
  return sub_23FC7C838(v0[2], v0[4], v0[8]);
}

uint64_t sub_23FC846DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23FC75AD4();
  sub_23FC75EF0();
  v3 = v2[8];
  v4 = v2[7];
  sub_23FC75274(v5);
  v2[10] = v0;
  swift_task_dealloc();
  sub_23FC595C4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (v0)
  {
    sub_23FC5A9A8();
    return sub_23FC75184();
  }
  else
  {
    swift_task_dealloc();
    return sub_23FC8A2D0(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23FC84744()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FC84770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v1 = sub_23FD7394C();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v38 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FD73598();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD736D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FD741E0();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23FD73C7C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23FD7409C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v46, v21);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v21);
  if (v26 == *MEMORY[0x24BE56AF8])
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v25, v16);
    v27 = v47;
    sub_23FD73BEC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v28 = sub_23FD7157C();
    v29 = v27;
  }
  else
  {
    v30 = v47;
    if (v26 == *MEMORY[0x24BE56B18])
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v25, v7);
      sub_23FD736C4();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    if (v26 == *MEMORY[0x24BE56B28])
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
      v33 = v44;
      v32 = v45;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v15, v25, v45);
      sub_23FD741C8();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v32);
    }
    else
    {
      if (v26 == *MEMORY[0x24BE56B50])
      {
        (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
        v34 = v41;
        v35 = v42;
        v36 = v43;
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v25, v43);
        sub_23FD73568();
      }
      else
      {
        if (v26 != *MEMORY[0x24BE56C20])
        {
          v37 = sub_23FD7157C();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v30, 1, 1, v37);
          return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
        }
        (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
        v34 = v38;
        v35 = v39;
        v36 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v25, v40);
        sub_23FD73928();
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
    }
    v28 = sub_23FD7157C();
    v29 = v30;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, 0, 1, v28);
}

void sub_23FC84B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t updated;
  _QWORD *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  _QWORD v18[5];
  _QWORD v19[5];

  sub_23FC061F0();
  v2 = v1;
  v3 = sub_23FD73EC8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD73EF8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  sub_23FBFF180();
  v13 = v12 - v11;
  updated = type metadata accessor for EventScopedProgressUpdateHandler(0);
  sub_23FC60768(v0 + *(int *)(updated + 20), (uint64_t)v19);
  v15 = sub_23FBFDE40(v19, v19[3]);
  sub_23FD73EB0();
  sub_23FC8A29C();
  v16(v7, v2);
  sub_23FC06160((uint64_t)v7, *MEMORY[0x24BE56938], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  sub_23FD7403C();
  sub_23FC595C4((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v17 = *(_QWORD *)(*v15
                  + OBJC_IVAR____TtC23IntelligenceFlowRuntime34SessionCoordinatorResponseCallback_commandContinuation);
  v18[2] = *v15;
  v18[3] = v13;
  sub_23FCBA794((void (*)(uint64_t *__return_ptr, uint64_t))sub_23FC893C8, (uint64_t)v18, v17);
  sub_23FBFF204(v13, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v19);
  sub_23FC060D4();
}

void sub_23FC84C70()
{
  uint64_t v0;

  sub_23FC8A1CC();
  sub_23FD71474();
  sub_23FC8A714(&qword_256F65DB0, v0, MEMORY[0x24BDCEA88]);
  sub_23FC8A1B4();
  sub_23FC8A1A4();
  sub_23FC17830();
}

void sub_23FC84CD4()
{
  uint64_t v0;

  sub_23FC8A1CC();
  sub_23FD7157C();
  sub_23FC8A714(&qword_256F5DAC8, v0, MEMORY[0x24BE52158]);
  sub_23FC8A1B4();
  sub_23FC8A1A4();
  sub_23FC17830();
}

unint64_t sub_23FC84D38(uint64_t a1)
{
  uint64_t v2;

  sub_23FC8A344();
  FeedbackLearning.CandidateParameter.hash(into:)();
  v2 = sub_23FC06168();
  return sub_23FC8509C(a1, v2);
}

unint64_t sub_23FC84D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23FC8A344();
  sub_23FC8A694();
  v4 = sub_23FC06168();
  return sub_23FC85428(a1, a2, v4);
}

void sub_23FC84DD0()
{
  uint64_t v0;

  sub_23FC8A1CC();
  sub_23FD72DB8();
  sub_23FC8A714(&qword_256F5E5D8, v0, MEMORY[0x24BE54670]);
  sub_23FC8A1B4();
  sub_23FC8A1A4();
  sub_23FC17830();
}

void sub_23FC84E34(uint64_t a1)
{
  sub_23FC84E4C(a1, (uint64_t)type metadata accessor for SessionClientID);
}

void sub_23FC84E40(uint64_t a1)
{
  sub_23FC84E4C(a1, (uint64_t)type metadata accessor for SessionID);
}

void sub_23FC84E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23FC8A344();
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23FD74BC4();
  v4 = sub_23FC06168();
  sub_23FC85508(a1, v4, a2, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
}

unint64_t sub_23FC84EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23FC8A344();
  swift_bridgeObjectRetain();
  sub_23FC8A694();
  swift_bridgeObjectRelease();
  v4 = sub_23FC06168();
  return sub_23FC85428(a1, a2, v4);
}

void sub_23FC84F3C()
{
  uint64_t v0;

  sub_23FC8A1CC();
  sub_23FD71E64();
  sub_23FC8A714(&qword_254346B48, v0, MEMORY[0x24BE53808]);
  sub_23FC8A1B4();
  sub_23FC8A1A4();
  sub_23FC17830();
}

void sub_23FC84FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  _QWORD v20[4];

  sub_23FC061F0();
  v20[2] = v1;
  v20[3] = v2;
  v3 = v0;
  v5 = v4;
  v20[0] = v6;
  v20[1] = v7;
  v8 = sub_23FC8A7BC(v6, v4, v7);
  v9 = *(_QWORD *)(v8 - 8);
  sub_23FC8A8A0();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  v14 = -1 << *(_BYTE *)(v3 + 32);
  v15 = v5 & ~v14;
  if (((*(_QWORD *)(v3 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v16 = ~v14;
    v17 = *(_QWORD *)(v9 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v18(v13, *(_QWORD *)(v3 + 48) + v17 * v15, v8);
      sub_23FC8A5F4();
      v19 = sub_23FD74BDC();
      sub_23FC8A86C(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
      if ((v19 & 1) != 0)
        break;
      v15 = (v15 + 1) & v16;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  sub_23FC060D4();
}

unint64_t sub_23FC8509C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  int EnumCaseMultiPayload;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v5 = sub_23FD7157C();
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v42 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_23FBFD684(&qword_256F5F378);
  MEMORY[0x24BDAC7A8](v52, v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v45 = (uint64_t *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  MEMORY[0x24BDAC7A8](v16, v17);
  v21 = (char *)&v41 - v20;
  v22 = v2 + 64;
  v23 = -1 << *(_BYTE *)(v2 + 32);
  v24 = a2 & ~v23;
  if (((*(_QWORD *)(v2 + 64 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    return v24;
  v44 = v19;
  v50 = ~v23;
  v51 = *(_QWORD *)(v18 + 72);
  v48 = a1;
  v49 = v2;
  v43 = v2 + 64;
  while (1)
  {
    sub_23FC893E0(*(_QWORD *)(v2 + 48) + v51 * v24, (uint64_t)v21, type metadata accessor for FeedbackLearning.CandidateParameter);
    v25 = &v10[*(int *)(v52 + 48)];
    sub_23FC893E0((uint64_t)v21, (uint64_t)v10, type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_23FC893E0(a1, (uint64_t)v25, type metadata accessor for FeedbackLearning.CandidateParameter);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
      break;
    v34 = v44;
    sub_23FC893E0((uint64_t)v10, v44, type metadata accessor for FeedbackLearning.CandidateParameter);
    if (!swift_getEnumCaseMultiPayload())
    {
      v36 = v46;
      v35 = v47;
      v37 = v42;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v42, v25, v47);
      v38 = sub_23FD71558();
      v39 = *(void (**)(char *, uint64_t))(v36 + 8);
      v39(v37, v35);
      v39((char *)v34, v35);
      a1 = v48;
      v2 = v49;
      v22 = v43;
      if ((v38 & 1) != 0)
        goto LABEL_23;
      goto LABEL_19;
    }
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v34, v47);
    v22 = v43;
LABEL_17:
    sub_23FBFEF74((uint64_t)v10, &qword_256F5F378);
LABEL_20:
    sub_23FBFEF18((uint64_t)v21, type metadata accessor for FeedbackLearning.CandidateParameter);
    v24 = (v24 + 1) & v50;
    if (((*(_QWORD *)(v22 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      return v24;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      goto LABEL_23;
    goto LABEL_17;
  }
  v27 = v45;
  sub_23FC893E0((uint64_t)v10, (uint64_t)v45, type metadata accessor for FeedbackLearning.CandidateParameter);
  v29 = *v27;
  v28 = v27[1];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    a1 = v48;
    v2 = v49;
    goto LABEL_17;
  }
  v30 = *(_QWORD *)v25;
  v31 = *((_QWORD *)v25 + 1);
  if (v29 != v30 || v28 != v31)
  {
    v33 = sub_23FD75380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v48;
    v2 = v49;
    if ((v33 & 1) != 0)
      goto LABEL_23;
LABEL_19:
    sub_23FBFEF18((uint64_t)v10, type metadata accessor for FeedbackLearning.CandidateParameter);
    goto LABEL_20;
  }
  swift_bridgeObjectRelease_n();
LABEL_23:
  sub_23FBFEF18((uint64_t)v10, type metadata accessor for FeedbackLearning.CandidateParameter);
  sub_23FBFEF18((uint64_t)v21, type metadata accessor for FeedbackLearning.CandidateParameter);
  return v24;
}

unint64_t sub_23FC85428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23FD75380() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23FD75380() & 1) == 0);
    }
  }
  return v6;
}

void sub_23FC85508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  sub_23FC061F0();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = sub_23FC8A7BC(v27, v25, v23);
  MEMORY[0x24BDAC7A8](v28, v29);
  v32 = (char *)&a9 - v31;
  v33 = -1 << *(_BYTE *)(v20 + 32);
  v34 = v26 & ~v33;
  if (((*(_QWORD *)(v20 + 64 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0)
  {
    v35 = ~v33;
    v36 = *(_QWORD *)(v30 + 72);
    do
    {
      sub_23FC893E0(*(_QWORD *)(v20 + 48) + v36 * v34, (uint64_t)v32, v24);
      v37 = sub_23FD71450();
      sub_23FBFEF18((uint64_t)v32, v24);
      if ((v37 & 1) != 0)
        break;
      v34 = (v34 + 1) & v35;
    }
    while (((*(_QWORD *)(v20 + 64 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0);
  }
  sub_23FC060D4();
}

uint64_t sub_23FC855F0(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_23FC8560C()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  sub_23FBFF104();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC8A3CC();
  sub_23FBFEE2C(&qword_256F65DB0, v7, MEMORY[0x24BDCEA88]);
  sub_23FC8A840();
  sub_23FC8A568();
  sub_23FC8A1F8();
  if ((v9 & 1) != 0)
  {
    sub_23FC8A73C(v8);
    while (1)
    {
      sub_23FC8A2FC(v10);
      sub_23FBFEE2C(&qword_256F5E4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      sub_23FC8A488();
      sub_23FC8A440();
      if ((v2 & 1) != 0)
        break;
      v10 = sub_23FC8A31C();
      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v4 = v16;
        v12 = v17;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_23FC8A820();
    sub_23FC8A3F4();
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = v0;
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    sub_23FC8A420();
    v13 = sub_23FC8A370();
    sub_23FC8653C(v13, v14, v15);
    sub_23FC8A614();
    sub_23FC06160(v4, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
  }
  sub_23FC060D4();
}

void sub_23FC8571C()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  sub_23FD72DB8();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC8A3CC();
  sub_23FBFEE2C(&qword_256F5E5D8, v7, MEMORY[0x24BE54670]);
  sub_23FC8A840();
  sub_23FC8A568();
  sub_23FC8A1F8();
  if ((v9 & 1) != 0)
  {
    sub_23FC8A73C(v8);
    while (1)
    {
      sub_23FC8A2FC(v10);
      sub_23FBFEE2C((unint64_t *)&qword_256F5DDA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54678]);
      sub_23FC8A488();
      sub_23FC8A440();
      if ((v2 & 1) != 0)
        break;
      v10 = sub_23FC8A31C();
      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v4 = v16;
        v12 = v17;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_23FC8A820();
    sub_23FC8A3F4();
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = v0;
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    sub_23FC8A420();
    v13 = sub_23FC8A370();
    sub_23FC86790(v13, v14, v15);
    sub_23FC8A614();
    sub_23FC06160(v4, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
  }
  sub_23FC060D4();
}

uint64_t sub_23FC85830(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_23FD7544C();
  swift_bridgeObjectRetain();
  sub_23FD74C30();
  v8 = sub_23FD75470();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23FD75380() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23FD75380() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23FC869E4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23FC859DC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_23FD75440();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_23FC86B7C(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23FC85AD4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23FD74A2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, MEMORY[0x24BEBA5E0]);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23FBFEE2C(&qword_256F5F340, v11, MEMORY[0x24BEBA5F8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23FD74BB8();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23FBFEE2C(&qword_256F5F348, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA5E0], MEMORY[0x24BEBA600]);
      v21 = sub_23FD74BDC();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23FC86C9C((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

void sub_23FC85D30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23FC061F0();
  v44 = v1;
  v45 = v2;
  v4 = v3;
  v5 = v0;
  v8 = sub_23FC8A624(v6, v7);
  v43 = *(_QWORD *)(v8 - 8);
  sub_23FC8A8A0();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v39 - v11;
  v13 = (_QWORD *)*v0;
  sub_23FBFD684(v4);
  v14 = sub_23FD750C8();
  if (v13[2])
  {
    sub_23FC5F1D8();
    v42 = v13 + 7;
    sub_23FC5EC74();
    v17 = v16 & v15;
    sub_23FC8A814();
    v40 = v0;
    v41 = v18;
    v19 = v14 + 56;
    swift_retain();
    v20 = 0;
    if (!v17)
      goto LABEL_4;
LABEL_3:
    sub_23FC8A6EC();
    while (1)
    {
      v26 = v13;
      v27 = v13[6];
      v28 = *(_QWORD *)(v43 + 72);
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      v29(v12, v27 + v28 * v21, v8);
      sub_23FC8A5F4();
      sub_23FC8A790();
      sub_23FD74BB8();
      sub_23FC8A7D0();
      if (((v32 << v31) & ~*(_QWORD *)(v19 + 8 * v30)) == 0)
      {
        sub_23FC5B684();
        while (++v35 != v36 || (v34 & 1) == 0)
        {
          v37 = v35 == v36;
          if (v35 == v36)
            v35 = 0;
          v34 |= v37;
          if (*(_QWORD *)(v19 + 8 * v35) != -1)
          {
            sub_23FC5EBF4();
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      sub_23FC5EC1C();
LABEL_27:
      *(_QWORD *)(v19 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
      v29((char *)(*(_QWORD *)(v14 + 48) + v33 * v28), (uint64_t)v12, v8);
      ++*(_QWORD *)(v14 + 16);
      v13 = v26;
      if (v17)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v20, 1))
        goto LABEL_35;
      if (v20 + 1 >= v41)
        goto LABEL_29;
      sub_23FC8A7FC();
      v20 = v22;
      if (!v23)
      {
        v20 = v22 + 1;
        if (v22 + 1 >= v41)
          goto LABEL_29;
        if (!v42[v20])
        {
          v20 = v22 + 2;
          if (v22 + 2 >= v41)
            goto LABEL_29;
          if (!v42[v20])
          {
            if (v22 + 3 >= v41)
            {
LABEL_29:
              swift_release();
              v5 = v40;
              sub_23FC5F1D8();
              if (v38 > 63)
                sub_23FC855F0(0, (unint64_t)(v38 + 63) >> 6, v42);
              else
                *v42 = -1 << v38;
              v13[2] = 0;
              break;
            }
            sub_23FC8A7FC();
            if (!v25)
            {
              while (1)
              {
                v20 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_36;
                if (v20 >= v41)
                  goto LABEL_29;
                ++v24;
                if (v42[v20])
                  goto LABEL_17;
              }
            }
            v20 = v24;
          }
        }
      }
LABEL_17:
      sub_23FC8A6B4();
    }
  }
  swift_release();
  *v5 = v14;
  sub_23FC060D4();
}

uint64_t sub_23FC85FE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_23FBFD684(&qword_256F5F338);
  v3 = sub_23FD750C8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_23FD7544C();
      sub_23FD74C30();
      result = sub_23FD75470();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_23FC855F0(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23FC862BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_23FBFD684(&qword_256F5F330);
  result = sub_23FD750C8();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      result = sub_23FD75440();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_23FC855F0(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23FC8653C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23FD71474();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23FC85D30();
  }
  else
  {
    if (v12 > v11)
    {
      sub_23FC871FC();
      goto LABEL_12;
    }
    sub_23FC873E4();
  }
  v13 = *v3;
  sub_23FBFEE2C(&qword_256F65DB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_23FD74BB8();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_23FBFEE2C(&qword_256F5E4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_23FD74BDC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23FD753BC();
  __break(1u);
  return result;
}

uint64_t sub_23FC86790(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23FD72DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23FC85D30();
  }
  else
  {
    if (v12 > v11)
    {
      sub_23FC871FC();
      goto LABEL_12;
    }
    sub_23FC873E4();
  }
  v13 = *v3;
  sub_23FBFEE2C(&qword_256F5E5D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54670]);
  v14 = sub_23FD74BB8();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_23FBFEE2C((unint64_t *)&qword_256F5DDA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE54658], MEMORY[0x24BE54678]);
      v19 = sub_23FD74BDC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23FD753BC();
  __break(1u);
  return result;
}

void sub_23FC869E4(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23FC85FE4();
  }
  else
  {
    if (v10 > v9)
    {
      sub_23FC86EF0();
      goto LABEL_22;
    }
    sub_23FC87674();
  }
  v11 = *v4;
  sub_23FD7544C();
  sub_23FD74C30();
  v12 = sub_23FD75470();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a3 = v12 & ~v13;
  v14 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_23FD75380() & 1) != 0)
    {
LABEL_21:
      sub_23FD753BC();
      __break(1u);
    }
    else
    {
      v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * a3);
        v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_23FD75380() & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v22 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * a3);
  *v22 = a1;
  v22[1] = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

uint64_t sub_23FC86B7C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23FC862BC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23FC87068();
      goto LABEL_14;
    }
    sub_23FC8791C();
  }
  v8 = *v3;
  result = sub_23FD75440();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_23FD753BC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23FC86C9C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_23FD74A2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23FC85D30();
  }
  else
  {
    if (v12 > v11)
    {
      sub_23FC871FC();
      goto LABEL_12;
    }
    sub_23FC873E4();
  }
  v13 = *v3;
  sub_23FBFEE2C(&qword_256F5F340, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA5E0], MEMORY[0x24BEBA5F8]);
  v14 = sub_23FD74BB8();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_23FBFEE2C(&qword_256F5F348, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA5E0], MEMORY[0x24BEBA600]);
      v19 = sub_23FD74BDC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23FD753BC();
  __break(1u);
  return result;
}

void sub_23FC86EF0()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = v0;
  sub_23FBFD684(&qword_256F5F338);
  v2 = (_QWORD *)*v0;
  v3 = sub_23FD750BC();
  if (!v2[2])
  {
LABEL_26:
    swift_release();
    *v1 = v3;
    return;
  }
  sub_23FC5F1D8();
  v4 = v2 + 7;
  sub_23FC8A814();
  if ((_QWORD *)v3 != v2 || v5 >= &v2[v6 + 7])
    memmove(v5, v2 + 7, 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = v2[2];
  sub_23FC5F1D8();
  sub_23FC8A88C();
  v11 = v10 & v9;
  v13 = (unint64_t)(v12 + 63) >> 6;
  if ((v10 & v9) == 0)
    goto LABEL_10;
LABEL_9:
  sub_23FC8A6EC();
  while (1)
  {
    v17 = (_QWORD *)(v2[6] + 16 * v14);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v14);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_9;
LABEL_10:
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v13)
      goto LABEL_26;
    ++v8;
    if (!v4[v15])
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v13)
        goto LABEL_26;
      if (!v4[v8])
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v13)
          goto LABEL_26;
        if (!v4[v8])
          break;
      }
    }
LABEL_23:
    sub_23FC8A6B4();
  }
  v16 = v15 + 3;
  if (v16 >= v13)
    goto LABEL_26;
  if (v4[v16])
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v13)
      goto LABEL_26;
    ++v16;
    if (v4[v8])
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void *sub_23FC87068()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_23FBFD684(&qword_256F5F330);
  v2 = *v0;
  v3 = sub_23FD750BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_23FC871FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  sub_23FC061F0();
  v2 = v1;
  v3 = v0;
  v5 = *(_QWORD *)(v4(0) - 8);
  sub_23FC8A8A0();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v28 - v8;
  sub_23FBFD684(v2);
  v10 = (_QWORD *)*v0;
  v11 = sub_23FD750BC();
  if (!v10[2])
  {
    swift_release();
LABEL_28:
    *v3 = v11;
    sub_23FC060D4();
    return;
  }
  v29 = v3;
  sub_23FC5F1D8();
  v12 = v10 + 7;
  sub_23FC8A814();
  if ((_QWORD *)v11 != v10 || v13 >= &v10[v14 + 7])
    memmove(v13, v10 + 7, 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = v10[2];
  sub_23FC5F1D8();
  sub_23FC8A88C();
  v19 = v18 & v17;
  v21 = (unint64_t)(v20 + 63) >> 6;
  if ((v18 & v17) == 0)
    goto LABEL_10;
LABEL_9:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v22 | (v16 << 6); ; i = __clz(__rbit64(v25)) + (v16 << 6))
  {
    v27 = *(_QWORD *)(v5 + 72) * i;
    sub_23FC06160((uint64_t)v9, v10[6] + v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_23FC06160(*(_QWORD *)(v11 + 48) + v27, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    if (v19)
      goto LABEL_9;
LABEL_10:
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v21)
      goto LABEL_26;
    v25 = v12[v24];
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v21)
        goto LABEL_26;
      v25 = v12[v16];
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v21)
          goto LABEL_26;
        v25 = v12[v16];
        if (!v25)
          break;
      }
    }
LABEL_23:
    v19 = (v25 - 1) & v25;
  }
  v26 = v24 + 3;
  if (v26 >= v21)
  {
LABEL_26:
    swift_release();
    v3 = v29;
    goto LABEL_28;
  }
  v25 = v12[v26];
  if (v25)
  {
    v16 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v21)
      goto LABEL_26;
    v25 = v12[v16];
    ++v26;
    if (v25)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
}

void sub_23FC873E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t i;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23FC061F0();
  v38 = v1;
  v39 = v2;
  v4 = v3;
  v5 = v0;
  v8 = *(_QWORD *)(sub_23FC8A624(v6, v7) - 8);
  sub_23FC8A8A0();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v35 - v11;
  v13 = *v0;
  sub_23FBFD684(v4);
  v14 = sub_23FD750C8();
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_release();
LABEL_31:
    *v5 = v14;
    sub_23FC060D4();
    return;
  }
  sub_23FC5F1D8();
  v35 = v0;
  v36 = v13 + 56;
  sub_23FC5EC74();
  v17 = v16 & v15;
  sub_23FC8A814();
  v37 = v18;
  v19 = v14 + 56;
  swift_retain();
  v20 = 0;
  if (!v17)
    goto LABEL_4;
LABEL_3:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v21 | (v20 << 6); ; i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    v26 = *(_QWORD *)(v8 + 72);
    sub_23FBFF1E4((uint64_t)v12, *(_QWORD *)(v13 + 48) + v26 * i, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
    sub_23FC8A5F4();
    sub_23FD74BB8();
    sub_23FC8A7D0();
    if (((v29 << v28) & ~*(_QWORD *)(v19 + 8 * v27)) == 0)
    {
      sub_23FC5B684();
      while (++v32 != v33 || (v31 & 1) == 0)
      {
        v34 = v32 == v33;
        if (v32 == v33)
          v32 = 0;
        v31 |= v34;
        if (*(_QWORD *)(v19 + 8 * v32) != -1)
        {
          sub_23FC5EBF4();
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    sub_23FC5EC1C();
LABEL_27:
    *(_QWORD *)(v19 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    sub_23FBFF1E4(*(_QWORD *)(v14 + 48) + v30 * v26, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    ++*(_QWORD *)(v14 + 16);
    if (v17)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v20, 1))
      goto LABEL_33;
    if (v20 + 1 >= v37)
      goto LABEL_29;
    sub_23FC8A7FC();
    v20 = v23;
    if (!v24)
    {
      v20 = v23 + 1;
      if (v23 + 1 >= v37)
        goto LABEL_29;
      v24 = *(_QWORD *)(v36 + 8 * v20);
      if (!v24)
      {
        v20 = v23 + 2;
        if (v23 + 2 >= v37)
          goto LABEL_29;
        v24 = *(_QWORD *)(v36 + 8 * v20);
        if (!v24)
          break;
      }
    }
LABEL_17:
    v17 = (v24 - 1) & v24;
  }
  if (v23 + 3 >= v37)
  {
LABEL_29:
    swift_release_n();
    v5 = v35;
    goto LABEL_31;
  }
  sub_23FC8A7FC();
  if (v24)
  {
    v20 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v37)
      goto LABEL_29;
    v24 = *(_QWORD *)(v36 + 8 * v20);
    ++v25;
    if (v24)
      goto LABEL_17;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_23FC87674()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_23FBFD684(&qword_256F5F338);
  v3 = sub_23FD750C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_23FD7544C();
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    result = sub_23FD75470();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23FC8791C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_23FBFD684(&qword_256F5F330);
  result = sub_23FD750C8();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = sub_23FD75440();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23FC87B78(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;

  v12 = *a2;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23FC61EAC;
  return sub_23FC83ED0(a1, v12, a3, a4, a5, a6);
}

uint64_t sub_23FC87C00(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v11 = *a2;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_23FC87C80;
  return sub_23FC8407C(v11, a3, a4, a5, a6);
}

uint64_t sub_23FC87C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  sub_23FC75274(&v6);
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return ((uint64_t (*)(void))v2[1])();
}

uint64_t sub_23FC87CD8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a2;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23FC7E094;
  return sub_23FC84618(a1, v8, a3, a4);
}

uint64_t sub_23FC87D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[11] = a3;
  v5[12] = a5;
  v5[9] = a1;
  v5[10] = a2;
  v7 = sub_23FBFD684(&qword_256F5F290);
  v5[13] = v7;
  v5[14] = *(_QWORD *)(v7 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v8 = sub_23FD731C0();
  v5[17] = v8;
  v5[18] = *(_QWORD *)(v8 - 8);
  v5[19] = swift_task_alloc();
  v9 = sub_23FD7301C();
  v5[20] = v9;
  v5[21] = *(_QWORD *)(v9 - 8);
  v5[22] = swift_task_alloc();
  v10 = sub_23FD72FE0();
  v5[23] = v10;
  v5[24] = *(_QWORD *)(v10 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = type metadata accessor for RuntimeError();
  v5[27] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5F298);
  v5[28] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5F2A0);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  v11 = sub_23FD7409C();
  v5[33] = v11;
  v5[34] = *(_QWORD *)(v11 - 8);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  v12 = sub_23FD740CC();
  v5[39] = v12;
  v5[40] = *(_QWORD *)(v12 - 8);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = sub_23FBFD684(&qword_256F5D958);
  v5[46] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5EDD8);
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  v13 = sub_23FD73E08();
  v5[49] = v13;
  v5[50] = *(_QWORD *)(v13 - 8);
  v5[51] = swift_task_alloc();
  v5[5] = type metadata accessor for SessionCoordinatorResponseCallback(0);
  v5[6] = &off_2510101F0;
  v5[2] = a4;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23FC88014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(uint64_t, char *, uint64_t);
  int v48;
  uint64_t v49;
  char v50;
  int v51;
  int v52;
  BOOL v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;

  sub_23FC76488();
  v1 = *(_QWORD *)(v0 + 400);
  sub_23FC5E1C8();
  v2 = sub_23FC5C0F8();
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v1 + 8);
  sub_23FC8A588();
  *(_QWORD *)(v0 + 56) = v2;
  v59 = (_QWORD *)(v0 + 16);
  sub_23FBFD684(&qword_256F5EAD0);
  sub_23FC891DC();
  v3 = sub_23FD7397C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 320);
    v7 = *(_QWORD *)(v0 + 112);
    v62 = *(_QWORD *)(v0 + 104);
    v64 = MEMORY[0x24BEE4AF8];
    sub_23FC9BA20(0, v4, 0);
    v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v60 = *(_QWORD *)(v7 + 72);
    do
    {
      v9 = *(_QWORD *)(v0 + 312);
      v10 = *(char **)(v0 + 120);
      v11 = *(char **)(v0 + 128);
      sub_23FC12E68(v8, (uint64_t)v11, &qword_256F5F290);
      v12 = *(int *)(v62 + 48);
      v13 = *(_QWORD *)v11;
      *(_QWORD *)v10 = *(_QWORD *)v11;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v10[v12], &v11[v12], v9);
      sub_23FC8A86C(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      sub_23FC8A5AC((uint64_t)v11);
      v14 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9BA20(0, *(_QWORD *)(v64 + 16) + 1, 1);
        v14 = v64;
      }
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_23FC9BA20((char *)(v15 > 1), v16 + 1, 1);
        v14 = v64;
      }
      *(_QWORD *)(v14 + 16) = v16 + 1;
      *(_QWORD *)(v14 + 8 * v16 + 32) = v13;
      v8 += v60;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_23FC15A24();
    v14 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 424) = sub_23FC80860(v14);
  sub_23FC5E1C8();
  v17 = sub_23FC5C0F8();
  *(_QWORD *)(v0 + 432) = v17;
  result = sub_23FC8A588();
  v19 = 0;
  v20 = 0;
  v21 = *(_QWORD *)(v17 + 16);
  *(_DWORD *)(v0 + 504) = *MEMORY[0x24BE56AF8];
  v22 = (_DWORD *)MEMORY[0x24BE56B28];
  *(_DWORD *)(v0 + 508) = *MEMORY[0x24BE56B18];
  *(_DWORD *)(v0 + 512) = *v22;
  *(_DWORD *)(v0 + 516) = *MEMORY[0x24BE56AF0];
  v23 = (_DWORD *)MEMORY[0x24BE56C20];
  *(_DWORD *)(v0 + 520) = *MEMORY[0x24BE56B50];
  *(_DWORD *)(v0 + 524) = *v23;
  *(_DWORD *)(v0 + 528) = *MEMORY[0x24BE55030];
  v24 = (_DWORD *)MEMORY[0x24BE56B00];
  *(_DWORD *)(v0 + 532) = *MEMORY[0x24BE54F38];
  *(_DWORD *)(v0 + 536) = *v24;
  *(_DWORD *)(v0 + 540) = *MEMORY[0x24BE54D90];
  *(_DWORD *)(v0 + 544) = *MEMORY[0x24BE54C70];
  *(_QWORD *)(v0 + 440) = v21;
  *(_QWORD *)(v0 + 448) = v5;
LABEL_11:
  if (v20 == v21)
  {
    while (1)
    {
LABEL_15:
      v25 = *(_QWORD *)(v0 + 376);
      v26 = sub_23FC8A884();
      v27 = 1;
      sub_23FC8A350(v26, v28, v29, v26);
LABEL_19:
      *(_QWORD *)(v0 + 456) = v19;
      *(_QWORD *)(v0 + 464) = v20;
      *(_BYTE *)(v0 + 548) = v27;
      sub_23FC12DD8(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384), &qword_256F5EDD8);
      v37 = sub_23FC8A884();
      sub_23FC8A2AC(v37);
      if (v53)
      {
        swift_bridgeObjectRelease();
        sub_23FC1002C();
        sub_23FBFDE40(v59, *(_QWORD *)(v0 + 40));
        sub_23FC8A5E8(MEMORY[0x24BEE4AF8], (uint64_t)sub_23FBFF828);
        sub_23FC15A24();
        _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v59);
        sub_23FC5BCA0();
        sub_23FC5B980();
        sub_23FC5B2F4();
        sub_23FC5B2D4();
        sub_23FC5AC3C();
        sub_23FC5AB04();
        sub_23FC75A54();
        sub_23FC5EFD4();
        sub_23FC5D050();
        sub_23FC5D048();
        sub_23FC5D040();
        sub_23FC5C988();
        sub_23FC5C440();
        sub_23FC5C438();
        sub_23FC5C430();
        sub_23FC5C428();
        sub_23FC5C420();
        sub_23FC5BFE8();
        sub_23FC5BFE0();
        sub_23FC5C980();
        sub_23FC5DC9C();
        sub_23FC5CDA8();
        sub_23FC5CDF0();
        return sub_23FC75474(*(uint64_t (**)(void))(v0 + 8));
      }
      v63 = v27;
      v38 = v19;
      v61 = v20;
      v39 = *(_DWORD *)(v0 + 504);
      v40 = *(uint64_t **)(v0 + 384);
      v41 = *(_QWORD *)(v0 + 352);
      v42 = *(_QWORD *)(v0 + 312);
      v43 = *(_QWORD *)(v0 + 264);
      v44 = *(_QWORD *)(v0 + 272);
      v45 = *v40;
      v46 = (char *)v40 + *(int *)(v25 + 48);
      v47 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v0 + 320) + 32);
      *(_QWORD *)(v0 + 472) = v47;
      v47(v41, v46, v42);
      sub_23FD740A8();
      sub_23FC8A394(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 16));
      v48 = sub_23FC5B9BC(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88));
      if (v48 == v39)
        goto LABEL_21;
      if (v48 != *(_DWORD *)(v0 + 508))
      {
        if (v48 == *(_DWORD *)(v0 + 512))
          goto LABEL_21;
        if (v48 != *(_DWORD *)(v0 + 516))
          break;
      }
      v49 = *(_QWORD *)(v0 + 80);
      sub_23FC8A1C4(*(_QWORD *)(v0 + 272));
      if (v45 < v49)
        goto LABEL_27;
      sub_23FC8A63C();
LABEL_22:
      v19 = v38;
      *(_QWORD *)(v0 + 480) = v43;
      sub_23FC8A164();
      v50 = v63;
      if ((v49 & 1) != 0)
      {
        sub_23FC8A070();
        sub_23FC8A5C0();
        sub_23FC8A360();
        sub_23FC8A5A0();
        sub_23FC8A548();
        v54 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 488) = v54;
        v55 = sub_23FC8A120(v54);
        return sub_23FC8A004(v55, v56, v57, v58);
      }
LABEL_23:
      result = sub_23FC090C8(*(_QWORD *)(v0 + 320));
      v21 = *(_QWORD *)(v0 + 440);
      v20 = v61;
      if ((v50 & 1) == 0)
        goto LABEL_11;
    }
    sub_23FC8A64C();
    v53 = v53 || v51 == v52;
    if (!v53)
    {
      sub_23FC8A020();
LABEL_27:
      v19 = v38;
      sub_23FC8A164();
      v50 = v63;
      goto LABEL_23;
    }
LABEL_21:
    sub_23FC8A020();
    LOBYTE(v49) = sub_23FC8A57C();
    goto LABEL_22;
  }
  if (v20 >= v21)
  {
    __break(1u);
  }
  else
  {
    if (v19 == v21)
    {
      ++v20;
      goto LABEL_15;
    }
    if ((v19 & 0x8000000000000000) == 0)
    {
      v30 = *(_QWORD *)(v0 + 432);
      if (v19 < *(_QWORD *)(v30 + 16))
      {
        v25 = *(_QWORD *)(v0 + 376);
        v31 = *(_QWORD *)(v0 + 320);
        v32 = v19 + 1;
        v33 = v30
            + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
            + *(_QWORD *)(v31 + 72) * v19;
        v34 = *(_QWORD *)(v0 + 368) + *(int *)(*(_QWORD *)(v0 + 360) + 48);
        sub_23FC1046C(v34, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
        v35 = sub_23FC8A884();
        v36 = v25 + *(int *)(v35 + 48);
        *(_QWORD *)v25 = v20;
        sub_23FC1046C(v36, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32));
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v25, 0, 1, v35);
        v27 = 0;
        v19 = v32;
        ++v20;
        goto LABEL_19;
      }
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23FC88650()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FC886A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,unint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  BOOL v59;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;

  sub_23FC76488();
  v70 = (_QWORD *)(v27 + 16);
  v29 = *(_QWORD *)(v27 + 224);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v29, 1, *(_QWORD *)(v27 + 264)) != 1)
  {
    sub_23FC1046C(*(_QWORD *)(v27 + 280), v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 272) + 32));
    sub_23FD74018();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = *(_QWORD *)(v27 + 448);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_41;
  }
  v30 = *(_QWORD *)(v27 + 352);
  v31 = *(_QWORD *)(v27 + 320);
  sub_23FBFEF74(*(_QWORD *)(v27 + 256), &qword_256F5F2A0);
  sub_23FBFF204(v30, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  sub_23FBFEF74(v29, &qword_256F5F298);
  for (i = *(_QWORD *)(v27 + 448); ; i = a24)
  {
    v44 = *(_QWORD *)(v27 + 456);
    v45 = *(_QWORD *)(v27 + 464);
    a24 = i;
    v46 = *(unsigned __int8 *)(v27 + 548);
    *(_QWORD *)(v27 + 448) = i;
    if ((v46 & 1) != 0)
      break;
LABEL_11:
    v47 = *(_QWORD *)(v27 + 440);
    if (v45 == v47)
      goto LABEL_15;
    if (v45 >= v47)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v44 == v47)
    {
      ++v45;
      goto LABEL_15;
    }
    if ((v44 & 0x8000000000000000) != 0)
      goto LABEL_39;
    v51 = *(_QWORD *)(v27 + 432);
    if (v44 < *(_QWORD *)(v51 + 16))
    {
      sub_23FC8A030(v51);
      v52 = v30 + *(int *)(sub_23FC8A438() + 48);
      *(_QWORD *)v30 = v45;
      sub_23FC1046C(v52, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
      sub_23FC8A4A0();
      goto LABEL_19;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    sub_23FC8A5CC();
    v34 = v66;
LABEL_4:
    if (*(_QWORD *)(v34 + 16) >= *(_QWORD *)(v34 + 24) >> 1)
    {
      sub_23FC8A878();
      v34 = v67;
    }
    v35 = sub_23FC8A250(v34, *(uint64_t (**)(uint64_t))(v27 + 472));
    sub_23FC8A594(v35, v36, &qword_256F5F2A0);
    v37 = sub_23FC8A140();
    v38 = *(void (**)(uint64_t, uint64_t))(v27 + 480);
    if (v37 == 1)
    {
      v30 = *(_QWORD *)(v27 + 352);
      v39 = *(_QWORD *)(v27 + 320);
      v31 = *(_QWORD *)(v27 + 256);
      v29 = *(_QWORD *)(v27 + 248);
      v38(*(_QWORD *)(v27 + 280), *(_QWORD *)(v27 + 264));
      v28 = (uint64_t)&qword_256F5F2A0;
      sub_23FC8A5AC(v31);
      sub_23FBFF204(v30, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      sub_23FC8A5AC(v29);
    }
    else
    {
      v28 = *(unsigned int *)(v27 + 544);
      sub_23FC8A2E4();
      v40 = *(_QWORD *)(v27 + 264);
      v68 = *(_QWORD *)(v27 + 280);
      v69 = *(_QWORD *)(v27 + 256);
      v31 = *(_QWORD *)(v27 + 248);
      v41 = *(_QWORD *)(v27 + 192);
      v42 = *(_QWORD *)(v27 + 200);
      v29 = sub_23FC8A634();
      sub_23FC8A3EC();
      sub_23FC8A29C();
      v43(v42, v31);
      sub_23FC1046C(v42, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 104));
      v30 = v29;
      sub_23FD73808();
      sub_23FBFF204(v42, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
      v38(v68, v40);
      sub_23FBFEF74(v69, &qword_256F5F2A0);
      sub_23FC8A3A4();
      sub_23FBFEF18(v31, type metadata accessor for ExecutorLogging);
    }
  }
  while (1)
  {
LABEL_15:
    v30 = *(_QWORD *)(v27 + 376);
    v48 = sub_23FC8A438();
    v29 = 1;
    sub_23FC8A350(v48, v49, v50, v48);
LABEL_19:
    v53 = sub_23FC8A754();
    sub_23FC12DD8(v53, v54, &qword_256F5EDD8);
    v55 = sub_23FC8A438();
    sub_23FC8A2AC(v55);
    if (v59)
    {
      sub_23FC89F8C();
      sub_23FC1002C();
      sub_23FBFDE40(v70, *(_QWORD *)(v27 + 40));
      sub_23FC8A5E8(a24, (uint64_t)sub_23FBFF828);
      swift_bridgeObjectRelease();
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v70);
      sub_23FC5A574();
      sub_23FC090C0();
      sub_23FC5BCA0();
      sub_23FC5B980();
      sub_23FC5B2F4();
      sub_23FC5B2D4();
      sub_23FC75A54();
      sub_23FC5EFD4();
      sub_23FC5D050();
      sub_23FC5D048();
      sub_23FC5D040();
      sub_23FC5C988();
      sub_23FC5C440();
      sub_23FC5C438();
      sub_23FC5C430();
      sub_23FC5C428();
      sub_23FC5C420();
      sub_23FC5BFE8();
      sub_23FC5BFE0();
      sub_23FC5C980();
      sub_23FC5CDA8();
      sub_23FC5CDF0();
      swift_task_dealloc();
      return sub_23FC75474(*(uint64_t (**)(void))(v27 + 8));
    }
    sub_23FC8A090();
    sub_23FC8A7B0();
    sub_23FC8A394(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
    v56 = sub_23FC5B9BC(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 88));
    if (v56 == (_DWORD)v29)
      break;
    if (v56 == *(_DWORD *)(v27 + 508))
      goto LABEL_24;
    if (v56 == *(_DWORD *)(v27 + 512))
      break;
    if (v56 == *(_DWORD *)(v27 + 516))
    {
LABEL_24:
      v30 = *(_QWORD *)(v27 + 80);
      sub_23FC8A1C4(*(_QWORD *)(v27 + 272));
      if (v46 >= v30)
      {
        sub_23FC8A63C();
        goto LABEL_33;
      }
    }
    else
    {
      sub_23FC8A64C();
      v59 = v59 || v57 == v58;
      if (v59)
        break;
      sub_23FC8A020();
    }
    v44 = a27;
    v46 = a26;
    sub_23FC8A164();
LABEL_34:
    sub_23FC090C8(*(_QWORD *)(v27 + 320));
    if ((v46 & 1) == 0)
      goto LABEL_11;
  }
  sub_23FC8A020();
  v30 = sub_23FC8A57C();
LABEL_33:
  v44 = a27;
  v46 = a26;
  *(_QWORD *)(v27 + 480) = &qword_256F5EDE0;
  sub_23FC8A164();
  if ((v30 & 1) == 0)
    goto LABEL_34;
  sub_23FC8A070();
  sub_23FC8A5C0();
  sub_23FC8A360();
  sub_23FC8A5A0();
  sub_23FC8A548();
  v61 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v27 + 488) = v61;
  v62 = sub_23FC8A120(v61);
  return sub_23FC8A004(v62, v63, v64, v65);
}

uint64_t sub_23FC88B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t, uint64_t),unint64_t a27)
{
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t (*v38)(unint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  int v91;
  int v92;
  BOOL v93;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;

  sub_23FC76488();
  v28 = *(void **)(v27 + 496);
  *(_QWORD *)(v27 + 64) = v28;
  v29 = v27 + 64;
  v107 = (_QWORD *)(v27 + 16);
  v30 = v28;
  sub_23FBFD684(&qword_254346E20);
  sub_23FC8A790();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v48 = *(void **)(v27 + 496);
    a26 = *(void (**)(uint64_t, uint64_t))(v27 + 480);
    a27 = *(_QWORD *)(v27 + 448);
    v49 = *(unsigned int *)(v27 + 536);
    v50 = *(unsigned int *)(v27 + 532);
    v51 = *(unsigned int *)(v27 + 528);
    v52 = *(_QWORD *)(v27 + 288);
    v54 = *(_QWORD *)(v27 + 264);
    v53 = *(_QWORD *)(v27 + 272);

    v55 = v48;
    sub_23FD71510();
    sub_23FD731A8();
    v56 = sub_23FC8A79C();
    v57(v56, v51);
    sub_23FD7313C();
    v58 = sub_23FC8A79C();
    v59(v58, v50);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 104))(v52, v49, v54);
    sub_23FD74018();
    a26(v52, v54);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61 = *(_QWORD *)(v27 + 448);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_11;
    goto LABEL_49;
  }
  v31 = *(uint64_t **)(v27 + 216);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_23FBFEF18((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for RuntimeError);
    goto LABEL_10;
  }
  v32 = *(_QWORD *)(v27 + 352);
  v33 = *(_QWORD *)(v27 + 336);
  v34 = *(_QWORD *)(v27 + 72);

  sub_23FC83340(*v31, v31[1], v32, v34, v33);
  swift_bridgeObjectRelease();
  v35 = swift_isUniquelyReferenced_nonNull_native();
  v36 = *(_QWORD *)(v27 + 448);
  if ((v35 & 1) == 0)
  {
    sub_23FC8A858();
    v36 = v102;
  }
  v37 = *(_QWORD *)(v36 + 16);
  if (v37 >= *(_QWORD *)(v36 + 24) >> 1)
  {
    sub_23FC8A858();
    v36 = v103;
  }
  v38 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v27 + 472);
  v39 = *(_QWORD *)(v27 + 336);
  v40 = *(_QWORD *)(v27 + 312);
  v41 = *(_QWORD *)(v27 + 320);
  *(_QWORD *)(v36 + 16) = v37 + 1;
  v42 = v38(v36+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v37, v39, v40);
  sub_23FC8A594(v42, v43, &qword_256F5F2A0);
  a24 = v36;
  if (sub_23FC8A140() == 1)
  {
    v44 = *(_QWORD *)(v27 + 352);
    v45 = *(_QWORD *)(v27 + 320);
    v46 = *(_QWORD *)(v27 + 240);
    v47 = (uint64_t)&qword_256F5F2A0;
    sub_23FC8A5AC(*(_QWORD *)(v27 + 256));
    sub_23FBFF204(v44, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
    sub_23FC8A5AC(v46);
  }
  else
  {
    v47 = *(unsigned int *)(v27 + 544);
    sub_23FC8A2E4();
    v72 = *(_QWORD *)(v27 + 256);
    v73 = *(_QWORD *)(v27 + 240);
    v74 = *(_QWORD *)(v27 + 192);
    v75 = *(_QWORD *)(v27 + 200);
    v76 = *(_QWORD *)(v27 + 184);
    v46 = sub_23FC8A634();
    sub_23FC8A3EC();
    sub_23FC8A29C();
    v77(v75, v73);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 104))(v75, v47, v76);
    v44 = v46;
    sub_23FD73808();
    sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
    sub_23FBFEF74(v72, &qword_256F5F2A0);
    sub_23FC8A3A4();
    sub_23FBFEF18(v73, type metadata accessor for ExecutorLogging);
  }

  while (1)
  {
    v78 = *(_QWORD *)(v27 + 456);
    v79 = *(_QWORD *)(v27 + 464);
    v80 = *(unsigned __int8 *)(v27 + 548);
    *(_QWORD *)(v27 + 448) = a24;
    if ((v80 & 1) != 0)
      break;
LABEL_19:
    v81 = *(_QWORD *)(v27 + 440);
    if (v79 == v81)
      goto LABEL_23;
    if (v79 >= v81)
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v78 == v81)
    {
      ++v79;
      goto LABEL_23;
    }
    if ((v78 & 0x8000000000000000) != 0)
      goto LABEL_47;
    v85 = *(_QWORD *)(v27 + 432);
    if (v78 < *(_QWORD *)(v85 + 16))
    {
      sub_23FC8A030(v85);
      v86 = v44 + *(int *)(sub_23FC8A438() + 48);
      *(_QWORD *)v44 = v79;
      sub_23FC1046C(v86, v46, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
      sub_23FC8A4A0();
      goto LABEL_27;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    sub_23FC8A5CC();
    v61 = v100;
LABEL_11:
    if (*(_QWORD *)(v61 + 16) >= *(_QWORD *)(v61 + 24) >> 1)
    {
      sub_23FC8A878();
      v61 = v101;
    }
    v62 = sub_23FC8A250(v61, *(uint64_t (**)(uint64_t))(v27 + 472));
    sub_23FC8A594(v62, v63, &qword_256F5F2A0);
    v64 = sub_23FC8A140();
    v65 = *(void **)(v27 + 496);
    if (v64 == 1)
    {
      v44 = *(_QWORD *)(v27 + 352);
      v46 = *(_QWORD *)(v27 + 312);
      v66 = *(_QWORD *)(v27 + 320);
      v29 = *(_QWORD *)(v27 + 256);
      v47 = *(_QWORD *)(v27 + 232);

      sub_23FBFEF74(v29, &qword_256F5F2A0);
      sub_23FC595C4(v44, *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
      sub_23FBFEF74(v47, &qword_256F5F2A0);
    }
    else
    {
      v67 = *(unsigned int *)(v27 + 540);
      sub_23FC8A2E4();
      v29 = *(_QWORD *)(v27 + 232);
      v68 = *(_QWORD *)(v27 + 168);
      v69 = *(_QWORD *)(v27 + 176);
      v47 = *(_QWORD *)(v27 + 152);
      v70 = *(_QWORD *)(v27 + 160);
      v104 = *(_QWORD *)(v27 + 144);
      v105 = *(_QWORD *)(v27 + 136);
      v106 = *(_QWORD *)(v27 + 256);
      v46 = sub_23FC8A634();
      sub_23FC8A3EC();
      sub_23FC8A29C();
      v71(v69, v29);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 104))(v69, v67, v70);
      sub_23FD7133C();
      sub_23FD731B4();
      v44 = v46;
      sub_23FD73814();
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v47, v105);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);

      sub_23FBFEF74(v106, &qword_256F5F2A0);
      sub_23FC8A3A4();
      sub_23FBFEF18(v29, type metadata accessor for ExecutorLogging);
    }
  }
  while (1)
  {
LABEL_23:
    v44 = *(_QWORD *)(v27 + 376);
    v82 = sub_23FC8A438();
    v29 = 1;
    sub_23FC8A350(v82, v83, v84, v82);
LABEL_27:
    v87 = sub_23FC8A754();
    sub_23FC12DD8(v87, v88, &qword_256F5EDD8);
    v89 = sub_23FC8A438();
    sub_23FC8A2AC(v89);
    if (v93)
    {
      sub_23FC89F8C();
      sub_23FC1002C();
      sub_23FBFDE40(v107, *(_QWORD *)(v27 + 40));
      sub_23FC8A5E8(a24, (uint64_t)sub_23FBFF828);
      swift_bridgeObjectRelease();
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v107);
      sub_23FC5AB04();
      sub_23FC090C0();
      sub_23FC5BCA0();
      sub_23FC5B980();
      sub_23FC5B2F4();
      sub_23FC5B2D4();
      sub_23FC75A54();
      sub_23FC5EFD4();
      sub_23FC5D050();
      sub_23FC5D048();
      sub_23FC5D040();
      sub_23FC5C988();
      sub_23FC5C440();
      sub_23FC5C438();
      sub_23FC5C430();
      sub_23FC5C428();
      sub_23FC5C420();
      sub_23FC5BFE8();
      sub_23FC5BFE0();
      sub_23FC5C980();
      sub_23FC5CDA8();
      sub_23FC5CDF0();
      swift_task_dealloc();
      return sub_23FC75474(*(uint64_t (**)(void))(v27 + 8));
    }
    sub_23FC8A090();
    sub_23FC8A7B0();
    sub_23FC8A394(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16));
    v90 = sub_23FC5B9BC(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 88));
    if (v90 == (_DWORD)v29)
      break;
    if (v90 == *(_DWORD *)(v27 + 508))
      goto LABEL_32;
    if (v90 == *(_DWORD *)(v27 + 512))
      break;
    if (v90 == *(_DWORD *)(v27 + 516))
    {
LABEL_32:
      v44 = *(_QWORD *)(v27 + 80);
      sub_23FC8A1C4(*(_QWORD *)(v27 + 272));
      if (v80 >= v44)
      {
        sub_23FC8A63C();
        goto LABEL_41;
      }
    }
    else
    {
      sub_23FC8A64C();
      v93 = v93 || v91 == v92;
      if (v93)
        break;
      sub_23FC8A020();
    }
    v78 = a27;
    v80 = a26;
    sub_23FC8A164();
LABEL_42:
    sub_23FC090C8(*(_QWORD *)(v27 + 320));
    if ((v80 & 1) == 0)
      goto LABEL_19;
  }
  sub_23FC8A020();
  v44 = sub_23FC8A57C();
LABEL_41:
  v78 = a27;
  v80 = a26;
  *(_QWORD *)(v27 + 480) = &qword_256F5EDE0;
  sub_23FC8A164();
  if ((v44 & 1) == 0)
    goto LABEL_42;
  sub_23FC8A070();
  sub_23FC8A5C0();
  sub_23FC8A360();
  sub_23FC8A5A0();
  sub_23FC8A548();
  v95 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v27 + 488) = v95;
  v96 = sub_23FC8A120(v95);
  return sub_23FC8A004(v96, v97, v98, v99);
}

unint64_t sub_23FC891DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F5EB38;
  if (!qword_256F5EB38)
  {
    v1 = sub_23FBFEDE8(&qword_256F5EAD0);
    result = MEMORY[0x2426797E8](MEMORY[0x24BE57080], v1);
    atomic_store(result, (unint64_t *)&qword_256F5EB38);
  }
  return result;
}

uint64_t type metadata accessor for ExecutorLogging(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5F470);
}

uint64_t sub_23FC89234()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_23FC75AD4();
  v3 = v2;
  v4 = (uint64_t *)v0[2];
  v5 = v0[3];
  v6 = v0[4];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)sub_23FC0922C(v7);
  *v8 = v1;
  v8[1] = sub_23FC7E094;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t))((char *)&dword_256F5F2C8 + dword_256F5F2C8))(v3, v4, v5, v6);
}

uint64_t sub_23FC892AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FC843A8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23FC892C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_23FC8A82C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC8A224(v1);
  return sub_23FC8A1E0(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23FC89310(uint64_t a1)
{
  return sub_23FC84258(a1);
}

uint64_t sub_23FC8932C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_23FC8A82C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC8A224(v1);
  return sub_23FC8A1E0(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t type metadata accessor for EventScopedProgressUpdateHandler(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F5F3E0);
}

unint64_t sub_23FC8938C()
{
  unint64_t result;

  result = qword_256F5F318;
  if (!qword_256F5F318)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BE55900], MEMORY[0x24BE558F8]);
    atomic_store(result, &qword_256F5F318);
  }
  return result;
}

void sub_23FC893C8(uint64_t a1)
{
  uint64_t v1;

  sub_23FCBA404(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_23FC893E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23FC8A7BC(a1, a2, a3);
  sub_23FC12EF8(v3);
  sub_23FBFF0A0();
}

uint64_t *sub_23FC89408(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD740CC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
  }
  return a1;
}

uint64_t sub_23FC894A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD740CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + *(int *)(a2 + 20));
}

uint64_t sub_23FC894EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v6 = sub_23FD740CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

uint64_t sub_23FC89560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD740CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23FBFDB34((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

uint64_t sub_23FC895C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23FD740CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t sub_23FC8962C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23FD740CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t sub_23FC896A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC896AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23FC5F584();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23FC06098(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23FC8971C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FC89728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  sub_23FC5F584();
  sub_23FC06188();
  if (v8)
    sub_23FC0608C(a1, a2, a2, v7);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
}

uint64_t sub_23FC8978C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD740CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23FC897FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD738EC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD71474();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23FD73E08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_23FC898D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FD738EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_23FD73E08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_23FC89960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD738EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FC89A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD738EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FC89AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD738EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FC89B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23FD738EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_23FC89C20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC89C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_DWORD *)(*(_QWORD *)(sub_23FC8A3EC() - 8) + 84) == (_DWORD)a2)
  {
    v6 = sub_23FC8A790();
  }
  else
  {
    v8 = sub_23FBFF104();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v8;
      v9 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = sub_23FC7E230();
      v9 = *(int *)(a3 + 24);
    }
    v6 = a1 + v9;
  }
  return sub_23FC06098(v6, a2, v7);
}

uint64_t sub_23FC89CA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC89CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FC8A3EC();
  sub_23FC06188();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_23FBFF104();
    sub_23FC06188();
    if (v10)
    {
      v8 = v11;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v8 = sub_23FC7E230();
      v12 = *(int *)(a4 + 24);
    }
    v9 = a1 + v12;
  }
  return sub_23FC0608C(v9, a2, a2, v8);
}

uint64_t sub_23FC89D1C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23FD738EC();
  if (v1 <= 0x3F)
  {
    result = sub_23FD71474();
    if (v2 <= 0x3F)
    {
      result = sub_23FD73E08();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_23FC89DBC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[25];
  *(_QWORD *)(v2 - 144) = v1[28];
  *(_QWORD *)(v2 - 136) = v3;
  v4 = v1[22];
  *(_QWORD *)(v2 - 128) = v1[24];
  *(_QWORD *)(v2 - 120) = v4;
  v5 = v1[16];
  *(_QWORD *)(v2 - 112) = v1[19];
  *(_QWORD *)(v2 - 104) = v5;
  *(_QWORD *)(v2 - 96) = v1[13];
  return swift_task_dealloc();
}

uint64_t sub_23FC89E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a3, a4);
  v6 = v4[25];
  *(_QWORD *)(v5 - 136) = v4[28];
  *(_QWORD *)(v5 - 128) = v6;
  v7 = v4[22];
  *(_QWORD *)(v5 - 120) = v4[24];
  *(_QWORD *)(v5 - 112) = v7;
  v8 = v4[16];
  *(_QWORD *)(v5 - 104) = v4[19];
  *(_QWORD *)(v5 - 96) = v8;
  *(_QWORD *)(v5 - 88) = v4[13];
  return swift_task_dealloc();
}

uint64_t sub_23FC89F54(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC89F70(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FC89F8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[16];
  *(_QWORD *)(v1 - 96) = v0[19];
  *(_QWORD *)(v1 - 88) = v2;
  *(_QWORD *)(v1 - 80) = v0[15];
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC8A004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC80D40(a1, a2, a3, a4);
}

uint64_t sub_23FC8A020()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[34] + 8))(v0[37], v0[33]);
}

uint64_t sub_23FC8A030@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v1[40];
  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v3 + 16))(v1[46] + *(int *)(v1[45] + 48), a1+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v2, v1[39]);
}

uint64_t sub_23FC8A070()
{
  return sub_23FD740A8();
}

uint64_t sub_23FC8A090()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v4 - 88) = v2;
  *(_QWORD *)(v4 - 80) = v3;
  v5 = v1[44];
  v6 = v1[39];
  v7 = v1[48] + *(int *)(v0 + 48);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1[40] + 32);
  v1[59] = v8;
  return v8(v5, v7, v6);
}

uint64_t sub_23FC8A120(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 224);
}

uint64_t sub_23FC8A140()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ExecutorLogging(0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FC8A164()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);

  return v1(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 264));
}

uint64_t sub_23FC8A170()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 664);
}

void sub_23FC8A1A4()
{
  sub_23FC84FA0();
}

uint64_t sub_23FC8A1B4()
{
  return sub_23FD74BB8();
}

uint64_t sub_23FC8A1C4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_23FC8A1CC()
{
  return 0;
}

uint64_t sub_23FC8A1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t sub_23FC8A1F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC8A224(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FC8A250@<X0>(uint64_t a1@<X3>, uint64_t (*a2)(uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 16) = v3;
  v6 = *(unsigned __int8 *)(v2 + 80);
  *(_QWORD *)(v5 - 104) = a1;
  return a2(a1 + ((v6 + 32) & ~v6) + *(_QWORD *)(v2 + 72) * v4);
}

uint64_t sub_23FC8A2AC(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FC8A2D0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23FC8A2E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[44];
  *(_QWORD *)(v1 - 96) = v0[40];
  *(_QWORD *)(v1 - 88) = v0[39];
  *(_QWORD *)(v1 - 80) = v2;
}

uint64_t sub_23FC8A2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v2(v4, *(_QWORD *)(a1 + 48) + v1 * v5, v3);
}

uint64_t sub_23FC8A31C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC8A344()
{
  return sub_23FD7544C();
}

uint64_t sub_23FC8A350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v4, 1, 1, a4);
}

void sub_23FC8A360()
{
  sub_23FC80A10();
}

uint64_t sub_23FC8A370()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = *v1;
  *v1 = 0x8000000000000000;
  return v0;
}

uint64_t sub_23FC8A394@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_23FC8A3A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 96) + 8))(*(_QWORD *)(v0 - 80), *(_QWORD *)(v0 - 88));
}

uint64_t sub_23FC8A3B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_23FC8A3EC()
{
  return sub_23FD738EC();
}

uint64_t sub_23FC8A3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 120), *(_QWORD *)(**(_QWORD **)(v3 - 128) + 48) + v1, v0);
}

uint64_t sub_23FC8A420()
{
  uint64_t (*v0)(uint64_t, _QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, *(_QWORD *)(v3 - 96), v1);
}

uint64_t sub_23FC8A438()
{
  uint64_t *v0;

  return sub_23FBFD684(v0);
}

uint64_t sub_23FC8A440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
}

uint64_t sub_23FC8A458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t sub_23FC8A470()
{
  return sub_23FD74BDC();
}

uint64_t sub_23FC8A488()
{
  return sub_23FD74BDC();
}

uint64_t sub_23FC8A4A0()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v1);
}

uint64_t sub_23FC8A4CC()
{
  return sub_23FD74BB8();
}

uint64_t sub_23FC8A4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 96) + 104))(v2, a2, *(_QWORD *)(v3 - 88));
}

uint64_t sub_23FC8A548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_23FC8A554()
{
  JUMPOUT(0x242677514);
}

uint64_t sub_23FC8A568()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return sub_23FD74BB8();
}

BOOL sub_23FC8A57C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC7FBB4(v0, v1);
}

uint64_t sub_23FC8A588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_23FC8A594(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC12E68(v3, v4, a3);
}

uint64_t sub_23FC8A5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_23FC8A5AC(uint64_t a1)
{
  uint64_t *v1;

  sub_23FBFEF74(a1, v1);
}

uint64_t sub_23FC8A5B4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_23FC8A5C0()
{
  return sub_23FD73D6C();
}

void sub_23FC8A5CC()
{
  sub_23FC99898();
}

uint64_t sub_23FC8A5E0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_23FC8A5E8(uint64_t a1, uint64_t a2)
{
  sub_23FCB7480(a1, a2, 0, 0);
}

void sub_23FC8A5F4()
{
  uint64_t v0;

  sub_23FBFEE2C(*(unint64_t **)(v0 - 96), *(uint64_t (**)(uint64_t))(v0 - 104), *(_QWORD *)(v0 - 88));
}

uint64_t sub_23FC8A600()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v3, *(_QWORD *)(v0 + 48) + v5 * v4, v2);
}

uint64_t sub_23FC8A614()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 88);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FC8A624(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a2;
  return a2(0);
}

uint64_t sub_23FC8A634()
{
  return sub_23FD7382C();
}

void sub_23FC8A65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 648);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 656);
  *(_QWORD *)(v1 - 88) = v2;
}

uint64_t sub_23FC8A674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_23FC8A684()
{
  return sub_23FD75380();
}

uint64_t sub_23FC8A694()
{
  return sub_23FD74C30();
}

uint64_t sub_23FC8A6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23FC60768(v1, v2 + *(int *)(v0 + 20));
}

uint64_t sub_23FC8A6CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23FC8A704()
{
  uint64_t v0;

  return v0;
}

void sub_23FC8A714(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_23FBFEE2C(a1, v3, a3);
}

unint64_t sub_23FC8A72C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FC84D84(v1, v0);
}

void sub_23FC8A73C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = ~a1;
  *(_QWORD *)(v4 - 104) = v2;
}

uint64_t sub_23FC8A754()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[57] = v2;
  v0[58] = v3;
  **(_BYTE **)(v4 - 96) = v1;
  return v0[47];
}

uint64_t sub_23FC8A76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23FC8A790()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC8A79C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC8A7B0()
{
  return sub_23FD740A8();
}

uint64_t sub_23FC8A7BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_23FC8A7C4()
{
  return sub_23FD74048();
}

uint64_t *sub_23FC8A7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a2;
  return sub_23FBFDDEC(v2);
}

uint64_t sub_23FC8A7F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23FC85830(a1, v1, v2);
}

uint64_t sub_23FC8A820()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t);
  uint64_t v2;

  return v1(*(_QWORD *)(v2 - 96), v0);
}

uint64_t sub_23FC8A840()
{
  return swift_bridgeObjectRetain();
}

void sub_23FC8A84C()
{
  sub_23FC99938();
}

void sub_23FC8A858()
{
  sub_23FC99898();
}

uint64_t sub_23FC8A864()
{
  return swift_task_alloc();
}

uint64_t sub_23FC8A86C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_23FC8A878()
{
  sub_23FC99898();
}

uint64_t sub_23FC8A884()
{
  uint64_t *v0;

  return sub_23FBFD684(v0);
}

void sub_23FC8A8AC()
{
  __int128 *v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _UNKNOWN **v19;

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_23FD74120();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_23FBFF180();
  v11 = v10 - v9;
  sub_23FC8D774(v5);
  v12 = (int *)sub_23FC8D854();
  v13 = v5 + v12[5];
  sub_23FC8D774(v13);
  if (qword_256F5D2C8 != -1)
    swift_once();
  v14 = sub_23FC8D8B4();
  sub_23FC584E0((uint64_t)&byte_256F7F450, v13 + *(int *)(v14 + 20));
  v15 = _s22TaskCandidateEvaluatorCMa();
  sub_23FC8D774(v11);
  sub_23FCF6C28(v11);
  v18 = v15;
  v19 = &off_2510120B8;
  *(_QWORD *)&v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  sub_23FBFDE28(&v17, v5 + v12[6]);
  sub_23FBFDE28(v1, v5 + v12[7]);
  sub_23FC060D4();
}

uint64_t _s17FastTaskEvaluatorVMa()
{
  uint64_t result;

  result = qword_256F5F530;
  if (!qword_256F5F530)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23FC8AA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD72BF0();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FC8D7B4();
  v2 = sub_23FD72B90();
  sub_23FC8D024(v2, qword_256F7F430);
  sub_23FBFED48(v2, (uint64_t)qword_256F7F430);
  sub_23FD724DC();
  sub_23FD72B78();
  sub_23FC09258();
}

void sub_23FC8AA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23FC061F0();
  v24 = v0;
  v5 = sub_23FD7409C();
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC06128();
  v6 = sub_23FD740CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23FC8D7D0();
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v21 - v8;
  sub_23FC8D854();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC10118();
  sub_23FBFD684(qword_254346A10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC8D798();
  sub_23FC8AC68();
  sub_23FBFF104();
  v10 = sub_23FC8D780();
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, v11, v12);
  sub_23FBFEF74(v1, qword_254346A10);
  sub_23FC0EDD8(v24, v4, (uint64_t (*)(_QWORD))_s17FastTaskEvaluatorVMa);
  sub_23FC8D8A8((uint64_t)v9);
  if (v13 == 1)
  {
    v14 = 0;
  }
  else
  {
    sub_23FC8AFB4();
    v14 = v15;
  }
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v9, v6);
  sub_23FBFEF18(v4, (uint64_t (*)(_QWORD))_s17FastTaskEvaluatorVMa);
  sub_23FC8D8A8(v3);
  if ((v14 & 1) == 0)
  {
    sub_23FD740A8();
    v18 = v22;
    v17 = v23;
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 88))(v2, v23);
    if (v19 == *MEMORY[0x24BE56B00]
      || (v19 != *MEMORY[0x24BE56C78] ? (v20 = v19 == *MEMORY[0x24BE56C80]) : (v20 = 1), !v20))
    {
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v17);
    }
  }
  v16((char *)v3, v6);
  sub_23FC060D4();
}

void sub_23FC8AC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23FC061F0();
  v39 = v2;
  sub_23FBFD684(&qword_256F5D538);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFF180();
  v5 = v4 - v3;
  v6 = sub_23FD71BB8();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFE0();
  v35 = v7;
  v8 = sub_23FD73514();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFEFE0();
  v32 = v9;
  v38 = sub_23FD716FC();
  v10 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23FC8D7B4();
  v11 = sub_23FD735E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23FC06128();
  v13 = sub_23FD7409C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23FBFF180();
  v17 = v16 - v15;
  sub_23FD740A8();
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v17, v13);
  if (v18 != *MEMORY[0x24BE56AF8] && v18 != *MEMORY[0x24BE56BA0])
  {
    if (v18 == *MEMORY[0x24BE56B20])
    {
      sub_23FC8D74C();
      sub_23FC06160(v1, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
      sub_23FD734F0();
      v23 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v24 = v1;
    }
    else
    {
      if (v18 != *MEMORY[0x24BE56C30])
      {
        if (v18 == *MEMORY[0x24BE56C40])
        {
          sub_23FC8D74C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v35, v17, v37);
          sub_23FC0AC90();
          v26 = sub_23FD72044();
          v27 = sub_23FC8D780();
          sub_23FC100EC(v27, v28, v26);
          if (v29)
          {
            sub_23FC8D844();
            sub_23FBFEF74(v5, &qword_256F5D538);
            v30 = sub_23FBFF104();
            sub_23FC103A0(v39, 1, v31, v30);
            goto LABEL_6;
          }
          sub_23FD716F0();
          sub_23FC8D844();
          v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
          v24 = v5;
        }
        else
        {
          if (v18 != *MEMORY[0x24BE56B98])
          {
            v20 = sub_23FBFF104();
            v21 = v39;
            v22 = 1;
            goto LABEL_4;
          }
          sub_23FC8D74C();
          v26 = v34;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v32, v17, v34);
          sub_23FD734F0();
          v23 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
          v24 = v32;
        }
        v25 = v26;
        goto LABEL_5;
      }
      sub_23FC8D74C();
      v11 = v38;
      sub_23FC06160(v0, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
      sub_23FD716F0();
      v23 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v24 = v0;
    }
    v25 = v11;
    goto LABEL_5;
  }
  sub_23FD74048();
  v20 = sub_23FBFF104();
  v21 = v39;
  v22 = 0;
LABEL_4:
  sub_23FC103A0(v21, v22, v19, v20);
  v23 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v24 = v17;
  v25 = v13;
LABEL_5:
  v23(v24, v25);
LABEL_6:
  sub_23FC060D4();
}

void sub_23FC8AFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23FC061F0();
  v4 = sub_23FD71C84();
  v5 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  v26 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC8D7D0();
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v24 - v6;
  sub_23FBFD684(&qword_256F5D538);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FC10118();
  v27 = sub_23FD72044();
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23FC0610C();
  v9 = sub_23FD71BB8();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8]();
  sub_23FBFF180();
  v12 = v11 - v10;
  v13 = sub_23FD7409C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23FC8D798();
  sub_23FD740A8();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v0, v13) == *MEMORY[0x24BE56C40])
  {
    v15 = (uint64_t)v7;
    v24 = v1;
    v16 = v26;
    sub_23FC8D89C(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 96));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v12, v0, v29);
    sub_23FC0AC90();
    sub_23FC100EC(v3, 1, v27);
    if (v17)
    {
      sub_23FC8D85C();
      sub_23FBFEF74(v3, &qword_256F5D538);
    }
    else
    {
      v18 = v8;
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
      v20 = v27;
      v19(v2, v3, v27);
      sub_23FD72038();
      v22 = v24;
      v21 = v25;
      sub_23FC06160(v24, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
      (*(void (**)(uint64_t, uint64_t))(v16 + 88))(v22, v21);
      v23 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v23(v22, v21);
      v23(v15, v21);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v20);
      sub_23FC8D85C();
    }
  }
  else
  {
    sub_23FC8D89C(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  }
  sub_23FC060D4();
}

uint64_t sub_23FC8B1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  NSObject *v82;
  os_signpost_type_t v83;
  uint8_t *v84;
  uint8_t *v85;
  os_signpost_id_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  uint64_t v96;
  char **v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v105)(_QWORD, _QWORD, _QWORD);
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t);
  NSObject *v122;
  os_log_type_t v123;
  _BOOL4 v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  NSObject *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  uint64_t v137;
  uint8_t *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  NSObject *v181;
  os_log_type_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(char *, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(_QWORD, _QWORD, _QWORD);
  void (*v223)(char *, uint64_t);
  NSObject *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD v239[3];
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;

  sub_23FC061F0();
  v241 = v2;
  v242 = v3;
  v230 = v0;
  v231 = v4;
  v235 = v5;
  v232 = v6;
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFEFE0();
  sub_23FC15A3C(v9);
  sub_23FBFD684(&qword_256F5F4C0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  v13 = sub_23FBFEFAC(v12);
  v206 = type metadata accessor for FeedbackLearning.TaskEvaluation(v13);
  v196 = *(_QWORD *)(v206 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFF218();
  sub_23FC15A3C(v20);
  sub_23FBFD684(&qword_256F5F4C8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFEFE0();
  v24 = sub_23FBFEFAC(v23);
  v213 = type metadata accessor for FeedbackLearning.FlowAction(v24);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FBFF218();
  sub_23FBFEFAC(v29);
  v216 = sub_23FD72BF0();
  v211 = *(_QWORD *)(v216 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v34, v35);
  sub_23FBFF218();
  sub_23FC15A3C(v36);
  sub_23FBFD684(&qword_256F5D960);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v37, v38);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v39);
  v221 = sub_23FD7157C();
  v214 = *(_QWORD *)(v221 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v42, v43);
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v44, v45);
  sub_23FBFF218();
  sub_23FC15A3C(v46);
  sub_23FBFD684(qword_254346A10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v49);
  v50 = sub_23FD71474();
  v219 = *(_QWORD *)(v50 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v51, v52);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v53, v54);
  v56 = (char *)&v193 - v55;
  v227 = sub_23FD74120();
  v225 = *(_QWORD *)(v227 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v57, v58);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v59);
  v60 = sub_23FD73E08();
  v228 = *(_QWORD *)(v60 - 8);
  v229 = v60;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v61, v62);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v63);
  v202 = _s19TranscriptRetrieverVMa();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v64, v65);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v66, v67);
  sub_23FBFF218();
  sub_23FBFEFAC(v68);
  v69 = sub_23FD7409C();
  v233 = *(_QWORD *)(v69 - 8);
  v234 = v69;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v70, v71);
  sub_23FC0610C();
  v72 = sub_23FD72B6C();
  v73 = *(_QWORD *)(v72 - 8);
  v75 = MEMORY[0x24BDAC7A8](v72, v74);
  v77 = (char *)&v193 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v75, v78);
  v80 = (char *)&v193 - v79;
  if (qword_256F5D2B8 != -1)
    swift_once();
  v81 = sub_23FD72B90();
  sub_23FBFED48(v81, (uint64_t)qword_256F7F430);
  sub_23FD72B84();
  sub_23FD72B48();
  v82 = sub_23FD72B84();
  v83 = sub_23FD74FE4();
  if ((sub_23FD7502C() & 1) != 0)
  {
    v84 = (uint8_t *)sub_23FBFEFF4();
    v217 = v56;
    v85 = v84;
    *(_WORD *)v84 = 0;
    v86 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v82, v83, v86, "FeedbackLearning.evaluate", "", v85, 2u);
    sub_23FBFEFA0();
  }

  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v77, v80, v72);
  sub_23FD72BCC();
  swift_allocObject();
  sub_23FC8D780();
  v87 = sub_23FD72BC0();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v80, v72);
  v88 = v235;
  sub_23FD740A8();
  v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v233 + 88))(v1, v234);
  if (v89 == *MEMORY[0x24BE56B00])
  {
    sub_23FC8D87C();
LABEL_12:
    v91 = (uint64_t)v223;
    v92 = v232;
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v228 + 16))(v223, v232, v229);
    v93 = v226;
    v94 = v230;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 16))(v226, v230, v227);
    v95 = v224;
    sub_23FD2A328(v91, v93, (uint64_t)v224);
    v96 = sub_23FC8D854();
    v97 = (char **)sub_23FBFDE40((_QWORD *)(v94 + *(int *)(v96 + 24)), *(_QWORD *)(v94 + *(int *)(v96 + 24) + 24));
    v98 = sub_23FD73DE4();
    v99 = sub_23FD02A08(v98, (uint64_t)v95, *v97);
    sub_23FC1002C();
    v100 = sub_23FC02284(v92);
    MEMORY[0x24BDAC7A8](v100, v101);
    *(&v193 - 6) = v94;
    *(&v193 - 5) = (uint64_t)v95;
    *(&v193 - 4) = v99;
    *(&v193 - 3) = v88;
    *(&v193 - 2) = v231;
    sub_23FC8D984((void (*)(_QWORD))sub_23FC8D004, (uint64_t)(&v193 - 8), v100);
    v103 = v102;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23FBFEF18((uint64_t)v95, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
    goto LABEL_13;
  }
  v90 = v89 == *MEMORY[0x24BE56C78] || v89 == *MEMORY[0x24BE56C80];
  if (v90)
    goto LABEL_12;
  sub_23FC8D87C();
  v105 = v222;
  sub_23FC8AC68();
  v106 = sub_23FC8D780();
  sub_23FC100EC(v106, v107, v50);
  if (v108)
  {
    v109 = qword_254346A10;
    v110 = (uint64_t)v105;
LABEL_20:
    sub_23FBFEF74(v110, v109);
    v103 = MEMORY[0x24BEE4AF8];
    goto LABEL_13;
  }
  v111 = v219;
  (*(void (**)(char *, _QWORD, uint64_t))(v219 + 32))(v56, v105, v50);
  v112 = v218;
  sub_23FC8CC14(v218);
  v113 = v221;
  sub_23FC100EC(v112, 1, v221);
  if (v114)
  {
    (*(void (**)(char *, uint64_t))(v111 + 8))(v56, v50);
    v109 = &qword_256F5D960;
    v110 = v112;
    goto LABEL_20;
  }
  v234 = v87;
  v115 = v214;
  v116 = v220;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 32))(v220, v112, v113);
  v117 = v215;
  sub_23FD724DC();
  v118 = *(void (**)(uint64_t, char *, uint64_t))(v111 + 16);
  v119 = v209;
  v217 = v56;
  v118(v209, v56, v50);
  v120 = v50;
  v121 = v210;
  v222 = *(void (**)(_QWORD, _QWORD, _QWORD))(v115 + 16);
  v222(v210, v116, v113);
  v122 = sub_23FD72BE4();
  v123 = sub_23FD74F3C();
  v224 = v122;
  LODWORD(v218) = v123;
  v124 = os_log_type_enabled(v122, v123);
  v194 = v120;
  if (v124)
  {
    v125 = sub_23FBFEFF4();
    v240 = sub_23FBFEFF4();
    *(_DWORD *)v125 = 136315394;
    sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v126 = sub_23FD75344();
    v237 = sub_23FC8D78C(v126, v127);
    sub_23FD75044();
    sub_23FC1002C();
    sub_23FC8D75C();
    *(_WORD *)(v125 + 12) = 2080;
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v128 = sub_23FC8D8D4();
    v237 = sub_23FC8D78C(v128, v129);
    sub_23FC8D818();
    sub_23FC8D8C8();
    sub_23FC1002C();
    sub_23FC8D824(*(uint64_t (**)(uint64_t, uint64_t))(v214 + 8));
    _os_log_impl(&dword_23FBF8000, v224, (os_log_type_t)v218, "Event references action id=%s and statement id=%s. Generating updated task evaluation.", (uint8_t *)v125, 0x16u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  sub_23FC8D75C();
  sub_23FC8D824(*(uint64_t (**)(uint64_t, uint64_t))(v115 + 8));

  v130 = *(NSObject **)(v211 + 8);
  sub_23FC8D7F8(v117);
  v131 = v212;
  sub_23FC8D818();
  v132 = v232;
  sub_23FC00BB0();
  v133 = v213;
  sub_23FC100EC(v131, 1, v213);
  if (v90)
  {
    sub_23FBFEF74(v131, &qword_256F5F4C8);
    v134 = v204;
    sub_23FD724DC();
    v222(v203, v119, v113);
    v135 = sub_23FD72BE4();
    v136 = sub_23FD74F3C();
    if (os_log_type_enabled(v135, v136))
    {
      v137 = sub_23FBFEFF4();
      v224 = v130;
      v138 = (uint8_t *)v137;
      v240 = sub_23FBFEFF4();
      *(_DWORD *)v138 = 136315138;
      sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
      v139 = sub_23FC8D8D4();
      v237 = sub_23FC8D78C(v139, v140);
      sub_23FC8D818();
      sub_23FC8D8C8();
      sub_23FC1002C();
      sub_23FC8D86C();
      _os_log_impl(&dword_23FBF8000, v135, v136, "Could not build a flow action for event with statement id=%s", v138, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    sub_23FC8D86C();

    sub_23FC8D7F8(v134);
    v167 = v194;
    v168 = v223;
    v121(v119, v113);
    v168(v217, v167);
  }
  else
  {
    v224 = v130;
    v141 = v208;
    sub_23FC0F380(v131, v208, type metadata accessor for FeedbackLearning.FlowAction);
    v142 = *(int *)(v133 + 24);
    swift_bridgeObjectRetain();
    v143 = v230;
    sub_23FCF6D64();
    swift_bridgeObjectRelease();
    v144 = v225;
    v145 = v226;
    v146 = v227;
    sub_23FC06160(v226, v143, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v225 + 16));
    v147 = swift_bridgeObjectRetain();
    v148 = sub_23FCDF728(v147, v145);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v145, v146);
    v149 = *(_QWORD *)(v141 + v142);
    v150 = _s23PromptResponseRetrieverCMa();
    swift_allocObject();
    v151 = swift_bridgeObjectRetain();
    v152 = sub_23FCA3BEC(v151);
    v153 = v207;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 16))(v207, v132, v229);
    v154 = v202;
    sub_23FC584E0((uint64_t)&v240, v153 + *(int *)(v202 + 20));
    v155 = (_QWORD *)(v153 + *(int *)(v154 + 24));
    v155[3] = v150;
    v155[4] = &off_25100FCE0;
    v156 = v153;
    *v155 = v152;
    v157 = (uint64_t *)(v153 + *(int *)(v154 + 28));
    v157[3] = (uint64_t)&_s28StatementParameterResolutionVN;
    v157[4] = (uint64_t)&off_2510119A8;
    *v157 = v148;
    v158 = sub_23FC8D854();
    v159 = (char *)*sub_23FBFDE40((_QWORD *)(v143 + *(int *)(v158 + 24)), *(_QWORD *)(v143 + *(int *)(v158 + 24) + 24));
    swift_bridgeObjectRetain();
    swift_retain();
    v160 = sub_23FD02A08(v149, v156, v159);
    swift_bridgeObjectRelease();
    v239[1] = v154;
    v239[2] = &off_251014790;
    v161 = sub_23FBFDDEC(&v237);
    sub_23FC0EDD8(v156, (uint64_t)v161, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
    v162 = v205;
    sub_23FC8C6D0(v141, (uint64_t)&v237, v160, v205);
    swift_bridgeObjectRelease();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v237);
    v163 = sub_23FC8D780();
    sub_23FC100EC(v163, v164, v206);
    if (v165)
    {
      sub_23FBFEF74(v162, &qword_256F5F4C0);
      v166 = sub_23FC101F4();
      sub_23FC8D894(v166, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
      sub_23FC8D8E0();
      sub_23FBFEF18(v141, type metadata accessor for FeedbackLearning.FlowAction);
      sub_23FC8D7EC(v220);
      sub_23FC8D8BC();
    }
    else
    {
      v169 = v201;
      sub_23FC0F380(v162, v201, type metadata accessor for FeedbackLearning.TaskEvaluation);
      sub_23FBFD684(&qword_256F5D4E8);
      v170 = v200;
      v171 = sub_23FC8D780();
      sub_23FC103A0(v171, v172, v173, v174);
      static FeedbackLearning.TaskFinalResolutionState.== infix(_:_:)();
      v176 = v175;
      sub_23FBFEF18(v170, type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
      v177 = v194;
      sub_23FC8D818();
      if ((v176 & 1) == 0)
      {
        sub_23FBFD684(qword_256F5F4D0);
        v189 = (*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
        v103 = swift_allocObject();
        *(_OWORD *)(v103 + 16) = xmmword_23FD769D0;
        sub_23FC0F380(v169, v103 + v189, type metadata accessor for FeedbackLearning.TaskEvaluation);
        v190 = sub_23FC101F4();
        sub_23FC8D894(v190, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
        sub_23FC8D8E0();
        sub_23FC8D88C(type metadata accessor for FeedbackLearning.FlowAction, (uint64_t)v239);
        sub_23FC8D7EC(v144);
        sub_23FC8D8BC();
        goto LABEL_13;
      }
      v178 = v198;
      sub_23FD724DC();
      v179 = v197;
      sub_23FC0EDD8(v208, v197, type metadata accessor for FeedbackLearning.FlowAction);
      v180 = v199;
      sub_23FC0EDD8(v169, v199, type metadata accessor for FeedbackLearning.TaskEvaluation);
      v181 = sub_23FD72BE4();
      v182 = sub_23FD74F3C();
      v183 = v182;
      if (os_log_type_enabled(v181, v182))
      {
        v184 = sub_23FBFEFF4();
        v235 = sub_23FBFEFF4();
        v237 = v235;
        *(_DWORD *)v184 = 136315394;
        LODWORD(v232) = v183;
        sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
        v185 = sub_23FD75344();
        v236 = sub_23FC9DC40(v185, v186, &v237);
        sub_23FD75044();
        sub_23FC1002C();
        sub_23FBFEF18(v179, type metadata accessor for FeedbackLearning.FlowAction);
        *(_WORD *)(v184 + 12) = 2080;
        sub_23FC0EDD8(v180, v195, type metadata accessor for FeedbackLearning.TaskEvaluation);
        v187 = sub_23FD74C0C();
        v236 = sub_23FC9DC40(v187, v188, &v237);
        sub_23FD75044();
        sub_23FC8D818();
        swift_bridgeObjectRelease();
        sub_23FBFEF18(v180, type metadata accessor for FeedbackLearning.TaskEvaluation);
        _os_log_impl(&dword_23FBF8000, v181, (os_log_type_t)v232, "Flow action with statement id=%s is incomplete, not generating task evaluation for result=%s", (uint8_t *)v184, 0x16u);
        swift_arrayDestroy();
        sub_23FBFEFA0();
      }
      sub_23FBFEF18(v179, type metadata accessor for FeedbackLearning.FlowAction);
      sub_23FC8D894(v191, type metadata accessor for FeedbackLearning.TaskEvaluation);

      sub_23FC8D804(v178);
      v192 = v223;
      sub_23FC101F4();
      sub_23FBFEF18(v169, type metadata accessor for FeedbackLearning.TaskEvaluation);
      sub_23FC8D88C((uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa, (uint64_t)&v238);
      sub_23FC8D8E0();
      sub_23FC8D88C(type metadata accessor for FeedbackLearning.FlowAction, (uint64_t)v239);
      sub_23FC8D7EC(v144);
      v192(v217, v177);
    }
  }
  v103 = MEMORY[0x24BEE4AF8];
LABEL_13:
  sub_23FC8C33C();
  swift_release();
  return v103;
}

uint64_t sub_23FC8C33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  NSObject *v15;
  char v16;
  char v17;
  const char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_signpost_id_t v24;
  void (*v25)(_BYTE *, uint64_t);
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t v29;

  v0 = sub_23FD72B9C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_23FD72B6C();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = &v26[-v12];
  if (qword_256F5D2B8 != -1)
    swift_once();
  v14 = sub_23FD72B90();
  sub_23FBFED48(v14, (uint64_t)qword_256F7F430);
  v15 = sub_23FD72B84();
  sub_23FD72BA8();
  v27 = sub_23FD74FD8();
  if ((sub_23FD7502C() & 1) != 0)
  {
    swift_retain();
    sub_23FD72BD8();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v4, v0) == *MEMORY[0x24BEE7810])
    {
      v16 = 0;
      v17 = 0;
      v18 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
      v18 = "%s";
      v17 = 2;
      v16 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v10, v13, v5);
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v29 = v21;
    *(_BYTE *)v20 = v17;
    *(_BYTE *)(v20 + 1) = v16;
    *(_WORD *)(v20 + 2) = 2080;
    sub_23FD723D4();
    v22 = sub_23FD750F8();
    v28 = sub_23FC9DC40(v22, v23, &v29);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v24 = sub_23FD72B54();
    _os_signpost_emit_with_name_impl(&dword_23FBF8000, v15, (os_signpost_type_t)v27, v24, "FeedbackLearning.evaluate", v18, (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v21, -1, -1);
    MEMORY[0x2426798D8](v20, -1, -1);

    v25 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v25(v13, v5);
    return ((uint64_t (*)(_BYTE *, uint64_t))v25)(v10, v5);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v13, v5);
  }
}

uint64_t sub_23FC8C610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v8;
  uint64_t v10[5];

  v10[3] = _s19TranscriptRetrieverVMa();
  v10[4] = (uint64_t)&off_251014790;
  v8 = sub_23FBFDDEC(v10);
  sub_23FC0EDD8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  sub_23FC8C6D0(a1, (uint64_t)v10, a3, a4);
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v10);
}

uint64_t sub_23FC8C6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a2;
  v32 = a3;
  v30 = a1;
  v33 = a4;
  v24 = type metadata accessor for FeedbackLearning.FlowAction(0);
  v5 = MEMORY[0x24BDAC7A8](v24, v4);
  v28 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v27 = (char *)&v23 - v8;
  v9 = sub_23FD72BF0();
  v25 = *(_QWORD *)(v9 - 8);
  v26 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v29 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  MEMORY[0x24BDAC7A8](v34, v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FD71474();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  _s17FastTaskEvaluatorVMa();
  sub_23FC8FDC8();
  sub_23FCFE0D4(v30, v31, v32, (uint64_t)v14);
  sub_23FC8FEB0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v20 = (uint64_t)v14;
  v21 = v33;
  sub_23FC0F380(v20, v33, type metadata accessor for FeedbackLearning.TaskEvaluation);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v21, 0, 1, v34);
}

uint64_t sub_23FC8CC14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v47 = a1;
  v1 = sub_23FBFD684(&qword_256F5D538);
  MEMORY[0x24BDAC7A8](v1, v2);
  v46 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FD71BB8();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD73514();
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v40 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FD730F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FD73C7C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FD7409C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  v25 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v24, v20);
  if (v25 == *MEMORY[0x24BE56AF8])
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v24, v15);
    v26 = v47;
    sub_23FD73BEC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    v27 = sub_23FD7157C();
    v28 = v26;
LABEL_13:
    v35 = 0;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, v35, 1, v27);
  }
  v29 = v47;
  if (v25 == *MEMORY[0x24BE56BA0])
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v24, v10);
    sub_23FD73088();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_12:
    v27 = sub_23FD7157C();
    v28 = v29;
    goto LABEL_13;
  }
  if (v25 != *MEMORY[0x24BE56C40])
  {
    if (v25 != *MEMORY[0x24BE56B98])
    {
      v39 = sub_23FD7157C();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, 1, 1, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    }
    (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
    v33 = (uint64_t)v40;
    v36 = v41;
    v34 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v24, v42);
    sub_23FD734CC();
    v37 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v21 + 96))(v24, v20);
  v31 = v43;
  v30 = v44;
  v32 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v24, v45);
  v33 = (uint64_t)v46;
  sub_23FC0AC90();
  v34 = sub_23FD72044();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v33, 1, v34) != 1)
  {
    sub_23FD72020();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
    v37 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8);
LABEL_11:
    v37(v33, v34);
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  sub_23FBFEF74(v33, &qword_256F5D538);
  v27 = sub_23FD7157C();
  v28 = v29;
  v35 = 1;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, v35, 1, v27);
}

uint64_t sub_23FC8D004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FC8C610(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t *sub_23FC8D024(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *sub_23FC8D064(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD74120();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)((char *)a2 + v9), v7);
    v12 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
    v13 = *(_OWORD *)&v11[v12 + 24];
    *(_OWORD *)&v10[v12 + 24] = v13;
    (**(void (***)(void))(v13 - 8))();
    v14 = a3[6];
    v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)a1 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    v16 = a3[7];
    v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)a1 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
  }
  return a1;
}

uint64_t sub_23FC8D184(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23FD74120();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v5(v6, v4);
  v7 = type metadata accessor for FeedbackLearning.TaskEvaluator();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v6 + *(int *)(v7 + 20));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[6]);
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[7]);
}

uint64_t sub_23FC8D210(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;

  v6 = sub_23FD74120();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
  v12 = *(_OWORD *)(v10 + v11 + 24);
  *(_OWORD *)(v9 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  v13 = a3[6];
  v14 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  v15 = a3[7];
  v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  return a1;
}

uint64_t sub_23FC8D304(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FD74120();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = type metadata accessor for FeedbackLearning.TaskEvaluator();
  sub_23FBFDB34((uint64_t *)(v9 + *(int *)(v11 + 20)), (uint64_t *)(v10 + *(int *)(v11 + 20)));
  sub_23FBFDB34((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  sub_23FBFDB34((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_23FC8D3BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = sub_23FD74120();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
  v12 = v9 + v11;
  v13 = v10 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[6];
  v16 = a3[7];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = a1 + v16;
  v21 = a2 + v16;
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  return a1;
}

uint64_t sub_23FC8D494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = sub_23FD74120();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
  v12 = v9 + v11;
  v13 = v10 + v11;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v12);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v15);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v19);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  return a1;
}

uint64_t sub_23FC8D588()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FC8D594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = sub_23FC8D834();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, v3, v7);
  }
  v9 = sub_23FC8D8B4();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 24) + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23FC8D628()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FC8D634(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_23FC8D834();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
LABEL_5:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, v4, v4, v9);
    return;
  }
  v11 = sub_23FC8D8B4();
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = v5 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 24) + 24) = (v4 - 1);
  sub_23FC09258();
}

uint64_t sub_23FC8D6BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD74120();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeedbackLearning.TaskEvaluator();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23FC8D74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v2);
}

uint64_t sub_23FC8D75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  *(_QWORD *)(v3 - 288) = v4;
  return v4(v1, v2);
}

uint64_t sub_23FC8D774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23FC8D780()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FC8D78C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_23FC8D7B4()
{
  return 0;
}

uint64_t sub_23FC8D7EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 208))(a1, v1);
}

uint64_t sub_23FC8D7F8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 344));
}

uint64_t sub_23FC8D804(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 280))(a1, *(_QWORD *)(v1 - 344));
}

uint64_t sub_23FC8D824@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 208) = a1;
  return a1(v2, v1);
}

uint64_t sub_23FC8D834()
{
  return sub_23FD74120();
}

uint64_t sub_23FC8D844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23FC8D854()
{
  return _s17FastTaskEvaluatorVMa();
}

uint64_t sub_23FC8D85C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 96) + 8))(v0, *(_QWORD *)(v1 - 88));
}

uint64_t sub_23FC8D86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 208))(v1, v0);
}

uint64_t sub_23FC8D87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_23FC8D88C(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  sub_23FBFEF18(*(_QWORD *)(a2 - 256), a1);
}

void sub_23FC8D894(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FBFEF18(v2, a2);
}

uint64_t sub_23FC8D89C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FC8D8A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23FC8D8B4()
{
  return type metadata accessor for FeedbackLearning.TaskEvaluator();
}

uint64_t sub_23FC8D8BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 288))();
}

uint64_t sub_23FC8D8C8()
{
  return sub_23FD75044();
}

uint64_t sub_23FC8D8D4()
{
  return sub_23FD75344();
}

uint64_t sub_23FC8D8E0()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 - 128);
}

uint64_t FeedbackLearningBiomeDonator.init(stream:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FBFDE28(a1, a2);
}

uint64_t FeedbackLearningBiomeDonator.donate(evaluation:event:telemetryStream:loggingId:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v8 = a3[3];
  v9 = a3[4];
  v10 = sub_23FBFDE40(a3, v8);
  return sub_23FC8F780(a1, a2, (uint64_t)v10, a4, v4, v8, v9);
}

void sub_23FC8D950(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_23FC8D9B8(a1, a2, a3, &qword_256F5F4C8, type metadata accessor for FeedbackLearning.FlowAction, (uint64_t (*)(_QWORD))MEMORY[0x24BE52140], (uint64_t)sub_23FC99404);
}

void sub_23FC8D984(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_23FC8D9B8(a1, a2, a3, &qword_256F5F4C0, type metadata accessor for FeedbackLearning.TaskEvaluation, type metadata accessor for FeedbackLearning.FlowAction, (uint64_t)sub_23FC994E8);
}

void sub_23FC8D9B8(void (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t *v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;

  v38 = a4;
  sub_23FBFD684(a4);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFF180();
  v17 = v16 - v15;
  v39 = a5;
  v41 = a5(0);
  v18 = sub_23FC8FDAC(v41);
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFEFCC();
  v40 = v20;
  MEMORY[0x24BDAC7A8](v21, v22);
  v37 = (uint64_t)v35 - v23;
  v24 = *(_QWORD *)(a3 + 16);
  if (v24)
  {
    v35[0] = a7;
    v25 = *(_QWORD *)(a6(0) - 8);
    v26 = a3 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v27 = *(_QWORD *)(v25 + 72);
    v35[1] = a3;
    sub_23FC10110();
    v28 = MEMORY[0x24BEE4AF8];
    v36 = a1;
    while (1)
    {
      a1(v26);
      if (v7)
        break;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v17, 1, v41) == 1)
      {
        sub_23FC8FCC4(v17, v38);
      }
      else
      {
        v29 = v37;
        v30 = v39;
        sub_23FC748BC(v17, v37, v39);
        sub_23FC748BC(v29, v40, v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_23FC8FD0C(0, *(_QWORD *)(v28 + 16) + 1);
        v32 = *(_QWORD *)(v28 + 16);
        v31 = *(_QWORD *)(v28 + 24);
        if (v32 >= v31 >> 1)
          v28 = sub_23FC8FD0C(v31 > 1, v32 + 1);
        *(_QWORD *)(v28 + 16) = v32 + 1;
        sub_23FBFF148();
        sub_23FC748BC(v40, v28 + v33 + *(_QWORD *)(v34 + 72) * v32, v39);
        a1 = v36;
      }
      v26 += v27;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_23FC06000();
}

uint64_t sub_23FC8DBCC(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  result = MEMORY[0x24BEE4AF8];
  v13 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(sub_23FD72DE8() - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v11 = a1(&v12, v9);
      if (v3)
        break;
      if (v12)
      {
        MEMORY[0x242678A74](v11);
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23FD74D14();
        sub_23FD74D44();
        sub_23FD74CFC();
      }
      v9 += v10;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23FC8DD04(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_23FC8DD5C(a1, a2, a3, &qword_256F5F598, (uint64_t (*)(_QWORD))MEMORY[0x24BE58A78]);
}

void sub_23FC8DD30(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_23FC8DD5C(a1, a2, a3, &qword_256F5F5A0, (uint64_t (*)(_QWORD))MEMORY[0x24BE58AB0]);
}

void sub_23FC8DD5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;

  sub_23FBFD684(a4);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFF180();
  v9 = a5(0);
  v10 = sub_23FC8FDAC(v9);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFCC();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC8FD68(v14, v15, v16, v17, v18, v19, v20, v21, v25);
  if (a3 >> 62)
  {
    sub_23FC5A09C();
    if (sub_23FD75248())
      goto LABEL_3;
LABEL_8:
    sub_23FC5A56C();
    goto LABEL_9;
  }
  v22 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_23FC5A09C();
  if (!v22)
    goto LABEL_8;
LABEL_3:
  if ((a3 & 0xC000000000000001) != 0)
    v23 = (id)MEMORY[0x242678EC4](0, a3);
  else
    v23 = *(id *)(a3 + 32);
  v24 = v23;
  sub_23FC8FD40();
  swift_bridgeObjectRelease();
  sub_23FC5A56C();

LABEL_9:
  sub_23FC06000();
}

uint64_t sub_23FC8DFDC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a3;
  if (a3 >> 62)
    goto LABEL_19;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_23FC10110();
  for (; v5; v5 = sub_23FD75248())
  {
    v15 = v4 & 0xC000000000000001;
    v6 = MEMORY[0x24BEE4AF8];
    v7 = 4;
    v14 = v4;
    while (1)
    {
      if (v15)
        MEMORY[0x242678EC4](v7 - 4, v4);
      else
        swift_retain();
      v8 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      sub_23FC8FD40();
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_23FC58D60();
        swift_release();
        return v6;
      }
      swift_release();
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC8FD88();
          v6 = v11;
        }
        v9 = *(_QWORD *)(v6 + 16);
        if (v9 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_23FC8FD88();
          v6 = v12;
        }
        *(_QWORD *)(v6 + 16) = v9 + 1;
        v10 = v6 + 16 * v9;
        *(_QWORD *)(v10 + 32) = v16;
        *(_QWORD *)(v10 + 40) = v17;
        v4 = v14;
      }
      ++v7;
      if (v8 == v5)
      {
        sub_23FC58D60();
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    if (v4 < 0)
      v3 = v4;
    else
      v3 = v4 & 0xFFFFFFFFFFFFFF8;
    sub_23FC10110();
  }
  sub_23FC58D60();
  return MEMORY[0x24BEE4AF8];
}

void sub_23FC8E188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  unint64_t v35;
  BOOL v36;
  unint64_t v37;
  char v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v57 = a2;
  v58 = a1;
  sub_23FBFD684(&qword_256F5F570);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC8FD1C();
  v56 = sub_23FBFD684(&qword_256F5F578);
  v51 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56, v8);
  sub_23FBFEFCC();
  v52 = v9;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FC8FD68(v12, v13, v14, v15, v16, v17, v18, v19, v49);
  v20 = sub_23FD748C4();
  v21 = *(_QWORD *)(v20 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v49 - v27;
  v29 = *(_QWORD *)(a3 + 56);
  v54 = a3 + 56;
  v30 = 1 << *(_BYTE *)(a3 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & v29;
  v55 = (unint64_t)(v30 + 63) >> 6;
  v59 = a3;
  sub_23FC5A09C();
  v33 = 0;
  v53 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v32)
    {
      v34 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      v35 = v34 | (v33 << 6);
      goto LABEL_23;
    }
    v36 = __OFADD__(v33++, 1);
    if (v36)
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v33 >= v55)
      goto LABEL_36;
    v37 = *(_QWORD *)(v54 + 8 * v33);
    if (!v37)
      break;
LABEL_22:
    v32 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v33 << 6);
LABEL_23:
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v28, *(_QWORD *)(v59 + 48) + *(_QWORD *)(v21 + 72) * v35, v20);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v28, v20);
    sub_23FC8FD40();
    if (v3)
    {
      sub_23FC8FCFC();
      swift_bridgeObjectRelease();
LABEL_36:
      swift_release();
      sub_23FC06000();
      return;
    }
    sub_23FC8FCFC();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 1, v56) == 1)
    {
      sub_23FC8FCC4(v4, &qword_256F5F570);
    }
    else
    {
      v40 = v50;
      sub_23FBFEEEC(v4, v50, &qword_256F5F578);
      sub_23FBFEEEC(v40, v52, &qword_256F5F578);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC8FD48();
        sub_23FC998E8();
        v53 = v47;
      }
      v41 = *(_QWORD *)(v53 + 16);
      v42 = v41 + 1;
      if (v41 >= *(_QWORD *)(v53 + 24) >> 1)
      {
        v49 = v41 + 1;
        sub_23FC998E8();
        v42 = v49;
        v53 = v48;
      }
      *(_QWORD *)(v53 + 16) = v42;
      sub_23FBFF148();
      sub_23FBFEEEC(v46, v44 + v43 + *(_QWORD *)(v45 + 72) * v41, &qword_256F5F578);
    }
  }
  sub_23FC8FDA0();
  if (v38 == v36)
    goto LABEL_36;
  sub_23FC8FD94();
  if (v37)
    goto LABEL_21;
  sub_23FC8FDA0();
  if (v38 == v36)
    goto LABEL_36;
  sub_23FC8FD94();
  if (v37)
    goto LABEL_21;
  sub_23FC8FDA0();
  if (v38 == v36)
    goto LABEL_36;
  sub_23FC8FD94();
  if (v37)
    goto LABEL_21;
  sub_23FC8FDA0();
  if (v38 == v36)
    goto LABEL_36;
  sub_23FC8FD94();
  if (v37)
  {
LABEL_21:
    v33 = v39;
    goto LABEL_22;
  }
  while (1)
  {
    v33 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v33 >= v55)
      goto LABEL_36;
    v37 = *(_QWORD *)(v54 + 8 * v33);
    ++v39;
    if (v37)
      goto LABEL_22;
  }
LABEL_38:
  __break(1u);
}

void sub_23FC8E4FC(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_23FC8D9B8(a1, a2, a3, &qword_256F5EDF0, type metadata accessor for FeedbackLearning.CandidateEvaluation, (uint64_t (*)(_QWORD))MEMORY[0x24BE54658], (uint64_t)sub_23FC99270);
}

uint64_t sub_23FC8E530(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = MEMORY[0x24BEE4AF8];
  v10 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = a3 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      v8 = a1(&v9, v7);
      if (v3)
        break;
      if (v9)
      {
        MEMORY[0x242678A74](v8);
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23FD74D14();
        sub_23FD74D44();
        sub_23FD74CFC();
      }
      v7 += 40;
      if (!--v6)
      {
        sub_23FC58D60();
        return v10;
      }
    }
    sub_23FC58D60();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream.sendEvent(_:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = objc_msgSend((id)BiomeLibrary(), sel_IntelligenceEngine);
  sub_23FC8FD34();
  v4 = objc_msgSend(v1, sel_Interaction);
  swift_unknownObjectRelease();
  v5 = objc_msgSend(v4, sel_Donation);
  sub_23FC8FD34();
  v6 = objc_msgSend(v1, sel_source);
  objc_msgSend(v6, sel_sendEvent_, a1);

}

void sub_23FC8E708(uint64_t a1)
{
  FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream.sendEvent(_:)(a1);
}

void FeedbackLearningBiomeDonator.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream;
  *(_QWORD *)(a1 + 32) = &protocol witness table for FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream;
}

id FeedbackLearningBiomeDonator.donateInteractionTuples(tuple:candidates:sessionId:absoluteTimestamp:statementId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;

  v6 = v4;
  v42 = a3;
  v43 = a4;
  v46 = a2;
  v44 = a1;
  sub_23FBFD684(&qword_256F65DD0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFF180();
  v11 = v10 - v9;
  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC8FD1C();
  v14 = sub_23FD72BF0();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v42 - v21;
  sub_23FD724DC();
  v23 = sub_23FD72BE4();
  v24 = sub_23FD74F48();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)sub_23FC8FD5C();
    v45 = v6;
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_23FBF8000, v23, v24, "FeedbackLearningBiomeDonator#donateInteractionTuples: Sending tupleInteraction to Biome...", v25, 2u);
    sub_23FBFEFA0();
  }

  v45 = *(void (**)(char *, uint64_t))(v15 + 8);
  v45(v22, v14);
  v26 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v5, v42, v26);
  sub_23FC8FD7C(v5, 0);
  sub_23FD71570();
  v27 = (void *)sub_23FD754A0();
  v28 = objc_allocWithZone(MEMORY[0x24BE0C3E8]);
  v29 = sub_23FC8F434(v5, v27);
  v30 = sub_23FD71414();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v11, v43, v30);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, 0, 1, v30);
  sub_23FC8FD7C(v5, 1);
  v31 = v29;
  v32 = sub_23FC8EAB8(v44);
  MEMORY[0x24BDAC7A8](v32, v33);
  *(&v42 - 2) = (uint64_t)v6;
  sub_23FC8DBCC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_23FC8FA74, (uint64_t)(&v42 - 4), v46);
  v34 = objc_allocWithZone(MEMORY[0x24BE0C3D0]);
  v35 = sub_23FC8F4D4(v11, v29, v5, 0, 0, 2u, v32);
  v36 = *((_QWORD *)v6 + 3);
  v37 = *((_QWORD *)v6 + 4);
  sub_23FBFDE40(v6, v36);
  (*(void (**)(id, uint64_t, uint64_t))(v37 + 8))(v35, v36, v37);
  sub_23FD724DC();
  v38 = sub_23FD72BE4();
  v39 = sub_23FD74F48();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)sub_23FC8FD5C();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_23FBF8000, v38, v39, "FeedbackLearningBiomeDonator#donateInteractionTuples: Sent tupleInteraction to Biome", v40, 2u);
    sub_23FBFEFA0();
  }

  v45(v19, v14);
  return v35;
}

id sub_23FC8EAB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  void (*v32)(void (**)(char *, uint64_t), char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void (**v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (**v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = sub_23FD72BF0();
  v55 = *(void (***)(char *, uint64_t))(v2 - 8);
  v56 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD72E18();
  v57 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FD72D34();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FBFD684(&qword_256F5D520);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23FD72D64();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (void (**)(char *, uint64_t))((char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = a1;
  v26 = v25;
  sub_23FC8FC08(v24, (uint64_t)v18);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v26) == 1)
  {
    sub_23FC8FCC4((uint64_t)v18, &qword_256F5D520);
    sub_23FD724DC();
    v27 = v5;
    v28 = sub_23FD72BE4();
    v29 = sub_23FD74F48();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_23FBF8000, v28, v29, "FeedbackLearningBiomeDonator#donateInteractionTuples: No tuple interaction generated. Skipping Donation.", v30, 2u);
      MEMORY[0x2426798D8](v30, -1, -1);
    }

    v55[1](v27, v56);
    return 0;
  }
  else
  {
    v32 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v20 + 32);
    v56 = v26;
    v32(v23, v18, v26);
    v55 = v23;
    v33 = sub_23FD72D40();
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      v51 = v20;
      v52 = v14;
      v53 = v11;
      v54 = v10;
      v58 = MEMORY[0x24BEE4AF8];
      sub_23FD75188();
      v35 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      v50 = v33;
      v36 = v33 + v35;
      v37 = *(_QWORD *)(v57 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
      do
      {
        v38(v9, v36, v6);
        v39 = sub_23FD72E00();
        v41 = v40;
        v42 = sub_23FD72E0C();
        v44 = v43;
        v45 = objc_allocWithZone(MEMORY[0x24BE0C3D8]);
        sub_23FC8F664(v39, v41, v42, v44);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v9, v6);
        sub_23FD75170();
        sub_23FD75194();
        sub_23FD751A0();
        sub_23FD7517C();
        v36 += v37;
        --v34;
      }
      while (v34);
      v46 = v58;
      swift_bridgeObjectRelease();
      v11 = v53;
      v10 = v54;
      v20 = v51;
      v14 = v52;
    }
    else
    {
      swift_bridgeObjectRelease();
      v46 = MEMORY[0x24BEE4AF8];
    }
    sub_23FC8FC50(0, &qword_256F5F588);
    v47 = v55;
    sub_23FD72D58();
    v48 = sub_23FC8F040((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v31 = sub_23FC8F3A8(v46, v48);
    (*(void (**)(_QWORD, uint64_t))(v20 + 8))(v47, v56);
  }
  return v31;
}

id sub_23FC8EE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v25;

  v25 = sub_23FD72D34();
  v0 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23FD72E18();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v25 - v11;
  sub_23FD72DDC();
  v13 = sub_23FD72E00();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v12, v4);
  sub_23FD72DDC();
  v17 = sub_23FD72E0C();
  v19 = v18;
  v16(v9, v4);
  v20 = objc_allocWithZone(MEMORY[0x24BE0C3D8]);
  v21 = sub_23FC8F664(v13, v15, v17, v19);
  sub_23FD72DD0();
  v22 = sub_23FC8F040((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v25);
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0C3E0]), sel_initWithCandidateId_userAlignment_, v21, v22);

  return v23;
}

uint64_t sub_23FC8F040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  int v21;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  os_log_t v29;
  uint8_t *v30;
  uint64_t v31;
  _QWORD v32[2];
  os_log_t v33;
  uint64_t v34;
  uint8_t *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v2 = sub_23FD72BF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD72D34();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)v32 - v15;
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v32 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v20((char *)v32 - v18, a1, v7);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v19, v7);
  if (v21 == *MEMORY[0x24BE545C0])
    return 1;
  if (v21 == *MEMORY[0x24BE545B8])
    return 5;
  if (v21 == *MEMORY[0x24BE545D0])
    return 2;
  if (v21 == *MEMORY[0x24BE545C8])
    return 4;
  if (v21 == *MEMORY[0x24BE545E8])
    return 3;
  if (v21 != *MEMORY[0x24BE545E0])
  {
    if (v21 == *MEMORY[0x24BE545D8])
      return 6;
    if (v21 == *MEMORY[0x24BE545B0])
      return 7;
    sub_23FD724DC();
    v20(v16, a1, v7);
    v23 = sub_23FD72BE4();
    v24 = sub_23FD74F54();
    v36 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v38 = v34;
      v33 = v23;
      v25 = v35;
      *(_DWORD *)v35 = 136315138;
      v32[1] = v25 + 4;
      v20(v12, (uint64_t)v16, v7);
      v26 = sub_23FD74C0C();
      v37 = sub_23FC9DC40(v26, v27, &v38);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28(v16, v7);
      v29 = v33;
      v30 = v35;
      _os_log_impl(&dword_23FBF8000, v33, (os_log_type_t)v36, "BiomeDonator#mapUserAlignment: Unknown user alignment %s", v35, 0xCu);
      v31 = v34;
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v31, -1, -1);
      MEMORY[0x2426798D8](v30, -1, -1);

    }
    else
    {
      v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28(v16, v7);

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v28(v19, v7);
  }
  return 0;
}

id sub_23FC8F3A8(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_23FC8FC50(0, &qword_256F5F590);
  v4 = (void *)sub_23FD74CCC();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithCandidateIds_userAlignment_, v4, a2);

  return v5;
}

id sub_23FC8F434(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = v2;
  v6 = sub_23FD71474();
  v7 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v6) != 1)
  {
    v7 = (void *)sub_23FD71444();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  v8 = objc_msgSend(v3, sel_initWithSessionId_statementIndex_, v7, a2);

  return v8;
}

id sub_23FC8F4D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, void *a7)
{
  void *v7;
  void *v8;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  v8 = v7;
  v14 = sub_23FD71414();
  v15 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v14) != 1)
  {
    v15 = (void *)sub_23FD713E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
  }
  v16 = sub_23FD71474();
  v17 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a3, 1, v16) != 1)
  {
    v17 = (void *)sub_23FD71444();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a3, v16);
  }
  if (a5)
  {
    v18 = (void *)sub_23FD74BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  sub_23FC8FC50(0, &qword_256F5F580);
  v19 = (void *)sub_23FD74CCC();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v8, sel_initWithAbsoluteTimestamp_transcriptStatementId_appIntentInvocationUUID_sirikitIntentItemId_trigger_tupleInteraction_candidateInteractions_, v15, a2, v17, v18, a6, a7, v19);

  return v20;
}

id sub_23FC8F664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  void *v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = (void *)sub_23FD74BE8();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v7 = (void *)sub_23FD74BE8();
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = objc_msgSend(v4, sel_initWithIdentifier_bundleId_, v6, v7);

  return v8;
}

void (*sub_23FC8F700(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_23FC56908(v6, a2, a3);
  return sub_23FC8F754;
}

void sub_23FC8F754(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_23FC8F780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[16];
  uint64_t v52;
  _BYTE v53[16];

  v42 = a4;
  v43 = a7;
  v48 = a5;
  v40 = a3;
  v41 = a2;
  v9 = sub_23FD71414();
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v45 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FBFD684(&qword_256F5D520);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FeedbackLearningInteractionRecord();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FD71474();
  v46 = *(_QWORD *)(v20 - 8);
  v47 = v20;
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v27, v40, a6);
  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  sub_23FC92884();
  sub_23FC957D0();
  v29 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  v30 = *(_QWORD *)(a1 + *(int *)(v29 + 28));
  v52 = a1;
  swift_bridgeObjectRetain();
  sub_23FC9526C((uint64_t)sub_23FBFEED0, (uint64_t)v51, v30, (uint64_t)v53);
  v32 = v31;
  swift_bridgeObjectRelease();
  v33 = a1 + *(int *)(v29 + 24);
  v34 = sub_23FD72D28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v19, v33, v34);
  v35 = (uint64_t)&v19[*(int *)(v16 + 20)];
  sub_23FBFEEEC((uint64_t)v15, v35, &qword_256F5D520);
  *(_QWORD *)&v19[*(int *)(v16 + 24)] = v32;
  v36 = (uint64_t)v45;
  sub_23FD72D10();
  swift_bridgeObjectRetain();
  v37 = FeedbackLearningBiomeDonator.donateInteractionTuples(tuple:candidates:sessionId:absoluteTimestamp:statementId:)(v35, v32, a1, v36);
  swift_bridgeObjectRelease();
  sub_23FC92974();

  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v36, v50);
  sub_23FC8FC88((uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v27, a6);
}

id sub_23FC8FA74@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_23FC8EE94();
  *a1 = result;
  return result;
}

uint64_t initializeWithCopy for FeedbackLearningBiomeDonator(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for FeedbackLearningBiomeDonator(uint64_t *a1, uint64_t *a2)
{
  sub_23FBFDB34(a1, a2);
  return a1;
}

__n128 initializeWithTake for FeedbackLearningBiomeDonator(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FeedbackLearningBiomeDonator(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearningBiomeDonator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearningBiomeDonator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearningBiomeDonator()
{
  return &type metadata for FeedbackLearningBiomeDonator;
}

uint64_t dispatch thunk of FeedbackLearningBiomeDonator.FeedbackLearningBiomeStreamProtocol.sendEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream()
{
  return &type metadata for FeedbackLearningBiomeDonator.FeedbackLearningBiomeStream;
}

uint64_t sub_23FC8FC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5D520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FC8FC50(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23FC8FC88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedbackLearningInteractionRecord();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23FC8FCC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23FBFD684(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_23FBFF0A0();
}

uint64_t sub_23FC8FCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23FC8FD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 - 144))(a1, a2, 1, v2);
}

uint64_t sub_23FC8FD34()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FC8FD40()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_23FC8FD48()
{
  return 0;
}

uint64_t sub_23FC8FD5C()
{
  return swift_slowAlloc();
}

void sub_23FC8FD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 152) = (char *)&a9 - v9;
}

uint64_t sub_23FC8FD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v2);
}

void sub_23FC8FD88()
{
  sub_23FC9954C();
}

uint64_t sub_23FC8FDAC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t dispatch thunk of FeedbackLearning.TelemetryInserting.insert(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_23FC8FDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FC061F0();
  v4 = sub_23FC93238();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC7E1F4();
  v7 = sub_23FD7298C();
  sub_23FC101FC();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC10118();
  sub_23FC93024();
  sub_23FC93224(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BE58BF0], v4);
  sub_23FC900D8();
  sub_23FC5B3B0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v7);
  sub_23FC060D4();
}

void sub_23FC8FEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FC061F0();
  sub_23FC93238();
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC0610C();
  v8 = sub_23FD71DF8();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC061D8();
  v11 = sub_23FD72950();
  sub_23FC931DC();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FC10118();
  sub_23FD73F94();
  sub_23FD71DEC();
  swift_bridgeObjectRelease();
  sub_23FC90364();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v5, v11);
  sub_23FC1046C(v3, *MEMORY[0x24BE58BE0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  sub_23FC900D8();
  sub_23FBFF204(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v11);
  sub_23FC060D4();
}

void sub_23FC8FFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC061F0();
  sub_23FC93238();
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC100B8();
  v6 = sub_23FD72974();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC9314C();
  sub_23FD728C0();
  sub_23FD728B4();
  sub_23FBFF1E4(v1, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_23FC100A0(v1, *MEMORY[0x24BE58BE8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23FC900D8();
  sub_23FC100E4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v6);
  sub_23FC060D4();
}

uint64_t sub_23FC900A4()
{
  sub_23FD7352C();
  return sub_23FD73520();
}

void sub_23FC900D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  sub_23FC061F0();
  v41 = v6;
  v35 = v7;
  v38 = *(_QWORD *)(sub_23FD72644() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC93168(v10, v32);
  sub_23FBFD684(&qword_256F5D528);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC0A0A8();
  v13 = sub_23FD726C8();
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFE0();
  v36 = v16;
  sub_23FD728F0();
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC93184();
  v33 = *(_QWORD *)(sub_23FD72B00() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC10388();
  sub_23FBFD684(&qword_256F5F600);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC10274();
  v23 = sub_23FD729BC();
  v24 = *(_QWORD *)(v23 - 8);
  v34 = v23;
  MEMORY[0x24BDAC7A8](v23, v25);
  sub_23FC0603C();
  sub_23FD729B0();
  v26 = sub_23FC93238();
  sub_23FC93298();
  v27(v0, v35, v26);
  sub_23FC931EC(v0);
  sub_23FD729A4();
  sub_23FBFF1E4(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  sub_23FC1046C(v1, *MEMORY[0x24BE58B50], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23FC90568();
  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FC100A0(v5, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16));
  v28 = *MEMORY[0x24BE58758];
  sub_23FD726A4();
  sub_23FC9322C();
  sub_23FC93224(v5, v28, v29);
  sub_23FC93064(v5);
  sub_23FC1046C(v37, *MEMORY[0x24BE585F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 104));
  sub_23FC906E0();
  sub_23FBFF204(v37, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  sub_23FBFEF74(v5, &qword_256F5D528);
  v30 = v41[3];
  v31 = v41[4];
  sub_23FBFDE40(v41, v30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8))(v36, v30, v31);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v36, v40);
  sub_23FC100E4(v4, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v3, v34);
  sub_23FC060D4();
}

void sub_23FC90364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  _QWORD v24[6];
  uint64_t v25;
  _BYTE v26[24];

  sub_23FC061F0();
  v4 = v3;
  v6 = v5;
  sub_23FBFD684(&qword_256F5F608);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F5F610);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC8FD1C();
  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC10118();
  sub_23FBFD684(&qword_256F5F5E0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC061C0();
  sub_23FD72944();
  sub_23FBFF104();
  sub_23FC93298();
  sub_23FC93224(v2, v6, v15);
  sub_23FC93064(v2);
  sub_23FD72B30();
  v25 = v2;
  sub_23FC93024();
  sub_23FBFEF74(v2, qword_254346A10);
  sub_23FC93240();
  sub_23FD72848();
  v16 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  sub_23FD71570();
  v26[12] = 0;
  sub_23FD7292C();
  sub_23FC910A4();
  v17 = sub_23FD72764();
  sub_23FBFF0D8(v1, v18, v19, v17);
  sub_23FD72908();
  v20 = *(_QWORD *)(v6 + *(int *)(v16 + 28));
  v24[2] = v4;
  swift_bridgeObjectRetain();
  sub_23FC95240((uint64_t)sub_23FC92FEC, (uint64_t)v24, v20, (uint64_t)v26);
  swift_bridgeObjectRelease();
  sub_23FD72938();
  v21 = *MEMORY[0x24BE58898];
  v22 = sub_23FD7271C();
  sub_23FC9322C();
  v23(v0, v21, v22);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v22);
  sub_23FD72920();
  sub_23FC060D4();
}

void sub_23FC90568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  sub_23FC061F0();
  v16 = v5;
  sub_23FBFD684(&qword_256F5F5C8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FC12F34();
  sub_23FBFD684(&qword_256F5F5D0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC7E1F4();
  v10 = sub_23FD72AA0();
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC8FD1C();
  sub_23FBFD684(&qword_256F5F5D8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC10118();
  sub_23FD72AF4();
  sub_23FD72AD0();
  sub_23FD72B3C();
  sub_23FC931EC(v4);
  sub_23FD72ADC();
  sub_23FD72A94();
  sub_23FD728F0();
  sub_23FC93298();
  sub_23FC93224(v3, v16, v15);
  sub_23FC93064(v3);
  sub_23FD728FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v2, v10);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v10);
  sub_23FD72AAC();
  sub_23FC5B3B0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC060D4();
}

void sub_23FC906E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);

  sub_23FC061F0();
  v4 = v3;
  v6 = v5;
  sub_23FBFD684(&qword_256F5F5A8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC10370();
  sub_23FBFD684(&qword_256F5D528);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC10388();
  sub_23FBFD684(&qword_256F5F5B0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC9308C();
  sub_23FBFD684(&qword_256F5F5B8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC10118();
  sub_23FD726BC();
  sub_23FC90DD0();
  v15 = sub_23FD7268C();
  sub_23FC932F4(v15);
  sub_23FD72698();
  sub_23FD72B0C();
  v16 = sub_23FD72B18();
  sub_23FBFF0D8(v2, v17, v18, v16);
  sub_23FD72650();
  sub_23FC92F18(v6, v1, &qword_256F5D528);
  sub_23FD726B0();
  sub_23FD72644();
  sub_23FC93298();
  sub_23FC100A0(v0, v4, v19);
  sub_23FC93054(v0);
  sub_23FD7265C();
  sub_23FC060D4();
}

