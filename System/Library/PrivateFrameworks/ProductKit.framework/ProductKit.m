uint64_t iosmacHardware.Model.init(rawValue:)@<X0>(__int16 *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  __int16 v5;
  unint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D184A0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_213B2CF90;
  *(_QWORD *)(v2 + 32) = "iMac13,1";
  *(_QWORD *)(v2 + 40) = 8;
  *(_BYTE *)(v2 + 48) = 2;
  *(_QWORD *)(v2 + 56) = "iMac13,2";
  *(_QWORD *)(v2 + 64) = 8;
  *(_BYTE *)(v2 + 72) = 2;
  *(_QWORD *)(v2 + 80) = "iMac13,3";
  *(_QWORD *)(v2 + 88) = 8;
  *(_BYTE *)(v2 + 96) = 2;
  *(_QWORD *)(v2 + 104) = "iMac14,1";
  *(_QWORD *)(v2 + 112) = 8;
  *(_BYTE *)(v2 + 120) = 2;
  *(_QWORD *)(v2 + 128) = "iMac14,2";
  *(_QWORD *)(v2 + 136) = 8;
  *(_BYTE *)(v2 + 144) = 2;
  *(_QWORD *)(v2 + 152) = "iMac14,3";
  *(_QWORD *)(v2 + 160) = 8;
  *(_BYTE *)(v2 + 168) = 2;
  *(_QWORD *)(v2 + 176) = "iMac14,4";
  *(_QWORD *)(v2 + 184) = 8;
  *(_BYTE *)(v2 + 192) = 2;
  *(_QWORD *)(v2 + 200) = "iMac15,1";
  *(_QWORD *)(v2 + 208) = 8;
  *(_BYTE *)(v2 + 216) = 2;
  *(_QWORD *)(v2 + 224) = "iMac16,1";
  *(_QWORD *)(v2 + 232) = 8;
  *(_BYTE *)(v2 + 240) = 2;
  *(_QWORD *)(v2 + 248) = "iMac16,2";
  *(_QWORD *)(v2 + 256) = 8;
  *(_BYTE *)(v2 + 264) = 2;
  *(_QWORD *)(v2 + 272) = "iMac17,1";
  *(_QWORD *)(v2 + 280) = 8;
  *(_BYTE *)(v2 + 288) = 2;
  *(_QWORD *)(v2 + 296) = "iMac18,1";
  *(_QWORD *)(v2 + 304) = 8;
  *(_BYTE *)(v2 + 312) = 2;
  *(_QWORD *)(v2 + 320) = "iMac18,2";
  *(_QWORD *)(v2 + 328) = 8;
  *(_BYTE *)(v2 + 336) = 2;
  *(_QWORD *)(v2 + 344) = "iMac18,3";
  *(_QWORD *)(v2 + 352) = 8;
  *(_BYTE *)(v2 + 360) = 2;
  *(_QWORD *)(v2 + 368) = "iMac19,1";
  *(_QWORD *)(v2 + 376) = 8;
  *(_BYTE *)(v2 + 384) = 2;
  *(_QWORD *)(v2 + 392) = "iMac19,2";
  *(_QWORD *)(v2 + 400) = 8;
  *(_BYTE *)(v2 + 408) = 2;
  *(_QWORD *)(v2 + 416) = "iMac20,1";
  *(_QWORD *)(v2 + 424) = 8;
  *(_BYTE *)(v2 + 432) = 2;
  *(_QWORD *)(v2 + 440) = "iMac20,2";
  *(_QWORD *)(v2 + 448) = 8;
  *(_BYTE *)(v2 + 456) = 2;
  *(_QWORD *)(v2 + 464) = "iMac21,1";
  *(_QWORD *)(v2 + 472) = 8;
  *(_BYTE *)(v2 + 480) = 2;
  *(_QWORD *)(v2 + 488) = "Mac15,4";
  *(_QWORD *)(v2 + 496) = 7;
  *(_BYTE *)(v2 + 504) = 2;
  *(_QWORD *)(v2 + 512) = "Mac15,5";
  *(_QWORD *)(v2 + 520) = 7;
  *(_BYTE *)(v2 + 528) = 2;
  *(_QWORD *)(v2 + 536) = "iMac21,2";
  *(_QWORD *)(v2 + 544) = 8;
  *(_BYTE *)(v2 + 552) = 2;
  *(_QWORD *)(v2 + 560) = "iMacPro1,1";
  *(_QWORD *)(v2 + 568) = 10;
  *(_BYTE *)(v2 + 576) = 2;
  *(_QWORD *)(v2 + 584) = "iPad1,1";
  *(_QWORD *)(v2 + 592) = 7;
  *(_BYTE *)(v2 + 600) = 2;
  *(_QWORD *)(v2 + 608) = "iPad2,1";
  *(_QWORD *)(v2 + 616) = 7;
  *(_BYTE *)(v2 + 624) = 2;
  *(_QWORD *)(v2 + 632) = "iPad2,2";
  *(_QWORD *)(v2 + 640) = 7;
  *(_BYTE *)(v2 + 648) = 2;
  *(_QWORD *)(v2 + 656) = "iPad2,3";
  *(_QWORD *)(v2 + 664) = 7;
  *(_BYTE *)(v2 + 672) = 2;
  *(_QWORD *)(v2 + 680) = "iPad2,4";
  *(_QWORD *)(v2 + 688) = 7;
  *(_BYTE *)(v2 + 696) = 2;
  *(_QWORD *)(v2 + 704) = "iPad2,5";
  *(_QWORD *)(v2 + 712) = 7;
  *(_BYTE *)(v2 + 720) = 2;
  *(_QWORD *)(v2 + 728) = "iPad2,6";
  *(_QWORD *)(v2 + 736) = 7;
  *(_BYTE *)(v2 + 744) = 2;
  *(_QWORD *)(v2 + 752) = "iPad2,7";
  *(_QWORD *)(v2 + 760) = 7;
  *(_BYTE *)(v2 + 768) = 2;
  *(_QWORD *)(v2 + 776) = "iPad3,1";
  *(_QWORD *)(v2 + 784) = 7;
  *(_BYTE *)(v2 + 792) = 2;
  *(_QWORD *)(v2 + 800) = "iPad3,2";
  *(_QWORD *)(v2 + 808) = 7;
  *(_BYTE *)(v2 + 816) = 2;
  *(_QWORD *)(v2 + 824) = "iPad3,3";
  *(_QWORD *)(v2 + 832) = 7;
  *(_BYTE *)(v2 + 840) = 2;
  *(_QWORD *)(v2 + 848) = "iPad3,4";
  *(_QWORD *)(v2 + 856) = 7;
  *(_BYTE *)(v2 + 864) = 2;
  *(_QWORD *)(v2 + 872) = "iPad3,5";
  *(_QWORD *)(v2 + 880) = 7;
  *(_BYTE *)(v2 + 888) = 2;
  *(_QWORD *)(v2 + 896) = "iPad3,6";
  *(_QWORD *)(v2 + 904) = 7;
  *(_BYTE *)(v2 + 912) = 2;
  *(_QWORD *)(v2 + 920) = "iPad4,1";
  *(_QWORD *)(v2 + 928) = 7;
  *(_BYTE *)(v2 + 936) = 2;
  *(_QWORD *)(v2 + 944) = "iPad4,2";
  *(_QWORD *)(v2 + 952) = 7;
  *(_BYTE *)(v2 + 960) = 2;
  *(_QWORD *)(v2 + 968) = "iPad4,3";
  *(_QWORD *)(v2 + 976) = 7;
  *(_BYTE *)(v2 + 984) = 2;
  *(_QWORD *)(v2 + 992) = "iPad4,4";
  *(_QWORD *)(v2 + 1000) = 7;
  *(_BYTE *)(v2 + 1008) = 2;
  *(_QWORD *)(v2 + 1016) = "iPad4,5";
  *(_QWORD *)(v2 + 1024) = 7;
  *(_BYTE *)(v2 + 1032) = 2;
  *(_QWORD *)(v2 + 1040) = "iPad4,6";
  *(_QWORD *)(v2 + 1048) = 7;
  *(_BYTE *)(v2 + 1056) = 2;
  *(_QWORD *)(v2 + 1064) = "iPad4,7";
  *(_QWORD *)(v2 + 1072) = 7;
  *(_BYTE *)(v2 + 1080) = 2;
  *(_QWORD *)(v2 + 1088) = "iPad4,8";
  *(_QWORD *)(v2 + 1096) = 7;
  *(_BYTE *)(v2 + 1104) = 2;
  *(_QWORD *)(v2 + 1112) = "iPad4,9";
  *(_QWORD *)(v2 + 1120) = 7;
  *(_BYTE *)(v2 + 1128) = 2;
  *(_QWORD *)(v2 + 1136) = "iPad5,1";
  *(_QWORD *)(v2 + 1144) = 7;
  *(_BYTE *)(v2 + 1152) = 2;
  *(_QWORD *)(v2 + 1160) = "iPad5,2";
  *(_QWORD *)(v2 + 1168) = 7;
  *(_BYTE *)(v2 + 1176) = 2;
  *(_QWORD *)(v2 + 1184) = "iPad5,3";
  *(_QWORD *)(v2 + 1192) = 7;
  *(_BYTE *)(v2 + 1200) = 2;
  *(_QWORD *)(v2 + 1208) = "iPad5,4";
  *(_QWORD *)(v2 + 1216) = 7;
  *(_BYTE *)(v2 + 1224) = 2;
  *(_QWORD *)(v2 + 1232) = "iPad6,3";
  *(_QWORD *)(v2 + 1240) = 7;
  *(_BYTE *)(v2 + 1248) = 2;
  *(_QWORD *)(v2 + 1256) = "iPad6,4";
  *(_QWORD *)(v2 + 1264) = 7;
  *(_BYTE *)(v2 + 1272) = 2;
  *(_QWORD *)(v2 + 1280) = "iPad6,7";
  *(_QWORD *)(v2 + 1288) = 7;
  *(_BYTE *)(v2 + 1296) = 2;
  *(_QWORD *)(v2 + 1304) = "iPad6,8";
  *(_QWORD *)(v2 + 1312) = 7;
  *(_BYTE *)(v2 + 1320) = 2;
  *(_QWORD *)(v2 + 1328) = "iPad6,11";
  *(_QWORD *)(v2 + 1336) = 8;
  *(_BYTE *)(v2 + 1344) = 2;
  *(_QWORD *)(v2 + 1352) = "iPad6,12";
  *(_QWORD *)(v2 + 1360) = 8;
  *(_BYTE *)(v2 + 1368) = 2;
  *(_QWORD *)(v2 + 1376) = "iPad7,1";
  *(_QWORD *)(v2 + 1384) = 7;
  *(_BYTE *)(v2 + 1392) = 2;
  *(_QWORD *)(v2 + 1400) = "iPad7,2";
  *(_QWORD *)(v2 + 1408) = 7;
  *(_BYTE *)(v2 + 1416) = 2;
  *(_QWORD *)(v2 + 1424) = "iPad7,3";
  *(_QWORD *)(v2 + 1432) = 7;
  *(_BYTE *)(v2 + 1440) = 2;
  *(_QWORD *)(v2 + 1448) = "iPad7,4";
  *(_QWORD *)(v2 + 1456) = 7;
  *(_BYTE *)(v2 + 1464) = 2;
  *(_QWORD *)(v2 + 1472) = "iPad7,5";
  *(_QWORD *)(v2 + 1480) = 7;
  *(_BYTE *)(v2 + 1488) = 2;
  *(_QWORD *)(v2 + 1496) = "iPad7,6";
  *(_QWORD *)(v2 + 1504) = 7;
  *(_BYTE *)(v2 + 1512) = 2;
  *(_QWORD *)(v2 + 1520) = "iPad7,11";
  *(_QWORD *)(v2 + 1528) = 8;
  *(_BYTE *)(v2 + 1536) = 2;
  *(_QWORD *)(v2 + 1544) = "iPad7,12";
  *(_QWORD *)(v2 + 1552) = 8;
  *(_BYTE *)(v2 + 1560) = 2;
  *(_QWORD *)(v2 + 1568) = "iPad8,1";
  *(_QWORD *)(v2 + 1576) = 7;
  *(_BYTE *)(v2 + 1584) = 2;
  *(_QWORD *)(v2 + 1592) = "iPad8,2";
  *(_QWORD *)(v2 + 1600) = 7;
  *(_BYTE *)(v2 + 1608) = 2;
  *(_QWORD *)(v2 + 1616) = "iPad8,3";
  *(_QWORD *)(v2 + 1624) = 7;
  *(_BYTE *)(v2 + 1632) = 2;
  *(_QWORD *)(v2 + 1640) = "iPad8,4";
  *(_QWORD *)(v2 + 1648) = 7;
  *(_BYTE *)(v2 + 1656) = 2;
  *(_QWORD *)(v2 + 1664) = "iPad8,5";
  *(_QWORD *)(v2 + 1672) = 7;
  *(_BYTE *)(v2 + 1680) = 2;
  *(_QWORD *)(v2 + 1688) = "iPad8,6";
  *(_QWORD *)(v2 + 1696) = 7;
  *(_BYTE *)(v2 + 1704) = 2;
  *(_QWORD *)(v2 + 1712) = "iPad8,7";
  *(_QWORD *)(v2 + 1720) = 7;
  *(_BYTE *)(v2 + 1728) = 2;
  *(_QWORD *)(v2 + 1736) = "iPad8,8";
  *(_QWORD *)(v2 + 1744) = 7;
  *(_BYTE *)(v2 + 1752) = 2;
  *(_QWORD *)(v2 + 1760) = "iPad8,9";
  *(_QWORD *)(v2 + 1768) = 7;
  *(_BYTE *)(v2 + 1776) = 2;
  *(_QWORD *)(v2 + 1784) = "iPad8,10";
  *(_QWORD *)(v2 + 1808) = "iPad8,11";
  *(_QWORD *)(v2 + 1832) = "iPad8,12";
  *(_QWORD *)(v2 + 1856) = "iPad11,1";
  *(_QWORD *)(v2 + 1880) = "iPad11,2";
  *(_QWORD *)(v2 + 1904) = "iPad11,3";
  *(_QWORD *)(v2 + 1928) = "iPad11,4";
  *(_QWORD *)(v2 + 1952) = "iPad11,6";
  *(_QWORD *)(v2 + 1976) = "iPad11,7";
  *(_QWORD *)(v2 + 2000) = "iPad12,1";
  *(_QWORD *)(v2 + 2480) = "iPad14,5";
  *(_QWORD *)(v2 + 2576) = "iPad16,5";
  *(_QWORD *)(v2 + 2672) = "iPad14,10";
  *(_QWORD *)(v2 + 2768) = "iPhone2,1";
  *(_QWORD *)(v2 + 2864) = "iPhone4,1";
  *(_QWORD *)(v2 + 2960) = "iPhone5,4";
  *(_QWORD *)(v2 + 3056) = "iPhone7,2";
  *(_QWORD *)(v2 + 3152) = "iPhone9,1";
  *(_QWORD *)(v2 + 3392) = "iPhone11,2";
  *(_QWORD *)(v2 + 3488) = "iPhone12,1";
  *(_QWORD *)(v2 + 3584) = "iPhone13,1";
  *(_QWORD *)(v2 + 3680) = "iPhone14,2";
  *(_QWORD *)(v2 + 3776) = "iPhone14,6";
  *(_QWORD *)(v2 + 3872) = "iPhone15,3";
  *(_QWORD *)(v2 + 3968) = "iPhone16,2";
  *(_QWORD *)(v2 + 4064) = "iPod4,1";
  *(_QWORD *)(v2 + 4160) = "Mac13,1";
  *(_QWORD *)(v2 + 1792) = 8;
  *(_QWORD *)(v2 + 4184) = "Mac13,2";
  *(_QWORD *)(v2 + 4168) = 7;
  *(_BYTE *)(v2 + 4176) = 2;
  *(_QWORD *)(v2 + 4136) = "iPod9,1";
  *(_BYTE *)(v2 + 4128) = 2;
  *(_QWORD *)(v2 + 4144) = 7;
  *(_BYTE *)(v2 + 4152) = 2;
  *(_QWORD *)(v2 + 4112) = "iPod7,1";
  *(_QWORD *)(v2 + 4096) = 7;
  *(_BYTE *)(v2 + 4104) = 2;
  *(_QWORD *)(v2 + 4120) = 7;
  *(_BYTE *)(v2 + 1800) = 2;
  *(_QWORD *)(v2 + 4088) = "iPod5,1";
  *(_QWORD *)(v2 + 4072) = 7;
  *(_BYTE *)(v2 + 4080) = 2;
  *(_QWORD *)(v2 + 4040) = "iPod3,1";
  *(_BYTE *)(v2 + 4032) = 2;
  *(_QWORD *)(v2 + 4048) = 7;
  *(_BYTE *)(v2 + 4056) = 2;
  *(_QWORD *)(v2 + 4016) = "iPod2,1";
  *(_QWORD *)(v2 + 4000) = 7;
  *(_BYTE *)(v2 + 4008) = 2;
  *(_QWORD *)(v2 + 4024) = 7;
  *(_QWORD *)(v2 + 1816) = 8;
  *(_QWORD *)(v2 + 3992) = "iPod1,1";
  *(_QWORD *)(v2 + 3976) = 10;
  *(_BYTE *)(v2 + 3984) = 2;
  *(_QWORD *)(v2 + 3944) = "iPhone16,1";
  *(_BYTE *)(v2 + 3936) = 2;
  *(_QWORD *)(v2 + 3952) = 10;
  *(_BYTE *)(v2 + 3960) = 2;
  *(_QWORD *)(v2 + 3920) = "iPhone15,5";
  *(_QWORD *)(v2 + 3904) = 10;
  *(_BYTE *)(v2 + 3912) = 2;
  *(_QWORD *)(v2 + 3928) = 10;
  *(_BYTE *)(v2 + 1824) = 2;
  *(_QWORD *)(v2 + 3896) = "iPhone15,4";
  *(_QWORD *)(v2 + 3880) = 10;
  *(_BYTE *)(v2 + 3888) = 2;
  *(_QWORD *)(v2 + 3848) = "iPhone15,2";
  *(_BYTE *)(v2 + 3840) = 2;
  *(_QWORD *)(v2 + 3856) = 10;
  *(_BYTE *)(v2 + 3864) = 2;
  *(_QWORD *)(v2 + 3824) = "iPhone14,8";
  *(_QWORD *)(v2 + 3808) = 10;
  *(_BYTE *)(v2 + 3816) = 2;
  *(_QWORD *)(v2 + 3832) = 10;
  *(_QWORD *)(v2 + 1840) = 8;
  *(_QWORD *)(v2 + 3800) = "iPhone14,7";
  *(_QWORD *)(v2 + 3784) = 10;
  *(_BYTE *)(v2 + 3792) = 2;
  *(_QWORD *)(v2 + 3752) = "iPhone14,5";
  *(_BYTE *)(v2 + 3744) = 2;
  *(_QWORD *)(v2 + 3760) = 10;
  *(_BYTE *)(v2 + 3768) = 2;
  *(_QWORD *)(v2 + 3728) = "iPhone14,4";
  *(_QWORD *)(v2 + 3712) = 10;
  *(_BYTE *)(v2 + 3720) = 2;
  *(_QWORD *)(v2 + 3736) = 10;
  *(_BYTE *)(v2 + 1848) = 2;
  *(_QWORD *)(v2 + 3704) = "iPhone14,3";
  *(_QWORD *)(v2 + 3688) = 10;
  *(_BYTE *)(v2 + 3696) = 2;
  *(_QWORD *)(v2 + 3656) = "iPhone13,4";
  *(_BYTE *)(v2 + 3648) = 2;
  *(_QWORD *)(v2 + 3664) = 10;
  *(_BYTE *)(v2 + 3672) = 2;
  *(_QWORD *)(v2 + 3632) = "iPhone13,3";
  *(_QWORD *)(v2 + 3616) = 10;
  *(_BYTE *)(v2 + 3624) = 2;
  *(_QWORD *)(v2 + 3640) = 10;
  *(_QWORD *)(v2 + 1864) = 8;
  *(_QWORD *)(v2 + 3608) = "iPhone13,2";
  *(_QWORD *)(v2 + 3592) = 10;
  *(_BYTE *)(v2 + 3600) = 2;
  *(_QWORD *)(v2 + 3560) = "iPhone12,8";
  *(_BYTE *)(v2 + 3552) = 2;
  *(_QWORD *)(v2 + 3568) = 10;
  *(_BYTE *)(v2 + 3576) = 2;
  *(_QWORD *)(v2 + 3536) = "iPhone12,5";
  *(_QWORD *)(v2 + 3520) = 10;
  *(_BYTE *)(v2 + 3528) = 2;
  *(_QWORD *)(v2 + 3544) = 10;
  *(_BYTE *)(v2 + 1872) = 2;
  *(_QWORD *)(v2 + 3512) = "iPhone12,3";
  *(_QWORD *)(v2 + 3496) = 10;
  *(_BYTE *)(v2 + 3504) = 2;
  *(_QWORD *)(v2 + 3464) = "iPhone11,8";
  *(_BYTE *)(v2 + 3456) = 2;
  *(_QWORD *)(v2 + 3472) = 10;
  *(_BYTE *)(v2 + 3480) = 2;
  *(_QWORD *)(v2 + 3440) = "iPhone11,6";
  *(_QWORD *)(v2 + 3424) = 10;
  *(_BYTE *)(v2 + 3432) = 2;
  *(_QWORD *)(v2 + 3448) = 10;
  *(_QWORD *)(v2 + 1888) = 8;
  *(_QWORD *)(v2 + 3416) = "iPhone11,4";
  *(_QWORD *)(v2 + 3400) = 10;
  *(_BYTE *)(v2 + 3408) = 2;
  *(_QWORD *)(v2 + 3368) = "iPhone10,6";
  *(_BYTE *)(v2 + 3360) = 2;
  *(_QWORD *)(v2 + 3376) = 10;
  *(_BYTE *)(v2 + 3384) = 2;
  *(_QWORD *)(v2 + 3344) = "iPhone10,5";
  *(_QWORD *)(v2 + 3328) = 10;
  *(_BYTE *)(v2 + 3336) = 2;
  *(_QWORD *)(v2 + 3352) = 10;
  *(_BYTE *)(v2 + 1896) = 2;
  *(_QWORD *)(v2 + 3320) = "iPhone10,4";
  *(_QWORD *)(v2 + 3304) = 10;
  *(_BYTE *)(v2 + 3312) = 2;
  *(_QWORD *)(v2 + 3272) = "iPhone10,2";
  *(_QWORD *)(v2 + 3280) = 10;
  *(_BYTE *)(v2 + 3288) = 2;
  *(_QWORD *)(v2 + 3296) = "iPhone10,3";
  *(_QWORD *)(v2 + 3248) = "iPhone10,1";
  *(_QWORD *)(v2 + 3256) = 10;
  *(_BYTE *)(v2 + 3264) = 2;
  *(_QWORD *)(v2 + 3224) = "iPhone9,4";
  *(_BYTE *)(v2 + 3216) = 2;
  *(_QWORD *)(v2 + 3232) = 9;
  *(_BYTE *)(v2 + 3240) = 2;
  *(_QWORD *)(v2 + 3200) = "iPhone9,3";
  *(_QWORD *)(v2 + 3184) = 9;
  *(_BYTE *)(v2 + 3192) = 2;
  *(_QWORD *)(v2 + 3208) = 9;
  *(_QWORD *)(v2 + 1912) = 8;
  *(_QWORD *)(v2 + 3176) = "iPhone9,2";
  *(_QWORD *)(v2 + 3160) = 9;
  *(_BYTE *)(v2 + 3168) = 2;
  *(_QWORD *)(v2 + 3128) = "iPhone8,4";
  *(_BYTE *)(v2 + 3120) = 2;
  *(_QWORD *)(v2 + 3136) = 9;
  *(_BYTE *)(v2 + 3144) = 2;
  *(_QWORD *)(v2 + 3104) = "iPhone8,2";
  *(_QWORD *)(v2 + 3088) = 9;
  *(_BYTE *)(v2 + 3096) = 2;
  *(_QWORD *)(v2 + 3112) = 9;
  *(_BYTE *)(v2 + 1920) = 2;
  *(_QWORD *)(v2 + 3080) = "iPhone8,1";
  *(_QWORD *)(v2 + 3064) = 9;
  *(_BYTE *)(v2 + 3072) = 2;
  *(_QWORD *)(v2 + 3032) = "iPhone7,1";
  *(_BYTE *)(v2 + 3024) = 2;
  *(_QWORD *)(v2 + 3040) = 9;
  *(_BYTE *)(v2 + 3048) = 2;
  *(_QWORD *)(v2 + 3008) = "iPhone6,2";
  *(_QWORD *)(v2 + 2992) = 9;
  *(_BYTE *)(v2 + 3000) = 2;
  *(_QWORD *)(v2 + 3016) = 9;
  *(_QWORD *)(v2 + 1936) = 8;
  *(_QWORD *)(v2 + 2984) = "iPhone6,1";
  *(_QWORD *)(v2 + 2968) = 9;
  *(_BYTE *)(v2 + 2976) = 2;
  *(_QWORD *)(v2 + 2936) = "iPhone5,3";
  *(_BYTE *)(v2 + 2928) = 2;
  *(_QWORD *)(v2 + 2944) = 9;
  *(_BYTE *)(v2 + 2952) = 2;
  *(_QWORD *)(v2 + 2912) = "iPhone5,2";
  *(_QWORD *)(v2 + 2896) = 9;
  *(_BYTE *)(v2 + 2904) = 2;
  *(_QWORD *)(v2 + 2920) = 9;
  *(_BYTE *)(v2 + 1944) = 2;
  *(_QWORD *)(v2 + 2888) = "iPhone5,1";
  *(_QWORD *)(v2 + 2872) = 9;
  *(_BYTE *)(v2 + 2880) = 2;
  *(_QWORD *)(v2 + 2840) = "iPhone3,3";
  *(_BYTE *)(v2 + 2832) = 2;
  *(_QWORD *)(v2 + 2848) = 9;
  *(_BYTE *)(v2 + 2856) = 2;
  *(_QWORD *)(v2 + 2816) = "iPhone3,2";
  *(_QWORD *)(v2 + 2800) = 9;
  *(_BYTE *)(v2 + 2808) = 2;
  *(_QWORD *)(v2 + 2824) = 9;
  *(_QWORD *)(v2 + 1960) = 8;
  *(_QWORD *)(v2 + 2792) = "iPhone3,1";
  *(_QWORD *)(v2 + 2776) = 9;
  *(_BYTE *)(v2 + 2784) = 2;
  *(_QWORD *)(v2 + 2744) = "iPhone1,2";
  *(_BYTE *)(v2 + 2736) = 2;
  *(_QWORD *)(v2 + 2752) = 9;
  *(_BYTE *)(v2 + 2760) = 2;
  *(_QWORD *)(v2 + 2720) = "iPhone1,1";
  *(_QWORD *)(v2 + 2704) = 9;
  *(_BYTE *)(v2 + 2712) = 2;
  *(_QWORD *)(v2 + 2728) = 9;
  *(_BYTE *)(v2 + 1968) = 2;
  *(_QWORD *)(v2 + 2696) = "iPad14,11";
  *(_QWORD *)(v2 + 2680) = 9;
  *(_BYTE *)(v2 + 2688) = 2;
  *(_QWORD *)(v2 + 2648) = "iPad14,9";
  *(_BYTE *)(v2 + 2640) = 2;
  *(_QWORD *)(v2 + 2656) = 8;
  *(_BYTE *)(v2 + 2664) = 2;
  *(_QWORD *)(v2 + 2624) = "iPad14,8";
  *(_QWORD *)(v2 + 2608) = 8;
  *(_BYTE *)(v2 + 2616) = 2;
  *(_QWORD *)(v2 + 2632) = 8;
  *(_QWORD *)(v2 + 1984) = 8;
  *(_QWORD *)(v2 + 2600) = "iPad16,6";
  *(_QWORD *)(v2 + 2584) = 8;
  *(_BYTE *)(v2 + 2592) = 2;
  *(_QWORD *)(v2 + 2552) = "iPad16,4";
  *(_BYTE *)(v2 + 2544) = 2;
  *(_QWORD *)(v2 + 2560) = 8;
  *(_BYTE *)(v2 + 2568) = 2;
  *(_QWORD *)(v2 + 2528) = "iPad16,3";
  *(_QWORD *)(v2 + 2512) = 8;
  *(_BYTE *)(v2 + 2520) = 2;
  *(_QWORD *)(v2 + 2536) = 8;
  *(_BYTE *)(v2 + 1992) = 2;
  *(_QWORD *)(v2 + 2504) = "iPad14,6";
  *(_QWORD *)(v2 + 2488) = 8;
  *(_BYTE *)(v2 + 2496) = 2;
  *(_QWORD *)(v2 + 2456) = "iPad14,4";
  *(_BYTE *)(v2 + 2448) = 2;
  *(_QWORD *)(v2 + 2464) = 8;
  *(_BYTE *)(v2 + 2472) = 2;
  *(_QWORD *)(v2 + 2432) = "iPad14,3";
  *(_QWORD *)(v2 + 2416) = 8;
  *(_BYTE *)(v2 + 2424) = 2;
  *(_QWORD *)(v2 + 2440) = 8;
  *(_QWORD *)(v2 + 2008) = 8;
  *(_QWORD *)(v2 + 2408) = "iPad14,2";
  *(_QWORD *)(v2 + 2392) = 8;
  *(_BYTE *)(v2 + 2400) = 2;
  *(_QWORD *)(v2 + 2360) = "iPad13,19";
  *(_QWORD *)(v2 + 2368) = 9;
  *(_BYTE *)(v2 + 2376) = 2;
  *(_QWORD *)(v2 + 2384) = "iPad14,1";
  *(_BYTE *)(v2 + 2328) = 2;
  *(_QWORD *)(v2 + 2336) = "iPad13,18";
  *(_QWORD *)(v2 + 2344) = 9;
  *(_BYTE *)(v2 + 2352) = 2;
  *(_QWORD *)(v2 + 2296) = 9;
  *(_BYTE *)(v2 + 2304) = 2;
  *(_QWORD *)(v2 + 2312) = "iPad13,17";
  *(_QWORD *)(v2 + 2320) = 9;
  *(_BYTE *)(v2 + 2016) = 2;
  *(_QWORD *)(v2 + 2272) = 9;
  *(_BYTE *)(v2 + 2280) = 2;
  *(_QWORD *)(v2 + 2288) = "iPad13,16";
  *(_QWORD *)(v2 + 2024) = "iPad12,2";
  *(_QWORD *)(v2 + 2248) = 9;
  *(_BYTE *)(v2 + 2256) = 2;
  *(_QWORD *)(v2 + 2264) = "iPad13,11";
  *(_QWORD *)(v2 + 2216) = "iPad13,9";
  *(_QWORD *)(v2 + 2224) = 8;
  *(_BYTE *)(v2 + 2232) = 2;
  *(_QWORD *)(v2 + 2240) = "iPad13,10";
  *(_BYTE *)(v2 + 2184) = 2;
  *(_QWORD *)(v2 + 2192) = "iPad13,8";
  *(_QWORD *)(v2 + 2200) = 8;
  *(_BYTE *)(v2 + 2208) = 2;
  *(_QWORD *)(v2 + 2152) = 8;
  *(_BYTE *)(v2 + 2160) = 2;
  *(_QWORD *)(v2 + 2168) = "iPad13,7";
  *(_QWORD *)(v2 + 2176) = 8;
  *(_QWORD *)(v2 + 2032) = 8;
  *(_QWORD *)(v2 + 2128) = 8;
  *(_BYTE *)(v2 + 2136) = 2;
  *(_QWORD *)(v2 + 2144) = "iPad13,6";
  *(_QWORD *)(v2 + 2096) = "iPad13,4";
  *(_QWORD *)(v2 + 2104) = 8;
  *(_BYTE *)(v2 + 2112) = 2;
  *(_QWORD *)(v2 + 2120) = "iPad13,5";
  *(_BYTE *)(v2 + 2064) = 2;
  *(_QWORD *)(v2 + 2072) = "iPad13,2";
  *(_QWORD *)(v2 + 2080) = 8;
  *(_BYTE *)(v2 + 2088) = 2;
  *(_BYTE *)(v2 + 2040) = 2;
  *(_QWORD *)(v2 + 2048) = "iPad13,1";
  *(_QWORD *)(v2 + 2056) = 8;
  *(_QWORD *)(v2 + 4192) = 7;
  *(_BYTE *)(v2 + 4200) = 2;
  *(_QWORD *)(v2 + 4208) = "Mac14,13";
  *(_QWORD *)(v2 + 4216) = 8;
  *(_BYTE *)(v2 + 4224) = 2;
  *(_QWORD *)(v2 + 4232) = "Mac14,14";
  *(_QWORD *)(v2 + 4240) = 8;
  *(_BYTE *)(v2 + 4248) = 2;
  *(_QWORD *)(v2 + 4256) = "Mac14,2";
  *(_QWORD *)(v2 + 4264) = 7;
  *(_BYTE *)(v2 + 4272) = 2;
  *(_QWORD *)(v2 + 4280) = "Mac14,7";
  *(_QWORD *)(v2 + 4288) = 7;
  *(_BYTE *)(v2 + 4296) = 2;
  *(_QWORD *)(v2 + 4304) = "Mac14,15";
  *(_QWORD *)(v2 + 4312) = 8;
  *(_BYTE *)(v2 + 4320) = 2;
  *(_QWORD *)(v2 + 4328) = "MacBook8,1";
  *(_QWORD *)(v2 + 4336) = 10;
  *(_BYTE *)(v2 + 4344) = 2;
  *(_QWORD *)(v2 + 4352) = "MacBook9,1";
  *(_QWORD *)(v2 + 4360) = 10;
  *(_BYTE *)(v2 + 4368) = 2;
  *(_QWORD *)(v2 + 4376) = "MacBook10,1";
  *(_QWORD *)(v2 + 4384) = 11;
  *(_BYTE *)(v2 + 4392) = 2;
  *(_QWORD *)(v2 + 4400) = "MacBookAir3,1";
  *(_QWORD *)(v2 + 4408) = 13;
  *(_BYTE *)(v2 + 4416) = 2;
  *(_QWORD *)(v2 + 4424) = "MacBookAir5,1";
  *(_QWORD *)(v2 + 4432) = 13;
  *(_BYTE *)(v2 + 4440) = 2;
  *(_QWORD *)(v2 + 4448) = "MacBookAir5,2";
  *(_QWORD *)(v2 + 4456) = 13;
  *(_BYTE *)(v2 + 4464) = 2;
  *(_QWORD *)(v2 + 4472) = "MacBookAir6,1";
  *(_QWORD *)(v2 + 4480) = 13;
  *(_BYTE *)(v2 + 4488) = 2;
  *(_QWORD *)(v2 + 4496) = "MacBookAir6,2";
  *(_QWORD *)(v2 + 4504) = 13;
  *(_BYTE *)(v2 + 4512) = 2;
  *(_QWORD *)(v2 + 4520) = "MacBookAir7,1";
  *(_QWORD *)(v2 + 4528) = 13;
  *(_BYTE *)(v2 + 4536) = 2;
  *(_QWORD *)(v2 + 4544) = "MacBookAir7,2";
  *(_QWORD *)(v2 + 4552) = 13;
  *(_BYTE *)(v2 + 4560) = 2;
  *(_QWORD *)(v2 + 4568) = "MacBookAir8,1";
  *(_QWORD *)(v2 + 4576) = 13;
  *(_BYTE *)(v2 + 4584) = 2;
  *(_QWORD *)(v2 + 4592) = "MacBookAir8,2";
  *(_QWORD *)(v2 + 4600) = 13;
  *(_BYTE *)(v2 + 4608) = 2;
  *(_QWORD *)(v2 + 4616) = "MacBookAir9,1";
  *(_QWORD *)(v2 + 4624) = 13;
  *(_BYTE *)(v2 + 4632) = 2;
  *(_QWORD *)(v2 + 4640) = "MacBookAir10,1";
  *(_QWORD *)(v2 + 4648) = 14;
  *(_BYTE *)(v2 + 4656) = 2;
  *(_QWORD *)(v2 + 4664) = "MacBookPro9,1";
  *(_QWORD *)(v2 + 4672) = 13;
  *(_BYTE *)(v2 + 4680) = 2;
  *(_QWORD *)(v2 + 4688) = "MacBookPro9,2";
  *(_QWORD *)(v2 + 4696) = 13;
  *(_BYTE *)(v2 + 4704) = 2;
  *(_QWORD *)(v2 + 4712) = "MacBookPro10,1";
  *(_QWORD *)(v2 + 4720) = 14;
  *(_BYTE *)(v2 + 4728) = 2;
  *(_QWORD *)(v2 + 4736) = "MacBookPro10,2";
  *(_QWORD *)(v2 + 4744) = 14;
  *(_BYTE *)(v2 + 4752) = 2;
  *(_QWORD *)(v2 + 4760) = "MacBookPro11,1";
  *(_QWORD *)(v2 + 4768) = 14;
  *(_BYTE *)(v2 + 4776) = 2;
  *(_QWORD *)(v2 + 4784) = "MacBookPro11,2";
  *(_QWORD *)(v2 + 4792) = 14;
  *(_BYTE *)(v2 + 4800) = 2;
  *(_QWORD *)(v2 + 4808) = "MacBookPro11,3";
  *(_QWORD *)(v2 + 4816) = 14;
  *(_BYTE *)(v2 + 4824) = 2;
  *(_QWORD *)(v2 + 4832) = "MacBookPro11,4";
  *(_QWORD *)(v2 + 4840) = 14;
  *(_BYTE *)(v2 + 4848) = 2;
  *(_QWORD *)(v2 + 4856) = "MacBookPro11,5";
  *(_QWORD *)(v2 + 4864) = 14;
  *(_BYTE *)(v2 + 4872) = 2;
  *(_QWORD *)(v2 + 4880) = "MacBookPro12,1";
  *(_QWORD *)(v2 + 4888) = 14;
  *(_BYTE *)(v2 + 4896) = 2;
  *(_QWORD *)(v2 + 4904) = "MacBookPro13,1";
  *(_QWORD *)(v2 + 4912) = 14;
  *(_BYTE *)(v2 + 4920) = 2;
  *(_QWORD *)(v2 + 4928) = "MacBookPro13,2";
  *(_QWORD *)(v2 + 4936) = 14;
  *(_BYTE *)(v2 + 4944) = 2;
  *(_QWORD *)(v2 + 4952) = "MacBookPro13,3";
  *(_QWORD *)(v2 + 4960) = 14;
  *(_BYTE *)(v2 + 4968) = 2;
  *(_QWORD *)(v2 + 4976) = "MacBookPro14,1";
  *(_QWORD *)(v2 + 4984) = 14;
  *(_BYTE *)(v2 + 4992) = 2;
  *(_QWORD *)(v2 + 5000) = "MacBookPro14,2";
  *(_QWORD *)(v2 + 5008) = 14;
  *(_BYTE *)(v2 + 5016) = 2;
  *(_QWORD *)(v2 + 5024) = "MacBookPro14,3";
  *(_QWORD *)(v2 + 5032) = 14;
  *(_BYTE *)(v2 + 5040) = 2;
  *(_QWORD *)(v2 + 5048) = "MacBookPro15,1";
  *(_QWORD *)(v2 + 5056) = 14;
  *(_BYTE *)(v2 + 5064) = 2;
  *(_QWORD *)(v2 + 5072) = "MacBookPro15,2";
  *(_QWORD *)(v2 + 5080) = 14;
  *(_BYTE *)(v2 + 5088) = 2;
  *(_QWORD *)(v2 + 5096) = "MacBookPro15,3";
  *(_QWORD *)(v2 + 5104) = 14;
  *(_BYTE *)(v2 + 5112) = 2;
  *(_QWORD *)(v2 + 5120) = "MacBookPro15,4";
  *(_QWORD *)(v2 + 5128) = 14;
  *(_BYTE *)(v2 + 5136) = 2;
  *(_QWORD *)(v2 + 5144) = "MacBookPro16,1";
  *(_QWORD *)(v2 + 5152) = 14;
  *(_BYTE *)(v2 + 5160) = 2;
  *(_QWORD *)(v2 + 5168) = "MacBookPro16,2";
  *(_QWORD *)(v2 + 5176) = 14;
  *(_BYTE *)(v2 + 5184) = 2;
  *(_QWORD *)(v2 + 5192) = "MacBookPro16,3";
  *(_QWORD *)(v2 + 5200) = 14;
  *(_BYTE *)(v2 + 5208) = 2;
  *(_QWORD *)(v2 + 5216) = "MacBookPro16,4";
  *(_QWORD *)(v2 + 5224) = 14;
  *(_BYTE *)(v2 + 5232) = 2;
  *(_QWORD *)(v2 + 5240) = "MacBookPro17,1";
  *(_QWORD *)(v2 + 5248) = 14;
  *(_BYTE *)(v2 + 5256) = 2;
  *(_QWORD *)(v2 + 5264) = "MacBookPro18,1";
  *(_QWORD *)(v2 + 5272) = 14;
  *(_BYTE *)(v2 + 5280) = 2;
  *(_QWORD *)(v2 + 5288) = "MacBookPro18,2";
  *(_QWORD *)(v2 + 5296) = 14;
  *(_BYTE *)(v2 + 5304) = 2;
  *(_QWORD *)(v2 + 5312) = "MacBookPro18,3";
  *(_QWORD *)(v2 + 5320) = 14;
  *(_BYTE *)(v2 + 5328) = 2;
  *(_QWORD *)(v2 + 5336) = "MacBookPro18,4";
  *(_QWORD *)(v2 + 5344) = 14;
  *(_BYTE *)(v2 + 5352) = 2;
  *(_QWORD *)(v2 + 5360) = "Macmini6,1";
  *(_QWORD *)(v2 + 5368) = 10;
  *(_BYTE *)(v2 + 5376) = 2;
  *(_QWORD *)(v2 + 5384) = "Macmini6,2";
  *(_QWORD *)(v2 + 5392) = 10;
  *(_BYTE *)(v2 + 5400) = 2;
  *(_QWORD *)(v2 + 5408) = "Macmini7,1";
  *(_QWORD *)(v2 + 5416) = 10;
  *(_BYTE *)(v2 + 5424) = 2;
  *(_QWORD *)(v2 + 5432) = "Macmini8,1";
  *(_QWORD *)(v2 + 5440) = 10;
  *(_BYTE *)(v2 + 5448) = 2;
  *(_QWORD *)(v2 + 5456) = "Macmini9,1";
  *(_QWORD *)(v2 + 5464) = 10;
  *(_BYTE *)(v2 + 5472) = 2;
  *(_QWORD *)(v2 + 5480) = "MacPro5,1";
  *(_QWORD *)(v2 + 5488) = 9;
  *(_BYTE *)(v2 + 5496) = 2;
  *(_QWORD *)(v2 + 5504) = "MacPro6,1";
  *(_QWORD *)(v2 + 5512) = 9;
  *(_BYTE *)(v2 + 5520) = 2;
  *(_QWORD *)(v2 + 5528) = "MacPro7,1";
  *(_QWORD *)(v2 + 5536) = 9;
  *(_BYTE *)(v2 + 5544) = 2;
  *(_QWORD *)(v2 + 5552) = "Mac14,8";
  *(_QWORD *)(v2 + 5560) = 7;
  *(_BYTE *)(v2 + 5568) = 2;
  *(_QWORD *)(v2 + 5576) = "VirtualMac2,1";
  *(_QWORD *)(v2 + 5584) = 13;
  *(_BYTE *)(v2 + 5592) = 2;
  *(_QWORD *)(v2 + 5600) = "Mac14,3";
  *(_QWORD *)(v2 + 5608) = 7;
  *(_BYTE *)(v2 + 5616) = 2;
  *(_QWORD *)(v2 + 5624) = "Mac14,12";
  *(_QWORD *)(v2 + 5632) = 8;
  *(_BYTE *)(v2 + 5640) = 2;
  *(_QWORD *)(v2 + 5648) = "Mac14,5";
  *(_QWORD *)(v2 + 5656) = 7;
  *(_BYTE *)(v2 + 5664) = 2;
  *(_QWORD *)(v2 + 5672) = "Mac14,6";
  *(_QWORD *)(v2 + 5680) = 7;
  *(_BYTE *)(v2 + 5688) = 2;
  *(_QWORD *)(v2 + 5696) = "Mac14,9";
  *(_QWORD *)(v2 + 5704) = 7;
  *(_BYTE *)(v2 + 5712) = 2;
  *(_QWORD *)(v2 + 5720) = "Mac14,10";
  *(_QWORD *)(v2 + 5728) = 8;
  *(_BYTE *)(v2 + 5736) = 2;
  *(_QWORD *)(v2 + 5744) = "Mac15,3";
  *(_QWORD *)(v2 + 5752) = 7;
  *(_BYTE *)(v2 + 5760) = 2;
  *(_QWORD *)(v2 + 5768) = "Mac15,8";
  *(_QWORD *)(v2 + 5776) = 7;
  *(_BYTE *)(v2 + 5784) = 2;
  *(_QWORD *)(v2 + 5792) = "Mac15,6";
  *(_QWORD *)(v2 + 5800) = 7;
  *(_BYTE *)(v2 + 5808) = 2;
  *(_QWORD *)(v2 + 5816) = "Mac15,10";
  *(_QWORD *)(v2 + 5824) = 8;
  *(_BYTE *)(v2 + 5832) = 2;
  *(_QWORD *)(v2 + 5840) = "Mac15,9";
  *(_QWORD *)(v2 + 5848) = 7;
  *(_BYTE *)(v2 + 5856) = 2;
  *(_QWORD *)(v2 + 5864) = "Mac15,7";
  *(_QWORD *)(v2 + 5872) = 7;
  *(_BYTE *)(v2 + 5880) = 2;
  *(_QWORD *)(v2 + 5888) = "Mac15,11";
  *(_QWORD *)(v2 + 5896) = 8;
  *(_BYTE *)(v2 + 5904) = 2;
  *(_QWORD *)(v2 + 5912) = "Mac15,12";
  *(_QWORD *)(v2 + 5920) = 8;
  *(_BYTE *)(v2 + 5928) = 2;
  *(_QWORD *)(v2 + 5936) = "Mac15,13";
  *(_QWORD *)(v2 + 5944) = 8;
  *(_BYTE *)(v2 + 5952) = 2;
  *(_QWORD *)(v2 + 5960) = "RealityDevice14,1";
  *(_QWORD *)(v2 + 5968) = 17;
  *(_BYTE *)(v2 + 5976) = 2;
  *(_QWORD *)(v2 + 5984) = "iPhone";
  *(_QWORD *)(v2 + 5992) = 6;
  *(_BYTE *)(v2 + 6000) = 2;
  *(_QWORD *)(v2 + 6008) = "iPad";
  *(_QWORD *)(v2 + 6016) = 4;
  *(_BYTE *)(v2 + 6024) = 2;
  *(_QWORD *)(v2 + 6032) = "iPad mini";
  *(_QWORD *)(v2 + 6040) = 9;
  *(_BYTE *)(v2 + 6048) = 2;
  *(_QWORD *)(v2 + 6056) = "iPod";
  *(_QWORD *)(v2 + 6064) = 4;
  *(_BYTE *)(v2 + 6072) = 2;
  *(_QWORD *)(v2 + 6080) = "MacBook Pro";
  *(_QWORD *)(v2 + 6088) = 11;
  *(_BYTE *)(v2 + 6096) = 2;
  *(_QWORD *)(v2 + 6104) = "MacBook Air";
  *(_QWORD *)(v2 + 6112) = 11;
  *(_BYTE *)(v2 + 6120) = 2;
  *(_QWORD *)(v2 + 6128) = "Mac Pro";
  *(_QWORD *)(v2 + 6136) = 7;
  *(_BYTE *)(v2 + 6144) = 2;
  *(_QWORD *)(v2 + 6152) = "iMac Pro";
  *(_QWORD *)(v2 + 6160) = 8;
  *(_BYTE *)(v2 + 6168) = 2;
  *(_QWORD *)(v2 + 6176) = "iMac";
  *(_QWORD *)(v2 + 6184) = 4;
  *(_BYTE *)(v2 + 6192) = 2;
  *(_QWORD *)(v2 + 6200) = "Mac mini";
  *(_QWORD *)(v2 + 6208) = 8;
  *(_BYTE *)(v2 + 6216) = 2;
  *(_QWORD *)(v2 + 6224) = "Mac Studio";
  *(_QWORD *)(v2 + 6232) = 10;
  *(_BYTE *)(v2 + 6240) = 2;
  v3 = sub_213B2C3E0();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v3 >= 0x80 && v3 - 128 >= 0x40)
  {
    v6 = v3 - 192;
    v5 = 241;
    LOWORD(v3) = 192;
    switch(v6)
    {
      case 0uLL:
        goto LABEL_3;
      case 1uLL:
        LOWORD(v3) = 193;
        goto LABEL_3;
      case 2uLL:
        LOWORD(v3) = 194;
        goto LABEL_3;
      case 3uLL:
        LOWORD(v3) = 195;
        goto LABEL_3;
      case 4uLL:
        LOWORD(v3) = 196;
        goto LABEL_3;
      case 5uLL:
        LOWORD(v3) = 197;
        goto LABEL_3;
      case 6uLL:
        LOWORD(v3) = 198;
        goto LABEL_3;
      case 7uLL:
        LOWORD(v3) = 199;
        goto LABEL_3;
      case 8uLL:
        LOWORD(v3) = 200;
        goto LABEL_3;
      case 9uLL:
        LOWORD(v3) = 201;
        goto LABEL_3;
      case 0xAuLL:
        LOWORD(v3) = 202;
        goto LABEL_3;
      case 0xBuLL:
        LOWORD(v3) = 203;
        goto LABEL_3;
      case 0xCuLL:
        LOWORD(v3) = 204;
        goto LABEL_3;
      case 0xDuLL:
        LOWORD(v3) = 205;
        goto LABEL_3;
      case 0xEuLL:
        LOWORD(v3) = 206;
        goto LABEL_3;
      case 0xFuLL:
        LOWORD(v3) = 207;
        goto LABEL_3;
      case 0x10uLL:
        LOWORD(v3) = 208;
        goto LABEL_3;
      case 0x11uLL:
        LOWORD(v3) = 209;
        goto LABEL_3;
      case 0x12uLL:
        LOWORD(v3) = 210;
        goto LABEL_3;
      case 0x13uLL:
        LOWORD(v3) = 211;
        goto LABEL_3;
      case 0x14uLL:
        LOWORD(v3) = 212;
        goto LABEL_3;
      case 0x15uLL:
        LOWORD(v3) = 213;
        goto LABEL_3;
      case 0x16uLL:
        LOWORD(v3) = 214;
        goto LABEL_3;
      case 0x17uLL:
        LOWORD(v3) = 215;
        goto LABEL_3;
      case 0x18uLL:
        LOWORD(v3) = 216;
        goto LABEL_3;
      case 0x19uLL:
        LOWORD(v3) = 217;
        goto LABEL_3;
      case 0x1AuLL:
        LOWORD(v3) = 218;
        goto LABEL_3;
      case 0x1BuLL:
        LOWORD(v3) = 219;
        goto LABEL_3;
      case 0x1CuLL:
        LOWORD(v3) = 220;
        goto LABEL_3;
      case 0x1DuLL:
        LOWORD(v3) = 221;
        goto LABEL_3;
      case 0x1EuLL:
        LOWORD(v3) = 222;
        goto LABEL_3;
      case 0x1FuLL:
        LOWORD(v3) = 223;
        goto LABEL_3;
      case 0x20uLL:
        LOWORD(v3) = 224;
        goto LABEL_3;
      case 0x21uLL:
        LOWORD(v3) = 225;
        goto LABEL_3;
      case 0x22uLL:
        LOWORD(v3) = 226;
        goto LABEL_3;
      case 0x23uLL:
        LOWORD(v3) = 227;
        goto LABEL_3;
      case 0x24uLL:
        LOWORD(v3) = 228;
        goto LABEL_3;
      case 0x25uLL:
        LOWORD(v3) = 229;
        goto LABEL_3;
      case 0x26uLL:
        LOWORD(v3) = 230;
        goto LABEL_3;
      case 0x27uLL:
        LOWORD(v3) = 231;
        goto LABEL_3;
      case 0x28uLL:
        LOWORD(v3) = 232;
        goto LABEL_3;
      case 0x29uLL:
        LOWORD(v3) = 233;
        goto LABEL_3;
      case 0x2AuLL:
        LOWORD(v3) = 234;
        goto LABEL_3;
      case 0x2BuLL:
        LOWORD(v3) = 235;
        goto LABEL_3;
      case 0x2CuLL:
        LOWORD(v3) = 236;
        goto LABEL_3;
      case 0x2DuLL:
        LOWORD(v3) = 237;
        goto LABEL_3;
      case 0x2EuLL:
        LOWORD(v3) = 238;
        goto LABEL_3;
      case 0x2FuLL:
        LOWORD(v3) = 239;
        goto LABEL_3;
      case 0x30uLL:
        LOWORD(v3) = 240;
        goto LABEL_3;
      case 0x31uLL:
        break;
      case 0x32uLL:
        v5 = 242;
        break;
      case 0x33uLL:
        v5 = 243;
        break;
      case 0x34uLL:
        v5 = 244;
        break;
      case 0x35uLL:
        v5 = 245;
        break;
      case 0x36uLL:
        v5 = 246;
        break;
      case 0x37uLL:
        v5 = 247;
        break;
      case 0x38uLL:
        v5 = 248;
        break;
      case 0x39uLL:
        v5 = 249;
        break;
      case 0x3AuLL:
        v5 = 250;
        break;
      case 0x3BuLL:
        v5 = 251;
        break;
      case 0x3CuLL:
        v5 = 252;
        break;
      case 0x3DuLL:
        v5 = 253;
        break;
      case 0x3EuLL:
        v5 = 254;
        break;
      case 0x3FuLL:
        v5 = 255;
        break;
      default:
        v5 = 259;
        break;
    }
  }
  else
  {
LABEL_3:
    v5 = v3;
  }
  *a1 = v5;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2199BCFF8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void *static iosmacHardware.Model.allCases.getter()
{
  return &unk_24D0B99B8;
}

uint64_t iosmacHardware.Model.rawValue.getter()
{
  unsigned __int16 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213ACC604 + 4 * word_213B2CFE0[*v0]))(0xD000000000000011, 0x8000000213B343A0);
}

uint64_t sub_213ACC604()
{
  return 0x312C333163614D69;
}

uint64_t sub_213ACCE64()
{
  return 0x312C333164615069;
}

uint64_t sub_213ACCE84()
{
  return 0x312C333164615069;
}

uint64_t sub_213ACCEA4()
{
  return 0x312C333164615069;
}

uint64_t sub_213ACCEC4()
{
  return 0x312C333164615069;
}

void sub_213ACCEE4()
{
  JUMPOUT(0x213ACD024);
}

void sub_213ACCEEC()
{
  JUMPOUT(0x213ACCEF8);
}

void sub_213ACCF04()
{
  JUMPOUT(0x213ACCF10);
}

void sub_213ACCF1C()
{
  JUMPOUT(0x213ACCF28);
}

uint64_t sub_213ACCF34()
{
  return 0x352C343164615069;
}

uint64_t sub_213ACCF4C()
{
  return 0x362C343164615069;
}

uint64_t sub_213ACCF64()
{
  return 0x332C363164615069;
}

uint64_t sub_213ACCF7C()
{
  return 0x342C363164615069;
}

uint64_t sub_213ACCF94()
{
  return 0x352C363164615069;
}

uint64_t sub_213ACCFAC()
{
  return 0x362C363164615069;
}

uint64_t sub_213ACCFC4()
{
  return 0x382C343164615069;
}

uint64_t sub_213ACCFDC()
{
  return 0x392C343164615069;
}

uint64_t sub_213ACD030()
{
  return 0x2C31656E6F685069;
}

uint64_t sub_213ACD04C()
{
  return 0x2C31656E6F685069;
}

uint64_t sub_213ACD244()
{
  return 0x3031656E6F685069;
}

uint64_t sub_213ACD260()
{
  return 0x3031656E6F685069;
}

uint64_t sub_213ACD274()
{
  return 0x3031656E6F685069;
}

uint64_t sub_213ACD4E8()
{
  return 0x3631656E6F685069;
}

uint64_t sub_213ACD504()
{
  return 0x3631656E6F685069;
}

uint64_t sub_213ACD518()
{
  return 0x312C31646F5069;
}

uint64_t sub_213ACD584()
{
  return 0x312C39646F5069;
}

void sub_213ACD59C()
{
  JUMPOUT(0x213ACD5A8);
}

void sub_213ACD5B4()
{
  JUMPOUT(0x213ACD5C0);
}

uint64_t sub_213ACD5CC()
{
  return 0x33312C343163614DLL;
}

uint64_t sub_213ACD5E4()
{
  return 0x34312C343163614DLL;
}

void sub_213ACD5FC()
{
  JUMPOUT(0x213ACD608);
}

void sub_213ACD614()
{
  JUMPOUT(0x213ACD620);
}

uint64_t sub_213ACD62C()
{
  return 0x35312C343163614DLL;
}

uint64_t sub_213ACD644()
{
  return 0x386B6F6F4263614DLL;
}

uint64_t sub_213ACD658()
{
  return 0x396B6F6F4263614DLL;
}

uint64_t sub_213ACD66C()
{
  return 0x316B6F6F4263614DLL;
}

uint64_t sub_213ACD68C()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD6E8()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD710()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD738()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD760()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD788()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD7B0()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD7D8()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD800()
{
  return 0x416B6F6F4263614DLL;
}

uint64_t sub_213ACD828()
{
  return 0x506B6F6F4263614DLL;
}

uint64_t sub_213ACD9B8()
{
  return 0x36696E696D63614DLL;
}

uint64_t sub_213ACD9F4()
{
  return 0x37696E696D63614DLL;
}

uint64_t sub_213ACDA08()
{
  return 0x38696E696D63614DLL;
}

uint64_t sub_213ACDA38()
{
  return 0x2C356F725063614DLL;
}

uint64_t sub_213ACDA4C()
{
  return 0x2C366F725063614DLL;
}

uint64_t sub_213ACDA7C()
{
  return 0x382C343163614DLL;
}

uint64_t sub_213ACDA94()
{
  return 0x4D6C617574726956;
}

uint64_t sub_213ACDAB8()
{
  return 0x332C343163614DLL;
}

uint64_t sub_213ACDAD0()
{
  return 0x32312C343163614DLL;
}

uint64_t sub_213ACDAE8()
{
  return 0x352C343163614DLL;
}

uint64_t sub_213ACDB00()
{
  return 0x362C343163614DLL;
}

uint64_t sub_213ACDB18()
{
  return 0x392C343163614DLL;
}

uint64_t sub_213ACDB30()
{
  return 0x30312C343163614DLL;
}

uint64_t sub_213ACDB48()
{
  return 0x332C353163614DLL;
}

uint64_t sub_213ACDB60()
{
  return 0x382C353163614DLL;
}

uint64_t sub_213ACDB78()
{
  return 0x362C353163614DLL;
}

uint64_t sub_213ACDB90()
{
  return 0x30312C353163614DLL;
}

uint64_t sub_213ACDBA8()
{
  return 0x392C353163614DLL;
}

uint64_t sub_213ACDBC0()
{
  return 0x372C353163614DLL;
}

uint64_t sub_213ACDBD8()
{
  return 0x31312C353163614DLL;
}

uint64_t sub_213ACDBF0()
{
  return 0x32312C353163614DLL;
}

uint64_t sub_213ACDC08()
{
  return 0x33312C353163614DLL;
}

uint64_t sub_213ACDC20()
{
  return 0x656E6F685069;
}

uint64_t sub_213ACDC34()
{
  return 1684099177;
}

uint64_t sub_213ACDC44()
{
  return 0x6E696D2064615069;
}

uint64_t sub_213ACDC64()
{
  return 1685016681;
}

uint64_t sub_213ACDC78()
{
  return 0x206B6F6F4263614DLL;
}

uint64_t sub_213ACDCA4()
{
  return 0x6F72502063614DLL;
}

uint64_t sub_213ACDCBC()
{
  return 0x6F72502063614D69;
}

uint64_t sub_213ACDCD4()
{
  return 1667321193;
}

uint64_t sub_213ACDCE4()
{
  return 0x696E696D2063614DLL;
}

uint64_t sub_213ACDCFC()
{
  return 0x647574532063614DLL;
}

uint64_t sub_213ACDD18()
{
  return sub_213ADA928();
}

uint64_t sub_213ACDD24()
{
  sub_213B2C518();
  iosmacHardware.Model.rawValue.getter();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213ACDD88()
{
  iosmacHardware.Model.rawValue.getter();
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213ACDDD8()
{
  sub_213B2C518();
  iosmacHardware.Model.rawValue.getter();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213ACDE38@<X0>(__int16 *a1@<X8>)
{
  return iosmacHardware.Model.init(rawValue:)(a1);
}

uint64_t sub_213ACDE44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = iosmacHardware.Model.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213ACDE68(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0B99B8;
}

uint64_t iosmacHardware.Model.id.getter()
{
  return iosmacHardware.Model.rawValue.getter();
}

uint64_t sub_213ACDEA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = iosmacHardware.Model.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213ACDEE0(uint64_t a1, uint64_t a2)
{
  return sub_213ACE674(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

id sub_213ACDF00()
{
  id *v0;

  return *v0;
}

uint64_t sub_213ACDF08@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_213ACDF10(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_213B2BE04();
  *a2 = 0;
  return result;
}

uint64_t sub_213ACDF84(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_213B2BE10();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_213ACE000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_213B2BE1C();
  v2 = sub_213B2BDF8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_213ACE040(uint64_t a1, uint64_t a2)
{
  return sub_213ACE674(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_213ACE050()
{
  return sub_213B2BE1C();
}

uint64_t sub_213ACE060()
{
  sub_213ACEDD0(&qword_254D19370, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
  return sub_213B2BB28();
}

uint64_t sub_213ACE0A0()
{
  sub_213ACEDD0(&qword_254D19370, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
  return sub_213B2BAF8();
}

uint64_t sub_213ACE0E0(void *a1)
{
  id v2;

  sub_213ACEDD0(&qword_254D19370, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
  v2 = a1;
  return sub_213B2BAEC();
}

uint64_t sub_213ACE144()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_213B2C224();

  return v2;
}

uint64_t sub_213ACE178()
{
  sub_213ACEDD0(&qword_254D19370, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
  return sub_213B2BB1C();
}

uint64_t sub_213ACE1C8()
{
  sub_213B2C518();
  sub_213B2BDC8();
  return sub_213B2C530();
}

_QWORD *sub_213ACE224@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_213ACE234(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_213ACE244()
{
  sub_213ACEDD0(&qword_254D18940, (uint64_t (*)(uint64_t))type metadata accessor for LoadingOption, (uint64_t)&unk_213B2E1E4);
  sub_213ACEDD0(&qword_254D18650, (uint64_t (*)(uint64_t))type metadata accessor for LoadingOption, (uint64_t)&unk_213B2D9BC);
  return sub_213B2C3D4();
}

uint64_t sub_213ACE2C8()
{
  sub_213ACEDD0(&qword_254D18638, (uint64_t (*)(uint64_t))type metadata accessor for AnimationImportPolicy, (uint64_t)&unk_213B2DB30);
  sub_213ACEDD0((unint64_t *)&unk_254D18640, (uint64_t (*)(uint64_t))type metadata accessor for AnimationImportPolicy, (uint64_t)&unk_213B2DAD0);
  return sub_213B2C3D4();
}

uint64_t sub_213ACE34C()
{
  sub_213ACEDD0(&qword_254D18628, (uint64_t (*)(uint64_t))type metadata accessor for SCNShaderModifierEntryPoint, (uint64_t)&unk_213B2E228);
  sub_213ACEDD0(&qword_254D18630, (uint64_t (*)(uint64_t))type metadata accessor for SCNShaderModifierEntryPoint, (uint64_t)&unk_213B2DC28);
  return sub_213B2C3D4();
}

uint64_t sub_213ACE3D0()
{
  sub_213ACEDD0(&qword_254D185B0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E04C);
  return sub_213B2C4D0();
}

uint64_t sub_213ACE410()
{
  sub_213ACEDD0(&qword_254D185B0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E04C);
  return sub_213B2C4C4();
}

uint64_t sub_213ACE454()
{
  sub_213ACEDD0(&qword_254D19370, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
  return sub_213B2BAE0();
}

uint64_t sub_213ACE494()
{
  sub_213ACEDD0(&qword_254D19370, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
  return sub_213B2BB04();
}

BOOL sub_213ACE4EC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_213ACE500()
{
  sub_213ACEDD0(&qword_254D18618, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_213B2DDA8);
  sub_213ACEDD0(&qword_254D18620, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_213B2DD48);
  return sub_213B2C3D4();
}

uint64_t sub_213ACE584@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2BDF8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_213ACE5C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213B2BE1C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_213ACE5F0()
{
  sub_213ACEDD0((unint64_t *)&qword_254D18608, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_213B2E1A0);
  sub_213ACEDD0(&qword_254D18610, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_213B2DEAC);
  return sub_213B2C3D4();
}

uint64_t sub_213ACE674(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_213B2BE1C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_213ACE6B0()
{
  sub_213B2BE1C();
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213ACE6F0()
{
  uint64_t v0;

  sub_213B2BE1C();
  sub_213B2C518();
  sub_213B2BE88();
  v0 = sub_213B2C530();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_213ACE760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_213B2BE1C();
  v2 = v1;
  if (v0 == sub_213B2BE1C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_213ACE7EC()
{
  unint64_t result;

  result = qword_254D184A8;
  if (!qword_254D184A8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for iosmacHardware.Model, &type metadata for iosmacHardware.Model);
    atomic_store(result, (unint64_t *)&qword_254D184A8);
  }
  return result;
}

unint64_t sub_213ACE834()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D184B0;
  if (!qword_254D184B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D184B8);
    result = MEMORY[0x2199BD010](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D184B0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2199BD004](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_213ACE8C4()
{
  return MEMORY[0x24BEE0D10];
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s14descr24D0BB8F9V5ModelOwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFEFE)
    goto LABEL_17;
  if (a2 + 258 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 258 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 258;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 258;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 258;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x103;
  v8 = v6 - 259;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14descr24D0BB8F9V5ModelOwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 258 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 258 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0xFEFE)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0xFEFD)
    return ((uint64_t (*)(void))((char *)&loc_213ACE9C0 + 4 * byte_213B2D1EB[v5]))();
  *a1 = a2 + 258;
  return ((uint64_t (*)(void))((char *)sub_213ACE9F8 + 4 * byte_213B2D1E6[v5]))();
}

uint64_t sub_213ACE9F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_213ACEA00(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x213ACEA08);
  return result;
}

uint64_t sub_213ACEA14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x213ACEA1CLL);
  *(_WORD *)result = a2 + 258;
  return result;
}

uint64_t sub_213ACEA20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_213ACEA28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_213ACEA34(unsigned __int16 *a1)
{
  return *a1;
}

_WORD *sub_213ACEA40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for iosmacHardware.Model()
{
  return &type metadata for iosmacHardware.Model;
}

void type metadata accessor for MAQueryResult(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184C0);
}

uint64_t initializeBufferWithCopyOfBuffer for PersonalizationAssetManager.Asset(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_213ACEAB0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_213ACEAD0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184C8);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184D0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184D8);
}

void type metadata accessor for IOSurfaceRef(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184E0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VideoViewFeatureTimings.Section(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VideoViewFeatureTimings.Section(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184E8);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SemanticVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SemanticVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184F0);
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D184F8);
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_213ACEC6C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_213ACEC8C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18500);
}

void type metadata accessor for CKError(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18508);
}

void type metadata accessor for CIContextOption(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18510);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18518);
}

void type metadata accessor for SCNShaderModifierEntryPoint(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18520);
}

void type metadata accessor for AnimationImportPolicy(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18528);
}

void type metadata accessor for LoadingOption(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18530);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18538);
}

uint64_t sub_213ACED78()
{
  return sub_213ACEDD0(&qword_254D18540, (uint64_t (*)(uint64_t))type metadata accessor for LoadingOption, (uint64_t)&unk_213B2D980);
}

uint64_t sub_213ACEDA4()
{
  return sub_213ACEDD0(&qword_254D18548, (uint64_t (*)(uint64_t))type metadata accessor for LoadingOption, (uint64_t)&unk_213B2D954);
}

uint64_t sub_213ACEDD0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2199BD010](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213ACEE10()
{
  return sub_213ACEDD0(&qword_254D18550, (uint64_t (*)(uint64_t))type metadata accessor for AnimationImportPolicy, (uint64_t)&unk_213B2DA94);
}

uint64_t sub_213ACEE3C()
{
  return sub_213ACEDD0(&qword_254D18558, (uint64_t (*)(uint64_t))type metadata accessor for AnimationImportPolicy, (uint64_t)&unk_213B2DA68);
}

uint64_t sub_213ACEE68()
{
  return sub_213ACEDD0(&qword_254D18560, (uint64_t (*)(uint64_t))type metadata accessor for AnimationImportPolicy, (uint64_t)&unk_213B2DB04);
}

uint64_t sub_213ACEE94()
{
  return sub_213ACEDD0(&qword_254D18568, (uint64_t (*)(uint64_t))type metadata accessor for SCNShaderModifierEntryPoint, (uint64_t)&unk_213B2DBEC);
}

uint64_t sub_213ACEEC0()
{
  return sub_213ACEDD0(&qword_254D18570, (uint64_t (*)(uint64_t))type metadata accessor for SCNShaderModifierEntryPoint, (uint64_t)&unk_213B2DBC0);
}

uint64_t sub_213ACEEEC()
{
  return sub_213ACEDD0(&qword_254D18578, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_213B2DD0C);
}

uint64_t sub_213ACEF18()
{
  return sub_213ACEDD0(&qword_254D18580, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_213B2DCE0);
}

uint64_t sub_213ACEF44()
{
  return sub_213ACEDD0(&qword_254D18588, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_213B2DD7C);
}

uint64_t sub_213ACEF70()
{
  return sub_213ACEDD0(&qword_254D18590, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_213B2DE70);
}

uint64_t sub_213ACEF9C()
{
  return sub_213ACEDD0(&qword_254D18598, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_213B2DE44);
}

uint64_t sub_213ACEFC8()
{
  return sub_213ACEDD0(&qword_254D185A0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2DF64);
}

uint64_t sub_213ACEFF4()
{
  return sub_213ACEDD0(&qword_254D185A8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2DF90);
}

uint64_t sub_213ACF020()
{
  return sub_213ACEDD0(&qword_254D185B0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E04C);
}

uint64_t sub_213ACF04C()
{
  return sub_213ACEDD0(&qword_254D185B8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E018);
}

uint64_t sub_213ACF078()
{
  return sub_213ACEDD0(&qword_254D185C0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2DFD4);
}

uint64_t sub_213ACF0A4()
{
  return sub_213ACEDD0(&qword_254D185C8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_213B2E138);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_213ACF0E4(a1, &qword_254D18658);
}

void sub_213ACF0E4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_213ACF128()
{
  return sub_213ACEDD0(&qword_254D185D0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_213B2E0FC);
}

unint64_t sub_213ACF158()
{
  unint64_t result;

  result = qword_254D185D8;
  if (!qword_254D185D8)
  {
    result = MEMORY[0x2199BD010](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254D185D8);
  }
  return result;
}

uint64_t sub_213ACF19C()
{
  return sub_213ACEDD0((unint64_t *)&unk_254D185E0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_213B2E174);
}

uint64_t sub_213ACF1C8()
{
  return sub_213ACEDD0(&qword_254D19370, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
}

uint64_t sub_213ACF1F4()
{
  return sub_213ACEDD0(&qword_254D185F0, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_213B2DEE0);
}

uint64_t sub_213ACF220()
{
  return sub_213ACEDD0(&qword_254D185F8, (uint64_t (*)(uint64_t))type metadata accessor for LoadingOption, (uint64_t)&unk_213B2D9F0);
}

uint64_t sub_213ACF24C()
{
  return sub_213ACEDD0(&qword_254D18600, (uint64_t (*)(uint64_t))type metadata accessor for SCNShaderModifierEntryPoint, (uint64_t)&unk_213B2DC5C);
}

uint64_t sub_213ACF28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D186C0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D186C0);
  if (qword_254D18478 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213ACF31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  id v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v26;
  __int128 aBlock;
  uint64_t (*v28)(uint64_t);
  void *v29;
  void (*v30)();
  _QWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v4 = v3;
  v8 = v3 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_timeObserverToken;
  swift_beginAccess();
  sub_213AD6478(v8, (uint64_t)&aBlock, &qword_254D188A8);
  if (v29)
  {
    sub_213AD5184(&aBlock, &v33);
    v9 = *(void **)(v3 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player);
    __swift_project_boxed_opaque_existential_0(&v33, *((uint64_t *)&v34 + 1));
    objc_msgSend(v9, sel_removeTimeObserver_, sub_213B2C470());
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v33);
  }
  else
  {
    sub_213AD6270((uint64_t)&aBlock, &qword_254D188A8);
  }
  v32 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v26 = a2;
    v11 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v12 = 32;
    do
    {
      v13 = *(_OWORD *)(a1 + v12 + 16);
      v33 = *(_OWORD *)(a1 + v12);
      v34 = v13;
      v35 = *(_OWORD *)(a1 + v12 + 32);
      aBlock = v33;
      v28 = (uint64_t (*)(uint64_t))v13;
      v14 = objc_msgSend(v11, sel_valueWithCMTime_, &aBlock);
      MEMORY[0x2199BC3BC]();
      if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213B2BF78();
      sub_213B2BF9C();
      sub_213B2BF54();
      *(_QWORD *)&aBlock = sub_213B2C134();
      *((_QWORD *)&aBlock + 1) = v15;
      v28 = v16;
      v17 = objc_msgSend(v11, sel_valueWithCMTime_, &aBlock);
      MEMORY[0x2199BC3BC]();
      if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213B2BF78();
      sub_213B2BF9C();
      sub_213B2BF54();
      v12 += 48;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a2 = v26;
  }
  v18 = *(void **)(v4 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player);
  sub_213AD63B4(0, &qword_254D188B0);
  v19 = (void *)sub_213B2BF30();
  swift_bridgeObjectRelease();
  sub_213AD63B4(0, &qword_254D188B8);
  v20 = (void *)sub_213B2C188();
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v21;
  v22[3] = a1;
  v22[4] = a2;
  v22[5] = a3;
  v30 = sub_213AD51EC;
  v31 = v22;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v28 = sub_213AD39D8;
  v29 = &block_descriptor;
  v23 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v24 = objc_msgSend(v18, sel_addBoundaryTimeObserverForTimes_queue_usingBlock_, v19, v20, v23);
  _Block_release(v23);

  sub_213B2C278();
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_213AD5210((uint64_t)&aBlock, v8);
  return swift_endAccess();
}

void (*sub_213ACF6F8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_featureHandler;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_213ACF750;
}

void sub_213ACF750(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = (uint64_t *)(v4 + v3[4]);
    v6 = *v5;
    if (*v5)
    {
      v7 = v5[1];
      v8 = v4 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_configuration;
      swift_beginAccess();
      if (*(_QWORD *)(v8 + *(int *)(type metadata accessor for VideoViewConfiguration(0) + 44)))
      {
        v9 = v3[3];
        swift_retain();
        v10 = sub_213B27EA8();
        v11 = *(void **)(v9 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver);
        if (v11)
        {
          v12 = v11;
          sub_213ACF31C(v10, v6, v7);
          sub_213AD529C(v6);

        }
        else
        {
          sub_213AD529C(v6);
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  free(v3);
}

unint64_t sub_213ACF84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t result;
  id v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v1 = sub_213B2BBD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213AD52BC(v0 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_configuration, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    if (qword_254D18370 != -1)
      swift_once();
    v17 = sub_213B2BCF0();
    __swift_project_value_buffer(v17, (uint64_t)qword_254D186C0);
    v18 = sub_213B2BCD8();
    v19 = sub_213B2C164();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213AC8000, v18, v19, "Asked to play feature video but no feature video available", v20, 2u);
      MEMORY[0x2199BD0E8](v20, -1, -1);
    }

    return sub_213AD53FC((uint64_t)v7, type metadata accessor for VideoViewConfiguration.VideoSequence);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v9 + 64)], v1);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player);
  v11 = objc_msgSend(v10, sel_items);
  sub_213AD63B4(0, &qword_254D18888);
  v12 = sub_213B2BF3C();

  if (!(v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v13 = sub_213B2C398();
  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_16;
LABEL_4:
  result = v13 - 1;
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v15 = (id)MEMORY[0x2199BC7AC](result, v12);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v12 + 8 * result + 32);
LABEL_9:
    v16 = v15;
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_removeItem_, v16);

LABEL_17:
    v21 = &v7[*(int *)(v9 + 48)];
    sub_213AD2D9C();
    v22 = *(void (**)(char *, uint64_t))(v2 + 8);
    v22(v4, v1);
    v22(v21, v1);
    return ((uint64_t (*)(char *, uint64_t))v22)(v7, v1);
  }
  __break(1u);
  return result;
}

id sub_213ACFB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  double v6;

  v1 = v0;
  if (qword_254D18370 != -1)
    swift_once();
  v2 = sub_213B2BCF0();
  __swift_project_value_buffer(v2, (uint64_t)qword_254D186C0);
  v3 = sub_213B2BCD8();
  v4 = sub_213B2C170();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_213AC8000, v3, v4, "Player started playing", v5, 2u);
    MEMORY[0x2199BD0E8](v5, -1, -1);
  }

  LODWORD(v6) = 1.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player), sel_setRate_, v6);
}

void sub_213ACFC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  double v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;

  v1 = v0;
  if (qword_254D18370 != -1)
    swift_once();
  v2 = sub_213B2BCF0();
  __swift_project_value_buffer(v2, (uint64_t)qword_254D186C0);
  v3 = sub_213B2BCD8();
  v4 = sub_213B2C170();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_213AC8000, v3, v4, "Player stopped playing", v5, 2u);
    MEMORY[0x2199BD0E8](v5, -1, -1);
  }

  LODWORD(v6) = 0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player), sel_setRate_, v6);
  v7 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_token;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_token);
  if (v8)
  {
    v9 = v8;
    sub_213B2BAD4();

    v10 = *(void **)(v1 + v7);
  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)(v1 + v7) = 0;

}

char *sub_213ACFD58(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  objc_class *ObjectType;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  CATransform3D v38;
  _BYTE v39[136];
  CATransform3D v40;
  objc_super v41;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_startedHandler];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_completedHandler];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_featureHandler];
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver] = 0;
  v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_hasSetUpSceneDriver] = 0;
  sub_213AD52BC(a1, (uint64_t)&v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_configuration], type metadata accessor for VideoViewConfiguration);
  v8 = objc_allocWithZone(MEMORY[0x24BDE8298]);
  v9 = v2;
  v10 = objc_msgSend(v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneView] = v10;

  v41.receiver = v9;
  v41.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneView;
  v13 = *(void **)&v11[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneView];
  v14 = (void *)objc_opt_self();
  v15 = v11;
  v16 = v13;
  v17 = objc_msgSend(v14, sel_clearColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  objc_msgSend(*(id *)&v11[v12], sel_setAntialiasingMode_, 2);
  v18 = objc_msgSend(*(id *)&v11[v12], sel_layer);
  objc_msgSend(v18, sel_setMinificationFilter_, *MEMORY[0x24BDE5C20]);

  objc_msgSend(*(id *)&v11[v12], sel_setLoops_, 0);
  objc_msgSend(*(id *)&v11[v12], sel_setRendersContinuously_, 1);
  objc_msgSend(*(id *)&v11[v12], sel_setPreferredFramesPerSecond_, 60);
  objc_msgSend(*(id *)&v11[v12], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v11[v12]);
  v19 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18910);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_213B2E2D0;
  v21 = objc_msgSend(*(id *)&v11[v12], sel_leadingAnchor);
  v22 = objc_msgSend(v15, sel_leadingAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(*(id *)&v11[v12], sel_trailingAnchor);
  v25 = objc_msgSend(v15, sel_trailingAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(*(id *)&v11[v12], sel_topAnchor);
  v28 = objc_msgSend(v15, sel_topAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v20 + 48) = v29;
  v30 = objc_msgSend(*(id *)&v11[v12], sel_bottomAnchor);
  v31 = objc_msgSend(v15, sel_bottomAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(_QWORD *)(v20 + 56) = v32;
  *(_QWORD *)&v40.m11 = v20;
  sub_213B2BF54();
  sub_213AD63B4(0, (unint64_t *)&qword_254D18958);
  v33 = (void *)sub_213B2BF30();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_activateConstraints_, v33);

  v34 = type metadata accessor for VideoViewConfiguration(0);
  if (*(double *)(a1 + *(int *)(v34 + 36)) != 0.0)
  {
    v35 = objc_msgSend(v15, sel_layer);
    CATransform3DMakeScale(&v40, 1.2, 1.2, 1.0);
    objc_msgSend(v35, sel_setTransform_, &v40);

  }
  sub_213AD64BC(a1 + *(int *)(v34 + 40), (uint64_t)v39, &qword_254D18960);
  sub_213AD64BC((uint64_t)v39, (uint64_t)&v40, &qword_254D18960);
  if (sub_213AD63EC((uint64_t)&v40) == 1)
  {
    sub_213AD53FC(a1, type metadata accessor for VideoViewConfiguration);

  }
  else
  {
    v36 = objc_msgSend(v15, sel_layer);
    v38 = v40;
    objc_msgSend(v36, sel_setTransform_, &v38);

    sub_213AD53FC(a1, type metadata accessor for VideoViewConfiguration);
  }
  return v15;
}

id sub_213AD0430()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneView], sel_setDelegate_, 0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_213AD058C()
{
  return type metadata accessor for PersonalizedVideoView(0);
}

uint64_t type metadata accessor for PersonalizedVideoView(uint64_t a1)
{
  return sub_213AD35E0(a1, (uint64_t *)&unk_254D18738);
}

void sub_213AD05A8(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (**v25)();
  uint64_t v26;
  _QWORD v27[5];
  objc_super v28;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for VideoViewConfiguration(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28.receiver = v2;
  v28.super_class = ObjectType;
  objc_msgSendSuper2(&v28, sel_willMoveToSuperview_, a1);
  v8 = OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_hasSetUpSceneDriver;
  if ((v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_hasSetUpSceneDriver] & 1) == 0)
  {
    v9 = (uint64_t)&v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_configuration];
    swift_beginAccess();
    sub_213AD52BC(v9, (uint64_t)v7, type metadata accessor for VideoViewConfiguration);
    v10 = objc_allocWithZone((Class)type metadata accessor for SceneDriver(0));
    sub_213AD164C((uint64_t)v7);
    v11 = *(void **)&v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver];
    *(_QWORD *)&v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver] = v12;

    v13 = OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneView;
    v14 = OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneView], sel_setDelegate_, *(_QWORD *)&v2[OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver], v27[0], v27[1]);
    v15 = *(void **)&v2[v13];
    v16 = *(_QWORD *)&v2[v14];
    if (v16)
      v17 = *(id *)(v16 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_scene);
    else
      v17 = 0;
    v18 = v15;
    objc_msgSend(v18, sel_setScene_, v17);

    v19 = *(_QWORD *)&v2[v14];
    if (v19)
    {
      v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v21 = (uint64_t *)(v19
                      + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_featureStartedHandler);
      swift_beginAccess();
      v22 = *v21;
      *v21 = (uint64_t)sub_213AD6230;
      v21[1] = v20;
      sub_213AD529C(v22);
      v23 = *(_QWORD *)&v2[v14];
      if (v23)
      {
        v24 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v25 = (void (**)())(v23
                          + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_featureCompletedHandler);
        v26 = *(_QWORD *)(v23
                        + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_featureCompletedHandler);
        *v25 = sub_213AD6250;
        v25[1] = (void (*)())v24;
        sub_213AD529C(v26);
      }
    }
    v2[v8] = 1;
  }
}

void sub_213AD097C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (**v6)(void);
  void (*v7)(void);

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x2199BD184](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void (**)(void))(v4 + *a2);
    swift_beginAccess();
    v7 = *v6;
    if (*v6)
    {
      sub_213AD52AC((uint64_t)v7);

      v7();
      sub_213AD529C((uint64_t)v7);
    }
    else
    {

    }
  }
}

uint64_t sub_213AD0A78()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VideoViewConfiguration(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_213AD0B14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  CGImageRef v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  _QWORD v21[4];

  v3 = type metadata accessor for VideoViewConfiguration(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v8 = (void *)a1[3];
  v10 = *(char **)(v1 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver);
  if (v10)
  {
    v11 = *(void **)&v10[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_personalizedAssetMaterial];
    v20 = v10;
    v12 = objc_msgSend(v11, sel_diffuse);
    v21[0] = v6;
    v21[1] = v7;
    v21[2] = v9;
    v21[3] = v8;
    v13 = sub_213B296B0((uint64_t)v21);
    objc_msgSend(v12, sel_setContents_, v13);

    if (v9 == 1)
      objc_msgSend(v11, sel_setBlendMode_, 3);

  }
  else
  {
    v14 = v1 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_configuration;
    swift_beginAccess();
    sub_213AD52BC(v14, (uint64_t)v5, type metadata accessor for VideoViewConfiguration);
    v15 = &v5[*(int *)(v3 + 28)];
    v16 = *((_QWORD *)v15 + 1);
    v20 = *(char **)v15;
    v17 = *((_QWORD *)v15 + 2);
    v18 = (void *)*((_QWORD *)v15 + 3);
    sub_213AD5300(v6, v7);
    v19 = v8;
    sub_213AD5344((uint64_t)v20, v16, v17, v18);
    *(_QWORD *)v15 = v6;
    *((_QWORD *)v15 + 1) = v7;
    *((_QWORD *)v15 + 2) = v9;
    *((_QWORD *)v15 + 3) = v8;
    swift_beginAccess();
    sub_213AD53B8((uint64_t)v5, v14);
    swift_endAccess();
    sub_213AD53FC((uint64_t)v5, type metadata accessor for VideoViewConfiguration);
  }
}

uint64_t sub_213AD0CF4(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_startedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213AD0D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213AD0D80(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_startedHandler);
}

uint64_t (*sub_213AD0D14())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_213AD0D60(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_completedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213AD0D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213AD0D80(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_completedHandler);
}

uint64_t sub_213AD0D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t *v8;
  uint64_t v9;

  v8 = (uint64_t *)(*v5 + *a5);
  swift_beginAccess();
  v9 = *v8;
  *v8 = a1;
  v8[1] = a2;
  return sub_213AD529C(v9);
}

uint64_t (*sub_213AD0DDC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_213AD0E24(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_featureHandler, (void (*)(_QWORD, _QWORD))sub_213AD6500);
}

uint64_t sub_213AD0E38(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(_QWORD, _QWORD))
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)(*v4 + *a3);
  swift_beginAccess();
  v7 = *v6;
  a4(*v6, v6[1]);
  return v7;
}

uint64_t sub_213AD0E9C(uint64_t a1, uint64_t a2)
{
  sub_213AD4F54(a1, a2);
  return sub_213AD529C(a1);
}

void (*sub_213AD0ED4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_213ACF6F8(v2);
  return sub_213AD0F1C;
}

void sub_213AD0F1C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_213AD0F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  void *v4;
  id v8;

  v4 = *(void **)(*v3 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver);
  if (v4)
  {
    v8 = v4;
    sub_213ACF31C(a1, a2, a3);

  }
}

void sub_213AD0FC8(uint64_t a1, uint64_t a2)
{
  sub_213AD0FEC(a1, a2, (void (*)(void))sub_213ACF84C);
}

void sub_213AD0FD4(uint64_t a1, uint64_t a2)
{
  sub_213AD0FEC(a1, a2, (void (*)(void))sub_213ACFB54);
}

void sub_213AD0FE0(uint64_t a1, uint64_t a2)
{
  sub_213AD0FEC(a1, a2, sub_213ACFC3C);
}

void sub_213AD0FEC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  _QWORD *v3;
  void *v4;
  id v6;

  v4 = *(void **)(*v3 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver);
  if (v4)
  {
    v6 = v4;
    a3();

  }
}

void sub_213AD1048(uint64_t *a1)
{
  sub_213AD0B14(a1);
}

BOOL sub_213AD1068(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_213AD107C()
{
  sub_213B2C518();
  sub_213B2C524();
  return sub_213B2C530();
}

uint64_t sub_213AD10C0()
{
  return sub_213B2C524();
}

uint64_t sub_213AD10E8()
{
  sub_213B2C518();
  sub_213B2C524();
  return sub_213B2C530();
}

unint64_t sub_213AD1128(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18898);
  v2 = sub_213B2C3BC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_213AD6478(v6, (uint64_t)&v15, &qword_254D188A0);
    v7 = v15;
    v8 = v16;
    result = sub_213AD4B1C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_213AD5184(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213AD125C(uint64_t a1)
{
  return sub_213AD1384(a1, &qword_254D18968, &qword_254D18970);
}

unint64_t sub_213AD1270(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18930);
  v2 = (_QWORD *)sub_213B2C3BC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    result = sub_213AD4B80((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v7;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213AD1384(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_213B2C3BC();
  v6 = (_QWORD *)v5;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  v8 = v5 + 64;
  v9 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_213AD6478(v9, (uint64_t)&v16, a3);
    v10 = v16;
    result = sub_213AD4B80(v16);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v6[6] + 8 * result) = v10;
    result = (unint64_t)sub_213AD5184(&v17, (_OWORD *)(v6[7] + 32 * result));
    v13 = v6[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6[2] = v15;
    v9 += 40;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213AD14A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18980);
  v6 = sub_213B2C3BC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v24 = a1;
  v25 = v9;
  v10 = v6 + 64;
  v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v12 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_213AD6478(v11, (uint64_t)v5, &qword_254D18978);
    v13 = *v5;
    v14 = v5[1];
    result = sub_213AD4B1C(*v5, v14);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = (uint64_t *)(v7[6] + 16 * result);
    *v18 = v13;
    v18[1] = v14;
    v19 = v7[7];
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
    result = sub_213AD64BC(v25, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v17, &qword_254D18988);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v11 += v12;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_213AD164C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  void (*v50)(char *, Class *, uint64_t);
  id v51;
  char *v52;
  id v53;
  int EnumCaseMultiPayload;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  unint64_t v59;
  id v60;
  void *v61;
  __objc2_prop_list **v62;
  id v63;
  uint64_t v64;
  uint64_t p_base_props;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  void (*v76)(uint64_t, void *);
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  char *v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  id v96;
  void *v97;
  id v98;
  id v99;
  __objc2_prop_list **v100;
  id v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  id v108;
  char *v109;
  void *v110;
  __objc2_prop_list **v111;
  id v112;
  id v113;
  void (*v114)(uint64_t, void *);
  uint64_t v115;
  char *v116;
  id v117;
  char *v118;
  void *v119;
  id v120;
  id v121;
  void (*v122)(uint64_t, void *);
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t inited;
  void **v128;
  void *v129;
  void *v130;
  uint64_t v131;
  id v132;
  id v133;
  unint64_t v134;
  __objc2_prop_list **v135;
  id v136;
  char *v137;
  id v138;
  uint64_t v139;
  void *v140;
  id v141;
  id v142;
  id v143;
  id v144;
  void *v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  id v150;
  char *v151;
  char *v152;
  char *v153;
  void *v154;
  char *v155;
  unint64_t v156;
  void *v157;
  uint64_t v158;
  void *v159;
  char *v160;
  id v161;
  CGImageRef v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  id v166;
  void *v167;
  uint64_t v168;
  id v169;
  id v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t, uint64_t);
  char *v179;
  char *v180;
  void (*v181)(char *, uint64_t);
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  void (*v188)(char *, uint64_t, uint64_t);
  char *v189;
  char *v190;
  uint64_t v191;
  double v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  char *v198;
  void (*v199)(char *, Class *, uint64_t);
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  char *v204;
  Class *v205;
  char *v206;
  void (*v207)(char *, uint64_t);
  char *v208;
  char *v209;
  __objc2_prop_list **v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t *v221;
  objc_class *ObjectType;
  objc_super v223;
  id aBlock;
  uint64_t v225;
  void (*v226)(uint64_t, void *);
  void *v227;
  uint64_t (*v228)();
  uint64_t v229;
  id v230;
  void *v231;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v213 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  v4 = MEMORY[0x24BDAC7A8](v213);
  v201 = (uint64_t)&v194 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (Class *)((char *)&v194 - v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v194 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213B2BBD0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v196 = (char *)&v194 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v200 = (char *)&v194 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v209 = (char *)&v194 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v207 = (void (*)(char *, uint64_t))((char *)&v194 - v20);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v206 = (char *)&v194 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v197 = (char *)&v194 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v205 = (Class *)((char *)&v194 - v26);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v204 = (char *)&v194 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v194 - v29;
  v216 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_token;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_token] = 0;
  v31 = &v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_timeObserverToken];
  *(_OWORD *)v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  v218 = v31;
  v217 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_textureCache;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_textureCache] = 0;
  v219 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_videoMaterial;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_videoMaterial] = 0;
  v32 = (uint64_t *)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_featureStartedHandler];
  *v32 = 0;
  v32[1] = 0;
  v220 = v32;
  v33 = (uint64_t *)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_featureCompletedHandler];
  *v33 = 0;
  v33[1] = 0;
  v221 = v33;
  v34 = &v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_engageDuration];
  v35 = *MEMORY[0x24BDC0D88];
  v36 = *(_DWORD *)(MEMORY[0x24BDC0D88] + 8);
  v37 = *(_DWORD *)(MEMORY[0x24BDC0D88] + 12);
  v38 = *(_QWORD *)(MEMORY[0x24BDC0D88] + 16);
  *(_QWORD *)v34 = *MEMORY[0x24BDC0D88];
  *((_DWORD *)v34 + 2) = v36;
  *((_DWORD *)v34 + 3) = v37;
  v203 = v34;
  *((_QWORD *)v34 + 2) = v38;
  v39 = &v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_loopDuration];
  *(_QWORD *)v39 = v35;
  *((_DWORD *)v39 + 2) = v36;
  *((_DWORD *)v39 + 3) = v37;
  *((_QWORD *)v39 + 2) = v38;
  v214 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentIOSurface;
  *(_QWORD *)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentIOSurface] = 0;
  v40 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E8);
  v41 = swift_allocObject();
  *(_DWORD *)(v41 + 16) = 0;
  v215 = v40;
  *(_QWORD *)&v2[v40] = v41;
  v42 = (uint64_t)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_configuration];
  sub_213AD52BC(a1, (uint64_t)&v2[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_configuration], type metadata accessor for VideoViewConfiguration);
  v212 = type metadata accessor for VideoViewConfiguration(0);
  sub_213AD6478(a1 + *(int *)(v212 + 24), (uint64_t)v10, &qword_254D188E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v43 = a1;
    v44 = v2;
    sub_213AD6270((uint64_t)v10, &qword_254D188E0);
    if (qword_254D18370 != -1)
      swift_once();
    v45 = sub_213B2BCF0();
    __swift_project_value_buffer(v45, (uint64_t)qword_254D186C0);
    v46 = sub_213B2BCD8();
    v47 = sub_213B2C164();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_213AC8000, v46, v47, "Configuration doesn't have SceneURL, SceneDriver returning nil", v48, 2u);
      MEMORY[0x2199BD0E8](v48, -1, -1);
    }

    sub_213AD62AC();
    swift_allocError();
    *(_QWORD *)v49 = 0xD00000000000002CLL;
    *(_QWORD *)(v49 + 8) = 0x8000000213B346D0;
    *(_BYTE *)(v49 + 16) = 1;
    swift_willThrow();
    sub_213AD53FC(v43, type metadata accessor for VideoViewConfiguration);
    sub_213AD53FC(v42, type metadata accessor for VideoViewConfiguration);
LABEL_24:

    sub_213AD6270((uint64_t)v218, &qword_254D188A8);
    sub_213AD529C(*v220);
    sub_213AD529C(*v221);

    swift_release();
    swift_deallocPartialClassInstance();
    return;
  }
  v195 = v12;
  v50 = *(void (**)(char *, Class *, uint64_t))(v12 + 32);
  v198 = v30;
  v211 = v11;
  v199 = v50;
  v50(v30, (Class *)v10, v11);
  v51 = objc_allocWithZone(MEMORY[0x24BDB2670]);
  v52 = v2;
  v53 = objc_msgSend(v51, sel_init);
  *(_QWORD *)&v52[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player] = v53;
  objc_msgSend(v53, sel_setAllowsExternalPlayback_, 0);
  v202 = (char *)a1;
  sub_213AD52BC(a1, (uint64_t)v7, type metadata accessor for VideoViewConfiguration.VideoSequence);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v194 = v42;
  v208 = v52;
  if (!EnumCaseMultiPayload)
  {
    v82 = (uint64_t)v204;
    v199(v204, v7, v211);
    v39 = v52;
    v52[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState] = 1;
    v83 = objc_allocWithZone(MEMORY[0x24BDB26C8]);
    v84 = (void *)sub_213B2BB7C();
    v85 = objc_msgSend(v83, sel_initWithURL_options_, v84, 0, v194);

    v86 = objc_msgSend(v85, sel_tracksWithMediaType_, *MEMORY[0x24BDB1D50]);
    sub_213AD63B4(0, &qword_254D188F8);
    p_base_props = sub_213B2BF3C();

    if ((p_base_props & 0xC000000000000001) != 0)
    {
LABEL_43:
      v87 = (id)MEMORY[0x2199BC7AC](0, p_base_props);
      v52 = v202;
      goto LABEL_16;
    }
    v52 = v202;
    if (*(_QWORD *)((p_base_props & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v87 = *(id *)(p_base_props + 32);
LABEL_16:
      swift_bridgeObjectRelease();
      objc_msgSend(v87, sel_naturalSize);
      v89 = v88;
      v91 = v90;

      v78 = v195;
      v80 = (char *)v211;
      v207 = *(void (**)(char *, uint64_t))(v195 + 8);
      v207(v204, v211);
      v92 = &v39[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_croppedVideoSize];
      *(_QWORD *)v92 = v89;
      *((_QWORD *)v92 + 1) = v91;
LABEL_21:
      p_base_props = (uint64_t)v198;
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_45;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v204 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    v93 = (char *)v7 + *((int *)v204 + 12);
    v205 = v7;
    v94 = v211;
    v95 = (void (*)(char *, char *, uint64_t))v199;
    v199(v206, v7, v211);
    v95((char *)v207, v93, v94);
    v52[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState] = 0;
    v7 = (Class *)0x24BDB2000;
    v96 = objc_allocWithZone(MEMORY[0x24BDB26C8]);
    v97 = (void *)sub_213B2BB7C();
    p_base_props = (uint64_t)&HeadphonePairing2.Assets.base_props;
    v98 = objc_msgSend(v96, sel_initWithURL_options_, v97, 0, v194);

    v99 = objc_msgSend(v98, sel_tracksWithMediaType_, *MEMORY[0x24BDB1D50]);
    sub_213AD63B4(0, &qword_254D188F8);
    v82 = sub_213B2BF3C();

    if ((v82 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v100 = &HeadphonePairing2.Assets.base_props;
      v101 = *(id *)(v82 + 32);
      goto LABEL_20;
    }
LABEL_45:
    v100 = (__objc2_prop_list **)p_base_props;
    v101 = (id)MEMORY[0x2199BC7AC](0, v82);
LABEL_20:
    v102 = v101;
    swift_bridgeObjectRelease();
    v205 = (Class *)((char *)v205 + *((int *)v204 + 16));
    objc_msgSend(v102, sel_naturalSize);
    v104 = v103;
    v106 = v105;

    v107 = &v52[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_croppedVideoSize];
    *(_QWORD *)v107 = v104;
    *((_QWORD *)v107 + 1) = v106;
    v108 = objc_allocWithZone(v7[217]);
    v109 = (char *)v207;
    v110 = (void *)sub_213B2BB7C();
    v111 = v100;
    v112 = objc_msgSend(v108, (SEL)v100 + 4069, v110, 0);

    objc_msgSend(v112, sel_duration);
    v113 = aBlock;
    v114 = v226;
    v115 = v225;

    v116 = v203;
    *(_QWORD *)v203 = v113;
    *((_QWORD *)v116 + 1) = v115;
    *((_QWORD *)v116 + 2) = v114;
    v117 = objc_allocWithZone(MEMORY[0x24BDB26C8]);
    v118 = v206;
    v119 = (void *)sub_213B2BB7C();
    v120 = objc_msgSend(v117, (SEL)v111 + 4069, v119, 0);

    objc_msgSend(v120, sel_duration);
    v121 = aBlock;
    v122 = v226;
    v123 = v225;

    v78 = v195;
    v124 = *(void (**)(char *, uint64_t))(v195 + 8);
    v80 = (char *)v211;
    v124(v109, v211);
    v124(v118, (uint64_t)v80);
    *(_QWORD *)v39 = v121;
    *((_QWORD *)v39 + 1) = v123;
    *((_QWORD *)v39 + 2) = v122;
    v207 = v124;
    v124((char *)v205, (uint64_t)v80);
    v39 = v208;
    v52 = v202;
    goto LABEL_21;
  }
  v55 = (char *)v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48);
  v56 = v211;
  v57 = (void (*)(char *, char *, uint64_t))v199;
  v199((char *)v205, v7, v211);
  v58 = v197;
  v57(v197, v55, v56);
  v52[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState] = 0;
  v59 = 0x24BDB2000uLL;
  v60 = objc_allocWithZone(MEMORY[0x24BDB26C8]);
  v61 = (void *)sub_213B2BB7C();
  v62 = &HeadphonePairing2.Assets.base_props;
  v63 = objc_msgSend(v60, sel_initWithURL_options_, v61, 0, v194);

  v39 = (char *)objc_msgSend(v63, sel_tracksWithMediaType_, *MEMORY[0x24BDB1D50]);
  sub_213AD63B4(0, &qword_254D188F8);
  v64 = sub_213B2BF3C();

  if ((v64 & 0xC000000000000001) != 0)
    goto LABEL_41;
  p_base_props = (uint64_t)v198;
  if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  v66 = *(id *)(v64 + 32);
  while (1)
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v66, sel_naturalSize);
    v68 = v67;
    v70 = v69;

    v71 = &v52[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_croppedVideoSize];
    *(_QWORD *)v71 = v68;
    *((_QWORD *)v71 + 1) = v70;
    v72 = objc_allocWithZone(*(Class *)(v59 + 1736));
    v73 = (void *)sub_213B2BB7C();
    v74 = objc_msgSend(v72, (SEL)v62[256], v73, 0);

    objc_msgSend(v74, sel_duration);
    v75 = aBlock;
    v76 = v226;
    v77 = v225;

    v78 = v195;
    v79 = *(void (**)(char *, uint64_t))(v195 + 8);
    v80 = (char *)v211;
    v79(v58, v211);
    v207 = v79;
    v79((char *)v205, (uint64_t)v80);
    v81 = v203;
    *(_QWORD *)v203 = v75;
    *((_QWORD *)v81 + 1) = v77;
    *((_QWORD *)v81 + 2) = v76;
    v39 = v52;
    v52 = v202;
LABEL_22:
    v125 = v212;
    *(_OWORD *)&v39[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_originalVideoSize] = *(_OWORD *)&v52[*(int *)(v212 + 32)];
    *(_QWORD *)&v39[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_yOffset] = *(_QWORD *)&v52[*(int *)(v125 + 36)];
    sub_213AD63B4(0, &qword_254D18900);
    v126 = (uint64_t)v209;
    (*(void (**)(char *, uint64_t, char *))(v78 + 16))(v209, p_base_props, v80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18908);
    v59 = p_base_props;
    inited = swift_initStackObject();
    v128 = (void **)MEMORY[0x24BDE82F8];
    *(_OWORD *)(inited + 16) = xmmword_213B2E2E0;
    v58 = v80;
    v129 = *v128;
    *(_QWORD *)(inited + 32) = *v128;
    v130 = (void *)*MEMORY[0x24BDE8300];
    type metadata accessor for AnimationImportPolicy(0);
    *(_QWORD *)(inited + 64) = v131;
    *(_QWORD *)(inited + 40) = v130;
    v132 = v129;
    v133 = v130;
    v134 = sub_213AD1384(inited, &qword_254D18948, &qword_254D18950);
    v135 = v210;
    v136 = sub_213AD2ACC(v126, v134);
    v62 = v135;
    if (v135)
    {
      sub_213AD53FC((uint64_t)v52, type metadata accessor for VideoViewConfiguration);
      v207((char *)v59, (uint64_t)v58);
      sub_213AD53FC(v194, type metadata accessor for VideoViewConfiguration);

      goto LABEL_24;
    }
    v137 = v208;
    *(_QWORD *)&v208[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_scene] = v136;
    v231 = 0;
    v230 = 0;
    v138 = objc_msgSend(v136, sel_rootNode);
    v139 = swift_allocObject();
    *(_QWORD *)(v139 + 16) = &v231;
    *(_QWORD *)(v139 + 24) = &v230;
    v64 = swift_allocObject();
    *(_QWORD *)(v64 + 16) = sub_213AD6300;
    *(_QWORD *)(v64 + 24) = v139;
    v221 = (uint64_t *)v139;
    v228 = sub_213AD6318;
    v229 = v64;
    aBlock = (id)MEMORY[0x24BDAC760];
    v225 = 1107296256;
    v226 = sub_213AD2D58;
    v227 = &block_descriptor_18;
    v140 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v138, sel_enumerateChildNodesUsingBlock_, v140);

    _Block_release(v140);
    LOBYTE(v138) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v138 & 1) == 0)
      break;
    __break(1u);
LABEL_41:
    v66 = (id)MEMORY[0x2199BC7AC](0, v64);
    p_base_props = (uint64_t)v198;
  }
  v141 = v230;
  *(_QWORD *)&v137[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_camera] = v230;
  v142 = objc_allocWithZone(MEMORY[0x24BDE8238]);
  v143 = v141;
  v144 = objc_msgSend(v142, sel_init);
  *(_QWORD *)&v137[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_personalizedAssetMaterial] = v144;
  objc_msgSend(v144, sel_setDoubleSided_, 0);
  v145 = v137;
  v146 = v231;
  v147 = v212;
  if (v231)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18910);
    v148 = swift_allocObject();
    *(_OWORD *)(v148 + 16) = xmmword_213B2E2F0;
    *(_QWORD *)(v148 + 32) = v144;
    aBlock = (id)v148;
    sub_213B2BF54();
    v149 = v146;
    v150 = v144;

    sub_213AD63B4(0, &qword_254D18918);
    v145 = (void *)sub_213B2BF30();
    swift_bridgeObjectRelease();
    objc_msgSend(v149, sel_setMaterials_, v145);

  }
  v223.receiver = v208;
  v223.super_class = ObjectType;
  v151 = (char *)objc_msgSendSuper2(&v223, sel_init);
  v152 = v151;
  v153 = &v52[*(int *)(v147 + 28)];
  v154 = (void *)*((_QWORD *)v153 + 3);
  if (v154 == (void *)1)
  {
    v155 = v151;
  }
  else
  {
    v157 = *(void **)v153;
    v156 = *((_QWORD *)v153 + 1);
    v158 = *((_QWORD *)v153 + 2);
    v159 = *(void **)&v151[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_personalizedAssetMaterial];
    v160 = v151;
    sub_213AD6384(v157, v156, v158, v154);
    v161 = objc_msgSend(v159, sel_diffuse);
    aBlock = v157;
    v225 = v156;
    v226 = (void (*)(uint64_t, void *))v158;
    v227 = v154;
    v162 = sub_213B296B0((uint64_t)&aBlock);
    objc_msgSend(v161, sel_setContents_, v162);

    if (v158 == 1)
    {
      objc_msgSend(v159, sel_setBlendMode_, 3);
      v163 = (uint64_t)v157;
      v164 = v156;
      v165 = 1;
    }
    else
    {
      v163 = (uint64_t)v157;
      v164 = v156;
      v165 = v158;
    }
    sub_213AD5344(v163, v164, v165, v154);
    v52 = v202;
  }
  v166 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v167 = (void *)sub_213B2BDF8();
  objc_msgSend(v166, sel_addObserver_selector_name_object_, v152, sel_handlePlayerItemFinished_, v167, 0);

  v168 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player;
  aBlock = *(id *)&v152[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player];
  v169 = aBlock;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v170 = v169;
  v171 = sub_213B2BB58();
  swift_release();
  swift_release();

  v172 = *(void **)&v152[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_token];
  *(_QWORD *)&v152[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_token] = v171;

  v173 = v201;
  sub_213AD52BC((uint64_t)v52, v201, type metadata accessor for VideoViewConfiguration.VideoSequence);
  v174 = swift_getEnumCaseMultiPayload();
  if (v174)
  {
    if (v174 == 1)
    {
      v175 = v173 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48);
      v176 = v200;
      v177 = v211;
      v178 = (void (*)(char *, uint64_t, uint64_t))v199;
      v199(v200, (Class *)v173, v211);
      v179 = v196;
      v178(v196, v175, v177);
      sub_213AD2D9C();
      sub_213AD2D9C();
      v180 = v179;
      v181 = v207;
      v207(v180, v177);
      v181(v176, v177);
    }
    else
    {
      v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v184 = v173 + *(int *)(v183 + 48);
      v185 = v173 + *(int *)(v183 + 64);
      v186 = v200;
      v187 = v211;
      v188 = (void (*)(char *, uint64_t, uint64_t))v199;
      v199(v200, (Class *)v173, v211);
      v189 = v196;
      v188(v196, v184, v187);
      sub_213AD2D9C();
      sub_213AD2D9C();
      v190 = v189;
      v181 = v207;
      v207(v190, v187);
      v181(v186, v187);
      v191 = v185;
      v177 = v187;
      v181((char *)v191, v187);
    }
  }
  else
  {
    v182 = v200;
    v177 = v211;
    v199(v200, (Class *)v173, v211);
    sub_213AD2D9C();
    sub_213AD2D9C();
    v181 = v207;
    v207(v182, v177);
  }
  sub_213AD2F5C();
  LODWORD(v192) = 0;
  objc_msgSend(*(id *)&v152[v168], sel_setRate_, v192);
  sub_213AD53FC((uint64_t)v202, type metadata accessor for VideoViewConfiguration);
  v181(v198, v177);

  v193 = v231;
  swift_release();

}

id sub_213AD2ACC(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_213B2BB7C();
  if (a2)
  {
    type metadata accessor for LoadingOption(0);
    sub_213ACEDD0(&qword_254D18940, (uint64_t (*)(uint64_t))type metadata accessor for LoadingOption, (uint64_t)&unk_213B2E1E4);
    v5 = (void *)sub_213B2BDA4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v14[0] = 0;
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sceneWithURL_options_error_, v4, v5, v14);

  v7 = v14[0];
  if (v6)
  {
    v8 = sub_213B2BBD0();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v14[0];
    sub_213B2BB4C();

    swift_willThrow();
    v12 = sub_213B2BBD0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

void sub_213AD2C48(void *a1, uint64_t a2, id *a3, id *a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  id v12;
  id v13;
  id v14;

  v7 = objc_msgSend(a1, sel_geometry);
  if (!v7)
    goto LABEL_7;
  v8 = v7;
  v9 = *a3;
  if (!*a3)
    goto LABEL_5;
  sub_213AD63B4(0, &qword_254D18938);
  v10 = v9;
  v9 = v8;
  v11 = sub_213B2C218();

  if ((v11 & 1) == 0)
  {
    v9 = *a3;
LABEL_5:
    *a3 = v8;
  }

LABEL_7:
  v12 = objc_msgSend(a1, sel_camera);

  if (v12)
  {
    v14 = *a4;
    *a4 = a1;
    v13 = a1;

  }
}

void sub_213AD2D58(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_213AD2D9C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;

  v1 = v0;
  v2 = objc_allocWithZone(MEMORY[0x24BDB26C8]);
  v3 = (void *)sub_213B2BB7C();
  v4 = objc_msgSend(v2, sel_initWithURL_options_, v3, 0);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2618]), sel_initWithAsset_, v4);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player);
  v7 = objc_msgSend(v6, sel_items);
  sub_213AD63B4(0, &qword_254D18888);
  v8 = sub_213B2BF3C();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = (char *)sub_213B2C398();
    swift_bridgeObjectRelease();
    if (!v9)
      goto LABEL_9;
  }
  else
  {
    v9 = *(char **)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_insertItem_afterItem_, v5, v9);

      v12 = sub_213AD5078();
      objc_msgSend(v5, sel_addOutput_, v12);

      return;
    }
  }
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v11 = (char *)MEMORY[0x2199BC7AC](v10, v8);
    goto LABEL_8;
  }
  if (((unint64_t)v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v10 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = (char *)*(id *)(v8 + 8 * (_QWORD)v10 + 32);
LABEL_8:
    v9 = v11;
    goto LABEL_9;
  }
  __break(1u);
}

void sub_213AD2F5C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t inited;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_camera);
  if (v1)
  {
    v2 = v0;
    v29 = v1;
    v3 = objc_msgSend(v29, sel_camera);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_zFar);
      v6 = v5 * 0.99;
      v7 = *(double *)(v0
                     + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_originalVideoSize);
      v8 = *(double *)(v0
                     + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_originalVideoSize
                     + 8);
      objc_msgSend(v4, sel_fieldOfView);
      v10 = (v6 + v6) * tan(v9 * 0.00872664626);
      v11 = v8 * v10 / v7;
      if (v7 / v8 <= 1.0)
      {
        v11 = v10;
        v10 = v7 * v10 / v8;
      }
      v12 = objc_msgSend((id)objc_opt_self(), sel_planeWithWidth_height_, v10* (*(double *)(v0+ OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_croppedVideoSize)/ v7), v11* (*(double *)(v0+ OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_croppedVideoSize+ 8)/ v8));
      v13 = objc_msgSend((id)objc_opt_self(), sel_nodeWithGeometry_, v12);
      sub_213B2C128();
      objc_msgSend(v13, sel_setPosition_);
      v14 = (void *)sub_213B2BDF8();
      objc_msgSend(v13, sel_setName_, v14);

      objc_msgSend(v29, sel_addChildNode_, v13);
      v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE8238]), sel_init);
      objc_msgSend(v15, sel_setBlendMode_, 0);
      objc_msgSend(v15, sel_setReadsFromDepthBuffer_, 0);
      objc_msgSend(v15, sel_setWritesToDepthBuffer_, 0);
      objc_msgSend(v15, sel_setLightingModelName_, *MEMORY[0x24BDE82C8]);
      v16 = (void *)sub_213B2C0A4();
      v17 = (void *)sub_213B2BDF8();
      objc_msgSend(v15, sel_setValue_forKey_, v16, v17);

      v18 = (void *)sub_213B2C0A4();
      v19 = (void *)sub_213B2BDF8();
      objc_msgSend(v15, sel_setValue_forKey_, v18, v19);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D18920);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_213B2E2E0;
      v21 = (void *)*MEMORY[0x24BDE8308];
      *(_QWORD *)(inited + 32) = *MEMORY[0x24BDE8308];
      *(_QWORD *)(inited + 40) = 0xD0000000000000F7;
      *(_QWORD *)(inited + 48) = 0x8000000213B34750;
      v22 = v21;
      sub_213AD1270(inited);
      type metadata accessor for SCNShaderModifierEntryPoint(0);
      sub_213ACEDD0(&qword_254D18628, (uint64_t (*)(uint64_t))type metadata accessor for SCNShaderModifierEntryPoint, (uint64_t)&unk_213B2E228);
      v23 = (void *)sub_213B2BDA4();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_setShaderModifiers_, v23);

      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18910);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_213B2E2F0;
      *(_QWORD *)(v24 + 32) = v15;
      sub_213B2BF54();
      sub_213AD63B4(0, &qword_254D18918);
      v25 = v12;
      v26 = v15;
      v27 = (void *)sub_213B2BF30();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setMaterials_, v27);

      v28 = *(void **)(v2 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_videoMaterial);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_videoMaterial) = v26;

    }
    else
    {

    }
  }
}

id sub_213AD3414()
{
  char *v0;
  objc_class *ObjectType;
  os_unfair_lock_s *v2;
  __IOSurface *v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_lock];
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  v3 = *(__IOSurface **)&v0[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentIOSurface];
  if (v3)
    IOSurfaceDecrementUseCount(v3);
  os_unfair_lock_unlock(v2 + 4);
  swift_release();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_213AD35C4()
{
  return type metadata accessor for SceneDriver(0);
}

uint64_t type metadata accessor for SceneDriver(uint64_t a1)
{
  return sub_213AD35E0(a1, (uint64_t *)&unk_254D18868);
}

uint64_t sub_213AD35E0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_213AD3614(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[4];

  v4 = a1 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x2199BD184](v4);
  if (v5)
  {
    v6 = (void *)v5;
    if (*(_BYTE *)(v5
                  + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState) == 2
      && (objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player), sel_currentTime), CMTimeMake((CMTime *)v23, 1, 10), (v20 = *(_QWORD *)(a2 + 16)) != 0))
    {
      v18 = v6;
      v21 = a2;
      swift_bridgeObjectRetain();
      v7 = 0;
      v8 = 32;
      do
      {
        v22 = v8;
        v9 = *(_OWORD *)(v21 + v8 + 16);
        v23[0] = *(_OWORD *)(v21 + v8);
        v23[1] = v9;
        v23[2] = *(_OWORD *)(v21 + v8 + 32);
        sub_213B2C1C4();
        if ((sub_213B2C1AC() & 1) != 0)
        {
          sub_213B2C1B8();
          if ((sub_213B2C1A0() & 1) != 0)
          {
            if (qword_254D18370 != -1)
              swift_once();
            v10 = sub_213B2BCF0();
            __swift_project_value_buffer(v10, (uint64_t)qword_254D186C0);
            v11 = sub_213B2BCD8();
            v12 = sub_213B2C170();
            if (os_log_type_enabled(v11, v12))
            {
              v13 = swift_slowAlloc();
              *(_DWORD *)v13 = 134217984;
              *(_QWORD *)(v13 + 4) = v7;
              _os_log_impl(&dword_213AC8000, v11, v12, "Triggering timeRangeHandler with start of range %ld", (uint8_t *)v13, 0xCu);
              MEMORY[0x2199BD0E8](v13, -1, -1);
            }

            a3(v7, 1);
          }
        }
        sub_213B2C134();
        sub_213B2C1C4();
        if ((sub_213B2C1AC() & 1) != 0)
        {
          sub_213B2C134();
          sub_213B2C1B8();
          if ((sub_213B2C1A0() & 1) != 0)
          {
            if (qword_254D18370 != -1)
              swift_once();
            v14 = sub_213B2BCF0();
            __swift_project_value_buffer(v14, (uint64_t)qword_254D186C0);
            v15 = sub_213B2BCD8();
            v16 = sub_213B2C170();
            if (os_log_type_enabled(v15, v16))
            {
              v17 = swift_slowAlloc();
              *(_DWORD *)v17 = 134217984;
              *(_QWORD *)(v17 + 4) = v7;
              _os_log_impl(&dword_213AC8000, v15, v16, "Triggering timeRangeHandler with end of range %ld", (uint8_t *)v17, 0xCu);
              MEMORY[0x2199BD0E8](v17, -1, -1);
            }

            a3(v7, 0);
          }
        }
        ++v7;
        v8 = v22 + 48;
      }
      while (v20 != v7);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
}

uint64_t sub_213AD39D8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_213AD3A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void (**v34)(uint64_t);
  void (*v35)(uint64_t);
  uint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_213B2BBD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v45 - v9;
  v11 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  swift_beginAccess();
  v17 = MEMORY[0x2199BD184](a3 + 16);
  if (!v17)
    return;
  v18 = (_BYTE *)v17;
  v19 = v17 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_configuration;
  sub_213AD52BC(v17 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_configuration, (uint64_t)v16, type metadata accessor for VideoViewConfiguration.VideoSequence);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, &v16[*(int *)(v47 + 64)], v4);
    v20 = objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player], sel_currentItem);
    v48 = v19;
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, sel_asset);
      v46 = v8;
      v23 = v22;

      v24 = v23;
      v8 = v46;
      if (v24)
      {
        objc_opt_self();
        v25 = (void *)swift_dynamicCastObjCClass();
        if (v25)
        {
          v45 = v24;
          v26 = objc_msgSend(v25, sel_URL);
          sub_213B2BBA0();

          LOBYTE(v26) = MEMORY[0x2199BC02C](v8, v10);
          v27 = *(void (**)(char *, uint64_t))(v5 + 8);
          v27(v8, v4);
          if ((v26 & 1) != 0)
          {
            if (qword_254D18370 != -1)
              swift_once();
            v28 = sub_213B2BCF0();
            __swift_project_value_buffer(v28, (uint64_t)qword_254D186C0);
            v29 = sub_213B2BCD8();
            v30 = sub_213B2C170();
            if (os_log_type_enabled(v29, v30))
            {
              v31 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v31 = 0;
              v32 = v30;
              v33 = v31;
              _os_log_impl(&dword_213AC8000, v29, v32, "Started playing feature video", v31, 2u);
              MEMORY[0x2199BD0E8](v33, -1, -1);
            }

            v18[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState] = 2;
            v34 = (void (**)(uint64_t))&v18[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_featureStartedHandler];
            swift_beginAccess();
            v35 = *v34;
            if (!*v34)
            {
              v27(v10, v4);
              swift_endAccess();

              goto LABEL_18;
            }
            swift_endAccess();
            v36 = swift_retain();
            v35(v36);

            sub_213AD529C((uint64_t)v35);
          }
          else
          {

          }
          v27(v10, v4);
LABEL_18:
          v8 = v46;
          goto LABEL_19;
        }

      }
    }
    v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v10, v4);
LABEL_19:
    v27(&v16[*(int *)(v47 + 48)], v4);
    v27(v16, v4);
    v19 = v48;
    goto LABEL_20;
  }
  sub_213AD53FC((uint64_t)v16, type metadata accessor for VideoViewConfiguration.VideoSequence);
LABEL_20:
  v37 = objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player], sel_items);
  sub_213AD63B4(0, &qword_254D18888);
  v38 = sub_213B2BF3C();

  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_213B2C398();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v39 == 1
    && v18[OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState] != 2)
  {
    sub_213AD52BC(v19, (uint64_t)v14, type metadata accessor for VideoViewConfiguration.VideoSequence);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v41 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48)];
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
        sub_213AD2D9C();

        v42 = *(void (**)(char *, uint64_t))(v5 + 8);
        v42(v8, v4);
      }
      else
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
        v41 = &v14[*(int *)(v43 + 48)];
        v44 = &v14[*(int *)(v43 + 64)];
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
        sub_213AD2D9C();

        v42 = *(void (**)(char *, uint64_t))(v5 + 8);
        v42(v8, v4);
        v42(v44, v4);
      }
      v42(v41, v4);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
      sub_213AD2D9C();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  else
  {

  }
}

void sub_213AD3F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void (*v25)(char *, uint64_t);
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  id v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52[24];
  uint64_t v53;

  v1 = sub_213B2BBD0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v48 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v48 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v48 - v12;
  v14 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213B2BA5C();
  if (!v53)
  {
    sub_213AD6270((uint64_t)v52, &qword_254D188A8);
    return;
  }
  sub_213AD63B4(0, &qword_254D18888);
  if ((swift_dynamicCast() & 1) == 0)
    return;
  v49 = v1;
  v50 = v0;
  v17 = v51;
  v18 = objc_msgSend(v51, sel_asset);
  objc_opt_self();
  v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {

    return;
  }
  v20 = (void *)v19;
  v48 = v17;
  sub_213AD52BC(v50 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_configuration, (uint64_t)v16, type metadata accessor for VideoViewConfiguration.VideoSequence);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {

    sub_213AD53FC((uint64_t)v16, type metadata accessor for VideoViewConfiguration.VideoSequence);
    return;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
    v23 = v49;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v13, &v16[*(int *)(v22 + 48)], v49);
    v24 = objc_msgSend(v20, sel_URL);
    sub_213B2BBA0();

    LOBYTE(v24) = MEMORY[0x2199BC02C](v11, v13);
    v25 = *(void (**)(char *, uint64_t))(v2 + 8);
    v25(v11, v23);
    if ((v24 & 1) == 0)
    {
      v25(v13, v23);

      goto LABEL_33;
    }
    v26 = v48;
    if (qword_254D18370 != -1)
      swift_once();
    v27 = sub_213B2BCF0();
    __swift_project_value_buffer(v27, (uint64_t)qword_254D186C0);
    v28 = sub_213B2BCD8();
    v29 = sub_213B2C170();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_213AC8000, v28, v29, "Finished playing engage video", v30, 2u);
      MEMORY[0x2199BD0E8](v30, -1, -1);
    }

    v31 = v13;
    v23 = v49;
  }
  else
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    v33 = &v16[*(int *)(v32 + 64)];
    v34 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v23 = v49;
    v34(v8, &v16[*(int *)(v32 + 48)], v49);
    v34(v5, v33, v23);
    v35 = objc_msgSend(v20, sel_URL);
    sub_213B2BBA0();

    LOBYTE(v35) = MEMORY[0x2199BC02C](v11, v8);
    v25 = *(void (**)(char *, uint64_t))(v2 + 8);
    v25(v11, v23);
    if ((v35 & 1) == 0)
    {
      v40 = objc_msgSend(v20, sel_URL);
      sub_213B2BBA0();

      LOBYTE(v40) = MEMORY[0x2199BC02C](v11, v5);
      v25(v11, v23);
      if ((v40 & 1) != 0)
      {
        if (qword_254D18370 != -1)
          swift_once();
        v41 = sub_213B2BCF0();
        __swift_project_value_buffer(v41, (uint64_t)qword_254D186C0);
        v42 = sub_213B2BCD8();
        v43 = sub_213B2C170();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v44 = 0;
          _os_log_impl(&dword_213AC8000, v42, v43, "Finished playing feature video", v44, 2u);
          MEMORY[0x2199BD0E8](v44, -1, -1);
        }

        v45 = *(void (**)(uint64_t))(v50
                                             + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_featureCompletedHandler);
        if (v45)
        {
          v46 = swift_retain();
          v45(v46);
          sub_213AD529C((uint64_t)v45);
        }
        sub_213ACFC3C();

        v47 = v5;
        v23 = v49;
      }
      else
      {

        v47 = v5;
      }
      v25(v47, v23);
      v25(v8, v23);
      goto LABEL_33;
    }
    if (qword_254D18370 != -1)
      swift_once();
    v36 = sub_213B2BCF0();
    __swift_project_value_buffer(v36, (uint64_t)qword_254D186C0);
    v37 = sub_213B2BCD8();
    v38 = sub_213B2C170();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_213AC8000, v37, v38, "Finished playing engage video", v39, 2u);
      MEMORY[0x2199BD0E8](v39, -1, -1);
    }

    v23 = v49;
    v25(v5, v49);
    v31 = v8;
  }
  v25(v31, v23);
  *(_BYTE *)(v50 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState) = 1;
LABEL_33:
  v25(v16, v23);
}

void sub_213AD468C(uint64_t a1, id a2)
{
  uint64_t v4;
  __IOSurface *v5;
  __IOSurface *v6;
  __IOSurface *v7;
  void *v8;
  void *v9;
  id v10;

  v4 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentIOSurface;
  v5 = *(__IOSurface **)(a1
                       + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentIOSurface);
  if (v5)
    IOSurfaceDecrementUseCount(v5);
  v6 = (__IOSurface *)objc_msgSend(a2, sel_iosurface);
  if (v6)
  {
    v7 = v6;
    IOSurfaceIncrementUseCount(v6);
    v8 = *(void **)(a1 + v4);
    *(_QWORD *)(a1 + v4) = v7;

  }
  v9 = *(void **)(a1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_videoMaterial);
  if (v9)
  {
    v10 = objc_msgSend(v9, sel_diffuse);
    objc_msgSend(v10, sel_setContents_, a2);

  }
}

uint64_t sub_213AD47DC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VideoViewConfiguration(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SceneDriver.CurrentPlaybackState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneDriver.CurrentPlaybackState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213AD49A4 + 4 * byte_213B2E315[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213AD49D8 + 4 * byte_213B2E310[v4]))();
}

uint64_t sub_213AD49D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AD49E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213AD49E8);
  return result;
}

uint64_t sub_213AD49F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213AD49FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213AD4A00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AD4A08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AD4A14(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_213AD4A1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SceneDriver.CurrentPlaybackState()
{
  return &type metadata for SceneDriver.CurrentPlaybackState;
}

unint64_t sub_213AD4A38()
{
  unint64_t result;

  result = qword_254D18878;
  if (!qword_254D18878)
  {
    result = MEMORY[0x2199BD010](&unk_213B2E458, &type metadata for SceneDriver.CurrentPlaybackState);
    atomic_store(result, (unint64_t *)&qword_254D18878);
  }
  return result;
}

uint64_t sub_213AD4A7C()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_213AD4A88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_213B2BCFC();
  *a1 = result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_213AD4B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_213B2C518();
  sub_213B2BE88();
  v4 = sub_213B2C530();
  return sub_213AD4C3C(a1, a2, v4);
}

unint64_t sub_213AD4B80(uint64_t a1)
{
  uint64_t v2;

  sub_213B2BE1C();
  sub_213B2C518();
  sub_213B2BE88();
  v2 = sub_213B2C530();
  swift_bridgeObjectRelease();
  return sub_213AD4D1C(a1, v2);
}

unint64_t sub_213AD4C0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213B2C290();
  return sub_213AD4E90(a1, v2);
}

unint64_t sub_213AD4C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_213B2C47C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_213B2C47C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_213AD4D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_213B2BE1C();
    v8 = v7;
    if (v6 == sub_213B2BE1C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_213B2BE1C();
          v15 = v14;
          if (v13 == sub_213B2BE1C() && v15 == v16)
            break;
          v18 = sub_213B2C47C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_213AD4E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_213AD6408(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2199BC734](v9, a1);
      sub_213AD6444((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_213AD4F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v3 = v2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_featureHandler);
  swift_beginAccess();
  v7 = *v6;
  *v6 = a1;
  v6[1] = a2;
  sub_213AD52AC(a1);
  result = sub_213AD529C(v7);
  v9 = *v6;
  if (*v6)
  {
    v10 = v6[1];
    v11 = v3 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_configuration;
    swift_beginAccess();
    result = type metadata accessor for VideoViewConfiguration(0);
    if (*(_QWORD *)(v11 + *(int *)(result + 44)))
    {
      swift_retain();
      v12 = sub_213B27EA8();
      v13 = *(void **)(v3 + OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_sceneDriver);
      if (v13)
      {
        v14 = v13;
        sub_213ACF31C(v12, v9, v10);
        sub_213AD529C(v9);

      }
      else
      {
        sub_213AD529C(v9);
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_213AD5078()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18890);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213B2E300;
  *(_QWORD *)(inited + 32) = sub_213B2BE1C();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 80) = sub_213B2BE1C();
  *(_QWORD *)(inited + 88) = v2;
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE44F0];
  *(_DWORD *)(inited + 96) = 1111970369;
  sub_213AD1128(inited);
  v3 = objc_allocWithZone(MEMORY[0x24BDB2640]);
  v4 = (void *)sub_213B2BDA4();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithOutputSettings_, v4);

  return v5;
}

_OWORD *sub_213AD5184(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_213AD5194()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_213AD51B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_213AD51EC()
{
  uint64_t v0;

  sub_213AD3614(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_213AD5210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_213AD529C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_213AD52AC(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_213AD52BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_213AD5300(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_213AD5344(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a4 != (void *)1)
  {
    sub_213AD5374(a1, a2);

  }
}

uint64_t sub_213AD5374(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_213AD53B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoViewConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_213AD53FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

CVMetalTextureRef sub_213AD5438(__CVBuffer *a1, __CVMetalTextureCache *a2)
{
  size_t Width;
  size_t Height;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  CVMetalTextureRef textureOut[2];

  textureOut[1] = *(CVMetalTextureRef *)MEMORY[0x24BDAC8D0];
  textureOut[0] = 0;
  Width = CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(a1);
  if (CVMetalTextureCacheCreateTextureFromImage(0, a2, a1, 0, MTLPixelFormatBGRA8Unorm_sRGB, Width, Height, 0, textureOut))
  {
    if (qword_254D18370 != -1)
      swift_once();
    v6 = sub_213B2BCF0();
    __swift_project_value_buffer(v6, (uint64_t)qword_254D186C0);
    v7 = sub_213B2BCD8();
    v8 = sub_213B2C158();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14 = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = sub_213B2BE64();
      sub_213AE1780(v11, v12, &v14);
      sub_213B2C254();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213AC8000, v7, v8, "Failed to create metal texture: %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v10, -1, -1);
      MEMORY[0x2199BD0E8](v9, -1, -1);
    }

  }
  return textureOut[0];
}

void sub_213AD5630(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  CVReturn v20;
  void *value;
  void *v22;
  id v23;
  CMTimeValue v24;
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  id v28;
  unint64_t v29;
  NSObject *v30;
  NSObject *v31;
  void *v32;
  void *v33;
  CMTimeValue v34;
  CMTimeEpoch v35;
  __CVBuffer *v36;
  __CVBuffer *v37;
  __CVBuffer *v38;
  __CVBuffer *v39;
  id v40;
  os_unfair_lock_s *v41;
  void *v42;
  CMTimeValue v43;
  CMTimeEpoch v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  CMTimeValue v52;
  NSObject *v53;
  CMTimeValue v54;
  CMTimeEpoch v55;
  CMTimeEpoch v56;
  CMTimeValue v57;
  CMTimeEpoch v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  _QWORD *v68;
  NSObject *v69;
  os_log_type_t type;
  __CVBuffer *v71;
  CMTimeScale v72;
  NSObject *v73;
  NSObject *v74;
  os_log_t oslog;
  NSObject *osloga;
  CMTime rhs;
  CMTime v78;
  CMTime lhs;
  CMTime cacheOut;
  uint64_t v81;

  v2 = v1;
  v81 = *MEMORY[0x24BDAC8D0];
  v4 = objc_msgSend(a1, sel_device);
  if (!v4)
  {
    if (qword_254D18370 != -1)
      swift_once();
    v10 = sub_213B2BCF0();
    __swift_project_value_buffer(v10, (uint64_t)qword_254D186C0);
    osloga = sub_213B2BCD8();
    v11 = sub_213B2C158();
    if (os_log_type_enabled(osloga, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_213AC8000, osloga, v11, "No rendering device", v12, 2u);
      MEMORY[0x2199BD0E8](v12, -1, -1);
    }
    goto LABEL_14;
  }
  v5 = v4;
  v6 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_player), sel_currentItem);
  if (!v6)
  {
    if (qword_254D18370 != -1)
      swift_once();
    v13 = sub_213B2BCF0();
    __swift_project_value_buffer(v13, (uint64_t)qword_254D186C0);
    osloga = sub_213B2BCD8();
    v14 = sub_213B2C158();
    if (os_log_type_enabled(osloga, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_213AC8000, osloga, v14, "No current AVPlayer item", v15, 2u);
      MEMORY[0x2199BD0E8](v15, -1, -1);
    }
    swift_unknownObjectRelease();
LABEL_14:

    return;
  }
  v7 = v6;
  v8 = OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_textureCache;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_textureCache);
  if (v9)
  {
    oslog = *(os_log_t *)(v1 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_textureCache);
  }
  else
  {
    if (qword_254D18370 != -1)
      swift_once();
    v16 = sub_213B2BCF0();
    __swift_project_value_buffer(v16, (uint64_t)qword_254D186C0);
    v17 = sub_213B2BCD8();
    v18 = sub_213B2C170();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_213AC8000, v17, v18, "Creating texture cache", v19, 2u);
      MEMORY[0x2199BD0E8](v19, -1, -1);
    }

    cacheOut.value = 0;
    v20 = CVMetalTextureCacheCreate(0, 0, v5, 0, (CVMetalTextureCacheRef *)&cacheOut);
    if (v20 || (value = (void *)cacheOut.value) == 0)
    {
      v45 = sub_213B2BCD8();
      v46 = sub_213B2C158();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v47 = 67109120;
        LODWORD(lhs.value) = v20;
        sub_213B2C254();
        _os_log_impl(&dword_213AC8000, v45, v46, "VideoRendering SKIP -- Failed to create CVMetalTextureCacheCreate.result != success {status: %d}", v47, 8u);
        MEMORY[0x2199BD0E8](v47, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_unknownObjectRelease();
        v7 = v45;
      }

      return;
    }
    v22 = *(void **)(v1 + v8);
    *(_QWORD *)(v2 + v8) = cacheOut.value;
    oslog = value;

    v9 = 0;
  }
  v23 = v9;
  -[NSObject currentTime](v7, sel_currentTime);
  v24 = cacheOut.value;
  timescale = cacheOut.timescale;
  flags = cacheOut.flags;
  epoch = cacheOut.epoch;
  v28 = -[NSObject outputs](v7, sel_outputs);
  sub_213AD63B4(0, &qword_254D188C0);
  v29 = sub_213B2BF3C();

  if (!(v29 >> 62))
  {
    if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_24;
LABEL_58:
    swift_bridgeObjectRelease();
LABEL_59:
    if (qword_254D18370 == -1)
    {
LABEL_60:
      v64 = sub_213B2BCF0();
      __swift_project_value_buffer(v64, (uint64_t)qword_254D186C0);
      v65 = v7;
      v49 = sub_213B2BCD8();
      v66 = sub_213B2C158();
      if (os_log_type_enabled(v49, v66))
      {
        v67 = (uint8_t *)swift_slowAlloc();
        v68 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v67 = 138412290;
        cacheOut.value = (CMTimeValue)v65;
        v69 = v65;
        sub_213B2C254();
        *v68 = v7;

        _os_log_impl(&dword_213AC8000, v49, v66, "No output found for player item: %@", v67, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v68, -1, -1);
        MEMORY[0x2199BD0E8](v67, -1, -1);
        swift_unknownObjectRelease();

        return;
      }

      swift_unknownObjectRelease();
      goto LABEL_63;
    }
LABEL_66:
    swift_once();
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  v63 = sub_213B2C398();
  swift_bridgeObjectRelease();
  if (!v63)
    goto LABEL_58;
LABEL_24:
  if ((v29 & 0xC000000000000001) != 0)
  {
    v30 = MEMORY[0x2199BC7AC](0, v29);
  }
  else
  {
    if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_66;
    }
    v30 = *(id *)(v29 + 32);
  }
  v31 = v30;
  swift_bridgeObjectRelease();
  objc_opt_self();
  v32 = (void *)swift_dynamicCastObjCClass();
  if (!v32)
  {

    goto LABEL_59;
  }
  v33 = v32;
  cacheOut.value = v24;
  *(_QWORD *)&cacheOut.timescale = __PAIR64__(flags, timescale);
  cacheOut.epoch = epoch;
  if (!objc_msgSend(v32, sel_hasNewPixelBufferForItemTime_, &cacheOut))
  {

    swift_unknownObjectRelease();
LABEL_39:

    return;
  }
  v34 = *MEMORY[0x24BDC0D40];
  v35 = *(_QWORD *)(MEMORY[0x24BDC0D40] + 16);
  lhs.epoch = epoch;
  cacheOut.value = v34;
  *(_QWORD *)&cacheOut.timescale = *(_QWORD *)(MEMORY[0x24BDC0D40] + 8);
  cacheOut.epoch = v35;
  lhs.value = v24;
  lhs.timescale = timescale;
  lhs.flags = flags;
  v36 = (__CVBuffer *)objc_msgSend(v33, sel_copyPixelBufferForItemTime_itemTimeForDisplay_, &lhs, &cacheOut);
  if (!v36)
  {
    v74 = v31;
    if (qword_254D18370 != -1)
      swift_once();
    v48 = sub_213B2BCF0();
    __swift_project_value_buffer(v48, (uint64_t)qword_254D186C0);
    v49 = sub_213B2BCD8();
    v50 = sub_213B2C158();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v51 = 134217984;
      sub_213B2C1DC();
      lhs.value = v52;
      sub_213B2C254();
      _os_log_impl(&dword_213AC8000, v49, v50, "Failed to retrieve pixel buffer at %f", v51, 0xCu);
      MEMORY[0x2199BD0E8](v51, -1, -1);
      swift_unknownObjectRelease();

      v53 = v49;
      v49 = oslog;
    }
    else
    {

      swift_unknownObjectRelease();
      v7 = v74;
      v53 = oslog;
    }

LABEL_63:
    return;
  }
  v72 = timescale;
  v37 = v36;
  v38 = sub_213AD5438(v36, (__CVMetalTextureCache *)oslog);
  if (!v38)
  {

    swift_unknownObjectRelease();
    goto LABEL_39;
  }
  v71 = v37;
  v39 = v38;
  v40 = CVMetalTextureGetTexture(v38);
  if (!v40)
  {

    swift_unknownObjectRelease();
    goto LABEL_39;
  }
  v73 = v31;
  v41 = (os_unfair_lock_s *)(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_lock)
                           + 16);
  v42 = v40;
  os_unfair_lock_lock(v41);
  sub_213AD468C(v2, v42);
  os_unfair_lock_unlock(v41);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState))
  {
    if (*(_BYTE *)(v2
                  + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_currentPlaybackState) == 1)
    {
      v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_engageDuration);
      v44 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_engageDuration
                      + 16);
      lhs = cacheOut;
      rhs.value = v43;
      *(_QWORD *)&rhs.timescale = *(_QWORD *)(v2
                                            + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_engageDuration
                                            + 8);
      rhs.epoch = v44;
    }
    else
    {
      v54 = cacheOut.value;
      v55 = cacheOut.epoch;
      v56 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_engageDuration
                      + 16);
      v57 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_loopDuration);
      v58 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_loopDuration
                      + 16);
      lhs.value = *(_QWORD *)(v2
                            + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_engageDuration);
      *(_QWORD *)&lhs.timescale = *(_QWORD *)(v2
                                            + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_engageDuration
                                            + 8);
      lhs.epoch = v56;
      rhs.value = v57;
      *(_QWORD *)&rhs.timescale = *(_QWORD *)(v2
                                            + OBJC_IVAR____TtC10ProductKitP33_D660C6A3879B3DCAB1A93C6FE6EA6B5B11SceneDriver_loopDuration
                                            + 8);
      rhs.epoch = v58;
      v59 = *(_QWORD *)&cacheOut.timescale;
      CMTimeAdd(&v78, &lhs, &rhs);
      lhs.value = v54;
      *(_QWORD *)&lhs.timescale = v59;
      lhs.epoch = v55;
      rhs = v78;
    }
    CMTimeAdd(&v78, &lhs, &rhs);
    cacheOut = v78;
  }
  if (qword_254D18370 != -1)
    swift_once();
  v60 = sub_213B2BCF0();
  __swift_project_value_buffer(v60, (uint64_t)qword_254D186C0);
  v61 = sub_213B2BCD8();
  type = sub_213B2C14C();
  if (os_log_type_enabled(v61, type))
  {
    v62 = swift_slowAlloc();
    *(_DWORD *)v62 = 134218496;
    lhs.value = CACurrentMediaTime();
    sub_213B2C254();
    *(_WORD *)(v62 + 12) = 2048;
    lhs.value = v24;
    lhs.timescale = v72;
    lhs.flags = flags;
    lhs.epoch = epoch;
    lhs.value = CMTimeGetSeconds(&lhs);
    sub_213B2C254();
    *(_WORD *)(v62 + 22) = 2048;
    swift_beginAccess();
    lhs = cacheOut;
    lhs.value = CMTimeGetSeconds(&lhs);
    sub_213B2C254();
    _os_log_impl(&dword_213AC8000, v61, type, "SceneKit renderer media time: CACurrentMediaTime: %f, cmTimeForPixelBuffer: %f, itemTimeForDisplay: %f", (uint8_t *)v62, 0x20u);
    MEMORY[0x2199BD0E8](v62, -1, -1);
  }

  swift_beginAccess();
  rhs = cacheOut;
  objc_msgSend(a1, sel_setSceneTime_, CMTimeGetSeconds(&rhs));

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

}

void sub_213AD6230()
{
  uint64_t v0;

  sub_213AD097C(v0, &OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_startedHandler);
}

void sub_213AD6250()
{
  uint64_t v0;

  sub_213AD097C(v0, &OBJC_IVAR____TtC10ProductKit21PersonalizedVideoView_completedHandler);
}

uint64_t sub_213AD6270(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_213AD62AC()
{
  unint64_t result;

  result = qword_254D188F0;
  if (!qword_254D188F0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for ProductError, &type metadata for ProductError);
    atomic_store(result, (unint64_t *)&qword_254D188F0);
  }
  return result;
}

uint64_t sub_213AD62F0()
{
  return swift_deallocObject();
}

void sub_213AD6300(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_213AD2C48(a1, a2, *(id **)(v2 + 16), *(id **)(v2 + 24));
}

uint64_t sub_213AD6308()
{
  return swift_deallocObject();
}

uint64_t sub_213AD6318()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

char *keypath_get_selector_currentItem()
{
  return sel_currentItem;
}

id sub_213AD6344@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_currentItem);
  *a2 = result;
  return result;
}

void sub_213AD637C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_213AD3A04(a1, a2, v2);
}

id sub_213AD6384(id result, unint64_t a2, uint64_t a3, void *a4)
{
  if (a4 != (void *)1)
  {
    sub_213AD5300((uint64_t)result, a2);
    return a4;
  }
  return result;
}

uint64_t sub_213AD63B4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_213AD63EC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_213AD6408(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_213AD6444(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_213AD6478(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_213AD64BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_213AD6518()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213AD6558()
{
  MEMORY[0x2199BC7C4]();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState.LockedBuffer);
}

uint64_t sub_213AD6584()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for ManagedCriticalState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState);
}

void sub_213AD6598(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = a3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a3 + 16);
  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_213AD6624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ManagedCriticalState.LockedBuffer(0, a2, a3, a4);
  return sub_213B2C320();
}

uint64_t sub_213AD6678@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2, v3);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2199BCF8C](a1, v6, a5);
}

uint64_t sub_213AD66FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D18AA0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D18AA0);
  if (qword_254D18488 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22EB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213AD678C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C18);
  v7 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C20);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 44) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_BYTE *)(v8 + 24) = 2;
  *(_QWORD *)(v8 + 32) = 0;
  *(_BYTE *)(v8 + 40) = 0;
  *(_QWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v3 + 40) = v7;
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 1;
  *(double *)(v3 + 16) = a3;
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  return v3;
}

uint64_t sub_213AD683C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[14] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  v1[15] = swift_task_alloc();
  sub_213B2C02C();
  v1[16] = sub_213B2C020();
  v1[17] = sub_213B2BFE4();
  v1[18] = v2;
  return swift_task_switch();
}

uint64_t sub_213AD68CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (_QWORD *)v0[14];
  v2 = v0[15];
  v4 = v1[3];
  v3 = v1[4];
  v5 = v1[5];
  v0[19] = v5;
  v6 = v1[2];
  v7 = sub_213B2C050();
  v0[20] = v7;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v0[21] = v8;
  v8(v2, 1, 1, v7);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v4;
  v9[5] = v3;
  v9[6] = v5;
  swift_retain();
  swift_retain();
  sub_213AD6FA4(v2, (uint64_t)&unk_254D18B90, (uint64_t)v9);
  swift_release();
  sub_213AD7E88(v2);
  v8(v2, 1, 1, v7);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v6;
  v10[5] = v5;
  swift_retain();
  sub_213AD72D8(v2, (uint64_t)&unk_254D18BA0, (uint64_t)v10);
  swift_release();
  sub_213AD7E88(v2);
  v11 = *(_QWORD *)(v5 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 44));
  v12 = *(_QWORD *)(v11 + 32);
  v0[22] = v12;
  *(_QWORD *)(v11 + 32) = v12 + 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 44));
  return swift_task_switch();
}

uint64_t sub_213AD6A38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[22];
  v2 = v0[19];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_213AD6AA0;
  v3 = swift_continuation_init();
  sub_213AD7F5C(v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_213AD6AA0()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;

  v1 = *(_OWORD **)v0;
  v2 = *(_OWORD *)(*(_QWORD *)v0 + 96);
  *(_OWORD *)((char *)v1 + 184) = v1[5];
  *(_OWORD *)((char *)v1 + 200) = v2;
  return swift_task_switch();
}

uint64_t sub_213AD6AF0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = *(_QWORD *)(v0 + 208);
  swift_release();
  if (v1 == 2)
  {
    if (qword_254D18378 != -1)
      swift_once();
    v12 = sub_213B2BCF0();
    __swift_project_value_buffer(v12, (uint64_t)qword_254D18AA0);
    v13 = sub_213B2BCD8();
    v14 = sub_213B2C170();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_213AC8000, v13, v14, "Timed out waiting for personalization download, completing in background", v15, 2u);
      MEMORY[0x2199BD0E8](v15, -1, -1);
    }
    v16 = *(_QWORD *)(v0 + 112);

    if (*(_BYTE *)(v16 + 48) == 1)
      return sub_213B2C38C();
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 168);
    v20 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 120);
    sub_213B2C038();
    v19(v21, 0, 1, v18);
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = 0;
    v23[3] = 0;
    v23[4] = v20;
    v23[5] = v22;
    swift_retain();
    swift_retain();
    sub_213AD6FA4(v21, (uint64_t)&unk_254D18BB0, (uint64_t)v23);
    swift_release();
    sub_213AD7E88(v21);
    v11 = 2;
    goto LABEL_11;
  }
  if (v1 != 3)
  {
    v3 = *(_QWORD *)(v0 + 200);
    v2 = *(void **)(v0 + 208);
    v5 = *(void **)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(_QWORD *)(v6 + 72);
    v10 = *(_QWORD *)(v6 + 80);
    v9 = *(void **)(v6 + 88);
    *(_QWORD *)(v6 + 64) = v5;
    *(_QWORD *)(v6 + 72) = v4;
    *(_QWORD *)(v6 + 80) = v3;
    *(_QWORD *)(v6 + 88) = v2;
    sub_213AD8B08(v5, v4, v3, v2);
    sub_213AD8B18(v5, v4, v3, v2);
    sub_213AD5344(v7, v8, v10, v9);
    *(_BYTE *)(v6 + 48) = 1;
    sub_213AD8328();
    sub_213AD7448();
    sub_213AD8128((uint64_t)v5, v4, v3, v2);
    v11 = *(_QWORD *)(v0 + 208);
LABEL_11:
    sub_213AD8128(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), (void *)v11);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AD6D9C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  *(_QWORD *)(v6 + 48) = a6;
  v9 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 56) = v7;
  *v7 = v6;
  v7[1] = sub_213AD6E04;
  return v9(v6 + 16);
}

uint64_t sub_213AD6E04()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AD6E58()
{
  _QWORD *v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = (void *)v0[2];
  v1 = v0[3];
  v0[8] = v2;
  v0[9] = v1;
  v3 = v0[4];
  v4 = (void *)v0[5];
  v0[10] = v3;
  v0[11] = v4;
  sub_213AD6384(v2, v1, v3, v4);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D18BF0 + dword_254D18BF0);
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = v5;
  *v5 = v0;
  v5[1] = sub_213AD6EF8;
  return v7((uint64_t)v2, v1, v3, (uint64_t)v4);
}

uint64_t sub_213AD6EF8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(void **)(*(_QWORD *)v0 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();
  sub_213AD5344(v4, v3, v2, v1);
  return swift_task_switch();
}

uint64_t sub_213AD6F70()
{
  uint64_t v0;

  sub_213AD5344(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AD6FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213AD9F58(a1, (uint64_t)v8);
  v9 = sub_213B2C050();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_213AD7E88((uint64_t)v8);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_213B2BFE4();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_213B2C044();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_213AD712C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a5;
  *(double *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_213AD7148()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v2;
    *v2 = v0;
    v2[1] = sub_213AD71E4;
    sub_213B2C068();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_213AD71E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  char *v6;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v6 = (char *)&dword_254D18BF0 + dword_254D18BF0;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v5;
  *v5 = v3;
  v5[1] = sub_213AD728C;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))v6)(0, 0, 0, 2);
}

uint64_t sub_213AD728C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213AD72D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213AD9F58(a1, (uint64_t)v7);
  v8 = sub_213B2C050();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_213AD7E88((uint64_t)v7);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  else
  {
    sub_213B2C044();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v10 = sub_213B2BFE4();
  v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_213AD7448()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v1 = (void *)v0[11];
  v2 = v0 + 7;
  if (v1 == (void *)1)
  {
    swift_beginAccess();
  }
  else
  {
    v3 = (void *)v0[8];
    v4 = v0[9];
    v5 = v0[10];
    swift_beginAccess();
    v6 = *(_QWORD *)(*v2 + 16);
    if (v6)
    {
      v7 = *v2 + 32;
      sub_213AD6384(v3, v4, v5, v1);
      swift_bridgeObjectRetain();
      do
      {
        sub_213AD8B28(v7, (uint64_t)v12);
        v8 = v13;
        v9 = v14;
        __swift_project_boxed_opaque_existential_0(v12, v13);
        v11[0] = v3;
        v11[1] = v4;
        v11[2] = v5;
        v11[3] = v1;
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v9 + 8))(v11, v8, v9);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
        v7 += 40;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      sub_213AD5344((uint64_t)v3, v4, v5, v1);
      v2 = v0 + 7;
    }
  }
  *v2 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_213AD7584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[14] = a4;
  v5[15] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213AD75E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 44));
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 136) = v2;
  *(_QWORD *)(v1 + 32) = v2 + 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 44));
  return swift_task_switch();
}

uint64_t sub_213AD7640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[17];
  v2 = v0[14];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_213AD76A8;
  v3 = swift_continuation_init();
  sub_213AD7F5C(v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_213AD76A8()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;

  v1 = *(_OWORD **)v0;
  v2 = *(_OWORD *)(*(_QWORD *)v0 + 96);
  v1[9] = v1[5];
  v1[10] = v2;
  return swift_task_switch();
}

uint64_t sub_213AD76F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(void **)(v0 + 168);
  v4 = *(void **)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = sub_213B2C050();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_213B2C02C();
  sub_213AD8B08(v4, v3, v2, v1);
  swift_retain();
  v8 = sub_213B2C020();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v4;
  v9[5] = v3;
  v9[6] = v2;
  v9[7] = v1;
  v9[8] = v6;
  sub_213AE4204(v5, (uint64_t)&unk_254D18BD0, (uint64_t)v9);
  sub_213AD8128((uint64_t)v4, v3, v2, v1);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AD7800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  sub_213B2C02C();
  v8[7] = sub_213B2C020();
  sub_213B2BFE4();
  return swift_task_switch();
}

uint64_t sub_213AD7874()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  if ((v1 & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    v2 = *(void **)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(void **)(v0 + 16);
    v8 = *(_QWORD *)(v3 + 64);
    v7 = *(_QWORD *)(v3 + 72);
    v9 = *(_QWORD *)(v3 + 80);
    v10 = *(void **)(v3 + 88);
    *(_QWORD *)(v3 + 64) = v6;
    *(_QWORD *)(v3 + 72) = v4;
    *(_QWORD *)(v3 + 80) = v5;
    *(_QWORD *)(v3 + 88) = v2;
    sub_213AD8B18(v6, v4, v5, v2);
    sub_213AD5344(v8, v7, v9, v10);
    *(_BYTE *)(v3 + 48) = 1;
  }
  sub_213AD7448();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AD7908()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_213AD5344(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersonalizationDownloadTaskManager()
{
  return objc_opt_self();
}

void destroy for PersonalizationDownloadTaskManager.ChannelResult(uint64_t *a1)
{
  uint64_t v1;
  int v2;
  int v3;
  id v4;

  LODWORD(v1) = -1;
  if ((unint64_t)a1[3] < 0xFFFFFFFF)
    v1 = a1[3];
  v2 = v1 - 1;
  if (v2 < 0)
    v3 = -1;
  else
    v3 = v2;
  if ((v3 + 1) <= 1 && v2 < 0)
  {
    v4 = (id)a1[3];
    sub_213AD5374(*a1, a1[1]);

  }
}

uint64_t *initializeWithCopy for PersonalizationDownloadTaskManager.ChannelResult(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  id v11;

  v4 = (void *)a2[3];
  LODWORD(v5) = -1;
  if ((unint64_t)v4 < 0xFFFFFFFF)
    v5 = a2[3];
  v6 = v5 - 1;
  if (v6 < 0)
    v7 = -1;
  else
    v7 = v6;
  if ((v7 + 1) <= 1 && v6 < 0)
  {
    v9 = *a2;
    v10 = a2[1];
    sub_213AD5300(*a2, v10);
    *a1 = v9;
    a1[1] = v10;
    a1[2] = a2[2];
    a1[3] = (uint64_t)v4;
    v11 = v4;
  }
  else
  {
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
  }
  return a1;
}

uint64_t assignWithCopy for PersonalizationDownloadTaskManager.ChannelResult(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  __int128 v15;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  id v23;

  v4 = *(_QWORD *)(a1 + 24);
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  v6 = v4 - 1;
  if (v6 < 0)
    v6 = -1;
  v7 = v6 + 1;
  if ((unint64_t)a2[3] < 0xFFFFFFFF)
    v5 = a2[3];
  v8 = v5 - 1;
  if ((int)v5 - 1 < 0)
    v9 = -1;
  else
    v9 = v5 - 1;
  v10 = v9 + 1;
  if (v7 > 1)
  {
    if (v10 <= 1 && v8 < 0)
      goto LABEL_17;
LABEL_22:
    v15 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    return a1;
  }
  if (v10 > 1)
  {
    if (v7)
      goto LABEL_22;
LABEL_21:
    sub_213AD5374(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));

    goto LABEL_22;
  }
  if (!v7)
  {
    if (!v10)
    {
      v17 = *a2;
      v18 = a2[1];
      sub_213AD5300(*a2, v18);
      v19 = *(_QWORD *)a1;
      v20 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v17;
      *(_QWORD *)(a1 + 8) = v18;
      sub_213AD5374(v19, v20);
      *(_QWORD *)(a1 + 16) = a2[2];
      v21 = *(void **)(a1 + 24);
      v22 = (void *)a2[3];
      *(_QWORD *)(a1 + 24) = v22;
      v23 = v22;

      return a1;
    }
    goto LABEL_21;
  }
  if (v10)
    goto LABEL_22;
LABEL_17:
  v11 = *a2;
  v12 = a2[1];
  sub_213AD5300(*a2, v12);
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = a2[2];
  v13 = (void *)a2[3];
  *(_QWORD *)(a1 + 24) = v13;
  v14 = v13;
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PersonalizationDownloadTaskManager.ChannelResult(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;

  v4 = *(void **)(a1 + 24);
  LODWORD(v5) = -1;
  if ((unint64_t)v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = *(_QWORD *)(a1 + 24);
  v7 = v6 - 1;
  if (v7 < 0)
    v7 = -1;
  v8 = v7 + 1;
  v9 = *(_QWORD *)(a2 + 24);
  if (v9 < 0xFFFFFFFF)
    v5 = *(_QWORD *)(a2 + 24);
  v10 = v5 - 1;
  if (v10 < 0)
    v10 = -1;
  if (v8 > 1)
    goto LABEL_18;
  v11 = v10 + 1;
  if (v11 > 1)
  {
    if (!v8)
    {
      v12 = *(_QWORD *)a1;
      v13 = *(_QWORD *)(a1 + 8);
      goto LABEL_17;
    }
LABEL_18:
    v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    return a1;
  }
  if (v8)
    goto LABEL_18;
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
LABEL_17:
    sub_213AD5374(v12, v13);

    goto LABEL_18;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_213AD5374(v12, v13);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v9;

  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationDownloadTaskManager.ChannelResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) < 2)
    v4 = 0;
  if (v4 >= 2)
    return (v4 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PersonalizationDownloadTaskManager.ChannelResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 2;
  }
  return result;
}

uint64_t sub_213AD7CFC(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  if ((v2 + 1) >= 2)
    return v2;
  else
    return 0;
}

double sub_213AD7D28(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0x7FFFFFFD)
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_DWORD *)a1 = a2 - 2147483646;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationDownloadTaskManager.ChannelResult()
{
  return &type metadata for PersonalizationDownloadTaskManager.ChannelResult;
}

uint64_t sub_213AD7D74()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213AD7DA8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD *);

  v2 = *(int **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_213AD7E40;
  v4[6] = v3;
  v7 = (uint64_t (*)(_QWORD *))((char *)v2 + *v2);
  v5 = (_QWORD *)swift_task_alloc();
  v4[7] = v5;
  *v5 = v4;
  v5[1] = sub_213AD6E04;
  return v7(v4 + 2);
}

uint64_t sub_213AD7E40()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213AD7E88(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213AD7EC8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213AD7EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_213ADA044;
  v4[3] = v3;
  v4[2] = v2;
  return swift_task_switch();
}

void sub_213AD7F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v5;
  uint64_t *v6;
  os_unfair_lock_s *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _QWORD v13[5];
  __int16 v14;

  v14 = 0;
  v5 = *(os_unfair_lock_s **)(a2 + 16);
  v6 = (uint64_t *)&v5[4];
  v7 = v5 + 11;
  os_unfair_lock_lock(v5 + 11);
  v8 = sub_213AD8148(v6, &v14, a3, a1, (_BYTE *)&v14 + 1);
  v10 = v9;
  v12 = v11;
  os_unfair_lock_unlock(v7);
  if (!v8)
  {
LABEL_4:
    if ((v14 & 0x100) != 0)
      goto LABEL_8;
LABEL_7:
    if (v14 != 1)
      return;
    goto LABEL_8;
  }
  if ((v12 & 1) == 0)
  {
    v13[0] = v10;
    sub_213AD64BC((uint64_t)v13, *(_QWORD *)(v8[8] + 40), &qword_254D18BB8);
    swift_continuation_throwingResume();
    goto LABEL_4;
  }
  swift_allocError();
  swift_continuation_throwingResumeWithError();
  if ((v14 & 0x100) == 0)
    goto LABEL_7;
LABEL_8:
  memset(v13, 0, 24);
  v13[3] = 3;
  sub_213AD64BC((uint64_t)v13, *(_QWORD *)(*(_QWORD *)(a1 + 64) + 40), &qword_254D18BC0);
  swift_continuation_resume();
}

uint64_t sub_213AD807C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213AD80B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_213ADA044;
  return sub_213AD7584(a1, v4, v5, v7, v6);
}

void sub_213AD8128(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a4 != (void *)3)
    sub_213AD8138(a1, a2, a3, a4);
}

void sub_213AD8138(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a4 != (void *)2)
    sub_213AD5344(a1, a2, a3, a4);
}

uint64_t *sub_213AD8148(uint64_t *result, _BYTE *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t inited;
  uint64_t v19;

  if (*((_BYTE *)result + 24) == 1)
  {
    v5 = 0;
    *a2 = 1;
    return (uint64_t *)v5;
  }
  v7 = result;
  v8 = *result;
  if (*((_BYTE *)result + 8))
  {
    if (*((_BYTE *)result + 8) == 1)
    {
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_213AD970C(a3, a4, 0, isUniquelyReferenced_nonNull_native);
      v13 = v12;
      v14 = v8;
      swift_bridgeObjectRelease();
      if (v13 != 1)
      {
        sub_213AD8CFC(a3);
        *a5 = 1;
        v14 = v8;
      }
      if (*(_QWORD *)(v14 + 16))
      {
        v15 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        v14 = 0;
        v15 = 2;
      }
      swift_bridgeObjectRelease();
      v5 = 0;
      *v7 = v14;
      *((_BYTE *)v7 + 8) = v15;
      return (uint64_t *)v5;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18BD8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_213B2E2E0;
    *(_QWORD *)(inited + 32) = a3;
    *(_QWORD *)(inited + 40) = a4;
    *(_BYTE *)(inited + 48) = 0;
    v19 = sub_213AD9C9C(inited);
    swift_setDeallocating();
    v5 = 0;
    *v7 = v19;
    v17 = 1;
    goto LABEL_16;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v5 = *(_QWORD *)(v8 + 32);
    swift_bridgeObjectRetain();
    sub_213AD9E00(0, 1);
    v16 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRelease();
    if (v16)
    {
      v17 = 0;
      *v7 = v8;
    }
    else
    {
      swift_bridgeObjectRelease();
      v17 = 2;
      *v7 = 0;
    }
LABEL_16:
    *((_BYTE *)v7 + 8) = v17;
    return (uint64_t *)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_213AD8328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 44));
  if ((*(_BYTE *)(v1 + 40) & 1) == 0)
  {
    *(_BYTE *)(v1 + 40) = 1;
    v2 = *(_QWORD *)(v1 + 16);
    if (!*(_BYTE *)(v1 + 24))
    {
      v3 = MEMORY[0x24BEE4B08];
      goto LABEL_7;
    }
    if (*(_BYTE *)(v1 + 24) == 1)
    {
      v3 = *(_QWORD *)(v1 + 16);
      v2 = MEMORY[0x24BEE4AF8];
LABEL_7:
      *(_QWORD *)(v1 + 16) = 0;
      *(_BYTE *)(v1 + 24) = 2;
      goto LABEL_8;
    }
  }
  v2 = MEMORY[0x24BEE4AF8];
  v3 = MEMORY[0x24BEE4B08];
LABEL_8:
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 44));
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(v2 + 8 * v5++ + 32);
      v20[0] = 0;
      sub_213AD64BC((uint64_t)v20, *(_QWORD *)(*(_QWORD *)(v6 + 64) + 40), &qword_254D18BB8);
      swift_continuation_resume();
    }
    while (v4 != v5);
  }
  result = swift_bridgeObjectRelease();
  v8 = 0;
  v9 = v3 + 56;
  v10 = 1 << *(_BYTE *)(v3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v8 << 6);
LABEL_30:
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v15 + 8);
    if (v19)
    {
      memset(v20, 0, 24);
      v20[3] = 3;
      sub_213AD64BC((uint64_t)v20, *(_QWORD *)(*(_QWORD *)(v19 + 64) + 40), &qword_254D18BC0);
      result = swift_continuation_resume();
    }
  }
  v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v16 >= v13)
    return swift_release();
  v17 = *(_QWORD *)(v9 + 8 * v16);
  ++v8;
  if (v17)
    goto LABEL_29;
  v8 = v16 + 1;
  if (v16 + 1 >= v13)
    return swift_release();
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
    goto LABEL_29;
  v8 = v16 + 2;
  if (v16 + 2 >= v13)
    return swift_release();
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_29:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_30;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    return swift_release();
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_29;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      return swift_release();
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_29;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_213AD8564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[19] = v4;
  v5[10] = a1;
  v5[11] = a2;
  v5[12] = a3;
  v5[13] = a4;
  return swift_task_switch();
}

uint64_t sub_213AD8584()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[19];
  v2 = swift_task_alloc();
  v0[20] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 10;
  if (!__isPlatformVersionAtLeast(2, 18, 0, 0))
    return swift_task_switch();
  v3 = (_QWORD *)swift_task_alloc();
  v0[21] = v3;
  *v3 = v0;
  v3[1] = sub_213AD8658;
  return sub_213B2C488();
}

uint64_t sub_213AD8658()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AD86B0()
{
  uint64_t v0;
  __int128 v1;

  *(_QWORD *)(v0 + 176) = swift_task_addCancellationHandler();
  v1 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 200) = v1;
  return swift_task_switch();
}

uint64_t sub_213AD8704()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[19];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_213AD875C;
  v2 = swift_continuation_init();
  sub_213AD8874(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_213AD875C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 144);
  return swift_task_switch();
}

uint64_t sub_213AD87AC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;

  v1 = v0[27];
  if (v1)
  {
    v2 = (void *)v0[23];
    v0[14] = v2;
    v3 = v0[25];
    v4 = (void *)v0[26];
    v5 = v0[24];
    v0[15] = v5;
    v0[16] = v3;
    v0[17] = v4;
    sub_213AD8B18(v2, v5, v3, v4);
    sub_213AD64BC((uint64_t)(v0 + 14), *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_254D18BC0);
    swift_continuation_resume();
  }
  return swift_task_switch();
}

uint64_t sub_213AD8828()
{
  swift_task_removeCancellationHandler();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AD886C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213AD8874(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  v3 = *(os_unfair_lock_s **)(a2 + 16);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 11;
  os_unfair_lock_lock(v3 + 11);
  v6 = sub_213AD893C(v4, a1);
  v8 = v7;
  v10 = v9;
  os_unfair_lock_unlock(v5);
  if (v6)
  {
    if ((v10 & 1) != 0)
    {
      swift_allocError();
      swift_continuation_throwingResumeWithError();
    }
    else
    {
      v11 = v8;
      sub_213AD64BC((uint64_t)&v11, *(_QWORD *)(*(_QWORD *)(v6 + 64) + 40), &qword_254D18BB8);
      swift_continuation_throwingResume();
    }
  }
}

uint64_t sub_213AD893C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v18;

  if (*(_BYTE *)(a1 + 24) == 1)
    return a2;
  v4 = *(_QWORD **)a1;
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) != 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C08);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_213B2E2E0;
      *(_QWORD *)(v16 + 32) = a2;
      *(_QWORD *)a1 = v16;
      *(_BYTE *)(a1 + 8) = 0;
      return 0;
    }
    v18 = *(_QWORD **)a1;
    if (v4[2])
    {
      v5 = sub_213AD99DC((uint64_t)v4);
      v7 = v6;
      v9 = v8 & 1;
      swift_bridgeObjectRetain();
      sub_213AD9A64(v5, v7, v9);
      sub_213ADA014(v5, v7, v9);
      v10 = v18;
      v11 = v18[2];
      swift_bridgeObjectRelease();
      if (v11)
      {
        v12 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        v10 = 0;
        v12 = 2;
      }
      *(_QWORD *)a1 = v10;
      *(_BYTE *)(a1 + 8) = v12;
      return a2;
    }
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v13 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_16:
    v13 = sub_213AE123C(0, v4[2] + 1, 1, v4);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_213AE123C((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v13[v15 + 4] = a2;
  swift_bridgeObjectRelease();
  a2 = 0;
  *(_QWORD *)a1 = v13;
  *(_BYTE *)(a1 + 8) = 0;
  return a2;
}

id sub_213AD8B08(id result, unint64_t a2, uint64_t a3, void *a4)
{
  if (a4 != (void *)3)
    return sub_213AD8B18(result, a2, a3, a4);
  return result;
}

id sub_213AD8B18(id result, unint64_t a2, uint64_t a3, void *a4)
{
  if (a4 != (void *)2)
    return sub_213AD6384(result, a2, a3, a4);
  return result;
}

uint64_t sub_213AD8B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_213AD8B6C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v0 + 56) - 1) >= 3)
  {
    sub_213AD5374(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));

  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213AD8BB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_213ADA044;
  return sub_213AD7800(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_213AD8C4C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_213AD8CB0;
  return v6(a1);
}

uint64_t sub_213AD8CB0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213AD8CFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *v1;
  sub_213B2C518();
  sub_213B2C524();
  v4 = sub_213B2C530();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  v7 = v3 + 56;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v3 + 48);
  if (*(_QWORD *)(v8 + 24 * v6) != a1)
  {
    v12 = ~v5;
    v6 = (v6 + 1) & v12;
    if (((*(_QWORD *)(v7 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      while (*(_QWORD *)(v8 + 24 * v6) != a1)
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v7 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          return 0;
      }
      goto LABEL_3;
    }
    return 0;
  }
LABEL_3:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v1;
  v14 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_213AD8E70();
    v10 = v14;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 24 * v6);
  sub_213AD953C(v6);
  *v1 = v14;
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_213AD8E70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18BE0);
  v2 = *v0;
  v3 = sub_213B2C2B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_BYTE *)(v17 + 16);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v19 = *(_OWORD *)v17;
    *(_BYTE *)(v19 + 16) = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_213AD9004()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18BE0);
  result = sub_213B2C2C0();
  v3 = result;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_31:
    result = swift_release();
    *v0 = v3;
    return result;
  }
  v4 = 0;
  v27 = v1 + 56;
  v5 = 1 << *(_BYTE *)(v1 + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v1 + 56);
  v28 = (unint64_t)(v5 + 63) >> 6;
  v8 = result + 56;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_22;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (v13 >= v28)
      goto LABEL_31;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v28)
        goto LABEL_31;
      v14 = *(_QWORD *)(v27 + 8 * v4);
      if (!v14)
        break;
    }
LABEL_21:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_22:
    v16 = *(_QWORD *)(v1 + 48) + 24 * v12;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_BYTE *)(v16 + 16);
    sub_213B2C518();
    sub_213B2C524();
    result = sub_213B2C530();
    v20 = -1 << *(_BYTE *)(v3 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_32;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v3 + 48) + 24 * v9;
    *(_QWORD *)v10 = v17;
    *(_QWORD *)(v10 + 8) = v18;
    *(_BYTE *)(v10 + 16) = v19;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 2;
  if (v15 >= v28)
    goto LABEL_31;
  v14 = *(_QWORD *)(v27 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v28)
      goto LABEL_31;
    v14 = *(_QWORD *)(v27 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_213AD928C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18BE0);
  result = sub_213B2C2C0();
  v3 = result;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 0;
    v29 = (_QWORD *)(v1 + 56);
    v5 = 1 << *(_BYTE *)(v1 + 32);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v1 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = result + 56;
    while (1)
    {
      if (v7)
      {
        v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v12 = v11 | (v4 << 6);
      }
      else
      {
        v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        result = v1 + 56;
        if (v13 >= v28)
          goto LABEL_31;
        v14 = v29[v13];
        ++v4;
        if (!v14)
        {
          v4 = v13 + 1;
          if (v13 + 1 >= v28)
            goto LABEL_31;
          v14 = v29[v4];
          if (!v14)
          {
            v15 = v13 + 2;
            if (v15 >= v28)
            {
LABEL_31:
              v27 = 1 << *(_BYTE *)(v1 + 32);
              if (v27 > 63)
                bzero(v29, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v27;
              *(_QWORD *)(v1 + 16) = 0;
              break;
            }
            v14 = v29[v15];
            if (!v14)
            {
              while (1)
              {
                v4 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_37;
                if (v4 >= v28)
                  goto LABEL_31;
                v14 = v29[v4];
                ++v15;
                if (v14)
                  goto LABEL_21;
              }
            }
            v4 = v15;
          }
        }
LABEL_21:
        v7 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v4 << 6);
      }
      v16 = *(_QWORD *)(v1 + 48) + 24 * v12;
      v17 = *(_QWORD *)v16;
      v18 = *(_QWORD *)(v16 + 8);
      v19 = *(_BYTE *)(v16 + 16);
      sub_213B2C518();
      sub_213B2C524();
      result = sub_213B2C530();
      v20 = -1 << *(_BYTE *)(v3 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
      {
        v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v8 + 8 * v22);
        }
        while (v26 == -1);
        v9 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v8 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      v10 = *(_QWORD *)(v3 + 48) + 24 * v9;
      *(_QWORD *)v10 = v17;
      *(_QWORD *)(v10 + 8) = v18;
      *(_BYTE *)(v10 + 16) = v19;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

unint64_t sub_213AD953C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_213B2C284();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v11 = 24 * v6;
        sub_213B2C518();
        sub_213B2C524();
        v12 = sub_213B2C530() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9)
            goto LABEL_5;
        }
        else if (v12 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(v3 + 48);
          v14 = v13 + 24 * v2;
          v15 = (__int128 *)(v13 + v11);
          if (24 * v2 < v11 || v14 >= (unint64_t)v15 + 24 || (v16 = v2 == v6, v2 = v6, !v16))
          {
            v10 = *v15;
            *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
            *(_OWORD *)v14 = v10;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_213AD970C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;

  v9 = *v4;
  sub_213B2C518();
  sub_213B2C524();
  v10 = sub_213B2C530();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  v13 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_9:
    v16 = 0;
    v15 = 1;
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(v9 + 48);
  if (*(_QWORD *)(v14 + 24 * v12) != a1)
  {
    v17 = ~v11;
    v12 = (v12 + 1) & ~v11;
    if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      v15 = 1;
      while (1)
      {
        v18 = *(_QWORD *)(v14 + 24 * v12);
        v16 = v18 == a1;
        if (v18 == a1)
          break;
        v12 = (v12 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_10;
      }
      v15 = 0;
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  v15 = 0;
  v16 = 1;
LABEL_10:
  v19 = *(_QWORD *)(v9 + 16);
  v20 = v19 + v15;
  if (__OFADD__(v19, v15))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v21 = *(_QWORD *)(v9 + 24);
  if (v21 >= v20 && (a4 & 1) != 0)
  {
    if (!v16)
      goto LABEL_29;
    goto LABEL_24;
  }
  if ((a4 & 1) != 0)
  {
    sub_213AD928C();
  }
  else
  {
    if (v21 >= v20)
    {
      sub_213AD8E70();
      if (!v16)
      {
LABEL_29:
        v30 = *v4;
        *(_QWORD *)(*v4 + 8 * (v12 >> 6) + 56) |= 1 << v12;
        v31 = *(_QWORD *)(v30 + 48) + 24 * v12;
        *(_QWORD *)v31 = a1;
        *(_QWORD *)(v31 + 8) = a2;
        *(_BYTE *)(v31 + 16) = a3 & 1;
        v32 = *(_QWORD *)(v30 + 16);
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (!v33)
        {
          result = 0;
          *(_QWORD *)(v30 + 16) = v34;
          return result;
        }
        goto LABEL_33;
      }
LABEL_24:
      v27 = *(_QWORD *)(*v4 + 48) + 24 * v12;
      result = *(_QWORD *)v27;
      *(_QWORD *)v27 = a1;
      *(_QWORD *)(v27 + 8) = a2;
      *(_BYTE *)(v27 + 16) = a3 & 1;
      return result;
    }
    sub_213AD9004();
  }
  v22 = *v4;
  sub_213B2C518();
  sub_213B2C524();
  v23 = sub_213B2C530();
  v24 = -1 << *(_BYTE *)(v22 + 32);
  v12 = v23 & ~v24;
  v25 = v22 + 56;
  if (((*(_QWORD *)(v22 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    goto LABEL_28;
  v26 = *(_QWORD *)(v22 + 48);
  if (*(_QWORD *)(v26 + 24 * v12) == a1)
    goto LABEL_23;
  v29 = ~v24;
  v12 = (v12 + 1) & v29;
  if (((*(_QWORD *)(v25 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_28:
    if (!v16)
      goto LABEL_29;
    goto LABEL_34;
  }
  while (*(_QWORD *)(v26 + 24 * v12) != a1)
  {
    v12 = (v12 + 1) & v29;
    if (((*(_QWORD *)(v25 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_28;
  }
LABEL_23:
  if (v16)
    goto LABEL_24;
LABEL_34:
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18BE8);
  result = sub_213B2C4AC();
  __break(1u);
  return result;
}

uint64_t sub_213AD99DC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_213AD9A64(unint64_t a1, int a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = v3;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((a3 & 1) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0 || (v9 = *v4, 1 << *(_BYTE *)(*v4 + 32) <= (uint64_t)a1))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(v9 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(v9 + 36) == a2)
      {
        v11 = *v4;
        *v4 = 0x8000000000000000;
        if ((result & 1) != 0)
        {
LABEL_7:
          v10 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 24 * a1);
          sub_213AD953C(a1);
          *v4 = v11;
          swift_bridgeObjectRelease();
          return v10;
        }
LABEL_11:
        sub_213AD8E70();
        v9 = v11;
        goto LABEL_7;
      }
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213AD9B5C(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)(v3 + 112) = a2;
  v4 = a3[1];
  *(_OWORD *)(v3 + 120) = *a3;
  *(_OWORD *)(v3 + 136) = v4;
  return swift_task_switch();
}

uint64_t sub_213AD9B80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[14];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_213AD9BD8;
  v2 = swift_continuation_init();
  sub_213AD8874(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_213AD9BD8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 80);
  return swift_task_switch();
}

uint64_t sub_213AD9C28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 152);
  if (v1)
  {
    v2 = *(void **)(v0 + 120);
    *(_QWORD *)(v0 + 80) = v2;
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(void **)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 88) = v5;
    *(_QWORD *)(v0 + 96) = v3;
    *(_QWORD *)(v0 + 104) = v4;
    sub_213AD8B18(v2, v5, v3, v4);
    sub_213AD64BC(v0 + 80, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_254D18BC0);
    swift_continuation_resume();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AD9C9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18BE0);
    v3 = sub_213B2C2CC();
    v4 = 0;
    v5 = v3 + 56;
    v22 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v22 + 24 * v4);
      v7 = *v6;
      v8 = v6[1];
      v9 = *((_BYTE *)v6 + 16);
      sub_213B2C518();
      sub_213B2C524();
      result = sub_213B2C530();
      v11 = -1 << *(_BYTE *)(v3 + 32);
      v12 = result & ~v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
      v15 = 1 << v12;
      v16 = *(_QWORD *)(v3 + 48);
      if (((1 << v12) & v14) != 0)
      {
        if (*(_QWORD *)(v16 + 24 * v12) == v7)
          goto LABEL_3;
        v17 = ~v11;
        while (1)
        {
          v12 = (v12 + 1) & v17;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
          v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0)
            break;
          if (*(_QWORD *)(v16 + 24 * v12) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
      v18 = v16 + 24 * v12;
      *(_QWORD *)v18 = v7;
      *(_QWORD *)(v18 + 8) = v8;
      *(_BYTE *)(v18 + 16) = v9;
      v19 = *(_QWORD *)(v3 + 16);
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v21;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

char *sub_213AD9E00(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_213AE123C(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[8 * a1 + 32];
    v15 = &v4[8 * a2 + 32];
    if (a1 != a2 || result >= &v15[8 * v14])
      result = (char *)memmove(result, v15, 8 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213AD9F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213AD9FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _OWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_OWORD **)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_213AD7E40;
  return ((uint64_t (*)(uint64_t, uint64_t, _OWORD *))((char *)&dword_254D18BF8 + dword_254D18BF8))(a1, v5, v4);
}

uint64_t sub_213ADA014(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_213ADA020()
{
  swift_release();
  return swift_deallocObject();
}

double DefaultAssetRequestTimeout.getter()
{
  return 3.0;
}

uint64_t sub_213ADA050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = HeadphoneHardwareModel.rawValue.getter();
  v2 = v1;
  if (v0 == HeadphoneHardwareModel.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_213ADA0E4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_213ADA130(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_213ADA1D0 + 4 * byte_213B2E636[a2]))(v2 + 3);
}

uint64_t sub_213ADA1D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 3 && v2 == 0x8000000213B33680)
    v3 = 1;
  else
    v3 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_213ADA2B0(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aIntro_4[8 * a1] == *(_QWORD *)&aIntro_4[8 * a2]
    && *(_QWORD *)&aLoopcharloopch[8 * a1 + 16] == *(_QWORD *)&aLoopcharloopch[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_213B2C47C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_213ADA33C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_213ADA388(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213ADA3F8 + 4 * byte_213B2E640[a2]))(a3 + 1);
}

uint64_t sub_213ADA3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 1 && v3 == 0x8000000213B33680)
    v4 = 1;
  else
    v4 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_213ADA4A8(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_213ADA4F4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213ADA574 + 4 * byte_213B2E64A[a2]))(0xD000000000000015);
}

uint64_t sub_213ADA574(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000015 && v1 == 0x8000000213B336E0)
    v2 = 1;
  else
    v2 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_213ADA62C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0x8000000213B33760;
  else
    v4 = 0x8000000213B33780;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0xD000000000000011;
  if ((a2 & 1) != 0)
    v6 = 0x8000000213B33780;
  else
    v6 = 0x8000000213B33760;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_213ADA6D4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_213ADA720(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_213ADA7B8 + 4 * byte_213B2E655[a2]))(0xD000000000000010);
}

uint64_t sub_213ADA7B8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x8000000213B335D0)
    v2 = 1;
  else
    v2 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_213ADA894(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1886351212;
  else
    v3 = 0x6F72746E69;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1886351212;
  else
    v5 = 0x6F72746E69;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_213ADA928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = iosmacHardware.Model.rawValue.getter();
  v2 = v1;
  if (v0 == iosmacHardware.Model.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_213ADA9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D18C28);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D18C28);
  if (qword_254D18470 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

ProductKit::AirTagPairing2::Configuration::Color_optional __swiftcall AirTagPairing2.Configuration.Color.init(rawValue:)(Swift::UInt rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 99)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ProductKit::AirTagPairing2::Configuration::Color_optional)rawValue;
}

uint64_t AirTagPairing2.Configuration.Color.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 99;
  else
    return 0;
}

BOOL sub_213ADAA7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_213ADAA94()
{
  sub_213B2C518();
  sub_213B2C524();
  return sub_213B2C530();
}

uint64_t sub_213ADAAE0()
{
  return sub_213B2C524();
}

uint64_t sub_213ADAB14()
{
  sub_213B2C518();
  sub_213B2C524();
  return sub_213B2C530();
}

_QWORD *sub_213ADAB5C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 99)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_213ADAB7C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 99;
  if (!*v1)
    v2 = 0;
  *a1 = v2;
}

uint64_t AirTagPairing2.Configuration.color.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double AirTagPairing2.Configuration.timeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void AirTagPairing2.Configuration.overrideHardwareModel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *AirTagPairing2.Configuration.overrideHardwareModel.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AirTagPairing2.Configuration.overrideHardwareModel.modify())()
{
  return nullsub_1;
}

uint64_t AirTagPairing2.Configuration.engravingInformation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    v3 = 0;
    v4 = 0xF000000000000000;
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 24);
    v4 = *(_QWORD *)(v1 + 32);
    result = sub_213ADAC20(v3, v4, 0);
  }
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_213ADAC20(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return sub_213AD5300(a1, a2);
}

uint64_t *sub_213ADAC30(uint64_t *result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;

  v2 = result[1];
  if (v2 >> 60 != 15)
  {
    v4 = *result;
    v5 = *(_QWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 32);
    v7 = *(_BYTE *)(a2 + 40);
    sub_213AD5300(*result, v2);
    result = (uint64_t *)sub_213ADACE4(v5, v6, v7);
    *(_QWORD *)(a2 + 24) = v4;
    *(_QWORD *)(a2 + 32) = v2;
    *(_BYTE *)(a2 + 40) = 0;
  }
  return result;
}

uint64_t *AirTagPairing2.Configuration.engravingInformation.setter(uint64_t *result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = result[1];
  if (v2 >> 60 != 15)
  {
    v3 = *result;
    result = (uint64_t *)sub_213ADACE4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
    *(_QWORD *)(v1 + 24) = v3;
    *(_QWORD *)(v1 + 32) = v2;
    *(_BYTE *)(v1 + 40) = 0;
  }
  return result;
}

uint64_t sub_213ADACE4(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_213ADACFC(result, a2, a3 & 1);
  return result;
}

uint64_t sub_213ADACFC(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return sub_213AD5374(a1, a2);
}

uint64_t *(*AirTagPairing2.Configuration.engravingInformation.modify(uint64_t *a1))(uint64_t *result, char a2)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  a1[2] = v1;
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    v3 = 0;
    v4 = 0xF000000000000000;
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 24);
    v4 = *(_QWORD *)(v1 + 32);
    sub_213ADAC20(v3, v4, 0);
  }
  *a1 = v3;
  a1[1] = v4;
  return sub_213ADAD6C;
}

uint64_t *sub_213ADAD6C(uint64_t *result, char a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = result[1];
  if ((a2 & 1) != 0)
  {
    v3 = *result;
    if (v2 >> 60 != 15)
    {
      v4 = result[2];
      v5 = *(_QWORD *)(v4 + 24);
      v6 = *(_QWORD *)(v4 + 32);
      v7 = *(_BYTE *)(v4 + 40);
      sub_213AD5300(*result, v2);
      sub_213ADACE4(v5, v6, v7);
      *(_QWORD *)(v4 + 24) = v3;
      *(_QWORD *)(v4 + 32) = v2;
      *(_BYTE *)(v4 + 40) = 0;
    }
    return (uint64_t *)sub_213ADAE20(v3, v2);
  }
  else if (v2 >> 60 != 15)
  {
    v8 = result[2];
    v9 = *result;
    result = (uint64_t *)sub_213ADACE4(*(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_BYTE *)(v8 + 40));
    *(_QWORD *)(v8 + 24) = v9;
    *(_QWORD *)(v8 + 32) = v2;
    *(_BYTE *)(v8 + 40) = 0;
  }
  return result;
}

uint64_t sub_213ADAE20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_213AD5374(a1, a2);
  return a1;
}

uint64_t AirTagPairing2.Configuration.personalizationAssetInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_213ADAE48(v2, v3, v4);
}

uint64_t sub_213ADAE48(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_213ADAC20(result, a2, a3 & 1);
  return result;
}

uint64_t AirTagPairing2.Configuration.personalizationAssetInfo.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_213ADACE4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v4;
  return result;
}

uint64_t (*AirTagPairing2.Configuration.personalizationAssetInfo.modify())()
{
  return nullsub_1;
}

void AirTagPairing2.Configuration.init(hardwareModel:color:timeout:)(_BYTE *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;

  v3 = 99;
  if (!*a1)
    v3 = 0;
  *(_QWORD *)a2 = v3;
  *(double *)(a2 + 8) = a3;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = -1;
}

uint64_t sub_213ADAEDC()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_213ADAEE4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

double sub_213ADAEF0()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t _s10ProductKit17HeadphonePairing2V13ConfigurationV20engravingInformationAA27PersonalizationAssetManagerC0I4InfoOSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_213ADAE48(v2, v3, v4);
}

uint64_t AirTagPairing2.AssetRequest.init(configuration:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  v6 = a1[3];
  v7 = a1[4];
  v8 = *((_BYTE *)a1 + 40);
  v9 = type metadata accessor for MobileAssetManager();
  v10 = swift_allocObject();
  sub_213ADAE48(v6, v7, v8);
  swift_defaultActor_initialize();
  *(_BYTE *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 120) = &unk_254D1AEB0;
  *(_QWORD *)(v10 + 128) = 0;
  *(_QWORD *)(v10 + 136) = &unk_254D1AEA8;
  *(_QWORD *)(v10 + 144) = 0;
  v14 = v9;
  v15 = &off_24D0BF990;
  sub_213ADACE4(v6, v7, v8);
  *(_QWORD *)&v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C40);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = v3;
  *(_QWORD *)(v11 + 56) = v4;
  *(_BYTE *)(v11 + 64) = v5;
  *(_QWORD *)(v11 + 72) = v6;
  *(_QWORD *)(v11 + 80) = v7;
  *(_BYTE *)(v11 + 88) = v8;
  *(_QWORD *)(v11 + 16) = 0;
  *(_BYTE *)(v11 + 24) = 1;
  *(_QWORD *)(v11 + 32) = 0;
  result = sub_213AE1104(&v13, v11 + 96);
  *a2 = v11;
  return result;
}

uint64_t AirTagPairing2.AssetRequest.assets()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_254D18C50 + dword_254D18C50);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_213ADB080;
  return v3();
}

uint64_t sub_213ADB080(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_213ADB0D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[203] = v0;
  v1[209] = type metadata accessor for MobileAssetResult();
  v1[210] = swift_task_alloc();
  v1[211] = swift_task_alloc();
  v2 = type metadata accessor for MobileAssetRequest();
  v1[212] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[213] = v3;
  v1[214] = *(_QWORD *)(v3 + 64);
  v1[215] = swift_task_alloc();
  v1[216] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213ADB17C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = (__int128 *)(v0 + 1416);
  v43 = v0 + 1496;
  if (qword_254D18418 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 1736) = __swift_project_value_buffer(v1, (uint64_t)qword_254D19FC8);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213AC8000, v2, v3, "Beginning asset request", v4, 2u);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1728);
  v39 = *(_QWORD *)(v0 + 1720);
  v40 = *(_QWORD *)(v0 + 1712);
  v6 = *(_QWORD *)(v0 + 1704);
  v7 = *(int **)(v0 + 1696);
  v8 = *(_QWORD *)(v0 + 1624);

  sub_213AD8B28(v8 + 96, v43);
  sub_213B2BEAC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18DD0);
  v9 = *(_QWORD *)(v6 + 72);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_213B2E300;
  v42 = v11;
  v12 = v11 + ((v10 + 32) & ~v10);
  swift_bridgeObjectRetain();
  sub_213B2BC84();
  *(_BYTE *)(v12 + v7[5]) = 0;
  v13 = (_QWORD *)(v12 + v7[6]);
  *v13 = 0x2C31676154726941;
  v13[1] = 0xE900000000000031;
  v14 = v12 + v7[7];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = v12 + v9;
  v16 = *(_QWORD *)(v8 + 48);
  sub_213B2BC84();
  v17 = v7[5];
  *(_BYTE *)(v15 + v17) = 1;
  v18 = (_QWORD *)(v15 + v7[6]);
  *v18 = 0x2C31676154726941;
  v18[1] = 0xE900000000000031;
  v19 = v15 + v7[7];
  *(_QWORD *)v19 = v16;
  *(_BYTE *)(v19 + 8) = 0;
  sub_213AD52BC(v12, v5, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  v37 = v17;
  v38 = v5;
  if (*(_BYTE *)(v5 + v17))
    v20 = 2;
  else
    v20 = 1;
  v21 = v5;
  v22 = v10 | 7;
  sub_213AE36D0(v21, v39, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  sub_213AD8B28(v43, (uint64_t)v41);
  v23 = (v10 + 16) & ~v10;
  v24 = swift_allocObject();
  v25 = (v40 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_213AE36D0(v39, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  sub_213AE1104(v41, v24 + v25);
  swift_retain();
  v26 = sub_213AE1348(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_213AE1348((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  v29 = &v26[3 * v28];
  v29[4] = v20;
  v29[5] = &unk_254D18F50;
  v29[6] = v24;
  swift_release();
  if (*(_QWORD *)(v42 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 1728);
    v31 = *(_QWORD *)(v0 + 1720);
    sub_213AD52BC(v15, v30, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    LODWORD(v41) = *(unsigned __int8 *)(v38 + v37);
    sub_213AE36D0(v30, v31, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    sub_213AD8B28(v43, v0 + 1336);
    v22 = swift_allocObject();
    sub_213AE36D0(v31, v22 + v23, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    sub_213AE1104((__int128 *)(v0 + 1336), v22 + v25);
    v23 = v26[2];
    v24 = v26[3];
    v15 = v23 + 1;
    swift_retain();
    if (v23 < v24 >> 1)
      goto LABEL_12;
  }
  v26 = sub_213AE1348((_QWORD *)(v24 > 1), v15, 1, v26);
LABEL_12:
  v32 = 1;
  if ((_DWORD)v41)
    v32 = 2;
  v33 = *(_QWORD *)(v0 + 1624);
  v26[2] = v15;
  v34 = &v26[3 * v23];
  v34[4] = v32;
  v34[5] = &unk_254D18F58;
  v34[6] = v22;
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v35 = swift_allocObject();
  *(_QWORD *)(v0 + 1744) = v35;
  *(_QWORD *)(v35 + 16) = v33;
  *(_QWORD *)(v35 + 24) = v26;
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D18E08);
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_213ADB69C()
{
  uint64_t v0;
  uint64_t *v1;

  v1[219] = v0;
  if (v0)
    return swift_asyncLet_finish();
  sub_213AD52BC(v1[211], v1[210], (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  return swift_asyncLet_get();
}

uint64_t sub_213ADB72C()
{
  return swift_task_switch();
}

uint64_t sub_213ADB740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 1624);
  *(_QWORD *)(v0 + 1760) = *(_QWORD *)(v0 + 1576);
  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 1768) = v2;
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 1776) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(v0 + 1800) = v4;
  sub_213B2C02C();
  sub_213ADAE48(v2, v3, v4);
  swift_retain();
  *(_QWORD *)(v0 + 1784) = sub_213B2C020();
  sub_213B2BFE4();
  return swift_task_switch();
}

uint64_t sub_213ADB7F4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  _QWORD *v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 1776);
  v2 = *(_QWORD *)(v0 + 1768);
  v3 = *(_QWORD *)(v0 + 1760);
  v4 = *(_BYTE *)(v0 + 1800);
  swift_release();
  type metadata accessor for AirTagPairing2.Assets();
  v5 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 1792) = v5;
  v5[4] = 0;
  v5[5] = 0;
  v5[6] = 0;
  v5[7] = 1;
  sub_213ADAE48(v2, v1, v4);
  v5[2] = sub_213B2B2CC();
  v5[3] = v3;
  v6 = *(_BYTE *)(v0 + 1800);
  v7 = *(_QWORD *)(v0 + 1776);
  v8 = *(_QWORD *)(v0 + 1768);
  if (v3)
  {
    v9 = *(_QWORD *)(v0 + 1760);
    v10 = *(_QWORD *)(v0 + 1680);
    swift_retain();
    v11 = swift_retain();
    sub_213B0C3C8(v11, v9);
    swift_release();
    sub_213ADACE4(v8, v7, v6);
    sub_213AD53FC(v10, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
    swift_release();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 1680);
    sub_213ADACE4(*(_QWORD *)(v0 + 1768), *(_QWORD *)(v0 + 1776), *(_BYTE *)(v0 + 1800));
    sub_213AD53FC(v12, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  }
  sub_213ADACE4(*(_QWORD *)(v0 + 1768), *(_QWORD *)(v0 + 1776), *(_BYTE *)(v0 + 1800));
  return swift_asyncLet_finish();
}

uint64_t sub_213ADB938()
{
  return swift_task_switch();
}

uint64_t sub_213ADB94C()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_213ADB994()
{
  return swift_task_switch();
}

uint64_t sub_213ADB9A8()
{
  return swift_task_switch();
}

uint64_t sub_213ADB9BC()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_213ADBA04()
{
  return swift_task_switch();
}

uint64_t sub_213ADBA18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[209] = v0;
  v1[215] = type metadata accessor for MobileAssetResult();
  v1[216] = swift_task_alloc();
  v1[217] = swift_task_alloc();
  v2 = type metadata accessor for MobileAssetRequest();
  v1[218] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[219] = v3;
  v1[220] = *(_QWORD *)(v3 + 64);
  v1[221] = swift_task_alloc();
  v1[222] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213ADBAC0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = v0 + 1464;
  if (qword_254D18418 != -1)
    swift_once();
  v43 = (__int128 *)(v0 + 1544);
  v1 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 1784) = __swift_project_value_buffer(v1, (uint64_t)qword_254D19FC8);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213AC8000, v2, v3, "Beginning asset request", v4, 2u);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1672);

  sub_213AD8B28(v5 + 96, v45);
  *(_BYTE *)(v0 + 1377) = *(_BYTE *)(v5 + 65);
  v6 = HeadphoneHardwareModel.rawValue.getter();
  v7 = *(_QWORD *)(v0 + 1776);
  v41 = *(_QWORD *)(v0 + 1768);
  v42 = *(_QWORD *)(v0 + 1760);
  v8 = *(_QWORD *)(v0 + 1752);
  v9 = *(int **)(v0 + 1744);
  v46 = v6;
  v47 = v10;
  sub_213B2BEAC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18DD0);
  v11 = *(_QWORD *)(v8 + 72);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_213B2E300;
  v44 = v13;
  v14 = v13 + ((v12 + 32) & ~v12);
  swift_bridgeObjectRetain();
  sub_213B2BC84();
  *(_BYTE *)(v14 + v9[5]) = 0;
  v15 = (uint64_t *)(v14 + v9[6]);
  *v15 = v46;
  v15[1] = v47;
  v16 = v14 + v9[7];
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  v17 = v14 + v11;
  v18 = *(_QWORD *)(v5 + 48);
  *(_QWORD *)(v0 + 1792) = v18;
  sub_213B2BC84();
  v19 = v9[5];
  *(_BYTE *)(v17 + v19) = 1;
  v20 = (uint64_t *)(v17 + v9[6]);
  *v20 = v46;
  v20[1] = v47;
  v21 = v17 + v9[7];
  *(_QWORD *)v21 = v18;
  *(_BYTE *)(v21 + 8) = 0;
  sub_213AD52BC(v14, v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  v39 = v19;
  v40 = v7;
  if (*(_BYTE *)(v7 + v19))
    v22 = 2;
  else
    v22 = 1;
  v23 = v7;
  v24 = v12 | 7;
  sub_213AE36D0(v23, v41, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  sub_213AD8B28(v45, (uint64_t)v43);
  v25 = (v12 + 16) & ~v12;
  v26 = (v42 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject();
  sub_213AE36D0(v41, v27 + v25, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  sub_213AE1104(v43, v27 + v26);
  swift_retain();
  v28 = sub_213AE1348(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v30 = v28[2];
  v29 = v28[3];
  if (v30 >= v29 >> 1)
    v28 = sub_213AE1348((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
  v28[2] = v30 + 1;
  v31 = &v28[3 * v30];
  v31[4] = v22;
  v31[5] = aU;
  v31[6] = v27;
  swift_release();
  if (*(_QWORD *)(v44 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 1776);
    v33 = *(_QWORD *)(v0 + 1768);
    sub_213AD52BC(v17, v32, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    LODWORD(v43) = *(unsigned __int8 *)(v40 + v39);
    sub_213AE36D0(v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    sub_213AD8B28(v45, v0 + 1384);
    v24 = swift_allocObject();
    sub_213AE36D0(v33, v24 + v25, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    sub_213AE1104((__int128 *)(v0 + 1384), v24 + v26);
    v25 = v28[2];
    v27 = v28[3];
    v17 = v25 + 1;
    swift_retain();
    if (v25 < v27 >> 1)
      goto LABEL_12;
  }
  v28 = sub_213AE1348((_QWORD *)(v27 > 1), v17, 1, v28);
LABEL_12:
  v34 = 1;
  if ((_DWORD)v43)
    v34 = 2;
  v35 = *(_QWORD *)(v0 + 1672);
  v28[2] = v17;
  v36 = &v28[3 * v25];
  v36[4] = v34;
  v36[5] = aGu;
  v36[6] = v24;
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v37 = swift_allocObject();
  *(_QWORD *)(v0 + 1800) = v37;
  *(_QWORD *)(v37 + 16) = v35;
  *(_QWORD *)(v37 + 24) = v28;
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D18E08);
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_213ADBFEC()
{
  uint64_t v0;
  uint64_t *v1;

  v1[226] = v0;
  if (v0)
    return swift_asyncLet_finish();
  sub_213AD52BC(v1[217], v1[216], (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  return swift_asyncLet_get();
}

uint64_t sub_213ADC07C()
{
  return swift_task_switch();
}

uint64_t sub_213ADC090()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;

  v1 = *(_QWORD *)(v0 + 1792);
  v2 = *(_BYTE *)(v0 + 1377);
  v3 = *(_QWORD *)(v0 + 1672);
  *(_QWORD *)(v0 + 1816) = *(_QWORD *)(v0 + 1624);
  v4 = *(_QWORD *)(v3 + 56);
  v5 = *(_BYTE *)(v3 + 64);
  v6 = *(_QWORD *)(v3 + 72);
  v7 = *(_QWORD *)(v3 + 80);
  v8 = *(_BYTE *)(v3 + 88);
  *(_QWORD *)(v0 + 1336) = v1;
  *(_QWORD *)(v0 + 1344) = v4;
  *(_BYTE *)(v0 + 1352) = v5;
  *(_BYTE *)(v0 + 1353) = v2;
  *(_QWORD *)(v0 + 1360) = v6;
  *(_QWORD *)(v0 + 1368) = v7;
  *(_BYTE *)(v0 + 1376) = v8;
  sub_213B2C02C();
  sub_213ADAE48(v6, v7, v8);
  swift_retain();
  *(_QWORD *)(v0 + 1824) = sub_213B2C020();
  sub_213B2BFE4();
  return swift_task_switch();
}

uint64_t sub_213ADC160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1816);
  v2 = *(_QWORD *)(v0 + 1728);
  swift_release();
  type metadata accessor for HeadphonePairing2.Assets();
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 1832) = sub_213AE2898(v2, v1, (_OWORD *)(v0 + 1336), v3);
  return swift_asyncLet_finish();
}

uint64_t sub_213ADC1F4()
{
  return swift_task_switch();
}

uint64_t sub_213ADC208()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_213ADC250()
{
  return swift_task_switch();
}

uint64_t sub_213ADC264()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  __swift_destroy_boxed_opaque_existential_0(v0 + 1464);
  swift_release();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v2, "Finished asset request", v3, 2u);
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1832));
}

uint64_t sub_213ADC36C()
{
  return swift_task_switch();
}

uint64_t sub_213ADC380()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_213ADC3C8()
{
  return swift_task_switch();
}

uint64_t sub_213ADC3DC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  __swift_destroy_boxed_opaque_existential_0(v0 + 1464);
  swift_release();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v2, "Finished asset request", v3, 2u);
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213ADC4E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[203] = v0;
  v1[209] = type metadata accessor for MobileAssetResult();
  v1[210] = swift_task_alloc();
  v1[211] = swift_task_alloc();
  v2 = type metadata accessor for MobileAssetRequest();
  v1[212] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[213] = v3;
  v1[214] = *(_QWORD *)(v3 + 64);
  v1[215] = swift_task_alloc();
  v1[216] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213ADC588()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = (__int128 *)(v0 + 1416);
  v43 = v0 + 1496;
  if (qword_254D18418 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 1736) = __swift_project_value_buffer(v1, (uint64_t)qword_254D19FC8);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213AC8000, v2, v3, "Beginning asset request", v4, 2u);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1728);
  v39 = *(_QWORD *)(v0 + 1720);
  v40 = *(_QWORD *)(v0 + 1712);
  v6 = *(_QWORD *)(v0 + 1704);
  v7 = *(int **)(v0 + 1696);
  v8 = *(_QWORD *)(v0 + 1624);

  sub_213AD8B28(v8 + 96, v43);
  sub_213B2BEAC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18DD0);
  v9 = *(_QWORD *)(v6 + 72);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_213B2E300;
  v42 = v11;
  v12 = v11 + ((v10 + 32) & ~v10);
  swift_bridgeObjectRetain();
  sub_213B2BC84();
  *(_BYTE *)(v12 + v7[5]) = 0;
  v13 = (_QWORD *)(v12 + v7[6]);
  *v13 = 0xD000000000000024;
  v13[1] = 0x8000000213B33800;
  v14 = v12 + v7[7];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = v12 + v9;
  v16 = *(_QWORD *)(v8 + 48);
  sub_213B2BC84();
  v17 = v7[5];
  *(_BYTE *)(v15 + v17) = 1;
  v18 = (_QWORD *)(v15 + v7[6]);
  *v18 = 0xD000000000000024;
  v18[1] = 0x8000000213B33800;
  v19 = v15 + v7[7];
  *(_QWORD *)v19 = v16;
  *(_BYTE *)(v19 + 8) = 0;
  sub_213AD52BC(v12, v5, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  v37 = v17;
  v38 = v5;
  if (*(_BYTE *)(v5 + v17))
    v20 = 2;
  else
    v20 = 1;
  v21 = v5;
  v22 = v10 | 7;
  sub_213AE36D0(v21, v39, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  sub_213AD8B28(v43, (uint64_t)v41);
  v23 = (v10 + 16) & ~v10;
  v24 = (v40 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  sub_213AE36D0(v39, v25 + v23, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
  sub_213AE1104(v41, v25 + v24);
  swift_retain();
  v26 = sub_213AE1348(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_213AE1348((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  v29 = &v26[3 * v28];
  v29[4] = v20;
  v29[5] = &unk_254D18DD8;
  v29[6] = v25;
  swift_release();
  if (*(_QWORD *)(v42 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 1728);
    v31 = *(_QWORD *)(v0 + 1720);
    sub_213AD52BC(v15, v30, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    LODWORD(v41) = *(unsigned __int8 *)(v38 + v37);
    sub_213AE36D0(v30, v31, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    sub_213AD8B28(v43, v0 + 1336);
    v22 = swift_allocObject();
    sub_213AE36D0(v31, v22 + v23, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
    sub_213AE1104((__int128 *)(v0 + 1336), v22 + v24);
    v23 = v26[2];
    v25 = v26[3];
    v15 = v23 + 1;
    swift_retain();
    if (v23 < v25 >> 1)
      goto LABEL_12;
  }
  v26 = sub_213AE1348((_QWORD *)(v25 > 1), v15, 1, v26);
LABEL_12:
  v32 = 1;
  if ((_DWORD)v41)
    v32 = 2;
  v33 = *(_QWORD *)(v0 + 1624);
  v26[2] = v15;
  v34 = &v26[3 * v23];
  v34[4] = v32;
  v34[5] = &unk_254D18DE0;
  v34[6] = v22;
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v35 = swift_allocObject();
  *(_QWORD *)(v0 + 1744) = v35;
  *(_QWORD *)(v35 + 16) = v33;
  *(_QWORD *)(v35 + 24) = v26;
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D18E08);
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_213ADCAA4()
{
  uint64_t v0;
  uint64_t *v1;

  v1[219] = v0;
  if (v0)
    return swift_asyncLet_finish();
  sub_213AD52BC(v1[211], v1[210], (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  return swift_asyncLet_get();
}

uint64_t sub_213ADCB34()
{
  return swift_task_switch();
}

uint64_t sub_213ADCB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 1624);
  *(_QWORD *)(v0 + 1760) = *(_QWORD *)(v0 + 1576);
  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 1768) = v2;
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 1776) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(v0 + 1800) = v4;
  sub_213B2C02C();
  sub_213ADAE48(v2, v3, v4);
  swift_retain();
  *(_QWORD *)(v0 + 1784) = sub_213B2C020();
  sub_213B2BFE4();
  return swift_task_switch();
}

uint64_t sub_213ADCBFC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 1776);
  v2 = *(_QWORD *)(v0 + 1768);
  v3 = *(_QWORD *)(v0 + 1680);
  v4 = *(_BYTE *)(v0 + 1800);
  swift_release();
  type metadata accessor for GenericDevice.Assets();
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 1792) = v5;
  v6 = sub_213B2B2CC();
  swift_release();
  sub_213AD53FC(v3, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  sub_213ADACE4(v2, v1, v4);
  *(_QWORD *)(v5 + 16) = v6;
  return swift_asyncLet_finish();
}

uint64_t sub_213ADCCD0()
{
  return swift_task_switch();
}

uint64_t sub_213ADCCE4()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_213ADCD2C()
{
  return swift_task_switch();
}

uint64_t sub_213ADCD40()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  __swift_destroy_boxed_opaque_existential_0(v0 + 1496);
  swift_release();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v2, "Finished asset request", v3, 2u);
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1792));
}

uint64_t sub_213ADCE48()
{
  return swift_task_switch();
}

uint64_t sub_213ADCE5C()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_213ADCEA4()
{
  return swift_task_switch();
}

uint64_t sub_213ADCEB8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  __swift_destroy_boxed_opaque_existential_0(v0 + 1496);
  swift_release();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v2, "Finished asset request", v3, 2u);
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AirTagPairing2.Assets.AdjustedImageIdentifier.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static AirTagPairing2.Assets.AdjustedImageIdentifier.allCases.getter()
{
  return &unk_24D0B9C18;
}

uint64_t AirTagPairing2.Assets.AdjustedImageIdentifier.rawValue.getter()
{
  return 0x746375646F7250;
}

uint64_t sub_213ADD044@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_213ADD094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AirTagPairing2.Assets.AdjustedImageIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213ADD0B8(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0B9C78;
}

ProductKit::AirTagPairing2::Assets::VideoIdentifier_optional __swiftcall AirTagPairing2.Assets.VideoIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProductKit::AirTagPairing2::Assets::VideoIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static AirTagPairing2.Assets.VideoIdentifier.allCases.getter()
{
  return &unk_24D0B9D38;
}

uint64_t AirTagPairing2.Assets.VideoIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213ADD164 + 4 * byte_213B2E65A[*v0]))(0xD000000000000012, 0x8000000213B335B0);
}

unint64_t sub_213ADD164()
{
  return 0xD000000000000010;
}

uint64_t sub_213ADD180@<X0>(uint64_t a1@<X8>)
{
  return a1 + 7;
}

uint64_t sub_213ADD198()
{
  return 0x64726143786F7250;
}

uint64_t sub_213ADD1BC()
{
  return 0x5F656C6261736944;
}

uint64_t sub_213ADD1DC(char *a1)
{
  char v1;

  sub_213ADA6D4(*a1);
  return v1 & 1;
}

uint64_t sub_213ADD1FC()
{
  unsigned __int8 *v0;

  return sub_213B179E0(*v0);
}

uint64_t sub_213ADD204(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_213B181A0(a1, *v1);
}

uint64_t sub_213ADD20C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_213B182CC(a1, *v1);
}

ProductKit::AirTagPairing2::Assets::VideoIdentifier_optional sub_213ADD214(Swift::String *a1)
{
  return AirTagPairing2.Assets.VideoIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213ADD220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AirTagPairing2.Assets.VideoIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213ADD244(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0B9D60;
}

ProductKit::AirTagPairing2::Assets::ViewIdentifier_optional __swiftcall AirTagPairing2.Assets.ViewIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ProductKit::AirTagPairing2::Assets::ViewIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static AirTagPairing2.Assets.ViewIdentifier.allCases.getter()
{
  return &unk_24D0B9DD8;
}

uint64_t AirTagPairing2.Assets.ViewIdentifier.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1886351212;
  else
    return 0x6F72746E69;
}

uint64_t sub_213ADD2F0(char *a1, char *a2)
{
  return sub_213ADA894(*a1, *a2) & 1;
}

uint64_t sub_213ADD310()
{
  unsigned __int8 *v0;

  return sub_213B179E4(*v0);
}

uint64_t sub_213ADD318(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_213B181A4(a1, *v1);
}

uint64_t sub_213ADD320(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_213B182C8(a1, *v1);
}

ProductKit::AirTagPairing2::Assets::ViewIdentifier_optional sub_213ADD328(Swift::String *a1)
{
  return AirTagPairing2.Assets.ViewIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213ADD334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AirTagPairing2.Assets.ViewIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213ADD358(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0B9E00;
}

uint64_t AirTagPairing2.Assets.adjustedImage(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t result;

  v3 = *(void **)(v1 + 16);
  v4 = a1 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  v5 = v3;
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  sub_213B15540(v4);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = 0x746375646F7250;
  *(_QWORD *)(a1 + 8) = 0xE700000000000000;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = 6778480;
  *(_QWORD *)(a1 + 32) = 0xE300000000000000;
  *(_BYTE *)(a1 + 40) = 0;
  return result;
}

void AirTagPairing2.Assets.video(_:)(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_213ADD468()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t result;

  v2 = *(void **)(v1 + 16);
  v3 = v0 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  v4 = v2;
  swift_bridgeObjectRetain();
  v5 = v4;
  swift_bridgeObjectRetain();
  sub_213B15540(v3);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v0 = 0xD000000000000010;
  *(_QWORD *)(v0 + 8) = 0x8000000213B335D0;
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = 7761773;
  *(_QWORD *)(v0 + 32) = 0xE300000000000000;
  *(_BYTE *)(v0 + 40) = 0;
  return result;
}

char *AirTagPairing2.Assets.view(_:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  void (*v61)(uint64_t, char *, uint64_t);
  char v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t ObjCClassFromMetadata;
  id v69;
  void *v70;
  void *v71;
  id v72;
  char *v73;
  void (*v74)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  _QWORD *v101;
  void (*v102)(char *, uint64_t);
  _QWORD v104[2];
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unsigned int (*v116)(uint64_t, uint64_t, uint64_t);
  char *v117;
  char *v118;
  char *v119;
  void (*v120)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v121;
  uint64_t v122[2];
  id v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  uint64_t v127;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v119 = (char *)v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v112 = (uint64_t)v104 - v6;
  v114 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  v7 = MEMORY[0x24BDAC7A8](v114);
  v106 = (uint64_t)v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v108 = (uint64_t)v104 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v115 = (char *)v104 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v111 = (char *)v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v117 = (char *)v104 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v104 - v17;
  v19 = type metadata accessor for AdjustedAsset();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v104 - v23;
  v25 = sub_213B2BBD0();
  v26 = *(char **)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v107 = (char *)v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v110 = (char *)v104 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v109 = (char *)v104 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v118 = (char *)v104 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v121 = (char *)v104 - v35;
  LODWORD(v120) = *a1;
  v113 = v1;
  v36 = *(void **)(v1 + 16);
  v116 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v19;
  v37 = (uint64_t)&v24[*(int *)(v19 + 20)];
  v38 = v36;
  swift_bridgeObjectRetain();
  v39 = v38;
  swift_bridgeObjectRetain();
  sub_213B15540(v37);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(_QWORD *)v24 = 0xD000000000000017;
  *((_QWORD *)v24 + 1) = 0x8000000213B335F0;
  *((_QWORD *)v24 + 2) = v39;
  *((_QWORD *)v24 + 3) = 7761773;
  *((_QWORD *)v24 + 4) = 0xE300000000000000;
  v24[40] = 0;
  swift_bridgeObjectRetain();
  v40 = v39;
  swift_bridgeObjectRetain();
  sub_213AD53FC((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  v122[0] = 0xD000000000000017;
  v122[1] = 0x8000000213B335F0;
  v123 = v40;
  v124 = 7761773;
  v125 = 0xE300000000000000;
  v126 = 0;
  GenericAsset.fileURL.getter((uint64_t)v18);
  swift_bridgeObjectRelease();

  v41 = v26;
  swift_bridgeObjectRelease();
  v42 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v26 + 6);
  if (v42(v18, 1, v25) == 1)
    goto LABEL_4;
  v43 = v121;
  v105 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 4);
  v105(v121, v18, v25);
  v44 = *((int *)v116 + 5);
  v116 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v42;
  v45 = (uint64_t)&v22[v44];
  v46 = v40;
  swift_bridgeObjectRetain();
  v47 = v46;
  swift_bridgeObjectRetain();
  sub_213B15540(v45);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  strcpy(v22, "ProxCard_loop");
  *((_WORD *)v22 + 7) = -4864;
  *((_QWORD *)v22 + 2) = v47;
  *((_QWORD *)v22 + 3) = 7761773;
  *((_QWORD *)v22 + 4) = 0xE300000000000000;
  v22[40] = 0;
  swift_bridgeObjectRetain();
  v48 = v47;
  swift_bridgeObjectRetain();
  sub_213AD53FC((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  strcpy((char *)v122, "ProxCard_loop");
  HIWORD(v122[1]) = -4864;
  v123 = v48;
  v124 = 7761773;
  v125 = 0xE300000000000000;
  v126 = 0;
  v18 = v117;
  GenericAsset.fileURL.getter((uint64_t)v117);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v49 = v25;
  if (v116((uint64_t)v18, 1, v25) != 1)
  {
    v61 = (void (*)(uint64_t, char *, uint64_t))v105;
    v105(v118, v18, v25);
    v119 = v41;
    v104[1] = v48;
    if ((v120 & 1) != 0)
    {
      v62 = sub_213B2C47C();
      swift_bridgeObjectRelease();
      v63 = (uint64_t)v115;
      v64 = v121;
      v65 = (uint64_t)v111;
      if ((v62 & 1) == 0)
      {
        v66 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 2);
        v66(v115, v118, v25);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v63 = (uint64_t)v115;
      v64 = v121;
      v65 = (uint64_t)v111;
    }
    v67 = v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48);
    v66 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 2);
    v66((char *)v63, v118, v25);
    v66((char *)v67, v64, v25);
    swift_storeEnumTagMultiPayload();
    if ((v120 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_16:
      type metadata accessor for MobileAssetManager();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v69 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v70 = (void *)sub_213B2BDF8();
      swift_bridgeObjectRelease();
      v71 = (void *)sub_213B2BDF8();
      v72 = objc_msgSend(v69, sel_URLForResource_withExtension_, v70, v71);

      if (v72)
      {
        v73 = v110;
        sub_213B2BBA0();

        v61(v65, v73, v25);
        v74 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))*((_QWORD *)v119 + 7);
        v74(v65, 0, 1, v25);
        if (v116(v65, 1, v25) != 1)
        {
          v120 = v74;
          v75 = v109;
          v61((uint64_t)v109, (char *)v65, v25);
          if (qword_254D18380 != -1)
            swift_once();
          v76 = sub_213B2BCF0();
          __swift_project_value_buffer(v76, (uint64_t)qword_254D18C28);
          v77 = v108;
          sub_213AD52BC(v63, v108, type metadata accessor for VideoViewConfiguration.VideoSequence);
          v78 = v107;
          v66(v107, v75, v49);
          v79 = sub_213B2BCD8();
          v80 = sub_213B2C140();
          if (os_log_type_enabled(v79, v80))
          {
            v81 = swift_slowAlloc();
            v82 = swift_slowAlloc();
            v122[0] = v82;
            *(_DWORD *)v81 = 136315394;
            sub_213AD52BC(v77, v106, type metadata accessor for VideoViewConfiguration.VideoSequence);
            v83 = sub_213B2BE64();
            v127 = sub_213AE1780(v83, v84, v122);
            sub_213B2C254();
            swift_bridgeObjectRelease();
            sub_213AD53FC(v77, type metadata accessor for VideoViewConfiguration.VideoSequence);
            *(_WORD *)(v81 + 12) = 2080;
            sub_213AE1D7C();
            v85 = sub_213B2C458();
            v127 = sub_213AE1780(v85, v86, v122);
            sub_213B2C254();
            swift_bridgeObjectRelease();
            (*((void (**)(char *, uint64_t))v119 + 1))(v78, v49);
            _os_log_impl(&dword_213AC8000, v79, v80, "Creating VideoConfiguration {videoSequence: %s, sceneURL: %s", (uint8_t *)v81, 0x16u);
            swift_arrayDestroy();
            v87 = v82;
            v63 = (uint64_t)v115;
            MEMORY[0x2199BD0E8](v87, -1, -1);
            v88 = v81;
            v75 = v109;
            MEMORY[0x2199BD0E8](v88, -1, -1);
          }
          else
          {
            sub_213AD53FC(v77, type metadata accessor for VideoViewConfiguration.VideoSequence);
            (*((void (**)(char *, uint64_t))v119 + 1))(v78, v49);
          }

          v97 = v112;
          sub_213AD52BC(v63, v112, type metadata accessor for VideoViewConfiguration.VideoSequence);
          v99 = (int *)type metadata accessor for VideoViewConfiguration(0);
          sub_213B15540(v97 + v99[5]);
          v100 = v97 + v99[6];
          v105((char *)v100, v75, v49);
          v120(v100, 0, 1, v49);
          sub_213AE1D5C((uint64_t)v122);
          v101 = (_QWORD *)(v97 + v99[7]);
          *v101 = 0;
          v101[1] = 0;
          v101[2] = 0;
          v101[3] = 1;
          *(int64x2_t *)(v97 + v99[8]) = vdupq_n_s64(0x4093880000000000uLL);
          *(_QWORD *)(v97 + v99[9]) = 0xC082C00000000000;
          sub_213AD64BC((uint64_t)v122, v97 + v99[10], &qword_254D18960);
          *(_QWORD *)(v97 + v99[11]) = 0;
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v99 - 1) + 56))(v97, 0, 1, v99);
          v96 = v113;
LABEL_30:
          v60 = sub_213B176E8(v97, *(_QWORD *)(v96 + 24));
          sub_213AD6270(v97, &qword_254D18C58);
          sub_213AD53FC(v63, type metadata accessor for VideoViewConfiguration.VideoSequence);
          v102 = (void (*)(char *, uint64_t))*((_QWORD *)v119 + 1);
          v102(v118, v49);
          v102(v121, v49);
          return v60;
        }
      }
      else
      {
        (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v119 + 7))(v65, 1, 1, v25);
      }
      sub_213AD6270(v65, &qword_254D188E0);
      if (qword_254D18380 != -1)
        swift_once();
      v89 = sub_213B2BCF0();
      __swift_project_value_buffer(v89, (uint64_t)qword_254D18C28);
      v90 = sub_213B2BCD8();
      v91 = sub_213B2C164();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = (uint8_t *)swift_slowAlloc();
        v93 = swift_slowAlloc();
        v122[0] = v93;
        *(_DWORD *)v92 = 136315138;
        LOBYTE(v127) = (_BYTE)v120;
        v94 = sub_213B2BE64();
        v127 = sub_213AE1780(v94, v95, v122);
        v63 = (uint64_t)v115;
        sub_213B2C254();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213AC8000, v90, v91, "Missing sceneFile -- Failed to create VideoViewConfiguration {identifier: %s}", v92, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v93, -1, -1);
        MEMORY[0x2199BD0E8](v92, -1, -1);
      }

      v96 = v113;
      v97 = v112;
      v98 = type metadata accessor for VideoViewConfiguration(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v97, 1, 1, v98);
      goto LABEL_30;
    }
LABEL_14:
    sub_213B2C47C();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  (*((void (**)(char *, uint64_t))v41 + 1))(v43, v25);
LABEL_4:
  sub_213AD6270((uint64_t)v18, &qword_254D188E0);
  if (qword_254D18380 != -1)
    swift_once();
  v50 = sub_213B2BCF0();
  __swift_project_value_buffer(v50, (uint64_t)qword_254D18C28);
  v51 = sub_213B2BCD8();
  v52 = sub_213B2C164();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    v54 = swift_slowAlloc();
    v122[0] = v54;
    *(_DWORD *)v53 = 136315138;
    LOBYTE(v127) = (_BYTE)v120;
    v55 = sub_213B2BE64();
    v127 = sub_213AE1780(v55, v56, v122);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213AC8000, v51, v52, "Could not find AirTagPairingAssets.view files {identifier: %s}", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v54, -1, -1);
    MEMORY[0x2199BD0E8](v53, -1, -1);
  }

  v57 = type metadata accessor for VideoViewConfiguration(0);
  v58 = (uint64_t)v119;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v119, 1, 1, v57);
  v59 = objc_allocWithZone((Class)type metadata accessor for AdjustedVideoView());
  return sub_213B1B370(v58);
}

uint64_t AirTagPairing2.Assets.deinit()
{
  uint64_t v0;

  swift_release();
  sub_213AD5344(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
  return v0;
}

uint64_t AirTagPairing2.Assets.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_213AD5344(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t sub_213ADE4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  sub_213B2C02C();
  v8[7] = sub_213B2C020();
  sub_213B2BFE4();
  return swift_task_switch();
}

uint64_t sub_213ADE548()
{
  _QWORD *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t (*v12)(void);

  v1 = (void *)v0[6];
  v2 = v0[4];
  v3 = v0[5];
  v5 = (_QWORD *)v0[2];
  v4 = v0[3];
  swift_release();
  v6 = v5[4];
  v7 = v5[5];
  v8 = v5[6];
  v9 = (void *)v5[7];
  v5[4] = v4;
  v5[5] = v2;
  v5[6] = v3;
  v5[7] = v1;
  sub_213AD5344(v6, v7, v8, v9);
  sub_213AD5300(v4, v2);
  v12 = (uint64_t (*)(void))v0[1];
  v10 = v1;
  return v12();
}

uint64_t sub_213ADE5BC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v9 = (void *)a1[3];
  v11 = sub_213B2C050();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_213B2C02C();
  swift_retain();
  sub_213AD5300(v7, v8);
  v12 = v9;
  v13 = sub_213B2C020();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v6;
  v14[5] = v7;
  v14[6] = v8;
  v14[7] = v10;
  v14[8] = v9;
  sub_213AE4204((uint64_t)v5, (uint64_t)&unk_254D18DC0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_213ADE6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213ADE6E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = *(_QWORD *)(v0[3] + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E20);
  type metadata accessor for MobileAssetResult();
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_213ADE7A8;
  return sub_213B2C3EC();
}

uint64_t sub_213ADE7A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213ADE81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213ADE838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = *(_QWORD *)(v0[3] + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E20);
  type metadata accessor for MobileAssetResult();
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_213ADE7A8;
  return sub_213B2C3EC();
}

uint64_t sub_213ADE8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213ADE914()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = *(_QWORD *)(v0[3] + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E20);
  type metadata accessor for MobileAssetResult();
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_213ADE9D4;
  return sub_213B2C3EC();
}

uint64_t sub_213ADE9D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213ADEA48()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213ADEA7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_213B2BBD0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213ADEADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(unsigned __int8 *)(v1 + 88);
  *(_BYTE *)(v0 + 136) = v4;
  if (v4 == 255)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_213ADAE48(v2, v3, v4);
    v5 = sub_213AFA9E8();
    *(_QWORD *)(v0 + 64) = v5;
    v6 = sub_213AFAA04();
    *(_QWORD *)(v0 + 72) = v6;
    v7 = qword_254D18390;
    v8 = v5;
    v9 = v6;
    if (v7 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v13 = *(_QWORD *)(v0 + 16);
    v12 = *(_QWORD *)(v0 + 24);
    v14 = __swift_project_value_buffer(v12, (uint64_t)qword_254D18FB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v14, v12);
    type metadata accessor for PersonalizationAssetManager();
    swift_allocObject();
    v15 = PersonalizationAssetManager.init(container:manateeContainer:cacheDirectory:)(v8, v9, v10);
    *(_QWORD *)(v0 + 80) = v15;
    v16 = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v0 + 88) = v16;
    v17 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v0 + 96) = v17;
    v18 = swift_allocObject();
    *(_QWORD *)(v0 + 104) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v2;
    *(_QWORD *)(v18 + 32) = v3;
    *(_BYTE *)(v18 + 40) = v4 & 1;
    *(_QWORD *)(v18 + 48) = v16;
    *(_QWORD *)(v18 + 56) = v17;
    sub_213B2C02C();
    sub_213AD52AC(v16);
    sub_213ADAE48(v2, v3, v4);
    sub_213AD52AC(v16);
    swift_retain();
    *(_QWORD *)(v0 + 112) = sub_213B2C020();
    sub_213B2BFE4();
    return swift_task_switch();
  }
}

uint64_t sub_213ADECE4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[13];
  swift_release();
  type metadata accessor for PersonalizationDownloadTaskManager();
  swift_allocObject();
  v0[15] = sub_213AD678C((uint64_t)&unk_254D18F88, v1, 1.0);
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_213ADED68;
  return sub_213AD683C();
}

uint64_t sub_213ADED68()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213ADEDBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_213B2BBD0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213ADEE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(unsigned __int8 *)(v1 + 88);
  *(_BYTE *)(v0 + 136) = v4;
  if (v4 == 255)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_213ADAE48(v2, v3, v4);
    v5 = sub_213AFA9E8();
    *(_QWORD *)(v0 + 64) = v5;
    v6 = sub_213AFAA04();
    *(_QWORD *)(v0 + 72) = v6;
    v7 = qword_254D18390;
    v8 = v5;
    v9 = v6;
    if (v7 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v13 = *(_QWORD *)(v0 + 16);
    v12 = *(_QWORD *)(v0 + 24);
    v14 = __swift_project_value_buffer(v12, (uint64_t)qword_254D18FB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v14, v12);
    type metadata accessor for PersonalizationAssetManager();
    swift_allocObject();
    v15 = PersonalizationAssetManager.init(container:manateeContainer:cacheDirectory:)(v8, v9, v10);
    *(_QWORD *)(v0 + 80) = v15;
    v16 = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v0 + 88) = v16;
    v17 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v0 + 96) = v17;
    v18 = swift_allocObject();
    *(_QWORD *)(v0 + 104) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v2;
    *(_QWORD *)(v18 + 32) = v3;
    *(_BYTE *)(v18 + 40) = v4 & 1;
    *(_QWORD *)(v18 + 48) = v16;
    *(_QWORD *)(v18 + 56) = v17;
    sub_213B2C02C();
    sub_213AD52AC(v16);
    sub_213ADAE48(v2, v3, v4);
    sub_213AD52AC(v16);
    swift_retain();
    *(_QWORD *)(v0 + 112) = sub_213B2C020();
    sub_213B2BFE4();
    return swift_task_switch();
  }
}

uint64_t sub_213ADF024()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[13];
  swift_release();
  type metadata accessor for PersonalizationDownloadTaskManager();
  swift_allocObject();
  v0[15] = sub_213AD678C((uint64_t)&unk_254D18EE8, v1, 1.0);
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_213ADED68;
  return sub_213AD683C();
}

uint64_t sub_213ADF0A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_213B2BBD0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213ADF108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(unsigned __int8 *)(v1 + 88);
  *(_BYTE *)(v0 + 136) = v4;
  if (v4 == 255)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_213ADAE48(v2, v3, v4);
    v5 = sub_213AFA9E8();
    *(_QWORD *)(v0 + 64) = v5;
    v6 = sub_213AFAA04();
    *(_QWORD *)(v0 + 72) = v6;
    v7 = qword_254D18390;
    v8 = v5;
    v9 = v6;
    if (v7 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v13 = *(_QWORD *)(v0 + 16);
    v12 = *(_QWORD *)(v0 + 24);
    v14 = __swift_project_value_buffer(v12, (uint64_t)qword_254D18FB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v14, v12);
    type metadata accessor for PersonalizationAssetManager();
    swift_allocObject();
    v15 = PersonalizationAssetManager.init(container:manateeContainer:cacheDirectory:)(v8, v9, v10);
    *(_QWORD *)(v0 + 80) = v15;
    v16 = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v0 + 88) = v16;
    v17 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v0 + 96) = v17;
    v18 = swift_allocObject();
    *(_QWORD *)(v0 + 104) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v2;
    *(_QWORD *)(v18 + 32) = v3;
    *(_BYTE *)(v18 + 40) = v4 & 1;
    *(_QWORD *)(v18 + 48) = v16;
    *(_QWORD *)(v18 + 56) = v17;
    sub_213B2C02C();
    sub_213AD52AC(v16);
    sub_213ADAE48(v2, v3, v4);
    sub_213AD52AC(v16);
    swift_retain();
    *(_QWORD *)(v0 + 112) = sub_213B2C020();
    sub_213B2BFE4();
    return swift_task_switch();
  }
}

uint64_t sub_213ADF310()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[13];
  swift_release();
  type metadata accessor for PersonalizationDownloadTaskManager();
  swift_allocObject();
  v0[15] = sub_213AD678C((uint64_t)&unk_254D18E18, v1, 1.0);
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_213ADF394;
  return sub_213AD683C();
}

uint64_t sub_213ADF394()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213ADF3E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(void **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 136);
  sub_213AD529C(*(_QWORD *)(v0 + 88));
  swift_release();

  sub_213ADACE4(v5, v3, v6);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_213ADF470(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(double *)(v4 + 96) = a4;
  *(_QWORD *)(v4 + 80) = a2;
  *(_QWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 72) = a1;
  v5 = type metadata accessor for MobileAssetResult();
  *(_QWORD *)(v4 + 104) = v5;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E38);
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E20);
  *(_QWORD *)(v4 + 136) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E40);
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  *(_QWORD *)(v4 + 184) = swift_task_alloc();
  *(_QWORD *)(v4 + 192) = swift_task_alloc();
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  *(_QWORD *)(v4 + 208) = swift_task_alloc();
  *(_QWORD *)(v4 + 216) = swift_task_alloc();
  *(_QWORD *)(v4 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213ADF5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v1 = v0[11];
  v2 = *(_QWORD *)(v1 + 16);
  v0[29] = v2;
  if (v2)
  {
    v38 = v0 + 2;
    v3 = sub_213B2C050();
    v4 = *(_QWORD *)(v3 - 8);
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)(v1 + 48);
    v6 = &qword_254D19090;
    v37 = v2;
    v7 = v2;
    do
    {
      v41 = v7;
      v42 = v5;
      v10 = v0[27];
      v9 = v0[28];
      v11 = v6;
      v12 = v4;
      v13 = *(v5 - 2);
      v14 = *(v5 - 1);
      v15 = *v5;
      v39(v9, 1, 1, v3);
      v16 = (_QWORD *)swift_allocObject();
      v16[2] = 0;
      v16[3] = 0;
      v16[4] = v13;
      v16[5] = v14;
      v16[6] = v15;
      v4 = v12;
      v6 = v11;
      v0 = (_QWORD *)v40;
      sub_213AD6478(v9, v10, v6);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3);
      swift_retain_n();
      v17 = *(_QWORD *)(v40 + 216);
      if ((_DWORD)v10 == 1)
      {
        sub_213AD6270(*(_QWORD *)(v40 + 216), v6);
      }
      else
      {
        sub_213B2C044();
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v3);
      }
      if (v16[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v18 = sub_213B2BFE4();
        v20 = v19;
        swift_unknownObjectRelease();
      }
      else
      {
        v18 = 0;
        v20 = 0;
      }
      v21 = **(_QWORD **)(v40 + 80);
      v22 = (_QWORD *)(v20 | v18);
      if (v20 | v18)
      {
        v22 = v38;
        *v38 = 0;
        v38[1] = 0;
        *(_QWORD *)(v40 + 32) = v18;
        *(_QWORD *)(v40 + 40) = v20;
      }
      v8 = *(_QWORD *)(v40 + 224);
      *(_QWORD *)(v40 + 48) = 1;
      *(_QWORD *)(v40 + 56) = v22;
      *(_QWORD *)(v40 + 64) = v21;
      swift_task_create();
      swift_release();
      swift_release();
      sub_213AD6270(v8, v6);
      v5 = v42 + 3;
      v7 = v41 - 1;
    }
    while (v41 != 1);
    swift_bridgeObjectRelease();
    v2 = v37;
  }
  v23 = v0[26];
  v24 = v0[12];
  v25 = sub_213B2C050();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 1, 1, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v24;
  sub_213AE0C08(v23, (uint64_t)&unk_254D18E60, (uint64_t)v26, &qword_254D18E20);
  sub_213AD6270(v23, &qword_254D19090);
  if (v2)
  {
    v27 = v0[11];
    v28 = *(_QWORD *)(v27 + 32);
    v29 = v2 - 1;
    if (v29)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v30 = v27 + 72;
      do
      {
        v31 = *(_QWORD *)(v30 - 16);
        if (v28 < v31)
        {
          swift_retain();
          swift_release();
          v28 = v31;
        }
        v30 += 24;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    v28 = -1;
  }
  *(_QWORD *)(v40 + 240) = v28;
  v32 = *(_QWORD *)(v40 + 200);
  v33 = *(_QWORD *)(v40 + 104);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 112) + 56);
  *(_QWORD *)(v40 + 248) = v34;
  v34(v32, 1, 1, v33);
  *(_OWORD *)(v40 + 256) = xmmword_213B2EB50;
  v35 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v40 + 272) = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E68);
  *v35 = v40;
  v35[1] = sub_213ADF9A0;
  return sub_213B2C080();
}

uint64_t sub_213ADF9A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213ADFA04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v1 = v0[16];
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[18] + 48))(v1, 1, v0[17]) == 1)
  {
    sub_213AD6270(v1, &qword_254D18E38);
    sub_213AD62AC();
    swift_allocError();
    *(_OWORD *)v2 = xmmword_213B2EB70;
    *(_BYTE *)(v2 + 16) = 2;
    swift_willThrow();
LABEL_7:
    sub_213AD6270(v0[25], &qword_254D18E40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  v4 = v0[19];
  v3 = v0[20];
  sub_213AD64BC(v1, v3, &qword_254D18E20);
  sub_213AD6478(v3, v4, &qword_254D18E20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E70);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    v6 = v0[25];
    v7 = v0[22];
    v8 = v0[13];
    v9 = v0[14];
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    sub_213B2C08C();
    sub_213AD6478(v6, v7, &qword_254D18E40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      v10 = v0[20];
      sub_213AD6270(v0[22], &qword_254D18E40);
      sub_213AD62AC();
      swift_allocError();
      *(_OWORD *)v11 = xmmword_213B2EB70;
      *(_BYTE *)(v11 + 16) = 2;
      swift_willThrow();
      v12 = v10;
LABEL_6:
      sub_213AD6270(v12, &qword_254D18E20);
      goto LABEL_7;
    }
    v33 = v0[22];
LABEL_17:
    v35 = v0[25];
    v36 = v0[9];
    sub_213AD6270(v0[20], &qword_254D18E20);
    sub_213AD6270(v35, &qword_254D18E40);
    sub_213AE36D0(v33, v36, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  v14 = v0[32];
  v15 = v0[19];
  v16 = *(_QWORD *)(v15 + *(int *)(v5 + 48));
  result = sub_213AD64BC(v15, v0[24], &qword_254D18E40);
  v18 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    v19 = v0[23];
    v20 = v0[13];
    v21 = v0[14];
    sub_213AD6478(v0[24], v19, &qword_254D18E40);
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
    v23 = v22(v19, 1, v20);
    v24 = v0[23];
    if (v23 == 1)
    {
      v25 = v0[29];
      sub_213AD6270(v24, &qword_254D18E40);
      if (v18 == v25)
      {
        v27 = v0 + 21;
        v26 = v0[21];
        v28 = v0[25];
        v29 = v0[13];
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
        sub_213B2C08C();
        sub_213AD6478(v28, v26, &qword_254D18E40);
        if (v22(v26, 1, v29) == 1)
        {
          v30 = v0[24];
          v31 = v0[20];
          sub_213AD6270(v0[21], &qword_254D18E40);
          sub_213AD62AC();
          swift_allocError();
          *(_OWORD *)v32 = xmmword_213B2EB60;
          *(_BYTE *)(v32 + 16) = 2;
          swift_willThrow();
          sub_213AD6270(v30, &qword_254D18E40);
          v12 = v31;
          goto LABEL_6;
        }
        goto LABEL_16;
      }
      v37 = v0[20];
      sub_213AD6270(v0[24], &qword_254D18E40);
      sub_213AD6270(v37, &qword_254D18E20);
    }
    else
    {
      v27 = v0 + 15;
      v34 = v0[30];
      sub_213AE36D0(v24, v0[15], (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
      if (v16 == v34)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
        sub_213B2C08C();
LABEL_16:
        v33 = *v27;
        sub_213AD6270(v0[24], &qword_254D18E40);
        goto LABEL_17;
      }
      v38 = v0[33];
      v39 = v0[20];
      sub_213AD6270(v0[24], &qword_254D18E40);
      sub_213AD6270(v39, &qword_254D18E20);
      if (v38 < v16)
      {
        v40 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[31];
        v41 = v0[25];
        v42 = v0[15];
        v43 = v0[13];
        sub_213AD6270(v41, &qword_254D18E40);
        sub_213AE36D0(v42, v41, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
        v40(v41, 0, 1, v43);
LABEL_24:
        v0[32] = v18;
        v0[33] = v16;
        v44 = (_QWORD *)swift_task_alloc();
        v0[34] = v44;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E68);
        *v44 = v0;
        v44[1] = sub_213ADF9A0;
        return sub_213B2C080();
      }
      sub_213AD53FC(v0[15], (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
    }
    v16 = v0[33];
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_213AE003C()
{
  uint64_t v0;

  sub_213AD6270(*(_QWORD *)(v0 + 200), &qword_254D18E40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE0120(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;

  *(double *)(v4 + 136) = a4;
  *(_QWORD *)(v4 + 120) = a2;
  *(_QWORD *)(v4 + 128) = a3;
  *(_QWORD *)(v4 + 112) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213AE01A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  v1 = v0[16];
  v2 = *(_QWORD *)(v1 + 16);
  v0[21] = v2;
  if (v2)
  {
    v35 = v0 + 7;
    v3 = sub_213B2C050();
    v4 = *(_QWORD *)(v3 - 8);
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v37 = v3;
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)(v1 + 48);
    v6 = &qword_254D19090;
    v34 = v2;
    v7 = v2;
    do
    {
      v39 = v7;
      v40 = v5;
      v10 = v0[19];
      v9 = v0[20];
      v11 = v6;
      v12 = v4;
      v14 = *(v5 - 2);
      v13 = *(v5 - 1);
      v15 = *v5;
      v36(v9, 1, 1, v37);
      v16 = (_QWORD *)swift_allocObject();
      v16[2] = 0;
      v16[3] = 0;
      v16[4] = v14;
      v4 = v12;
      v6 = v11;
      v0 = (_QWORD *)v38;
      v16[5] = v13;
      v16[6] = v15;
      sub_213AD6478(v9, v10, v6);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v10, 1, v37);
      swift_retain_n();
      v17 = *(_QWORD *)(v38 + 152);
      if ((_DWORD)v10 == 1)
      {
        sub_213AD6270(*(_QWORD *)(v38 + 152), v6);
      }
      else
      {
        sub_213B2C044();
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v37);
      }
      if (v16[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v18 = sub_213B2BFE4();
        v20 = v19;
        swift_unknownObjectRelease();
      }
      else
      {
        v18 = 0;
        v20 = 0;
      }
      v21 = **(_QWORD **)(v38 + 120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F10);
      v22 = (_QWORD *)(v20 | v18);
      if (v20 | v18)
      {
        v22 = v35;
        *v35 = 0;
        v35[1] = 0;
        *(_QWORD *)(v38 + 72) = v18;
        *(_QWORD *)(v38 + 80) = v20;
      }
      v8 = *(_QWORD *)(v38 + 160);
      *(_QWORD *)(v38 + 88) = 1;
      *(_QWORD *)(v38 + 96) = v22;
      *(_QWORD *)(v38 + 104) = v21;
      swift_task_create();
      swift_release();
      swift_release();
      sub_213AD6270(v8, v6);
      v5 = v40 + 3;
      v7 = v39 - 1;
    }
    while (v39 != 1);
    swift_bridgeObjectRelease();
    v2 = v34;
  }
  v23 = v0[18];
  v24 = v0[17];
  v25 = sub_213B2C050();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 1, 1, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v24;
  sub_213AE0C08(v23, (uint64_t)&unk_254D18F20, (uint64_t)v26, &qword_254D18F10);
  sub_213AD6270(v23, &qword_254D19090);
  if (v2)
  {
    v27 = v0[16];
    v28 = *(_QWORD *)(v27 + 32);
    v29 = v2 - 1;
    if (v29)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v30 = v27 + 72;
      do
      {
        v31 = *(_QWORD *)(v30 - 16);
        if (v28 < v31)
        {
          swift_retain();
          swift_release();
          v28 = v31;
        }
        v30 += 24;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    v28 = -1;
  }
  *(_QWORD *)(v38 + 176) = v28;
  *(_QWORD *)(v38 + 216) = 0;
  *(_QWORD *)(v38 + 224) = 1;
  *(_QWORD *)(v38 + 200) = 0;
  *(_QWORD *)(v38 + 208) = 0;
  *(_OWORD *)(v38 + 184) = xmmword_213B2EB50;
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v38 + 232) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F28);
  *v32 = v38;
  v32[1] = sub_213AE056C;
  return sub_213B2C080();
}

uint64_t sub_213AE056C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_213AE05D0()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  int64x2_t v23;
  int8x16_t v24;
  _OWORD *v25;
  _QWORD *v26;
  __int128 v27;
  int8x16_t v28;
  __int128 v29;
  int8x16_t v30;

  v1 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  if (v2 == 3)
  {
    v4 = *(_QWORD *)(v0 + 216);
    v3 = *(void **)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 208);
    sub_213AD62AC();
    swift_allocError();
    *(_OWORD *)v7 = xmmword_213B2EB70;
    *(_BYTE *)(v7 + 16) = 2;
    swift_willThrow();
    sub_213AD5344(v6, v5, v4, v3);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = *(void (**)(void))(v0 + 8);
LABEL_19:
    v10();
    return;
  }
  if (v2 == 2)
  {
    v8 = *(_QWORD *)(v0 + 224);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    sub_213B2C08C();
    if (v8 == 1)
    {
      sub_213AD62AC();
      swift_allocError();
      *(_OWORD *)v9 = xmmword_213B2EB70;
      *(_BYTE *)(v9 + 16) = 2;
      swift_willThrow();
      goto LABEL_6;
    }
    goto LABEL_17;
  }
  v11 = *(_QWORD *)(v0 + 184);
  v12 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    v13 = *(_QWORD *)(v0 + 48);
    if (v2 == 1)
    {
      v2 = *(_QWORD *)(v0 + 224);
      if (v12 == *(_QWORD *)(v0 + 168))
      {
        v14 = *(_OWORD *)(v0 + 16);
        v15 = *(_QWORD *)(v0 + 32);
        sub_213AD6384((id)v1, *((unint64_t *)&v1 + 1), v15, (void *)1);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
        sub_213B2C08C();
        if (v2 == 1)
        {
          sub_213AD62AC();
          swift_allocError();
          *(_OWORD *)v16 = xmmword_213B2EB60;
          *(_BYTE *)(v16 + 16) = 2;
          swift_willThrow();
          sub_213AD8128(v14, *((unint64_t *)&v14 + 1), v15, (void *)1);
          goto LABEL_6;
        }
        sub_213AD8128(v14, *((unint64_t *)&v14 + 1), v15, (void *)1);
LABEL_17:
        v21 = *(_OWORD *)(v0 + 216);
        v22 = *(_OWORD *)(v0 + 200);
        goto LABEL_18;
      }
    }
    else
    {
      if (v13 == *(_QWORD *)(v0 + 176))
      {
        v17 = *(_QWORD *)(v0 + 216);
        v18 = *(void **)(v0 + 224);
        v20 = *(_QWORD *)(v0 + 200);
        v19 = *(_QWORD *)(v0 + 208);
        v27 = *(_OWORD *)(v0 + 16);
        v29 = *(_OWORD *)(v0 + 32);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
        sub_213B2C08C();
        sub_213AD5344(v20, v19, v17, v18);
        v22 = v27;
        v21 = v29;
LABEL_18:
        v25 = *(_OWORD **)(v0 + 112);
        *v25 = v22;
        v25[1] = v21;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v10 = *(void (**)(void))(v0 + 8);
        goto LABEL_19;
      }
      if (*(_QWORD *)(v0 + 192) < v13)
      {
        v28 = *(int8x16_t *)(v0 + 16);
        v30 = *(int8x16_t *)(v0 + 32);
        sub_213AD5344(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(void **)(v0 + 224));
        v23 = vdupq_lane_s64(v28.i64[0], 0);
        v23.i64[0] = v13;
        v24 = vextq_s8(v28, v30, 8uLL);
LABEL_22:
        *(_QWORD *)(v0 + 224) = v2;
        *(int64x2_t *)(v0 + 192) = v23;
        *(int8x16_t *)(v0 + 208) = v24;
        *(_QWORD *)(v0 + 184) = v12;
        v26 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 232) = v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F28);
        *v26 = v0;
        v26[1] = sub_213AE056C;
        sub_213B2C080();
        return;
      }
      sub_213AD5344(v1, *((unint64_t *)&v1 + 1), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
      v2 = *(_QWORD *)(v0 + 224);
    }
    v23 = *(int64x2_t *)(v0 + 192);
    v24 = *(int8x16_t *)(v0 + 208);
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t sub_213AE098C()
{
  uint64_t v0;

  sub_213AD5344(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(void **)(v0 + 224));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE09E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v5[2] = a1;
  v5[3] = a4;
  v9 = (uint64_t (*)(uint64_t))((char *)a5 + *a5);
  v7 = (_QWORD *)swift_task_alloc();
  v5[4] = v7;
  *v7 = v5;
  v7[1] = sub_213AE0A50;
  return v9(a1);
}

uint64_t sub_213AE0A50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E70);
  *(_QWORD *)(v2 + 40) = v5;
  *(_DWORD *)(v2 + 48) = *(_DWORD *)(v5 + 48);
  return swift_task_switch();
}

uint64_t sub_213AE0AD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(*(_QWORD *)(v0 + 16) + *(int *)(v0 + 48)) = *(_QWORD *)(v0 + 24);
  (*(void (**)(void))(*(_QWORD *)(v1 - 8) + 56))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE0B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v5[2] = a1;
  v5[3] = a4;
  v9 = (uint64_t (*)(uint64_t))((char *)a5 + *a5);
  v7 = (_QWORD *)swift_task_alloc();
  v5[4] = v7;
  *v7 = v5;
  v7[1] = sub_213AE0B88;
  return v9(a1);
}

uint64_t sub_213AE0B88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_213AE0BF4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32) = *(_QWORD *)(v0 + 24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE0C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];
  _QWORD v21[4];

  v6 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213AD6478(a1, (uint64_t)v11, &qword_254D19090);
  v12 = sub_213B2C050();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_213AD6270((uint64_t)v11, &qword_254D19090);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_213B2BFE4();
      v16 = v15;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_213B2C044();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v14 = 0;
  v16 = 0;
LABEL_6:
  v17 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v18 = (_QWORD *)(v16 | v14);
  if (v16 | v14)
  {
    v21[0] = 0;
    v21[1] = 0;
    v18 = v21;
    v21[2] = v14;
    v21[3] = v16;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v17;
  swift_task_create();
  return swift_release();
}

uint64_t sub_213AE0DA4(uint64_t a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 16) = a1;
  return swift_task_switch();
}

void sub_213AE0DC0()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 24) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v2;
    *v2 = v0;
    v2[1] = sub_213AE0E5C;
    sub_213B2C068();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_213AE0E5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE0EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE0F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE0F78(uint64_t a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 16) = a1;
  return swift_task_switch();
}

void sub_213AE0F94()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 24) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v2;
    *v2 = v0;
    v2[1] = sub_213AE1030;
    sub_213B2C068();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_213AE1030()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE1094()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_OWORD *)(v1 + 24) = xmmword_213B2EB80;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE10B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_OWORD *)(v1 + 24) = xmmword_213B2EB80;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE1104(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *sub_213AE111C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E88);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213AE3168(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213AE123C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C08);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213AE2F74(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213AE1348(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E78);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213AE305C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213AE146C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F30);
  v10 = *(_QWORD *)(sub_213B2BBD0() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_213B2C380();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_213B2BBD0() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_213AE3274(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_213AE1674(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F38);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213AE338C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213AE1780(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_213AE1850(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_213AE39F4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_213AE39F4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_213AE1850(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_213B2C260();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_213AE1A08(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_213B2C338();
  if (!v8)
  {
    sub_213B2C380();
    __break(1u);
LABEL_17:
    result = sub_213B2C3C8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_213AE1A08(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_213AE1A9C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_213AE1C10(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_213AE1C10(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_213AE1A9C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_213B12AF8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_213B2C2F0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_213B2C380();
      __break(1u);
LABEL_10:
      v2 = sub_213B2BEC4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_213B2C3C8();
    __break(1u);
LABEL_14:
    result = sub_213B2C380();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_213AE1C10(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F48);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

double sub_213AE1D5C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 1;
  return result;
}

unint64_t sub_213AE1D7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D19030;
  if (!qword_254D19030)
  {
    v1 = sub_213B2BBD0();
    result = MEMORY[0x2199BD010](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_254D19030);
  }
  return result;
}

unint64_t sub_213AE1DC8()
{
  unint64_t result;

  result = qword_254D18C60;
  if (!qword_254D18C60)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing2.Configuration.Color, &type metadata for AirTagPairing2.Configuration.Color);
    atomic_store(result, (unint64_t *)&qword_254D18C60);
  }
  return result;
}

unint64_t sub_213AE1E10()
{
  unint64_t result;

  result = qword_254D18C68;
  if (!qword_254D18C68)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagHardwareModel, &type metadata for AirTagHardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D18C68);
  }
  return result;
}

unint64_t sub_213AE1E58()
{
  unint64_t result;

  result = qword_254D18C70;
  if (!qword_254D18C70)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagHardwareModel, &type metadata for AirTagHardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D18C70);
  }
  return result;
}

unint64_t sub_213AE1EA0()
{
  unint64_t result;

  result = qword_254D18CC0;
  if (!qword_254D18CC0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing2.Assets.AdjustedImageIdentifier, &type metadata for AirTagPairing2.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D18CC0);
  }
  return result;
}

uint64_t sub_213AE1EE4()
{
  return sub_213AE1FE0(&qword_254D18CC8, &qword_254D18CD0);
}

unint64_t sub_213AE1F0C()
{
  unint64_t result;

  result = qword_254D18CD8;
  if (!qword_254D18CD8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing2.Assets.VideoIdentifier, &type metadata for AirTagPairing2.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D18CD8);
  }
  return result;
}

uint64_t sub_213AE1F50()
{
  return sub_213AE1FE0(&qword_254D18CE0, &qword_254D18CE8);
}

unint64_t sub_213AE1F78()
{
  unint64_t result;

  result = qword_254D18CF0;
  if (!qword_254D18CF0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing2.Assets.ViewIdentifier, &type metadata for AirTagPairing2.Assets.ViewIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D18CF0);
  }
  return result;
}

uint64_t sub_213AE1FBC()
{
  return sub_213AE1FE0(&qword_254D18CF8, &qword_254D18D00);
}

uint64_t sub_213AE1FE0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2199BD010](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213AE2020@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(result + 40) & 1) != 0)
  {
    v4 = 0;
    v3 = 0xF000000000000000;
  }
  else
  {
    v4 = *(_QWORD *)(result + 24);
    v3 = *(_QWORD *)(result + 32);
    result = sub_213ADAE48(v4, v3, *(_BYTE *)(result + 40));
  }
  *a2 = v4;
  a2[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing2()
{
  return &type metadata for AirTagPairing2;
}

uint64_t destroy for AirTagPairing2.Configuration(uint64_t result)
{
  int v1;

  v1 = *(unsigned __int8 *)(result + 40);
  if (v1 != 255)
    return sub_213ADACFC(*(_QWORD *)(result + 24), *(_QWORD *)(result + 32), v1 & 1);
  return result;
}

uint64_t initializeWithCopy for AirTagPairing2.Configuration(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;
  uint64_t v5;
  unint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 == 255)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  }
  else
  {
    v4 = v3 & 1;
    v5 = *(_QWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 32);
    sub_213ADAC20(v5, v6, v3 & 1);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for AirTagPairing2.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  int v5;
  char v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = a1 + 24;
  v4 = (__int128 *)(a2 + 24);
  v5 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v5 == 255)
    {
      v7 = *v4;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_OWORD *)v3 = v7;
    }
    else
    {
      v14 = v5 & 1;
      v15 = *(_QWORD *)(a2 + 24);
      v16 = *(_QWORD *)(a2 + 32);
      sub_213ADAC20(v15, v16, v5 & 1);
      *(_QWORD *)(a1 + 24) = v15;
      *(_QWORD *)(a1 + 32) = v16;
      *(_BYTE *)(a1 + 40) = v14;
    }
  }
  else if (v5 == 255)
  {
    sub_213AE2208(a1 + 24);
    v6 = *((_BYTE *)v4 + 16);
    *(_OWORD *)v3 = *v4;
    *(_BYTE *)(v3 + 16) = v6;
  }
  else
  {
    v8 = v5 & 1;
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    sub_213ADAC20(v9, v10, v5 & 1);
    v11 = *(_QWORD *)(a1 + 24);
    v12 = *(_QWORD *)(a1 + 32);
    v13 = *(_BYTE *)(a1 + 40);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_BYTE *)(a1 + 40) = v8;
    sub_213ADACFC(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_213AE2208(uint64_t a1)
{
  destroy for PersonalizationAssetManager.AssetInfo(a1);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AirTagPairing2.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = a1 + 24;
  v4 = a2 + 24;
  v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 != 255)
  {
    v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 != 255)
    {
      v7 = *(_QWORD *)(a1 + 24);
      v8 = *(_QWORD *)(a1 + 32);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
      *(_BYTE *)(a1 + 40) = v6 & 1;
      sub_213ADACFC(v7, v8, v5 & 1);
      return a1;
    }
    sub_213AE2208(a1 + 24);
  }
  *(_OWORD *)v3 = *(_OWORD *)v4;
  *(_BYTE *)(v3 + 16) = *(_BYTE *)(v4 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AirTagPairing2.Configuration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = (v3 ^ 0xFF) - 1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AirTagPairing2.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing2.Configuration()
{
  return &type metadata for AirTagPairing2.Configuration;
}

_BYTE *sub_213AE239C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing2.Configuration.Color()
{
  return &type metadata for AirTagPairing2.Configuration.Color;
}

ValueMetadata *type metadata accessor for AirTagPairing2.AssetRequest()
{
  return &type metadata for AirTagPairing2.AssetRequest;
}

uint64_t type metadata accessor for AirTagPairing2.Assets()
{
  return objc_opt_self();
}

uint64_t method lookup function for AirTagPairing2.Assets()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for AirTagHardwareModel(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AirTagPairing2.Assets.AdjustedImageIdentifier(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213AE2488 + 4 * byte_213B2E664[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213AE24A8 + 4 * byte_213B2E669[v4]))();
}

_BYTE *sub_213AE2488(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213AE24A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213AE24B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213AE24B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213AE24C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213AE24C8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_213AE24D4()
{
  return 0;
}

ValueMetadata *type metadata accessor for AirTagPairing2.Assets.AdjustedImageIdentifier()
{
  return &type metadata for AirTagPairing2.Assets.AdjustedImageIdentifier;
}

uint64_t getEnumTagSinglePayload for AirTagPairing2.Assets.VideoIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AirTagPairing2.Assets.VideoIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213AE25C8 + 4 * byte_213B2E673[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213AE25FC + 4 * byte_213B2E66E[v4]))();
}

uint64_t sub_213AE25FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AE2604(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213AE260CLL);
  return result;
}

uint64_t sub_213AE2618(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213AE2620);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213AE2624(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AE262C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing2.Assets.VideoIdentifier()
{
  return &type metadata for AirTagPairing2.Assets.VideoIdentifier;
}

uint64_t getEnumTagSinglePayload for HeadphonePairing.Assets.ViewIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10ProductKit14AirTagPairing2V13ConfigurationV5ColorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213AE2724 + 4 * byte_213B2E67D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213AE2758 + 4 * byte_213B2E678[v4]))();
}

uint64_t sub_213AE2758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AE2760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213AE2768);
  return result;
}

uint64_t sub_213AE2774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213AE277CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213AE2780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AE2788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing2.Assets.ViewIdentifier()
{
  return &type metadata for AirTagPairing2.Assets.ViewIdentifier;
}

uint64_t sub_213AE27A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_213AE27F0;
  return sub_213ADEA7C();
}

uint64_t sub_213AE27F0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE284C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_213AE27F0;
  return sub_213ADEDBC();
}

uint64_t sub_213AE2898(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  _OWORD *v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_2;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD v25[4];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t AssociatedConformanceWitness;
  uint64_t v32;
  _QWORD v33[7];

  v33[3] = &type metadata for HeadphonePairing2.Configuration;
  v33[4] = sub_213AE37F0();
  v8 = (_OWORD *)swift_allocObject();
  v33[0] = v8;
  v9 = a3[1];
  v8[1] = *a3;
  v8[2] = v9;
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)a3 + 25);
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = 1;
  v23 = a1;
  *(_QWORD *)(a4 + 48) = sub_213B2B2CC();
  v10 = __swift_project_boxed_opaque_existential_0(v33, (uint64_t)&type metadata for HeadphonePairing2.Configuration);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_213B2C23C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  *((_BYTE *)&v22 - v15) = *((_BYTE *)v10 + 17);
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))((char *)&v22 - v15, 1, AssociatedTypeWitness, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v27 = 0u;
    v28 = 0u;
    v26 = 0u;
  }
  else
  {
    *((_QWORD *)&v27 + 1) = AssociatedTypeWitness;
    *(_QWORD *)&v28 = swift_getAssociatedConformanceWitness();
    *((_QWORD *)&v28 + 1) = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_2 = __swift_allocate_boxed_opaque_existential_2((uint64_t *)&v26);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(boxed_opaque_existential_2, v16, AssociatedTypeWitness);
  }
  sub_213AD8B28((uint64_t)v33, (uint64_t)v25);
  if (*((_QWORD *)&v27 + 1))
  {
    sub_213AE38A4(&v26, v29);
  }
  else
  {
    v19 = __swift_project_boxed_opaque_existential_0(v25, v25[3]);
    v30 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v32 = swift_getAssociatedConformanceWitness();
    *(_BYTE *)__swift_allocate_boxed_opaque_existential_2(v29) = *((_BYTE *)v19 + 16);
    if (*((_QWORD *)&v27 + 1))
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v26);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18ED8);
  swift_dynamicCast();
  *(_BYTE *)(a4 + 56) = v24;
  *(_QWORD *)(a4 + 64) = a2;
  if (a2)
  {
    swift_retain();
    v20 = swift_retain();
    sub_213B0C654(v20, a2);
    swift_release();
    sub_213AD53FC(v23, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
    swift_release();
  }
  else
  {
    sub_213AD53FC(v23, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  return a4;
}

uint64_t sub_213AE2BD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_213AE2C1C;
  return sub_213ADF0A8();
}

uint64_t sub_213AE2C1C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE2C78()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE2C90()
{
  return 1;
}

uint64_t sub_213AE2C98()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_213AD5374(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_213AE2CD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_213AD7E40;
  return sub_213ADE4D4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_213AE2D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(type metadata accessor for MobileAssetRequest() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_213ADA044;
  return sub_213B10BCC(a1, v6, v7);
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for MobileAssetRequest() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = v0 + v2;
  v5 = sub_213B2BC90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + v3);
  return swift_deallocObject();
}

uint64_t sub_213AE2EA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213ADA044;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213AE2F0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t))&aU0[*(int *)aU0])(a1);
}

char *sub_213AE2F74(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213AE305C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E80);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213AE3168(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E90);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213AE3274(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_213B2BBD0() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213AE338C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F40);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213AE3498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_213ADA044;
  return sub_213B1133C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_213AE352C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(double *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_213ADA044;
  return sub_213ADF470(a1, a2, v6, v7);
}

uint64_t sub_213AE35A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(int **)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_213ADA044;
  v6[2] = a1;
  v6[3] = v4;
  v9 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  v7 = (_QWORD *)swift_task_alloc();
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_213AE0A50;
  return v9(a1);
}

uint64_t sub_213AE363C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213AE3660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213ADA044;
  v5[3] = v4;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213AE36D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_213AE3720(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213ADA044;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213AE3788(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t))((char *)&dword_254D18EC0 + dword_254D18EC0))(a1);
}

unint64_t sub_213AE37F0()
{
  unint64_t result;

  result = qword_254D18ED0;
  if (!qword_254D18ED0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing2.Configuration, &type metadata for HeadphonePairing2.Configuration);
    atomic_store(result, (unint64_t *)&qword_254D18ED0);
  }
  return result;
}

uint64_t sub_213AE3834()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 != 255)
    sub_213ADACFC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v1 & 1);
  return swift_deallocObject();
}

uint64_t *__swift_allocate_boxed_opaque_existential_2(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

_OWORD *sub_213AE38A4(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t objectdestroy_35Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213AE38F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(int **)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_213ADA044;
  v6[2] = a1;
  v6[3] = v4;
  v9 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  v7 = (_QWORD *)swift_task_alloc();
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_213AE0B88;
  return v9(a1);
}

uint64_t sub_213AE3984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213ADA044;
  v5[3] = v4;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213AE39F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_213AE3A38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(type metadata accessor for MobileAssetRequest() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_213AD7E40;
  return sub_213B10BCC(a1, v6, v7);
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213AE3AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213ADA044;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_213AE3B60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t))((char *)&dword_254D18F70 + dword_254D18F70))(a1);
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v0;

  swift_release();
  sub_213ADACFC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t _s10ProductKit0A5ErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 != 1)
      __asm { BR              X9 }
    if (v7 == 1)
    {
      if (v3 == v6 && v2 == v5)
        v9 = 1;
      else
        v9 = sub_213B2C47C();
      sub_213AE4004(v6, v5, 1u);
      sub_213AE4004(v3, v2, 1u);
      sub_213AE402C(v3, v2, 1u);
      sub_213AE402C(v6, v5, 1u);
      return v9 & 1;
    }
LABEL_10:
    sub_213AE4004(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_213AE4004(v3, v2, v4);
    sub_213AE402C(v3, v2, v4);
    sub_213AE402C(v6, v5, v7);
    v9 = 0;
    return v9 & 1;
  }
  if (*(_BYTE *)(a2 + 16))
    goto LABEL_10;
  if (v3 == v6 && v2 == v5)
    v9 = 1;
  else
    v9 = sub_213B2C47C();
  sub_213AE4004(v6, v5, 0);
  sub_213AE4004(v3, v2, 0);
  sub_213AE402C(v3, v2, 0);
  sub_213AE402C(v6, v5, 0);
  return v9 & 1;
}

uint64_t sub_213AE4004(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ProductError(uint64_t a1)
{
  return sub_213AE402C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_213AE402C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s10ProductKit12ProductErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_213AE4004(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ProductError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_213AE4004(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_213AE402C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ProductError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_213AE402C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_213AE41C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_213AE41DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ProductError()
{
  return &type metadata for ProductError;
}

uint64_t sub_213AE4204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_213B2C050();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_213B2C044();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_213AD6270(a1, &qword_254D19090);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_213B2BFE4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_213AE4350(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;

  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
  if (!swift_dynamicCast())
  {
    type metadata accessor for CKError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_213AFC5F0(&qword_254D19370, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_213B2E090);
      sub_213B2BB10();

      if ((unint64_t)(v8 - 3) < 2)
        goto LABEL_7;
      if (v8 == 11)
      {
        v5 = 9;
        goto LABEL_10;
      }
      if (v8 == 36)
      {
LABEL_7:
        v5 = 2;
LABEL_10:
        v6 = 0;
        v7 = 2;
        goto LABEL_11;
      }
    }
    else
    {

    }
    v5 = 0;
    goto LABEL_10;
  }

  v5 = (uint64_t)v9;
  v6 = v10;
  v7 = v11;
LABEL_11:

  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7;
}

uint64_t sub_213AE4498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D18FA0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D18FA0);
  if (qword_254D18488 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22EB0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213AE4528()
{
  uint64_t v0;

  v0 = sub_213B2BBD0();
  __swift_allocate_value_buffer(v0, qword_254D18FB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_254D18FB8);
  return sub_213B2BB70();
}

uint64_t static PersonalizationAssetManager.defaultCacheDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254D18390 != -1)
    swift_once();
  v2 = sub_213B2BBD0();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t PersonalizationAssetManager.__allocating_init(container:cacheDirectory:)(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PersonalizationAssetManager.init(container:cacheDirectory:)(a1, a2);
  return v4;
}

uint64_t PersonalizationAssetManager.init(container:cacheDirectory:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  id v40;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  int v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _OWORD v53[16];

  v3 = v2;
  v50 = _s19ParentDirectoryCRUDVMa();
  MEMORY[0x24BDAC7A8](v50);
  v51 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213B2BBD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  if (qword_254D18388 != -1)
    swift_once();
  v11 = sub_213B2BCF0();
  __swift_project_value_buffer(v11, (uint64_t)qword_254D18FA0);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v49(v10, a2, v7);
  v12 = a1;
  v13 = sub_213B2BCD8();
  v14 = sub_213B2C170();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v43 = v7;
    v48 = v8;
    v17 = v16;
    v18 = (_QWORD *)swift_slowAlloc();
    v44 = v18;
    v47 = swift_slowAlloc();
    v52 = (uint64_t)v12;
    *(_QWORD *)&v53[0] = v47;
    *(_DWORD *)v17 = 138412546;
    v46 = v13;
    v42 = v10;
    v45 = v15;
    v19 = v12;
    sub_213B2C254();
    *v18 = v12;

    *(_WORD *)(v17 + 12) = 2080;
    sub_213AFC5F0((unint64_t *)&qword_254D19030, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v21 = v42;
    v20 = v43;
    v22 = sub_213B2C458();
    v52 = sub_213AE1780(v22, v23, (uint64_t *)v53);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)(v48 + 8);
    ((void (*)(char *, uint64_t))v48)(v21, v20);
    v24 = v46;
    _os_log_impl(&dword_213AC8000, v46, (os_log_type_t)v45, "PersonalizationAssetManager INIT {container: %@, cacheDirectory: %s}", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    v25 = v44;
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v25, -1, -1);
    v26 = v47;
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v26, -1, -1);
    MEMORY[0x2199BD0E8](v17, -1, -1);

  }
  else
  {

    v48 = *(_QWORD *)(v8 + 8);
    ((void (*)(char *, uint64_t))v48)(v10, v7);

    v20 = v7;
  }
  v27 = objc_msgSend(v12, sel_publicCloudDatabase);
  v28 = objc_msgSend(v12, sel_privateCloudDatabase);
  v29 = objc_msgSend(v12, sel_privateCloudDatabase);
  v30 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v31 = v51;
  v49(&v51[*(int *)(v50 + 20)], a2, v20);
  *v31 = v30;
  ((void (*)(uint64_t, uint64_t))v48)(a2, v20);
  sub_213AE4A88(v27, v28, v29, (uint64_t)v31, v53);
  v32 = v53[13];
  *(_OWORD *)(v3 + 304) = v53[12];
  *(_OWORD *)(v3 + 320) = v32;
  v33 = v53[15];
  *(_OWORD *)(v3 + 336) = v53[14];
  *(_OWORD *)(v3 + 352) = v33;
  v34 = v53[9];
  *(_OWORD *)(v3 + 240) = v53[8];
  *(_OWORD *)(v3 + 256) = v34;
  v35 = v53[11];
  *(_OWORD *)(v3 + 272) = v53[10];
  *(_OWORD *)(v3 + 288) = v35;
  v36 = v53[5];
  *(_OWORD *)(v3 + 176) = v53[4];
  *(_OWORD *)(v3 + 192) = v36;
  v37 = v53[7];
  *(_OWORD *)(v3 + 208) = v53[6];
  *(_OWORD *)(v3 + 224) = v37;
  v38 = v53[1];
  *(_OWORD *)(v3 + 112) = v53[0];
  *(_OWORD *)(v3 + 128) = v38;
  v39 = v53[3];
  *(_OWORD *)(v3 + 144) = v53[2];
  *(_OWORD *)(v3 + 160) = v39;
  *(_QWORD *)(v3 + 368) = v12;
  *(_QWORD *)(v3 + 376) = v12;
  v40 = v12;
  return v3;
}

id sub_213AE4A88@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v10 = _s19ParentDirectoryCRUDVMa();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = a1;
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = a1;
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = a1;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = a1;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = a2;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = a2;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = a2;
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = a2;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = a3;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = a3;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = a3;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = a3;
  sub_213AFC9A0(a4, (uint64_t)v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v41 = swift_allocObject();
  sub_213AFC9E8((uint64_t)v13, v41 + v14);
  sub_213AFC9A0(a4, (uint64_t)v13);
  v40 = swift_allocObject();
  sub_213AFC9E8((uint64_t)v13, v40 + v14);
  sub_213AFC9A0(a4, (uint64_t)v13);
  v15 = swift_allocObject();
  sub_213AFC9E8((uint64_t)v13, v15 + v14);
  sub_213AFC9E8(a4, (uint64_t)v13);
  v16 = swift_allocObject();
  sub_213AFC9E8((uint64_t)v13, v16 + v14);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = v17;
  v21 = v18;
  v22 = v19;
  v23 = v20;
  v24 = v21;
  result = v22;
  v26 = v53;
  *a5 = &unk_254D19400;
  a5[1] = v26;
  v27 = v52;
  a5[2] = ::a4;
  a5[3] = v27;
  v28 = v51;
  a5[4] = &unk_254D19420;
  a5[5] = v28;
  v29 = v50;
  a5[6] = &unk_254D19430;
  a5[7] = v29;
  v30 = v49;
  a5[8] = &unk_254D19438;
  a5[9] = v30;
  v31 = v48;
  a5[10] = &unk_254D19440;
  a5[11] = v31;
  v32 = v47;
  a5[12] = a4_0;
  a5[13] = v32;
  v33 = v46;
  a5[14] = &unk_254D19450;
  a5[15] = v33;
  v34 = v45;
  a5[16] = aH3;
  a5[17] = v34;
  v35 = v44;
  a5[18] = &unk_254D19460;
  a5[19] = v35;
  v36 = v43;
  a5[20] = a4_1;
  a5[21] = v36;
  v37 = v42;
  a5[22] = &unk_254D19470;
  a5[23] = v37;
  v38 = v41;
  a5[24] = &unk_254D19480;
  a5[25] = v38;
  v39 = v40;
  a5[26] = a6;
  a5[27] = v39;
  a5[28] = &unk_254D194A0;
  a5[29] = v15;
  a5[30] = &unk_254D194B0;
  a5[31] = v16;
  return result;
}

uint64_t PersonalizationAssetManager.__allocating_init(container:manateeContainer:cacheDirectory:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  PersonalizationAssetManager.init(container:manateeContainer:cacheDirectory:)(a1, a2, a3);
  return v6;
}

uint64_t PersonalizationAssetManager.init(container:manateeContainer:cacheDirectory:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  id v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  os_log_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v53;
  char *v54;
  int v55;
  os_log_t v56;
  id v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  _OWORD v66[16];

  v4 = v3;
  v61 = _s19ParentDirectoryCRUDVMa();
  MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213B2BBD0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  if (qword_254D18388 != -1)
    swift_once();
  v13 = sub_213B2BCF0();
  __swift_project_value_buffer(v13, (uint64_t)qword_254D18FA0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v62 = a3;
  v59 = v14;
  v14(v12, a3, v9);
  v15 = a1;
  v16 = a2;
  v17 = v15;
  v63 = v9;
  v18 = v17;
  v64 = v16;
  v19 = sub_213B2BCD8();
  v20 = sub_213B2C170();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v22 = swift_slowAlloc();
    v56 = v19;
    v23 = v22;
    v24 = (_QWORD *)swift_slowAlloc();
    v57 = (id)swift_slowAlloc();
    v65 = (uint64_t)v18;
    *(_QWORD *)&v66[0] = v57;
    *(_DWORD *)v23 = 138412802;
    v55 = v21;
    v54 = v12;
    v25 = v18;
    sub_213B2C254();
    *v24 = v18;

    *(_WORD *)(v23 + 12) = 2112;
    v58 = v10;
    v26 = v64;
    v65 = (uint64_t)v64;
    v27 = v64;
    sub_213B2C254();
    v24[1] = v26;
    v28 = v24;

    *(_WORD *)(v23 + 22) = 2080;
    sub_213AFC5F0((unint64_t *)&qword_254D19030, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v29 = v54;
    v30 = v63;
    v31 = sub_213B2C458();
    v65 = sub_213AE1780(v31, v32, (uint64_t *)v66);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    v58 = *(_QWORD *)(v58 + 8);
    ((void (*)(char *, uint64_t))v58)(v29, v30);
    v33 = v56;
    _os_log_impl(&dword_213AC8000, v56, (os_log_type_t)v55, "PersonalizationAssetManager INIT {container: %@, manateeContainer: %@, cacheDirectory: %s}", (uint8_t *)v23, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v28, -1, -1);
    v34 = v57;
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v34, -1, -1);
    MEMORY[0x2199BD0E8](v23, -1, -1);

  }
  else
  {
    v35 = v64;

    v58 = *(_QWORD *)(v10 + 8);
    ((void (*)(char *, uint64_t))v58)(v12, v63);

  }
  v57 = objc_msgSend(v18, sel_publicCloudDatabase);
  v36 = objc_msgSend(v18, sel_privateCloudDatabase);
  v37 = v64;
  v38 = objc_msgSend(v64, sel_privateCloudDatabase);
  v39 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v40 = v60;
  v41 = v62;
  v42 = v18;
  v43 = v63;
  v59(&v60[*(int *)(v61 + 20)], v62, v63);
  *v40 = v39;
  ((void (*)(uint64_t, uint64_t))v58)(v41, v43);
  sub_213AE4A88(v57, v36, v38, (uint64_t)v40, v66);
  v44 = v66[13];
  *(_OWORD *)(v4 + 304) = v66[12];
  *(_OWORD *)(v4 + 320) = v44;
  v45 = v66[15];
  *(_OWORD *)(v4 + 336) = v66[14];
  *(_OWORD *)(v4 + 352) = v45;
  v46 = v66[9];
  *(_OWORD *)(v4 + 240) = v66[8];
  *(_OWORD *)(v4 + 256) = v46;
  v47 = v66[11];
  *(_OWORD *)(v4 + 272) = v66[10];
  *(_OWORD *)(v4 + 288) = v47;
  v48 = v66[5];
  *(_OWORD *)(v4 + 176) = v66[4];
  *(_OWORD *)(v4 + 192) = v48;
  v49 = v66[7];
  *(_OWORD *)(v4 + 208) = v66[6];
  *(_OWORD *)(v4 + 224) = v49;
  v50 = v66[1];
  *(_OWORD *)(v4 + 112) = v66[0];
  *(_OWORD *)(v4 + 128) = v50;
  v51 = v66[3];
  *(_OWORD *)(v4 + 144) = v66[2];
  *(_OWORD *)(v4 + 160) = v51;
  *(_QWORD *)(v4 + 368) = v42;
  *(_QWORD *)(v4 + 376) = v37;
  return v4;
}

uint64_t PersonalizationAssetManager.asset(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 104) = *(_OWORD *)a2;
  *(_BYTE *)(v3 + 152) = *(_BYTE *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_213AE539C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  if (*(_BYTE *)(v0 + 152) == 1)
  {
    v1 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 64) = v1;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v2;
    *v2 = v0;
    v2[1] = sub_213AE546C;
    return sub_213AE5BAC(v0 + 16, (uint64_t *)(v0 + 56));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 72) = v4;
    *(_QWORD *)(v0 + 80) = v5;
    sub_213AD5300(v4, v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v6;
    *v6 = v0;
    v6[1] = sub_213AE54D4;
    return PersonalizationAssetManager.asset(for:)(*(_QWORD *)(v0 + 88), (_OWORD *)(v0 + 72));
  }
}

uint64_t sub_213AE546C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE54D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE553C()
{
  uint64_t v0;

  sub_213ADACFC(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE5574()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(uint64_t **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  sub_213AD5300(v2, v3);
  swift_bridgeObjectRelease();
  sub_213AD5374(v2, v3);
  *v1 = v2;
  v1[1] = v3;
  v1[2] = v4;
  v1[3] = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE55E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE55F0()
{
  uint64_t v0;

  sub_213ADACFC(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PersonalizationAssetManager.asset(for:)(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v2;
  v5 = sub_213B2BD38();
  *(_QWORD *)(v3 + 184) = v5;
  *(_QWORD *)(v3 + 192) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc();
  *(_OWORD *)(v3 + 208) = *a2;
  return swift_task_switch();
}

uint64_t sub_213AE5694()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 184);
  v19 = *(_OWORD **)(v0 + 176);
  sub_213AD5300(v2, v1);
  sub_213B2C2E4();
  sub_213AF8828(v2, v1);
  *(_QWORD *)(v0 + 160) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19058);
  sub_213AFC308(&qword_254D19060, &qword_254D19058, MEMORY[0x24BEE12B0]);
  v5 = sub_213B2BDD4();
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  v8 = v5;
  *(_QWORD *)(v0 + 224) = v7;
  sub_213AD63B4(0, &qword_254D19068);
  sub_213AF6694(v3);
  sub_213B2BD20();
  v9 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v18);
  sub_213B2BC30();
  sub_213AD5374(v9, v10);
  sub_213AD63B4(0, &qword_254D19070);
  sub_213B2C17C();
  v11 = sub_213B2C11C();
  *(_QWORD *)(v0 + 232) = v11;
  sub_213AD5374(v2, v1);
  v12 = v19[7];
  v13 = v19[8];
  v14 = v19[10];
  *(_OWORD *)(v0 + 48) = v19[9];
  *(_OWORD *)(v0 + 64) = v14;
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v13;
  sub_213AD5300(v2, v1);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v15;
  *v15 = v0;
  v15[1] = sub_213AE5900;
  return sub_213AED3F4(v0 + 80, v8, v7, v11, v0 + 16, *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
}

uint64_t sub_213AE5900()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_213AE597C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  sub_213AD5300(v4, v5);
  sub_213AD5374(v2, v3);
  swift_bridgeObjectRelease();
  sub_213AD5374(v4, v5);
  *v1 = v4;
  v1[1] = v5;
  v1[2] = v6;
  v1[3] = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE5A10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PersonalizationAssetManager.asset(for:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[9] = a1;
  v3[10] = v2;
  v4 = a2[1];
  v3[7] = *a2;
  v3[8] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v3[11] = (uint64_t)v5;
  *v5 = v3;
  v5[1] = sub_213AE5AC8;
  return sub_213AE5BAC((uint64_t)(v3 + 2), v3 + 7);
}

uint64_t sub_213AE5AC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE5B30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(uint64_t **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  sub_213AD5300(v2, v3);
  swift_bridgeObjectRelease();
  sub_213AD5374(v2, v3);
  *v1 = v2;
  v1[1] = v3;
  v1[2] = v4;
  v1[3] = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE5BA0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE5BAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[53] = a1;
  v3[54] = v2;
  v5 = sub_213B2BC78();
  v3[55] = v5;
  v3[56] = *(_QWORD *)(v5 - 8);
  v3[57] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D19390);
  v3[58] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  v3[59] = v6;
  v3[60] = *(_QWORD *)(v6 - 8);
  v3[61] = swift_task_alloc();
  v7 = swift_task_alloc();
  v8 = *a2;
  v9 = a2[1];
  v3[62] = v7;
  v3[63] = v8;
  v3[64] = v9;
  return swift_task_switch();
}

uint64_t sub_213AE5C80()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  void (*v48)(uint64_t, uint64_t);
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 520) = __swift_project_value_buffer(v1, (uint64_t)qword_254D18FA0);
  swift_bridgeObjectRetain_n();
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 512);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 504);
    v7 = swift_slowAlloc();
    v78 = swift_slowAlloc();
    v80 = v78;
    *(_DWORD *)v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v81 = v6;
    v82 = v5;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 408) = sub_213AE1780(v6, v5, &v80);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_213AD63B4(0, &qword_254D19068);
    sub_213AD63B4(0, &qword_254D19070);
    swift_bridgeObjectRetain();
    sub_213B2C17C();
    v8 = (void *)sub_213B2C11C();
    v9 = objc_msgSend(v8, sel_recordName);

    v10 = sub_213B2BE1C();
    v12 = v11;

    *(_QWORD *)(v0 + 416) = sub_213AE1780(v10, v12, &v80);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v2, v3, "Fetching PrivateRecord START {cacheName: %s, recordName: %s}", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v78, -1, -1);
    MEMORY[0x2199BD0E8](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v13 = sub_213B0045C();
  if (*(_QWORD *)(v13 + 16))
  {
    v15 = *(_QWORD *)(v0 + 504);
    v14 = *(_QWORD *)(v0 + 512);
    swift_bridgeObjectRetain();
    v16 = sub_213AD4B1C(v15, v14);
    v17 = *(_QWORD *)(v0 + 472);
    v18 = *(_QWORD *)(v0 + 480);
    v19 = *(_QWORD *)(v0 + 464);
    if ((v20 & 1) != 0)
    {
      sub_213AFC6BC(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v18 + 72) * v16, *(_QWORD *)(v0 + 464));
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v19, 0, 1, v17);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v18 + 56))(*(_QWORD *)(v0 + 464), 1, 1, v17);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 480) + 56))(*(_QWORD *)(v0 + 464), 1, 1, *(_QWORD *)(v0 + 472));
  }
  v21 = *(_QWORD *)(v0 + 472);
  v22 = *(_QWORD *)(v0 + 480);
  v23 = *(_QWORD *)(v0 + 464);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21) == 1)
  {
    v24 = *(_QWORD *)(v0 + 464);
    v25 = (uint64_t *)&unk_254D19390;
LABEL_16:
    sub_213AD6270(v24, v25);
    v32 = *(_QWORD *)(v0 + 504);
    v31 = *(_QWORD *)(v0 + 512);
    v33 = *(_OWORD **)(v0 + 432);
    v81 = 0;
    v82 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v81 = v32;
    v82 = v31;
    sub_213B2BEAC();
    v34 = v81;
    v35 = v82;
    *(_QWORD *)(v0 + 528) = v82;
    *(_QWORD *)(v0 + 536) = sub_213AD63B4(0, &qword_254D19068);
    *(_QWORD *)(v0 + 544) = sub_213AD63B4(0, &qword_254D19070);
    swift_bridgeObjectRetain();
    sub_213B2C17C();
    v36 = sub_213B2C11C();
    *(_QWORD *)(v0 + 552) = v36;
    swift_bridgeObjectRelease();
    v37 = v33[15];
    v38 = v33[16];
    v39 = v33[18];
    *(_OWORD *)(v0 + 48) = v33[17];
    *(_OWORD *)(v0 + 64) = v39;
    *(_OWORD *)(v0 + 16) = v37;
    *(_OWORD *)(v0 + 32) = v38;
    v40 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 560) = v40;
    *v40 = v0;
    v40[1] = sub_213AE6644;
    return sub_213AEF628(v0 + 144, v34, v35, v36, v0 + 16, *(_QWORD *)(v0 + 432));
  }
  v26 = *(_QWORD *)(v0 + 488);
  v27 = *(_QWORD *)(v0 + 496);
  v28 = *(_QWORD *)(v0 + 440);
  v29 = *(_QWORD *)(v0 + 448);
  sub_213AFC674(*(_QWORD *)(v0 + 464), v27);
  sub_213AFC6BC(v27, v26);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28) == 1)
  {
    v30 = *(_QWORD *)(v0 + 496);
    sub_213AD6270(*(_QWORD *)(v0 + 488), &qword_254D18988);
    v24 = v30;
    v25 = &qword_254D18988;
    goto LABEL_16;
  }
  v42 = *(_QWORD *)(v0 + 488);
  v44 = *(_QWORD *)(v0 + 448);
  v43 = *(_QWORD *)(v0 + 456);
  v45 = *(_QWORD *)(v0 + 440);
  sub_213B2BC6C();
  sub_213B2BC60();
  v47 = v46;
  v48 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v48(v43, v45);
  v48(v42, v45);
  v49 = sub_213B005DC();
  v50 = *(_QWORD *)(v0 + 512);
  if (v49 < v47)
  {
    v51 = *(_QWORD *)(v0 + 504);
    v52 = *(_QWORD *)(v0 + 440);
    v53 = *(_QWORD *)(v0 + 448);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D193B0);
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
    v55 = *(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80);
    v56 = (v55 + 32) & ~v55;
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_213B2E2E0;
    v58 = (_QWORD *)(v57 + v56);
    v59 = v57 + v56 + *(int *)(v54 + 48);
    *v58 = v51;
    v58[1] = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v59, 1, 1, v52);
    swift_bridgeObjectRetain();
    v60 = sub_213AD14A8(v57);
    sub_213B006A4(v60);
    swift_bridgeObjectRetain_n();
    v61 = sub_213B2BCD8();
    v62 = sub_213B2C170();
    v63 = os_log_type_enabled(v61, v62);
    v64 = *(_QWORD *)(v0 + 512);
    if (v63)
    {
      v65 = *(_QWORD *)(v0 + 504);
      v79 = *(_QWORD *)(v0 + 496);
      v66 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v81 = v67;
      *(_DWORD *)v66 = 136315650;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 384) = sub_213AE1780(v65, v64, &v81);
      sub_213B2C254();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 12) = 2048;
      *(double *)(v0 + 392) = v47;
      sub_213B2C254();
      *(_WORD *)(v66 + 22) = 2048;
      *(double *)(v0 + 400) = v49;
      sub_213B2C254();
      _os_log_impl(&dword_213AC8000, v61, v62, "Time delta since last fetch for %s is %f (s) which is more than %f. Removing from shouldNotFetchStatusEngravingAssetForBtAddress", (uint8_t *)v66, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v67, -1, -1);
      MEMORY[0x2199BD0E8](v66, -1, -1);

      v25 = &qword_254D18988;
      v24 = v79;
    }
    else
    {
      v75 = *(_QWORD *)(v0 + 496);

      swift_bridgeObjectRelease_n();
      v25 = &qword_254D18988;
      v24 = v75;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain_n();
  v68 = sub_213B2BCD8();
  v69 = sub_213B2C170();
  v70 = os_log_type_enabled(v68, v69);
  v71 = *(_QWORD *)(v0 + 512);
  if (v70)
  {
    v72 = *(_QWORD *)(v0 + 504);
    v73 = swift_slowAlloc();
    v74 = swift_slowAlloc();
    v81 = v74;
    *(_DWORD *)v73 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 360) = sub_213AE1780(v72, v71, &v81);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v73 + 12) = 2048;
    *(double *)(v0 + 368) = v47;
    sub_213B2C254();
    *(_WORD *)(v73 + 22) = 2048;
    *(double *)(v0 + 376) = v49;
    sub_213B2C254();
    _os_log_impl(&dword_213AC8000, v68, v69, "Time delta since last fetch for %s is %f (s). which is less than %f. Assuming this device is not personalized so skipping engraving asset fetch", (uint8_t *)v73, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v74, -1, -1);
    MEMORY[0x2199BD0E8](v73, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v76 = *(_QWORD *)(v0 + 496);
  sub_213AD62AC();
  swift_allocError();
  *(_OWORD *)v77 = xmmword_213B2EC80;
  *(_BYTE *)(v77 + 16) = 2;
  swift_willThrow();
  sub_213AD6270(v76, &qword_254D18988);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE6644()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 568) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_213AE66C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain_n();
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C170();
  if (os_log_type_enabled(v6, v7))
  {
    v16 = v5;
    v17 = v2;
    v8 = v3;
    v10 = *(_QWORD *)(v0 + 504);
    v9 = *(_QWORD *)(v0 + 512);
    v11 = (uint8_t *)swift_slowAlloc();
    v18 = v1;
    v19 = swift_slowAlloc();
    v12 = v19;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = v10;
    v21 = v9;
    v3 = v8;
    v5 = v16;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 352) = sub_213AE1780(v20, v9, &v19);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    v2 = v17;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v6, v7, "Fetching PrivateRecord END --- manatee container {cacheName: %s}", v11, 0xCu);
    swift_arrayDestroy();
    v13 = v12;
    v1 = v18;
    MEMORY[0x2199BD0E8](v13, -1, -1);
    MEMORY[0x2199BD0E8](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v14 = *(_QWORD **)(v0 + 424);
  *v14 = v1;
  v14[1] = v2;
  v14[2] = v3;
  v14[3] = v4;
  v14[4] = v5;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE68F0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v1 = *(void **)(v0 + 568);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 568);
    v7 = *(_QWORD *)(v0 + 512);
    v24 = *(_QWORD *)(v0 + 504);
    v8 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 328) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v10 = sub_213B2BE64();
    *(_QWORD *)(v0 + 336) = sub_213AE1780(v10, v11, &v26);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    v27 = 0;
    v28 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = v24;
    v28 = v7;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 344) = sub_213AE1780(v27, v28, &v26);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "### Error fetching from manatee CloudKit container --- fallback to non manatee {error: %s, cacheName: %s}", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v25, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 568);

    swift_bridgeObjectRelease_n();
  }
  v14 = *(_QWORD *)(v0 + 504);
  v13 = *(_QWORD *)(v0 + 512);
  v15 = *(_OWORD **)(v0 + 432);
  v27 = 0;
  v28 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_213B2C2E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = v14;
  v28 = v13;
  sub_213B2BEAC();
  v16 = v27;
  v17 = v28;
  *(_QWORD *)(v0 + 576) = v28;
  swift_bridgeObjectRetain();
  sub_213B2C17C();
  v18 = sub_213B2C11C();
  *(_QWORD *)(v0 + 584) = v18;
  swift_bridgeObjectRelease();
  v19 = v15[11];
  v20 = v15[12];
  v21 = v15[14];
  *(_OWORD *)(v0 + 112) = v15[13];
  *(_OWORD *)(v0 + 128) = v21;
  *(_OWORD *)(v0 + 80) = v19;
  *(_OWORD *)(v0 + 96) = v20;
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 592) = v22;
  *v22 = v0;
  v22[1] = sub_213AE6C7C;
  return sub_213AF1508(v0 + 184, v16, v17, v18, v0 + 80, *(_QWORD *)(v0 + 432));
}

uint64_t sub_213AE6C7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 600) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_213AE6CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  swift_bridgeObjectRetain_n();
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C170();
  if (os_log_type_enabled(v6, v7))
  {
    v16 = v5;
    v17 = v2;
    v8 = v3;
    v10 = *(_QWORD *)(v0 + 504);
    v9 = *(_QWORD *)(v0 + 512);
    v11 = (uint8_t *)swift_slowAlloc();
    v18 = v1;
    v19 = swift_slowAlloc();
    v12 = v19;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = v10;
    v21 = v9;
    v3 = v8;
    v5 = v16;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 320) = sub_213AE1780(v20, v9, &v19);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    v2 = v17;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v6, v7, "Fetching PrivateRecord END --- fallback to non manatee container {cacheName: %s}", v11, 0xCu);
    swift_arrayDestroy();
    v13 = v12;
    v1 = v18;
    MEMORY[0x2199BD0E8](v13, -1, -1);
    MEMORY[0x2199BD0E8](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v14 = *(_QWORD **)(v0 + 424);
  *v14 = v1;
  v14[1] = v2;
  v14[2] = v3;
  v14[3] = v4;
  v14[4] = v5;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE6F28()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v1 = *(void **)(v0 + 600);

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 296) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 256);
    v5 = *(unsigned __int8 *)(v0 + 264);
    if (v5 == 2 && v3 == 9 && !v4)
    {

      swift_bridgeObjectRetain_n();
      v6 = sub_213B2BCD8();
      v7 = sub_213B2C170();
      v8 = os_log_type_enabled(v6, v7);
      v9 = *(_QWORD *)(v0 + 512);
      v10 = &unk_213B2E000;
      if (v8)
      {
        v41 = *(_QWORD *)(v0 + 504);
        v11 = swift_slowAlloc();
        v12 = swift_slowAlloc();
        v43 = v12;
        *(_DWORD *)v11 = 136315394;
        *(_OWORD *)(v0 + 224) = xmmword_213B2EC80;
        *(_BYTE *)(v0 + 240) = 2;
        v13 = sub_213B2BE64();
        *(_QWORD *)(v0 + 304) = sub_213AE1780(v13, v14, &v43);
        sub_213B2C254();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2080;
        v44 = 0;
        v45 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_213B2C2E4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v44 = v41;
        v45 = v9;
        sub_213B2BEAC();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 312) = sub_213AE1780(v44, v45, &v43);
        v10 = (_OWORD *)&unk_213B2E000;
        sub_213B2C254();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_213AC8000, v6, v7, "### assetNotFound so device has no engraving, caching to not fetch this asset again. {error: %s, cacheName: %s}", (uint8_t *)v11, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v12, -1, -1);
        MEMORY[0x2199BD0E8](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v29 = *(_QWORD *)(v0 + 504);
      v28 = *(_QWORD *)(v0 + 512);
      v30 = *(_QWORD *)(v0 + 440);
      v31 = *(_QWORD *)(v0 + 448);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D193B0);
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
      v33 = *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80);
      v34 = (v33 + 32) & ~v33;
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_213B2E2E0;
      v36 = (_QWORD *)(v35 + v34);
      v37 = v35 + v34 + *(int *)(v32 + 48);
      *v36 = v29;
      v36[1] = v28;
      swift_bridgeObjectRetain();
      sub_213B2BC6C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v37, 0, 1, v30);
      v38 = sub_213AD14A8(v35);
      sub_213B006A4(v38);
      sub_213AD62AC();
      swift_allocError();
      *(_OWORD *)v39 = v10[200];
      *(_BYTE *)(v39 + 16) = 2;
      swift_willThrow();

      goto LABEL_12;
    }
    sub_213AE402C(v3, v4, v5);
  }
  v15 = *(void **)(v0 + 600);

  swift_bridgeObjectRetain();
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = v15;
  v18 = sub_213B2BCD8();
  v19 = sub_213B2C158();
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(void **)(v0 + 600);
  v22 = *(_QWORD *)(v0 + 512);
  if (v20)
  {
    v40 = *(_QWORD *)(v0 + 504);
    v23 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    v43 = v42;
    *(_DWORD *)v23 = 136315394;
    *(_QWORD *)(v0 + 272) = v21;
    v24 = v21;
    v25 = sub_213B2BE64();
    *(_QWORD *)(v0 + 280) = sub_213AE1780(v25, v26, &v43);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v23 + 12) = 2080;
    v44 = 0;
    v45 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v44 = v40;
    v45 = v22;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 288) = sub_213AE1780(v44, v45, &v43);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v18, v19, "### Error fetching from non manatee CloudKit container {error: %s, cacheName: %s}", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v42, -1, -1);
    MEMORY[0x2199BD0E8](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  swift_willThrow();
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PersonalizationAssetManager.storeAsset(from:to:)(_OWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 192) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  *(_QWORD *)(v3 + 200) = swift_task_alloc();
  v6 = sub_213B2BD38();
  *(_QWORD *)(v3 + 208) = v6;
  *(_QWORD *)(v3 + 216) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 224) = swift_task_alloc();
  *(_OWORD *)(v3 + 232) = *a1;
  v7 = a2[1];
  *(_QWORD *)(v3 + 248) = *a2;
  *(_QWORD *)(v3 + 256) = v7;
  return swift_task_switch();
}

uint64_t sub_213AE75C4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v17 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_OWORD **)(v0 + 192);
  sub_213AD5300(v2, v1);
  sub_213B2C2E4();
  sub_213AF8828(v2, v1);
  *(_QWORD *)(v0 + 168) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19058);
  sub_213AFC308(&qword_254D19060, &qword_254D19058, MEMORY[0x24BEE12B0]);
  v5 = sub_213B2BDD4();
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  v8 = v5;
  *(_QWORD *)(v0 + 264) = v7;
  sub_213AD63B4(0, &qword_254D19068);
  sub_213AF6694(v3);
  sub_213B2BD20();
  v9 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v18);
  sub_213B2BC30();
  sub_213AD5374(v9, v10);
  sub_213AD63B4(0, &qword_254D19070);
  sub_213B2C17C();
  v11 = sub_213B2C11C();
  *(_QWORD *)(v0 + 272) = v11;
  sub_213AD5374(v2, v1);
  v12 = v19[7];
  v13 = v19[8];
  v14 = v19[10];
  *(_OWORD *)(v0 + 48) = v19[9];
  *(_OWORD *)(v0 + 64) = v14;
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v13;
  sub_213AD5300(v2, v1);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v15;
  *v15 = v0;
  v15[1] = sub_213AE7830;
  return sub_213AED3F4(v0 + 80, v8, v7, v11, v0 + 16, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
}

uint64_t sub_213AE7830()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_213AE78AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 320) = v5;
  v7 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 328) = v7;
  *(_QWORD *)(v0 + 336) = v6;
  v8 = sub_213B2C050();
  *(_QWORD *)(v0 + 344) = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  *(_QWORD *)(v0 + 352) = v9;
  v9(v3, 1, 1, v8);
  v11 = sub_213AFC5F0(&qword_254D190A0, v10, (uint64_t (*)(uint64_t))type metadata accessor for PersonalizationAssetManager, (uint64_t)&protocol conformance descriptor for PersonalizationAssetManager);
  *(_QWORD *)(v0 + 360) = v11;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v4;
  v12[3] = v11;
  v12[4] = v2;
  v12[5] = v1;
  v12[6] = v2;
  v12[7] = v1;
  v12[8] = v5;
  v12[9] = v7;
  v12[10] = v6;
  v12[11] = v4;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_213AD5300(v5, v7);
  swift_bridgeObjectRetain();
  sub_213AD5300(v5, v7);
  *(_QWORD *)(v0 + 368) = sub_213AE88A0(v3, (uint64_t)&unk_254D190A8, (uint64_t)v12);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v13;
  *(_QWORD *)(v0 + 384) = __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
  *v13 = v0;
  v13[1] = sub_213AE7A44;
  return sub_213B2C05C();
}

uint64_t sub_213AE7A44()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_213AE7AA4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 344);
  v6 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 392) = *(_QWORD *)(v0 + 152);
  *(_BYTE *)(v0 + 162) = *(_BYTE *)(v0 + 160);
  v1(v9, 1, 1, v3);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = v2;
  v11[4] = v7;
  v11[5] = v8;
  v11[6] = v10;
  v11[7] = v7;
  v11[8] = v8;
  v11[9] = v6;
  v11[10] = v5;
  v11[11] = v4;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_213AD5300(v6, v5);
  *(_QWORD *)(v0 + 400) = sub_213AE4204(v9, (uint64_t)&unk_254D190C0, (uint64_t)v11);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v12;
  *v12 = v0;
  v12[1] = sub_213AE7BDC;
  return sub_213B2C05C();
}

uint64_t sub_213AE7BDC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_213AE7C3C()
{
  uint64_t v0;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 161) == 1)
    return swift_willThrowTypedImpl();
  if ((*(_BYTE *)(v0 + 162) & 1) != 0)
  {
    v2 = *(void **)(v0 + 392);
    v3 = *(_QWORD *)(v0 + 320);
    v4 = *(_QWORD *)(v0 + 328);
    v5 = *(_QWORD *)(v0 + 304);
    v6 = *(_QWORD *)(v0 + 296);
    *(_QWORD *)(v0 + 184) = v2;
    v7 = v2;
    swift_willThrowTypedImpl();
    sub_213AD62AC();
    swift_allocError();
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0;
    *(_BYTE *)(v8 + 16) = 2;
    swift_willThrow();
    sub_213AF9410(v2, 1);
    sub_213AF9410(v2, 1);
    swift_bridgeObjectRelease();
    sub_213AD5374(v3, v4);
    sub_213AD5374(v6, v5);
    swift_bridgeObjectRelease();
    sub_213AD5374(v3, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_254D18388 != -1)
      swift_once();
    v9 = *(_QWORD *)(v0 + 232);
    v10 = *(_QWORD *)(v0 + 240);
    v11 = sub_213B2BCF0();
    v12 = __swift_project_value_buffer(v11, (uint64_t)qword_254D18FA0);
    sub_213AD5300(v9, v10);
    v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D1B0F0
                                                                                       + dword_254D1B0F0);
    swift_retain();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v13;
    *v13 = v0;
    v13[1] = sub_213AE7EC0;
    return v14(0xD00000000000001ALL, 0x8000000213B34DA0, v12, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
  }
}

uint64_t sub_213AE7E70()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE7EC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 240);
  swift_task_dealloc();
  sub_213AD5374(v1, v2);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_213AE7F38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRelease();
  sub_213AD5374(v1, v2);
  sub_213AD5374(v4, v3);
  swift_bridgeObjectRelease();
  sub_213AD5374(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE7FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  return swift_task_switch();
}

uint64_t sub_213AE7FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 192);
  v2 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 208) = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FA0);
  swift_bridgeObjectRetain();
  sub_213AFC3DC(v1);
  swift_bridgeObjectRetain();
  sub_213AFC3DC(v1);
  v3 = sub_213B2BCD8();
  LOBYTE(v1) = sub_213B2C170();
  v4 = os_log_type_enabled(v3, (os_log_type_t)v1);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192);
  if (v4)
  {
    v7 = *(_QWORD *)(v0 + 176);
    v8 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = v7;
    v25 = v5;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 160) = sub_213AE1780(v7, v5, &v23);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2048;
    *(_OWORD *)(v0 + 72) = *(_OWORD *)(v6 + 16);
    sub_213AFC4A0(v0 + 72, v0 + 56);
    sub_213AFC4A0(v0 + 56, v0 + 88);
    __asm { BR              X10 }
  }
  sub_213AFC41C(*(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease_n();
  sub_213AFC41C(v6);

  v9 = *(_QWORD *)(v0 + 192);
  sub_213B2BA44();
  swift_allocObject();
  sub_213B2BA38();
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v9;
  *(_OWORD *)(v0 + 32) = v11;
  *(_QWORD *)(v0 + 48) = v10;
  sub_213AFC45C();
  v12 = sub_213B2BA2C();
  *(_QWORD *)(v0 + 216) = v12;
  *(_QWORD *)(v0 + 224) = v13;
  v14 = v12;
  v15 = v13;
  v16 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 184);
  swift_release();
  v19 = *(int **)(v16 + 304);
  swift_bridgeObjectRetain();
  sub_213B2C2E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v18;
  v25 = v17;
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 232) = v17;
  *(_QWORD *)(v0 + 104) = v18;
  *(_QWORD *)(v0 + 112) = v17;
  *(_QWORD *)(v0 + 120) = v14;
  *(_QWORD *)(v0 + 128) = v15;
  v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v19 + *v19);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v20;
  *v20 = v0;
  v20[1] = sub_213AE8488;
  return v22(v0 + 104, v0 + 120);
}

uint64_t sub_213AE8488()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE84EC()
{
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213AE852C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v2, "Store imageData Local END", v3, 2u);
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
  sub_213AD5374(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE85D8()
{
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213AE8618()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v1 = *(void **)(v0 + 248);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 176);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18 = v9;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 136) = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    *(_QWORD *)(v0 + 144) = sub_213AE1780(v11, v12, &v18);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    v19 = 0;
    v20 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = v17;
    v20 = v7;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 152) = sub_213AE1780(v19, v20, &v18);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Store imageData Local FAILED -- {error: %s, filename: %s}", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    v13 = *(void **)(v0 + 248);

    swift_bridgeObjectRelease_n();
  }

  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 224);
  swift_willThrow();
  sub_213AD5374(v14, v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE88A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_213B2C050();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_213B2C044();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_213AD6270(a1, &qword_254D19090);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_213B2BFE4();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_213AE89D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  return swift_task_switch();
}

uint64_t sub_213AE89F0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int *v18;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_254D18FA0);
  swift_bridgeObjectRetain_n();
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v4 = 138412290;
    sub_213AD63B4(0, &qword_254D19068);
    sub_213AD63B4(0, &qword_254D19070);
    swift_bridgeObjectRetain();
    sub_213B2C17C();
    v6 = sub_213B2C11C();
    v0[9] = v6;
    sub_213B2C254();
    *v5 = v6;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v2, v3, "Store imageData Private CloudKit database START {recordID: %@}", v4, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v5, -1, -1);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v7 = v0[13];
  v17 = *(int **)(v0[12] + 240);
  v0[15] = sub_213AD63B4(0, &qword_254D19068);
  v0[16] = sub_213AD63B4(0, &qword_254D19070);
  swift_bridgeObjectRetain();
  sub_213B2C17C();
  v8 = sub_213B2C11C();
  v0[17] = v8;
  v15 = *(_QWORD *)(v7 + 32);
  v16 = v8;
  swift_bridgeObjectRetain();
  sub_213B2C17C();
  v9 = (void *)sub_213B2C11C();
  sub_213AD63B4(0, &qword_254D190E8);
  v10 = v9;
  v11 = (void *)sub_213B2C200();
  v0[18] = v11;
  v12 = objc_msgSend(v11, sel_encryptedValues);
  swift_getObjectType();
  if (qword_254D183B8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_213B2BC30();
  sub_213B2C194();
  swift_unknownObjectRelease();
  objc_msgSend(v11, sel_encryptedValues);
  swift_getObjectType();
  if (qword_254D183C0 != -1)
    swift_once();
  v0[2] = v15;
  swift_bridgeObjectRetain();
  sub_213B2C458();
  sub_213B2C194();

  swift_unknownObjectRelease();
  v0[3] = v16;
  v0[4] = v11;
  v18 = (int *)((char *)v17 + *v17);
  v13 = (_QWORD *)swift_task_alloc();
  v0[19] = v13;
  *v13 = v0;
  v13[1] = sub_213AE8E90;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v18)(v0 + 3, v0 + 4);
}

uint64_t sub_213AE8E90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE8EF4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  return swift_task_switch();
}

uint64_t sub_213AE8F38()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;

  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v3 = 138412290;
    swift_bridgeObjectRetain();
    sub_213B2C17C();
    v5 = sub_213B2C11C();
    *(_QWORD *)(v0 + 64) = v5;
    sub_213B2C254();
    *v4 = v5;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Store imageData Private CloudKit database END {recordID: %@}", v3, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v4, -1, -1);
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE90B4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  return swift_task_switch();
}

uint64_t sub_213AE90F8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v1 = *(void **)(v0 + 160);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 80);
    v8 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16 = v15;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 40) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v10 = sub_213B2BE64();
    *(_QWORD *)(v0 + 48) = sub_213AE1780(v10, v11, &v16);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    v17 = 0;
    v18 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_213B2C2E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = v14;
    v18 = v7;
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = sub_213AE1780(v17, v18, &v16);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Store imageData Private CloudKit database FAILED -- {error: %s, filename: %s}", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v15, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 160);

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE9378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_213AE9398()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(_QWORD *);

  if (qword_254D18388 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  __swift_project_value_buffer(v1, (uint64_t)qword_254D18FA0);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213AC8000, v2, v3, "Successfully saved imageData to local cache and Private CloudKit database -- deleting public record local cache", v4, 2u);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }
  v6 = v0[7];
  v5 = v0[8];
  v7 = v0[6];

  v8 = *(int **)(v7 + 352);
  sub_213AD5300(v6, v5);
  sub_213B2C2E4();
  sub_213AF8828(v6, v5);
  v0[5] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19058);
  sub_213AFC308(&qword_254D19060, &qword_254D19058, MEMORY[0x24BEE12B0]);
  v10 = sub_213B2BDD4();
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213AD5374(v6, v5);
  v0[9] = v12;
  v0[2] = v10;
  v0[3] = v12;
  v15 = (uint64_t (*)(_QWORD *))((char *)v8 + *v8);
  v13 = (_QWORD *)swift_task_alloc();
  v0[10] = v13;
  *v13 = v0;
  v13[1] = sub_213AE95B4;
  return v15(v0 + 2);
}

uint64_t sub_213AE95B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AE9618()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AE964C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PersonalizationAssetManager.migrateToManateeContainer()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 432) = v0;
  return swift_task_switch();
}

uint64_t sub_213AE9698()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t (*v21)(void);
  _QWORD *v22;
  _QWORD *v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v52;
  _QWORD *v53;
  _QWORD *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id type;
  os_log_type_t typea;
  void *v75;
  id v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;

  v0[5] = &type metadata for ProductKitFeatureFlag;
  v0[6] = sub_213AFA1B8();
  v1 = sub_213B2BCCC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  if ((v1 & 1) == 0)
  {
    if (qword_254D18388 != -1)
      swift_once();
    v17 = sub_213B2BCF0();
    __swift_project_value_buffer(v17, (uint64_t)qword_254D18FA0);
    v18 = sub_213B2BCD8();
    v19 = sub_213B2C170();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213AC8000, v18, v19, "ProductKit.ManateeMigration FeatureFlag not enabled, returning", v20, 2u);
      MEMORY[0x2199BD0E8](v20, -1, -1);
    }

    v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  if (qword_254D18388 != -1)
    swift_once();
  v2 = sub_213B2BCF0();
  v0[55] = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FA0);
  v3 = sub_213B2BCD8();
  v4 = sub_213B2C170();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_213AC8000, v3, v4, "Manatee container migration START", v5, 2u);
    MEMORY[0x2199BD0E8](v5, -1, -1);
  }
  v6 = v0 + 54;
  v7 = v0[54];

  v8 = *(void **)(v7 + 368);
  v0[56] = v8;
  if (!v8 || (v9 = *(void **)(v0[54] + 376), (v0[57] = v9) == 0))
  {
    v22 = v0 + 28;
    v23 = v0 + 29;
    swift_retain_n();
    v24 = sub_213B2BCD8();
    v25 = sub_213B2C158();
    v26 = os_log_type_enabled(v24, v25);
    v27 = *v6;
    if (v26)
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v78 = v29;
      *(_DWORD *)v28 = 136315394;
      v0[27] = v8;
      type = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190E0);
      v30 = sub_213B2BE64();
      v0[22] = sub_213AE1780(v30, v31, &v78);
      sub_213B2C254();
      v22 = v0 + 28;
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v28 + 12) = 2080;
      v32 = *(void **)(v27 + 376);
      v0[23] = v32;
      v33 = v32;
      v34 = sub_213B2BE64();
      v0[24] = sub_213AE1780(v34, v35, &v78);
      sub_213B2C254();
      v36 = type;
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_213AC8000, v24, v25, "Manatee container migration FAIL --- container nil {publicCloudKitContainer: %s, manateeCloudKitContainer: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      v37 = v29;
      v23 = v0 + 29;
      MEMORY[0x2199BD0E8](v37, -1, -1);
      v6 = v0 + 54;
      MEMORY[0x2199BD0E8](v28, -1, -1);

    }
    else
    {
      swift_release_n();

      v36 = v8;
    }
    v38 = *v6;
    v78 = 0;
    v79 = 0xE000000000000000;
    sub_213B2C2E4();
    sub_213B2BEAC();
    *v23 = v8;
    v39 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190E0);
    sub_213B2BE64();
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    sub_213B2BEAC();
    v40 = *(void **)(v38 + 376);
    *v22 = v40;
    v41 = v40;
    sub_213B2BE64();
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    sub_213B2BEAC();
    v42 = v78;
    v43 = v79;
    sub_213AD62AC();
    swift_allocError();
    *(_QWORD *)v44 = v42;
    *(_QWORD *)(v44 + 8) = v43;
    *(_BYTE *)(v44 + 16) = 1;
    swift_willThrow();
    goto LABEL_36;
  }
  v77 = v8;
  v10 = v8;
  v11 = v9;
  v76 = v10;
  v12 = objc_msgSend(v10, sel_containerIdentifier);
  if (v12)
  {
    v13 = v12;
    v14 = sub_213B2BE1C();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v75 = v11;
  v45 = objc_msgSend(v11, sel_containerIdentifier);
  if (!v45)
  {
    if (!v16)
      goto LABEL_32;
    goto LABEL_29;
  }
  v46 = v45;
  v47 = sub_213B2BE1C();
  v49 = v48;

  if (!v16)
  {
    if (!v49)
      goto LABEL_32;
    goto LABEL_29;
  }
  if (!v49)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (v14 != v47 || v16 != v49)
  {
    v52 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v52 & 1) != 0)
      goto LABEL_32;
LABEL_30:
    v0[58] = objc_msgSend(v76, sel_privateCloudDatabase);
    v50 = (_QWORD *)swift_task_alloc();
    v0[59] = v50;
    *v50 = v0;
    v50[1] = sub_213AEA000;
    return sub_213B0F114(0xD000000000000015, 0x8000000213B34E30);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_32:
  v53 = v0 + 48;
  v54 = v0 + 49;
  swift_retain_n();
  v55 = sub_213B2BCD8();
  v56 = sub_213B2C158();
  if (os_log_type_enabled(v55, v56))
  {
    typea = v56;
    v57 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v78 = v72;
    *(_DWORD *)v57 = 136315394;
    v0[50] = v8;
    v58 = v76;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190E0);
    v59 = sub_213B2BE64();
    v0[51] = sub_213AE1780(v59, v60, &v78);
    sub_213B2C254();
    v54 = v0 + 49;
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v57 + 12) = 2080;
    v0[52] = v9;
    v61 = v75;
    v62 = v75;
    v53 = v0 + 48;
    v63 = sub_213B2BE64();
    v0[53] = sub_213AE1780(v63, v64, &v78);
    sub_213B2C254();
    v65 = v8;
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_213AC8000, v55, typea, "Manatee container migration FAIL --- containers are the same {publicCloudKitContainer: %s, manateeCloudKitContainer: %s}", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    v66 = v76;
    MEMORY[0x2199BD0E8](v72, -1, -1);
    MEMORY[0x2199BD0E8](v57, -1, -1);

  }
  else
  {
    swift_release_n();

    v66 = v76;
    v65 = v77;
    v61 = v75;
  }
  v78 = 0;
  v79 = 0xE000000000000000;
  sub_213B2C2E4();
  sub_213B2BEAC();
  *v53 = v65;
  v67 = v66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D190E0);
  sub_213B2BE64();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  *v54 = v9;
  v68 = v61;
  sub_213B2BE64();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  v69 = v78;
  v70 = v79;
  sub_213AD62AC();
  swift_allocError();
  *(_QWORD *)v71 = v69;
  *(_QWORD *)(v71 + 8) = v70;
  *(_BYTE *)(v71 + 16) = 1;
  swift_willThrow();

LABEL_36:
  v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_213AEA000(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 480) = a1;
  *(_QWORD *)(v3 + 488) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_213AEA07C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  void *v22;
  NSObject *v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  void *v44;
  uint64_t (*v45)(void);
  int *v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52[2];

  v1 = (_QWORD *)v0[60];
  v2 = v1[2];
  v0[62] = v2;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v19 = sub_213B2BCD8();
    v20 = sub_213B2C170();
    v21 = os_log_type_enabled(v19, v20);
    v23 = v0[56];
    v22 = (void *)v0[57];
    if (v21)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_213AC8000, v19, v20, "Manatee container migration END", v24, 2u);
      MEMORY[0x2199BD0E8](v24, -1, -1);

    }
    else
    {

      v19 = v23;
    }

    v45 = (uint64_t (*)(void))v0[1];
    return v45();
  }
  v3 = (void *)v0[61];
  v0[63] = 0;
  v4 = (void *)v1[4];
  v0[64] = v4;
  v5 = (void *)v1[5];
  v0[65] = v5;
  v6 = v5;
  v7 = v4;
  sub_213AEC3A0(v6, v0 + 17);
  if (v3)
  {
    v8 = v3;
    swift_bridgeObjectRelease();

    v9 = v3;
    v10 = v3;
    v11 = v3;
    v12 = sub_213B2BCD8();
    v13 = sub_213B2C170();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v52[0] = v15;
      *(_DWORD *)v14 = 136315138;
      v0[25] = v8;
      v16 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v17 = sub_213B2BE64();
      v0[26] = sub_213AE1780(v17, v18, v52);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213AC8000, v12, v13, "Manatee container migration FAIL {error: %s}", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v15, -1, -1);
      MEMORY[0x2199BD0E8](v14, -1, -1);
    }
    else
    {

    }
    v44 = (void *)v0[56];
    v43 = (void *)v0[57];
    swift_willThrow();

    v45 = (uint64_t (*)(void))v0[1];
    return v45();
  }
  v0[66] = v0[18];
  v25 = v0[20];
  v0[67] = v0[19];
  v0[68] = v25;
  v50 = v0[21];
  v0[69] = sub_213AD63B4(0, &qword_254D19068);
  sub_213AD63B4(0, &qword_254D19070);
  swift_bridgeObjectRetain();
  sub_213B2C17C();
  v26 = (void *)sub_213B2C11C();
  sub_213AD63B4(0, &qword_254D190E8);
  v27 = v26;
  v28 = (void *)sub_213B2C200();
  v0[70] = v28;
  v29 = objc_msgSend(v28, sel_encryptedValues);
  swift_getObjectType();
  if (qword_254D183B8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v30 = sub_213B2BC30();
  v31 = MEMORY[0x24BDB8BD8];
  v0[15] = MEMORY[0x24BEE0D00];
  v0[16] = v31;
  v0[12] = v30;
  v0[13] = v32;
  sub_213B2C194();
  swift_unknownObjectRelease();
  objc_msgSend(v28, sel_encryptedValues);
  swift_getObjectType();
  if (qword_254D183C0 != -1)
    swift_once();
  v0[30] = v50;
  swift_bridgeObjectRetain();
  v33 = sub_213B2C458();
  v0[10] = MEMORY[0x24BEE0D00];
  v0[11] = MEMORY[0x24BDB8BD8];
  v0[7] = v33;
  v0[8] = v34;
  sub_213B2C194();

  swift_unknownObjectRelease();
  v35 = v7;
  v36 = sub_213B2BCD8();
  v37 = sub_213B2C170();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v52[0] = v39;
    *(_DWORD *)v38 = 136315138;
    v0[46] = v35;
    v40 = v35;
    v41 = sub_213B2BE64();
    v0[47] = sub_213AE1780(v41, v42, v52);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v36, v37, "Migrate data to manatee CloudKit database START {recordID: %s}", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v39, -1, -1);
    MEMORY[0x2199BD0E8](v38, -1, -1);
  }
  else
  {

  }
  v47 = *(int **)(v0[54] + 240);
  v48 = objc_msgSend(v28, sel_recordID);
  v0[71] = v48;
  v0[31] = v48;
  v0[32] = v28;
  v51 = (char *)v47 + *v47;
  v49 = (_QWORD *)swift_task_alloc();
  v0[72] = v49;
  *v49 = v0;
  v49[1] = sub_213AEA740;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v51)(v0 + 31, v0 + 32);
}

uint64_t sub_213AEA740()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 584) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AEA7A4()
{
  uint64_t v0;

  return swift_task_switch();
}

uint64_t sub_213AEA7E4()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  void *v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  int *v20;
  _QWORD *v21;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;

  v1 = *(id *)(v0 + 560);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(void **)(v0 + 560);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v24 = v6;
    *(_DWORD *)v5 = 136315138;
    *(_QWORD *)(v0 + 352) = objc_msgSend(v4, sel_recordID);
    v7 = sub_213B2BE64();
    *(_QWORD *)(v0 + 360) = sub_213AE1780(v7, v8, &v24);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v2, v3, "Migrate data to manatee CloudKit database END {recordID: %s}", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);
  }
  else
  {
    v9 = *(void **)(v0 + 560);

  }
  v10 = *(id *)(v0 + 512);
  v11 = sub_213B2BCD8();
  v12 = sub_213B2C170();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(void **)(v0 + 512);
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v14 = 136315138;
    *(_QWORD *)(v0 + 336) = v13;
    v16 = v13;
    v17 = sub_213B2BE64();
    *(_QWORD *)(v0 + 344) = sub_213AE1780(v17, v18, &v24);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v11, v12, "Remove data from non manatee CloudKit database START {recordID: %s}", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v15, -1, -1);
    MEMORY[0x2199BD0E8](v14, -1, -1);
  }
  else
  {
    v19 = *(void **)(v0 + 512);

  }
  v20 = *(int **)(*(_QWORD *)(v0 + 432) + 224);
  *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 512);
  v23 = (uint64_t (*)(uint64_t))((char *)v20 + *v20);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 592) = v21;
  *v21 = v0;
  v21[1] = sub_213AEAF8C;
  return v23(v0 + 288);
}

uint64_t sub_213AEAAF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_213AEAB44()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  os_log_type_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  void *v42;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49[2];

  v1 = *(void **)(v0 + 584);
  v2 = *(id *)(v0 + 560);
  v3 = v1;
  v4 = v2;
  v5 = v1;
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C158();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 584);
    v9 = *(void **)(v0 + 560);
    v47 = *(_QWORD *)(v0 + 536);
    v48 = *(_QWORD *)(v0 + 544);
    v45 = *(void **)(v0 + 520);
    v46 = *(void **)(v0 + 512);
    v10 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v49[0] = v44;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 264) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v12 = sub_213B2BE64();
    *(_QWORD *)(v0 + 272) = sub_213AE1780(v12, v13, v49);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2080;
    v14 = v9;
    v15 = objc_msgSend(v9, sel_recordID);
    v16 = objc_msgSend(v15, sel_recordName);

    v17 = sub_213B2BE1C();
    v19 = v18;

    *(_QWORD *)(v0 + 280) = sub_213AE1780(v17, v19, v49);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    v20 = v7;
    v21 = v45;
    _os_log_impl(&dword_213AC8000, v6, v20, "Migrate data to manatee CloudKit database FAILED -- {error: %s, recordName: %s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v44, -1, -1);
    v22 = v10;
    v23 = v46;
    MEMORY[0x2199BD0E8](v22, -1, -1);

    swift_willThrow();
    swift_bridgeObjectRelease();
    v24 = v47;
    v25 = v48;
  }
  else
  {
    v26 = *(void **)(v0 + 584);
    v27 = *(void **)(v0 + 560);
    v28 = *(_QWORD *)(v0 + 544);
    v29 = *(_QWORD *)(v0 + 536);
    v21 = *(void **)(v0 + 520);
    v23 = *(void **)(v0 + 512);

    swift_willThrow();
    swift_bridgeObjectRelease();
    v24 = v29;
    v25 = v28;
  }
  sub_213AD5374(v24, v25);

  v30 = *(void **)(v0 + 584);
  v31 = v30;
  v32 = v30;
  v33 = v30;
  v34 = sub_213B2BCD8();
  v35 = sub_213B2C170();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v49[0] = v37;
    *(_DWORD *)v36 = 136315138;
    *(_QWORD *)(v0 + 200) = v30;
    v38 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v39 = sub_213B2BE64();
    *(_QWORD *)(v0 + 208) = sub_213AE1780(v39, v40, v49);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v34, v35, "Manatee container migration FAIL {error: %s}", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v37, -1, -1);
    MEMORY[0x2199BD0E8](v36, -1, -1);
  }
  else
  {

  }
  v42 = *(void **)(v0 + 448);
  v41 = *(void **)(v0 + 456);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AEAF8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 600) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AEAFF0()
{
  return swift_task_switch();
}

uint64_t sub_213AEB004()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  void *v18;
  NSObject *v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  void *v58;
  int *v60;
  id v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69[2];

  v1 = *(id *)(v0 + 512);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v63 = *(void **)(v0 + 560);
    v64 = *(_QWORD *)(v0 + 536);
    v66 = *(_QWORD *)(v0 + 544);
    v67 = *(void **)(v0 + 520);
    v4 = *(void **)(v0 + 512);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v69[0] = v6;
    *(_DWORD *)v5 = 136315138;
    *(_QWORD *)(v0 + 320) = v4;
    v7 = v4;
    v8 = sub_213B2BE64();
    *(_QWORD *)(v0 + 328) = sub_213AE1780(v8, v9, v69);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v2, v3, "Remove data from non manatee CloudKit database END {recordID: %s}", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);

    swift_bridgeObjectRelease();
    sub_213AD5374(v64, v66);

  }
  else
  {
    v10 = *(void **)(v0 + 560);
    v11 = *(_QWORD *)(v0 + 544);
    v12 = *(_QWORD *)(v0 + 536);
    v13 = *(void **)(v0 + 512);

    swift_bridgeObjectRelease();
    sub_213AD5374(v12, v11);

  }
  v14 = *(_QWORD *)(v0 + 504) + 1;
  if (v14 == *(_QWORD *)(v0 + 496))
  {
    swift_bridgeObjectRelease();
    v15 = sub_213B2BCD8();
    v16 = sub_213B2C170();
    v17 = os_log_type_enabled(v15, v16);
    v19 = *(NSObject **)(v0 + 448);
    v18 = *(void **)(v0 + 456);
    if (v17)
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213AC8000, v15, v16, "Manatee container migration END", v20, 2u);
      MEMORY[0x2199BD0E8](v20, -1, -1);

    }
    else
    {

      v15 = v19;
    }

    v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  v21 = *(void **)(v0 + 600);
  *(_QWORD *)(v0 + 504) = v14;
  v22 = *(_QWORD *)(v0 + 480) + 16 * v14;
  v23 = *(void **)(v22 + 32);
  *(_QWORD *)(v0 + 512) = v23;
  v24 = *(void **)(v22 + 40);
  *(_QWORD *)(v0 + 520) = v24;
  v25 = v24;
  v26 = v23;
  sub_213AEC3A0(v25, (uint64_t *)(v0 + 136));
  if (v21)
  {
    v27 = v21;
    swift_bridgeObjectRelease();

    v28 = v21;
    v29 = v21;
    v30 = v21;
    v31 = sub_213B2BCD8();
    v32 = sub_213B2C170();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v69[0] = v34;
      *(_DWORD *)v33 = 136315138;
      *(_QWORD *)(v0 + 200) = v27;
      v35 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v36 = sub_213B2BE64();
      *(_QWORD *)(v0 + 208) = sub_213AE1780(v36, v37, v69);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213AC8000, v31, v32, "Manatee container migration FAIL {error: %s}", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v34, -1, -1);
      MEMORY[0x2199BD0E8](v33, -1, -1);
    }
    else
    {

    }
    v58 = *(void **)(v0 + 448);
    v57 = *(void **)(v0 + 456);
    swift_willThrow();

    v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  *(_QWORD *)(v0 + 528) = *(_QWORD *)(v0 + 144);
  v39 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 536) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 544) = v39;
  v65 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 552) = sub_213AD63B4(0, &qword_254D19068);
  sub_213AD63B4(0, &qword_254D19070);
  swift_bridgeObjectRetain();
  sub_213B2C17C();
  v40 = (void *)sub_213B2C11C();
  sub_213AD63B4(0, &qword_254D190E8);
  v41 = v40;
  v42 = (void *)sub_213B2C200();
  *(_QWORD *)(v0 + 560) = v42;
  v43 = objc_msgSend(v42, sel_encryptedValues);
  swift_getObjectType();
  if (qword_254D183B8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v44 = sub_213B2BC30();
  v45 = MEMORY[0x24BDB8BD8];
  *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 128) = v45;
  *(_QWORD *)(v0 + 96) = v44;
  *(_QWORD *)(v0 + 104) = v46;
  sub_213B2C194();
  swift_unknownObjectRelease();
  objc_msgSend(v42, sel_encryptedValues);
  swift_getObjectType();
  if (qword_254D183C0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 240) = v65;
  swift_bridgeObjectRetain();
  v47 = sub_213B2C458();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 88) = MEMORY[0x24BDB8BD8];
  *(_QWORD *)(v0 + 56) = v47;
  *(_QWORD *)(v0 + 64) = v48;
  sub_213B2C194();

  swift_unknownObjectRelease();
  v49 = v26;
  v50 = sub_213B2BCD8();
  v51 = sub_213B2C170();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = swift_slowAlloc();
    v69[0] = v53;
    *(_DWORD *)v52 = 136315138;
    *(_QWORD *)(v0 + 368) = v49;
    v54 = v49;
    v55 = sub_213B2BE64();
    *(_QWORD *)(v0 + 376) = sub_213AE1780(v55, v56, v69);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v50, v51, "Migrate data to manatee CloudKit database START {recordID: %s}", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v53, -1, -1);
    MEMORY[0x2199BD0E8](v52, -1, -1);
  }
  else
  {

  }
  v60 = *(int **)(*(_QWORD *)(v0 + 432) + 240);
  v61 = objc_msgSend(v42, sel_recordID);
  *(_QWORD *)(v0 + 568) = v61;
  *(_QWORD *)(v0 + 248) = v61;
  *(_QWORD *)(v0 + 256) = v42;
  v68 = (uint64_t (*)(uint64_t, uint64_t))((char *)v60 + *v60);
  v62 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 576) = v62;
  *v62 = v0;
  v62[1] = sub_213AEA740;
  return v68(v0 + 248, v0 + 256);
}

uint64_t sub_213AEB884()
{
  return swift_task_switch();
}

uint64_t sub_213AEB898()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void *v28;
  NSObject *v29;
  uint8_t *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  int *v55;
  id v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v65[2];

  v1 = *(void **)(v0 + 600);
  v2 = *(id *)(v0 + 512);
  v3 = v1;
  v4 = v2;
  v5 = v1;
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C158();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 600);
    v60 = *(_QWORD *)(v0 + 536);
    v62 = *(_QWORD *)(v0 + 544);
    v59 = *(void **)(v0 + 560);
    v63 = *(void **)(v0 + 520);
    v9 = *(void **)(v0 + 512);
    v10 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v65[0] = v58;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 296) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v12 = sub_213B2BE64();
    *(_QWORD *)(v0 + 304) = sub_213AE1780(v12, v13, v65);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2080;
    v14 = v9;
    v15 = objc_msgSend(v9, sel_recordName);
    v16 = sub_213B2BE1C();
    v18 = v17;

    *(_QWORD *)(v0 + 312) = sub_213AE1780(v16, v18, v65);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v6, v7, "Remove data from non manatee CloudKit database FAILED -- {error: %s, recordName: %s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v58, -1, -1);
    MEMORY[0x2199BD0E8](v10, -1, -1);

    swift_bridgeObjectRelease();
    sub_213AD5374(v60, v62);

  }
  else
  {
    v19 = *(void **)(v0 + 600);
    v20 = *(void **)(v0 + 560);
    v21 = *(_QWORD *)(v0 + 544);
    v22 = *(_QWORD *)(v0 + 536);
    v23 = *(void **)(v0 + 512);

    swift_bridgeObjectRelease();
    sub_213AD5374(v22, v21);

  }
  v24 = *(_QWORD *)(v0 + 504) + 1;
  if (v24 == *(_QWORD *)(v0 + 496))
  {
    swift_bridgeObjectRelease();
    v25 = sub_213B2BCD8();
    v26 = sub_213B2C170();
    v27 = os_log_type_enabled(v25, v26);
    v29 = *(NSObject **)(v0 + 448);
    v28 = *(void **)(v0 + 456);
    if (v27)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_213AC8000, v25, v26, "Manatee container migration END", v30, 2u);
      MEMORY[0x2199BD0E8](v30, -1, -1);

    }
    else
    {

      v25 = v29;
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 504) = v24;
    v31 = *(_QWORD *)(v0 + 480) + 16 * v24;
    v32 = *(void **)(v31 + 32);
    *(_QWORD *)(v0 + 512) = v32;
    v33 = *(void **)(v31 + 40);
    *(_QWORD *)(v0 + 520) = v33;
    v34 = v33;
    v35 = v32;
    sub_213AEC3A0(v34, (uint64_t *)(v0 + 136));
    *(_QWORD *)(v0 + 528) = *(_QWORD *)(v0 + 144);
    v36 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 536) = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 544) = v36;
    v61 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 552) = sub_213AD63B4(0, &qword_254D19068);
    sub_213AD63B4(0, &qword_254D19070);
    swift_bridgeObjectRetain();
    sub_213B2C17C();
    v37 = (void *)sub_213B2C11C();
    sub_213AD63B4(0, &qword_254D190E8);
    v38 = v37;
    v39 = (void *)sub_213B2C200();
    *(_QWORD *)(v0 + 560) = v39;
    v40 = objc_msgSend(v39, sel_encryptedValues);
    swift_getObjectType();
    if (qword_254D183B8 != -1)
      swift_once();
    swift_bridgeObjectRetain();
    v41 = sub_213B2BC30();
    v42 = MEMORY[0x24BDB8BD8];
    *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 128) = v42;
    *(_QWORD *)(v0 + 96) = v41;
    *(_QWORD *)(v0 + 104) = v43;
    sub_213B2C194();
    swift_unknownObjectRelease();
    objc_msgSend(v39, sel_encryptedValues);
    swift_getObjectType();
    if (qword_254D183C0 != -1)
      swift_once();
    *(_QWORD *)(v0 + 240) = v61;
    swift_bridgeObjectRetain();
    v44 = sub_213B2C458();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 88) = MEMORY[0x24BDB8BD8];
    *(_QWORD *)(v0 + 56) = v44;
    *(_QWORD *)(v0 + 64) = v45;
    sub_213B2C194();

    swift_unknownObjectRelease();
    v46 = v35;
    v47 = sub_213B2BCD8();
    v48 = sub_213B2C170();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v65[0] = v50;
      *(_DWORD *)v49 = 136315138;
      *(_QWORD *)(v0 + 368) = v46;
      v51 = v46;
      v52 = sub_213B2BE64();
      *(_QWORD *)(v0 + 376) = sub_213AE1780(v52, v53, v65);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213AC8000, v47, v48, "Migrate data to manatee CloudKit database START {recordID: %s}", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v50, -1, -1);
      MEMORY[0x2199BD0E8](v49, -1, -1);
    }
    else
    {

    }
    v55 = *(int **)(*(_QWORD *)(v0 + 432) + 240);
    v56 = objc_msgSend(v39, sel_recordID);
    *(_QWORD *)(v0 + 568) = v56;
    *(_QWORD *)(v0 + 248) = v56;
    *(_QWORD *)(v0 + 256) = v39;
    v64 = (uint64_t (*)(uint64_t, uint64_t))((char *)v55 + *v55);
    v57 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 576) = v57;
    *v57 = v0;
    v57[1] = sub_213AEA740;
    return v64(v0 + 248, v0 + 256);
  }
}

uint64_t sub_213AEC1D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 488);
  v2 = v1;
  v3 = v1;
  v4 = v1;
  v5 = sub_213B2BCD8();
  v6 = sub_213B2C170();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v15 = v8;
    *(_QWORD *)(v0 + 200) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v10 = sub_213B2BE64();
    *(_QWORD *)(v0 + 208) = sub_213AE1780(v10, v11, &v15);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v5, v6, "Manatee container migration FAIL {error: %s}", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v8, -1, -1);
    MEMORY[0x2199BD0E8](v7, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)(v0 + 448);
  v12 = *(void **)(v0 + 456);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213AEC3A0(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  id v48;

  v5 = objc_msgSend(objc_msgSend(a1, sel_encryptedValues), sel_allKeys);
  swift_unknownObjectRelease();
  v6 = sub_213B2BF3C();

  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease();
  if (v7)
    v8 = objc_msgSend(a1, sel_encryptedValues);
  else
    v8 = a1;
  v9 = v8;
  if (qword_254D183B8 != -1)
    swift_once();
  v10 = (void *)sub_213B2BDF8();
  v11 = objc_msgSend(v9, sel_objectForKeyedSubscript_, v10);

  sub_213AF6F68((uint64_t)v11);
  swift_unknownObjectRelease();
  if (v2)
    goto LABEL_60;
  if (qword_254D183C0 != -1)
    swift_once();
  v12 = (void *)sub_213B2BDF8();
  v13 = objc_msgSend(v9, sel_objectForKeyedSubscript_, v12);

  if (v13
    && (v48 = v13, __swift_instantiateConcreteTypeFromMangledName(&qword_254D19310), swift_dynamicCast()))
  {
    v14 = v46;
    v15 = v47;
  }
  else
  {
    v15 = 0xE100000000000000;
    v14 = 49;
  }
  v16 = HIBYTE(v15) & 0xF;
  v17 = v14 & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0)
    v18 = HIBYTE(v15) & 0xF;
  else
    v18 = v14 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  if ((v15 & 0x1000000000000000) != 0)
  {
    v20 = (uint64_t)sub_213B12C2C(v14, v15, 10);
    v22 = v45;
    goto LABEL_56;
  }
  if ((v15 & 0x2000000000000000) != 0)
  {
    v46 = v14;
    v47 = v15 & 0xFFFFFFFFFFFFFFLL;
    if (v14 == 43)
    {
      if (!v16)
        goto LABEL_72;
      if (v16 == 1 || (BYTE1(v14) - 48) > 9u)
        goto LABEL_43;
      v20 = (BYTE1(v14) - 48);
      if (v16 != 2)
      {
        if ((BYTE2(v14) - 48) > 9u)
          goto LABEL_43;
        v20 = 10 * (BYTE1(v14) - 48) + (BYTE2(v14) - 48);
        v23 = v16 - 3;
        if (v23)
        {
          v24 = (unsigned __int8 *)&v46 + 3;
          while (1)
          {
            v25 = *v24 - 48;
            if (v25 > 9)
              goto LABEL_43;
            v26 = 10 * v20;
            if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
              goto LABEL_43;
            v20 = v26 + v25;
            if (__OFADD__(v26, v25))
              goto LABEL_43;
            v22 = 0;
            ++v24;
            if (!--v23)
              goto LABEL_56;
          }
        }
      }
    }
    else
    {
      if (v14 == 45)
      {
        if (v16)
        {
          if (v16 != 1 && (BYTE1(v14) - 48) <= 9u)
          {
            if (v16 == 2)
            {
              v22 = 0;
              v20 = -(uint64_t)(BYTE1(v14) - 48);
              goto LABEL_56;
            }
            if ((BYTE2(v14) - 48) <= 9u)
            {
              v20 = -10 * (BYTE1(v14) - 48) - (BYTE2(v14) - 48);
              v31 = v16 - 3;
              if (!v31)
                goto LABEL_55;
              v42 = (unsigned __int8 *)&v46 + 3;
              while (1)
              {
                v43 = *v42 - 48;
                if (v43 > 9)
                  break;
                v44 = 10 * v20;
                if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
                  break;
                v20 = v44 - v43;
                if (__OFSUB__(v44, v43))
                  break;
                v22 = 0;
                ++v42;
                if (!--v31)
                  goto LABEL_56;
              }
            }
          }
LABEL_43:
          v20 = 0;
          v22 = 1;
          goto LABEL_56;
        }
        __break(1u);
LABEL_72:
        __break(1u);
        return;
      }
      if (!v16 || (v14 - 48) > 9u)
        goto LABEL_43;
      v20 = (v14 - 48);
      if (v16 != 1)
      {
        if ((BYTE1(v14) - 48) > 9u)
          goto LABEL_43;
        v20 = 10 * (v14 - 48) + (BYTE1(v14) - 48);
        v27 = v16 - 2;
        if (v27)
        {
          v28 = (unsigned __int8 *)&v46 + 2;
          while (1)
          {
            v29 = *v28 - 48;
            if (v29 > 9)
              goto LABEL_43;
            v30 = 10 * v20;
            if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
              goto LABEL_43;
            v20 = v30 + v29;
            if (__OFADD__(v30, v29))
              goto LABEL_43;
            v22 = 0;
            ++v28;
            if (!--v27)
              goto LABEL_56;
          }
        }
      }
    }
LABEL_55:
    v22 = 0;
    goto LABEL_56;
  }
  if ((v14 & 0x1000000000000000) != 0)
    v19 = (unsigned __int8 *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v19 = (unsigned __int8 *)sub_213B2C338();
  v20 = (uint64_t)sub_213B12BD4(v19, v17, 10);
  v22 = v21 & 1;
LABEL_56:
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
LABEL_57:
    v20 = 1;
  v32 = sub_213B2BBF4();
  v34 = v33;
  swift_bridgeObjectRelease();
  if (v34 >> 60 == 15)
  {
    v46 = 0;
    v47 = 0xE000000000000000;
    sub_213B2C2E4();
    swift_bridgeObjectRelease();
    sub_213AD62AC();
    swift_allocError();
    *(_QWORD *)v35 = 0xD000000000000030;
    *(_QWORD *)(v35 + 8) = 0x8000000213B35040;
    *(_BYTE *)(v35 + 16) = 0;
    swift_willThrow();
LABEL_60:
    swift_unknownObjectRelease();

    return;
  }
  v36 = objc_msgSend(a1, sel_recordID);
  v37 = v20;
  v38 = objc_msgSend(v36, sel_recordName);

  v39 = sub_213B2BE1C();
  v41 = v40;
  swift_unknownObjectRelease();

  *a2 = v39;
  a2[1] = v41;
  a2[2] = v32;
  a2[3] = v34;
  a2[4] = v37;
}

void sub_213AEC958(void *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  _OWORD *v68;
  unsigned __int8 *v69;
  unsigned int v70;
  uint64_t v71;
  char v72;
  char v73;
  _QWORD v74[2];
  uint8_t *v75;
  uint64_t v76;
  os_log_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  _OWORD *v81;
  uint64_t v82;
  uint64_t v83[2];
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  unint64_t v89;

  v81 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213B2BBD0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v74 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v74 - v17;
  v82 = *a2;
  v89 = a2[1];
  if (qword_254D18398 != -1)
    swift_once();
  v19 = sub_213B2C20C();
  v20 = sub_213AF6F68(v19);
  if (v3)
  {
    sub_213AD5374(v82, v89);

    swift_unknownObjectRelease();
    return;
  }
  v78 = v20;
  v79 = v21;
  swift_unknownObjectRelease();
  if (qword_254D183B0 != -1)
    swift_once();
  v80 = a1;
  if (!sub_213B2C20C())
    goto LABEL_16;
  objc_opt_self();
  v22 = (void *)swift_dynamicCastObjCClass();
  if (!v22)
  {
    swift_unknownObjectRelease();
LABEL_16:
    if (qword_254D183A0 != -1)
      swift_once();
    v35 = sub_213B2C20C();
    sub_213AF6F68(v35);
LABEL_19:
    swift_unknownObjectRelease();
    v36 = sub_213B2BBF4();
    v38 = v37;
    swift_bridgeObjectRelease();
    if (v38 >> 60 == 15)
    {
      *(_QWORD *)&v84 = 0;
      *((_QWORD *)&v84 + 1) = 0xE000000000000000;
      sub_213B2C2E4();
      swift_bridgeObjectRelease();
      sub_213AD62AC();
      swift_allocError();
      *(_QWORD *)v39 = 0xD000000000000030;
      *(_QWORD *)(v39 + 8) = 0x8000000213B35140;
      *(_BYTE *)(v39 + 16) = 0;
      swift_willThrow();
      sub_213AD5374(v82, v89);

      swift_bridgeObjectRelease();
      return;
    }
    if (qword_254D183A8 != -1)
      swift_once();
    v45 = sub_213B2C20C();
    if (v45
      && (v83[0] = v45, __swift_instantiateConcreteTypeFromMangledName(&qword_254D19310), (swift_dynamicCast() & 1) != 0))
    {
      v47 = *((_QWORD *)&v84 + 1);
      v46 = v84;
    }
    else
    {
      v47 = 0xE100000000000000;
      v46 = 49;
    }
    v48 = HIBYTE(v47) & 0xF;
    v49 = v46 & 0xFFFFFFFFFFFFLL;
    if ((v47 & 0x2000000000000000) != 0)
      v50 = HIBYTE(v47) & 0xF;
    else
      v50 = v46 & 0xFFFFFFFFFFFFLL;
    if (!v50)
    {
      swift_bridgeObjectRelease();
      goto LABEL_79;
    }
    if ((v47 & 0x1000000000000000) != 0)
    {
      v52 = (uint64_t)sub_213B12C2C(v46, v47, 10);
      v73 = v72;
      swift_bridgeObjectRelease();
      if ((v73 & 1) == 0)
        goto LABEL_80;
      goto LABEL_79;
    }
    if ((v47 & 0x2000000000000000) == 0)
    {
      if ((v46 & 0x1000000000000000) != 0)
        v51 = (unsigned __int8 *)((v47 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v51 = (unsigned __int8 *)sub_213B2C338();
      v52 = (uint64_t)sub_213B12BD4(v51, v49, 10);
      v54 = v53 & 1;
LABEL_78:
      swift_bridgeObjectRelease();
      if ((v54 & 1) == 0)
      {
LABEL_80:
        v83[0] = v82;
        v83[1] = v89;
        sub_213AF75E8(v78, v79, v36, v38, v83, v52, (uint64_t *)&v84);

        v64 = v85;
        v65 = v86;
        v66 = v88;
        v67 = v87;
        v68 = v81;
        *v81 = v84;
        *((_QWORD *)v68 + 2) = v64;
        *((_QWORD *)v68 + 3) = v65;
        v68[2] = v67;
        *((_QWORD *)v68 + 6) = v66;
        return;
      }
LABEL_79:
      v52 = 1;
      goto LABEL_80;
    }
    *(_QWORD *)&v84 = v46;
    *((_QWORD *)&v84 + 1) = v47 & 0xFFFFFFFFFFFFFFLL;
    if (v46 == 43)
    {
      if (!v48)
      {
LABEL_92:
        __break(1u);
        return;
      }
      if (v48 == 1 || (BYTE1(v46) - 48) > 9u)
        goto LABEL_65;
      v52 = (BYTE1(v46) - 48);
      if (v48 != 2)
      {
        if ((BYTE2(v46) - 48) > 9u)
          goto LABEL_65;
        v52 = 10 * (BYTE1(v46) - 48) + (BYTE2(v46) - 48);
        v55 = v48 - 3;
        if (v55)
        {
          v56 = (unsigned __int8 *)&v84 + 3;
          while (1)
          {
            v57 = *v56 - 48;
            if (v57 > 9)
              goto LABEL_65;
            v58 = 10 * v52;
            if ((unsigned __int128)(v52 * (__int128)10) >> 64 != (10 * v52) >> 63)
              goto LABEL_65;
            v52 = v58 + v57;
            if (__OFADD__(v58, v57))
              goto LABEL_65;
            v54 = 0;
            ++v56;
            if (!--v55)
              goto LABEL_78;
          }
        }
      }
    }
    else
    {
      if (v46 == 45)
      {
        if (v48)
        {
          if (v48 != 1 && (BYTE1(v46) - 48) <= 9u)
          {
            if (v48 == 2)
            {
              v54 = 0;
              v52 = -(uint64_t)(BYTE1(v46) - 48);
              goto LABEL_78;
            }
            if ((BYTE2(v46) - 48) <= 9u)
            {
              v52 = -10 * (BYTE1(v46) - 48) - (BYTE2(v46) - 48);
              v63 = v48 - 3;
              if (!v63)
                goto LABEL_77;
              v69 = (unsigned __int8 *)&v84 + 3;
              while (1)
              {
                v70 = *v69 - 48;
                if (v70 > 9)
                  break;
                v71 = 10 * v52;
                if ((unsigned __int128)(v52 * (__int128)10) >> 64 != (10 * v52) >> 63)
                  break;
                v52 = v71 - v70;
                if (__OFSUB__(v71, v70))
                  break;
                v54 = 0;
                ++v69;
                if (!--v63)
                  goto LABEL_78;
              }
            }
          }
LABEL_65:
          v52 = 0;
          v54 = 1;
          goto LABEL_78;
        }
        __break(1u);
        goto LABEL_92;
      }
      if (!v48 || (v46 - 48) > 9u)
        goto LABEL_65;
      v52 = (v46 - 48);
      if (v48 != 1)
      {
        if ((BYTE1(v46) - 48) > 9u)
          goto LABEL_65;
        v52 = 10 * (v46 - 48) + (BYTE1(v46) - 48);
        v59 = v48 - 2;
        if (v59)
        {
          v60 = (unsigned __int8 *)&v84 + 2;
          while (1)
          {
            v61 = *v60 - 48;
            if (v61 > 9)
              goto LABEL_65;
            v62 = 10 * v52;
            if ((unsigned __int128)(v52 * (__int128)10) >> 64 != (10 * v52) >> 63)
              goto LABEL_65;
            v52 = v62 + v61;
            if (__OFADD__(v62, v61))
              goto LABEL_65;
            v54 = 0;
            ++v60;
            if (!--v59)
              goto LABEL_78;
          }
        }
      }
    }
LABEL_77:
    v54 = 0;
    goto LABEL_78;
  }
  v23 = objc_msgSend(v22, sel_fileURL);
  if (v23)
  {
    v24 = v23;
    sub_213B2BBA0();

    v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v25(v8, v16, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v25(v18, v8, v9);
      if (qword_254D18388 != -1)
        swift_once();
      v26 = sub_213B2BCF0();
      __swift_project_value_buffer(v26, (uint64_t)qword_254D18FA0);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v18, v9);
      v27 = sub_213B2BCD8();
      v28 = sub_213B2C140();
      if (os_log_type_enabled(v27, v28))
      {
        v77 = v27;
        v29 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        *(_QWORD *)&v84 = v76;
        v75 = v29;
        *(_DWORD *)v29 = 136315138;
        v74[1] = v29 + 4;
        sub_213AFC5F0((unint64_t *)&qword_254D19030, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v30 = sub_213B2C458();
        v83[0] = sub_213AE1780(v30, v31, (uint64_t *)&v84);
        sub_213B2C254();
        swift_bridgeObjectRelease();
        v32 = *(void (**)(char *, uint64_t))(v10 + 8);
        v32(v13, v9);
        v27 = v77;
        v33 = v75;
        _os_log_impl(&dword_213AC8000, v77, v28, "Reading data from %s", v75, 0xCu);
        v34 = v76;
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v34, -1, -1);
        MEMORY[0x2199BD0E8](v33, -1, -1);
      }
      else
      {
        v32 = *(void (**)(char *, uint64_t))(v10 + 8);
        v32(v13, v9);
      }

      sub_213B2BDEC();
      v32(v18, v9);
      goto LABEL_19;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_213AD5374(v82, v89);
  swift_bridgeObjectRelease();
  sub_213AD6270((uint64_t)v8, &qword_254D188E0);
  if (qword_254D18388 != -1)
    swift_once();
  v40 = sub_213B2BCF0();
  __swift_project_value_buffer(v40, (uint64_t)qword_254D18FA0);
  v41 = sub_213B2BCD8();
  v42 = sub_213B2C158();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_213AC8000, v41, v42, "Public record asset isn't locally cached", v43, 2u);
    MEMORY[0x2199BD0E8](v43, -1, -1);
  }

  sub_213AD62AC();
  swift_allocError();
  *(_OWORD *)v44 = xmmword_213B2EC80;
  *(_BYTE *)(v44 + 16) = 2;
  swift_willThrow();
  swift_unknownObjectRelease();

}

uint64_t sub_213AED3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;

  v8[68] = a8;
  v8[67] = a7;
  v8[66] = a6;
  v8[65] = a5;
  v8[63] = a3;
  v8[64] = a4;
  v8[61] = a1;
  v8[62] = a2;
  v11 = sub_213B2BCF0();
  v8[69] = v11;
  v8[70] = *(_QWORD *)(v11 - 8);
  v8[71] = swift_task_alloc();
  v8[72] = swift_task_alloc();
  v8[73] = swift_task_alloc();
  v8[74] = swift_task_alloc();
  v8[75] = swift_task_alloc();
  v8[76] = swift_task_alloc();
  v8[77] = swift_task_alloc();
  v8[78] = swift_task_alloc();
  sub_213AD5300(a7, a8);
  sub_213AD5300(a7, a8);
  sub_213AD5300(a7, a8);
  return swift_task_switch();
}

uint64_t sub_213AED4F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = v0[78];
  v2 = v0[70];
  v3 = v0[69];
  v4 = (void *)v0[64];
  v5 = __swift_project_value_buffer(v3, (uint64_t)qword_254D18FA0);
  v0[79] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[80] = v6;
  v6(v1, v5, v3);
  swift_bridgeObjectRetain_n();
  v7 = v4;
  v8 = sub_213B2BCD8();
  v9 = sub_213B2C170();
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[78];
  v12 = v0[70];
  v13 = v0[69];
  v15 = v0[63];
  v14 = (void *)v0[64];
  if (v10)
  {
    v29 = v0[78];
    v30 = v0[69];
    v26 = v0[62];
    v28 = v0[70];
    v16 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32 = v27;
    *(_DWORD *)v16 = 136315650;
    v0[58] = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, &v32);
    sub_213B2C254();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[59] = sub_213AE1780(v26, v15, &v32);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 22) = 2080;
    v17 = objc_msgSend(v14, sel_recordName);
    v18 = sub_213B2BE1C();
    v20 = v19;

    v0[60] = sub_213AE1780(v18, v20, &v32);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v8, v9, "Fetch %s START {cacheName: %s, recordName: %s}", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v27, -1, -1);
    MEMORY[0x2199BD0E8](v16, -1, -1);

    v21 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v21(v29, v30);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v21 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v21(v11, v13);
  }
  v0[81] = v21;
  v22 = v0[63];
  v23 = *(int **)(v0[66] + 320);
  v0[32] = v0[62];
  v0[33] = v22;
  v31 = (int *)((char *)v23 + *v23);
  v24 = (_QWORD *)swift_task_alloc();
  v0[82] = v24;
  *v24 = v0;
  v24[1] = sub_213AED814;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v31)(v0 + 30, v0 + 32);
}

uint64_t sub_213AED814()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 664) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AED878()
{
  return swift_task_switch();
}

uint64_t sub_213AED88C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  BOOL v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  NSObject *log;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 672) = v1;
  *(_QWORD *)(v0 + 680) = v2;
  if (v2 >> 60 == 15)
  {
    v3 = sub_213B2BCD8();
    v4 = sub_213B2C140();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_213AC8000, v3, v4, "No local record -- loading from CloudKit", v5, 2u);
      MEMORY[0x2199BD0E8](v5, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 544);
    v7 = *(_QWORD *)(v0 + 536);

    sub_213AD5300(v7, v6);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 712) = v8;
    *v8 = v0;
    v8[1] = sub_213AEE950;
    return sub_213AF233C(v0 + 184, *(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
  }
  else
  {
    sub_213AD5300(v1, v2);
    v10 = sub_213B2BCD8();
    v11 = sub_213B2C140();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_213AC8000, v10, v11, "Record exists locally. Loading.", v12, 2u);
      MEMORY[0x2199BD0E8](v12, -1, -1);
    }
    v13 = *(void **)(v0 + 664);

    sub_213B2BA20();
    swift_allocObject();
    sub_213B2BA14();
    sub_213AFC4DC();
    sub_213B2BA08();
    *(_QWORD *)(v0 + 688) = v13;
    if (v13)
    {
      swift_release();
      swift_bridgeObjectRetain();
      v14 = v13;
      swift_bridgeObjectRetain();
      v15 = v13;
      v16 = sub_213B2BCD8();
      v17 = sub_213B2C158();
      v18 = os_log_type_enabled(v16, v17);
      v19 = *(_QWORD *)(v0 + 504);
      if (v18)
      {
        v50 = *(_QWORD *)(v0 + 496);
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        v52[0] = v21;
        *(_DWORD *)v20 = 136315394;
        *(_QWORD *)(v0 + 424) = v13;
        v22 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
        v23 = sub_213B2BE64();
        *(_QWORD *)(v0 + 432) = sub_213AE1780(v23, v24, v52);
        sub_213B2C254();
        swift_bridgeObjectRelease();

        *(_WORD *)(v20 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 440) = sub_213AE1780(v50, v19, v52);
        sub_213B2C254();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_213AC8000, v16, v17, "Error decoding local record -- fallback to CloudKit {error: %s, cacheName: %s}", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v21, -1, -1);
        MEMORY[0x2199BD0E8](v20, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      sub_213AD5300(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
      v40 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 696) = v40;
      *v40 = v0;
      v40[1] = sub_213AEE200;
      return sub_213AF233C(v0 + 72, *(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
    }
    else
    {
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 640);
      v26 = *(_QWORD *)(v0 + 632);
      v27 = *(_QWORD *)(v0 + 616);
      v28 = *(_QWORD *)(v0 + 552);
      swift_release();
      v25(v27, v26, v28);
      swift_bridgeObjectRetain_n();
      v29 = sub_213B2BCD8();
      v30 = sub_213B2C170();
      v31 = os_log_type_enabled(v29, v30);
      v32 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
      v33 = *(_QWORD *)(v0 + 616);
      v51 = *(_QWORD *)(v0 + 552);
      v34 = *(_QWORD *)(v0 + 544);
      v35 = *(_QWORD *)(v0 + 536);
      v36 = *(_QWORD *)(v0 + 504);
      if (v31)
      {
        v48 = *(_QWORD *)(v0 + 544);
        v46 = *(_QWORD *)(v0 + 496);
        v49 = *(_QWORD *)(v0 + 616);
        v37 = swift_slowAlloc();
        log = v29;
        v38 = swift_slowAlloc();
        v52[0] = v38;
        *(_DWORD *)v37 = 136315394;
        *(_QWORD *)(v0 + 448) = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, v52);
        sub_213B2C254();
        *(_WORD *)(v37 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 456) = sub_213AE1780(v46, v36, v52);
        sub_213B2C254();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_213AC8000, log, v30, "Fetch %s END -- Local load {filename: %s}", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v38, -1, -1);
        MEMORY[0x2199BD0E8](v37, -1, -1);
        sub_213ADAE20(v1, v2);
        sub_213ADAE20(v1, v2);

        v32(v49, v51);
        v39 = v35;
        v34 = v48;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_213ADAE20(v1, v2);
        sub_213ADAE20(v1, v2);

        v32(v33, v51);
        v39 = v35;
      }
      sub_213AD5374(v39, v34);
      sub_213AD5374(v35, v34);
      sub_213AD5374(v35, v34);
      v41 = *(_QWORD *)(v0 + 488);
      v42 = *(_QWORD *)(v0 + 144);
      v43 = *(_QWORD *)(v0 + 152);
      v44 = *(_QWORD *)(v0 + 176);
      v45 = *(_OWORD *)(v0 + 160);
      *(_OWORD *)v41 = *(_OWORD *)(v0 + 128);
      *(_QWORD *)(v41 + 16) = v42;
      *(_QWORD *)(v41 + 24) = v43;
      *(_OWORD *)(v41 + 32) = v45;
      *(_QWORD *)(v41 + 48) = v44;
      sub_213AD5374(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_213AEDF90()
{
  return swift_task_switch();
}

uint64_t sub_213AEDFA4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v1 = (void *)v0[83];
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[83];
    v7 = v0[63];
    v16 = v0[62];
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    v0[35] = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    v0[36] = sub_213AE1780(v11, v12, &v17);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[37] = sub_213AE1780(v16, v7, &v17);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Error reading local data -- fallback to CloudKit {error: %s, cacheName: %s}", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    v13 = (void *)v0[83];

    swift_bridgeObjectRelease_n();
  }

  sub_213AD5300(v0[67], v0[68]);
  v14 = (_QWORD *)swift_task_alloc();
  v0[91] = v14;
  *v14 = v0;
  v14[1] = sub_213AEF000;
  return sub_213AF233C((uint64_t)(v0 + 2), v0[62], v0[63], v0[64], v0[65], v0[66], v0[67], v0[68]);
}

uint64_t sub_213AEE200()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 704) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AEE264()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  unint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 640))(*(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 552));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v22 = *(_QWORD *)(v0 + 672);
    v23 = *(_QWORD *)(v0 + 680);
    v25 = *(_QWORD *)(v0 + 608);
    v26 = *(id *)(v0 + 688);
    v24 = *(_QWORD *)(v0 + 552);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v29 = *(_QWORD *)(v0 + 544);
    v27 = *(_QWORD *)(v0 + 536);
    v3 = *(_QWORD *)(v0 + 496);
    v4 = *(_QWORD *)(v0 + 504);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v31 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 408) = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, &v31);
    sub_213B2C254();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 416) = sub_213AE1780(v3, v4, &v31);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s END -- fallback to CloudKit [2] {cacheName: %s}", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);
    sub_213ADAE20(v22, v23);
    sub_213ADAE20(v22, v23);

    v28(v25, v24);
    sub_213AD5374(v27, v29);
    sub_213AD5374(v27, v29);
    v7 = v27;
    v8 = v29;
  }
  else
  {
    v9 = *(void **)(v0 + 688);
    v10 = *(_QWORD *)(v0 + 680);
    v11 = *(_QWORD *)(v0 + 672);
    v30 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v12 = *(_QWORD *)(v0 + 608);
    v13 = *(_QWORD *)(v0 + 552);
    v14 = *(_QWORD *)(v0 + 544);
    v15 = *(_QWORD *)(v0 + 536);
    sub_213ADAE20(v11, v10);
    sub_213ADAE20(v11, v10);

    swift_bridgeObjectRelease_n();
    v30(v12, v13);
    sub_213AD5374(v15, v14);
    sub_213AD5374(v15, v14);
    v7 = v15;
    v8 = v14;
  }
  sub_213AD5374(v7, v8);
  v16 = *(_QWORD *)(v0 + 488);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 120);
  v20 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)v16 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v16 + 24) = v18;
  *(_OWORD *)(v16 + 32) = v20;
  *(_QWORD *)(v16 + 48) = v19;
  sub_213AD5374(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AEE5C8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27[2];

  v1 = *(void **)(v0 + 704);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 640))(*(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 552));
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 704);
    v25 = *(_QWORD *)(v0 + 600);
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v7 = *(_QWORD *)(v0 + 504);
    v23 = *(_QWORD *)(v0 + 496);
    v24 = *(_QWORD *)(v0 + 552);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v27[0] = v9;
    *(_DWORD *)v8 = 136315650;
    *(_QWORD *)(v0 + 376) = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, v27);
    sub_213B2C254();
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 384) = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    *(_QWORD *)(v0 + 392) = sub_213AE1780(v11, v12, v27);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 400) = sub_213AE1780(v23, v7, v27);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Fetch %s FAIL -- fallback to CloudKit [2] {error: %s, cacheName: %s}", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);

    v26(v25, v24);
  }
  else
  {
    v13 = *(void **)(v0 + 704);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v15 = *(_QWORD *)(v0 + 600);
    v16 = *(_QWORD *)(v0 + 552);

    swift_bridgeObjectRelease_n();
    v14(v15, v16);
  }
  v17 = *(void **)(v0 + 688);
  v18 = *(_QWORD *)(v0 + 680);
  v19 = *(_QWORD *)(v0 + 672);
  swift_willThrow();
  sub_213ADAE20(v19, v18);
  sub_213ADAE20(v19, v18);

  v20 = *(_QWORD *)(v0 + 544);
  v21 = *(_QWORD *)(v0 + 536);
  sub_213AD5374(v21, v20);
  sub_213AD5374(v21, v20);
  sub_213AD5374(v21, v20);
  sub_213AD5374(v21, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AEE950()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 720) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AEE9B4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  unint64_t v24;
  uint64_t v25;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 640))(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 552));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v22 = *(_QWORD *)(v0 + 592);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v24 = *(_QWORD *)(v0 + 544);
    v3 = *(_QWORD *)(v0 + 536);
    v4 = *(_QWORD *)(v0 + 504);
    v20 = *(_QWORD *)(v0 + 496);
    v21 = *(_QWORD *)(v0 + 552);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v25 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 344) = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, &v25);
    sub_213B2C254();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 352) = sub_213AE1780(v20, v4, &v25);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s END -- load from CloudKit {cacheName: %s}", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);

    v23(v22, v21);
    sub_213AD5374(v3, v24);
    sub_213AD5374(v3, v24);
    v7 = v3;
    v8 = v24;
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v10 = *(_QWORD *)(v0 + 592);
    v11 = *(_QWORD *)(v0 + 552);
    v12 = *(_QWORD *)(v0 + 544);
    v13 = *(_QWORD *)(v0 + 536);
    swift_bridgeObjectRelease_n();

    v9(v10, v11);
    sub_213AD5374(v13, v12);
    sub_213AD5374(v13, v12);
    v7 = v13;
    v8 = v12;
  }
  sub_213AD5374(v7, v8);
  v14 = *(_QWORD *)(v0 + 488);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 208);
  v17 = *(_QWORD *)(v0 + 232);
  v18 = *(_OWORD *)(v0 + 216);
  *(_OWORD *)v14 = *(_OWORD *)(v0 + 184);
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 24) = v16;
  *(_OWORD *)(v14 + 32) = v18;
  *(_QWORD *)(v14 + 48) = v17;
  sub_213AD5374(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AEECA4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24[2];

  v1 = *(void **)(v0 + 720);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 640))(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 552));
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 720);
    v22 = *(_QWORD *)(v0 + 584);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v7 = *(_QWORD *)(v0 + 504);
    v20 = *(_QWORD *)(v0 + 496);
    v21 = *(_QWORD *)(v0 + 552);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v24[0] = v9;
    *(_DWORD *)v8 = 136315650;
    *(_QWORD *)(v0 + 312) = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, v24);
    sub_213B2C254();
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 320) = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    *(_QWORD *)(v0 + 328) = sub_213AE1780(v11, v12, v24);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 336) = sub_213AE1780(v20, v7, v24);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Fetch %s FAIL -- load from CloudKit {error: %s, cacheName: %s}", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);

    v23(v22, v21);
  }
  else
  {
    v13 = *(void **)(v0 + 720);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v15 = *(_QWORD *)(v0 + 584);
    v16 = *(_QWORD *)(v0 + 552);

    swift_bridgeObjectRelease_n();
    v14(v15, v16);
  }
  swift_willThrow();
  v17 = *(_QWORD *)(v0 + 544);
  v18 = *(_QWORD *)(v0 + 536);
  sub_213AD5374(v18, v17);
  sub_213AD5374(v18, v17);
  sub_213AD5374(v18, v17);
  sub_213AD5374(v18, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AEF000()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 736) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AEF064()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  unint64_t v25;
  uint64_t v26;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 640))(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 552));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v21 = *(id *)(v0 + 664);
    v23 = *(_QWORD *)(v0 + 576);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v22 = *(_QWORD *)(v0 + 552);
    v25 = *(_QWORD *)(v0 + 544);
    v3 = *(_QWORD *)(v0 + 536);
    v5 = *(_QWORD *)(v0 + 496);
    v4 = *(_QWORD *)(v0 + 504);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v26 = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 304) = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, &v26);
    sub_213B2C254();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 272) = sub_213AE1780(v5, v4, &v26);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s END -- fallback to CloudKit [1] {cacheName: %s}", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v7, -1, -1);
    MEMORY[0x2199BD0E8](v6, -1, -1);

    v24(v23, v22);
    sub_213AD5374(v3, v25);
    sub_213AD5374(v3, v25);
    v8 = v3;
    v9 = v25;
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v11 = *(_QWORD *)(v0 + 576);
    v12 = *(_QWORD *)(v0 + 552);
    v13 = *(_QWORD *)(v0 + 544);
    v14 = *(_QWORD *)(v0 + 536);

    swift_bridgeObjectRelease_n();
    v10(v11, v12);
    sub_213AD5374(v14, v13);
    sub_213AD5374(v14, v13);
    v8 = v14;
    v9 = v13;
  }
  sub_213AD5374(v8, v9);
  v15 = *(_QWORD *)(v0 + 488);
  v16 = *(_QWORD *)(v0 + 32);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_QWORD *)(v0 + 64);
  v19 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)v15 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = v17;
  *(_OWORD *)(v15 + 32) = v19;
  *(_QWORD *)(v15 + 48) = v18;
  sub_213AD5374(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AEF370()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17[2];

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 640))(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 552));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C158();
  if (os_log_type_enabled(v1, v2))
  {
    v15 = *(_QWORD *)(v0 + 568);
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v14 = *(_QWORD *)(v0 + 552);
    v3 = *(_QWORD *)(v0 + 496);
    v4 = *(_QWORD *)(v0 + 504);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v17[0] = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 368) = sub_213AE1780(0x655263696C627550, 0xEC00000064726F63, v17);
    sub_213B2C254();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 360) = sub_213AE1780(v3, v4, v17);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s FAIL -- fallback to CloudKit [1] {cacheName: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);

    v16(v15, v14);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v8 = *(_QWORD *)(v0 + 568);
    v9 = *(_QWORD *)(v0 + 552);
    swift_bridgeObjectRelease_n();

    v7(v8, v9);
  }
  v10 = *(void **)(v0 + 664);
  swift_willThrow();

  v11 = *(_QWORD *)(v0 + 544);
  v12 = *(_QWORD *)(v0 + 536);
  sub_213AD5374(v12, v11);
  sub_213AD5374(v12, v11);
  sub_213AD5374(v12, v11);
  sub_213AD5374(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AEF628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[57] = a5;
  v6[58] = a6;
  v6[55] = a3;
  v6[56] = a4;
  v6[53] = a1;
  v6[54] = a2;
  v7 = sub_213B2BCF0();
  v6[59] = v7;
  v6[60] = *(_QWORD *)(v7 - 8);
  v6[61] = swift_task_alloc();
  v6[62] = swift_task_alloc();
  v6[63] = swift_task_alloc();
  v6[64] = swift_task_alloc();
  v6[65] = swift_task_alloc();
  v6[66] = swift_task_alloc();
  v6[67] = swift_task_alloc();
  v6[68] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213AEF6EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = v0[68];
  v2 = v0[59];
  v3 = v0[60];
  v4 = (void *)v0[56];
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FA0);
  v0[69] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[70] = v6;
  v6(v1, v5, v2);
  swift_bridgeObjectRetain_n();
  v7 = v4;
  v8 = sub_213B2BCD8();
  v9 = sub_213B2C170();
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[68];
  v12 = v0[59];
  v13 = v0[60];
  v15 = v0[55];
  v14 = (void *)v0[56];
  if (v10)
  {
    v29 = v0[68];
    v30 = v0[59];
    v26 = v0[54];
    v28 = v0[60];
    v16 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32 = v27;
    *(_DWORD *)v16 = 136315650;
    v0[50] = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, &v32);
    sub_213B2C254();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[51] = sub_213AE1780(v26, v15, &v32);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 22) = 2080;
    v17 = objc_msgSend(v14, sel_recordName);
    v18 = sub_213B2BE1C();
    v20 = v19;

    v0[52] = sub_213AE1780(v18, v20, &v32);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v8, v9, "Fetch %s START {cacheName: %s, recordName: %s}", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v27, -1, -1);
    MEMORY[0x2199BD0E8](v16, -1, -1);

    v21 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v21(v29, v30);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v21(v11, v12);
  }
  v0[71] = v21;
  v22 = v0[55];
  v23 = *(int **)(v0[58] + 320);
  v0[24] = v0[54];
  v0[25] = v22;
  v31 = (int *)((char *)v23 + *v23);
  v24 = (_QWORD *)swift_task_alloc();
  v0[72] = v24;
  *v24 = v0;
  v24[1] = sub_213AEFA08;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v31)(v0 + 22, v0 + 24);
}

uint64_t sub_213AEFA08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 584) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AEFA6C()
{
  return swift_task_switch();
}

uint64_t sub_213AEFA80()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 592) = v1;
  *(_QWORD *)(v0 + 600) = v2;
  if (v2 >> 60 == 15)
  {
    v3 = sub_213B2BCD8();
    v4 = sub_213B2C140();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_213AC8000, v3, v4, "No local record -- loading from CloudKit", v5, 2u);
      MEMORY[0x2199BD0E8](v5, -1, -1);
    }

    v6 = v0 + 136;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 632) = v7;
    v8 = sub_213AF09B0;
LABEL_14:
    *v7 = v0;
    v7[1] = v8;
    return sub_213AF4234(v6, *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464));
  }
  sub_213AD5300(v1, v2);
  v9 = sub_213B2BCD8();
  v10 = sub_213B2C140();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_213AC8000, v9, v10, "Record exists locally. Loading.", v11, 2u);
    MEMORY[0x2199BD0E8](v11, -1, -1);
  }
  v12 = *(void **)(v0 + 584);

  sub_213B2BA20();
  swift_allocObject();
  sub_213B2BA14();
  sub_213AFC704();
  sub_213B2BA08();
  *(_QWORD *)(v0 + 608) = v12;
  if (v12)
  {
    swift_release();
    swift_bridgeObjectRetain();
    v13 = v12;
    swift_bridgeObjectRetain();
    v14 = v12;
    v15 = sub_213B2BCD8();
    v16 = sub_213B2C158();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 440);
    if (v17)
    {
      v44 = *(_QWORD *)(v0 + 432);
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v46[0] = v20;
      *(_DWORD *)v19 = 136315394;
      *(_QWORD *)(v0 + 360) = v12;
      v21 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v22 = sub_213B2BE64();
      *(_QWORD *)(v0 + 368) = sub_213AE1780(v22, v23, v46);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 376) = sub_213AE1780(v44, v18, v46);
      sub_213B2C254();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213AC8000, v15, v16, "Error decoding local record -- fallback to CloudKit {error: %s, cacheName: %s}", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v20, -1, -1);
      MEMORY[0x2199BD0E8](v19, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    v6 = v0 + 56;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 616) = v7;
    v8 = sub_213AF0330;
    goto LABEL_14;
  }
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 560);
  v25 = *(_QWORD *)(v0 + 552);
  v26 = *(_QWORD *)(v0 + 536);
  v27 = *(_QWORD *)(v0 + 472);
  swift_release();
  v24(v26, v25, v27);
  swift_bridgeObjectRetain_n();
  v28 = sub_213B2BCD8();
  v29 = sub_213B2C170();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  v32 = *(_QWORD *)(v0 + 536);
  v33 = *(_QWORD *)(v0 + 472);
  v34 = *(_QWORD *)(v0 + 440);
  if (v30)
  {
    v45 = *(_QWORD *)(v0 + 472);
    v42 = *(_QWORD *)(v0 + 432);
    v35 = swift_slowAlloc();
    v43 = v32;
    v36 = swift_slowAlloc();
    v46[0] = v36;
    *(_DWORD *)v35 = 136315394;
    *(_QWORD *)(v0 + 384) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, v46);
    sub_213B2C254();
    *(_WORD *)(v35 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 392) = sub_213AE1780(v42, v34, v46);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v28, v29, "Fetch %s END -- Local load {filename: %s}", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v36, -1, -1);
    MEMORY[0x2199BD0E8](v35, -1, -1);
    sub_213ADAE20(v1, v2);
    sub_213ADAE20(v1, v2);

    v31(v43, v45);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_213ADAE20(v1, v2);
    sub_213ADAE20(v1, v2);

    v31(v32, v33);
  }
  v38 = *(_QWORD *)(v0 + 424);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 128);
  v41 = *(_OWORD *)(v0 + 112);
  *(_QWORD *)v38 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v38 + 8) = v39;
  *(_OWORD *)(v38 + 16) = v41;
  *(_QWORD *)(v38 + 32) = v40;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF00DC()
{
  return swift_task_switch();
}

uint64_t sub_213AF00F0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v1 = (void *)v0[73];
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[73];
    v7 = v0[55];
    v16 = v0[54];
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    v0[27] = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    v0[28] = sub_213AE1780(v11, v12, &v17);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[29] = sub_213AE1780(v16, v7, &v17);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Error reading local data -- fallback to CloudKit {error: %s, cacheName: %s}", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    v13 = (void *)v0[73];

    swift_bridgeObjectRelease_n();
  }

  v14 = (_QWORD *)swift_task_alloc();
  v0[81] = v14;
  *v14 = v0;
  v14[1] = sub_213AF0FA8;
  return sub_213AF4234((uint64_t)(v0 + 2), v0[54], v0[55], v0[56], v0[57], v0[58]);
}

uint64_t sub_213AF0330()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF0394()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 560))(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 472));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v18 = *(_QWORD *)(v0 + 592);
    v19 = *(_QWORD *)(v0 + 600);
    v22 = *(id *)(v0 + 608);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v20 = *(_QWORD *)(v0 + 472);
    v21 = *(_QWORD *)(v0 + 528);
    v4 = *(_QWORD *)(v0 + 432);
    v3 = *(_QWORD *)(v0 + 440);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v24 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 344) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, &v24);
    sub_213B2C254();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 352) = sub_213AE1780(v4, v3, &v24);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s END -- fallback to CloudKit [2] {cacheName: %s}", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);
    sub_213ADAE20(v18, v19);
    sub_213ADAE20(v18, v19);

    v23(v21, v20);
  }
  else
  {
    v7 = *(void **)(v0 + 608);
    v8 = *(_QWORD *)(v0 + 600);
    v9 = *(_QWORD *)(v0 + 592);
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v11 = *(_QWORD *)(v0 + 528);
    v12 = *(_QWORD *)(v0 + 472);
    sub_213ADAE20(v9, v8);
    sub_213ADAE20(v9, v8);

    swift_bridgeObjectRelease_n();
    v10(v11, v12);
  }
  v13 = *(_QWORD *)(v0 + 424);
  v14 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 88);
  v16 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)v13 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v13 + 8) = v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(_QWORD *)(v13 + 32) = v15;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF0670()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25[2];

  v1 = *(void **)(v0 + 624);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 560))(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 472));
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 624);
    v23 = *(_QWORD *)(v0 + 520);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v7 = *(_QWORD *)(v0 + 440);
    v21 = *(_QWORD *)(v0 + 432);
    v22 = *(_QWORD *)(v0 + 472);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v25[0] = v9;
    *(_DWORD *)v8 = 136315650;
    *(_QWORD *)(v0 + 312) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, v25);
    sub_213B2C254();
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 320) = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    *(_QWORD *)(v0 + 328) = sub_213AE1780(v11, v12, v25);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 336) = sub_213AE1780(v21, v7, v25);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Fetch %s FAIL -- fallback to CloudKit [2] {error: %s, cacheName: %s}", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);

    v24(v23, v22);
  }
  else
  {
    v13 = *(void **)(v0 + 624);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v15 = *(_QWORD *)(v0 + 520);
    v16 = *(_QWORD *)(v0 + 472);

    swift_bridgeObjectRelease_n();
    v14(v15, v16);
  }
  v17 = *(void **)(v0 + 608);
  v18 = *(_QWORD *)(v0 + 600);
  v19 = *(_QWORD *)(v0 + 592);
  swift_willThrow();
  sub_213ADAE20(v19, v18);
  sub_213ADAE20(v19, v18);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF09B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 640) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF0A14()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 560))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 472));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v16 = *(_QWORD *)(v0 + 512);
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v15 = *(_QWORD *)(v0 + 472);
    v3 = *(_QWORD *)(v0 + 432);
    v4 = *(_QWORD *)(v0 + 440);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v18 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 280) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, &v18);
    sub_213B2C254();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 288) = sub_213AE1780(v3, v4, &v18);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s END -- load from CloudKit {cacheName: %s}", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);

    v17(v16, v15);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v8 = *(_QWORD *)(v0 + 512);
    v9 = *(_QWORD *)(v0 + 472);
    swift_bridgeObjectRelease_n();

    v7(v8, v9);
  }
  v10 = *(_QWORD *)(v0 + 424);
  v11 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 168);
  v13 = *(_OWORD *)(v0 + 152);
  *(_QWORD *)v10 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v10 + 8) = v11;
  *(_OWORD *)(v10 + 16) = v13;
  *(_QWORD *)(v10 + 32) = v12;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF0C8C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22[2];

  v1 = *(void **)(v0 + 640);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 560))(*(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 472));
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 640);
    v20 = *(_QWORD *)(v0 + 504);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v19 = *(_QWORD *)(v0 + 472);
    v16 = *(_QWORD *)(v0 + 440);
    v17 = *(_QWORD *)(v0 + 432);
    v7 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22[0] = v18;
    *(_DWORD *)v7 = 136315650;
    *(_QWORD *)(v0 + 248) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, v22);
    sub_213B2C254();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 256) = v6;
    v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v9 = sub_213B2BE64();
    *(_QWORD *)(v0 + 264) = sub_213AE1780(v9, v10, v22);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v7 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 272) = sub_213AE1780(v17, v16, v22);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Fetch %s FAIL -- load from CloudKit {error: %s, cacheName: %s}", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v18, -1, -1);
    MEMORY[0x2199BD0E8](v7, -1, -1);

    v21(v20, v19);
  }
  else
  {
    v11 = *(void **)(v0 + 640);
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v13 = *(_QWORD *)(v0 + 504);
    v14 = *(_QWORD *)(v0 + 472);

    swift_bridgeObjectRelease_n();
    v12(v13, v14);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF0FA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 656) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF100C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 560))(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 472));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(void **)(v0 + 584);
    v17 = *(_QWORD *)(v0 + 496);
    v18 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v4 = *(_QWORD *)(v0 + 472);
    v6 = *(_QWORD *)(v0 + 432);
    v5 = *(_QWORD *)(v0 + 440);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v19 = v8;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 240) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, &v19);
    sub_213B2C254();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 208) = sub_213AE1780(v6, v5, &v19);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s END -- fallback to CloudKit [1] {cacheName: %s}", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v8, -1, -1);
    MEMORY[0x2199BD0E8](v7, -1, -1);

    v18(v17, v4);
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v10 = *(_QWORD *)(v0 + 496);
    v11 = *(_QWORD *)(v0 + 472);

    swift_bridgeObjectRelease_n();
    v9(v10, v11);
  }
  v12 = *(_QWORD *)(v0 + 424);
  v13 = *(_QWORD *)(v0 + 24);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)v12 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v12 + 8) = v13;
  *(_OWORD *)(v12 + 16) = v15;
  *(_QWORD *)(v12 + 32) = v14;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF1298()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15[2];

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 560))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 472));
  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C158();
  if (os_log_type_enabled(v1, v2))
  {
    v13 = *(_QWORD *)(v0 + 488);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v12 = *(_QWORD *)(v0 + 472);
    v3 = *(_QWORD *)(v0 + 432);
    v4 = *(_QWORD *)(v0 + 440);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15[0] = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 304) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, v15);
    sub_213B2C254();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 296) = sub_213AE1780(v3, v4, v15);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Fetch %s FAIL -- fallback to CloudKit [1] {cacheName: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v6, -1, -1);
    MEMORY[0x2199BD0E8](v5, -1, -1);

    v14(v13, v12);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v8 = *(_QWORD *)(v0 + 488);
    v9 = *(_QWORD *)(v0 + 472);
    swift_bridgeObjectRelease_n();

    v7(v8, v9);
  }
  v10 = *(void **)(v0 + 584);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF1508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[57] = a5;
  v6[58] = a6;
  v6[55] = a3;
  v6[56] = a4;
  v6[53] = a1;
  v6[54] = a2;
  v7 = sub_213B2BCF0();
  v6[59] = v7;
  v6[60] = *(_QWORD *)(v7 - 8);
  v6[61] = swift_task_alloc();
  v6[62] = swift_task_alloc();
  v6[63] = swift_task_alloc();
  v6[64] = swift_task_alloc();
  v6[65] = swift_task_alloc();
  v6[66] = swift_task_alloc();
  v6[67] = swift_task_alloc();
  v6[68] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213AF15CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = v0[68];
  v2 = v0[59];
  v3 = v0[60];
  v4 = (void *)v0[56];
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FA0);
  v0[69] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[70] = v6;
  v6(v1, v5, v2);
  swift_bridgeObjectRetain_n();
  v7 = v4;
  v8 = sub_213B2BCD8();
  v9 = sub_213B2C170();
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[68];
  v12 = v0[59];
  v13 = v0[60];
  v15 = v0[55];
  v14 = (void *)v0[56];
  if (v10)
  {
    v29 = v0[68];
    v30 = v0[59];
    v26 = v0[54];
    v28 = v0[60];
    v16 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32 = v27;
    *(_DWORD *)v16 = 136315650;
    v0[50] = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, &v32);
    sub_213B2C254();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[51] = sub_213AE1780(v26, v15, &v32);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 22) = 2080;
    v17 = objc_msgSend(v14, sel_recordName);
    v18 = sub_213B2BE1C();
    v20 = v19;

    v0[52] = sub_213AE1780(v18, v20, &v32);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v8, v9, "Fetch %s START {cacheName: %s, recordName: %s}", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v27, -1, -1);
    MEMORY[0x2199BD0E8](v16, -1, -1);

    v21 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v21(v29, v30);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v21(v11, v12);
  }
  v0[71] = v21;
  v22 = v0[55];
  v23 = *(int **)(v0[58] + 320);
  v0[24] = v0[54];
  v0[25] = v22;
  v31 = (int *)((char *)v23 + *v23);
  v24 = (_QWORD *)swift_task_alloc();
  v0[72] = v24;
  *v24 = v0;
  v24[1] = sub_213AF18E8;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v31)(v0 + 22, v0 + 24);
}

uint64_t sub_213AF18E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 584) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF194C()
{
  return swift_task_switch();
}

uint64_t sub_213AF1960()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 592) = v1;
  *(_QWORD *)(v0 + 600) = v2;
  if (v2 >> 60 == 15)
  {
    v3 = sub_213B2BCD8();
    v4 = sub_213B2C140();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_213AC8000, v3, v4, "No local record -- loading from CloudKit", v5, 2u);
      MEMORY[0x2199BD0E8](v5, -1, -1);
    }

    v6 = v0 + 136;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 632) = v7;
    v8 = sub_213AF2274;
LABEL_14:
    *v7 = v0;
    v7[1] = v8;
    return sub_213AF3498(v6, *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464));
  }
  sub_213AD5300(v1, v2);
  v9 = sub_213B2BCD8();
  v10 = sub_213B2C140();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_213AC8000, v9, v10, "Record exists locally. Loading.", v11, 2u);
    MEMORY[0x2199BD0E8](v11, -1, -1);
  }
  v12 = *(void **)(v0 + 584);

  sub_213B2BA20();
  swift_allocObject();
  sub_213B2BA14();
  sub_213AFC704();
  sub_213B2BA08();
  *(_QWORD *)(v0 + 608) = v12;
  if (v12)
  {
    swift_release();
    swift_bridgeObjectRetain();
    v13 = v12;
    swift_bridgeObjectRetain();
    v14 = v12;
    v15 = sub_213B2BCD8();
    v16 = sub_213B2C158();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 440);
    if (v17)
    {
      v44 = *(_QWORD *)(v0 + 432);
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v46[0] = v20;
      *(_DWORD *)v19 = 136315394;
      *(_QWORD *)(v0 + 360) = v12;
      v21 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v22 = sub_213B2BE64();
      *(_QWORD *)(v0 + 368) = sub_213AE1780(v22, v23, v46);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 376) = sub_213AE1780(v44, v18, v46);
      sub_213B2C254();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213AC8000, v15, v16, "Error decoding local record -- fallback to CloudKit {error: %s, cacheName: %s}", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v20, -1, -1);
      MEMORY[0x2199BD0E8](v19, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    v6 = v0 + 56;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 616) = v7;
    v8 = sub_213AF2210;
    goto LABEL_14;
  }
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 560);
  v25 = *(_QWORD *)(v0 + 552);
  v26 = *(_QWORD *)(v0 + 536);
  v27 = *(_QWORD *)(v0 + 472);
  swift_release();
  v24(v26, v25, v27);
  swift_bridgeObjectRetain_n();
  v28 = sub_213B2BCD8();
  v29 = sub_213B2C170();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  v32 = *(_QWORD *)(v0 + 536);
  v33 = *(_QWORD *)(v0 + 472);
  v34 = *(_QWORD *)(v0 + 440);
  if (v30)
  {
    v45 = *(_QWORD *)(v0 + 472);
    v42 = *(_QWORD *)(v0 + 432);
    v35 = swift_slowAlloc();
    v43 = v32;
    v36 = swift_slowAlloc();
    v46[0] = v36;
    *(_DWORD *)v35 = 136315394;
    *(_QWORD *)(v0 + 384) = sub_213AE1780(0x5265746176697250, 0xED000064726F6365, v46);
    sub_213B2C254();
    *(_WORD *)(v35 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 392) = sub_213AE1780(v42, v34, v46);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v28, v29, "Fetch %s END -- Local load {filename: %s}", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v36, -1, -1);
    MEMORY[0x2199BD0E8](v35, -1, -1);
    sub_213ADAE20(v1, v2);
    sub_213ADAE20(v1, v2);

    v31(v43, v45);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_213ADAE20(v1, v2);
    sub_213ADAE20(v1, v2);

    v31(v32, v33);
  }
  v38 = *(_QWORD *)(v0 + 424);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 128);
  v41 = *(_OWORD *)(v0 + 112);
  *(_QWORD *)v38 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v38 + 8) = v39;
  *(_OWORD *)(v38 + 16) = v41;
  *(_QWORD *)(v38 + 32) = v40;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF1FBC()
{
  return swift_task_switch();
}

uint64_t sub_213AF1FD0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v1 = (void *)v0[73];
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[73];
    v7 = v0[55];
    v16 = v0[54];
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    v0[27] = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    v0[28] = sub_213AE1780(v11, v12, &v17);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[29] = sub_213AE1780(v16, v7, &v17);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v4, v5, "Error reading local data -- fallback to CloudKit {error: %s, cacheName: %s}", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    v13 = (void *)v0[73];

    swift_bridgeObjectRelease_n();
  }

  v14 = (_QWORD *)swift_task_alloc();
  v0[81] = v14;
  *v14 = v0;
  v14[1] = sub_213AF22D8;
  return sub_213AF3498((uint64_t)(v0 + 2), v0[54], v0[55], v0[56], v0[57], v0[58]);
}

uint64_t sub_213AF2210()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF2274()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 640) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF22D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 656) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF233C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[24] = a7;
  v8[25] = a8;
  v8[22] = a5;
  v8[23] = a6;
  v8[20] = a3;
  v8[21] = a4;
  v8[18] = a1;
  v8[19] = a2;
  v9 = sub_213B2BC78();
  v8[26] = v9;
  v8[27] = *(_QWORD *)(v9 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  v10 = sub_213B2BCF0();
  v8[31] = v10;
  v8[32] = *(_QWORD *)(v10 - 8);
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213AF2400()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_254D18388 != -1)
    swift_once();
  v1 = v0[34];
  v2 = v0[31];
  v3 = v0[32];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FA0);
  v0[35] = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[36] = v5;
  v5(v1, v4, v2);
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213B2BEAC();
  v0[37] = 0x8000000213B350E0;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D1B100
                                                                                    + dword_254D1B100);
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[38] = v6;
  *v6 = v0;
  v6[1] = sub_213AF255C;
  return v8(0xD00000000000001FLL, 0x8000000213B350E0, v0[34], v0[23], v0[19], v0[20]);
}

uint64_t sub_213AF255C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 272);
  v3 = *(_QWORD *)(*v0 + 248);
  v4 = *(_QWORD *)(*v0 + 256);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v1 + 312) = v5;
  v5(v2, v3);
  return swift_task_switch();
}

uint64_t sub_213AF2600()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD *, _QWORD *);

  v1 = (void *)v0[21];
  sub_213B2BC54();
  v2 = v1;
  v3 = sub_213B2BCD8();
  v4 = sub_213B2C170();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (void *)v0[21];
    v6 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v0[17] = v5;
    v7 = v5;
    sub_213B2C254();
    *v12 = v5;

    _os_log_impl(&dword_213AC8000, v3, v4, "Fetch CloudKit Record START {recordID: %@}", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v12, -1, -1);
    MEMORY[0x2199BD0E8](v6, -1, -1);
  }
  else
  {
    v8 = (void *)v0[21];

  }
  v9 = v0[22];
  v0[9] = v0[21];
  v13 = (uint64_t (*)(_QWORD *, _QWORD *))(**(int **)(v9 + 16) + *(_QWORD *)(v9 + 16));
  v10 = (_QWORD *)swift_task_alloc();
  v0[40] = v10;
  *v10 = v0;
  v10[1] = sub_213AF27B4;
  return v13(v0 + 14, v0 + 9);
}

uint64_t sub_213AF27B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF2818()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 112);
  return swift_task_switch();
}

uint64_t sub_213AF2834()
{
  uint64_t v0;
  void *v1;
  _OWORD *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  BOOL v22;
  void *v23;
  uint8_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  void *v56;
  uint64_t v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  os_log_type_t type;
  uint64_t typea;
  id v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;

  v1 = *(void **)(v0 + 336);
  if (!v1)
  {
    v19 = *(id *)(v0 + 168);
    v20 = sub_213B2BCD8();
    v21 = sub_213B2C158();
    v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
    v23 = *(void **)(v0 + 168);
    if (v22)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v83 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      *(_QWORD *)(v0 + 104) = v23;
      v25 = v23;
      sub_213B2C254();
      *v83 = v23;

      _os_log_impl(&dword_213AC8000, v20, (os_log_type_t)v21, "Fetch CloudKit Record FAILED -- Record doesn't exist {recordID: %@}", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v83, -1, -1);
      MEMORY[0x2199BD0E8](v24, -1, -1);
    }
    else
    {

      v20 = *(NSObject **)(v0 + 168);
    }

    sub_213AD62AC();
    v56 = (void *)swift_allocError();
    *(_OWORD *)v57 = xmmword_213B2EC80;
    *(_BYTE *)(v57 + 16) = 2;
    swift_willThrow();
    v58 = *(void **)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
    v59 = v58;
    v60 = v56;
    v61 = v59;
    v62 = v56;
    v63 = sub_213B2BCD8();
    v64 = sub_213B2C158();
    v65 = os_log_type_enabled(v63, v64);
    v66 = *(void **)(v0 + 168);
    if (v65)
    {
      v67 = swift_slowAlloc();
      v79 = (_QWORD *)swift_slowAlloc();
      typea = swift_slowAlloc();
      v84 = typea;
      *(_DWORD *)v67 = 136315394;
      *(_QWORD *)(v0 + 80) = v56;
      v68 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v69 = sub_213B2BE64();
      *(_QWORD *)(v0 + 88) = sub_213AE1780(v69, v70, &v84);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      *(_WORD *)(v67 + 12) = 2112;
      *(_QWORD *)(v0 + 96) = v66;
      v71 = v66;
      sub_213B2C254();
      *v79 = v66;

      _os_log_impl(&dword_213AC8000, v63, v64, "### Error fetching from CloudKit {error: %s, recordID: %@}", (uint8_t *)v67, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v79, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](typea, -1, -1);
      MEMORY[0x2199BD0E8](v67, -1, -1);
    }
    else
    {

    }
    v72 = *(_QWORD *)(v0 + 192);
    v37 = *(_QWORD *)(v0 + 200);
    swift_allocError();
    v74 = v73;
    v75 = v56;
    sub_213AE4350(v56, v74);
    swift_willThrow();

    v39 = v72;
    goto LABEL_19;
  }
  v2 = (_OWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 16))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
  v4 = v3;
  v5 = v1;
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C170();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 232);
  if (v8)
  {
    type = v7;
    v10 = *(_QWORD *)(v0 + 224);
    v77 = *(_QWORD *)(v0 + 216);
    v78 = *(_QWORD *)(v0 + 208);
    v82 = v5;
    v11 = *(void **)(v0 + 168);
    v12 = swift_slowAlloc();
    v76 = v9;
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412546;
    *(_QWORD *)(v0 + 120) = v11;
    v14 = v11;
    sub_213B2C254();
    *v13 = v11;
    v5 = v82;

    *(_WORD *)(v12 + 12) = 2048;
    sub_213B2BC54();
    sub_213B2BC48();
    v16 = v15;
    v17 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v17(v10, v78);
    *(_QWORD *)(v0 + 128) = v16;
    sub_213B2C254();
    v17(v76, v78);
    _os_log_impl(&dword_213AC8000, v6, type, "Fetch CloudKit Record END {recordID: %@, duration: %f}", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v13, -1, -1);
    v18 = v12;
    v2 = (_OWORD *)(v0 + 16);
    MEMORY[0x2199BD0E8](v18, -1, -1);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 208);
    v26 = *(_QWORD *)(v0 + 216);
    v28 = *(void **)(v0 + 168);

    v17 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v17(v9, v27);

    v6 = *(NSObject **)(v0 + 168);
  }
  v29 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 208);

  v17(v29, v30);
  v31 = sub_213B2BCD8();
  v32 = sub_213B2C170();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_213AC8000, v31, v32, "Will parse public cloudkit record", v33, 2u);
    MEMORY[0x2199BD0E8](v33, -1, -1);
  }
  v34 = *(_QWORD *)(v0 + 328);
  v36 = *(_QWORD *)(v0 + 192);
  v35 = *(_QWORD *)(v0 + 200);

  v84 = v36;
  v85 = v35;
  sub_213AD5300(v36, v35);
  sub_213AEC958(v5, &v84, v2);
  if (v34)
  {
    v38 = *(_QWORD *)(v0 + 192);
    v37 = *(_QWORD *)(v0 + 200);

    v39 = v38;
LABEL_19:
    sub_213AD5374(v39, v37);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v40 = v2;
  v41 = sub_213B2BCD8();
  v42 = sub_213B2C170();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_213AC8000, v41, v42, "Did parse public cloudkit record", v43, 2u);
    MEMORY[0x2199BD0E8](v43, -1, -1);
  }
  v44 = *(_QWORD *)(v0 + 280);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 288);
  v46 = *(_QWORD *)(v0 + 264);
  v47 = *(_QWORD *)(v0 + 248);
  v48 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 152);
  v49 = *(_QWORD *)(v0 + 160);

  v45(v46, v44, v47);
  v84 = 0;
  v85 = 0xE000000000000000;
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  v84 = 0xD000000000000018;
  v85 = 0x8000000213B35100;
  sub_213B2BEAC();
  sub_213B2BEAC();
  v52 = v84;
  v51 = v85;
  *(_QWORD *)(v0 + 344) = v85;
  v53 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v53;
  v53[2] = v50;
  v53[3] = v49;
  v53[4] = v40;
  v53[5] = v48;
  v54 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v54;
  *v54 = v0;
  v54[1] = sub_213AF3350;
  return sub_213B2A96C(v52, v51, dword_254D19348);
}

uint64_t sub_213AF3068()
{
  return swift_task_switch();
}

uint64_t sub_213AF307C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  os_log_type_t type;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_213B2BCD8();
  v8 = sub_213B2C158();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 168);
    type = v8;
    v10 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 80) = v1;
    v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v12 = sub_213B2BE64();
    *(_QWORD *)(v0 + 88) = sub_213AE1780(v12, v13, &v26);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2112;
    *(_QWORD *)(v0 + 96) = v9;
    v14 = v9;
    v15 = v9;
    sub_213B2C254();
    *v24 = v14;

    _os_log_impl(&dword_213AC8000, v7, type, "### Error fetching from CloudKit {error: %s, recordID: %@}", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v25, -1, -1);
    MEMORY[0x2199BD0E8](v10, -1, -1);
  }
  else
  {
    v16 = *(void **)(v0 + 168);

  }
  v18 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 200);
  sub_213AD62AC();
  swift_allocError();
  v20 = v19;
  v21 = v1;
  sub_213AE4350(v1, v20);
  swift_willThrow();

  sub_213AD5374(v18, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF3350()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 312);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 264);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v1(v2, v3);
  return swift_task_switch();
}

uint64_t sub_213AF33E4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 144);

  sub_213AD5374(v2, v1);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v3 + 24) = v5;
  *(_OWORD *)(v3 + 32) = v7;
  *(_QWORD *)(v3 + 48) = v6;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF3498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[20] = a5;
  v6[21] = a6;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  v7 = sub_213B2BC78();
  v6[22] = v7;
  v6[23] = *(_QWORD *)(v7 - 8);
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v8 = sub_213B2BCF0();
  v6[27] = v8;
  v6[28] = *(_QWORD *)(v8 - 8);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213AF3558()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_254D18388 != -1)
    swift_once();
  v1 = v0[30];
  v2 = v0[27];
  v3 = v0[28];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FA0);
  v0[31] = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[32] = v5;
  v5(v1, v4, v2);
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213B2BEAC();
  v0[33] = 0x8000000213B350E0;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D1B100
                                                                                    + dword_254D1B100);
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[34] = v6;
  *v6 = v0;
  v6[1] = sub_213AF36B4;
  return v8(0xD00000000000001FLL, 0x8000000213B350E0, v0[30], v0[21], v0[17], v0[18]);
}

uint64_t sub_213AF36B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 240);
  v3 = *(_QWORD *)(*v0 + 216);
  v4 = *(_QWORD *)(*v0 + 224);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v1 + 280) = v5;
  v5(v2, v3);
  return swift_task_switch();
}

uint64_t sub_213AF3758()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD *, _QWORD *);

  v1 = (void *)v0[19];
  sub_213B2BC54();
  v2 = v1;
  v3 = sub_213B2BCD8();
  v4 = sub_213B2C170();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (void *)v0[19];
    v6 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v0[15] = v5;
    v7 = v5;
    sub_213B2C254();
    *v12 = v5;

    _os_log_impl(&dword_213AC8000, v3, v4, "Fetch CloudKit Record START {recordID: %@}", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v12, -1, -1);
    MEMORY[0x2199BD0E8](v6, -1, -1);
  }
  else
  {
    v8 = (void *)v0[19];

  }
  v9 = v0[20];
  v0[7] = v0[19];
  v13 = (uint64_t (*)(_QWORD *, _QWORD *))(**(int **)(v9 + 16) + *(_QWORD *)(v9 + 16));
  v10 = (_QWORD *)swift_task_alloc();
  v0[36] = v10;
  *v10 = v0;
  v10[1] = sub_213AF390C;
  return v13(v0 + 12, v0 + 7);
}

uint64_t sub_213AF390C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF3970()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 96);
  return swift_task_switch();
}

uint64_t sub_213AF398C()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  BOOL v22;
  void *v23;
  uint8_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  void *v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  os_log_type_t type;
  uint64_t typea;
  id v74;
  _QWORD *v75;
  uint64_t v76[3];

  v1 = *(void **)(v0 + 304);
  if (!v1)
  {
    v19 = *(id *)(v0 + 152);
    v20 = sub_213B2BCD8();
    v21 = sub_213B2C158();
    v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
    v23 = *(void **)(v0 + 152);
    if (v22)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v75 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      *(_QWORD *)(v0 + 88) = v23;
      v25 = v23;
      sub_213B2C254();
      *v75 = v23;

      _os_log_impl(&dword_213AC8000, v20, (os_log_type_t)v21, "Fetch CloudKit Record FAILED -- Record doesn't exist {recordID: %@}", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v75, -1, -1);
      MEMORY[0x2199BD0E8](v24, -1, -1);
    }
    else
    {

      v20 = *(NSObject **)(v0 + 152);
    }

    sub_213AD62AC();
    v49 = (void *)swift_allocError();
    *(_OWORD *)v50 = xmmword_213B2EC80;
    *(_BYTE *)(v50 + 16) = 2;
    swift_willThrow();
    v51 = *(void **)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176));
    v52 = v51;
    v53 = v49;
    v54 = v52;
    v55 = v49;
    v56 = sub_213B2BCD8();
    v57 = sub_213B2C158();
    v58 = os_log_type_enabled(v56, v57);
    v59 = *(void **)(v0 + 152);
    if (v58)
    {
      v60 = swift_slowAlloc();
      v71 = (_QWORD *)swift_slowAlloc();
      typea = swift_slowAlloc();
      v76[0] = typea;
      *(_DWORD *)v60 = 136315394;
      *(_QWORD *)(v0 + 64) = v49;
      v61 = v49;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v62 = sub_213B2BE64();
      *(_QWORD *)(v0 + 72) = sub_213AE1780(v62, v63, v76);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      *(_WORD *)(v60 + 12) = 2112;
      *(_QWORD *)(v0 + 80) = v59;
      v64 = v59;
      sub_213B2C254();
      *v71 = v59;

      _os_log_impl(&dword_213AC8000, v56, v57, "### Error fetching from CloudKit {error: %s, recordID: %@}", (uint8_t *)v60, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v71, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](typea, -1, -1);
      MEMORY[0x2199BD0E8](v60, -1, -1);
    }
    else
    {

    }
    swift_allocError();
    v66 = v65;
    v67 = v49;
    sub_213AE4350(v49, v66);
    swift_willThrow();

    goto LABEL_19;
  }
  v2 = (uint64_t *)(v0 + 16);
  v3 = *(void **)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 16))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176));
  v4 = v3;
  v5 = v1;
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C170();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  if (v8)
  {
    type = v7;
    v10 = *(_QWORD *)(v0 + 192);
    v69 = *(_QWORD *)(v0 + 184);
    v70 = *(_QWORD *)(v0 + 176);
    v74 = v5;
    v11 = *(void **)(v0 + 152);
    v12 = swift_slowAlloc();
    v68 = v9;
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412546;
    *(_QWORD *)(v0 + 104) = v11;
    v14 = v11;
    sub_213B2C254();
    *v13 = v11;
    v5 = v74;

    *(_WORD *)(v12 + 12) = 2048;
    sub_213B2BC54();
    sub_213B2BC48();
    v16 = v15;
    v17 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v17(v10, v70);
    *(_QWORD *)(v0 + 112) = v16;
    sub_213B2C254();
    v17(v68, v70);
    _os_log_impl(&dword_213AC8000, v6, type, "Fetch CloudKit Record END {recordID: %@, duration: %f}", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v13, -1, -1);
    v18 = v12;
    v2 = (uint64_t *)(v0 + 16);
    MEMORY[0x2199BD0E8](v18, -1, -1);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 184);
    v28 = *(void **)(v0 + 152);

    v17 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v17(v9, v27);

    v6 = *(NSObject **)(v0 + 152);
  }
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 176);

  v17(v29, v30);
  v31 = sub_213B2BCD8();
  v32 = sub_213B2C170();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_213AC8000, v31, v32, "Will parse public cloudkit record", v33, 2u);
    MEMORY[0x2199BD0E8](v33, -1, -1);
  }
  v34 = *(_QWORD *)(v0 + 296);

  sub_213AEC3A0(v5, v2);
  if (v34)
  {

LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v35 = v2;
  v36 = sub_213B2BCD8();
  v37 = sub_213B2C170();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_213AC8000, v36, v37, "Did parse public cloudkit record", v38, 2u);
    MEMORY[0x2199BD0E8](v38, -1, -1);
  }
  v39 = *(_QWORD *)(v0 + 248);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v41 = *(_QWORD *)(v0 + 232);
  v42 = *(_QWORD *)(v0 + 216);
  v43 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 136);
  v44 = *(_QWORD *)(v0 + 144);

  v40(v41, v39, v42);
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  v76[0] = 0xD000000000000018;
  v76[1] = 0x8000000213B35100;
  sub_213B2BEAC();
  sub_213B2BEAC();
  *(_QWORD *)(v0 + 312) = 0x8000000213B35100;
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v46;
  v46[2] = v45;
  v46[3] = v44;
  v46[4] = v35;
  v46[5] = v43;
  v47 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v47;
  *v47 = v0;
  v47[1] = sub_213AF41A0;
  return sub_213B2A96C(0xD000000000000018, 0x8000000213B35100, (int *)aP3);
}

uint64_t sub_213AF418C()
{
  return swift_task_switch();
}

uint64_t sub_213AF41A0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 280);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v1(v2, v3);
  return swift_task_switch();
}

uint64_t sub_213AF4234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[20] = a5;
  v6[21] = a6;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  v7 = sub_213B2BC78();
  v6[22] = v7;
  v6[23] = *(_QWORD *)(v7 - 8);
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v8 = sub_213B2BCF0();
  v6[27] = v8;
  v6[28] = *(_QWORD *)(v8 - 8);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213AF42F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_254D18388 != -1)
    swift_once();
  v1 = v0[30];
  v2 = v0[27];
  v3 = v0[28];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_254D18FA0);
  v0[31] = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[32] = v5;
  v5(v1, v4, v2);
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213B2BEAC();
  v0[33] = 0x8000000213B350E0;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D1B100
                                                                                    + dword_254D1B100);
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[34] = v6;
  *v6 = v0;
  v6[1] = sub_213AF4450;
  return v8(0xD00000000000001FLL, 0x8000000213B350E0, v0[30], v0[21], v0[17], v0[18]);
}

uint64_t sub_213AF4450()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 240);
  v3 = *(_QWORD *)(*v0 + 216);
  v4 = *(_QWORD *)(*v0 + 224);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v1 + 280) = v5;
  v5(v2, v3);
  return swift_task_switch();
}

uint64_t sub_213AF44F4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD *, _QWORD *);

  v1 = (void *)v0[19];
  sub_213B2BC54();
  v2 = v1;
  v3 = sub_213B2BCD8();
  v4 = sub_213B2C170();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (void *)v0[19];
    v6 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v0[15] = v5;
    v7 = v5;
    sub_213B2C254();
    *v12 = v5;

    _os_log_impl(&dword_213AC8000, v3, v4, "Fetch CloudKit Record START {recordID: %@}", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v12, -1, -1);
    MEMORY[0x2199BD0E8](v6, -1, -1);
  }
  else
  {
    v8 = (void *)v0[19];

  }
  v9 = v0[20];
  v0[7] = v0[19];
  v13 = (uint64_t (*)(_QWORD *, _QWORD *))(**(int **)(v9 + 16) + *(_QWORD *)(v9 + 16));
  v10 = (_QWORD *)swift_task_alloc();
  v0[36] = v10;
  *v10 = v0;
  v10[1] = sub_213AF46A8;
  return v13(v0 + 12, v0 + 7);
}

uint64_t sub_213AF46A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF470C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 96);
  return swift_task_switch();
}

uint64_t sub_213AF4728()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  BOOL v22;
  void *v23;
  uint8_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  void *v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  os_log_type_t type;
  uint64_t typea;
  id v74;
  _QWORD *v75;
  uint64_t v76[3];

  v1 = *(void **)(v0 + 304);
  if (!v1)
  {
    v19 = *(id *)(v0 + 152);
    v20 = sub_213B2BCD8();
    v21 = sub_213B2C158();
    v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
    v23 = *(void **)(v0 + 152);
    if (v22)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v75 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      *(_QWORD *)(v0 + 88) = v23;
      v25 = v23;
      sub_213B2C254();
      *v75 = v23;

      _os_log_impl(&dword_213AC8000, v20, (os_log_type_t)v21, "Fetch CloudKit Record FAILED -- Record doesn't exist {recordID: %@}", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v75, -1, -1);
      MEMORY[0x2199BD0E8](v24, -1, -1);
    }
    else
    {

      v20 = *(NSObject **)(v0 + 152);
    }

    sub_213AD62AC();
    v49 = (void *)swift_allocError();
    *(_OWORD *)v50 = xmmword_213B2EC80;
    *(_BYTE *)(v50 + 16) = 2;
    swift_willThrow();
    v51 = *(void **)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176));
    v52 = v51;
    v53 = v49;
    v54 = v52;
    v55 = v49;
    v56 = sub_213B2BCD8();
    v57 = sub_213B2C158();
    v58 = os_log_type_enabled(v56, v57);
    v59 = *(void **)(v0 + 152);
    if (v58)
    {
      v60 = swift_slowAlloc();
      v71 = (_QWORD *)swift_slowAlloc();
      typea = swift_slowAlloc();
      v76[0] = typea;
      *(_DWORD *)v60 = 136315394;
      *(_QWORD *)(v0 + 64) = v49;
      v61 = v49;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v62 = sub_213B2BE64();
      *(_QWORD *)(v0 + 72) = sub_213AE1780(v62, v63, v76);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      *(_WORD *)(v60 + 12) = 2112;
      *(_QWORD *)(v0 + 80) = v59;
      v64 = v59;
      sub_213B2C254();
      *v71 = v59;

      _os_log_impl(&dword_213AC8000, v56, v57, "### Error fetching from CloudKit {error: %s, recordID: %@}", (uint8_t *)v60, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v71, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](typea, -1, -1);
      MEMORY[0x2199BD0E8](v60, -1, -1);
    }
    else
    {

    }
    swift_allocError();
    v66 = v65;
    v67 = v49;
    sub_213AE4350(v49, v66);
    swift_willThrow();

    goto LABEL_19;
  }
  v2 = (uint64_t *)(v0 + 16);
  v3 = *(void **)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 16))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176));
  v4 = v3;
  v5 = v1;
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C170();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  if (v8)
  {
    type = v7;
    v10 = *(_QWORD *)(v0 + 192);
    v69 = *(_QWORD *)(v0 + 184);
    v70 = *(_QWORD *)(v0 + 176);
    v74 = v5;
    v11 = *(void **)(v0 + 152);
    v12 = swift_slowAlloc();
    v68 = v9;
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412546;
    *(_QWORD *)(v0 + 104) = v11;
    v14 = v11;
    sub_213B2C254();
    *v13 = v11;
    v5 = v74;

    *(_WORD *)(v12 + 12) = 2048;
    sub_213B2BC54();
    sub_213B2BC48();
    v16 = v15;
    v17 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v17(v10, v70);
    *(_QWORD *)(v0 + 112) = v16;
    sub_213B2C254();
    v17(v68, v70);
    _os_log_impl(&dword_213AC8000, v6, type, "Fetch CloudKit Record END {recordID: %@, duration: %f}", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v13, -1, -1);
    v18 = v12;
    v2 = (uint64_t *)(v0 + 16);
    MEMORY[0x2199BD0E8](v18, -1, -1);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 184);
    v28 = *(void **)(v0 + 152);

    v17 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v17(v9, v27);

    v6 = *(NSObject **)(v0 + 152);
  }
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 176);

  v17(v29, v30);
  v31 = sub_213B2BCD8();
  v32 = sub_213B2C170();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_213AC8000, v31, v32, "Will parse public cloudkit record", v33, 2u);
    MEMORY[0x2199BD0E8](v33, -1, -1);
  }
  v34 = *(_QWORD *)(v0 + 296);

  sub_213AEC3A0(v5, v2);
  if (v34)
  {

LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v35 = v2;
  v36 = sub_213B2BCD8();
  v37 = sub_213B2C170();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_213AC8000, v36, v37, "Did parse public cloudkit record", v38, 2u);
    MEMORY[0x2199BD0E8](v38, -1, -1);
  }
  v39 = *(_QWORD *)(v0 + 248);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v41 = *(_QWORD *)(v0 + 232);
  v42 = *(_QWORD *)(v0 + 216);
  v43 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 136);
  v44 = *(_QWORD *)(v0 + 144);

  v40(v41, v39, v42);
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  v76[0] = 0xD000000000000018;
  v76[1] = 0x8000000213B35100;
  sub_213B2BEAC();
  sub_213B2BEAC();
  *(_QWORD *)(v0 + 312) = 0x8000000213B35100;
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v46;
  v46[2] = v45;
  v46[3] = v44;
  v46[4] = v35;
  v46[5] = v43;
  v47 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v47;
  *v47 = v0;
  v47[1] = sub_213AF51FC;
  return sub_213B2A96C(0xD000000000000018, 0x8000000213B35100, (int *)aX3);
}

uint64_t sub_213AF4F28()
{
  return swift_task_switch();
}

uint64_t sub_213AF4F3C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  os_log_type_t type;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(void **)(v0 + 296);
  v2 = *(void **)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176));
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_213B2BCD8();
  v8 = sub_213B2C158();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 152);
    type = v8;
    v10 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v24 = v23;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 64) = v1;
    v11 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v12 = sub_213B2BE64();
    *(_QWORD *)(v0 + 72) = sub_213AE1780(v12, v13, &v24);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2112;
    *(_QWORD *)(v0 + 80) = v9;
    v14 = v9;
    v15 = v9;
    sub_213B2C254();
    *v22 = v14;

    _os_log_impl(&dword_213AC8000, v7, type, "### Error fetching from CloudKit {error: %s, recordID: %@}", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v23, -1, -1);
    MEMORY[0x2199BD0E8](v10, -1, -1);
  }
  else
  {
    v16 = *(void **)(v0 + 152);

  }
  sub_213AD62AC();
  swift_allocError();
  v18 = v17;
  v19 = v1;
  sub_213AE4350(v1, v18);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF51FC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 280);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 232);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v1(v2, v3);
  return swift_task_switch();
}

uint64_t sub_213AF5290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 128);

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 8) = v2;
  *(_OWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 32) = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF5324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(v4 + 128) = a2;
  *(_QWORD *)(v4 + 136) = a4;
  *(_QWORD *)(v4 + 120) = a1;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(a3 + 48);
  return swift_task_switch();
}

uint64_t sub_213AF5358()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  int *v19;
  uint64_t v20;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_254D18FA0);
  swift_bridgeObjectRetain_n();
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[16];
  if (v4)
  {
    v6 = v0[15];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v20 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[14] = sub_213AE1780(v6, v5, &v20);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v2, v3, "Will cache record {filename: %s}", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v8, -1, -1);
    MEMORY[0x2199BD0E8](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_213B2BA44();
  swift_allocObject();
  sub_213B2BA38();
  sub_213AFC598();
  v9 = sub_213B2BA2C();
  v0[19] = v9;
  v0[20] = v10;
  v11 = v9;
  v12 = v10;
  v14 = v0[16];
  v13 = v0[17];
  v15 = v0[15];
  swift_release();
  v16 = *(int **)(v13 + 304);
  v0[9] = v15;
  v0[10] = v14;
  v0[11] = v11;
  v0[12] = v12;
  v19 = (int *)((char *)v16 + *v16);
  v17 = (_QWORD *)swift_task_alloc();
  v0[21] = v17;
  *v17 = v0;
  v17[1] = sub_213AF55F8;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v19)(v0 + 9, v0 + 11);
}

uint64_t sub_213AF55F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF565C()
{
  return swift_task_switch();
}

uint64_t sub_213AF5670()
{
  uint64_t v0;

  sub_213AD5374(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF56A4()
{
  return swift_task_switch();
}

uint64_t sub_213AF56B8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 128);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 104) = sub_213AE1780(v5, v4, &v14);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Did cache record {filename: %s}", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v7, -1, -1);
    MEMORY[0x2199BD0E8](v6, -1, -1);
    v8 = v3;
    v9 = v13;
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    swift_bridgeObjectRelease_n();
    v8 = v11;
    v9 = v10;
  }
  sub_213AD5374(v8, v9);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF5844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(v4 + 112) = a2;
  *(_QWORD *)(v4 + 120) = a4;
  *(_QWORD *)(v4 + 104) = a1;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(a3 + 32);
  return swift_task_switch();
}

uint64_t sub_213AF5870()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  int *v19;
  uint64_t v20;

  if (qword_254D18388 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_254D18FA0);
  swift_bridgeObjectRetain_n();
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[14];
  if (v4)
  {
    v6 = v0[13];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v20 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[12] = sub_213AE1780(v6, v5, &v20);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v2, v3, "Will cache record {filename: %s}", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v8, -1, -1);
    MEMORY[0x2199BD0E8](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_213B2BA44();
  swift_allocObject();
  sub_213B2BA38();
  sub_213AFC45C();
  v9 = sub_213B2BA2C();
  v0[17] = v9;
  v0[18] = v10;
  v11 = v9;
  v12 = v10;
  v14 = v0[14];
  v13 = v0[15];
  v15 = v0[13];
  swift_release();
  v16 = *(int **)(v13 + 304);
  v0[7] = v15;
  v0[8] = v14;
  v0[9] = v11;
  v0[10] = v12;
  v19 = (int *)((char *)v16 + *v16);
  v17 = (_QWORD *)swift_task_alloc();
  v0[19] = v17;
  *v17 = v0;
  v17[1] = sub_213AF5B10;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v19)(v0 + 7, v0 + 9);
}

uint64_t sub_213AF5B10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF5B74()
{
  return swift_task_switch();
}

uint64_t sub_213AF5B88()
{
  uint64_t v0;

  sub_213AD5374(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF5BBC()
{
  return swift_task_switch();
}

uint64_t sub_213AF5BD0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRetain_n();
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 112);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_213AE1780(v5, v4, &v14);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v1, v2, "Did cache record {filename: %s}", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v7, -1, -1);
    MEMORY[0x2199BD0E8](v6, -1, -1);
    v8 = v3;
    v9 = v13;
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease_n();
    v8 = v11;
    v9 = v10;
  }
  sub_213AD5374(v8, v9);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PersonalizationAssetManager.deinit()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[16];

  v1 = *(_OWORD *)(v0 + 320);
  v10[12] = *(_OWORD *)(v0 + 304);
  v10[13] = v1;
  v2 = *(_OWORD *)(v0 + 352);
  v10[14] = *(_OWORD *)(v0 + 336);
  v10[15] = v2;
  v3 = *(_OWORD *)(v0 + 256);
  v10[8] = *(_OWORD *)(v0 + 240);
  v10[9] = v3;
  v4 = *(_OWORD *)(v0 + 288);
  v10[10] = *(_OWORD *)(v0 + 272);
  v10[11] = v4;
  v5 = *(_OWORD *)(v0 + 192);
  v10[4] = *(_OWORD *)(v0 + 176);
  v10[5] = v5;
  v6 = *(_OWORD *)(v0 + 224);
  v10[6] = *(_OWORD *)(v0 + 208);
  v10[7] = v6;
  v7 = *(_OWORD *)(v0 + 128);
  v10[0] = *(_OWORD *)(v0 + 112);
  v10[1] = v7;
  v8 = *(_OWORD *)(v0 + 160);
  v10[2] = *(_OWORD *)(v0 + 144);
  v10[3] = v8;
  sub_213AFA1FC((uint64_t)v10);

  swift_defaultActor_destroy();
  return v0;
}

uint64_t PersonalizationAssetManager.__deallocating_deinit()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[16];

  v1 = *(_OWORD *)(v0 + 320);
  v10[12] = *(_OWORD *)(v0 + 304);
  v10[13] = v1;
  v2 = *(_OWORD *)(v0 + 352);
  v10[14] = *(_OWORD *)(v0 + 336);
  v10[15] = v2;
  v3 = *(_OWORD *)(v0 + 256);
  v10[8] = *(_OWORD *)(v0 + 240);
  v10[9] = v3;
  v4 = *(_OWORD *)(v0 + 288);
  v10[10] = *(_OWORD *)(v0 + 272);
  v10[11] = v4;
  v5 = *(_OWORD *)(v0 + 192);
  v10[4] = *(_OWORD *)(v0 + 176);
  v10[5] = v5;
  v6 = *(_OWORD *)(v0 + 224);
  v10[6] = *(_OWORD *)(v0 + 208);
  v10[7] = v6;
  v7 = *(_OWORD *)(v0 + 128);
  v10[0] = *(_OWORD *)(v0 + 112);
  v10[1] = v7;
  v8 = *(_OWORD *)(v0 + 160);
  v10[2] = *(_OWORD *)(v0 + 144);
  v10[3] = v8;
  sub_213AFA1FC((uint64_t)v10);

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PersonalizationAssetManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213AF5E74()
{
  uint64_t v0;

  return v0;
}

uint64_t PersonalizationAssetManager.PostPairingAssetInfo.stableBluetoothIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ProductKit::PersonalizationAssetManager::PostPairingAssetInfo __swiftcall PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)(ProductKit::PersonalizationAssetManager::PostPairingAssetInfo stableBluetoothIdentifier)
{
  ProductKit::PersonalizationAssetManager::PostPairingAssetInfo *v1;

  *v1 = stableBluetoothIdentifier;
  return stableBluetoothIdentifier;
}

unint64_t sub_213AF5EBC()
{
  return 0xD000000000000019;
}

uint64_t sub_213AF5ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213AFA350(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_213AF5F00()
{
  return 0;
}

void sub_213AF5F0C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_213AF5F18()
{
  sub_213AFA30C();
  return sub_213B2C560();
}

uint64_t sub_213AF5F40()
{
  sub_213AFA30C();
  return sub_213B2C56C();
}

uint64_t PersonalizationAssetManager.PostPairingAssetInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D190F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA30C();
  sub_213B2C554();
  sub_213B2C428();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PersonalizationAssetManager.PostPairingAssetInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19100);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA30C();
  sub_213B2C548();
  if (!v2)
  {
    v9 = sub_213B2C3F8();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_213AF6170@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PersonalizationAssetManager.PostPairingAssetInfo.init(from:)(a1, a2);
}

uint64_t sub_213AF6184(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D190F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA30C();
  sub_213B2C554();
  sub_213B2C428();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double static PersonalizationAssetManager.PrePairingAssetInfo.fixture_airtag_anusree_AB21.getter@<D0>(_OWORD *a1@<X8>)
{
  double v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  double result;
  __int128 v9;

  v2 = COERCE_DOUBLE(sub_213AFA3D4((uint64_t)&unk_24D0B9E28));
  v4 = v3;
  v5 = sub_213AFA3D4((uint64_t)&unk_24D0B9E50);
  v7 = v6;
  *(double *)&v9 = v2;
  *((_QWORD *)&v9 + 1) = v4;
  sub_213AD5300(*(uint64_t *)&v2, v4);
  sub_213AF9B90(v5, v7);
  sub_213AD5374(v5, v7);
  sub_213AD5374(*(uint64_t *)&v2, v4);
  result = v2;
  *a1 = v9;
  return result;
}

void sub_213AF630C(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_213AF6370
     + dword_213AF65A4[__swift_project_boxed_opaque_existential_0(v3, MEMORY[0x24BDCDDE8])[1] >> 62];
  __asm { BR              X10 }
}

uint64_t sub_213AF6380()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v6 = v2;
  v7 = v3;
  v8 = BYTE2(v3);
  v9 = BYTE3(v3);
  v10 = BYTE4(v3);
  v11 = BYTE5(v3);
  sub_213AD5300(v1, v0);
  sub_213AF941C(&v6, (_BYTE *)&v6 + BYTE6(v3), &v12);
  sub_213AD5374(v1, v0);
  v4 = v12;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v13);
  return v4;
}

uint64_t PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static PersonalizationAssetManager.PrePairingAssetInfo.fixture_airpods_test1.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_213AFA3D4((uint64_t)&unk_24D0B9E80);
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t PersonalizationAssetManager.PrePairingAssetInfo.scannedBluetoothData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_213AD5300(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t sub_213AF6618(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_213AF6628 + dword_213AF6684[a4 >> 62]))();
}

uint64_t sub_213AF663C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (BYTE6(a4) <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 + 1 < a1)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x213AF6684);
  }
  return sub_213B2BC18();
}

uint64_t sub_213AF6694@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v31 = a1;
  v2 = sub_213B2BD5C();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_213B2BE4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213B2BD38();
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = v1[1];
  sub_213AD5300(*v1, v13);
  v14 = sub_213AF6618(4, 17, v12, v13);
  v16 = v15;
  sub_213AD5374(v12, v13);
  v32 = v14;
  v33 = v16;
  sub_213B2BD2C();
  sub_213B2BE40();
  v17 = sub_213B2BE28();
  v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v19 >> 60 == 15)
  {
    result = sub_213B2C38C();
    __break(1u);
  }
  else
  {
    sub_213AD5300(v12, v13);
    v20 = sub_213AF6618(0, 3, v12, v13);
    v22 = v21;
    sub_213AD5374(v12, v13);
    v32 = v17;
    v33 = v19;
    sub_213AFC5DC(v17, v19);
    sub_213AD5300(v20, v22);
    sub_213AF9B90(v20, v22);
    sub_213AD5374(v20, v22);
    sub_213AD5374(v20, v22);
    sub_213ADAE20(v17, v19);
    v23 = v32;
    v24 = v33;
    sub_213B2BD44();
    sub_213B2BD50();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
    sub_213B2BD98();
    sub_213AFC5F0(&qword_254D19378, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
    sub_213AFC630();
    sub_213B2BD8C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
    return sub_213AD5374(v23, v24);
  }
  return result;
}

unint64_t PersonalizationAssetManager.PrePairingAssetInfo.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *v0;
  v2 = v0[1];
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  sub_213AD5300(v1, v2);
  v3 = sub_213AF6618(0, 3, v1, v2);
  v5 = v4;
  sub_213AD5374(v1, v2);
  sub_213AF8828(v3, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19058);
  sub_213AFC308(&qword_254D19060, &qword_254D19058, MEMORY[0x24BEE12B0]);
  sub_213B2BDD4();
  swift_bridgeObjectRelease();
  sub_213AD5374(v3, v5);
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213AD5300(v1, v2);
  v6 = sub_213AF6618(4, 17, v1, v2);
  v8 = v7;
  sub_213AD5374(v1, v2);
  sub_213AF8828(v6, v8);
  sub_213B2BDD4();
  swift_bridgeObjectRelease();
  sub_213AD5374(v6, v8);
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  return 0xD000000000000018;
}

uint64_t sub_213AF6BE8()
{
  sub_213B2C518();
  sub_213B2C524();
  return sub_213B2C530();
}

uint64_t sub_213AF6C28()
{
  return sub_213B2C524();
}

uint64_t sub_213AF6C4C()
{
  sub_213B2C518();
  sub_213B2C524();
  return sub_213B2C530();
}

unint64_t sub_213AF6C88()
{
  return 0xD000000000000014;
}

uint64_t sub_213AF6CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213AFA660(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_213AF6CCC()
{
  sub_213AFA484();
  return sub_213B2C560();
}

uint64_t sub_213AF6CF4()
{
  sub_213AFA484();
  return sub_213B2C56C();
}

uint64_t PersonalizationAssetManager.PrePairingAssetInfo.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19108);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA484();
  sub_213B2C554();
  v10[0] = v8;
  v10[1] = v7;
  sub_213AFA4C8();
  sub_213B2C44C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PersonalizationAssetManager.PrePairingAssetInfo.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19120);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA484();
  sub_213B2C548();
  if (!v2)
  {
    sub_213AFA50C();
    sub_213B2C41C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_213AF6F3C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return PersonalizationAssetManager.PrePairingAssetInfo.init(from:)(a1, a2);
}

uint64_t sub_213AF6F50(_QWORD *a1)
{
  return PersonalizationAssetManager.PrePairingAssetInfo.encode(to:)(a1);
}

uint64_t sub_213AF6F68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    swift_unknownObjectRetain();
    v1 = sub_213AF8CEC();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_213B2C2E4();
    sub_213B2BEAC();
    sub_213B2BEAC();
    sub_213B2BEAC();
    sub_213B2BEAC();
    sub_213B2BEAC();
    sub_213B2BEAC();
    sub_213B2BEAC();
    v1 = 0;
    sub_213AD62AC();
    swift_allocError();
    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v2 + 8) = 0xE000000000000000;
    *(_BYTE *)(v2 + 16) = 0;
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_213AF70F8(char a1)
{
  if (!a1)
    return 0xD000000000000019;
  if (a1 == 1)
    return 0x7461446567616D69;
  return 0x6E6F6973726576;
}

uint64_t sub_213AF7160()
{
  char *v0;

  return sub_213AF70F8(*v0);
}

uint64_t sub_213AF7168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213AFA6E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_213AF718C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_213AF7198()
{
  sub_213AFA550();
  return sub_213B2C560();
}

uint64_t sub_213AF71C0()
{
  sub_213AFA550();
  return sub_213B2C56C();
}

uint64_t PersonalizationAssetManager.PrivateRecord.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19130);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11 = v1[3];
  v12 = v7;
  v10 = v1[4];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA550();
  sub_213B2C554();
  LOBYTE(v14) = 0;
  v8 = v13;
  sub_213B2C428();
  if (!v8)
  {
    v14 = v12;
    v15 = v11;
    v16 = 1;
    sub_213AFA4C8();
    sub_213B2C44C();
    LOBYTE(v14) = 2;
    sub_213B2C440();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PersonalizationAssetManager.PrivateRecord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19140);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA550();
  sub_213B2C548();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v21) = 0;
  v9 = sub_213B2C3F8();
  v11 = v10;
  v20 = v9;
  v23 = 1;
  sub_213AFA50C();
  swift_bridgeObjectRetain();
  sub_213B2C41C();
  v12 = v21;
  LOBYTE(v21) = 2;
  v18 = v22;
  v19 = v12;
  sub_213AD5300(v12, v22);
  v13 = sub_213B2C410();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v15 = v18;
  v14 = v19;
  sub_213AD5300(v19, v18);
  sub_213AD5374(v14, v15);
  swift_bridgeObjectRelease();
  *a2 = v20;
  a2[1] = v11;
  a2[2] = v14;
  a2[3] = v15;
  a2[4] = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_213AD5374(v14, v15);
}

uint64_t sub_213AF75C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PersonalizationAssetManager.PrivateRecord.init(from:)(a1, a2);
}

uint64_t sub_213AF75D4(_QWORD *a1)
{
  return PersonalizationAssetManager.PrivateRecord.encode(to:)(a1);
}

uint64_t sub_213AF75E8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  unint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t result;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  unint64_t v82;
  uint8_t *v83;
  uint8_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  char *v92;
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;

  v85 = a7;
  v86 = a6;
  v101 = a4;
  v96 = a3;
  v91 = a1;
  v10 = sub_213B2BD80();
  v87 = *(_QWORD *)(v10 - 8);
  v88 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v90 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_213B2BD38();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v89 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v83 - v16;
  v18 = a5[1];
  v99 = *a5;
  v19 = v99;
  v100 = v18;
  sub_213AD5300(v99, v18);
  sub_213AF6694((uint64_t)v17);
  sub_213B2BD20();
  v20 = v99;
  v21 = v100;
  v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v92 = v17;
  v93 = v22;
  v94 = v12;
  v22((uint64_t)v17, v12);
  v23 = sub_213B2BC18();
  v25 = v24;
  sub_213AD5374(v20, v21);
  v26 = sub_213B2BC30();
  v28 = v27;
  v29 = v25;
  v30 = v91;
  sub_213AD5374(v23, v29);
  v95 = v18;
  sub_213AD5374(v19, v18);
  if (v26 == v30 && v28 == a2)
    v31 = 1;
  else
    v31 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  v99 = 0;
  v100 = 0xE000000000000000;
  sub_213B2C2E4();
  sub_213B2BEAC();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  v32 = v19;
  v33 = v95;
  v97 = v19;
  v98 = v95;
  sub_213AD5300(v19, v95);
  v34 = (uint64_t)v92;
  sub_213AF6694((uint64_t)v92);
  sub_213B2BD20();
  v91 = v7;
  v35 = v97;
  v36 = v98;
  v93(v34, v94);
  v37 = sub_213B2BC18();
  v39 = v38;
  sub_213AD5374(v35, v36);
  sub_213B2BC30();
  sub_213AD5374(v37, v39);
  sub_213AD5374(v19, v33);
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  if ((v31 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v40 = v96;
    if (qword_254D18388 != -1)
      swift_once();
    v41 = sub_213B2BCF0();
    v42 = (uint8_t *)__swift_project_value_buffer(v41, (uint64_t)qword_254D18FA0);
    v43 = v101;
    sub_213AD5300(v40, v101);
    sub_213AD5300(v40, v43);
    v84 = v42;
    v44 = sub_213B2BCD8();
    v45 = sub_213B2C140();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v99 = v47;
      *(_DWORD *)v46 = 136315138;
      sub_213AD5300(v96, v101);
      v48 = sub_213B2BBE8();
      v50 = v49;
      sub_213AD5374(v96, v101);
      v97 = sub_213AE1780(v48, v50, &v99);
      v43 = v101;
      sub_213B2C254();
      v40 = v96;
      swift_bridgeObjectRelease();
      sub_213AD5374(v40, v43);
      sub_213AD5374(v40, v43);
      _os_log_impl(&dword_213AC8000, v44, v45, "Decrypting image: %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v47, -1, -1);
      MEMORY[0x2199BD0E8](v46, -1, -1);
    }
    else
    {
      sub_213AD5374(v40, v43);
      sub_213AD5374(v40, v43);
    }

    v55 = v95;
    sub_213AD5300(v40, v43);
    v56 = v91;
    sub_213AF7F44(v40, v43);
    if (v56)
    {
      sub_213AD5374(v40, v43);
      return sub_213AD5374(v19, v55);
    }
    else
    {
      v99 = v19;
      v100 = v55;
      v57 = v89;
      sub_213AF6694(v89);
      v58 = v57;
      v59 = sub_213B2BD68();
      v91 = v60;
      v61 = v59;
      v93(v58, v94);
      v62 = v91;
      sub_213AD5300(v61, v91);
      sub_213AD5300(v61, v62);
      v63 = sub_213B2BCD8();
      v64 = sub_213B2C140();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = (uint8_t *)swift_slowAlloc();
        v89 = swift_slowAlloc();
        v99 = v89;
        *(_DWORD *)v65 = 136315138;
        v83 = v65 + 4;
        v84 = v65;
        v66 = v91;
        sub_213AD5300(v61, v91);
        v67 = sub_213B2BBE8();
        v69 = v68;
        sub_213AD5374(v61, v66);
        v97 = sub_213AE1780(v67, v69, &v99);
        sub_213B2C254();
        v55 = v95;
        swift_bridgeObjectRelease();
        sub_213AD5374(v61, v66);
        sub_213AD5374(v61, v66);
        v70 = v84;
        _os_log_impl(&dword_213AC8000, v63, v64, "Finished fetching personalized asset: %s", v84, 0xCu);
        v71 = v89;
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v71, -1, -1);
        MEMORY[0x2199BD0E8](v70, -1, -1);
      }
      else
      {
        v72 = v91;
        sub_213AD5374(v61, v91);
        sub_213AD5374(v61, v72);
      }

      sub_213AD63B4(0, &qword_254D19068);
      v99 = v32;
      v100 = v55;
      sub_213AD5300(v32, v55);
      v73 = (uint64_t)v92;
      sub_213AF6694((uint64_t)v92);
      sub_213B2BD20();
      v74 = v99;
      v75 = v100;
      v93(v73, v94);
      sub_213B2BC30();
      sub_213AD5374(v74, v75);
      sub_213AD63B4(0, &qword_254D19070);
      sub_213B2C17C();
      v76 = (void *)sub_213B2C11C();
      sub_213AD5374(v32, v55);
      v77 = objc_msgSend(v76, sel_recordName);

      v78 = sub_213B2BE1C();
      v80 = v79;

      sub_213AD5374(v96, v101);
      result = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v90, v88);
      v81 = v85;
      *v85 = v32;
      v81[1] = v55;
      v81[2] = v78;
      v81[3] = v80;
      v82 = v91;
      v81[4] = v61;
      v81[5] = v82;
      v81[6] = v86;
    }
  }
  else
  {
    v99 = 0;
    v100 = 0xE000000000000000;
    sub_213B2C2E4();
    swift_bridgeObjectRelease();
    v99 = 0xD000000000000016;
    v100 = 0x8000000213B351D0;
    sub_213B2BEAC();
    v51 = v99;
    v52 = v100;
    sub_213AD62AC();
    swift_allocError();
    *(_QWORD *)v53 = v51;
    *(_QWORD *)(v53 + 8) = v52;
    *(_BYTE *)(v53 + 16) = 0;
    swift_willThrow();
    sub_213AD5374(v96, v101);
    sub_213AD5374(v19, v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_213AF7F44(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213AF7F80()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (BYTE6(v0) > 0x1BuLL)
  {
    sub_213AD5300(v1, v0);
    sub_213AF630C(v1, v0);
    sub_213B2BD74();
  }
  else
  {
    v2 = sub_213B2BD14();
    sub_213AFC5F0(&qword_254D19368, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDC61A8], MEMORY[0x24BDC61C0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x24BDC61A0], v2);
    swift_willThrow();
  }
  return sub_213AD5374(v1, v0);
}

uint64_t sub_213AF8088(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213AF80C0 + 4 * byte_213B2EC90[a1]))(0xD000000000000013, 0x8000000213B34FA0);
}

uint64_t sub_213AF80C0()
{
  return 0x614E64726F636572;
}

uint64_t sub_213AF80DC()
{
  return 0x7461446567616D69;
}

uint64_t sub_213AF80F8()
{
  return 0x6E6F6973726576;
}

uint64_t sub_213AF8110()
{
  unsigned __int8 *v0;

  return sub_213AF8088(*v0);
}

uint64_t sub_213AF8118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213AFA834(a1, a2);
  *a3 = result;
  return result;
}

void sub_213AF813C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_213AF8148()
{
  sub_213AFA594();
  return sub_213B2C560();
}

uint64_t sub_213AF8170()
{
  sub_213AFA594();
  return sub_213B2C56C();
}

uint64_t PersonalizationAssetManager.PublicRecord.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19148);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v18 = v1[3];
  v19 = v9;
  v10 = v1[4];
  v16 = v1[5];
  v17 = v10;
  v15 = v1[6];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA594();
  sub_213B2C554();
  v21 = v8;
  v22 = v7;
  v23 = 0;
  sub_213AFA5D8();
  v11 = v20;
  sub_213B2C44C();
  if (!v11)
  {
    v13 = v16;
    v12 = v17;
    LOBYTE(v21) = 1;
    sub_213B2C428();
    v21 = v12;
    v22 = v13;
    v23 = 2;
    sub_213AFA4C8();
    sub_213B2C44C();
    LOBYTE(v21) = 3;
    sub_213B2C440();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PersonalizationAssetManager.PublicRecord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19160);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213AFA594();
  sub_213B2C548();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v30 = 0;
  sub_213AFA61C();
  sub_213B2C41C();
  v10 = v28;
  v9 = v29;
  LOBYTE(v28) = 1;
  sub_213AD5300(v10, v29);
  v11 = sub_213B2C3F8();
  v27 = v12;
  v24 = v11;
  v26 = v9;
  v30 = 2;
  sub_213AFA50C();
  swift_bridgeObjectRetain();
  v25 = 0;
  sub_213B2C41C();
  v13 = v28;
  LOBYTE(v28) = 3;
  v23 = v29;
  sub_213AD5300(v13, v29);
  v15 = sub_213B2C410();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v10;
  v17 = v10;
  v18 = v26;
  sub_213AD5300(v17, v26);
  v19 = v13;
  v20 = v27;
  swift_bridgeObjectRetain();
  v21 = v23;
  sub_213AD5300(v19, v23);
  sub_213AD5374(v19, v21);
  swift_bridgeObjectRelease();
  sub_213AD5374(v16, v18);
  *a2 = v16;
  a2[1] = v18;
  a2[2] = v24;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v21;
  a2[6] = v15;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  sub_213AD5374(v16, v18);
  swift_bridgeObjectRelease();
  return sub_213AD5374(v19, v21);
}

uint64_t sub_213AF86B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PersonalizationAssetManager.PublicRecord.init(from:)(a1, a2);
}

uint64_t sub_213AF86C8(_QWORD *a1)
{
  return PersonalizationAssetManager.PublicRecord.encode(to:)(a1);
}

uint64_t sub_213AF86DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  v14[3] = MEMORY[0x24BEE0F88];
  v14[4] = MEMORY[0x24BDCFB90];
  v14[0] = a1;
  v14[1] = a2;
  v4 = __swift_project_boxed_opaque_existential_0(v14, MEMORY[0x24BEE0F88]);
  v5 = (_BYTE *)*v4;
  if (*v4 && (v6 = (_BYTE *)v4[1], v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      v8 = sub_213AFA000(v5, v6);
      v9 = v12 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      v8 = sub_213AFA0C0((uint64_t)v5, (uint64_t)v6);
      v9 = v13 | 0x8000000000000000;
    }
    else
    {
      v8 = sub_213AFA138((uint64_t)v5, (uint64_t)v6);
      v9 = v11 | 0x4000000000000000;
    }
  }
  else
  {
    v8 = 0;
    v9 = 0xC000000000000000;
  }
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t sub_213AF87A4@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19388);
  v4 = swift_allocObject();
  v5 = MEMORY[0x24BEE4260];
  *(_OWORD *)(v4 + 16) = xmmword_213B2E2E0;
  v6 = MEMORY[0x24BEE42B0];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_BYTE *)(v4 + 32) = v3;
  result = sub_213B2BE34();
  *a2 = result;
  a2[1] = v8;
  return result;
}

void sub_213AF8828(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_213AF8880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int16 v26;
  char v27;
  char v28;
  char v29;
  char v30;
  unsigned __int8 v31;

  v5 = v31;
  if (v31)
  {
    *(_QWORD *)(v4 - 104) = v1;
    v6 = v31;
    sub_213B28EB4(0, v31, 0);
    v7 = a1;
    v1 = *(_QWORD *)(v4 - 104);
    if ((_DWORD)v3)
    {
      if ((_DWORD)v3 == 1)
        v8 = (int)a1;
      else
        v8 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v8 = 0;
    }
    while (1)
    {
      if (!v6)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        __break(1u);
        JUMPOUT(0x213AF8B8CLL);
      }
      *(_QWORD *)(v4 - 144) = v6;
      if ((_DWORD)v3)
      {
        if ((_DWORD)v3 == 1)
        {
          if (v8 < (int)a1 || v8 >= a1 >> 32)
            goto LABEL_31;
          v9 = v1;
          v10 = v2;
          v11 = sub_213B2BA80();
          if (!v11)
          {
            __break(1u);
LABEL_38:
            __break(1u);
          }
          v12 = v11;
          v13 = sub_213B2BA98();
          v14 = v8 - v13;
          if (__OFSUB__(v8, v13))
            goto LABEL_34;
        }
        else
        {
          if (v8 < *(_QWORD *)(v7 + 16))
            goto LABEL_33;
          if (v8 >= *(_QWORD *)(v7 + 24))
            goto LABEL_35;
          v9 = v1;
          v10 = v2;
          v16 = sub_213B2BA80();
          if (!v16)
            goto LABEL_38;
          v12 = v16;
          v17 = sub_213B2BA98();
          v14 = v8 - v17;
          if (__OFSUB__(v8, v17))
            goto LABEL_36;
        }
        v15 = *(_BYTE *)(v12 + v14);
        v2 = v10;
        v7 = a1;
      }
      else
      {
        if (v8 >= v31)
          goto LABEL_32;
        v9 = v1;
        *(_BYTE *)(v4 - 134) = v7;
        *(_DWORD *)(v4 - 133) = *(_DWORD *)((char *)&a1 + 1);
        *(_WORD *)(v4 - 129) = *(_WORD *)((char *)&a1 + 5);
        *(_BYTE *)(v4 - 127) = HIBYTE(a1);
        *(_WORD *)(v4 - 126) = v26;
        *(_BYTE *)(v4 - 124) = v27;
        *(_BYTE *)(v4 - 123) = v28;
        *(_BYTE *)(v4 - 122) = v29;
        *(_BYTE *)(v4 - 121) = v30;
        v15 = *(_BYTE *)(v4 - 134 + v8);
      }
      *(_BYTE *)(v4 - 134) = v15;
      sub_213AF87A4((char *)(v4 - 134), (uint64_t *)(v4 - 120));
      if (v2)
        break;
      v18 = v7;
      v19 = v3;
      v20 = *(_QWORD *)(v4 - 120);
      v21 = *(_QWORD *)(v4 - 112);
      v1 = v9;
      *(_QWORD *)(v4 - 104) = v9;
      v23 = *(_QWORD *)(v9 + 16);
      v22 = *(_QWORD *)(v9 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_213B28EB4(v22 > 1, v23 + 1, 1);
        v18 = a1;
        v1 = *(_QWORD *)(v4 - 104);
      }
      *(_QWORD *)(v1 + 16) = v23 + 1;
      v24 = v1 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v21;
      ++v8;
      v6 = *(_QWORD *)(v4 - 144) - 1;
      --v5;
      v3 = v19;
      v7 = v18;
      if (!v5)
        return v1;
    }
    swift_release();
  }
  return v1;
}

id static CKContainer.AirTagsContainer.getter()
{
  return sub_213AFAA20();
}

id static CKContainer.PersonalizationManateeContainer.getter()
{
  return sub_213AFAA20();
}

void sub_213AF8C0C()
{
  strcpy((char *)&qword_254D18FD0, "keyIdentifier");
  *(_WORD *)&algn_254D18FD8[6] = -4864;
}

void sub_213AF8C3C()
{
  qword_254D18FE0 = 0x6567616D69;
  *(_QWORD *)algn_254D18FE8 = 0xE500000000000000;
}

void sub_213AF8C5C()
{
  qword_254D18FF0 = 0x6E6F6973726576;
  *(_QWORD *)algn_254D18FF8 = 0xE700000000000000;
}

void sub_213AF8C80()
{
  qword_254D19000 = 0x7373416567616D69;
  *(_QWORD *)algn_254D19008 = 0xEA00000000007465;
}

void sub_213AF8CA8()
{
  qword_254D19010 = 0x6567616D69;
  *(_QWORD *)algn_254D19018 = 0xE500000000000000;
}

void sub_213AF8CC8()
{
  qword_254D19020 = 0x6E6F6973726576;
  *(_QWORD *)algn_254D19028 = 0xE700000000000000;
}

uint64_t sub_213AF8CEC()
{
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19310);
  if ((swift_dynamicCast() & 1) != 0)
    return v2;
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213B2BEAC();
  sub_213B2BEAC();
  sub_213B2BEAC();
  swift_unknownObjectRetain();
  sub_213B2BE58();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213AD62AC();
  swift_allocError();
  *(_QWORD *)v1 = 0xD000000000000012;
  *(_QWORD *)(v1 + 8) = 0x8000000213B350A0;
  *(_BYTE *)(v1 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_213AF8E88(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_213AF8F14(uint64_t *a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v18;

  v5 = sub_213B2BBD0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = swift_task_alloc();
  v8 = swift_task_alloc();
  _s19ParentDirectoryCRUDVMa();
  sub_213B2BB88();
  v9 = *a4;
  sub_213B2BBB8();
  v10 = (void *)sub_213B2BDF8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  if (v11)
  {
    sub_213B2BB88();
    v12 = sub_213B2BBDC();
    v14 = v13;
    v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v15(v7, v5);
    v15(v8, v5);
  }
  else
  {
    v12 = 0;
    v14 = 0xF000000000000000;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  *a1 = v12;
  a1[1] = v14;
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_213AFCCE0(*(uint64_t (**)(void))(v18 + 8));
}

uint64_t sub_213AF90BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_213AF90D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v0[5] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9188]), sel_init);
  v2 = swift_task_alloc();
  v0[6] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  sub_213AD63B4(0, &qword_254D190E8);
  *v3 = v0;
  v3[1] = sub_213AF91A4;
  return sub_213B2C104();
}

uint64_t sub_213AF91A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213AF9210()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_213AF9244()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PersonalizationAssetManager()
{
  return objc_opt_self();
}

uint64_t sub_213AF92A0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213AD5374(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213AF92E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0 + 6;
  v5 = v0[11];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_213ADA044;
  v6[24] = v4;
  v6[25] = v5;
  v6[22] = v2;
  v6[23] = v3;
  return swift_task_switch();
}

uint64_t sub_213AF9358()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_213AD5374(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocObject();
}

uint64_t sub_213AF939C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_213AD7E40;
  v5[12] = v4;
  v5[13] = v0 + 7;
  v5[10] = v2;
  v5[11] = v3;
  return swift_task_switch();
}

void sub_213AF9410(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

_BYTE *sub_213AF941C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_213AFA000(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_213AFA0C0((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_213AFA138((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_213AF9490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_213B2BBD0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = swift_task_alloc();
  sub_213B0EA80();
  _s19ParentDirectoryCRUDVMa();
  sub_213B2BB88();
  sub_213B2BC3C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  return sub_213AFCCE0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_213AF958C(uint64_t *a1, uint64_t *a2, void **a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *a2;
  v7 = a2[1];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_213AD7E40;
  return sub_213AF8F14(a1, v6, v7, a3);
}

uint64_t sub_213AF95F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_213B2BBD0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = swift_task_alloc();
  sub_213B0EF40();
  sub_213B0EA80();
  _s19ParentDirectoryCRUDVMa();
  sub_213B2BB88();
  sub_213B2BC3C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  return sub_213AFCCE0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_213AF9704()
{
  uint64_t v0;

  sub_213B0EF40();
  return sub_213AFCCE0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_213AF975C(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a3;
  *(_QWORD *)(v3 + 128) = *a2;
  *(_QWORD *)(v3 + 136) = v4;
  return swift_task_switch();
}

uint64_t sub_213AF977C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_213AF981C;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_213AF8E84;
  v4[3] = &block_descriptor_160;
  v4[4] = v3;
  objc_msgSend(v1, sel_saveRecord_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_213AF981C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_213AF987C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v4 = *a2;
  v5 = *a3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_213AF98E4;
  v6[3] = v4;
  v6[4] = v5;
  return swift_task_switch();
}

uint64_t sub_213AF98E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_213AF9940(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a3;
  *(_QWORD *)(v3 + 128) = *a2;
  *(_QWORD *)(v3 + 136) = v4;
  return swift_task_switch();
}

uint64_t sub_213AF9960()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_213AF981C;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_213AF8E84;
  v4[3] = &block_descriptor_153;
  v4[4] = v3;
  objc_msgSend(v1, sel_saveRecord_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_213AF9A00(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = *a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_213AF9A20()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_213AF9AC0;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_213AF8E84;
  v4[3] = &block_descriptor_0;
  v4[4] = v3;
  objc_msgSend(v1, sel_deleteRecordWithID_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_213AF9AC0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_213AF9B20()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213AF9B54()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213AF9B90(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_213AF9BF4
     + *((int *)qword_213AF9D98 + (__swift_project_boxed_opaque_existential_0(v3, MEMORY[0x24BDCDDE8])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_213AF9C04()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_213AD5300(v1, v0);
  sub_213B2BC0C();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v3);
}

uint64_t sub_213AF9DA8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_213B2BA80();
  if (!result || (result = sub_213B2BA98(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_213B2BA8C();
      return sub_213B2BC0C();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_213AF9E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(a3 + 48);
  v9 = swift_task_alloc();
  *(_QWORD *)(v4 + 72) = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_213AF9EDC;
  *(_QWORD *)(v9 + 128) = a2;
  *(_QWORD *)(v9 + 136) = a4;
  *(_QWORD *)(v9 + 120) = a1;
  v10 = *(_OWORD *)(v4 + 16);
  v11 = *(_OWORD *)(v4 + 32);
  v12 = *(_OWORD *)(v4 + 48);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v4 + 64);
  *(_OWORD *)(v9 + 32) = v11;
  *(_OWORD *)(v9 + 48) = v12;
  *(_OWORD *)(v9 + 16) = v10;
  return swift_task_switch();
}

uint64_t sub_213AF9EDC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213AF9F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 32) = v8;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(a3 + 32);
  v9 = swift_task_alloc();
  *(_QWORD *)(v4 + 56) = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_213AF9FB8;
  *(_QWORD *)(v9 + 112) = a2;
  *(_QWORD *)(v9 + 120) = a4;
  *(_QWORD *)(v9 + 104) = a1;
  v11 = *(_OWORD *)(v4 + 16);
  v10 = *(_OWORD *)(v4 + 32);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v4 + 48);
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = v10;
  return swift_task_switch();
}

uint64_t sub_213AF9FB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213AFA000(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_213AFA0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_213B2BAA4();
  swift_allocObject();
  result = sub_213B2BA74();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_213B2BC00();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_213AFA138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_213B2BAA4();
  swift_allocObject();
  result = sub_213B2BA74();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_213AFA1B8()
{
  unint64_t result;

  result = qword_254D190D8;
  if (!qword_254D190D8)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F4A0, &type metadata for ProductKitFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_254D190D8);
  }
  return result;
}

uint64_t sub_213AFA1FC(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_213AFA30C()
{
  unint64_t result;

  result = qword_254D190F8;
  if (!qword_254D190F8)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F308, &type metadata for PersonalizationAssetManager.PostPairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D190F8);
  }
  return result;
}

uint64_t sub_213AFA350(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x8000000213B34F60)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_213AFA3D4(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D192A0);
  v10 = sub_213AFC308(&qword_254D192A8, &qword_254D192A0, MEMORY[0x24BDCFBE0]);
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_0(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_213AF941C(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  return v5;
}

unint64_t sub_213AFA484()
{
  unint64_t result;

  result = qword_254D19110;
  if (!qword_254D19110)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F2B8, &type metadata for PersonalizationAssetManager.PrePairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19110);
  }
  return result;
}

unint64_t sub_213AFA4C8()
{
  unint64_t result;

  result = qword_254D19118;
  if (!qword_254D19118)
  {
    result = MEMORY[0x2199BD010](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254D19118);
  }
  return result;
}

unint64_t sub_213AFA50C()
{
  unint64_t result;

  result = qword_254D19128;
  if (!qword_254D19128)
  {
    result = MEMORY[0x2199BD010](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254D19128);
  }
  return result;
}

unint64_t sub_213AFA550()
{
  unint64_t result;

  result = qword_254D19138;
  if (!qword_254D19138)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F268, &type metadata for PersonalizationAssetManager.PrivateRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19138);
  }
  return result;
}

unint64_t sub_213AFA594()
{
  unint64_t result;

  result = qword_254D19150;
  if (!qword_254D19150)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F218, &type metadata for PersonalizationAssetManager.PublicRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19150);
  }
  return result;
}

unint64_t sub_213AFA5D8()
{
  unint64_t result;

  result = qword_254D19158;
  if (!qword_254D19158)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for PersonalizationAssetManager.PrePairingAssetInfo, &type metadata for PersonalizationAssetManager.PrePairingAssetInfo);
    atomic_store(result, (unint64_t *)&qword_254D19158);
  }
  return result;
}

unint64_t sub_213AFA61C()
{
  unint64_t result;

  result = qword_254D19168;
  if (!qword_254D19168)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for PersonalizationAssetManager.PrePairingAssetInfo, &type metadata for PersonalizationAssetManager.PrePairingAssetInfo);
    atomic_store(result, (unint64_t *)&qword_254D19168);
  }
  return result;
}

uint64_t sub_213AFA660(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000213B34F80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_213AFA6E4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x8000000213B34F60 || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061 || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_213AFA834(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000213B34FA0 || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E64726F636572 && a2 == 0xEA0000000000656DLL || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061 || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

id sub_213AFA9E8()
{
  return sub_213AFAA20();
}

id sub_213AFAA04()
{
  return sub_213AFAA20();
}

id sub_213AFAA20()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  if (!sub_213B00DB0())
  {
    if (qword_254D18388 != -1)
      swift_once();
    v0 = sub_213B2BCF0();
    __swift_project_value_buffer(v0, (uint64_t)qword_254D18FA0);
    v1 = sub_213B2BCD8();
    v2 = sub_213B2C170();
    if (!os_log_type_enabled(v1, v2))
    {
      v4 = 1;
      goto LABEL_12;
    }
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v2, "Using production environment", v3, 2u);
    v4 = 1;
    goto LABEL_10;
  }
  if (qword_254D18388 != -1)
    swift_once();
  v5 = sub_213B2BCF0();
  __swift_project_value_buffer(v5, (uint64_t)qword_254D18FA0);
  v1 = sub_213B2BCD8();
  v6 = sub_213B2C170();
  v4 = 2;
  if (os_log_type_enabled(v1, v6))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v6, "Using sandbox environment", v3, 2u);
LABEL_10:
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
LABEL_12:

  v7 = objc_allocWithZone(MEMORY[0x24BDB9038]);
  v8 = (void *)sub_213B2BDF8();
  v9 = objc_msgSend(v7, sel_initWithContainerIdentifier_environment_, v8, v4);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB9030]), sel_initWithContainerID_, v9);
  return v10;
}

uint64_t method lookup function for PersonalizationAssetManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonalizationAssetManager.__allocating_init(container:cacheDirectory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PersonalizationAssetManager.__allocating_init(container:manateeContainer:cacheDirectory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for PersonalizationAssetManager.AssetInfo(uint64_t a1)
{
  return sub_213ADACFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10ProductKit27PersonalizationAssetManagerC9AssetInfoOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_213ADAC20(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PersonalizationAssetManager.AssetInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_213ADAC20(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_213ADACFC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PersonalizationAssetManager.AssetInfo(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_213ADACFC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.AssetInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.AssetInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_213AFADA8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_213AFADB0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.AssetInfo()
{
  return &type metadata for PersonalizationAssetManager.AssetInfo;
}

void destroy for PersonalizationAssetManager.Asset(uint64_t a1)
{
  sub_213AD5374(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));

}

uint64_t *initializeWithCopy for PersonalizationAssetManager.Asset(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;

  v4 = *a2;
  v5 = a2[1];
  sub_213AD5300(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = (uint64_t)v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for PersonalizationAssetManager.Asset(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  v5 = a2[1];
  sub_213AD5300(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_213AD5374(v6, v7);
  a1[2] = a2[2];
  v8 = (void *)a1[3];
  v9 = (void *)a2[3];
  a1[3] = (uint64_t)v9;
  v10 = v9;

  return a1;
}

uint64_t *assignWithTake for PersonalizationAssetManager.Asset(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_213AD5374(v4, v5);
  v6 = (void *)a1[3];
  v7 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.Asset(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.Asset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.Asset()
{
  return &type metadata for PersonalizationAssetManager.Asset;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.Asset.Metadata()
{
  return &type metadata for PersonalizationAssetManager.Asset.Metadata;
}

_QWORD *initializeBufferWithCopyOfBuffer for PersonalizationAssetManager.PostPairingAssetInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PersonalizationAssetManager.PostPairingAssetInfo()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for PersonalizationAssetManager.PostPairingAssetInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PersonalizationAssetManager.PostPairingAssetInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.PostPairingAssetInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.PostPairingAssetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo()
{
  return &type metadata for PersonalizationAssetManager.PostPairingAssetInfo;
}

uint64_t *initializeBufferWithCopyOfBuffer for PersonalizationAssetManager.PrePairingAssetInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_213AD5300(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for PersonalizationAssetManager.PrePairingAssetInfo(uint64_t a1)
{
  return sub_213AD5374(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for PersonalizationAssetManager.PrePairingAssetInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_213AD5300(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_213AD5374(v5, v6);
  return a1;
}

uint64_t *assignWithTake for PersonalizationAssetManager.PrePairingAssetInfo(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_213AD5374(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.PrePairingAssetInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.PrePairingAssetInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo()
{
  return &type metadata for PersonalizationAssetManager.PrePairingAssetInfo;
}

uint64_t destroy for PersonalizationAssetManager.PrivateRecord(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_213AD5374(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for PersonalizationAssetManager.PrivateRecord(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_213AD5300(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithCopy for PersonalizationAssetManager.PrivateRecord(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  v5 = a2[3];
  sub_213AD5300(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_213AD5374(v6, v7);
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for PersonalizationAssetManager.PrivateRecord(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_213AD5374(v5, v6);
  a1[4] = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.PrivateRecord(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.PrivateRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PrivateRecord()
{
  return &type metadata for PersonalizationAssetManager.PrivateRecord;
}

uint64_t destroy for PersonalizationAssetManager.PublicRecord(uint64_t a1)
{
  sub_213AD5374(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  return sub_213AD5374(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t *initializeWithCopy for PersonalizationAssetManager.PublicRecord(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  sub_213AD5300(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  swift_bridgeObjectRetain();
  sub_213AD5300(v7, v8);
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = a2[6];
  return a1;
}

uint64_t *assignWithCopy for PersonalizationAssetManager.PublicRecord(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  sub_213AD5300(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_213AD5374(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a2[4];
  v9 = a2[5];
  sub_213AD5300(v8, v9);
  v10 = a1[4];
  v11 = a1[5];
  a1[4] = v8;
  a1[5] = v9;
  sub_213AD5374(v10, v11);
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for PersonalizationAssetManager.PublicRecord(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_213AD5374(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = a1[4];
  v8 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_213AD5374(v7, v8);
  a1[6] = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.PublicRecord(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.PublicRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PublicRecord()
{
  return &type metadata for PersonalizationAssetManager.PublicRecord;
}

uint64_t destroy for PersonalizationAssetManager.Dependencies()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PersonalizationAssetManager.Dependencies(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v3 = *(_QWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 248) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for PersonalizationAssetManager.Dependencies(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_retain();
  swift_release();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_retain();
  swift_release();
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_retain();
  swift_release();
  v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_retain();
  swift_release();
  v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_retain();
  swift_release();
  v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_retain();
  swift_release();
  v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy256_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

_OWORD *assignWithTake for PersonalizationAssetManager.Dependencies(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.Dependencies(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 256))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.Dependencies(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 256) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 256) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.Dependencies()
{
  return &type metadata for PersonalizationAssetManager.Dependencies;
}

uint64_t getEnumTagSinglePayload for PersonalizationAssetManager.PublicRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.PublicRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213AFBDA8 + 4 * byte_213B2EC99[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213AFBDDC + 4 * byte_213B2EC94[v4]))();
}

uint64_t sub_213AFBDDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AFBDE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213AFBDECLL);
  return result;
}

uint64_t sub_213AFBDF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213AFBE00);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213AFBE04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AFBE0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PublicRecord.CodingKeys()
{
  return &type metadata for PersonalizationAssetManager.PublicRecord.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PersonalizationAssetManager.PrivateRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213AFBE74 + 4 * byte_213B2ECA3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213AFBEA8 + 4 * byte_213B2EC9E[v4]))();
}

uint64_t sub_213AFBEA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AFBEB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213AFBEB8);
  return result;
}

uint64_t sub_213AFBEC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213AFBECCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213AFBED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213AFBED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PrivateRecord.CodingKeys()
{
  return &type metadata for PersonalizationAssetManager.PrivateRecord.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo.CodingKeys()
{
  return &type metadata for PersonalizationAssetManager.PrePairingAssetInfo.CodingKeys;
}

uint64_t _s10ProductKit27PersonalizationAssetManagerC19PrePairingAssetInfoV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213AFBF4C + 4 * byte_213B2ECA8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213AFBF6C + 4 * byte_213B2ECAD[v4]))();
}

_BYTE *sub_213AFBF4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213AFBF6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213AFBF74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213AFBF7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213AFBF84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213AFBF8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo.CodingKeys()
{
  return &type metadata for PersonalizationAssetManager.PostPairingAssetInfo.CodingKeys;
}

unint64_t sub_213AFBFAC()
{
  unint64_t result;

  result = qword_254D19240;
  if (!qword_254D19240)
  {
    result = MEMORY[0x2199BD010](&unk_213B2EFC8, &type metadata for PersonalizationAssetManager.PostPairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19240);
  }
  return result;
}

unint64_t sub_213AFBFF4()
{
  unint64_t result;

  result = qword_254D19248;
  if (!qword_254D19248)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F080, &type metadata for PersonalizationAssetManager.PrePairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19248);
  }
  return result;
}

unint64_t sub_213AFC03C()
{
  unint64_t result;

  result = qword_254D19250;
  if (!qword_254D19250)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F138, &type metadata for PersonalizationAssetManager.PrivateRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19250);
  }
  return result;
}

unint64_t sub_213AFC084()
{
  unint64_t result;

  result = qword_254D19258;
  if (!qword_254D19258)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F1F0, &type metadata for PersonalizationAssetManager.PublicRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19258);
  }
  return result;
}

unint64_t sub_213AFC0CC()
{
  unint64_t result;

  result = qword_254D19260;
  if (!qword_254D19260)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F160, &type metadata for PersonalizationAssetManager.PublicRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19260);
  }
  return result;
}

unint64_t sub_213AFC114()
{
  unint64_t result;

  result = qword_254D19268;
  if (!qword_254D19268)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F188, &type metadata for PersonalizationAssetManager.PublicRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19268);
  }
  return result;
}

unint64_t sub_213AFC15C()
{
  unint64_t result;

  result = qword_254D19270;
  if (!qword_254D19270)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F0A8, &type metadata for PersonalizationAssetManager.PrivateRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19270);
  }
  return result;
}

unint64_t sub_213AFC1A4()
{
  unint64_t result;

  result = qword_254D19278;
  if (!qword_254D19278)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F0D0, &type metadata for PersonalizationAssetManager.PrivateRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19278);
  }
  return result;
}

unint64_t sub_213AFC1EC()
{
  unint64_t result;

  result = qword_254D19280;
  if (!qword_254D19280)
  {
    result = MEMORY[0x2199BD010](&unk_213B2EFF0, &type metadata for PersonalizationAssetManager.PrePairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19280);
  }
  return result;
}

unint64_t sub_213AFC234()
{
  unint64_t result;

  result = qword_254D19288;
  if (!qword_254D19288)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F018, &type metadata for PersonalizationAssetManager.PrePairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19288);
  }
  return result;
}

unint64_t sub_213AFC27C()
{
  unint64_t result;

  result = qword_254D19290;
  if (!qword_254D19290)
  {
    result = MEMORY[0x2199BD010](&unk_213B2EF38, &type metadata for PersonalizationAssetManager.PostPairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19290);
  }
  return result;
}

unint64_t sub_213AFC2C4()
{
  unint64_t result;

  result = qword_254D19298;
  if (!qword_254D19298)
  {
    result = MEMORY[0x2199BD010](&unk_213B2EF60, &type metadata for PersonalizationAssetManager.PostPairingAssetInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19298);
  }
  return result;
}

uint64_t sub_213AFC308(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2199BD010](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213AFC348()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213AFC36C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254D18C10 + dword_254D18C10))(a1, v4);
}

uint64_t sub_213AFC3DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_213AD5300(v2, v3);
  return a1;
}

uint64_t sub_213AFC41C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_213AD5374(v2, v3);
  return a1;
}

unint64_t sub_213AFC45C()
{
  unint64_t result;

  result = qword_254D19328;
  if (!qword_254D19328)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for PersonalizationAssetManager.PrivateRecord, &type metadata for PersonalizationAssetManager.PrivateRecord);
    atomic_store(result, &qword_254D19328);
  }
  return result;
}

uint64_t sub_213AFC4A0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDCDC48] - 8) + 32))(a2, a1);
  return a2;
}

unint64_t sub_213AFC4DC()
{
  unint64_t result;

  result = qword_254D19338;
  if (!qword_254D19338)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for PersonalizationAssetManager.PublicRecord, &type metadata for PersonalizationAssetManager.PublicRecord);
    atomic_store(result, (unint64_t *)&qword_254D19338);
  }
  return result;
}

uint64_t sub_213AFC520()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_213AD7E40;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D19340 + dword_254D19340))(v2, v3, v5, v4);
}

unint64_t sub_213AFC598()
{
  unint64_t result;

  result = qword_254D19358;
  if (!qword_254D19358)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for PersonalizationAssetManager.PublicRecord, &type metadata for PersonalizationAssetManager.PublicRecord);
    atomic_store(result, (unint64_t *)&qword_254D19358);
  }
  return result;
}

uint64_t sub_213AFC5DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_213AD5300(a1, a2);
  return a1;
}

uint64_t sub_213AFC5F0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2199BD010](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213AFC630()
{
  unint64_t result;

  result = qword_254D19380;
  if (!qword_254D19380)
  {
    result = MEMORY[0x2199BD010](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254D19380);
  }
  return result;
}

uint64_t sub_213AFC674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213AFC6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_213AFC704()
{
  unint64_t result;

  result = qword_254D193C8;
  if (!qword_254D193C8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for PersonalizationAssetManager.PrivateRecord, &type metadata for PersonalizationAssetManager.PrivateRecord);
    atomic_store(result, (unint64_t *)&qword_254D193C8);
  }
  return result;
}

uint64_t sub_213AFC748()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&aT[*(int *)aT])(v2, v3, v5, v4);
}

uint64_t sub_213AFC7C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t, _QWORD *, uint64_t *))((char *)&dword_254D193F8 + dword_254D193F8))(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_213AFC830(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t *))((char *)&dword_254D19408 + dword_254D19408))(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_213AFC8A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t, _QWORD *, uint64_t *))((char *)&dword_254D19418 + dword_254D19418))(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_213AFC914(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_213ADA044;
  return ((uint64_t (*)(_QWORD *, uint64_t *))((char *)&dword_254D19428 + dword_254D19428))(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_213AFC97C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_213AFC9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s19ParentDirectoryCRUDVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213AFC9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s19ParentDirectoryCRUDVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213AFCA2C()
{
  uint64_t v0;
  _QWORD *v1;

  _s19ParentDirectoryCRUDVMa();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_213ADA044;
  return ((uint64_t (__cdecl *)())((char *)&dword_254D19478 + dword_254D19478))();
}

uint64_t sub_213AFCAB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void **v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(_s19ParentDirectoryCRUDVMa() - 8) + 80);
  v7 = (void **)(v2 + ((v6 + 16) & ~v6));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_213ADA044;
  return ((uint64_t (*)(uint64_t *, uint64_t *, void **))((char *)&dword_254D19488 + dword_254D19488))(a1, a2, v7);
}

uint64_t sub_213AFCB48()
{
  uint64_t v0;
  _QWORD *v1;

  _s19ParentDirectoryCRUDVMa();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_213ADA044;
  return ((uint64_t (__cdecl *)())((char *)&dword_254D19498 + dword_254D19498))();
}

uint64_t objectdestroy_131Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = _s19ParentDirectoryCRUDVMa();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = sub_213B2BBD0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_213AFCC60()
{
  uint64_t v0;
  _QWORD *v1;

  _s19ParentDirectoryCRUDVMa();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_213ADA044;
  return ((uint64_t (__cdecl *)())((char *)&dword_254D194A8 + dword_254D194A8))();
}

uint64_t sub_213AFCCE0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_213AFCCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_213ADA044;
  return sub_213B0FCC8(a1, a2, v6);
}

id ProductKitCatalog.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ProductKitCatalog.init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v11[5];

  v0 = type metadata accessor for MobileAssetManager();
  v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = &unk_254D1AEB0;
  *(_QWORD *)(v1 + 128) = 0;
  *(_QWORD *)(v1 + 136) = &unk_254D1AEA8;
  *(_QWORD *)(v1 + 144) = 0;
  v11[3] = v0;
  v11[4] = &off_24D0BF990;
  v11[0] = v1;
  v2 = objc_allocWithZone((Class)type metadata accessor for ProductKitCatalog());
  v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (_QWORD *)((char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v6 + 16))(v5);
  v7 = *v5;
  swift_retain();
  v8 = sub_213AFE318(v7, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v8;
}

uint64_t sub_213AFCFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_213B26860((uint64_t)sub_213AFE4CC, v4);
  return swift_release();
}

void sub_213AFD010(uint64_t a1, void (*a2)(void *))
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;

  if ((*(_BYTE *)(a1 + 17) & 1) != 0)
  {
    v4 = *(_QWORD *)a1;
    v3 = *(_QWORD *)(a1 + 8);
    v5 = *(_BYTE *)(a1 + 16);
    sub_213AD62AC();
    v6 = (void *)swift_allocError();
    *(_QWORD *)v7 = v4;
    *(_QWORD *)(v7 + 8) = v3;
    *(_BYTE *)(v7 + 16) = v5;
    sub_213AE4004(v4, v3, v5);
    a2(v6);

  }
  else
  {
    a2(0);
  }
}

void sub_213AFD150(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_213B2BB40();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_213AFD19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, void *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(_QWORD, void *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, void *);
  uint64_t v51;
  _QWORD v52[6];

  v46 = a2;
  v50 = a6;
  v51 = a7;
  v42 = a4;
  v43 = a5;
  v47 = a3;
  v49 = a1;
  v7 = sub_213B2BCA8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_213B2BCC0();
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Product.Identifier();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D194D0);
  MEMORY[0x24BDAC7A8](v14);
  v48 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_213B2BBD0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MarketingPartNumberURL();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v42 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v49, v16);
  if (_s10ProductKit0aB7CatalogC02isaB3URLySb10Foundation0E0VFZ_0((uint64_t)v19))
  {
    v26 = v50;
    v27 = v51;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v19, v16);
    sub_213AFE51C((uint64_t)v23, (uint64_t)v25);
    v28 = *(_QWORD *)(v45 + OBJC_IVAR___ProductKitCatalogInternal_catalog);
    sub_213AD52BC((uint64_t)v25, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
    v29 = v48;
    sub_213AD52BC((uint64_t)v13, v48, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    v30 = v28 + 16;
    v31 = v29 + *(int *)(v14 + 36);
    sub_213AD8B28(v30, v31);
    sub_213AD53FC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    swift_bridgeObjectRetain();
    v32 = sub_213B2C3E0();
    swift_bridgeObjectRelease();
    if (v32)
    {
      sub_213AD62AC();
      v33 = (void *)swift_allocError();
      *(_OWORD *)v34 = xmmword_213B2F3A0;
      *(_BYTE *)(v34 + 16) = 2;
      v26(0, v33);

    }
    else
    {
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = v26;
      *(_QWORD *)(v37 + 24) = v27;
      sub_213AD8B28(v31, (uint64_t)v52);
      __swift_project_boxed_opaque_existential_0(v52, v52[3]);
      swift_retain();
      v38 = sub_213AFDE88();
      v40 = v39;
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = sub_213AFE5A0;
      *(_QWORD *)(v41 + 24) = v37;
      swift_retain();
      sub_213B25548(v38, v40, v42, v43, (void (*)(char *))sub_213AFE5A8, v41);
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
      swift_release();
    }
    sub_213AFE560(v29);
    sub_213AD53FC((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
  }
  else
  {
    sub_213B2BC9C();
    sub_213AFE048(MEMORY[0x24BEE4AF8]);
    sub_213AFE4D4();
    sub_213B2BB34();
    v35 = (void *)sub_213B2BCB4();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v36 = v35;
    v50(0, v35);

  }
}

void sub_213AFD5EC(_QWORD *a1, void (*a2)(_QWORD, void *))
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;

  v3 = *a1;
  if ((*((_BYTE *)a1 + 17) & 1) != 0)
  {
    v4 = a1[1];
    v5 = *((_BYTE *)a1 + 16);
    sub_213AD62AC();
    v6 = (void *)swift_allocError();
    *(_QWORD *)v7 = v3;
    *(_QWORD *)(v7 + 8) = v4;
    *(_BYTE *)(v7 + 16) = v5;
    sub_213AE4004(v3, v4, v5);
    a2(0, v6);

  }
  else
  {
    a2(*a1, 0);
  }
}

void sub_213AFD6A4(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_213B2BBD0();
    v5 = (void *)sub_213B2BF30();
  }
  if (a2)
    v6 = sub_213B2BB40();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

void sub_213AFD728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, _QWORD, _QWORD, void *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(_QWORD, _QWORD, _QWORD, void *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD, _QWORD, void *);
  uint64_t v51;
  _QWORD v52[6];

  v46 = a2;
  v50 = a6;
  v51 = a7;
  v42 = a4;
  v43 = a5;
  v47 = a3;
  v49 = a1;
  v7 = sub_213B2BCA8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_213B2BCC0();
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Product.Identifier();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D194D0);
  MEMORY[0x24BDAC7A8](v14);
  v48 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_213B2BBD0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MarketingPartNumberURL();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v42 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v49, v16);
  if (_s10ProductKit0aB7CatalogC02isaB3URLySb10Foundation0E0VFZ_0((uint64_t)v19))
  {
    v26 = v50;
    v27 = v51;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v19, v16);
    sub_213AFE51C((uint64_t)v23, (uint64_t)v25);
    v28 = *(_QWORD *)(v45 + OBJC_IVAR___ProductKitCatalogInternal_catalog);
    sub_213AD52BC((uint64_t)v25, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
    v29 = v48;
    sub_213AD52BC((uint64_t)v13, v48, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    v30 = v28 + 16;
    v31 = v29 + *(int *)(v14 + 36);
    sub_213AD8B28(v30, v31);
    sub_213AD53FC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    swift_bridgeObjectRetain();
    v32 = sub_213B2C3E0();
    swift_bridgeObjectRelease();
    if (v32)
    {
      sub_213AD62AC();
      v33 = (void *)swift_allocError();
      *(_OWORD *)v34 = xmmword_213B2F3A0;
      *(_BYTE *)(v34 + 16) = 2;
      v26(0, 0, 0, v33);

    }
    else
    {
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = v26;
      *(_QWORD *)(v37 + 24) = v27;
      sub_213AD8B28(v31, (uint64_t)v52);
      __swift_project_boxed_opaque_existential_0(v52, v52[3]);
      swift_retain();
      v38 = sub_213AFDE88();
      v40 = v39;
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = sub_213AFE5B0;
      *(_QWORD *)(v41 + 24) = v37;
      swift_retain();
      sub_213B25548(v38, v40, v42, v43, (void (*)(char *))sub_213AFE5B8, v41);
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
      swift_release();
    }
    sub_213AFE560(v29);
    sub_213AD53FC((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
  }
  else
  {
    sub_213B2BC9C();
    sub_213AFE048(MEMORY[0x24BEE4AF8]);
    sub_213AFE4D4();
    sub_213B2BB34();
    v35 = (void *)sub_213B2BCB4();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v36 = v35;
    v50(0, 0, 0, v35);

  }
}

void sub_213AFDB88(uint64_t a1, void (*a2)(void *, uint64_t, uint64_t, void *))
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v4 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    sub_213AD62AC();
    v6 = (void *)swift_allocError();
    *(_QWORD *)v7 = v4;
    *(_QWORD *)(v7 + 8) = v3;
    *(_BYTE *)(v7 + 16) = v5;
    sub_213AE4004((uint64_t)v4, v3, v5);
    a2(0, 0, 0, v6);

  }
  else
  {
    v8 = v4;
    a2(v4, v3, v5, 0);

  }
}

uint64_t sub_213AFDC64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6, void (*a7)(char *, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  v11 = sub_213B2BBD0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _Block_copy(a6);
  sub_213B2BBA0();
  v16 = sub_213B2BE1C();
  v18 = v17;
  if (a5)
  {
    v19 = sub_213B2BE1C();
    a5 = v20;
  }
  else
  {
    v19 = 0;
  }
  _Block_copy(v15);
  v21 = a1;
  a7(v14, v16, v18, v19, a5, v21, v15);
  _Block_release(v15);
  _Block_release(v15);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_213AFDD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  uint64_t v9;
  id v10;

  if (!a3)
  {
    v8 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = (void *)sub_213B2BDF8();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v9 = sub_213B2BB40();
LABEL_6:
  v10 = (id)v9;
  (*(void (**)(uint64_t, uint64_t, void *))(a5 + 16))(a5, a1, v8);

}

id ProductKitCatalog.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductKitCatalog();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_213AFDE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = type metadata accessor for Product.Identifier();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MarketingPartNumberURL();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213AD52BC(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
  sub_213AFE51C((uint64_t)v4, (uint64_t)v7);
  v8 = sub_213B2BBB8();
  sub_213B1A100(1uLL, v8, v9);
  swift_bridgeObjectRelease();
  v10 = sub_213B2C248();
  v12 = v11;
  swift_bridgeObjectRelease();
  v15[0] = v10;
  v15[1] = v12;
  sub_213B2BF0C();
  v13 = sub_213B2BE70();
  swift_bridgeObjectRelease();
  sub_213AD53FC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
  return v13;
}

uint64_t type metadata accessor for ProductKitCatalog()
{
  return objc_opt_self();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_213AFE048(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18898);
  v2 = sub_213B2C3BC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_213AFF014(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_213AFE170(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_213AD5184(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213AFE170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_213B2C518();
  sub_213B2BE88();
  v4 = sub_213B2C530();
  return sub_213AFE1D4(a1, a2, v4);
}

unint64_t sub_213AFE1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_213B2C47C() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_213B2C47C() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_213B2C47C() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

id sub_213AFE318(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  id v18;
  uint64_t v20;
  objc_super v21;
  _QWORD v22[5];
  _BYTE v23[24];
  uint64_t v24;
  _QWORD v25[5];

  v4 = type metadata accessor for MobileAssetManager();
  v25[3] = v4;
  v25[4] = &off_24D0BF990;
  v25[0] = a1;
  sub_213AD8B28((uint64_t)v25, (uint64_t)a2 + OBJC_IVAR___ProductKitCatalogInternal_assetManager);
  sub_213AD8B28((uint64_t)v25, (uint64_t)v23);
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = *v7;
  v22[3] = v4;
  v22[4] = &off_24D0BF990;
  v22[0] = v9;
  type metadata accessor for Product.Catalog();
  v10 = (_QWORD *)swift_allocObject();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v4);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  v15 = *v13;
  v10[5] = v4;
  v10[6] = &off_24D0BF990;
  v10[2] = v15;
  v16 = a2;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  *(_QWORD *)&v16[OBJC_IVAR___ProductKitCatalogInternal_catalog] = v10;

  v17 = (objc_class *)type metadata accessor for ProductKitCatalog();
  v21.receiver = v16;
  v21.super_class = v17;
  v18 = objc_msgSendSuper2(&v21, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  return v18;
}

uint64_t sub_213AFE4A8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_213AFE4CC(uint64_t a1)
{
  uint64_t v1;

  sub_213AFD010(a1, *(void (**)(void *))(v1 + 16));
}

unint64_t sub_213AFE4D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D194D8;
  if (!qword_254D194D8)
  {
    v1 = sub_213B2BCC0();
    result = MEMORY[0x2199BD010](MEMORY[0x24BDCF608], v1);
    atomic_store(result, (unint64_t *)&qword_254D194D8);
  }
  return result;
}

uint64_t sub_213AFE51C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MarketingPartNumberURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213AFE560(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D194D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_213AFE5A0(_QWORD *a1)
{
  uint64_t v1;

  sub_213AFD5EC(a1, *(void (**)(_QWORD, void *))(v1 + 16));
}

uint64_t sub_213AFE5A8(uint64_t a1)
{
  uint64_t v1;

  return sub_213B18DDC(a1, *(void (**)(__int128 *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_213AFE5B0(uint64_t a1)
{
  uint64_t v1;

  sub_213AFDB88(a1, *(void (**)(void *, uint64_t, uint64_t, void *))(v1 + 16));
}

uint64_t sub_213AFE5B8(uint64_t a1)
{
  uint64_t v1;

  return sub_213B19170(a1, *(void (**)(_BYTE *))(v1 + 16));
}

uint64_t method lookup function for ProductKitCatalog()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProductKitCatalog.updateCatalog(completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ProductKitCatalog.watchBandFilesForFeatureWithURL(_:featureString:variant:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ProductKitCatalog.watchBandImageForFeatureWithURL(_:featureString:variant:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

void sub_213AFE620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(const void *, _QWORD, void *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (**v29)(const void *, _QWORD, void *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[6];

  v52 = a6;
  v53 = a2;
  v46 = a4;
  v47 = a5;
  v54 = a3;
  v9 = sub_213B2BCA8();
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213B2BCC0();
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Product.Identifier();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D194D0);
  MEMORY[0x24BDAC7A8](v48);
  v55 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_213B2BBD0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MarketingPartNumberURL();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v46 - v26;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a7;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  v29 = a7;
  _Block_copy(a7);
  if (_s10ProductKit0aB7CatalogC02isaB3URLySb10Foundation0E0VFZ_0((uint64_t)v21))
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v21, v18);
    sub_213AFE51C((uint64_t)v25, (uint64_t)v27);
    v30 = *(_QWORD *)(v52 + OBJC_IVAR___ProductKitCatalogInternal_catalog);
    sub_213AD52BC((uint64_t)v27, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
    v31 = v55;
    sub_213AD52BC((uint64_t)v16, v55, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    v32 = v31 + *(int *)(v48 + 36);
    sub_213AD8B28(v30 + 16, v32);
    sub_213AD53FC((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    swift_bridgeObjectRetain();
    v33 = sub_213B2C3E0();
    swift_bridgeObjectRelease();
    if (v33)
    {
      sub_213AD62AC();
      v34 = (void *)swift_allocError();
      *(_OWORD *)v35 = xmmword_213B2F3A0;
      *(_BYTE *)(v35 + 16) = 2;
      v36 = (void *)sub_213B2BB40();
      v29[2](v29, 0, v36);

    }
    else
    {
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = sub_213AFF004;
      *(_QWORD *)(v41 + 24) = v28;
      sub_213AD8B28(v32, (uint64_t)v56);
      __swift_project_boxed_opaque_existential_0(v56, v56[3]);
      swift_retain();
      v42 = sub_213AFDE88();
      v44 = v43;
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = sub_213AFF090;
      *(_QWORD *)(v45 + 24) = v41;
      swift_retain();
      sub_213B25548(v42, v44, v46, v47, (void (*)(char *))sub_213AFF094, v45);
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
      swift_release();
    }
    sub_213AFE560(v31);
    sub_213AD53FC((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
    swift_release();
  }
  else
  {
    sub_213B2BC9C();
    sub_213AFE048(MEMORY[0x24BEE4AF8]);
    sub_213AFE4D4();
    v37 = v51;
    sub_213B2BB34();
    v38 = (void *)sub_213B2BCB4();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v37);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v39 = v38;
    v40 = (void *)sub_213B2BB40();
    v29[2](v29, 0, v40);
    swift_release();

  }
}

void sub_213AFEAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[6];

  v52 = a6;
  v53 = a2;
  v46 = a4;
  v47 = a5;
  v54 = a3;
  v9 = sub_213B2BCA8();
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213B2BCC0();
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Product.Identifier();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D194D0);
  MEMORY[0x24BDAC7A8](v48);
  v55 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_213B2BBD0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MarketingPartNumberURL();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v46 - v26;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a7;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  v29 = a7;
  _Block_copy(a7);
  if (_s10ProductKit0aB7CatalogC02isaB3URLySb10Foundation0E0VFZ_0((uint64_t)v21))
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v21, v18);
    sub_213AFE51C((uint64_t)v25, (uint64_t)v27);
    v30 = *(_QWORD *)(v52 + OBJC_IVAR___ProductKitCatalogInternal_catalog);
    sub_213AD52BC((uint64_t)v27, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
    v31 = v55;
    sub_213AD52BC((uint64_t)v16, v55, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    v32 = v31 + *(int *)(v48 + 36);
    sub_213AD8B28(v30 + 16, v32);
    sub_213AD53FC((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
    swift_bridgeObjectRetain();
    v33 = sub_213B2C3E0();
    swift_bridgeObjectRelease();
    if (v33)
    {
      sub_213AD62AC();
      v34 = (void *)swift_allocError();
      *(_OWORD *)v35 = xmmword_213B2F3A0;
      *(_BYTE *)(v35 + 16) = 2;
      v36 = (void *)sub_213B2BB40();
      (*((void (**)(const void *, _QWORD, _QWORD, void *))v29 + 2))(v29, 0, 0, v36);

    }
    else
    {
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = sub_213AFEFFC;
      *(_QWORD *)(v41 + 24) = v28;
      sub_213AD8B28(v32, (uint64_t)v56);
      __swift_project_boxed_opaque_existential_0(v56, v56[3]);
      swift_retain();
      v42 = sub_213AFDE88();
      v44 = v43;
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = sub_213AFF088;
      *(_QWORD *)(v45 + 24) = v41;
      swift_retain();
      sub_213B25548(v42, v44, v46, v47, (void (*)(char *))sub_213AFF08C, v45);
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
      swift_release();
    }
    sub_213AFE560(v31);
    sub_213AD53FC((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
    swift_release();
  }
  else
  {
    sub_213B2BC9C();
    sub_213AFE048(MEMORY[0x24BEE4AF8]);
    sub_213AFE4D4();
    v37 = v51;
    sub_213B2BB34();
    v38 = (void *)sub_213B2BCB4();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v37);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v39 = v38;
    v40 = (void *)sub_213B2BB40();
    (*((void (**)(const void *, _QWORD, _QWORD, void *))v29 + 2))(v29, 0, 0, v40);
    swift_release();

  }
}

uint64_t sub_213AFEFD8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_213AFEFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_213AFDD98(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_213AFF004(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_213AFD6A4(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_213AFF00C(uint64_t a1)
{
  uint64_t v1;

  sub_213AFD150(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_213AFF014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_213AFF09C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t result;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  _QWORD v49[2];
  _QWORD *v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int64_t i;
  char *v65;

  v54 = sub_213B2BC78();
  v62 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v61 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19520);
  MEMORY[0x24BDAC7A8](v60);
  v4 = (_QWORD *)((char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
  MEMORY[0x24BDAC7A8](v59);
  v58 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  v53 = *(_QWORD *)(v57 - 8);
  v6 = MEMORY[0x24BDAC7A8](v57);
  v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v56 = (uint64_t)v49 - v9;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19540);
  v10 = MEMORY[0x24BDAC7A8](v55);
  v12 = (_QWORD *)((char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v49 - v13;
  v63 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18980);
    v15 = (_QWORD *)sub_213B2C3BC();
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v16 = *(_QWORD *)(v63 + 64);
  v52 = v63 + 64;
  v17 = -1 << *(_BYTE *)(v63 + 32);
  if (-v17 < 64)
    v18 = ~(-1 << -(char)v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v51 = (unint64_t)(63 - v17) >> 6;
  v49[1] = v17;
  v50 = v15 + 8;
  result = swift_bridgeObjectRetain();
  i = 0;
  v65 = v8;
  if (v19)
    goto LABEL_10;
LABEL_11:
  v24 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v24 >= v51)
    goto LABEL_32;
  v25 = *(_QWORD *)(v52 + 8 * v24);
  v26 = i + 1;
  if (!v25)
  {
    v26 = i + 2;
    if (i + 2 >= v51)
      goto LABEL_32;
    v25 = *(_QWORD *)(v52 + 8 * v26);
    if (!v25)
    {
      v26 = i + 3;
      if (i + 3 >= v51)
        goto LABEL_32;
      v25 = *(_QWORD *)(v52 + 8 * v26);
      if (!v25)
      {
        v26 = i + 4;
        if (i + 4 >= v51)
          goto LABEL_32;
        v25 = *(_QWORD *)(v52 + 8 * v26);
        if (!v25)
        {
          v27 = i + 5;
          if (i + 5 < v51)
          {
            v25 = *(_QWORD *)(v52 + 8 * v27);
            if (v25)
            {
              v26 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v26 = v27 + 1;
              if (__OFADD__(v27, 1))
                goto LABEL_36;
              if (v26 >= v51)
                break;
              v25 = *(_QWORD *)(v52 + 8 * v26);
              ++v27;
              if (v25)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_213B00EB4();
          return (unint64_t)v15;
        }
      }
    }
  }
LABEL_26:
  v19 = (v25 - 1) & v25;
  v23 = __clz(__rbit64(v25)) + (v26 << 6);
  for (i = v26; ; v23 = v22 | (i << 6))
  {
    v28 = v62;
    v29 = (uint64_t *)(*(_QWORD *)(v63 + 48) + 16 * v23);
    v31 = *v29;
    v30 = v29[1];
    v32 = v54;
    v33 = v55;
    (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(&v14[*(int *)(v55 + 48)], *(_QWORD *)(v63 + 56) + *(_QWORD *)(v62 + 72) * v23, v54);
    *(_QWORD *)v14 = v31;
    *((_QWORD *)v14 + 1) = v30;
    sub_213AD64BC((uint64_t)v14, (uint64_t)v12, &qword_254D19540);
    v34 = (char *)v12 + *(int *)(v33 + 48);
    v35 = v61;
    v36 = (uint64_t)v4 + *(int *)(v60 + 48);
    v37 = v12[1];
    *v4 = *v12;
    v4[1] = v37;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v35, v34, v32);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v38 = (uint64_t)&v58[*(int *)(v59 + 48)];
    v40 = *v4;
    v39 = v4[1];
    sub_213AD64BC(v36, v38, &qword_254D18988);
    v41 = v56;
    sub_213AD64BC(v38, v56, &qword_254D18988);
    v42 = (uint64_t)v65;
    sub_213AD64BC(v41, (uint64_t)v65, &qword_254D18988);
    result = sub_213AD4B1C(v40, v39);
    v43 = result;
    if ((v44 & 1) != 0)
    {
      v21 = (uint64_t *)(v15[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v21 = v40;
      v21[1] = v39;
      result = sub_213B00EBC((uint64_t)v65, v15[7] + *(_QWORD *)(v53 + 72) * v43);
      if (!v19)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v15[2] >= v15[3])
      break;
    *(_QWORD *)((char *)v50 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v45 = (uint64_t *)(v15[6] + 16 * result);
    *v45 = v40;
    v45[1] = v39;
    result = sub_213AD64BC(v42, v15[7] + *(_QWORD *)(v53 + 72) * result, &qword_254D18988);
    v46 = v15[2];
    v47 = __OFADD__(v46, 1);
    v48 = v46 + 1;
    if (v47)
      goto LABEL_34;
    v15[2] = v48;
    if (!v19)
      goto LABEL_11;
LABEL_10:
    v22 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_213AFF59C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D19520) + 48);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
  v7 = *a1;
  v6 = a1[1];
  sub_213AFC6BC(v4, (uint64_t)a2 + *(int *)(v5 + 48));
  *a2 = v7;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_213AFF600(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18980);
  v42 = a2;
  v9 = sub_213B2C3B0();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v38 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v40 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v39 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v39)
          goto LABEL_34;
        v23 = v40[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_34;
          v23 = v40[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_34:
              swift_release();
              v3 = v38;
              if ((v42 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v8 + 32);
                if (v37 >= 64)
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v37;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v17 >= v39)
                  goto LABEL_34;
                v23 = v40[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
      v27 = *v25;
      v26 = v25[1];
      v28 = *(_QWORD *)(v41 + 72);
      v29 = *(_QWORD *)(v8 + 56) + v28 * v21;
      if ((v42 & 1) != 0)
      {
        sub_213AD64BC(v29, (uint64_t)v7, &qword_254D18988);
      }
      else
      {
        sub_213AFC6BC(v29, (uint64_t)v7);
        swift_bridgeObjectRetain();
      }
      sub_213B2C518();
      sub_213B2BE88();
      result = sub_213B2C530();
      v30 = -1 << *(_BYTE *)(v10 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v15 + 8 * v32);
        }
        while (v36 == -1);
        v18 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
      *v19 = v27;
      v19[1] = v26;
      result = sub_213AD64BC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v28 * v18, &qword_254D18988);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

unint64_t sub_213AFF968(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_213B2C284();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_213B2C518();
        swift_bridgeObjectRetain();
        sub_213B2BE88();
        v9 = sub_213B2C530();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D18988) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_213AFFB74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18980);
  v5 = *v0;
  v6 = sub_213B2C3A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v7;
    return result;
  }
  v27 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v28 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14)
      goto LABEL_23;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_23;
      v24 = *(_QWORD *)(v28 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_22:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_213AFC6BC(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_213AD64BC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, &qword_254D18988);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_25;
  }
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_23;
    v24 = *(_QWORD *)(v28 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_213AFFDB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  v46 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v54 = (uint64_t)v44 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19530);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (_QWORD *)((char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = -1 << *(_BYTE *)(a1 + 32);
  v18 = ~v17;
  v19 = *(_QWORD *)(a1 + 64);
  v20 = -v17;
  v47 = a1;
  v48 = a1 + 64;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v49 = v18;
  v50 = 0;
  v51 = v21 & v19;
  v52 = a2;
  v53 = a3;
  v44[1] = a1;
  swift_bridgeObjectRetain();
  v44[0] = a3;
  swift_retain();
  sub_213B0010C((uint64_t)v16);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_213B00EB4();
    return swift_release();
  }
  v24 = &qword_254D18988;
  while (1)
  {
    v28 = *v16;
    v27 = v16[1];
    v29 = v24;
    sub_213AD64BC((uint64_t)v16 + *(int *)(v22 + 48), v54, v24);
    v30 = *a5;
    v32 = sub_213AD4B1C(v28, v27);
    v33 = *(_QWORD *)(v30 + 16);
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (*(_QWORD *)(v30 + 24) >= v35)
    {
      if ((a4 & 1) != 0)
      {
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_213AFFB74();
        if ((v36 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_213AFF600(v35, a4 & 1);
      v37 = sub_213AD4B1C(v28, v27);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_22;
      v32 = v37;
      if ((v36 & 1) != 0)
      {
LABEL_7:
        v25 = v54;
        v26 = v45;
        sub_213AFC6BC(v54, v45);
        v24 = v29;
        sub_213AD6270(v25, v29);
        swift_bridgeObjectRelease();
        sub_213B00EBC(v26, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v46 + 72) * v32);
        goto LABEL_8;
      }
    }
    v39 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v32 >> 6) + 64) |= 1 << v32;
    v40 = (uint64_t *)(v39[6] + 16 * v32);
    *v40 = v28;
    v40[1] = v27;
    v24 = v29;
    sub_213AD64BC(v54, v39[7] + *(_QWORD *)(v46 + 72) * v32, v29);
    v41 = v39[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_21;
    v39[2] = v43;
LABEL_8:
    sub_213B0010C((uint64_t)v16);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
    a4 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_213B2C4B8();
  __break(1u);
  return result;
}

uint64_t sub_213B0010C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int64_t v46;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19520);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19518);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char **)((char *)&v41 - v11);
  v14 = *v1;
  v13 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v15;
  v18 = v1[4];
  v41 = v6;
  if (v18)
  {
    v45 = v10;
    v46 = v15;
    v42 = v16;
    v43 = v13;
    v19 = v3;
    v20 = v4;
    v44 = a1;
    v21 = (v18 - 1) & v18;
    v22 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    v23 = *(_QWORD *)(v14 + 56);
    v24 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * v22);
    v25 = v14;
    v27 = *v24;
    v26 = v24[1];
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
    sub_213AFC6BC(v23 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v22, (uint64_t)v12 + *(int *)(v19 + 48));
    *v12 = v27;
    v12[1] = v26;
    v3 = v19;
    v4 = v20;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
    v14 = v25;
    swift_bridgeObjectRetain();
    a1 = v44;
    v10 = v45;
    v16 = v42;
    v13 = v43;
    goto LABEL_25;
  }
  v29 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_23:
    v17 = v11;
    goto LABEL_24;
  }
  v30 = (unint64_t)(v16 + 64) >> 6;
  if (v29 < v30)
  {
    v31 = *(_QWORD *)(v13 + 8 * v29);
    if (v31)
    {
LABEL_7:
      v42 = v16;
      v43 = v13;
      v19 = v3;
      v44 = a1;
      v45 = v10;
      v20 = v4;
      v21 = (v31 - 1) & v31;
      v22 = __clz(__rbit64(v31)) + (v29 << 6);
      v46 = v29;
      goto LABEL_3;
    }
    v32 = v15 + 2;
    v17 = v15 + 1;
    if (v15 + 2 < v30)
    {
      v31 = *(_QWORD *)(v13 + 8 * v32);
      if (v31)
      {
LABEL_10:
        v29 = v32;
        goto LABEL_7;
      }
      v17 = v15 + 2;
      if (v15 + 3 < v30)
      {
        v31 = *(_QWORD *)(v13 + 8 * (v15 + 3));
        if (v31)
        {
          v29 = v15 + 3;
          goto LABEL_7;
        }
        v32 = v15 + 4;
        v17 = v15 + 3;
        if (v15 + 4 < v30)
        {
          v31 = *(_QWORD *)(v13 + 8 * v32);
          if (v31)
            goto LABEL_10;
          v29 = v15 + 5;
          v17 = v15 + 4;
          if (v15 + 5 < v30)
          {
            v31 = *(_QWORD *)(v13 + 8 * v29);
            if (v31)
              goto LABEL_7;
            v11 = v30 - 1;
            v33 = v15 + 6;
            while (v30 != v33)
            {
              v31 = *(_QWORD *)(v13 + 8 * v33++);
              if (v31)
              {
                v29 = v33 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v46 = v17;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v21 = 0;
LABEL_25:
  *v1 = v14;
  v1[1] = v13;
  v34 = v46;
  v1[2] = v16;
  v1[3] = v34;
  v1[4] = v21;
  v35 = (void (*)(uint64_t))v1[5];
  sub_213AD64BC((uint64_t)v12, (uint64_t)v10, &qword_254D19518);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a1, 1, 1, v36);
  }
  else
  {
    v38 = (uint64_t)v10;
    v39 = (uint64_t)v41;
    sub_213AD64BC(v38, (uint64_t)v41, &qword_254D19520);
    v35(v39);
    sub_213AD6270(v39, &qword_254D19520);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18978);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(a1, 0, 1, v40);
  }
}

unint64_t sub_213B0045C()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_213B2BDF8();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
  {
    v8 = 0u;
    v9 = 0u;
LABEL_9:
    sub_213AD6270((uint64_t)&v8, &qword_254D188A8);
    return sub_213AD14A8(MEMORY[0x24BEE4AF8]);
  }
  v3 = (void *)sub_213B2BDF8();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_213B2C278();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_213AD64BC((uint64_t)v7, (uint64_t)&v8, &qword_254D188A8);
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19538);
  if ((swift_dynamicCast() & 1) == 0)
    return sub_213AD14A8(MEMORY[0x24BEE4AF8]);
  v5 = sub_213AFF09C(*(uint64_t *)&v7[0]);
  swift_bridgeObjectRelease();
  return v5;
}

double sub_213B005DC()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_213B2BDF8();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    return (double)1209600;
  v3 = (void *)sub_213B2BDF8();
  v4 = (uint64_t)objc_msgSend(v2, sel_integerForKey_, v3);

  if (v4 <= 0)
    return (double)1209600;
  return (double)v4;
}

void sub_213B006A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  _OWORD v70[2];
  __int128 v71;
  __int128 v72;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D19390);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  v5 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19518);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v59 - v12);
  v14 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  swift_bridgeObjectRetain();
  v64 = "@?40";
  v15 = (void *)sub_213B2BDF8();
  v16 = objc_msgSend(v14, sel_initWithSuiteName_, v15);

  v63 = v4;
  v69 = v5;
  if (v16)
  {
    v17 = (void *)sub_213B2BDF8();
    v18 = objc_msgSend(v16, sel_objectForKey_, v17);

    if (v18)
    {
      sub_213B2C278();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v70, 0, sizeof(v70));
    }
    sub_213AD64BC((uint64_t)v70, (uint64_t)&v71, &qword_254D188A8);
    if (*((_QWORD *)&v72 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D19528);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v19 = *(_QWORD *)&v70[0];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v71 = v19;
        sub_213AFFDB0(a1, (uint64_t)sub_213AFF59C, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v71);
        v60 = 0;
        v21 = v71;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v21;
      }
      else
      {
        v60 = 0;
        swift_bridgeObjectRelease();
      }
      goto LABEL_11;
    }
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  swift_bridgeObjectRelease();
  v60 = 0;
  sub_213AD6270((uint64_t)&v71, &qword_254D188A8);
LABEL_11:
  v22 = *(_QWORD *)(a1 + 64);
  v67 = a1 + 64;
  v23 = 1 << *(_BYTE *)(a1 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v68 = (unint64_t)(v23 + 63) >> 6;
  v61 = v68 - 1;
  swift_bridgeObjectRetain();
  v26 = 0;
  v66 = a1;
  while (1)
  {
    if (v25)
    {
      v27 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v28 = v27 | (v26 << 6);
LABEL_16:
      v29 = *(_QWORD *)(a1 + 56);
      v30 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v28);
      v31 = v30[1];
      *v11 = *v30;
      v11[1] = v31;
      v32 = v29 + *(_QWORD *)(v69 + 72) * v28;
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19520);
      sub_213AFC6BC(v32, (uint64_t)v11 + *(int *)(v33 + 48));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v11, 0, 1, v33);
      swift_bridgeObjectRetain();
      goto LABEL_26;
    }
    v34 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      swift_bridgeObjectRelease();
      __break(1u);
      return;
    }
    if (v34 < v68)
    {
      v35 = *(_QWORD *)(v67 + 8 * v34);
      if (v35)
        goto LABEL_20;
      v26 += 2;
      if (v34 + 1 >= v68)
      {
        v26 = v34;
      }
      else
      {
        v35 = *(_QWORD *)(v67 + 8 * v26);
        if (v35)
        {
          ++v34;
LABEL_20:
          v25 = (v35 - 1) & v35;
          v28 = __clz(__rbit64(v35)) + (v34 << 6);
          v26 = v34;
          goto LABEL_16;
        }
        if (v34 + 2 < v68)
        {
          v35 = *(_QWORD *)(v67 + 8 * (v34 + 2));
          if (v35)
          {
            v34 += 2;
            goto LABEL_20;
          }
          v53 = v34 + 3;
          if (v34 + 3 < v68)
          {
            v35 = *(_QWORD *)(v67 + 8 * v53);
            if (!v35)
            {
              while (1)
              {
                v34 = v53 + 1;
                if (__OFADD__(v53, 1))
                  goto LABEL_51;
                if (v34 >= v68)
                {
                  v26 = v61;
                  goto LABEL_25;
                }
                v35 = *(_QWORD *)(v67 + 8 * v34);
                ++v53;
                if (v35)
                  goto LABEL_20;
              }
            }
            v34 += 3;
            goto LABEL_20;
          }
          v26 = v34 + 2;
        }
      }
    }
LABEL_25:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19520);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v11, 1, 1, v36);
    v25 = 0;
LABEL_26:
    sub_213AD64BC((uint64_t)v11, (uint64_t)v13, &qword_254D19518);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19520);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v13, 1, v37) == 1)
      break;
    v39 = *v13;
    v38 = v13[1];
    sub_213AD64BC((uint64_t)v13 + *(int *)(v37 + 48), (uint64_t)v7, &qword_254D18988);
    v40 = sub_213B2BC78();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v7, 1, v40) == 1)
    {
      v41 = v66;
      swift_bridgeObjectRetain();
      v62 = sub_213AD4B1C(v39, v38);
      v43 = v42;
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
      {
        v44 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v71 = v41;
        v45 = v41;
        if (!v44)
        {
          sub_213AFFB74();
          v45 = v71;
        }
        v46 = v62;
        v47 = v45;
        v66 = v45;
        swift_bridgeObjectRelease();
        v48 = *(_QWORD *)(v47 + 56);
        v49 = v69;
        v50 = v48 + *(_QWORD *)(v69 + 72) * v46;
        v51 = (uint64_t)v63;
        sub_213AD64BC(v50, (uint64_t)v63, &qword_254D18988);
        sub_213AFF968(v62, v66);
        swift_bridgeObjectRelease();
        v52 = 0;
      }
      else
      {
        v52 = 1;
        v51 = (uint64_t)v63;
        v49 = v69;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v51, v52, 1, v65);
      sub_213AD6270(v51, (uint64_t *)&unk_254D19390);
      sub_213AD6270((uint64_t)v7, &qword_254D18988);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_213AD6270((uint64_t)v7, &qword_254D18988);
    }
  }
  swift_release();
  v54 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v55 = (void *)sub_213B2BDF8();
  v56 = objc_msgSend(v54, sel_initWithSuiteName_, v55);

  if (v56)
  {
    v57 = (void *)sub_213B2BDA4();
    swift_bridgeObjectRelease();
    v58 = (void *)sub_213B2BDF8();
    objc_msgSend(v56, sel_setObject_forKey_, v57, v58);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

BOOL sub_213B00DB0()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_213B2BDF8();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    return 0;
  v3 = (void *)sub_213B2BDF8();
  v4 = objc_msgSend(v2, sel_stringForKey_, v3);

  if (!v4)
    return 0;
  sub_213B2BE1C();

  v5 = sub_213B2C3E0();
  swift_bridgeObjectRelease();
  return v5 == 1;
}

uint64_t sub_213B00EB4()
{
  return swift_release();
}

uint64_t sub_213B00EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for ProductKitFeatureFlag(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B00F44 + 4 * byte_213B2F3E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B00F64 + 4 * byte_213B2F3E5[v4]))();
}

_BYTE *sub_213B00F44(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B00F64(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B00F6C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B00F74(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B00F7C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B00F84(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ProductKitFeatureFlag()
{
  return &type metadata for ProductKitFeatureFlag;
}

unint64_t sub_213B00FA4()
{
  unint64_t result;

  result = qword_254D19548;
  if (!qword_254D19548)
  {
    result = MEMORY[0x2199BD010](&unk_213B2F478, &type metadata for ProductKitFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_254D19548);
  }
  return result;
}

const char *sub_213B00FE8()
{
  return "ProductKit";
}

const char *sub_213B00FFC()
{
  return "ManateeMigration";
}

uint64_t sub_213B01010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19550);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19550);
  if (qword_254D18470 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

ProductKit::AirTagPairing::Configuration::Color_optional __swiftcall AirTagPairing.Configuration.Color.init(rawValue:)(Swift::UInt rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 99)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ProductKit::AirTagPairing::Configuration::Color_optional)rawValue;
}

uint64_t AirTagPairing.Configuration.Color.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 99;
  else
    return 0;
}

uint64_t AirTagPairing.Configuration.color.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double AirTagPairing.Configuration.timeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t AirTagPairing.Configuration.engravingInformation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_213AFC5DC(v2, v3);
}

uint64_t AirTagPairing.Configuration.engravingInformation.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_213ADAE20(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*AirTagPairing.Configuration.engravingInformation.modify())()
{
  return nullsub_1;
}

double AirTagPairing.Configuration.init(hardwareModel:color:timeout:)@<D0>(_BYTE *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  double result;

  v3 = 99;
  if (!*a1)
    v3 = 0;
  *(_QWORD *)a2 = v3;
  *(double *)(a2 + 8) = a3;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = xmmword_213B2F4D0;
  return result;
}

uint64_t AirTagPairing.AssetRequest.assets()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = v1;
  type metadata accessor for MobileAssetResult();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B011C0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  if (qword_254D183C8 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  v0[10] = __swift_project_value_buffer(v1, (uint64_t)qword_254D19550);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213AC8000, v2, v3, "Beginning asset request", v4, 2u);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }

  v5 = sub_213B015E4();
  v0[11] = v5;
  v8 = (char *)&dword_254D19570 + dword_254D19570;
  v6 = (_QWORD *)swift_task_alloc();
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_213B012F4;
  return ((uint64_t (*)(_QWORD, uint64_t))v8)(v0[9], v5);
}

uint64_t sub_213B012F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 112) = v4;
  *v4 = v2;
  v4[1] = sub_213B013A0;
  return sub_213B016EC(v2 + 16);
}

uint64_t sub_213B013A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B013F4()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;
  _QWORD v14[4];

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  sub_213AD52BC(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  sub_213AD6384(v1, v2, v3, v4);
  v13 = sub_213B2B2CC();
  v5 = *(_QWORD *)(v0 + 64);
  if (v4 == (void *)1)
  {
    sub_213AD53FC(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
    v6 = 1;
  }
  else
  {
    v14[0] = v1;
    v14[1] = v2;
    v14[2] = v3;
    v14[3] = v4;
    sub_213AD6384(v1, v2, v3, v4);
    v6 = (uint64_t)sub_213B296B0((uint64_t)v14);
    sub_213AD53FC(v5, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
    sub_213AD5344((uint64_t)v1, v2, v3, v4);

  }
  v7 = sub_213B2BCD8();
  v8 = sub_213B2C170();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_213AC8000, v7, v8, "Finished asset request", v9, 2u);
    MEMORY[0x2199BD0E8](v9, -1, -1);
  }
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(uint64_t **)(v0 + 48);

  sub_213AD5344((uint64_t)v1, v2, v3, v4);
  sub_213AD53FC(v10, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetResult);
  *v11 = v13;
  v11[1] = (uint64_t)v1;
  v11[2] = v2;
  v11[3] = v3;
  v11[4] = v6;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B015A8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B015E4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18DD0);
  v1 = (int *)type metadata accessor for MobileAssetRequest();
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_213B2E300;
  v6 = v5 + v4;
  sub_213B2BC84();
  *(_BYTE *)(v6 + v1[5]) = 0;
  v7 = v6 + v1[6];
  strcpy((char *)v7, "AirTag1,1-v2");
  *(_BYTE *)(v7 + 13) = 0;
  *(_WORD *)(v7 + 14) = -5120;
  v8 = v6 + v1[7];
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = v6 + v3;
  v10 = *(_QWORD *)(v0 + 16);
  sub_213B2BC84();
  *(_BYTE *)(v9 + v1[5]) = 1;
  v11 = v9 + v1[6];
  strcpy((char *)v11, "AirTag1,1-v2");
  *(_BYTE *)(v11 + 13) = 0;
  *(_WORD *)(v11 + 14) = -5120;
  v12 = v9 + v1[7];
  *(_QWORD *)v12 = v10;
  *(_BYTE *)(v12 + 8) = 0;
  return v5;
}

uint64_t sub_213B016EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_213B2BBD0();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B0174C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t inited;
  uint64_t v22;
  _QWORD *v23;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 160) = v2;
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 168) = v3;
  if (v3 >> 60 == 15)
  {
    v4 = *(_QWORD **)(v0 + 120);
    *v4 = 0;
    v4[1] = 0;
    v4[2] = 0;
    v4[3] = 1;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_213AD5300(v2, v3);
    if (qword_254D183C8 != -1)
      swift_once();
    v6 = sub_213B2BCF0();
    *(_QWORD *)(v0 + 176) = __swift_project_value_buffer(v6, (uint64_t)qword_254D19550);
    v7 = sub_213B2BCD8();
    v8 = sub_213B2C170();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_213AC8000, v7, v8, "Fetching engraved asset", v9, 2u);
      MEMORY[0x2199BD0E8](v9, -1, -1);
    }

    v10 = sub_213AFA9E8();
    *(_QWORD *)(v0 + 184) = v10;
    v11 = sub_213AFAA04();
    *(_QWORD *)(v0 + 192) = v11;
    v12 = qword_254D18390;
    v13 = v10;
    v14 = v11;
    if (v12 != -1)
      swift_once();
    v16 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 136);
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_254D18FB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v18, v17);
    type metadata accessor for PersonalizationAssetManager();
    swift_allocObject();
    v19 = PersonalizationAssetManager.init(container:manateeContainer:cacheDirectory:)(v13, v14, v15);
    *(_QWORD *)(v0 + 200) = v19;
    v20 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 208) = v20;
    v20[2] = v19;
    v20[3] = v2;
    v20[4] = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D19768);
    inited = swift_initStackObject();
    *(_QWORD *)(v0 + 216) = inited;
    *(_OWORD *)(inited + 16) = xmmword_213B2E2E0;
    *(_QWORD *)(inited + 32) = 1;
    *(_QWORD *)(inited + 40) = &unk_254D19760;
    *(_QWORD *)(inited + 48) = v20;
    sub_213AFC5DC(v2, v3);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F10);
    v22 = swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v22;
    *(_QWORD *)(v22 + 16) = inited;
    *(_QWORD *)(v22 + 24) = 0x3FF0000000000000;
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v23;
    *v23 = v0;
    v23[1] = sub_213B01A58;
    return sub_213B2C3EC();
  }
}

uint64_t sub_213B01A58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D19778);
    swift_arrayDestroy();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_213B01AFC()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;

  v1 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_OWORD **)(v0 + 120);

  swift_release();
  sub_213ADAE20(v3, v2);
  swift_release();
  v5 = *(_OWORD *)(v0 + 88);
  *v4 = *(_OWORD *)(v0 + 72);
  v4[1] = v5;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B01B7C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  _QWORD *v16;
  unint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 240);
  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  swift_task_dealloc();

  swift_release();
  swift_release();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19778);
  swift_arrayDestroy();
  v4 = v1;
  v5 = v1;
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C158();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    v19 = v11;
    *(_QWORD *)(v0 + 104) = v8;
    v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v13 = sub_213B2BE64();
    *(_QWORD *)(v0 + 112) = sub_213AE1780(v13, v14, &v19);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v6, v7, "Failed to fetch engraving information: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v11, -1, -1);
    MEMORY[0x2199BD0E8](v10, -1, -1);

    sub_213ADAE20(v9, v18);
  }
  else
  {
    v15 = *(void **)(v0 + 240);
    sub_213ADAE20(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));

  }
  v16 = *(_QWORD **)(v0 + 120);
  *v16 = 0;
  v16[1] = 0;
  v16[2] = 0;
  v16[3] = 1;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B01DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = a4;
  *(_QWORD *)(v4 + 64) = a1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 72) = v5;
  *v5 = v4;
  v5[1] = sub_213B01E28;
  return PersonalizationAssetManager.asset(for:)(v4 + 16, (_OWORD *)(v4 + 48));
}

uint64_t sub_213B01E28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B01E8C()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;

  v1 = *(_OWORD **)(v0 + 64);
  v2 = *(_OWORD *)(v0 + 32);
  *v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B01EA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_213B01EB0(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v4 = (_QWORD *)swift_allocObject();
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  v11 = a1[3];
  v13 = *v7;
  v17 = type metadata accessor for MobileAssetManager();
  v18 = &off_24D0BF990;
  *(_QWORD *)&v16 = v13;
  v4[2] = v9;
  v4[3] = v10;
  v4[4] = v12;
  v4[5] = v11;
  sub_213AE1104(&v16, (uint64_t)(v4 + 6));
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v4;
}

uint64_t AirTagPairing.AssetRequest.deinit()
{
  uint64_t v0;

  sub_213ADAE20(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return v0;
}

uint64_t AirTagPairing.AssetRequest.__deallocating_deinit()
{
  uint64_t v0;

  sub_213ADAE20(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocClassInstance();
}

uint64_t sub_213B01FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = type metadata accessor for MobileAssetRequest();
  v3[15] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 + 64);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B02068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 104);
  sub_213AD8B28(*(_QWORD *)(v0 + 112) + 48, v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v21 = *(int *)(*(_QWORD *)(v0 + 120) + 20);
    v22 = *(_QWORD *)(v0 + 152);
    v4 = *(unsigned __int8 *)(v3 + 80);
    v5 = *(_QWORD *)(v0 + 104) + ((v4 + 32) & ~v4);
    v19 = (v4 + 16) & ~v4;
    v20 = *(_QWORD *)(v3 + 72);
    v18 = (*(_QWORD *)(v0 + 136) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v7 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      sub_213AD52BC(v5, v8, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
      if (*(_BYTE *)(v22 + v21))
        v9 = 2;
      else
        v9 = 1;
      sub_213AE36D0(v8, v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
      sub_213AD8B28(v0 + 16, v0 + 56);
      v10 = swift_allocObject();
      sub_213AE36D0(v7, v10 + v19, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
      sub_213AE1104((__int128 *)(v0 + 56), v10 + v18);
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_213AE1348(0, v6[2] + 1, 1, v6);
      v12 = v6[2];
      v11 = v6[3];
      if (v12 >= v11 >> 1)
        v6 = sub_213AE1348((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
      v6[2] = v12 + 1;
      v13 = &v6[3 * v12];
      v13[4] = v9;
      v13[5] = asc_254D19780;
      v13[6] = v10;
      swift_release();
      v5 += v20;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 160) = v6;
  v14 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E20);
  type metadata accessor for MobileAssetResult();
  v15 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v15;
  *(_QWORD *)(v15 + 16) = v6;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v16;
  *v16 = v0;
  v16[1] = sub_213B022FC;
  return sub_213B2C3EC();
}

uint64_t sub_213B022FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_213B02370()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B023B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B0241C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = type metadata accessor for MobileAssetRequest();
  v3[15] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 + 64);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B02494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 104);
  sub_213AD8B28(*(_QWORD *)(v0 + 112) + 64, v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v21 = *(int *)(*(_QWORD *)(v0 + 120) + 20);
    v22 = *(_QWORD *)(v0 + 152);
    v4 = *(unsigned __int8 *)(v3 + 80);
    v5 = *(_QWORD *)(v0 + 104) + ((v4 + 32) & ~v4);
    v19 = (v4 + 16) & ~v4;
    v20 = *(_QWORD *)(v3 + 72);
    v18 = (*(_QWORD *)(v0 + 136) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v7 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      sub_213AD52BC(v5, v8, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
      if (*(_BYTE *)(v22 + v21))
        v9 = 2;
      else
        v9 = 1;
      sub_213AE36D0(v8, v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
      sub_213AD8B28(v0 + 16, v0 + 56);
      v10 = swift_allocObject();
      sub_213AE36D0(v7, v10 + v19, (uint64_t (*)(_QWORD))type metadata accessor for MobileAssetRequest);
      sub_213AE1104((__int128 *)(v0 + 56), v10 + v18);
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_213AE1348(0, v6[2] + 1, 1, v6);
      v12 = v6[2];
      v11 = v6[3];
      if (v12 >= v11 >> 1)
        v6 = sub_213AE1348((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
      v6[2] = v12 + 1;
      v13 = &v6[3 * v12];
      v13[4] = v9;
      v13[5] = &unk_254D19750;
      v13[6] = v10;
      swift_release();
      v5 += v20;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 160) = v6;
  v14 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18E20);
  type metadata accessor for MobileAssetResult();
  v15 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v15;
  *(_QWORD *)(v15 + 16) = v6;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v16;
  *v16 = v0;
  v16[1] = sub_213B02728;
  return sub_213B2C3EC();
}

uint64_t sub_213B02728()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t AirTagPairing.Assets.AdjustedImageIdentifier.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static AirTagPairing.Assets.AdjustedImageIdentifier.allCases.getter()
{
  return &unk_24D0BA090;
}

uint64_t AirTagPairing.Assets.AdjustedImageIdentifier.rawValue.getter()
{
  return 0x746375646F7250;
}

uint64_t sub_213B02814@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_213B02864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AirTagPairing.Assets.AdjustedImageIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B02888(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA0F0;
}

ProductKit::AirTagPairing::Assets::VideoIdentifier_optional __swiftcall AirTagPairing.Assets.VideoIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProductKit::AirTagPairing::Assets::VideoIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static AirTagPairing.Assets.VideoIdentifier.allCases.getter()
{
  return &unk_24D0BA1B0;
}

uint64_t AirTagPairing.Assets.VideoIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213B02934 + 4 * byte_213B2F4E0[*v0]))(0xD000000000000012, 0x8000000213B335B0);
}

unint64_t sub_213B02934()
{
  return 0xD000000000000010;
}

uint64_t sub_213B02950@<X0>(uint64_t a1@<X8>)
{
  return a1 + 7;
}

uint64_t sub_213B02968()
{
  return 0x64726143786F7250;
}

uint64_t sub_213B0298C()
{
  return 0x5F656C6261736944;
}

uint64_t sub_213B029AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213ADA6D0(*a1, *a2);
}

ProductKit::AirTagPairing::Assets::VideoIdentifier_optional sub_213B029B8(Swift::String *a1)
{
  return AirTagPairing.Assets.VideoIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B029C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AirTagPairing.Assets.VideoIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B029E8(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA1D8;
}

ProductKit::AirTagPairing::Assets::ViewIdentifier_optional __swiftcall AirTagPairing.Assets.ViewIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ProductKit::AirTagPairing::Assets::ViewIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static AirTagPairing.Assets.ViewIdentifier.allCases.getter()
{
  return &unk_24D0BA250;
}

uint64_t AirTagPairing.Assets.ViewIdentifier.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1886351212;
  else
    return 0x6F72746E69;
}

uint64_t sub_213B02A94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213ADA890(*a1, *a2);
}

ProductKit::AirTagPairing::Assets::ViewIdentifier_optional sub_213B02AA0(Swift::String *a1)
{
  return AirTagPairing.Assets.ViewIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B02AAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AirTagPairing.Assets.ViewIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B02AD0(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA278;
}

uint64_t AirTagPairing.Assets.adjustedImage(_:)@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t result;

  v3 = *v1;
  v4 = a1 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  v5 = v3;
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  sub_213B15540(v4);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = 0x746375646F7250;
  *(_QWORD *)(a1 + 8) = 0xE700000000000000;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = 6778480;
  *(_QWORD *)(a1 + 32) = 0xE300000000000000;
  *(_BYTE *)(a1 + 40) = 0;
  return result;
}

void AirTagPairing.Assets.video(_:)(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_213B02BE4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t result;

  v2 = v0 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v3;
  swift_bridgeObjectRetain();
  sub_213B15540(v2);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v0 = 0xD000000000000010;
  *(_QWORD *)(v0 + 8) = 0x8000000213B335D0;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = 7761773;
  *(_QWORD *)(v0 + 32) = 0xE300000000000000;
  *(_BYTE *)(v0 + 40) = 0;
  return result;
}

char *AirTagPairing.Assets.view(_:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  char v61;
  uint64_t v62;
  char *v63;
  void (*v64)(uint64_t, char *, uint64_t);
  uint64_t v65;
  uint64_t ObjCClassFromMetadata;
  id v67;
  void *v68;
  void *v69;
  id v70;
  char *v71;
  uint64_t v72;
  void (*v73)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  _QWORD *v100;
  void (*v101)(char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  int v122;
  char *v123;
  uint64_t v124[2];
  id v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  uint64_t v129;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v121 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v114 = (uint64_t)&v103 - v6;
  v116 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  v7 = MEMORY[0x24BDAC7A8](v116);
  v105 = (uint64_t)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v107 = (uint64_t)&v103 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v117 = (uint64_t)&v103 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v115 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v119 = (char *)&v103 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v103 - v17;
  v19 = type metadata accessor for AdjustedAsset();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v103 - v23;
  v25 = sub_213B2BBD0();
  v26 = *(char **)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v106 = (char *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v109 = (char *)&v103 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v108 = (char *)&v103 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v120 = (char *)&v103 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v123 = (char *)&v103 - v35;
  v122 = *a1;
  v36 = *(void **)v1;
  v110 = *(_QWORD *)(v1 + 8);
  v111 = *(void **)(v1 + 16);
  v112 = *(_QWORD *)(v1 + 24);
  v113 = *(_QWORD *)(v1 + 32);
  v118 = v19;
  v37 = (uint64_t)&v24[*(int *)(v19 + 20)];
  v38 = v36;
  swift_bridgeObjectRetain();
  v39 = v38;
  swift_bridgeObjectRetain();
  sub_213B15540(v37);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(_QWORD *)v24 = 0xD000000000000017;
  *((_QWORD *)v24 + 1) = 0x8000000213B335F0;
  *((_QWORD *)v24 + 2) = v39;
  *((_QWORD *)v24 + 3) = 7761773;
  *((_QWORD *)v24 + 4) = 0xE300000000000000;
  v24[40] = 0;
  swift_bridgeObjectRetain();
  v40 = v39;
  swift_bridgeObjectRetain();
  sub_213AD53FC((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  v124[0] = 0xD000000000000017;
  v124[1] = 0x8000000213B335F0;
  v125 = v40;
  v126 = 7761773;
  v127 = 0xE300000000000000;
  v128 = 0;
  GenericAsset.fileURL.getter((uint64_t)v18);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v41 = v26;
  v42 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v26 + 6);
  v43 = v25;
  if (v42(v18, 1, v25) == 1)
    goto LABEL_4;
  v44 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v26 + 4);
  v44(v123, v18, v25);
  v45 = (uint64_t)&v22[*(int *)(v118 + 20)];
  v46 = v40;
  v118 = (uint64_t)v42;
  v47 = v46;
  swift_bridgeObjectRetain();
  v48 = v47;
  swift_bridgeObjectRetain();
  sub_213B15540(v45);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  strcpy(v22, "ProxCard_loop");
  *((_WORD *)v22 + 7) = -4864;
  *((_QWORD *)v22 + 2) = v48;
  *((_QWORD *)v22 + 3) = 7761773;
  *((_QWORD *)v22 + 4) = 0xE300000000000000;
  v22[40] = 0;
  swift_bridgeObjectRetain();
  v49 = v48;
  swift_bridgeObjectRetain();
  sub_213AD53FC((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  strcpy((char *)v124, "ProxCard_loop");
  HIWORD(v124[1]) = -4864;
  v125 = v49;
  v126 = 7761773;
  v127 = 0xE300000000000000;
  v128 = 0;
  v18 = v119;
  GenericAsset.fileURL.getter((uint64_t)v119);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v118)(v18, 1, v25) != 1)
  {
    v121 = v41;
    v44(v120, v18, v25);
    v104 = (uint64_t)v49;
    if ((v122 & 1) != 0)
    {
      v61 = sub_213B2C47C();
      swift_bridgeObjectRelease();
      v62 = v117;
      v63 = v121;
      if ((v61 & 1) == 0)
      {
        v64 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v121 + 2);
        v64(v117, v120, v43);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v62 = v117;
      v63 = v121;
    }
    v65 = v62 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48);
    v64 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v63 + 2);
    v64(v62, v120, v43);
    v64(v65, v123, v43);
    swift_storeEnumTagMultiPayload();
    if ((v122 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_16:
      type metadata accessor for MobileAssetManager();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v67 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v68 = (void *)sub_213B2BDF8();
      swift_bridgeObjectRelease();
      v69 = (void *)sub_213B2BDF8();
      v70 = objc_msgSend(v67, sel_URLForResource_withExtension_, v68, v69);

      if (v70)
      {
        v71 = v109;
        sub_213B2BBA0();

        v72 = (uint64_t)v115;
        v44(v115, v71, v43);
        v73 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))*((_QWORD *)v63 + 7);
        v73(v72, 0, 1, v43);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v72, 1, v43) != 1)
        {
          v74 = v108;
          v119 = (char *)v44;
          v44(v108, (char *)v72, v43);
          if (qword_254D183C8 != -1)
            swift_once();
          v75 = sub_213B2BCF0();
          __swift_project_value_buffer(v75, (uint64_t)qword_254D19550);
          v76 = v62;
          v77 = v107;
          sub_213AD52BC(v76, v107, type metadata accessor for VideoViewConfiguration.VideoSequence);
          v78 = v106;
          v64((uint64_t)v106, v74, v43);
          v79 = sub_213B2BCD8();
          v80 = sub_213B2C140();
          if (os_log_type_enabled(v79, v80))
          {
            v81 = swift_slowAlloc();
            v118 = swift_slowAlloc();
            v124[0] = v118;
            *(_DWORD *)v81 = 136315394;
            sub_213AD52BC(v77, v105, type metadata accessor for VideoViewConfiguration.VideoSequence);
            v82 = sub_213B2BE64();
            v129 = sub_213AE1780(v82, v83, v124);
            sub_213B2C254();
            swift_bridgeObjectRelease();
            sub_213AD53FC(v77, type metadata accessor for VideoViewConfiguration.VideoSequence);
            *(_WORD *)(v81 + 12) = 2080;
            sub_213AE1D7C();
            v84 = sub_213B2C458();
            v129 = sub_213AE1780(v84, v85, v124);
            v63 = v121;
            sub_213B2C254();
            swift_bridgeObjectRelease();
            (*((void (**)(char *, uint64_t))v63 + 1))(v78, v43);
            _os_log_impl(&dword_213AC8000, v79, v80, "Creating VideoConfiguration {videoSequence: %s, sceneURL: %s", (uint8_t *)v81, 0x16u);
            v86 = v118;
            swift_arrayDestroy();
            MEMORY[0x2199BD0E8](v86, -1, -1);
            v87 = v81;
            v74 = v108;
            MEMORY[0x2199BD0E8](v87, -1, -1);
          }
          else
          {
            sub_213AD53FC(v77, type metadata accessor for VideoViewConfiguration.VideoSequence);
            (*((void (**)(char *, uint64_t))v63 + 1))(v78, v43);
          }

          v95 = v114;
          v96 = v123;
          v62 = v117;
          sub_213AD52BC(v117, v114, type metadata accessor for VideoViewConfiguration.VideoSequence);
          v98 = (int *)type metadata accessor for VideoViewConfiguration(0);
          sub_213B15540(v95 + v98[5]);
          v99 = v95 + v98[6];
          ((void (*)(uint64_t, char *, uint64_t))v119)(v99, v74, v43);
          v73(v99, 0, 1, v43);
          sub_213AE1D5C((uint64_t)v124);
          v100 = (_QWORD *)(v95 + v98[7]);
          *v100 = 0;
          v100[1] = 0;
          v100[2] = 0;
          v100[3] = 1;
          *(int64x2_t *)(v95 + v98[8]) = vdupq_n_s64(0x4093880000000000uLL);
          *(_QWORD *)(v95 + v98[9]) = 0xC082C00000000000;
          sub_213B03EB0((uint64_t)v124, v95 + v98[10]);
          *(_QWORD *)(v95 + v98[11]) = 0;
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v98 - 1) + 56))(v95, 0, 1, v98);
LABEL_30:
          v124[0] = v104;
          v124[1] = v110;
          v125 = v111;
          v126 = v112;
          v127 = v113;
          v60 = sub_213B03C18(v95);
          sub_213AD6270(v95, &qword_254D18C58);
          sub_213AD53FC(v62, type metadata accessor for VideoViewConfiguration.VideoSequence);
          v101 = (void (*)(char *, uint64_t))*((_QWORD *)v63 + 1);
          v101(v120, v43);
          v101(v96, v43);
          return v60;
        }
      }
      else
      {
        v72 = (uint64_t)v115;
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v63 + 7))(v115, 1, 1, v43);
      }
      sub_213AD6270(v72, &qword_254D188E0);
      if (qword_254D183C8 != -1)
        swift_once();
      v88 = sub_213B2BCF0();
      __swift_project_value_buffer(v88, (uint64_t)qword_254D19550);
      v89 = sub_213B2BCD8();
      v90 = sub_213B2C164();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc();
        v92 = swift_slowAlloc();
        v124[0] = v92;
        *(_DWORD *)v91 = 136315138;
        LOBYTE(v129) = v122;
        v93 = sub_213B2BE64();
        v129 = sub_213AE1780(v93, v94, v124);
        v63 = v121;
        sub_213B2C254();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213AC8000, v89, v90, "Missing sceneFile -- Failed to create VideoViewConfiguration {identifier: %s}", v91, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v92, -1, -1);
        MEMORY[0x2199BD0E8](v91, -1, -1);
      }

      v95 = v114;
      v96 = v123;
      v97 = type metadata accessor for VideoViewConfiguration(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v95, 1, 1, v97);
      goto LABEL_30;
    }
LABEL_14:
    sub_213B2C47C();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  (*((void (**)(char *, uint64_t))v41 + 1))(v123, v25);
LABEL_4:
  sub_213AD6270((uint64_t)v18, &qword_254D188E0);
  if (qword_254D183C8 != -1)
    swift_once();
  v50 = sub_213B2BCF0();
  __swift_project_value_buffer(v50, (uint64_t)qword_254D19550);
  v51 = sub_213B2BCD8();
  v52 = sub_213B2C164();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    v54 = swift_slowAlloc();
    v124[0] = v54;
    *(_DWORD *)v53 = 136315138;
    LOBYTE(v129) = v122;
    v55 = sub_213B2BE64();
    v129 = sub_213AE1780(v55, v56, v124);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213AC8000, v51, v52, "Could not find AirTagPairingAssets.view files {identifier: %s}", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v54, -1, -1);
    MEMORY[0x2199BD0E8](v53, -1, -1);
  }

  v57 = type metadata accessor for VideoViewConfiguration(0);
  v58 = (uint64_t)v121;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v121, 1, 1, v57);
  v59 = objc_allocWithZone((Class)type metadata accessor for AdjustedVideoView());
  return sub_213B1B370(v58);
}

char *sub_213B03C18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for VideoViewConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v34 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - v17;
  v19 = v1[1];
  v38 = v1[2];
  v39 = v19;
  v20 = (void *)v1[4];
  v37 = v1[3];
  sub_213B04ADC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_213AD6270((uint64_t)v8, &qword_254D18C58);
  }
  else
  {
    sub_213AE36D0((uint64_t)v8, (uint64_t)v18, type metadata accessor for VideoViewConfiguration);
    if (v20 != (void *)1)
    {
      sub_213AD52BC((uint64_t)v18, (uint64_t)v16, type metadata accessor for VideoViewConfiguration);
      v23 = (uint64_t *)&v16[*(int *)(v9 + 28)];
      v25 = *v23;
      v24 = v23[1];
      v26 = (void *)v23[3];
      v35 = v23[2];
      v36 = v24;
      v28 = v38;
      v27 = v39;
      sub_213AD5300(v39, v38);
      v29 = v20;
      sub_213AD5300(v27, v28);
      v30 = v29;
      sub_213AD5344(v25, v36, v35, v26);
      *v23 = v27;
      v23[1] = v28;
      v31 = v37;
      v23[2] = v37;
      v23[3] = (uint64_t)v20;
      sub_213AD52BC((uint64_t)v16, (uint64_t)v13, type metadata accessor for VideoViewConfiguration);
      v32 = objc_allocWithZone((Class)type metadata accessor for PersonalizedVideoView(0));
      v22 = sub_213ACFD58((uint64_t)v13);
      sub_213AD5344(v27, v28, v31, v20);
      sub_213AD53FC((uint64_t)v18, type metadata accessor for VideoViewConfiguration);
      sub_213AD53FC((uint64_t)v16, type metadata accessor for VideoViewConfiguration);
      return v22;
    }
    sub_213AD53FC((uint64_t)v18, type metadata accessor for VideoViewConfiguration);
  }
  sub_213B04ADC(a1, (uint64_t)v6);
  v21 = objc_allocWithZone((Class)type metadata accessor for AdjustedVideoView());
  return sub_213B1B370((uint64_t)v6);
}

uint64_t sub_213B03EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_213B03EFC()
{
  unint64_t result;

  result = qword_254D19580;
  if (!qword_254D19580)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Configuration.Color, &type metadata for AirTagPairing.Configuration.Color);
    atomic_store(result, (unint64_t *)&qword_254D19580);
  }
  return result;
}

unint64_t sub_213B03F44()
{
  unint64_t result;

  result = qword_254D195C0;
  if (!qword_254D195C0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Assets.AdjustedImageIdentifier, &type metadata for AirTagPairing.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D195C0);
  }
  return result;
}

uint64_t sub_213B03F88()
{
  return sub_213AE1FE0(&qword_254D195C8, &qword_254D195D0);
}

unint64_t sub_213B03FB0()
{
  unint64_t result;

  result = qword_254D195D8;
  if (!qword_254D195D8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Assets.VideoIdentifier, &type metadata for AirTagPairing.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D195D8);
  }
  return result;
}

uint64_t sub_213B03FF4()
{
  return sub_213AE1FE0(&qword_254D195E0, &qword_254D195E8);
}

unint64_t sub_213B0401C()
{
  unint64_t result;

  result = qword_254D195F0;
  if (!qword_254D195F0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Assets.ViewIdentifier, &type metadata for AirTagPairing.Assets.ViewIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D195F0);
  }
  return result;
}

uint64_t sub_213B04060()
{
  return sub_213AE1FE0(&qword_254D195F8, &qword_254D19600);
}

unint64_t sub_213B04088()
{
  unint64_t result;

  result = qword_254D19608;
  if (!qword_254D19608)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Assets.AdjustedImageIdentifier, &type metadata for AirTagPairing.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19608);
  }
  return result;
}

unint64_t sub_213B040D0()
{
  unint64_t result;

  result = qword_254D19610;
  if (!qword_254D19610)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Assets.AdjustedImageIdentifier, &type metadata for AirTagPairing.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19610);
  }
  return result;
}

unint64_t sub_213B04118()
{
  unint64_t result;

  result = qword_254D19640;
  if (!qword_254D19640)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Assets.VideoIdentifier, &type metadata for AirTagPairing.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19640);
  }
  return result;
}

unint64_t sub_213B04160()
{
  unint64_t result;

  result = qword_254D19648;
  if (!qword_254D19648)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagPairing.Assets.VideoIdentifier, &type metadata for AirTagPairing.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19648);
  }
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing()
{
  return &type metadata for AirTagPairing;
}

uint64_t destroy for AirTagPairing.Configuration(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1 >> 60 != 15)
    return sub_213AD5374(*(_QWORD *)(result + 16), v1);
  return result;
}

uint64_t initializeWithCopy for AirTagPairing.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = (uint64_t *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v3;
  }
  else
  {
    v5 = *v3;
    sub_213AD5300(*v3, *(_QWORD *)(a2 + 24));
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v4;
  }
  return a1;
}

_QWORD *assignWithCopy for AirTagPairing.Configuration(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a1 + 2;
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_213AD5300(*v4, a2[3]);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_213AD5374(v8, v9);
      return a1;
    }
    sub_213B042EC((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *v3 = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_213AD5300(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

uint64_t sub_213B042EC(uint64_t a1)
{
  destroy for PersonalizationAssetManager.PrePairingAssetInfo(a1);
  return a1;
}

_QWORD *assignWithTake for AirTagPairing.Configuration(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_213AD5374(v8, v6);
      return a1;
    }
    sub_213B042EC((uint64_t)(a1 + 2));
  }
  *v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for AirTagPairing.Configuration(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 12);
  v3 = *(_QWORD *)(a1 + 24) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0)
    v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AirTagPairing.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 12;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing.Configuration()
{
  return &type metadata for AirTagPairing.Configuration;
}

ValueMetadata *type metadata accessor for AirTagPairing.Configuration.Color()
{
  return &type metadata for AirTagPairing.Configuration.Color;
}

uint64_t type metadata accessor for AirTagPairing.AssetRequest()
{
  uint64_t result;

  result = qword_254D196A0;
  if (!qword_254D196A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213B044B4()
{
  return swift_initClassMetadata2();
}

void destroy for AirTagPairing.Assets(uint64_t a1)
{
  id v2;

  if (*(_QWORD *)(a1 + 32) != 1)
  {
    v2 = *(id *)(a1 + 32);
    sub_213AD5374(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));

  }
}

_QWORD *initializeWithCopy for AirTagPairing.Assets(_QWORD *a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  id v11;

  v4 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v5 = a1 + 1;
  v6 = *(void **)(a2 + 32);
  v7 = v4;
  if (v6 == (void *)1)
  {
    v8 = *(_OWORD *)(a2 + 24);
    *v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v8;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    sub_213AD5300(v9, v10);
    a1[1] = v9;
    a1[2] = v10;
    a1[3] = *(_QWORD *)(a2 + 24);
    a1[4] = v6;
    v11 = v6;
  }
  return a1;
}

uint64_t assignWithCopy for AirTagPairing.Assets(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = (_OWORD *)(a1 + 8);
  v8 = (_OWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
  {
    if (v9 == 1)
    {
      v10 = *(_OWORD *)(a2 + 24);
      *v7 = *v8;
      *(_OWORD *)(a1 + 24) = v10;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      sub_213AD5300(v12, v13);
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v14 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v14;
      v15 = v14;
    }
  }
  else if (v9 == 1)
  {
    sub_213B046AC(a1 + 8);
    v11 = *(_OWORD *)(a2 + 24);
    *v7 = *v8;
    *(_OWORD *)(a1 + 24) = v11;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 8);
    v17 = *(_QWORD *)(a2 + 16);
    sub_213AD5300(v16, v17);
    v18 = *(_QWORD *)(a1 + 8);
    v19 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v17;
    sub_213AD5374(v18, v19);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v20 = *(void **)(a1 + 32);
    v21 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v21;
    v22 = v21;

  }
  return a1;
}

uint64_t sub_213B046AC(uint64_t a1)
{
  destroy for PersonalizationAssetManager.Asset(a1);
  return a1;
}

uint64_t assignWithTake for AirTagPairing.Assets(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 32);
  if (v5 != (void *)1)
  {
    v6 = *(_QWORD *)(a2 + 32);
    if (v6 != 1)
    {
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(_QWORD *)(a1 + 16);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      sub_213AD5374(v8, v9);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v6;

      return a1;
    }
    sub_213B046AC(a1 + 8);
  }
  v7 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for AirTagPairing.Assets(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirTagPairing.Assets(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing.Assets()
{
  return &type metadata for AirTagPairing.Assets;
}

uint64_t storeEnumTagSinglePayload for AirTagPairing.Assets.AdjustedImageIdentifier(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B04854 + 4 * byte_213B2F4EA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B04874 + 4 * byte_213B2F4EF[v4]))();
}

_BYTE *sub_213B04854(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B04874(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B0487C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B04884(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B0488C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B04894(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing.Assets.AdjustedImageIdentifier()
{
  return &type metadata for AirTagPairing.Assets.AdjustedImageIdentifier;
}

uint64_t storeEnumTagSinglePayload for AirTagPairing.Assets.VideoIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213B048FC + 4 * byte_213B2F4F9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213B04930 + 4 * byte_213B2F4F4[v4]))();
}

uint64_t sub_213B04930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B04938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B04940);
  return result;
}

uint64_t sub_213B0494C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B04954);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213B04958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B04960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing.Assets.VideoIdentifier()
{
  return &type metadata for AirTagPairing.Assets.VideoIdentifier;
}

uint64_t _s10ProductKit13AirTagPairingV13ConfigurationV5ColorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213B049C8 + 4 * byte_213B2F503[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213B049FC + 4 * byte_213B2F4FE[v4]))();
}

uint64_t sub_213B049FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B04A04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B04A0CLL);
  return result;
}

uint64_t sub_213B04A18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B04A20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213B04A24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B04A2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirTagPairing.Assets.ViewIdentifier()
{
  return &type metadata for AirTagPairing.Assets.ViewIdentifier;
}

uint64_t sub_213B04A4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(type metadata accessor for MobileAssetRequest() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_213ADA044;
  return sub_213B100A4(a1, v6, v7);
}

uint64_t sub_213B04ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B04B24()
{
  uint64_t v0;

  swift_release();
  sub_213AD5374(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_213B04B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_213AD7E40;
  *(_QWORD *)(v6 + 48) = v4;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 64) = a1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 72) = v7;
  *v7 = v6;
  v7[1] = sub_213B01E28;
  return PersonalizationAssetManager.asset(for:)(v6 + 16, (_OWORD *)(v6 + 48));
}

uint64_t sub_213B04BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(double *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_213ADA044;
  return sub_213AE0120(a1, a2, v6, v7);
}

uint64_t sub_213B04C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19790);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19790);
  if (qword_254D18470 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t HeadphonePairing.Configuration.color.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double HeadphonePairing.Configuration.timeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void HeadphonePairing.Configuration.hardwareModel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t HeadphonePairing.Configuration.engravingInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_213ADAE48(v2, v3, v4);
}

uint64_t HeadphonePairing.Configuration.engravingInformation.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_213ADACE4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v4;
  return result;
}

uint64_t (*HeadphonePairing.Configuration.engravingInformation.modify())()
{
  return nullsub_1;
}

char *HeadphonePairing.Configuration.init(hardwareModel:color:timeout:)@<X0>(char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v4;

  v4 = *result;
  *(_QWORD *)a3 = a2;
  *(double *)(a3 + 8) = a4;
  *(_BYTE *)(a3 + 16) = v4;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = -1;
  return result;
}

uint64_t HeadphonePairing.AssetRequest.assets()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = v1;
  type metadata accessor for MobileAssetResult();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B04E0C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  if (qword_254D183D0 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  v0[10] = __swift_project_value_buffer(v1, (uint64_t)qword_254D19790);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213AC8000, v2, v3, "Beginning asset request", v4, 2u);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }

  v5 = sub_213B04FEC();
  v0[11] = v5;
  v8 = (char *)&dword_254D19748 + dword_254D19748;
  v6 = (_QWORD *)swift_task_alloc();
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_213B04F40;
  return ((uint64_t (*)(_QWORD, uint64_t))v8)(v0[9], v5);
}

uint64_t sub_213B04F40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 112) = v4;
  *v4 = v2;
  v4[1] = sub_213B013A0;
  return sub_213B05118(v2 + 16);
}

uint64_t sub_213B04FEC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = HeadphoneHardwareModel.rawValue.getter();
  v16 = v1;
  sub_213B2BEAC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18DD0);
  v2 = (int *)type metadata accessor for MobileAssetRequest();
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_213B2E300;
  v7 = v6 + v5;
  swift_bridgeObjectRetain();
  sub_213B2BC84();
  *(_BYTE *)(v7 + v2[5]) = 0;
  v8 = (uint64_t *)(v7 + v2[6]);
  *v8 = v15;
  v8[1] = v16;
  v9 = v7 + v2[7];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = v7 + v4;
  v11 = *(_QWORD *)(v0 + 16);
  sub_213B2BC84();
  *(_BYTE *)(v10 + v2[5]) = 1;
  v12 = (uint64_t *)(v10 + v2[6]);
  *v12 = v15;
  v12[1] = v16;
  v13 = v10 + v2[7];
  *(_QWORD *)v13 = v11;
  *(_BYTE *)(v13 + 8) = 0;
  return v6;
}

uint64_t sub_213B05118(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_213B2BBD0();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B05178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v24;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 160) = v2;
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 168) = v3;
  v4 = *(unsigned __int8 *)(v1 + 56);
  *(_BYTE *)(v0 + 248) = v4;
  if (v4 == 255)
  {
    v24 = *(_QWORD **)(v0 + 120);
    *v24 = 0;
    v24[1] = 0;
    v24[2] = 0;
    v24[3] = 1;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_213ADAC20(v2, v3, v4 & 1);
    if (qword_254D183D0 != -1)
      swift_once();
    v5 = sub_213B2BCF0();
    *(_QWORD *)(v0 + 176) = __swift_project_value_buffer(v5, (uint64_t)qword_254D19790);
    v6 = sub_213B2BCD8();
    v7 = sub_213B2C170();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_213AC8000, v6, v7, "Fetching engraved asset", v8, 2u);
      MEMORY[0x2199BD0E8](v8, -1, -1);
    }

    v9 = sub_213AFA9E8();
    *(_QWORD *)(v0 + 184) = v9;
    v10 = sub_213AFAA04();
    *(_QWORD *)(v0 + 192) = v10;
    v11 = qword_254D18390;
    v12 = v9;
    v13 = v10;
    if (v11 != -1)
      swift_once();
    v14 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_254D18FB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v17, v16);
    type metadata accessor for PersonalizationAssetManager();
    swift_allocObject();
    v18 = PersonalizationAssetManager.init(container:manateeContainer:cacheDirectory:)(v12, v13, v15);
    *(_QWORD *)(v0 + 200) = v18;
    v19 = swift_allocObject();
    *(_QWORD *)(v0 + 208) = v19;
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = v2;
    *(_QWORD *)(v19 + 32) = v3;
    *(_BYTE *)(v19 + 40) = v4 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D19768);
    inited = swift_initStackObject();
    *(_QWORD *)(v0 + 216) = inited;
    *(_OWORD *)(inited + 16) = xmmword_213B2E2E0;
    *(_QWORD *)(inited + 32) = 1;
    *(_QWORD *)(inited + 40) = &unk_254D19A08;
    *(_QWORD *)(inited + 48) = v19;
    sub_213ADAE48(v2, v3, v4);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F10);
    v21 = swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v21;
    *(_QWORD *)(v21 + 16) = inited;
    *(_QWORD *)(v21 + 24) = 0x3FF0000000000000;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v22;
    *v22 = v0;
    v22[1] = sub_213B0549C;
    return sub_213B2C3EC();
  }
}

uint64_t sub_213B0549C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D19778);
    swift_arrayDestroy();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_213B05540()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  unsigned __int8 v5;
  __int128 v6;

  v1 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_OWORD **)(v0 + 120);
  v5 = *(_BYTE *)(v0 + 248);

  swift_release();
  sub_213ADACE4(v3, v2, v5);
  swift_release();
  v6 = *(_OWORD *)(v0 + 88);
  *v4 = *(_OWORD *)(v0 + 72);
  v4[1] = v6;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B055D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  _QWORD *v16;
  unsigned __int8 v18;
  unint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 240);
  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  swift_task_dealloc();

  swift_release();
  swift_release();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19778);
  swift_arrayDestroy();
  v4 = v1;
  v5 = v1;
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C158();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 168);
    v18 = *(_BYTE *)(v0 + 248);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    v20 = v11;
    *(_QWORD *)(v0 + 104) = v8;
    v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v13 = sub_213B2BE64();
    *(_QWORD *)(v0 + 112) = sub_213AE1780(v13, v14, &v20);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v6, v7, "Failed to fetch engraving information: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v11, -1, -1);
    MEMORY[0x2199BD0E8](v10, -1, -1);

    sub_213ADACE4(v9, v19, v18);
  }
  else
  {
    v15 = *(void **)(v0 + 240);
    sub_213ADACE4(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 248));

  }
  v16 = *(_QWORD **)(v0 + 120);
  *v16 = 0;
  v16[1] = 0;
  v16[2] = 0;
  v16[3] = 1;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B0581C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v5 + 72) = a1;
  *(_QWORD *)(v5 + 48) = a3;
  *(_QWORD *)(v5 + 56) = a4;
  *(_BYTE *)(v5 + 64) = a5 & 1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 80) = v6;
  *v6 = v5;
  v6[1] = sub_213B05898;
  return PersonalizationAssetManager.asset(for:)(v5 + 16, v5 + 48);
}

uint64_t sub_213B05898()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B058FC()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;

  v1 = *(_OWORD **)(v0 + 72);
  v2 = *(_OWORD *)(v0 + 32);
  *v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B05914()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B05920(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _UNKNOWN **v19;

  v4 = swift_allocObject();
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = *a1;
  v10 = a1[1];
  v11 = *((_BYTE *)a1 + 16);
  v12 = a1[3];
  v13 = a1[4];
  LOBYTE(a1) = *((_BYTE *)a1 + 40);
  v14 = *v7;
  v18 = type metadata accessor for MobileAssetManager();
  v19 = &off_24D0BF990;
  *(_QWORD *)&v17 = v14;
  *(_QWORD *)(v4 + 16) = v9;
  *(_QWORD *)(v4 + 24) = v10;
  *(_BYTE *)(v4 + 32) = v11;
  *(_QWORD *)(v4 + 40) = v12;
  *(_QWORD *)(v4 + 48) = v13;
  *(_BYTE *)(v4 + 56) = (_BYTE)a1;
  sub_213AE1104(&v17, v4 + 64);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v4;
}

uint64_t HeadphonePairing.AssetRequest.deinit()
{
  uint64_t v0;

  sub_213ADACE4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return v0;
}

uint64_t HeadphonePairing.AssetRequest.__deallocating_deinit()
{
  uint64_t v0;

  sub_213ADACE4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return swift_deallocClassInstance();
}

void sub_213B05A80()
{
  strcpy((char *)&qword_254D197A8, "ProxCard_loop");
  unk_254D197B6 = -4864;
}

id HeadphonePairing.Assets.personalizationAsset.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (void *)v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = (void *)v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_213AD6384(v2, v3, v4, v5);
}

ProductKit::HeadphonePairing::Assets::AdjustedImageIdentifier_optional __swiftcall HeadphonePairing.Assets.AdjustedImageIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProductKit::HeadphonePairing::Assets::AdjustedImageIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static HeadphonePairing.Assets.AdjustedImageIdentifier.allCases.getter()
{
  return &unk_24D0BA320;
}

uint64_t HeadphonePairing.Assets.AdjustedImageIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213B05B5C + 4 * byte_213B2F970[*v0]))(0xD00000000000001CLL, 0x8000000213B33660);
}

uint64_t sub_213B05B5C(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_213B05B74()
{
  return 0x64726143786F7250;
}

uint64_t sub_213B05B90()
{
  return 0x64726143786F7250;
}

void sub_213B05BB0(char *a1)
{
  sub_213ADA33C(*a1);
}

void sub_213B05BBC()
{
  char *v0;

  sub_213B17B5C(*v0);
}

void sub_213B05BC4(uint64_t a1)
{
  char *v1;

  sub_213B18038(a1, *v1);
}

void sub_213B05BCC(uint64_t a1)
{
  char *v1;

  sub_213B184A8(a1, *v1);
}

ProductKit::HeadphonePairing::Assets::AdjustedImageIdentifier_optional sub_213B05BD4(Swift::String *a1)
{
  return HeadphonePairing.Assets.AdjustedImageIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B05BE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HeadphonePairing.Assets.AdjustedImageIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B05C04(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA348;
}

uint64_t HeadphonePairing.Assets.FileIdentifier.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static HeadphonePairing.Assets.FileIdentifier.allCases.getter()
{
  return &unk_24D0BA3A8;
}

unint64_t HeadphonePairing.Assets.FileIdentifier.rawValue.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_213B05C90()
{
  sub_213B2C518();
  sub_213B2BE88();
  return sub_213B2C530();
}

uint64_t sub_213B05CE4()
{
  return sub_213B2BE88();
}

uint64_t sub_213B05D00()
{
  sub_213B2C518();
  sub_213B2BE88();
  return sub_213B2C530();
}

uint64_t sub_213B05D50@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_213B05DA0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000213B336C0;
}

void sub_213B05DC0(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA408;
}

ProductKit::HeadphonePairing::Assets::VideoIdentifier_optional __swiftcall HeadphonePairing.Assets.VideoIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProductKit::HeadphonePairing::Assets::VideoIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static HeadphonePairing.Assets.VideoIdentifier.allCases.getter()
{
  return &unk_24D0BA4E0;
}

uint64_t HeadphonePairing.Assets.VideoIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213B05E6C + 4 * byte_213B2F974[*v0]))(0xD000000000000017, 0x8000000213B335F0);
}

unint64_t sub_213B05E6C()
{
  return 0xD000000000000015;
}

uint64_t sub_213B05EA4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

void sub_213B05EB4()
{
  JUMPOUT(0x213B05EC0);
}

uint64_t sub_213B05ECC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213ADA334(*a1, *a2);
}

uint64_t sub_213B05ED8()
{
  unsigned __int8 *v0;

  return sub_213B17C38(*v0);
}

uint64_t sub_213B05EE0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_213B18034(a1, *v1);
}

uint64_t sub_213B05EE8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_213B18440(a1, *v1);
}

ProductKit::HeadphonePairing::Assets::VideoIdentifier_optional sub_213B05EF0(Swift::String *a1)
{
  return HeadphonePairing.Assets.VideoIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B05EFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HeadphonePairing.Assets.VideoIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B05F20(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA4E0;
}

ProductKit::HeadphonePairing::Assets::ViewIdentifier_optional __swiftcall HeadphonePairing.Assets.ViewIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ProductKit::HeadphonePairing::Assets::ViewIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static HeadphonePairing.Assets.ViewIdentifier.allCases.getter()
{
  return &unk_24D0BA558;
}

unint64_t HeadphonePairing.Assets.ViewIdentifier.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0xD000000000000011;
}

uint64_t sub_213B05FD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213ADA338(*a1, *a2);
}

uint64_t sub_213B05FE4()
{
  unsigned __int8 *v0;

  return sub_213B17C3C(*v0);
}

uint64_t sub_213B05FEC()
{
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B06048(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_213B1843C(a1, *v1);
}

ProductKit::HeadphonePairing::Assets::ViewIdentifier_optional sub_213B06050(Swift::String *a1)
{
  return HeadphonePairing.Assets.ViewIdentifier.init(rawValue:)(*a1);
}

void sub_213B0605C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000011;
  if (*v1)
    v2 = 0xD000000000000012;
  v3 = 0x8000000213B33780;
  if (!*v1)
    v3 = 0x8000000213B33760;
  *a1 = v2;
  a1[1] = v3;
}

void sub_213B0609C(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA580;
}

ProductKit::HeadphonePairing::Assets::VideoViewIdentifier_optional __swiftcall HeadphonePairing.Assets.VideoViewIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProductKit::HeadphonePairing::Assets::VideoViewIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static HeadphonePairing.Assets.VideoViewIdentifier.allCases.getter()
{
  return &unk_24D0BA610;
}

uint64_t HeadphonePairing.Assets.VideoViewIdentifier.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aIntro_5[8 * *v0];
}

uint64_t sub_213B06134(char *a1, char *a2)
{
  return sub_213ADA2B0(*a1, *a2);
}

uint64_t sub_213B06140()
{
  return sub_213B17C40();
}

uint64_t sub_213B06148()
{
  return sub_213B17FF4();
}

uint64_t sub_213B06150()
{
  return sub_213B18444();
}

ProductKit::HeadphonePairing::Assets::VideoViewIdentifier_optional sub_213B06158(Swift::String *a1)
{
  return HeadphonePairing.Assets.VideoViewIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B06164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HeadphonePairing.Assets.VideoViewIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B06188(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA638;
}

void HeadphonePairing.Assets.adjustedImage(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_213B06258()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  id v11;
  uint64_t result;

  v5 = v3;
  v6 = 0x8000000213B33660;
  v7 = v2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = 0x8000000213B33660;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = 6778480;
  *(_QWORD *)(v4 - 96) = 0xE300000000000000;
  *(_BYTE *)(v4 - 88) = 1;
  GenericAsset.fileURL.getter(v1);
  v8 = sub_213B2BBD0();
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v1, 1, v8);
  sub_213AD6270(v1, &qword_254D188E0);
  if (v9 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = 0xD000000000000014;
    v6 = 0x8000000213B35400;
  }
  v10 = v0 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  swift_bridgeObjectRetain();
  v11 = v3;
  swift_bridgeObjectRetain();
  sub_213B15540(v10);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v0 = v7;
  *(_QWORD *)(v0 + 8) = v6;
  *(_QWORD *)(v0 + 16) = v11;
  *(_QWORD *)(v0 + 24) = 6778480;
  *(_QWORD *)(v0 + 32) = 0xE300000000000000;
  *(_BYTE *)(v0 + 40) = 1;
  return result;
}

id HeadphonePairing.Assets.file(_:)@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *(_QWORD *)a1 = 0xD000000000000011;
  *(_QWORD *)(a1 + 8) = 0x8000000213B336C0;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = 0x7473696C70;
  *(_QWORD *)(a1 + 32) = 0xE500000000000000;
  *(_BYTE *)(a1 + 40) = 0;
  return v2;
}

void HeadphonePairing.Assets.video(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X9 }
}

uint64_t sub_213B0655C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t result;

  v8 = 0xD000000000000017;
  v9 = 0x8000000213B335F0;
  *(_QWORD *)(v7 - 152) = v1;
  *(_QWORD *)(v7 - 144) = v0;
  v10 = sub_213B2C47C();
  v11 = v6;
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    *(_QWORD *)(v7 - 168) = "BatterySwap_loop";
    __asm { BR              X9 }
  }
  *(_QWORD *)(v7 - 128) = 0xD000000000000017;
  *(_QWORD *)(v7 - 120) = 0x8000000213B335F0;
  *(_QWORD *)(v7 - 112) = v6;
  *(_QWORD *)(v7 - 104) = v4;
  *(_QWORD *)(v7 - 96) = 0xE300000000000000;
  *(_BYTE *)(v7 - 88) = 0;
  GenericAsset.fileURL.getter(v3);
  v12 = sub_213B2BBD0();
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v3, 1, v12);
  sub_213AD6270(v3, &qword_254D188E0);
  if (v13 == 1)
  {
    if (qword_254D183D8 != -1)
      swift_once();
    v8 = qword_254D197A8;
    v14 = unk_254D197B0;
    v15 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v9 = v14;
  }
  v16 = v2 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  swift_bridgeObjectRetain();
  v17 = v6;
  swift_bridgeObjectRetain();
  sub_213B15540(v16);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v2 = v8;
  *(_QWORD *)(v2 + 8) = v9;
  *(_QWORD *)(v2 + 16) = v17;
  *(_QWORD *)(v2 + 24) = v4;
  *(_QWORD *)(v2 + 32) = 0xE300000000000000;
  *(_BYTE *)(v2 + 40) = 0;
  return result;
}

char *HeadphonePairing.Assets.videoView(_:)(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _BYTE *v60;
  uint64_t v61;
  char v62;
  id v63;
  uint64_t v64;
  unsigned int (*v65)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  _BYTE *v70;
  uint64_t v71;
  char v72;
  id v73;
  unsigned int (*v74)(_BYTE *, uint64_t, uint64_t);
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  void *v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  _BYTE *v100;
  uint64_t v101;
  id v102;
  _BYTE *v103;
  void (*v104)(_BYTE *, _BYTE *, _BYTE *);
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  _BYTE *v111;
  uint64_t v112;
  char v113;
  id v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t *v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  void (*v129)(uint64_t, _BYTE *, _BYTE *);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  char v134;
  double v135;
  double v136;
  uint64_t ObjCClassFromMetadata;
  id v138;
  void *v139;
  void *v140;
  id v141;
  _BYTE *v142;
  uint64_t v143;
  void (*v144)(uint64_t, _QWORD, uint64_t, _BYTE *);
  _BYTE *v145;
  _BYTE *v146;
  int *v147;
  _BYTE *v148;
  _QWORD *v149;
  double *v150;
  uint64_t v151;
  void (*v152)(_BYTE *, _BYTE *);
  _BYTE v154[4];
  int v155;
  _BYTE *v156;
  _BYTE *v157;
  _BYTE *v158;
  _BYTE *v159;
  uint64_t v160;
  _BYTE *v161;
  _BYTE *v162;
  _BYTE *v163;
  _BYTE *v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  _BYTE *v169;
  _BYTE *v170;
  void (*v171)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v172;
  _BYTE *v173;
  _BYTE *v174;
  int v175;
  _BYTE *v176;
  _BYTE *v177;
  _BYTE *v178;
  unsigned int (*v179)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v180;
  uint64_t v181;
  void *v182;
  _BYTE *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  _BYTE *v190;
  uint64_t v191;
  char v192;
  char v193;
  uint64_t v194;
  uint64_t v195;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v178 = &v154[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v161 = &v154[-v6];
  v160 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  MEMORY[0x24BDAC7A8](v160);
  v170 = &v154[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v169 = &v154[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BDAC7A8](v9);
  v159 = &v154[-v12];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v168 = &v154[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v166 = &v154[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v177 = &v154[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v172 = &v154[-v20];
  MEMORY[0x24BDAC7A8](v19);
  v22 = &v154[-v21];
  v23 = type metadata accessor for AdjustedAsset();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v167 = &v154[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v164 = &v154[-v27];
  v28 = MEMORY[0x24BDAC7A8](v26);
  v162 = &v154[-v29];
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = &v154[-v31];
  MEMORY[0x24BDAC7A8](v30);
  v34 = &v154[-v33];
  v35 = sub_213B2BBD0();
  v186 = *(_QWORD *)(v35 - 8);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v158 = &v154[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = MEMORY[0x24BDAC7A8](v36);
  v156 = &v154[-v39];
  v40 = MEMORY[0x24BDAC7A8](v38);
  v157 = &v154[-v41];
  v42 = MEMORY[0x24BDAC7A8](v40);
  v165 = &v154[-v43];
  v44 = MEMORY[0x24BDAC7A8](v42);
  v173 = &v154[-v45];
  v46 = MEMORY[0x24BDAC7A8](v44);
  v163 = &v154[-v47];
  v48 = MEMORY[0x24BDAC7A8](v46);
  v174 = &v154[-v49];
  v50 = MEMORY[0x24BDAC7A8](v48);
  v176 = &v154[-v51];
  MEMORY[0x24BDAC7A8](v50);
  v180 = &v154[-v52];
  v175 = *a1;
  v53 = v1[1];
  v55 = (void *)v1[2];
  v54 = (_BYTE *)v1[3];
  v56 = v1[4];
  v185 = *v1;
  v187 = v185;
  v188 = v53;
  v181 = v53;
  v182 = v55;
  v189 = v55;
  v190 = v54;
  v183 = v54;
  v184 = v56;
  v191 = v56;
  v193 = 1;
  HeadphonePairing.Assets.video(_:)((uint64_t)&v193);
  v57 = *(_QWORD *)v34;
  v58 = *((_QWORD *)v34 + 1);
  v59 = (void *)*((_QWORD *)v34 + 2);
  v60 = (_BYTE *)*((_QWORD *)v34 + 3);
  v61 = *((_QWORD *)v34 + 4);
  v62 = v34[40];
  swift_bridgeObjectRetain();
  v63 = v59;
  swift_bridgeObjectRetain();
  sub_213AD53FC((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  v187 = v57;
  v188 = v58;
  v189 = v63;
  v190 = v60;
  v191 = v61;
  v192 = v62;
  GenericAsset.fileURL.getter((uint64_t)v22);
  swift_bridgeObjectRelease();

  v64 = v186;
  swift_bridgeObjectRelease();
  v65 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v64 + 48);
  if (v65(v22, 1, v35) != 1)
  {
    v171 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v64 + 32);
    v171(v180, v22, v35);
    v187 = v185;
    v188 = v181;
    v189 = v182;
    v190 = v183;
    v191 = v184;
    v193 = 0;
    HeadphonePairing.Assets.video(_:)((uint64_t)&v193);
    v67 = *(_QWORD *)v32;
    v68 = *((_QWORD *)v32 + 1);
    v69 = (void *)*((_QWORD *)v32 + 2);
    v70 = (_BYTE *)*((_QWORD *)v32 + 3);
    v71 = *((_QWORD *)v32 + 4);
    v179 = v65;
    v72 = v32[40];
    swift_bridgeObjectRetain();
    v73 = v69;
    swift_bridgeObjectRetain();
    sub_213AD53FC((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v187 = v67;
    v188 = v68;
    v189 = v73;
    v190 = v70;
    v191 = v71;
    v192 = v72;
    v74 = v179;
    v66 = v172;
    GenericAsset.fileURL.getter((uint64_t)v172);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v74(v66, 1, v35) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v180, v35);
      goto LABEL_5;
    }
    v171(v176, v66, v35);
    v83 = v181;
    v187 = v185;
    v188 = v181;
    v84 = v182;
    v85 = v183;
    v189 = v182;
    v190 = v183;
    v86 = v184;
    v191 = v184;
    v193 = 2;
    v178 = (_BYTE *)v35;
    v87 = v162;
    HeadphonePairing.Assets.video(_:)((uint64_t)&v193);
    v88 = *(_QWORD *)v87;
    v89 = *((_QWORD *)v87 + 1);
    v90 = (void *)*((_QWORD *)v87 + 2);
    v172 = (_BYTE *)*((_QWORD *)v87 + 3);
    v91 = *((_QWORD *)v87 + 4);
    v155 = v87[40];
    swift_bridgeObjectRetain();
    v92 = v90;
    swift_bridgeObjectRetain();
    v93 = (uint64_t)v87;
    v94 = v178;
    sub_213AD53FC(v93, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v187 = v88;
    v188 = v89;
    v189 = v92;
    v190 = v172;
    v191 = v91;
    v192 = v155;
    GenericAsset.fileURL.getter((uint64_t)v177);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v187 = v185;
    v188 = v83;
    v189 = v84;
    v190 = v85;
    v191 = v86;
    v95 = v186;
    v193 = 3;
    v96 = (uint64_t)v164;
    HeadphonePairing.Assets.video(_:)((uint64_t)&v193);
    v97 = *(_QWORD *)v96;
    v98 = *(_QWORD *)(v96 + 8);
    v99 = *(void **)(v96 + 16);
    v100 = *(_BYTE **)(v96 + 24);
    v101 = *(_QWORD *)(v96 + 32);
    LOBYTE(v84) = *(_BYTE *)(v96 + 40);
    swift_bridgeObjectRetain();
    v102 = v99;
    swift_bridgeObjectRetain();
    sub_213AD53FC(v96, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v187 = v97;
    v188 = v98;
    v189 = v102;
    v190 = v100;
    v191 = v101;
    v192 = (char)v84;
    v103 = v166;
    GenericAsset.fileURL.getter((uint64_t)v166);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v104 = *(void (**)(_BYTE *, _BYTE *, _BYTE *))(v95 + 16);
    v105 = v163;
    v106 = v180;
    v104(v163, v180, v94);
    if (v179(v103, 1, (uint64_t)v94) == 1)
    {
      v171(v174, v105, (uint64_t)v94);
      sub_213AD6270((uint64_t)v103, &qword_254D188E0);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *))(v95 + 8))(v105, v94);
      v171(v174, v103, (uint64_t)v94);
    }
    v187 = v185;
    v188 = v181;
    v189 = v182;
    v190 = v183;
    v191 = v184;
    v193 = 4;
    v107 = (uint64_t)v167;
    HeadphonePairing.Assets.video(_:)((uint64_t)&v193);
    v109 = *(_QWORD *)v107;
    v108 = *(_QWORD *)(v107 + 8);
    v110 = *(void **)(v107 + 16);
    v111 = *(_BYTE **)(v107 + 24);
    v112 = *(_QWORD *)(v107 + 32);
    v113 = *(_BYTE *)(v107 + 40);
    swift_bridgeObjectRetain();
    v114 = v110;
    swift_bridgeObjectRetain();
    sub_213AD53FC(v107, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v187 = v109;
    v188 = v108;
    v189 = v114;
    v190 = v111;
    v191 = v112;
    v192 = v113;
    v115 = v168;
    GenericAsset.fileURL.getter((uint64_t)v168);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v116 = v165;
    v117 = v106;
    v104(v165, v106, v94);
    if (v179(v115, 1, (uint64_t)v94) == 1)
    {
      v171(v173, v116, (uint64_t)v94);
      sub_213AD6270((uint64_t)v115, &qword_254D188E0);
      v118 = (uint64_t)v170;
      v119 = v186;
    }
    else
    {
      v119 = v186;
      (*(void (**)(_BYTE *, _BYTE *))(v186 + 8))(v116, v94);
      v171(v173, v115, (uint64_t)v94);
      v118 = (uint64_t)v170;
    }
    v120 = v175;
    if (v175)
    {
      v121 = sub_213B2C47C();
      swift_bridgeObjectRelease();
      if ((v121 & 1) == 0)
      {
        if (v120 == 2)
        {
          v122 = sub_213B2C47C();
          swift_bridgeObjectRelease();
          if ((v122 & 1) == 0)
          {
            v123 = v118;
            v124 = &v194;
LABEL_27:
            v104((_BYTE *)v123, (_BYTE *)*(v124 - 32), v94);
            goto LABEL_28;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v123 = v118;
        v124 = &v195;
        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v125 = v159;
    sub_213AD6478((uint64_t)v177, (uint64_t)v159, &qword_254D188E0);
    if (v179(v125, 1, (uint64_t)v94) != 1)
    {
      v127 = v117;
      v128 = v157;
      v129 = (void (*)(uint64_t, _BYTE *, _BYTE *))v171;
      v171(v157, v125, (uint64_t)v94);
      v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v131 = v118 + *(int *)(v130 + 48);
      v132 = v118 + *(int *)(v130 + 64);
      v104((_BYTE *)v118, v127, v94);
      v104((_BYTE *)v131, v176, v94);
      v133 = v128;
      v117 = v127;
      v119 = v186;
      v129(v132, v133, v94);
      goto LABEL_29;
    }
    sub_213AD6270((uint64_t)v125, &qword_254D188E0);
    v126 = v118 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48);
    v104((_BYTE *)v118, v117, v94);
    v104((_BYTE *)v126, v176, v94);
LABEL_28:
    v129 = (void (*)(uint64_t, _BYTE *, _BYTE *))v171;
LABEL_29:
    swift_storeEnumTagMultiPayload();
    if (v120)
    {
      v134 = sub_213B2C47C();
      swift_bridgeObjectRelease();
      if ((v134 & 1) != 0)
        v135 = 750.0;
      else
        v135 = 1050.0;
      if ((v134 & 1) != 0)
        v136 = 880.0;
      else
        v136 = 750.0;
      sub_213B2C47C();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v136 = 880.0;
      v135 = 750.0;
    }
    type metadata accessor for MobileAssetManager();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v138 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v139 = (void *)sub_213B2BDF8();
    swift_bridgeObjectRelease();
    v140 = (void *)sub_213B2BDF8();
    v141 = objc_msgSend(v138, sel_URLForResource_withExtension_, v139, v140);

    if (v141)
    {
      v142 = v158;
      sub_213B2BBA0();

      v143 = (uint64_t)v169;
      v129((uint64_t)v169, v142, v94);
      v144 = *(void (**)(uint64_t, _QWORD, uint64_t, _BYTE *))(v119 + 56);
      v144(v143, 0, 1, v94);
      if (v179((_BYTE *)v143, 1, (uint64_t)v94) != 1)
      {
        v145 = v156;
        v129((uint64_t)v156, (_BYTE *)v143, v94);
        v146 = v161;
        sub_213AD52BC(v118, (uint64_t)v161, type metadata accessor for VideoViewConfiguration.VideoSequence);
        v147 = (int *)type metadata accessor for VideoViewConfiguration(0);
        sub_213B15540((uint64_t)&v146[v147[5]]);
        v148 = &v146[v147[6]];
        v129((uint64_t)v148, v145, v94);
        v144((uint64_t)v148, 0, 1, v94);
        sub_213AE1D5C((uint64_t)&v187);
        v149 = &v146[v147[7]];
        *v149 = 0;
        v149[1] = 0;
        v149[2] = 0;
        v149[3] = 1;
        v150 = (double *)&v146[v147[8]];
        *v150 = v135;
        v150[1] = v136;
        *(_QWORD *)&v146[v147[9]] = 0;
        sub_213B03EB0((uint64_t)&v187, (uint64_t)&v146[v147[10]]);
        *(_QWORD *)&v146[v147[11]] = 0;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v147 - 1) + 56))(v146, 0, 1, v147);
LABEL_43:
        v187 = v185;
        v188 = v181;
        v189 = v182;
        v190 = v183;
        v191 = v184;
        v82 = sub_213B07A64((uint64_t)v146);
        sub_213AD6270((uint64_t)v146, &qword_254D18C58);
        sub_213AD53FC(v118, type metadata accessor for VideoViewConfiguration.VideoSequence);
        v152 = *(void (**)(_BYTE *, _BYTE *))(v119 + 8);
        v152(v173, v94);
        v152(v174, v94);
        sub_213AD6270((uint64_t)v177, &qword_254D188E0);
        v152(v176, v94);
        v152(v117, v94);
        return v82;
      }
    }
    else
    {
      v143 = (uint64_t)v169;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, _BYTE *))(v119 + 56))(v169, 1, 1, v94);
    }
    sub_213AD6270(v143, &qword_254D188E0);
    v151 = type metadata accessor for VideoViewConfiguration(0);
    v146 = v161;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v161, 1, 1, v151);
    goto LABEL_43;
  }
  v66 = v22;
LABEL_5:
  sub_213AD6270((uint64_t)v66, &qword_254D188E0);
  if (qword_254D183D0 != -1)
    swift_once();
  v75 = sub_213B2BCF0();
  __swift_project_value_buffer(v75, (uint64_t)qword_254D19790);
  v76 = sub_213B2BCD8();
  v77 = sub_213B2C170();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v78 = 0;
    _os_log_impl(&dword_213AC8000, v76, v77, "Could not find asset files", v78, 2u);
    MEMORY[0x2199BD0E8](v78, -1, -1);
  }

  v79 = type metadata accessor for VideoViewConfiguration(0);
  v80 = (uint64_t)v178;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v178, 1, 1, v79);
  v81 = objc_allocWithZone((Class)type metadata accessor for AdjustedVideoView());
  return sub_213B1B370(v80);
}

char *sub_213B07A64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for VideoViewConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v34 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - v17;
  v19 = v1[1];
  v38 = v1[2];
  v39 = v19;
  v20 = (void *)v1[4];
  v37 = v1[3];
  sub_213AD6478(a1, (uint64_t)v8, &qword_254D18C58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_213AD6270((uint64_t)v8, &qword_254D18C58);
  }
  else
  {
    sub_213B088A8((uint64_t)v8, (uint64_t)v18);
    if (v20 != (void *)1)
    {
      sub_213AD52BC((uint64_t)v18, (uint64_t)v16, type metadata accessor for VideoViewConfiguration);
      v23 = (uint64_t *)&v16[*(int *)(v9 + 28)];
      v25 = *v23;
      v24 = v23[1];
      v26 = (void *)v23[3];
      v35 = v23[2];
      v36 = v24;
      v28 = v38;
      v27 = v39;
      sub_213AD5300(v39, v38);
      v29 = v20;
      sub_213AD5300(v27, v28);
      v30 = v29;
      sub_213AD5344(v25, v36, v35, v26);
      *v23 = v27;
      v23[1] = v28;
      v31 = v37;
      v23[2] = v37;
      v23[3] = (uint64_t)v20;
      sub_213AD52BC((uint64_t)v16, (uint64_t)v13, type metadata accessor for VideoViewConfiguration);
      v32 = objc_allocWithZone((Class)type metadata accessor for PersonalizedVideoView(0));
      v22 = sub_213ACFD58((uint64_t)v13);
      sub_213AD5344(v27, v28, v31, v20);
      sub_213AD53FC((uint64_t)v18, type metadata accessor for VideoViewConfiguration);
      sub_213AD53FC((uint64_t)v16, type metadata accessor for VideoViewConfiguration);
      return v22;
    }
    sub_213AD53FC((uint64_t)v18, type metadata accessor for VideoViewConfiguration);
  }
  sub_213AD6478(a1, (uint64_t)v6, &qword_254D18C58);
  v21 = objc_allocWithZone((Class)type metadata accessor for AdjustedVideoView());
  return sub_213B1B370((uint64_t)v6);
}

void __swiftcall HeadphonePairing.Assets.view(_:)(UIView *__return_ptr retstr, ProductKit::HeadphonePairing::Assets::ViewIdentifier a2)
{
  uint64_t *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = (_BYTE *)a2;
  v4 = type metadata accessor for AdjustedAsset();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v7 = v2[1];
  v10 = v2[2];
  v9 = v2[3];
  v11 = v2[4];
  if ((*v3 & 1) != 0)
  {
    v19 = *v2;
    v20 = v7;
    v21 = v10;
    v22 = v9;
    v23 = v11;
    v14 = v8;
    v15 = v7;
    v16 = v10;
    v17 = v9;
    v18 = v11;
    v13 = 1;
  }
  else
  {
    v19 = *v2;
    v20 = v7;
    v21 = v10;
    v22 = v9;
    v23 = v11;
    v14 = v8;
    v15 = v7;
    v16 = v10;
    v17 = v9;
    v18 = v11;
    v13 = 0;
  }
  HeadphonePairing.Assets.adjustedImage(_:)((uint64_t)&v13);
  sub_213B07DE4((uint64_t)v6);
  sub_213AD53FC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
}

id sub_213B07DE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  __int128 v19;
  uint64_t v20;
  void *v21;

  v3 = type metadata accessor for AdjustedAsset();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - v7;
  v9 = (void *)v1[4];
  if (v9 == (void *)1)
  {
    sub_213AD52BC(a1, (uint64_t)&v19 - v7, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v10 = objc_allocWithZone((Class)type metadata accessor for AdjustedImageView());
    return sub_213B1FE0C((uint64_t)v8);
  }
  else
  {
    v13 = v1[2];
    v12 = v1[3];
    v14 = v1[1];
    sub_213AD52BC(a1, (uint64_t)&v19 - v7, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    sub_213AD52BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v15 = objc_allocWithZone((Class)type metadata accessor for PersonalizedImageView());
    sub_213AD5300(v14, v13);
    v16 = v9;
    v17 = sub_213B1A834((uint64_t)v5, 87.0, 24.0, 68.0);
    *(_QWORD *)&v19 = v14;
    *((_QWORD *)&v19 + 1) = v13;
    v20 = v12;
    v21 = v9;
    v11 = v17;
    sub_213B1ABA4(&v19);

    sub_213AD53FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    sub_213AD5344(v14, v13, v12, v9);
  }
  return v11;
}

unint64_t sub_213B07F88()
{
  unint64_t result;

  result = qword_254D197C8;
  if (!qword_254D197C8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphoneHardwareModel, &type metadata for HeadphoneHardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D197C8);
  }
  return result;
}

unint64_t sub_213B07FD0()
{
  unint64_t result;

  result = qword_254D197D0;
  if (!qword_254D197D0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphoneHardwareModel, &type metadata for HeadphoneHardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D197D0);
  }
  return result;
}

unint64_t sub_213B08018()
{
  unint64_t result;

  result = qword_254D19810;
  if (!qword_254D19810)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.AdjustedImageIdentifier, &type metadata for HeadphonePairing.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19810);
  }
  return result;
}

uint64_t sub_213B0805C()
{
  return sub_213AE1FE0(&qword_254D19818, &qword_254D19820);
}

unint64_t sub_213B08084()
{
  unint64_t result;

  result = qword_254D19828;
  if (!qword_254D19828)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.FileIdentifier, &type metadata for HeadphonePairing.Assets.FileIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19828);
  }
  return result;
}

uint64_t sub_213B080C8()
{
  return sub_213AE1FE0(&qword_254D19830, &qword_254D19838);
}

unint64_t sub_213B080F0()
{
  unint64_t result;

  result = qword_254D19840;
  if (!qword_254D19840)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.VideoIdentifier, &type metadata for HeadphonePairing.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19840);
  }
  return result;
}

uint64_t sub_213B08134()
{
  return sub_213AE1FE0(&qword_254D19848, &qword_254D19850);
}

unint64_t sub_213B0815C()
{
  unint64_t result;

  result = qword_254D19858;
  if (!qword_254D19858)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.ViewIdentifier, &type metadata for HeadphonePairing.Assets.ViewIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19858);
  }
  return result;
}

uint64_t sub_213B081A0()
{
  return sub_213AE1FE0(&qword_254D19860, &qword_254D19868);
}

unint64_t sub_213B081C8()
{
  unint64_t result;

  result = qword_254D19870;
  if (!qword_254D19870)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.VideoViewIdentifier, &type metadata for HeadphonePairing.Assets.VideoViewIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19870);
  }
  return result;
}

uint64_t sub_213B0820C()
{
  return sub_213AE1FE0(&qword_254D19878, &qword_254D19880);
}

unint64_t sub_213B08234()
{
  unint64_t result;

  result = qword_254D19888;
  if (!qword_254D19888)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.AdjustedImageIdentifier, &type metadata for HeadphonePairing.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19888);
  }
  return result;
}

unint64_t sub_213B0827C()
{
  unint64_t result;

  result = qword_254D19890;
  if (!qword_254D19890)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.AdjustedImageIdentifier, &type metadata for HeadphonePairing.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19890);
  }
  return result;
}

unint64_t sub_213B082C4()
{
  unint64_t result;

  result = qword_254D198C0;
  if (!qword_254D198C0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.FileIdentifier, &type metadata for HeadphonePairing.Assets.FileIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D198C0);
  }
  return result;
}

unint64_t sub_213B0830C()
{
  unint64_t result;

  result = qword_254D198C8;
  if (!qword_254D198C8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.FileIdentifier, &type metadata for HeadphonePairing.Assets.FileIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D198C8);
  }
  return result;
}

unint64_t sub_213B08354()
{
  unint64_t result;

  result = qword_254D198F8;
  if (!qword_254D198F8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.VideoIdentifier, &type metadata for HeadphonePairing.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D198F8);
  }
  return result;
}

unint64_t sub_213B0839C()
{
  unint64_t result;

  result = qword_254D19900;
  if (!qword_254D19900)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing.Assets.VideoIdentifier, &type metadata for HeadphonePairing.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19900);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing()
{
  return &type metadata for HeadphonePairing;
}

ValueMetadata *type metadata accessor for HeadphonePairing.Configuration()
{
  return &type metadata for HeadphonePairing.Configuration;
}

uint64_t type metadata accessor for HeadphonePairing.AssetRequest()
{
  uint64_t result;

  result = qword_254D19958;
  if (!qword_254D19958)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing.Assets()
{
  return &type metadata for HeadphonePairing.Assets;
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing.Assets.AdjustedImageIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213B08498 + 4 * byte_213B2F995[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213B084CC + 4 * byte_213B2F990[v4]))();
}

uint64_t sub_213B084CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B084D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B084DCLL);
  return result;
}

uint64_t sub_213B084E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B084F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213B084F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B084FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing.Assets.AdjustedImageIdentifier()
{
  return &type metadata for HeadphonePairing.Assets.AdjustedImageIdentifier;
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing.Assets.FileIdentifier(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B08558 + 4 * byte_213B2F99A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B08578 + 4 * byte_213B2F99F[v4]))();
}

_BYTE *sub_213B08558(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B08578(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B08580(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B08588(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B08590(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B08598(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing.Assets.FileIdentifier()
{
  return &type metadata for HeadphonePairing.Assets.FileIdentifier;
}

uint64_t getEnumTagSinglePayload for HeadphonePairing.Assets.VideoIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing.Assets.VideoIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_213B08690 + 4 * byte_213B2F9A9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_213B086C4 + 4 * byte_213B2F9A4[v4]))();
}

uint64_t sub_213B086C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B086CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B086D4);
  return result;
}

uint64_t sub_213B086E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B086E8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_213B086EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B086F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing.Assets.VideoIdentifier()
{
  return &type metadata for HeadphonePairing.Assets.VideoIdentifier;
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing.Assets.ViewIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213B0875C + 4 * byte_213B2F9B3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213B08790 + 4 * byte_213B2F9AE[v4]))();
}

uint64_t sub_213B08790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B08798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B087A0);
  return result;
}

uint64_t sub_213B087AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B087B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213B087B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B087C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing.Assets.ViewIdentifier()
{
  return &type metadata for HeadphonePairing.Assets.ViewIdentifier;
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing.Assets.VideoViewIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213B08828 + 4 * byte_213B2F9BD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213B0885C + 4 * byte_213B2F9B8[v4]))();
}

uint64_t sub_213B0885C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B08864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B0886CLL);
  return result;
}

uint64_t sub_213B08878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B08880);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213B08884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B0888C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing.Assets.VideoViewIdentifier()
{
  return &type metadata for HeadphonePairing.Assets.VideoViewIdentifier;
}

uint64_t sub_213B088A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoViewConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B088EC()
{
  uint64_t v0;

  swift_release();
  sub_213ADACFC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_213B0891C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_213AD7E40;
  return sub_213B0581C(a1, v4, v5, v6, v7);
}

uint64_t sub_213B08998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19A10);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19A10);
  if (qword_254D18478 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213B08A28()
{
  uint64_t result;

  sub_213B2BAC8();
  swift_allocObject();
  result = sub_213B2BABC();
  qword_254D19A28 = result;
  return result;
}

double Adjustments.Adjustment.bias.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double Adjustments.Adjustment.matrix.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

ProductKit::Adjustments::Adjustment __swiftcall Adjustments.Adjustment.init(bias:matrix:)(Swift::Double bias, Swift::Double matrix)
{
  Swift::Double *v2;
  ProductKit::Adjustments::Adjustment result;

  *v2 = bias;
  v2[1] = matrix;
  result.matrix = matrix;
  result.bias = bias;
  return result;
}

uint64_t sub_213B08A7C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x78697274616DLL;
  else
    return 1935763810;
}

uint64_t sub_213B08AA8()
{
  char *v0;

  return sub_213B08A7C(*v0);
}

uint64_t sub_213B08AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213B098C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_213B08AD4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_213B08AE0()
{
  sub_213B08C4C();
  return sub_213B2C560();
}

uint64_t sub_213B08B08()
{
  sub_213B08C4C();
  return sub_213B2C56C();
}

uint64_t Adjustments.Adjustment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19A30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B08C4C();
  sub_213B2C554();
  v8[15] = 0;
  sub_213B2C434();
  if (!v1)
  {
    v8[14] = 1;
    sub_213B2C434();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_213B08C4C()
{
  unint64_t result;

  result = qword_254D19A38;
  if (!qword_254D19A38)
  {
    result = MEMORY[0x2199BD010](&unk_213B3025C, &type metadata for Adjustments.Adjustment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19A38);
  }
  return result;
}

uint64_t Adjustments.Adjustment.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19A40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B08C4C();
  sub_213B2C548();
  if (!v2)
  {
    v16 = 0;
    sub_213B2C404();
    v10 = v9;
    v15 = 1;
    sub_213B2C404();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_213B08DE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return Adjustments.Adjustment.init(from:)(a1, a2);
}

uint64_t sub_213B08DF4(_QWORD *a1)
{
  return Adjustments.Adjustment.encode(to:)(a1);
}

__n128 Adjustments.dark.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

__n128 Adjustments.light.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[1];
  *a1 = result;
  return result;
}

ProductKit::Adjustments __swiftcall Adjustments.init(dark:light:)(ProductKit::Adjustments::Adjustment dark, ProductKit::Adjustments::Adjustment light)
{
  __int128 *v2;
  __int128 *v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  ProductKit::Adjustments result;

  v5 = *v2;
  v6 = *v3;
  *v4 = *v2;
  v4[1] = v6;
  result.light.matrix = light.matrix;
  result.light.bias = light.bias;
  result.dark.matrix = *(double *)&v6;
  result.dark.bias = *(double *)&v5;
  return result;
}

uint64_t sub_213B08E30(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746867696CLL;
  else
    return 1802658148;
}

uint64_t sub_213B08E5C()
{
  char *v0;

  return sub_213B08E30(*v0);
}

uint64_t sub_213B08E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213B09990(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213B08E88()
{
  sub_213B09028();
  return sub_213B2C560();
}

uint64_t sub_213B08EB0()
{
  sub_213B09028();
  return sub_213B2C56C();
}

uint64_t Adjustments.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19A48);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v11 = v1[3];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B09028();
  sub_213B2C554();
  v15 = v8;
  v16 = v9;
  v14 = 0;
  sub_213B0906C();
  sub_213B2C44C();
  if (!v2)
  {
    v15 = v10;
    v16 = v11;
    v14 = 1;
    sub_213B2C44C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_213B09028()
{
  unint64_t result;

  result = qword_254D19A50;
  if (!qword_254D19A50)
  {
    result = MEMORY[0x2199BD010](&unk_213B3020C, &type metadata for Adjustments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19A50);
  }
  return result;
}

unint64_t sub_213B0906C()
{
  unint64_t result;

  result = qword_254D19A58;
  if (!qword_254D19A58)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Adjustments.Adjustment, &type metadata for Adjustments.Adjustment);
    atomic_store(result, (unint64_t *)&qword_254D19A58);
  }
  return result;
}

uint64_t Adjustments.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19A60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B09028();
  sub_213B2C548();
  if (!v2)
  {
    v13 = 0;
    sub_213B09238();
    sub_213B2C41C();
    v9 = v12;
    v13 = 1;
    sub_213B2C41C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_213B09238()
{
  unint64_t result;

  result = qword_254D19A68;
  if (!qword_254D19A68)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Adjustments.Adjustment, &type metadata for Adjustments.Adjustment);
    atomic_store(result, (unint64_t *)&qword_254D19A68);
  }
  return result;
}

uint64_t sub_213B0927C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Adjustments.init(from:)(a1, a2);
}

uint64_t sub_213B09290(_QWORD *a1)
{
  return Adjustments.encode(to:)(a1);
}

double Adjustments.init(fileURL:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;
  __int128 v10;

  v4 = sub_213B2BBDC();
  v6 = v5;
  if (qword_254D183E8 != -1)
    swift_once();
  sub_213B09580();
  sub_213B2BAB0();
  v7 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  sub_213AD5374(v4, v6);
  result = *(double *)&v9;
  *(_OWORD *)a2 = v9;
  *(_OWORD *)(a2 + 16) = v10;
  *(_BYTE *)(a2 + 32) = 0;
  return result;
}

unint64_t sub_213B09580()
{
  unint64_t result;

  result = qword_254D19A70;
  if (!qword_254D19A70)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Adjustments, &type metadata for Adjustments);
    atomic_store(result, (unint64_t *)&qword_254D19A70);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Adjustments(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Adjustments(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Adjustments()
{
  return &type metadata for Adjustments;
}

ValueMetadata *type metadata accessor for Adjustments.Adjustment()
{
  return &type metadata for Adjustments.Adjustment;
}

ValueMetadata *type metadata accessor for Adjustments.CodingKeys()
{
  return &type metadata for Adjustments.CodingKeys;
}

uint64_t _s10ProductKit11AdjustmentsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213B09690 + 4 * byte_213B2FFBD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213B096C4 + 4 * byte_213B2FFB8[v4]))();
}

uint64_t sub_213B096C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B096CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B096D4);
  return result;
}

uint64_t sub_213B096E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B096E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213B096EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B096F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Adjustments.Adjustment.CodingKeys()
{
  return &type metadata for Adjustments.Adjustment.CodingKeys;
}

unint64_t sub_213B09714()
{
  unint64_t result;

  result = qword_254D19A78;
  if (!qword_254D19A78)
  {
    result = MEMORY[0x2199BD010](&unk_213B3012C, &type metadata for Adjustments.Adjustment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19A78);
  }
  return result;
}

unint64_t sub_213B0975C()
{
  unint64_t result;

  result = qword_254D19A80;
  if (!qword_254D19A80)
  {
    result = MEMORY[0x2199BD010](&unk_213B301E4, &type metadata for Adjustments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19A80);
  }
  return result;
}

unint64_t sub_213B097A4()
{
  unint64_t result;

  result = qword_254D19A88;
  if (!qword_254D19A88)
  {
    result = MEMORY[0x2199BD010](&unk_213B30154, &type metadata for Adjustments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19A88);
  }
  return result;
}

unint64_t sub_213B097EC()
{
  unint64_t result;

  result = qword_254D19A90;
  if (!qword_254D19A90)
  {
    result = MEMORY[0x2199BD010](&unk_213B3017C, &type metadata for Adjustments.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19A90);
  }
  return result;
}

unint64_t sub_213B09834()
{
  unint64_t result;

  result = qword_254D19A98;
  if (!qword_254D19A98)
  {
    result = MEMORY[0x2199BD010](&unk_213B3009C, &type metadata for Adjustments.Adjustment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19A98);
  }
  return result;
}

unint64_t sub_213B0987C()
{
  unint64_t result;

  result = qword_254D19AA0;
  if (!qword_254D19AA0)
  {
    result = MEMORY[0x2199BD010](&unk_213B300C4, &type metadata for Adjustments.Adjustment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D19AA0);
  }
  return result;
}

uint64_t sub_213B098C0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1935763810 && a2 == 0xE400000000000000;
  if (v3 || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x78697274616DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213B09990(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1802658148 && a2 == 0xE400000000000000;
  if (v3 || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t AirTagHardwareModel.rawValue.getter()
{
  return 0x2C31676154726941;
}

uint64_t AirTagHardwareModel.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static AirTagHardwareModel.allCases.getter()
{
  return &unk_24D0BA698;
}

uint64_t sub_213B09AEC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_213B09B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AirTagHardwareModel.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B09B60(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA6F8;
}

unint64_t sub_213B09B74()
{
  unint64_t result;

  result = qword_254D19AA8;
  if (!qword_254D19AA8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for AirTagHardwareModel, &type metadata for AirTagHardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D19AA8);
  }
  return result;
}

unint64_t sub_213B09BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D19AB0;
  if (!qword_254D19AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D19AB8);
    result = MEMORY[0x2199BD010](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D19AB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AirTagHardwareModel(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B09C48 + 4 * byte_213B302B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B09C68 + 4 * byte_213B302B5[v4]))();
}

_BYTE *sub_213B09C48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B09C68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B09C70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B09C78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B09C80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B09C88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AirTagHardwareModel()
{
  return &type metadata for AirTagHardwareModel;
}

uint64_t sub_213B09CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19AC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19AC0);
  if (qword_254D18470 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t HeadphonePairing2.Configuration.color.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double HeadphonePairing2.Configuration.timeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void HeadphonePairing2.Configuration.hardwareModel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void HeadphonePairing2.Configuration.overrideHardwareModel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *HeadphonePairing2.Configuration.overrideHardwareModel.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*HeadphonePairing2.Configuration.overrideHardwareModel.modify())()
{
  return nullsub_1;
}

uint64_t sub_213B09D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t result;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a1 + 16);
  v8 = *(_BYTE *)(a2 + 40);
  sub_213ADAE48(*(_QWORD *)a1, v4, v7);
  result = sub_213ADACE4(v5, v6, v8);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = v4;
  *(_BYTE *)(a2 + 40) = v7;
  return result;
}

uint64_t (*HeadphonePairing2.Configuration.engravingInformation.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v5;
  sub_213ADAE48(v3, v4, v5);
  return sub_213B09E2C;
}

uint64_t sub_213B09E2C(uint64_t a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_BYTE *)(v2 + 40);
  if ((a2 & 1) != 0)
  {
    sub_213ADAE48(*(_QWORD *)a1, v3, v5);
    sub_213ADACE4(v6, v7, v8);
    *(_QWORD *)(v2 + 24) = v4;
    *(_QWORD *)(v2 + 32) = v3;
    *(_BYTE *)(v2 + 40) = v5;
    return sub_213ADACE4(v4, v3, v5);
  }
  else
  {
    result = sub_213ADACE4(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
    *(_QWORD *)(v2 + 24) = v4;
    *(_QWORD *)(v2 + 32) = v3;
    *(_BYTE *)(v2 + 40) = v5;
  }
  return result;
}

uint64_t _s10ProductKit17HeadphonePairing2V13ConfigurationV20engravingInformationAA27PersonalizationAssetManagerC0I4InfoOSgvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_213ADACE4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v4;
  return result;
}

uint64_t (*HeadphonePairing2.Configuration.personalizationAssetInfo.modify())()
{
  return nullsub_1;
}

unsigned __int8 *HeadphonePairing2.Configuration.init(hardwareModel:color:timeout:)@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v4;
  char v5;

  v4 = *result;
  *(_QWORD *)a3 = a2;
  *(double *)(a3 + 8) = a4;
  *(_BYTE *)(a3 + 16) = v4;
  if (v4 == 4)
    v5 = 3;
  else
    v5 = 25;
  *(_BYTE *)(a3 + 17) = v5;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = -1;
  return result;
}

void sub_213B09F60(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t HeadphonePairing2.AssetRequest.init(configuration:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((_WORD *)a1 + 8);
  v6 = a1[3];
  v7 = a1[4];
  v8 = *((_BYTE *)a1 + 40);
  v9 = type metadata accessor for MobileAssetManager();
  v10 = swift_allocObject();
  sub_213ADAE48(v6, v7, v8);
  swift_defaultActor_initialize();
  *(_BYTE *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 120) = &unk_254D1AEB0;
  *(_QWORD *)(v10 + 128) = 0;
  *(_QWORD *)(v10 + 136) = &unk_254D1AEA8;
  *(_QWORD *)(v10 + 144) = 0;
  v15 = v9;
  v16 = &off_24D0BF990;
  sub_213ADACE4(v6, v7, v8);
  *(_QWORD *)&v14 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D19AE8);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = v3;
  *(_QWORD *)(v11 + 56) = v4;
  *(_WORD *)(v11 + 64) = v5;
  *(_QWORD *)(v11 + 72) = v6;
  *(_QWORD *)(v11 + 80) = v7;
  *(_BYTE *)(v11 + 88) = v8;
  *(_QWORD *)(v11 + 16) = 0;
  *(_BYTE *)(v11 + 24) = 1;
  *(_QWORD *)(v11 + 32) = 0;
  sub_213AE1104(&v14, v11 + 96);
  v12 = *(_QWORD *)(v11 + 32);
  *(_QWORD *)(v11 + 32) = sub_213B0A098;
  *(_QWORD *)(v11 + 40) = 0;
  result = sub_213AD529C(v12);
  *a2 = v11;
  return result;
}

id sub_213B0A098@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  id result;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = (void *)a1[3];
  sub_213AD5300(*a1, v4);
  result = v6;
  v8 = 2;
  if (v5 != 1)
    v8 = v5;
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v8;
  a2[3] = (uint64_t)v6;
  return result;
}

uint64_t HeadphonePairing2.AssetRequest.assets()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_254D18E98 + dword_254D18E98);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_213ADB080;
  return v3();
}

id sub_213B0A14C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = (void *)v3[2];
  v5 = v3[3];
  v6 = v3[4];
  v7 = (void *)v3[5];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return sub_213AD6384(v4, v5, v6, v7);
}

void sub_213B0A19C(uint64_t a1, _QWORD *a2)
{
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v7 = v6[2];
  v8 = v6[3];
  v9 = v6[4];
  v10 = (void *)v6[5];
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = v4;
  v6[5] = v5;
  sub_213AD6384(v2, v3, v4, v5);
  sub_213AD5344(v7, v8, v9, v10);
}

id sub_213B0A234@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;

  swift_beginAccess();
  v3 = (void *)v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = (void *)v1[5];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return sub_213AD6384(v3, v4, v5, v6);
}

__n128 sub_213B0A280(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  __n128 result;
  __int128 v9;

  v2 = *a1;
  v9 = *(_OWORD *)(a1 + 1);
  v3 = a1[3];
  swift_beginAccess();
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (void *)v1[5];
  v1[2] = v2;
  *(_OWORD *)(v1 + 3) = v9;
  v1[5] = v3;
  sub_213AD5344(v4, v5, v6, v7);
  return result;
}

uint64_t (*sub_213B0A2E8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_213B0A324()
{
  strcpy((char *)&qword_254D19AD8, "ProxCard_loop");
  unk_254D19AE6 = -4864;
}

ProductKit::HeadphonePairing2::Assets::AdjustedImageIdentifier_optional __swiftcall HeadphonePairing2.Assets.AdjustedImageIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ProductKit::HeadphonePairing2::Assets::AdjustedImageIdentifier_optional)sub_213B0A570(v1);
}

void *static HeadphonePairing2.Assets.AdjustedImageIdentifier.allCases.getter()
{
  return &unk_24D0BA7D0;
}

uint64_t HeadphonePairing2.Assets.AdjustedImageIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213B0A3A4 + 4 * byte_213B303C0[*v0]))(0xD00000000000001CLL, 0x8000000213B33660);
}

uint64_t sub_213B0A3A4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 3;
}

uint64_t sub_213B0A3E8()
{
  return 0x64726143786F7250;
}

uint64_t sub_213B0A404()
{
  return 0x64726143786F7250;
}

void sub_213B0A424(char *a1)
{
  sub_213ADA0E4(*a1);
}

void sub_213B0A430()
{
  char *v0;

  sub_213B17CA8(*v0);
}

void sub_213B0A438(uint64_t a1)
{
  char *v1;

  sub_213B17F18(a1, *v1);
}

void sub_213B0A440(uint64_t a1)
{
  char *v1;

  sub_213B186E0(a1, *v1);
}

ProductKit::HeadphonePairing2::Assets::AdjustedImageIdentifier_optional sub_213B0A448(Swift::String *a1)
{
  return HeadphonePairing2.Assets.AdjustedImageIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B0A454@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HeadphonePairing2.Assets.AdjustedImageIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B0A478(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA7D0;
}

uint64_t HeadphonePairing2.Assets.FileIdentifier.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static HeadphonePairing2.Assets.FileIdentifier.allCases.getter()
{
  return &unk_24D0BA830;
}

unint64_t HeadphonePairing2.Assets.FileIdentifier.rawValue.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_213B0A504@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_213B0A554(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA890;
}

ProductKit::HeadphonePairing2::Assets::VideoIdentifier_optional __swiftcall HeadphonePairing2.Assets.VideoIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ProductKit::HeadphonePairing2::Assets::VideoIdentifier_optional)sub_213B0A570(v1);
}

uint64_t sub_213B0A570@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  v4 = 6;
  if (v2 < 6)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static HeadphonePairing2.Assets.VideoIdentifier.allCases.getter()
{
  return &unk_24D0BA968;
}

uint64_t HeadphonePairing2.Assets.VideoIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213B0A608 + 4 * byte_213B303C6[*v0]))(0xD000000000000017, 0x8000000213B335F0);
}

unint64_t sub_213B0A608()
{
  return 0xD000000000000015;
}

uint64_t sub_213B0A640@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

void sub_213B0A650()
{
  JUMPOUT(0x213B0A65CLL);
}

ProductKit::HeadphonePairing2::Assets::VideoIdentifier_optional sub_213B0A668(Swift::String *a1)
{
  return HeadphonePairing2.Assets.VideoIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B0A674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HeadphonePairing2.Assets.VideoIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B0A698(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BA968;
}

ProductKit::HeadphonePairing2::Assets::ViewIdentifier_optional __swiftcall HeadphonePairing2.Assets.ViewIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ProductKit::HeadphonePairing2::Assets::ViewIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static HeadphonePairing2.Assets.ViewIdentifier.allCases.getter()
{
  return &unk_24D0BA9E0;
}

unint64_t HeadphonePairing2.Assets.ViewIdentifier.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0xD000000000000011;
}

ProductKit::HeadphonePairing2::Assets::ViewIdentifier_optional sub_213B0A750(Swift::String *a1)
{
  return HeadphonePairing2.Assets.ViewIdentifier.init(rawValue:)(*a1);
}

void sub_213B0A75C(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAA08;
}

ProductKit::HeadphonePairing2::Assets::VideoViewIdentifier_optional __swiftcall HeadphonePairing2.Assets.VideoViewIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProductKit::HeadphonePairing2::Assets::VideoViewIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213B2C3E0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static HeadphonePairing2.Assets.VideoViewIdentifier.allCases.getter()
{
  return &unk_24D0BAA98;
}

uint64_t HeadphonePairing2.Assets.VideoViewIdentifier.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aIntro_6[8 * *v0];
}

ProductKit::HeadphonePairing2::Assets::VideoViewIdentifier_optional sub_213B0A7F4(Swift::String *a1)
{
  return HeadphonePairing2.Assets.VideoViewIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_213B0A800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HeadphonePairing2.Assets.VideoViewIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B0A824(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAAC0;
}

void sub_213B0A83C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X9 }
}

uint64_t sub_213B0A8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t result;

  v6 = v3 + 3;
  v7 = 0x8000000213B33680;
  v8 = *(void **)(v1 + 48);
  *(_QWORD *)(v5 - 128) = v3 + 3;
  *(_QWORD *)(v5 - 120) = 0x8000000213B33680;
  *(_QWORD *)(v5 - 112) = v8;
  *(_QWORD *)(v5 - 104) = 6778480;
  *(_QWORD *)(v5 - 96) = 0xE300000000000000;
  *(_BYTE *)(v5 - 88) = 1;
  v9 = v8;
  GenericAsset.fileURL.getter(v2);
  v10 = sub_213B2BBD0();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v2, 1, v10);
  sub_213AD6270(v2, &qword_254D188E0);
  if (v11 == 1)
  {
    *(_BYTE *)(v5 - 128) = v4;
    _s10ProductKit17HeadphonePairing2V6AssetsC16fallbackFilenameySSSgAE23AdjustedImageIdentifierOFZ_0(v5 - 128);
    if (v13)
    {
      v14 = v12;
      v15 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v14;
      v7 = v15;
    }
  }
  v16 = v0 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  swift_bridgeObjectRetain();
  v17 = v9;
  swift_bridgeObjectRetain();
  sub_213B15540(v16);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v0 = v6;
  *(_QWORD *)(v0 + 8) = v7;
  *(_QWORD *)(v0 + 16) = v17;
  *(_QWORD *)(v0 + 24) = 6778480;
  *(_QWORD *)(v0 + 32) = 0xE300000000000000;
  *(_BYTE *)(v0 + 40) = 1;
  return result;
}

id sub_213B0AA6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 48);
  *(_QWORD *)a1 = 0xD000000000000011;
  *(_QWORD *)(a1 + 8) = 0x8000000213B336C0;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = 0x7473696C70;
  *(_QWORD *)(a1 + 32) = 0xE500000000000000;
  *(_BYTE *)(a1 + 40) = 0;
  return v2;
}

void sub_213B0AAAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X9 }
}

uint64_t sub_213B0AB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t result;

  v5 = 0x8000000213B336E0;
  v6 = 0xD000000000000015;
  v7 = *(void **)(v1 + 48);
  *(_QWORD *)(v4 - 128) = 0xD000000000000015;
  *(_QWORD *)(v4 - 120) = 0x8000000213B336E0;
  *(_QWORD *)(v4 - 112) = v7;
  *(_QWORD *)(v4 - 104) = 7761773;
  *(_QWORD *)(v4 - 96) = 0xE300000000000000;
  *(_BYTE *)(v4 - 88) = 0;
  v8 = v7;
  GenericAsset.fileURL.getter(v2);
  v9 = sub_213B2BBD0();
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v2, 1, v9);
  sub_213AD6270(v2, &qword_254D188E0);
  if (v10 == 1)
  {
    *(_BYTE *)(v4 - 128) = v3;
    _s10ProductKit17HeadphonePairing2V6AssetsC16fallbackFilenameySSSgAE15VideoIdentifierOFZ_0(v4 - 128);
    if (v12)
    {
      v13 = v11;
      v14 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v13;
      v5 = v14;
    }
  }
  v15 = v0 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  swift_bridgeObjectRetain();
  v16 = v8;
  swift_bridgeObjectRetain();
  sub_213B15540(v15);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *(_QWORD *)v0 = v6;
  *(_QWORD *)(v0 + 8) = v5;
  *(_QWORD *)(v0 + 16) = v16;
  *(_QWORD *)(v0 + 24) = 7761773;
  *(_QWORD *)(v0 + 32) = 0xE300000000000000;
  *(_BYTE *)(v0 + 40) = 0;
  return result;
}

char *sub_213B0ACB8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  void (*v63)(_QWORD, _QWORD, _QWORD);
  uint64_t v64;
  unsigned int (*v65)(_QWORD, uint64_t, uint64_t);
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  id v73;
  unsigned int (*v74)(_QWORD, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  id v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unsigned int v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  id v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char v119;
  char v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  char *v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  char *v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  void (*v142)(char *, char *, uint64_t);
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  _QWORD *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  unsigned int (*v156)(_QWORD, uint64_t, uint64_t);
  int v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  char v170;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  MEMORY[0x24BDAC7A8](v3);
  v158 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for VideoViewConfiguration(0);
  v160 = *(_QWORD *)(v5 - 8);
  v161 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v148 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  MEMORY[0x24BDAC7A8](v139);
  v155 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v8);
  v138 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v147 = (char *)&v133 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v150 = (char *)&v133 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v137 = (uint64_t)&v133 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v146 = (uint64_t)&v133 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v144 = (uint64_t)&v133 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v154 = (uint64_t)&v133 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v149 = (uint64_t *)((char *)&v133 - v23);
  MEMORY[0x24BDAC7A8](v24);
  v159 = (uint64_t)&v133 - v25;
  v26 = type metadata accessor for AdjustedAsset();
  MEMORY[0x24BDAC7A8](v26);
  v145 = (char *)&v133 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v142 = (void (*)(char *, char *, uint64_t))((char *)&v133 - v29);
  MEMORY[0x24BDAC7A8](v30);
  v140 = (char *)&v133 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v133 - v33;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v133 - v36;
  v164 = sub_213B2BBD0();
  v38 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164);
  v136 = (char *)&v133 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v135 = (char *)&v133 - v41;
  MEMORY[0x24BDAC7A8](v42);
  v134 = (char *)&v133 - v43;
  MEMORY[0x24BDAC7A8](v44);
  v143 = (char *)&v133 - v45;
  MEMORY[0x24BDAC7A8](v46);
  v151 = (char *)&v133 - v47;
  MEMORY[0x24BDAC7A8](v48);
  v141 = (char *)&v133 - v49;
  MEMORY[0x24BDAC7A8](v50);
  v152 = (char *)&v133 - v51;
  MEMORY[0x24BDAC7A8](v52);
  v153 = (char *)&v133 - v53;
  MEMORY[0x24BDAC7A8](v54);
  v162 = v1;
  v163 = (char *)&v133 - v55;
  v157 = *a1;
  LOBYTE(v165) = 1;
  sub_213B0AAAC((uint64_t)&v165);
  v56 = *(_QWORD *)v37;
  v57 = *((_QWORD *)v37 + 1);
  v58 = (void *)*((_QWORD *)v37 + 2);
  v59 = *((_QWORD *)v37 + 3);
  v60 = *((_QWORD *)v37 + 4);
  v61 = v37[40];
  swift_bridgeObjectRetain();
  v62 = v58;
  swift_bridgeObjectRetain();
  sub_213AD53FC((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  v165 = v56;
  v166 = v57;
  v167 = v62;
  v168 = v59;
  v169 = v60;
  v170 = v61;
  v63 = (void (*)(_QWORD, _QWORD, _QWORD))v159;
  GenericAsset.fileURL.getter(v159);
  swift_bridgeObjectRelease();

  v64 = v164;
  swift_bridgeObjectRelease();
  v65 = *(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v38 + 48);
  if (v65(v63, 1, v64) != 1)
  {
    v66 = *(_QWORD **)(v38 + 32);
    ((void (*)(char *, _QWORD, uint64_t))v66)(v163, v63, v64);
    LOBYTE(v165) = 0;
    sub_213B0AAAC((uint64_t)&v165);
    v67 = *(_QWORD *)v34;
    v68 = *((_QWORD *)v34 + 1);
    v159 = v38;
    v69 = (void *)*((_QWORD *)v34 + 2);
    v70 = *((_QWORD *)v34 + 3);
    v71 = *((_QWORD *)v34 + 4);
    v156 = v65;
    v72 = v34[40];
    swift_bridgeObjectRetain();
    v73 = v69;
    swift_bridgeObjectRetain();
    sub_213AD53FC((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v165 = v67;
    v166 = v68;
    v167 = v73;
    v168 = v70;
    v169 = v71;
    v170 = v72;
    v74 = v156;
    v63 = (void (*)(_QWORD, _QWORD, _QWORD))v149;
    GenericAsset.fileURL.getter((uint64_t)v149);
    swift_bridgeObjectRelease();

    v75 = v164;
    swift_bridgeObjectRelease();
    if (v74(v63, 1, v75) == 1)
    {
      (*(void (**)(char *, uint64_t))(v159 + 8))(v163, v75);
      goto LABEL_4;
    }
    ((void (*)(char *, _QWORD, uint64_t))v66)(v153, v63, v75);
    LOBYTE(v165) = 2;
    v84 = (uint64_t)v140;
    v149 = v66;
    sub_213B0AAAC((uint64_t)&v165);
    v85 = *(_QWORD *)v84;
    v86 = *(_QWORD *)(v84 + 8);
    v87 = *(void **)(v84 + 16);
    v88 = *(_QWORD *)(v84 + 24);
    v89 = *(_QWORD *)(v84 + 32);
    v90 = *(_BYTE *)(v84 + 40);
    swift_bridgeObjectRetain();
    v91 = v87;
    swift_bridgeObjectRetain();
    sub_213AD53FC(v84, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v165 = v85;
    v166 = v86;
    v167 = v91;
    v168 = v88;
    v169 = v89;
    v170 = v90;
    GenericAsset.fileURL.getter(v154);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    LOBYTE(v165) = 3;
    v92 = (uint64_t)v142;
    sub_213B0AAAC((uint64_t)&v165);
    v93 = *(_QWORD *)v92;
    v94 = *(_QWORD *)(v92 + 8);
    v95 = *(void **)(v92 + 16);
    v96 = *(_QWORD *)(v92 + 24);
    v97 = *(_QWORD *)(v92 + 32);
    v98 = *(_BYTE *)(v92 + 40);
    swift_bridgeObjectRetain();
    v99 = v95;
    swift_bridgeObjectRetain();
    sub_213AD53FC(v92, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v165 = v93;
    v166 = v94;
    v167 = v99;
    v168 = v96;
    v169 = v97;
    v170 = v98;
    v100 = v144;
    GenericAsset.fileURL.getter(v144);
    swift_bridgeObjectRelease();

    v101 = v164;
    swift_bridgeObjectRelease();
    v102 = v159;
    v103 = v141;
    v142 = *(void (**)(char *, char *, uint64_t))(v159 + 16);
    v142(v141, v163, v101);
    v104 = v156(v100, 1, v101);
    v105 = v102;
    v106 = (void (*)(char *, uint64_t, uint64_t))v149;
    if (v104 == 1)
    {
      ((void (*)(char *, char *, uint64_t))v149)(v152, v103, v101);
      sub_213AD6270(v100, &qword_254D188E0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v105 + 8))(v103, v101);
      v106(v152, v100, v101);
    }
    LOBYTE(v165) = 4;
    v107 = (uint64_t)v145;
    sub_213B0AAAC((uint64_t)&v165);
    v108 = *(_QWORD *)v107;
    v109 = *(_QWORD *)(v107 + 8);
    v110 = *(void **)(v107 + 16);
    v111 = *(_QWORD *)(v107 + 24);
    v112 = *(_QWORD *)(v107 + 32);
    v113 = *(_BYTE *)(v107 + 40);
    swift_bridgeObjectRetain();
    v114 = v110;
    swift_bridgeObjectRetain();
    sub_213AD53FC(v107, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
    v165 = v108;
    v166 = v109;
    v167 = v114;
    v168 = v111;
    v169 = v112;
    v170 = v113;
    v115 = v146;
    GenericAsset.fileURL.getter(v146);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v116 = v143;
    v142(v143, v163, v101);
    if (v156(v115, 1, v101) == 1)
    {
      ((void (*)(char *, char *, uint64_t))v149)(v151, v116, v101);
      sub_213AD6270(v115, &qword_254D188E0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v159 + 8))(v116, v101);
      ((void (*)(char *, uint64_t, uint64_t))v149)(v151, v115, v101);
    }
    v117 = v162;
    v118 = v155;
    if (v157)
    {
      v119 = sub_213B2C47C();
      swift_bridgeObjectRelease();
      if ((v119 & 1) == 0)
      {
        if (v157 == 2)
        {
          v120 = sub_213B2C47C();
          swift_bridgeObjectRelease();
          if ((v120 & 1) == 0)
          {
            v121 = v118;
            v122 = v151;
LABEL_26:
            v142(v121, v122, v101);
            goto LABEL_27;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v121 = v118;
        v122 = v152;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v123 = v137;
    sub_213B0D074(v154, v137);
    if (v156(v123, 1, v101) == 1)
    {
      sub_213AD6270(v123, &qword_254D188E0);
      v124 = &v118[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48)];
      v125 = v142;
      v142(v118, v163, v101);
      v125(v124, v153, v101);
    }
    else
    {
      v126 = v134;
      v127 = v117;
      v128 = (void (*)(char *, char *, uint64_t))v149;
      ((void (*)(char *, uint64_t, uint64_t))v149)(v134, v123, v101);
      v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v130 = &v118[*(int *)(v129 + 48)];
      v131 = &v118[*(int *)(v129 + 64)];
      v132 = v142;
      v142(v118, v163, v101);
      v132(v130, v153, v101);
      v128(v131, v126, v101);
      v117 = v127;
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    __asm { BR              X11 }
  }
LABEL_4:
  sub_213AD6270((uint64_t)v63, &qword_254D188E0);
  v76 = (uint64_t)v158;
  v77 = v161;
  if (qword_254D183F0 != -1)
    swift_once();
  v78 = sub_213B2BCF0();
  __swift_project_value_buffer(v78, (uint64_t)qword_254D19AC0);
  v79 = sub_213B2BCD8();
  v80 = sub_213B2C170();
  if (os_log_type_enabled(v79, v80))
  {
    v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v81 = 0;
    _os_log_impl(&dword_213AC8000, v79, v80, "Could not find asset files", v81, 2u);
    MEMORY[0x2199BD0E8](v81, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56))(v76, 1, 1, v77);
  v82 = objc_allocWithZone((Class)type metadata accessor for AdjustedVideoView());
  return sub_213B1B370(v76);
}

id sub_213B0C004(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _BYTE v16[14];
  char v17;
  char v18;

  v3 = type metadata accessor for AdjustedAsset();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v16[-v7];
  if ((*a1 & 1) != 0)
  {
    v18 = 1;
    v9 = &v18;
  }
  else
  {
    v17 = 0;
    v9 = &v17;
  }
  sub_213B0A83C((uint64_t)v9);
  v10 = *(_QWORD *)(v1 + 64);
  sub_213AD52BC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  v11 = objc_allocWithZone((Class)type metadata accessor for PersonalizedImageView());
  v12 = sub_213B1A834((uint64_t)v5, 87.0, 24.0, 68.0);
  v13 = v12;
  if (v10)
  {
    v14 = v12;
    sub_213B0C8F8(v14, v10, (uint64_t (*)(_QWORD))type metadata accessor for PersonalizedImageView, (uint64_t)&off_24D0BF390, sub_213B1ABA4);

  }
  sub_213AD53FC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AdjustedAsset);
  return v13;
}

uint64_t HeadphonePairing2.Assets.deinit()
{
  uint64_t v0;

  sub_213AD5344(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));

  swift_release();
  return v0;
}

uint64_t HeadphonePairing2.Assets.__deallocating_deinit()
{
  uint64_t v0;

  sub_213AD5344(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_213B0C1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  sub_213B2C02C();
  v8[10] = sub_213B2C020();
  sub_213B2BFE4();
  return swift_task_switch();
}

uint64_t sub_213B0C214()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v1 = *(void **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD **)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  swift_release();
  swift_beginAccess();
  v6 = v5[2];
  v7 = v5[3];
  v8 = v5[4];
  v9 = (void *)v5[5];
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v3;
  v5[5] = v1;
  sub_213AD5300(v4, v2);
  v10 = v1;
  sub_213AD5344(v6, v7, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B0C2B8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v9 = (void *)a1[3];
  v11 = sub_213B2C050();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_213B2C02C();
  swift_retain();
  sub_213AD5300(v7, v8);
  v12 = v9;
  v13 = sub_213B2C020();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v6;
  v14[5] = v7;
  v14[6] = v8;
  v14[7] = v10;
  v14[8] = v9;
  sub_213AE4204((uint64_t)v5, (uint64_t)asc_254D19CB8, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_213B0C3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 v28;
  uint64_t v29;
  _UNKNOWN **v30;
  _BYTE v31[24];
  uint64_t v32;
  _QWORD v33[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AirTagPairing2.Assets();
  v33[3] = v7;
  v33[4] = &off_24D0BBEE8;
  v33[0] = a1;
  if (*(_BYTE *)(a2 + 48) == 1)
  {
    v8 = *(void **)(a2 + 88);
    if (v8 == (void *)1)
    {
      swift_retain();
    }
    else
    {
      v21 = *(_QWORD *)(a2 + 72);
      v20 = *(_QWORD *)(a2 + 80);
      v22 = *(void **)(a2 + 64);
      v23 = sub_213B2C050();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
      sub_213B2C02C();
      swift_retain_n();
      sub_213AD6384(v22, v21, v20, v8);
      v24 = sub_213B2C020();
      v25 = (_QWORD *)swift_allocObject();
      v26 = MEMORY[0x24BEE6930];
      v25[2] = v24;
      v25[3] = v26;
      v25[4] = a1;
      v25[5] = v22;
      v25[6] = v21;
      v25[7] = v20;
      v25[8] = v8;
      sub_213AE4204((uint64_t)v6, (uint64_t)&unk_254D18DC0, (uint64_t)v25);
      swift_release();
    }
  }
  else
  {
    v9 = v7;
    sub_213AD8B28((uint64_t)v33, (uint64_t)v31);
    v10 = (_QWORD *)(a2 + 56);
    swift_beginAccess();
    v11 = *(_QWORD **)(a2 + 56);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 56) = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_213AE111C(0, v11[2] + 1, 1, v11);
      *v10 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_213AE111C((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *v10 = v11;
    }
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
    MEMORY[0x24BDAC7A8](v15);
    v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    v19 = *v17;
    v29 = v9;
    v30 = &off_24D0BBEE8;
    *(_QWORD *)&v28 = v19;
    v11[2] = v14 + 1;
    sub_213AE1104(&v28, (uint64_t)&v11[5 * v14 + 4]);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    swift_endAccess();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
}

uint64_t sub_213B0C654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  _UNKNOWN **v31;
  _BYTE v32[24];
  uint64_t v33;
  _QWORD v34[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D19090);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HeadphonePairing2.Assets();
  v34[3] = v7;
  v34[4] = &off_24D0BE0A0;
  v34[0] = a1;
  if (*(_BYTE *)(a2 + 48) == 1)
  {
    v8 = *(void **)(a2 + 88);
    if (v8 == (void *)1)
    {
      swift_retain();
    }
    else
    {
      v22 = *(_QWORD *)(a2 + 72);
      v21 = *(_QWORD *)(a2 + 80);
      v23 = *(void **)(a2 + 64);
      v24 = sub_213B2C050();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
      sub_213B2C02C();
      swift_retain_n();
      sub_213AD6384(v23, v22, v21, v8);
      v25 = sub_213B2C020();
      v26 = (_QWORD *)swift_allocObject();
      v27 = MEMORY[0x24BEE6930];
      v26[2] = v25;
      v26[3] = v27;
      v26[4] = a1;
      v26[5] = v23;
      v26[6] = v22;
      v26[7] = v21;
      v26[8] = v8;
      sub_213AE4204((uint64_t)v6, (uint64_t)asc_254D19CC0, (uint64_t)v26);
      swift_release();
    }
  }
  else
  {
    v9 = v7;
    sub_213AD8B28((uint64_t)v34, (uint64_t)v32);
    v10 = (_QWORD *)(a2 + 56);
    swift_beginAccess();
    v11 = *(_QWORD **)(a2 + 56);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 56) = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_213AE111C(0, v11[2] + 1, 1, v11);
      *v10 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_213AE111C((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *v10 = v11;
    }
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
    v16 = MEMORY[0x24BDAC7A8](v15);
    v18 = (uint64_t *)((char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    v20 = *v18;
    v30 = v9;
    v31 = &off_24D0BE0A0;
    *(_QWORD *)&v29 = v20;
    v11[2] = v14 + 1;
    sub_213AE1104(&v29, (uint64_t)&v11[5 * v14 + 4]);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
    swift_endAccess();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
}

uint64_t sub_213B0C8DC(void *a1, uint64_t a2)
{
  return sub_213B0C8F8(a1, a2, type metadata accessor for PersonalizedVideoView, (uint64_t)&off_24D0BBAC0, (void (*)(__int128 *))sub_213AD0B14);
}

uint64_t sub_213B0C8F8(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, void (*a5)(__int128 *))
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v9 = a3(0);
  v33[3] = v9;
  v33[4] = a4;
  v33[0] = a1;
  if (*(_BYTE *)(a2 + 48) == 1)
  {
    v10 = *(_QWORD *)(a2 + 88);
    if (v10 == 1)
    {
      v11 = a1;
    }
    else
    {
      v24 = *(_QWORD *)(a2 + 80);
      v30 = *(_OWORD *)(a2 + 64);
      v31 = v24;
      v32 = v10;
      v25 = a1;
      a5(&v30);
    }
  }
  else
  {
    v12 = v9;
    sub_213AD8B28((uint64_t)v33, (uint64_t)&v30);
    v13 = (_QWORD *)(a2 + 56);
    swift_beginAccess();
    v14 = *(_QWORD **)(a2 + 56);
    v15 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a2 + 56) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_213AE111C(0, v14[2] + 1, 1, v14);
      *v13 = v14;
    }
    v18 = v14[2];
    v17 = v14[3];
    if (v18 >= v17 >> 1)
    {
      v14 = sub_213AE111C((_QWORD *)(v17 > 1), v18 + 1, 1, v14);
      *v13 = v14;
    }
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v30, v32);
    MEMORY[0x24BDAC7A8](v19);
    v21 = (uint64_t *)((char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v22 + 16))(v21);
    v23 = *v21;
    v28 = v12;
    v29 = a4;
    *(_QWORD *)&v27 = v23;
    v14[2] = v18 + 1;
    sub_213AE1104(&v27, (uint64_t)&v14[5 * v18 + 4]);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v30);
    swift_endAccess();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
}

void _s10ProductKit17HeadphonePairing2V6AssetsC16fallbackFilenameySSSgAE23AdjustedImageIdentifierOFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_213B0CB28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

void _s10ProductKit17HeadphonePairing2V6AssetsC16fallbackFilenameySSSgAE15VideoIdentifierOFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213B0CE40()
{
  char v1;
  uint64_t v2;

  v1 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
    __asm { BR              X10 }
  if (qword_254D183F8 != -1)
    swift_once();
  v2 = qword_254D19AD8;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_213B0D074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B0D0BC(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

unint64_t sub_213B0D0C8()
{
  unint64_t result;

  result = qword_254D19B40;
  if (!qword_254D19B40)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing2.Assets.AdjustedImageIdentifier, &type metadata for HeadphonePairing2.Assets.AdjustedImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19B40);
  }
  return result;
}

uint64_t sub_213B0D10C()
{
  return sub_213AE1FE0(&qword_254D19B48, &qword_254D19B50);
}

unint64_t sub_213B0D134()
{
  unint64_t result;

  result = qword_254D19B58;
  if (!qword_254D19B58)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing2.Assets.FileIdentifier, &type metadata for HeadphonePairing2.Assets.FileIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19B58);
  }
  return result;
}

uint64_t sub_213B0D178()
{
  return sub_213AE1FE0(&qword_254D19B60, &qword_254D19B68);
}

unint64_t sub_213B0D1A0()
{
  unint64_t result;

  result = qword_254D19B70;
  if (!qword_254D19B70)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing2.Assets.VideoIdentifier, &type metadata for HeadphonePairing2.Assets.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19B70);
  }
  return result;
}

uint64_t sub_213B0D1E4()
{
  return sub_213AE1FE0(&qword_254D19B78, &qword_254D19B80);
}

unint64_t sub_213B0D20C()
{
  unint64_t result;

  result = qword_254D19B88;
  if (!qword_254D19B88)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing2.Assets.ViewIdentifier, &type metadata for HeadphonePairing2.Assets.ViewIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19B88);
  }
  return result;
}

uint64_t sub_213B0D250()
{
  return sub_213AE1FE0(&qword_254D19B90, &qword_254D19B98);
}

unint64_t sub_213B0D278()
{
  unint64_t result;

  result = qword_254D19BA0;
  if (!qword_254D19BA0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphonePairing2.Assets.VideoViewIdentifier, &type metadata for HeadphonePairing2.Assets.VideoViewIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D19BA0);
  }
  return result;
}

uint64_t sub_213B0D2BC()
{
  return sub_213AE1FE0(&qword_254D19BA8, &qword_254D19BB0);
}

uint64_t sub_213B0D2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v2;
  v4 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a2 + 16) = v4;
  return sub_213ADAE48(v3, v2, v4);
}

ValueMetadata *type metadata accessor for HeadphonePairing2()
{
  return &type metadata for HeadphonePairing2;
}

uint64_t initializeWithCopy for HeadphonePairing2.Configuration(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;
  uint64_t v5;
  unint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 == 255)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  }
  else
  {
    v4 = v3 & 1;
    v5 = *(_QWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 32);
    sub_213ADAC20(v5, v6, v3 & 1);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for HeadphonePairing2.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  int v5;
  char v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v3 = a1 + 24;
  v4 = (__int128 *)(a2 + 24);
  v5 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v5 == 255)
    {
      v7 = *v4;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_OWORD *)v3 = v7;
    }
    else
    {
      v14 = v5 & 1;
      v15 = *(_QWORD *)(a2 + 24);
      v16 = *(_QWORD *)(a2 + 32);
      sub_213ADAC20(v15, v16, v5 & 1);
      *(_QWORD *)(a1 + 24) = v15;
      *(_QWORD *)(a1 + 32) = v16;
      *(_BYTE *)(a1 + 40) = v14;
    }
  }
  else if (v5 == 255)
  {
    sub_213AE2208(a1 + 24);
    v6 = *((_BYTE *)v4 + 16);
    *(_OWORD *)v3 = *v4;
    *(_BYTE *)(v3 + 16) = v6;
  }
  else
  {
    v8 = v5 & 1;
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    sub_213ADAC20(v9, v10, v5 & 1);
    v11 = *(_QWORD *)(a1 + 24);
    v12 = *(_QWORD *)(a1 + 32);
    v13 = *(_BYTE *)(a1 + 40);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_BYTE *)(a1 + 40) = v8;
    sub_213ADACFC(v11, v12, v13);
  }
  return a1;
}

uint64_t assignWithTake for HeadphonePairing2.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v3 = a1 + 24;
  v4 = a2 + 24;
  v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 != 255)
  {
    v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 != 255)
    {
      v7 = *(_QWORD *)(a1 + 24);
      v8 = *(_QWORD *)(a1 + 32);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
      *(_BYTE *)(a1 + 40) = v6 & 1;
      sub_213ADACFC(v7, v8, v5 & 1);
      return a1;
    }
    sub_213AE2208(a1 + 24);
  }
  *(_OWORD *)v3 = *(_OWORD *)v4;
  *(_BYTE *)(v3 + 16) = *(_BYTE *)(v4 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for HeadphonePairing2.Configuration()
{
  return &type metadata for HeadphonePairing2.Configuration;
}

ValueMetadata *type metadata accessor for HeadphonePairing2.AssetRequest()
{
  return &type metadata for HeadphonePairing2.AssetRequest;
}

uint64_t type metadata accessor for HeadphonePairing2.Assets()
{
  return objc_opt_self();
}

uint64_t method lookup function for HeadphonePairing2.Assets()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.personalizationAsset.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.personalizationAsset.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.personalizationAsset.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.file(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.video(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.videoView(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.view(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

ValueMetadata *type metadata accessor for HeadphonePairing2.Assets.AdjustedImageIdentifier()
{
  return &type metadata for HeadphonePairing2.Assets.AdjustedImageIdentifier;
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing2.Assets.FileIdentifier(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B0D620 + 4 * byte_213B30402[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B0D640 + 4 * byte_213B30407[v4]))();
}

_BYTE *sub_213B0D620(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B0D640(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B0D648(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B0D650(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B0D658(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B0D660(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing2.Assets.FileIdentifier()
{
  return &type metadata for HeadphonePairing2.Assets.FileIdentifier;
}

uint64_t _s10ProductKit17HeadphonePairing2V6AssetsC23AdjustedImageIdentifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_213B0D6C8 + 4 * byte_213B30411[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_213B0D6FC + 4 * byte_213B3040C[v4]))();
}

uint64_t sub_213B0D6FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B0D704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B0D70CLL);
  return result;
}

uint64_t sub_213B0D718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B0D720);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_213B0D724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B0D72C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing2.Assets.VideoIdentifier()
{
  return &type metadata for HeadphonePairing2.Assets.VideoIdentifier;
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing2.Assets.ViewIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213B0D794 + 4 * byte_213B3041B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213B0D7C8 + 4 * byte_213B30416[v4]))();
}

uint64_t sub_213B0D7C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B0D7D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B0D7D8);
  return result;
}

uint64_t sub_213B0D7E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B0D7ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213B0D7F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B0D7F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing2.Assets.ViewIdentifier()
{
  return &type metadata for HeadphonePairing2.Assets.ViewIdentifier;
}

uint64_t storeEnumTagSinglePayload for HeadphonePairing2.Assets.VideoViewIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213B0D860 + 4 * byte_213B30425[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213B0D894 + 4 * byte_213B30420[v4]))();
}

uint64_t sub_213B0D894(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B0D89C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B0D8A4);
  return result;
}

uint64_t sub_213B0D8B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B0D8B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213B0D8BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B0D8C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePairing2.Assets.VideoViewIdentifier()
{
  return &type metadata for HeadphonePairing2.Assets.VideoViewIdentifier;
}

uint64_t sub_213B0D8E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_213ADA044;
  return sub_213B0C1A0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_213AD5374(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));

  return swift_deallocObject();
}

void GenericAsset.fileURL.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  int v4;
  id v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(void **)(v1 + 16);
  v4 = *(unsigned __int8 *)(v1 + 40);
  v5 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v5, sel_scale);
  v7 = v6;

  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  if (v4)
  {
    sub_213B2BEAC();
    sub_213B2C458();
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    sub_213B2BEAC();
  }
  v8 = (void *)sub_213B2BDF8();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_213B2BDF8();
  v10 = objc_msgSend(v3, sel_URLForResource_withExtension_, v8, v9);

  if (v10)
  {
    sub_213B2BBA0();

    v11 = sub_213B2BBD0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  else
  {
    v12 = sub_213B2BBD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

uint64_t GenericAsset.fileName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id GenericAsset.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

unint64_t GenericAsset.description.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  v2 = v1;
  v3 = objc_msgSend(v2, sel_description);
  sub_213B2BE1C();

  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  return 0xD000000000000017;
}

uint64_t AdjustedAsset.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  id v7;

  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  v7 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AdjustedAsset.adjustmentURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdjustedAsset() + 20);
  v4 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AdjustedAsset()
{
  uint64_t result;

  result = qword_254D19D20;
  if (!qword_254D19D20)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t AdjustedAsset.description.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  GenericAsset.description.getter();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  return 0xD000000000000015;
}

uint64_t destroy for GenericAsset(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenericAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenericAsset(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for GenericAsset(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenericAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericAsset()
{
  return &type metadata for GenericAsset;
}

_QWORD *initializeBufferWithCopyOfBuffer for AdjustedAsset(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v7 = (void *)a2[2];
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = a2[4];
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t)a2 + v8;
    v10 = a1 + v8;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v11 = sub_213B2BBD0();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v13 = v7;
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for AdjustedAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for AdjustedAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v10 = sub_213B2BBD0();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v12 = v6;
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t assignWithCopy for AdjustedAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *initializeWithTake for AdjustedAsset(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_213B2BBD0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AdjustedAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdjustedAsset()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B0E42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213B2BBD0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AdjustedAsset()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B0E4B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_213B2BBD0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_213B0E528()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213B2BBD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FileProviding.file(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of VideoProviding.video(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void **sub_213B0E5B4(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_213B2BBD0();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_213B0E648(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_213B2BBD0();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void **sub_213B0E690(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_213B2BBD0();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_213B0E6FC(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_213B2BBD0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_QWORD *sub_213B0E76C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_213B2BBD0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_213B0E7C8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_213B2BBD0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_213B0E834()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B0E840(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213B2BBD0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_213B0E8BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_213B0E8C8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_213B2BBD0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s19ParentDirectoryCRUDVMa()
{
  uint64_t result;

  result = qword_254D19DC8;
  if (!qword_254D19DC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213B0E978()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213B2BBD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213B0E9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19D58);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19D58);
  if (qword_254D18480 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_213B0EA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  unsigned int v29;
  id v30;
  id v31;
  uint64_t v32;
  _QWORD v33[3];
  id v34;
  uint64_t v35;
  char v36;
  id v37[2];

  v2 = v0;
  v37[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = _s19ParentDirectoryCRUDVMa();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v33 - v7;
  v36 = 0;
  v34 = (id)objc_opt_self();
  v9 = objc_msgSend(v34, sel_defaultManager);
  sub_213B2BBB8();
  v10 = (void *)sub_213B2BDF8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_fileExistsAtPath_isDirectory_, v10, &v36);

  if (v11)
  {
    if ((v36 & 1) != 0)
      return;
    if (qword_254D18400 != -1)
      swift_once();
    v12 = sub_213B2BCF0();
    __swift_project_value_buffer(v12, (uint64_t)qword_254D19D58);
    sub_213AFC9A0(v2, (uint64_t)v8);
    v13 = sub_213B2BCD8();
    v14 = sub_213B2C164();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = (void *)swift_slowAlloc();
      v37[0] = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = sub_213B2BBB8();
      v35 = sub_213AE1780(v17, v18, (uint64_t *)v37);
      sub_213B2C254();
      swift_bridgeObjectRelease();
      sub_213B0F0D8((uint64_t)v8);
      _os_log_impl(&dword_213AC8000, v13, v14, "PersonalizationAssetManager.parentDirectory is a file {path: %s}", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v16, -1, -1);
      MEMORY[0x2199BD0E8](v15, -1, -1);
    }
    else
    {
      sub_213B0F0D8((uint64_t)v8);
    }

    sub_213AD62AC();
    swift_allocError();
    *(_QWORD *)v32 = 0;
    *(_QWORD *)(v32 + 8) = 0;
    *(_BYTE *)(v32 + 16) = 2;
  }
  else
  {
    if (qword_254D18400 != -1)
      swift_once();
    v19 = sub_213B2BCF0();
    __swift_project_value_buffer(v19, (uint64_t)qword_254D19D58);
    sub_213AFC9A0(v2, (uint64_t)v6);
    v20 = sub_213B2BCD8();
    v21 = sub_213B2C170();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v33[2] = v1;
      v23 = (uint8_t *)v22;
      v24 = (void *)swift_slowAlloc();
      v37[0] = v24;
      *(_DWORD *)v23 = 136315138;
      v33[1] = v23 + 4;
      v25 = sub_213B2BBB8();
      v35 = sub_213AE1780(v25, v26, (uint64_t *)v37);
      sub_213B2C254();
      swift_bridgeObjectRelease();
      sub_213B0F0D8((uint64_t)v6);
      _os_log_impl(&dword_213AC8000, v20, v21, "Creating directory: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v24, -1, -1);
      MEMORY[0x2199BD0E8](v23, -1, -1);
    }
    else
    {
      sub_213B0F0D8((uint64_t)v6);
    }

    v27 = objc_msgSend(v34, sel_defaultManager);
    v28 = (void *)sub_213B2BB7C();
    v37[0] = 0;
    v29 = objc_msgSend(v27, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v28, 1, 0, v37);

    if (v29)
    {
      v30 = v37[0];
      return;
    }
    v31 = v37[0];
    sub_213B2BB4C();

  }
  swift_willThrow();
}

uint64_t sub_213B0EF40()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  unsigned int v7;
  void *v8;
  unsigned int v9;
  uint64_t (*v10)(char *, uint64_t);
  id v11;
  id v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_213B2BBD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19ParentDirectoryCRUDVMa();
  sub_213B2BB88();
  v5 = *v0;
  sub_213B2BBB8();
  v6 = (void *)sub_213B2BDF8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if (!v7)
  {
    v10 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
    return v10(v4, v1);
  }
  v8 = (void *)sub_213B2BB7C();
  v14[0] = 0;
  v9 = objc_msgSend(v5, sel_removeItemAtURL_error_, v8, v14);

  if (v9)
  {
    v10 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
    v11 = v14[0];
    return v10(v4, v1);
  }
  v13 = v14[0];
  sub_213B2BB4C();

  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_213B0F0D8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s19ParentDirectoryCRUDVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213B0F114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  return swift_task_switch();
}

uint64_t sub_213B0F130()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  _QWORD *v14;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_254D18408 != -1)
    swift_once();
  v1 = (void *)v0[16];
  v2 = sub_213B2BCF0();
  v0[17] = __swift_project_value_buffer(v2, (uint64_t)qword_254D19E38);
  swift_bridgeObjectRetain_n();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C170();
  v6 = os_log_type_enabled(v4, v5);
  v8 = v0[15];
  v7 = (void *)v0[16];
  if (v6)
  {
    v9 = v0[14];
    v10 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    v0[12] = sub_213AE1780(v9, v8, &v18);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    v0[13] = v7;
    v11 = v7;
    sub_213B2C254();
    *v16 = v7;

    _os_log_impl(&dword_213AC8000, v4, v5, "Fetch all records START {type: %s, database: %@}", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v17, -1, -1);
    MEMORY[0x2199BD0E8](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v0[8] = MEMORY[0x24BEE4AF8];
  sub_213AD63B4(0, &qword_254D19E58);
  v12 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v13 = objc_msgSend(v12, sel_predicateWithValue_, 1);
  v0[18] = sub_213B2C1E8();
  v14 = (_QWORD *)swift_task_alloc();
  v0[19] = v14;
  *v14 = v0;
  v14[1] = sub_213B0F434;
  return sub_213B2C110();
}

uint64_t sub_213B0F434(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  *(_QWORD *)(v5 + 160) = a1;
  *(_QWORD *)(v5 + 168) = v2;
  swift_task_dealloc();
  if (!v2)

  return swift_task_switch();
}

uint64_t sub_213B0F4A8()
{
  uint64_t v0;
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = (_QWORD **)(v0 + 64);
  v42 = (_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v41 = (_QWORD *)(v0 + 88);
    v4 = (_BYTE *)(v2 + 48);
    do
    {
      v5 = (void *)*((_QWORD *)v4 - 2);
      v6 = (void *)*((_QWORD *)v4 - 1);
      if ((*v4 & 1) != 0)
      {
        *(_QWORD *)(v0 + 56) = v6;
        sub_213B0FE34(v6);
        sub_213B0FE34(v6);
        v7 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
        swift_willThrowTypedImpl();
        v8 = v7;
        sub_213B0FE34(v6);
        sub_213B0FE34(v6);
        v9 = v8;
        v10 = sub_213B2BCD8();
        v11 = sub_213B2C158();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v48 = v45;
          *(_DWORD *)v12 = 136315394;
          *v42 = v6;
          v13 = v6;
          v14 = sub_213B2BE64();
          *(_QWORD *)(v12 + 4) = sub_213AE1780(v14, v15, &v48);
          swift_bridgeObjectRelease();
          sub_213B0FE40(v6);
          sub_213B0FE40(v6);
          *(_WORD *)(v12 + 12) = 2080;
          *v41 = v9;
          sub_213AD63B4(0, &qword_254D19068);
          v16 = v9;
          v17 = sub_213B2BE64();
          *(_QWORD *)(v12 + 14) = sub_213AE1780(v17, v18, &v48);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_213AC8000, v10, v11, "Error fetching record {error: %s, reccordID: %s}", (uint8_t *)v12, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2199BD0E8](v45, -1, -1);
          v19 = v12;
          v0 = v43;
          v1 = v44;
          MEMORY[0x2199BD0E8](v19, -1, -1);

          sub_213B0FE40(v6);
          sub_213B0FE40(v6);
        }
        else
        {
          sub_213B0FE40(v6);

          sub_213B0FE40(v6);
          sub_213B0FE40(v6);

        }
      }
      else
      {
        v20 = *v1;
        v21 = v5;
        sub_213B0FE34(v6);
        sub_213B0FE34(v6);
        v22 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_213AE1674(0, v20[2] + 1, 1, v20);
        v24 = v20[2];
        v23 = v20[3];
        if (v24 >= v23 >> 1)
          v20 = sub_213AE1674((_QWORD *)(v23 > 1), v24 + 1, 1, v20);
        v20[2] = v24 + 1;
        v25 = &v20[2 * v24];
        v25[4] = v22;
        v25[5] = v6;

        sub_213B0FE40(v6);
        *v1 = v20;
      }
      v4 += 24;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain_n();
  v27 = sub_213B2BCD8();
  v28 = sub_213B2C170();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v47 = v46;
    *(_DWORD *)v29 = 136315138;
    v30 = *(_QWORD *)(v26 + 16);
    v31 = MEMORY[0x24BEE4AF8];
    if (v30)
    {
      v48 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_213B2C35C();
      v32 = 32;
      do
      {
        v33 = *(id *)(v26 + v32);
        sub_213B2C344();
        sub_213B2C368();
        sub_213B2C374();
        sub_213B2C350();
        v32 += 16;
        --v30;
      }
      while (v30);
      v31 = v48;
      swift_bridgeObjectRelease();
    }
    v0 = v43;
    v34 = *(void **)(v43 + 144);
    v35 = sub_213AD63B4(0, &qword_254D19068);
    v36 = MEMORY[0x2199BC3E0](v31, v35);
    v38 = v37;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v43 + 72) = sub_213AE1780(v36, v38, &v47);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v27, v28, "Fetch all records END -- loaded from CloudKit {records: %s}", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v46, -1, -1);
    MEMORY[0x2199BD0E8](v29, -1, -1);

  }
  else
  {
    v39 = *(void **)(v0 + 144);
    swift_bridgeObjectRelease_n();

  }
  swift_beginAccess();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t sub_213B0FA2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRetain_n();
  v2 = v1;
  v3 = sub_213B2BCD8();
  v4 = sub_213B2C158();
  if (os_log_type_enabled(v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 120);
    v5 = *(void **)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_213AE1780(v7, v6, &v15);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2112;
    *(_QWORD *)(v0 + 48) = v5;
    v9 = v5;
    sub_213B2C254();
    *v13 = v5;

    _os_log_impl(&dword_213AC8000, v3, v4, "Fetch all records FAIL {type: %s, database: %@}", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D188C8);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v14, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    v10 = *(void **)(v0 + 128);
    swift_bridgeObjectRelease_n();

  }
  v11 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B0FC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19E38);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19E38);
  if (qword_254D18480 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213B0FCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return swift_task_switch();
}

uint64_t sub_213B0FCE4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = (void *)v0[17];
  v1 = v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_213B0FD84;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_213AF8E84;
  v4[3] = &block_descriptor_1;
  v4[4] = v3;
  objc_msgSend(v2, sel_fetchRecordWithID_completionHandler_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_213B0FD84()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_213B0FDE4()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 128) = *(_QWORD *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B0FDF8()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_213B0FE34(id a1)
{
  return a1;
}

void sub_213B0FE40(id a1)
{

}

uint64_t AbstractAssetRequest.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  __swift_destroy_boxed_opaque_existential_0(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  return v0;
}

uint64_t sub_213B0FE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19E68);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19E68);
  if (qword_254D18470 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t AbstractAssetRequest.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

uint64_t AbstractAssetRequest.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  v8 = type metadata accessor for MobileAssetManager();
  v9 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = &unk_254D1AEB0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v9 + 136) = &unk_254D1AEA8;
  *(_QWORD *)(v9 + 144) = 0;
  v13[3] = v8;
  v13[4] = &off_24D0BF990;
  v13[0] = v9;
  v10 = (*(uint64_t (**)(char *, _QWORD *))(v1 + 112))(v7, v13);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v10;
}

uint64_t sub_213B10030(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 80) - 8) + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96), a1);
  sub_213AE1104(a2, v4 + *(_QWORD *)(*(_QWORD *)v4 + 104));
  return v4;
}

uint64_t sub_213B100A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v3[9] = type metadata accessor for MobileAssetRequest();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B10114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_254D18410 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 96) = __swift_project_value_buffer(v3, (uint64_t)qword_254D19E68);
  sub_213B10758(v2, v1);
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C170();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 88);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_213B27B28();
    *(_QWORD *)(v0 + 40) = sub_213AE1780(v10, v11, &v14);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    sub_213B1079C(v7);
    _os_log_impl(&dword_213AC8000, v4, v5, "Beginning %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    sub_213B1079C(*(_QWORD *)(v0 + 88));
  }

  __swift_project_boxed_opaque_existential_0(*(_QWORD **)(v0 + 64), *(_QWORD *)(*(_QWORD *)(v0 + 64) + 24));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v12;
  *v12 = v0;
  v12[1] = sub_213B102F8;
  return sub_213B240D8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), 0);
}

uint64_t sub_213B102F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B1035C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for MobileAssetResult();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B103CC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21[2];

  v1 = v0[7];
  v2 = (void *)v0[14];
  if ((*(_BYTE *)(v1 + *(int *)(v0[9] + 20)) & 1) != 0)
  {
    sub_213B10758(v1, v0[10]);
    v3 = v2;
    v4 = v2;
    v5 = sub_213B2BCD8();
    v6 = sub_213B2C170();
    v7 = os_log_type_enabled(v5, v6);
    v8 = (void *)v0[14];
    v9 = v0[10];
    if (v7)
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v21[0] = v11;
      *(_DWORD *)v10 = 136315394;
      sub_213B2BC90();
      sub_213B107D8();
      v12 = sub_213B2C458();
      v0[2] = sub_213AE1780(v12, v13, v21);
      sub_213B2C254();
      swift_bridgeObjectRelease();
      sub_213B1079C(v9);
      *(_WORD *)(v10 + 12) = 2080;
      v0[3] = v8;
      v14 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
      v15 = sub_213B2BE58();
      v0[4] = sub_213AE1780(v15, v16, v21);
      sub_213B2C254();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_213AC8000, v5, v6, "Request %s failed: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v11, -1, -1);
      MEMORY[0x2199BD0E8](v10, -1, -1);

    }
    else
    {

      sub_213B1079C(v9);
    }
    v18 = v0[6];
    v19 = type metadata accessor for MobileAssetResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    v17 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v17 = (uint64_t (*)(void))v0[1];
  }
  return v17();
}

uint64_t AbstractAssetRequest.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  __swift_destroy_boxed_opaque_existential_0(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of AssetRequestConfiguration.color.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AssetRequestConfiguration.hardwareModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AssetRequestConfiguration.timeout.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_213B106C8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AbstractAssetRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AbstractAssetRequest);
}

uint64_t method lookup function for AbstractAssetRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_213B10758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileAssetRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B1079C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MobileAssetRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213B107D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D19F08[0];
  if (!qword_254D19F08[0])
  {
    v1 = sub_213B2BC90();
    result = MEMORY[0x2199BD010](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, qword_254D19F08);
  }
  return result;
}

uint64_t sub_213B10820()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_213B10828()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_213B10860(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_213B108E0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *sub_213B10980(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t sub_213B109E4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_213B10A2C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AnyCRUD(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyCRUD);
}

uint64_t dispatch thunk of AssetRequestConfiguration2.color.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AssetRequestConfiguration2.hardwareModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AssetRequestConfiguration2.overrideHardwareModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AssetRequestConfiguration2.timeout.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AssetRequestConfiguration2.personalizationAssetInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_213B10AB0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_213B10B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D19FC8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D19FC8);
  if (qword_254D18470 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213B10BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  v4 = type metadata accessor for MobileAssetResult();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for MobileAssetRequest();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B10C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_254D18418 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 136) = __swift_project_value_buffer(v3, (uint64_t)qword_254D19FC8);
  sub_213B10758(v2, v1);
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C170();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 128);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_213B27B28();
    *(_QWORD *)(v0 + 48) = sub_213AE1780(v10, v11, &v14);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    sub_213B1079C(v7);
    _os_log_impl(&dword_213AC8000, v4, v5, "Beginning MobileAsset request: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    sub_213B1079C(*(_QWORD *)(v0 + 128));
  }

  __swift_project_boxed_opaque_existential_0(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v12;
  *v12 = v0;
  v12[1] = sub_213B10E58;
  return sub_213B240D8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64), 0);
}

uint64_t sub_213B10E58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B10EBC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_213B10758(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 120));
  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v12 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_213B2BC90();
    sub_213B107D8();
    v6 = sub_213B2C458();
    *(_QWORD *)(v0 + 40) = sub_213AE1780(v6, v7, &v12);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    sub_213B1079C(v3);
    _os_log_impl(&dword_213AC8000, v1, v2, "Finished MobileAsset request with identifier %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v5, -1, -1);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }
  else
  {
    sub_213B1079C(*(_QWORD *)(v0 + 120));
  }

  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 56);
  sub_213B1188C(*(_QWORD *)(v0 + 96), v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B1108C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v18[2];

  v1 = *(void **)(v0 + 152);
  sub_213B10758(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 112));
  v2 = v1;
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C170();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18[0] = v9;
    *(_DWORD *)v8 = 136315394;
    sub_213B2BC90();
    sub_213B107D8();
    v10 = sub_213B2C458();
    *(_QWORD *)(v0 + 16) = sub_213AE1780(v10, v11, v18);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    sub_213B1079C(v7);
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v6;
    v12 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v13 = sub_213B2BE64();
    *(_QWORD *)(v0 + 32) = sub_213AE1780(v13, v14, v18);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v4, v5, "Request %s failed: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    v15 = *(void **)(v0 + 152);
    sub_213B1079C(*(_QWORD *)(v0 + 112));

  }
  v16 = *(void **)(v0 + 152);
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 64) + *(int *)(*(_QWORD *)(v0 + 104) + 20)) & 1) != 0)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 80));

  }
  else
  {
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B1133C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 120) = a6;
  *(_QWORD *)(v7 + 128) = a7;
  *(_BYTE *)(v7 + 65) = a5;
  *(_QWORD *)(v7 + 104) = a3;
  *(_QWORD *)(v7 + 112) = a4;
  *(_QWORD *)(v7 + 88) = a1;
  *(_QWORD *)(v7 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_213B11360()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char v5;
  _QWORD *v6;
  __int128 v8;

  if (qword_254D18418 != -1)
    swift_once();
  v1 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 136) = __swift_project_value_buffer(v1, (uint64_t)qword_254D19FC8);
  v2 = sub_213B2BCD8();
  v3 = sub_213B2C170();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_213AC8000, v2, v3, "Fetching personalization asset", v4, 2u);
    MEMORY[0x2199BD0E8](v4, -1, -1);
  }
  v5 = *(_BYTE *)(v0 + 65);
  v8 = *(_OWORD *)(v0 + 104);

  *(_OWORD *)(v0 + 48) = v8;
  *(_BYTE *)(v0 + 64) = v5 & 1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v6;
  *v6 = v0;
  v6[1] = sub_213B1149C;
  return PersonalizationAssetManager.asset(for:)(v0 + 16, v0 + 48);
}

uint64_t sub_213B1149C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B11500()
{
  uint64_t v0;
  void (*v1)(_OWORD *__return_ptr, uint64_t *);
  uint64_t v2;
  void *v3;
  id v4;
  __int128 v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _OWORD *v9;
  __int128 v10;
  unint64_t v12;
  _OWORD v13[2];
  uint64_t v14;
  __int128 v15;
  void *v16;

  v1 = *(void (**)(_OWORD *__return_ptr, uint64_t *))(v0 + 120);
  if (v1)
  {
    v3 = *(void **)(v0 + 40);
    v14 = *(_QWORD *)(v0 + 16);
    v2 = v14;
    v15 = *(_OWORD *)(v0 + 24);
    v12 = v15;
    v16 = v3;
    sub_213AD52AC((uint64_t)v1);
    sub_213AD5300(v14, v15);
    v4 = v3;
    v1(v13, &v14);
    sub_213AD529C((uint64_t)v1);
    sub_213AD5374(v2, v12);

    sub_213AD5374(v2, v12);
    v5 = v13[1];
    *(_OWORD *)(v0 + 16) = v13[0];
    *(_OWORD *)(v0 + 32) = v5;
  }
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C170();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_213AC8000, v6, v7, "Finished fetching personalization asset", v8, 2u);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  v9 = *(_OWORD **)(v0 + 88);

  v10 = *(_OWORD *)(v0 + 32);
  *v9 = *(_OWORD *)(v0 + 16);
  v9[1] = v10;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B11644()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 152);
  v2 = v1;
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v15 = v8;
    *(_QWORD *)(v0 + 72) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v10 = sub_213B2BE64();
    *(_QWORD *)(v0 + 80) = sub_213AE1780(v10, v11, &v15);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v4, v5, "Finished fetching personalization asset with error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v8, -1, -1);
    MEMORY[0x2199BD0E8](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 152);

  }
  v13 = *(_QWORD **)(v0 + 88);
  *v13 = 0;
  v13[1] = 0;
  v13[2] = 0;
  v13[3] = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *sub_213B11808()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_213AD529C(v0[4]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((char *)v0 + *(_QWORD *)(*v0 + 128));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  return v0;
}

uint64_t sub_213B1185C()
{
  sub_213B11808();
  return swift_deallocClassInstance();
}

void type metadata accessor for AbstractAssetRequest2()
{
  JUMPOUT(0x2199BCF8CLL);
}

uint64_t sub_213B1188C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileAssetResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_213B118D0()
{
  __int128 *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v15[4];
  char v16;

  sub_213B11ACC(v0, (uint64_t)v15);
  if ((v16 & 1) == 0)
  {
    v4 = v15[3];
    v5 = objc_allocWithZone(MEMORY[0x24BE66BB0]);
    v6 = (void *)sub_213B2BDF8();
    v3 = objc_msgSend(v5, sel_initWithType_, v6);

    if (v4)
    {
      if (!v3)
        return v3;
      v7 = v3;
      v8 = (void *)sub_213B2BDF8();
      v9 = (void *)sub_213B2BDF8();
      objc_msgSend(v7, sel_addKeyValuePair_with_, v8, v9);

      v10 = v7;
      v11 = (void *)sub_213B2BDF8();
      v12 = (void *)sub_213B2BDF8();
      objc_msgSend(v10, sel_addKeyValuePair_with_, v11, v12);
    }
    else
    {
      if (!v3)
        return v3;
      v13 = v3;
      v11 = (void *)sub_213B2BDF8();
      v12 = (void *)sub_213B2BDF8();
      objc_msgSend(v13, sel_addKeyValuePair_with_, v11, v12);
    }

    objc_msgSend(v3, sel_returnTypes_, 2);
    return v3;
  }
  v1 = objc_allocWithZone(MEMORY[0x24BE66BB0]);
  v2 = (void *)sub_213B2BDF8();
  v3 = objc_msgSend(v1, sel_initWithType_, v2);

  return v3;
}

uint64_t sub_213B11ACC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_213B11AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for MobileAssetQuery(uint64_t a1)
{
  return sub_213B11B28(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_213B11B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MobileAssetQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_213B11AE4(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MobileAssetQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_213B11AE4(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_213B11B28(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MobileAssetQuery(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_213B11B28(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileAssetQuery(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileAssetQuery(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_213B11D14(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_213B11D1C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MobileAssetQuery()
{
  return &type metadata for MobileAssetQuery;
}

uint64_t dispatch thunk of Feature.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_213B11D40(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_213B2C338();
      v7 = (uint64_t)sub_213B12D7C(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_213B12C2C(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_213B11F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D1A070);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D1A070);
  if (qword_254D18480 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t SemanticVersion.major.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SemanticVersion.minor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SemanticVersion.patch.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

ProductKit::SemanticVersion __swiftcall SemanticVersion.init(_:_:_:)(Swift::Int a1, Swift::Int a2, Swift::Int a3)
{
  Swift::Int *v3;
  ProductKit::SemanticVersion result;

  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  result.patch = a3;
  result.minor = a2;
  result.major = a1;
  return result;
}

uint64_t SemanticVersion.init(asserting:)@<X0>(uint64_t a1@<X8>)
{
  Swift::String v2;
  uint64_t result;
  __int128 v4;
  uint64_t v5;
  char v6;

  v2._countAndFlagsBits = sub_213B2C2FC();
  result = (unint64_t)SemanticVersion.init(_:)(v2);
  if ((v6 & 1) != 0)
  {
    sub_213B2C2E4();
    swift_bridgeObjectRelease();
    sub_213B2C2FC();
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    result = sub_213B2C38C();
    __break(1u);
  }
  else
  {
    *(_OWORD *)a1 = v4;
    *(_QWORD *)(a1 + 16) = v5;
  }
  return result;
}

ProductKit::SemanticVersion_optional __swiftcall SemanticVersion.init(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  Swift::Int v4;
  Swift::Int v5;
  Swift::Bool v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *i;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  char v37;
  Swift::String v38;
  ProductKit::SemanticVersion_optional result;

  v2 = v1;
  v38 = a1;
  sub_213B12BE8();
  v3 = (_QWORD *)sub_213B2C26C();
  v4 = swift_bridgeObjectRelease();
  if (v3[2] != 3)
  {
    v4 = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v7 = v3[4];
  v8 = v3[5];
  v9 = HIBYTE(v8) & 0xF;
  v10 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0)
    v11 = HIBYTE(v8) & 0xF;
  else
    v11 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    v25 = 0;
    v24 = 1;
    goto LABEL_51;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = (uint64_t)sub_213B12C2C(v7, v8, 10);
    LOBYTE(v7) = v37;
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  if ((v8 & 0x2000000000000000) != 0)
  {
    v38._countAndFlagsBits = v3[4];
    v38._object = (void *)(v8 & 0xFFFFFFFFFFFFFFLL);
    if (v7 == 43)
    {
      if (!v9)
        goto LABEL_67;
      if (v9 == 1 || (BYTE1(v7) - 48) > 9u)
        goto LABEL_34;
      v13 = (BYTE1(v7) - 48);
      if (v9 != 2)
      {
        if ((BYTE2(v7) - 48) > 9u)
          goto LABEL_34;
        v13 = 10 * (BYTE1(v7) - 48) + (BYTE2(v7) - 48);
        v15 = v9 - 3;
        if (v9 != 3)
        {
          v16 = (unsigned __int8 *)&v38._countAndFlagsBits + 3;
          while (1)
          {
            v17 = *v16 - 48;
            if (v17 > 9)
              goto LABEL_34;
            v18 = 10 * v13;
            if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
              goto LABEL_34;
            v13 = v18 + v17;
            if (__OFADD__(v18, v17))
              goto LABEL_34;
            LOBYTE(v7) = 0;
            ++v16;
            if (!--v15)
              goto LABEL_47;
          }
        }
      }
    }
    else
    {
      if (v7 == 45)
      {
        if (v9)
        {
          if (v9 != 1 && (BYTE1(v7) - 48) <= 9u)
          {
            if (v9 == 2)
            {
              LOBYTE(v7) = 0;
              v13 = -(uint64_t)(BYTE1(v7) - 48);
              goto LABEL_47;
            }
            if ((BYTE2(v7) - 48) <= 9u)
            {
              v13 = -10 * (BYTE1(v7) - 48) - (BYTE2(v7) - 48);
              v23 = v9 - 3;
              if (v9 == 3)
                goto LABEL_46;
              v34 = (unsigned __int8 *)&v38._countAndFlagsBits + 3;
              while (1)
              {
                v35 = *v34 - 48;
                if (v35 > 9)
                  break;
                v36 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
                  break;
                v13 = v36 - v35;
                if (__OFSUB__(v36, v35))
                  break;
                LOBYTE(v7) = 0;
                ++v34;
                if (!--v23)
                  goto LABEL_47;
              }
            }
          }
LABEL_34:
          v13 = 0;
          LOBYTE(v7) = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      if (!v9 || (v7 - 48) > 9u)
        goto LABEL_34;
      v13 = (v7 - 48);
      if (v9 != 1)
      {
        if ((BYTE1(v7) - 48) > 9u)
          goto LABEL_34;
        v13 = 10 * (v7 - 48) + (BYTE1(v7) - 48);
        v19 = v9 - 2;
        if (v9 != 2)
        {
          v20 = (unsigned __int8 *)&v38._countAndFlagsBits + 2;
          while (1)
          {
            v21 = *v20 - 48;
            if (v21 > 9)
              goto LABEL_34;
            v22 = 10 * v13;
            if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
              goto LABEL_34;
            v13 = v22 + v21;
            if (__OFADD__(v22, v21))
              goto LABEL_34;
            LOBYTE(v7) = 0;
            ++v20;
            if (!--v19)
              goto LABEL_47;
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v7) = 0;
    goto LABEL_47;
  }
  if ((v7 & 0x1000000000000000) == 0)
    goto LABEL_65;
  for (i = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32); ; i = (unsigned __int8 *)sub_213B2C338())
  {
    v13 = (uint64_t)sub_213B12D7C(i, v10, 10);
    LOBYTE(v7) = v14 & 1;
LABEL_47:
    v24 = v7 & 1;
    if ((v7 & 1) != 0)
      v25 = 0;
    else
      v25 = v13;
    if (v3[2] < 2uLL)
    {
      __break(1u);
      goto LABEL_64;
    }
LABEL_51:
    v26 = v3[6];
    v27 = v3[7];
    swift_bridgeObjectRetain();
    v28 = sub_213B11D40(v26, v27);
    if (v3[2] >= 3uLL)
      break;
LABEL_64:
    __break(1u);
LABEL_65:
    ;
  }
  v30 = v28;
  v31 = v29;
  v32 = v3[8];
  v33 = v3[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = sub_213B11D40(v32, v33);
  if (((v24 | v31) & 1) == 0 && (v10 & 1) == 0)
  {
    *(_QWORD *)v2 = v25;
    *(_QWORD *)(v2 + 8) = v30;
    *(_QWORD *)(v2 + 16) = v4;
    *(_BYTE *)(v2 + 24) = 0;
    goto LABEL_68;
  }
LABEL_12:
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 1;
LABEL_68:
  result.value.patch = v5;
  result.value.minor = v10;
  result.value.major = v4;
  result.is_nil = v6;
  return result;
}

BOOL static SemanticVersion.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = a1[1];
  v3 = a2[1];
  if (*a1 >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  return v4 != v5 || a1[2] < a2[2];
}

Swift::Void __swiftcall SemanticVersion.assertContains(version:)(Swift::String version)
{
  if (!SemanticVersion.contains(version:)(version))
  {
    sub_213B2C2E4();
    sub_213B2BEAC();
    if (qword_254D18428 != -1)
      swift_once();
    SemanticVersion.description.getter();
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    sub_213B2BEAC();
    sub_213B2BEAC();
    sub_213B2BEAC();
    sub_213B2C38C();
    __break(1u);
  }
}

Swift::Bool __swiftcall SemanticVersion.contains(version:)(Swift::String version)
{
  uint64_t *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  object = version._object;
  countAndFlagsBits = version._countAndFlagsBits;
  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = countAndFlagsBits;
  v7._object = object;
  SemanticVersion.init(_:)(v7);
  if ((v21 & 1) == 0)
    return v4 >= (uint64_t)v19 && v5 >= *((_QWORD *)&v19 + 1) && v6 >= v20;
  if (qword_254D18420 != -1)
    swift_once();
  v8 = sub_213B2BCF0();
  __swift_project_value_buffer(v8, (uint64_t)qword_254D1A070);
  swift_bridgeObjectRetain_n();
  v9 = sub_213B2BCD8();
  v10 = sub_213B2C158();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 136315394;
    if (qword_254D18428 != -1)
      swift_once();
    v19 = xmmword_254D1A628;
    v20 = qword_254D1A638;
    v13 = SemanticVersion.description.getter();
    *(_QWORD *)&v19 = sub_213AE1780(v13, v14, &v18);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v19 = sub_213AE1780(countAndFlagsBits, (unint64_t)object, &v18);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213AC8000, v9, v10, "### Failed ProductKit Runtime Version check {SDKVersion: %s, RuntimeVersion: %s}", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v12, -1, -1);
    MEMORY[0x2199BD0E8](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t SemanticVersion.description.getter()
{
  uint64_t v1;

  v1 = sub_213B2C458();
  sub_213B2BEAC();
  sub_213B2C458();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213B2C458();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL static SemanticVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL sub_213B12A04(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = a1[1];
  v3 = a2[1];
  if (*a1 >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  return v4 != v5 || a1[2] < a2[2];
}

BOOL sub_213B12A34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = a1[1];
  v3 = a2[1];
  if (*a2 >= *a1)
  {
    v5 = __OFSUB__(v3, v2);
    v4 = v3 - v2 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  return v4 == v5 && a2[2] >= a1[2];
}

BOOL sub_213B12A64(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = a1[1];
  v3 = a2[1];
  if (*a1 >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  return v4 == v5 && a1[2] >= a2[2];
}

BOOL sub_213B12A94(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = a1[1];
  v3 = a2[1];
  if (*a2 >= *a1)
  {
    v5 = __OFSUB__(v3, v2);
    v4 = v3 - v2 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  return v4 != v5 || a2[2] < a1[2];
}

BOOL sub_213B12AC8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

_QWORD *sub_213B12AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18F48);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_213B12B5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_213B2BF00();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2199BC374](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_213B12BD4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_213B12D7C(a1, a2, a3);
}

unint64_t sub_213B12BE8()
{
  unint64_t result;

  result = qword_254D1A088;
  if (!qword_254D1A088)
  {
    result = MEMORY[0x2199BD010](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254D1A088);
  }
  return result;
}

unsigned __int8 *sub_213B12C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_213B2BF0C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_213B12FF8();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_213B2C338();
  }
LABEL_7:
  v11 = sub_213B12D7C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_213B12D14()
{
  unint64_t result;

  result = qword_254D1A090;
  if (!qword_254D1A090)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for SemanticVersion, &type metadata for SemanticVersion);
    atomic_store(result, (unint64_t *)&qword_254D1A090);
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for SemanticVersion()
{
  return &type metadata for SemanticVersion;
}

unsigned __int8 *sub_213B12D7C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_213B12FF8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_213B2BF18();
  v4 = sub_213B13074(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_213B13074(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_213B131B8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_213B12AF8(v9, 0);
      v12 = sub_213B132A4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2199BC314](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2199BC314);
LABEL_9:
      sub_213B2C338();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2199BC314]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_213B131B8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_213B12B5C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_213B12B5C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_213B2BEE8();
  }
  __break(1u);
  return result;
}

unint64_t sub_213B132A4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_213B12B5C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_213B2BEF4();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_213B2C338();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_213B12B5C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_213B2BED0();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

_WORD *iosmacHardware.init(_:)@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void iosmacHardware.model.getter(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

uint64_t iosmacHardware.id.getter()
{
  return iosmacHardware.Model.rawValue.getter();
}

uint64_t iosmacHardware.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X8>)
{
  __int16 v6;
  uint64_t result;
  char v8;
  __int16 v9;

  swift_bridgeObjectRetain();
  iosmacHardware.Model.init(rawValue:)(&v9);
  v6 = v9;
  if (v9 == 259)
  {
    if (a1 == 0x656E6F685069 && a2 == 0xE600000000000000 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 158;
    }
    else if (a1 == 1684099177 && a2 == 0xE400000000000000 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 107;
    }
    else if (a1 == 0x6E696D2064615069 && a2 == 0xE900000000000069 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 77;
    }
    else if (a1 == 1685016681 && a2 == 0xE400000000000000 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 171;
    }
    else if (a1 == 0x206B6F6F4263614DLL && a2 == 0xEB000000006F7250 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 216;
    }
    else if (a1 == 0x206B6F6F4263614DLL && a2 == 0xEB00000000726941 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 176;
    }
    else if (a1 == 0x6F72502063614D69 && a2 == 0xE800000000000000 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 22;
    }
    else if (a1 == 1667321193 && a2 == 0xE400000000000000 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 17;
    }
    else if (a1 == 0x696E696D2063614DLL && a2 == 0xE800000000000000 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 225;
    }
    else if (a1 == 0x647574532063614DLL && a2 == 0xEA00000000006F69 || (sub_213B2C47C() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v6 = 173;
    }
    else
    {
      if (a1 == 0x695620656C707041 && a2 == 0xEC0000006E6F6973)
      {
        result = swift_bridgeObjectRelease();
      }
      else
      {
        v8 = sub_213B2C47C();
        result = swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
        {
          v6 = 259;
          goto LABEL_7;
        }
      }
      v6 = 247;
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
  }
LABEL_7:
  *a3 = v6;
  return result;
}

uint64_t iosmacHardware.image.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  iosmacHardware.imageName.getter();
  type metadata accessor for MobileAssetManager();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_213B2BD08();
}

uint64_t iosmacHardware.imageName.getter()
{
  __int16 *v0;

  return *(_QWORD *)&aImac_0[8 * *v0];
}

uint64_t sub_213B13A00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s10ProductKit14iosmacHardwareV8allCasesSayACGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t _s10ProductKit14iosmacHardwareV8allCasesSayACGvgZ_0()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  __int16 *v3;
  __int16 v4;
  __int16 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = 259;
  v7 = MEMORY[0x24BEE4AF8];
  sub_213B28ED0(0, 259, 0);
  result = v7;
  v2 = *(_QWORD *)(v7 + 16);
  v3 = &word_24D0B99D8;
  do
  {
    v5 = *v3++;
    v4 = v5;
    v8 = result;
    v6 = *(_QWORD *)(result + 24);
    if (v2 >= v6 >> 1)
    {
      sub_213B28ED0(v6 > 1, v2 + 1, 1);
      result = v8;
    }
    *(_QWORD *)(result + 16) = v2 + 1;
    *(_WORD *)(result + 2 * v2++ + 32) = v4;
    --v0;
  }
  while (v0);
  return result;
}

unint64_t sub_213B13AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D1A098;
  if (!qword_254D1A098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D1A0A0);
    result = MEMORY[0x2199BD010](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D1A098);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for iosmacHardware(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 258 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 258 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0xFEFE)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0xFEFD)
    return ((uint64_t (*)(void))((char *)&loc_213B13B84 + 4 * byte_213B30EC5[v5]))();
  *a1 = a2 + 258;
  return ((uint64_t (*)(void))((char *)sub_213B13BBC + 4 * asc_213B30EC0[v5]))();
}

uint64_t sub_213B13BBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_213B13BC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x213B13BCCLL);
  return result;
}

uint64_t sub_213B13BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x213B13BE0);
  *(_WORD *)result = a2 + 258;
  return result;
}

uint64_t sub_213B13BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_213B13BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for iosmacHardware()
{
  return &type metadata for iosmacHardware;
}

uint64_t GenericDevice.HardwareModel.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13F74(a1);
}

void *static GenericDevice.HardwareModel.allCases.getter()
{
  return &unk_24D0BAB20;
}

unint64_t GenericDevice.HardwareModel.rawValue.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_213B13C3C()
{
  sub_213B2C518();
  sub_213B2BE88();
  return sub_213B2C530();
}

uint64_t sub_213B13C90()
{
  return sub_213B2BE88();
}

uint64_t sub_213B13CAC()
{
  sub_213B2C518();
  sub_213B2BE88();
  return sub_213B2C530();
}

uint64_t sub_213B13CFC@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13FF4(a1);
}

void sub_213B13D08(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000024;
  a1[1] = 0x8000000213B33800;
}

void sub_213B13D28(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAB80;
}

uint64_t GenericDevice.Configuration.color.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double GenericDevice.Configuration.timeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void GenericDevice.Configuration.overrideHardwareModel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *GenericDevice.Configuration.overrideHardwareModel.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*GenericDevice.Configuration.overrideHardwareModel.modify())()
{
  return nullsub_1;
}

uint64_t GenericDevice.Configuration.personalizationAssetInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_213ADAE48(v2, v3, v4);
}

uint64_t GenericDevice.Configuration.personalizationAssetInfo.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_213ADACE4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v4;
  return result;
}

uint64_t (*GenericDevice.Configuration.personalizationAssetInfo.modify())()
{
  return nullsub_1;
}

void GenericDevice.Configuration.init(hardwareModel:color:timeout:)(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_QWORD *)a2 = a1;
  *(double *)(a2 + 8) = a3;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = -1;
}

uint64_t GenericDevice.AssetRequest.init(configuration:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  v6 = a1[3];
  v7 = a1[4];
  v8 = *((_BYTE *)a1 + 40);
  v9 = type metadata accessor for MobileAssetManager();
  v10 = swift_allocObject();
  sub_213ADAE48(v6, v7, v8);
  swift_defaultActor_initialize();
  *(_BYTE *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 120) = &unk_254D1AEB0;
  *(_QWORD *)(v10 + 128) = 0;
  *(_QWORD *)(v10 + 136) = &unk_254D1AEA8;
  *(_QWORD *)(v10 + 144) = 0;
  v14 = v9;
  v15 = &off_24D0BF990;
  sub_213ADACE4(v6, v7, v8);
  *(_QWORD *)&v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A0A8);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = v3;
  *(_QWORD *)(v11 + 56) = v4;
  *(_BYTE *)(v11 + 64) = v5;
  *(_QWORD *)(v11 + 72) = v6;
  *(_QWORD *)(v11 + 80) = v7;
  *(_BYTE *)(v11 + 88) = v8;
  *(_QWORD *)(v11 + 16) = 0;
  *(_BYTE *)(v11 + 24) = 1;
  *(_QWORD *)(v11 + 32) = 0;
  result = sub_213AE1104(&v13, v11 + 96);
  *a2 = v11;
  return result;
}

uint64_t GenericDevice.AssetRequest.assets()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_254D18DC8 + dword_254D18DC8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_213ADB080;
  return v3();
}

uint64_t GenericDevice.Assets.ImageIdentifier.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13F74(a1);
}

uint64_t sub_213B13F74@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static GenericDevice.Assets.ImageIdentifier.allCases.getter()
{
  return &unk_24D0BABE0;
}

uint64_t GenericDevice.Assets.ImageIdentifier.rawValue.getter()
{
  return 0x746375646F7250;
}

uint64_t sub_213B13FE8@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13FF4(a1);
}

uint64_t sub_213B13FF4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_213B2C3E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_213B14040@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GenericDevice.Assets.ImageIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B14064(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAC40;
}

id GenericDevice.Assets.image(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)a1 = 0x746375646F7250;
  *(_QWORD *)(a1 + 8) = 0xE700000000000000;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = 6778480;
  *(_QWORD *)(a1 + 32) = 0xE300000000000000;
  *(_BYTE *)(a1 + 40) = 0;
  return v2;
}

uint64_t GenericDevice.Assets.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GenericDevice.Assets.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

unint64_t sub_213B140F0()
{
  unint64_t result;

  result = qword_254D1A0B8;
  if (!qword_254D1A0B8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for GenericDevice.HardwareModel, &type metadata for GenericDevice.HardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D1A0B8);
  }
  return result;
}

uint64_t sub_213B14134()
{
  return sub_213AE1FE0(&qword_254D1A0C0, &qword_254D1A0C8);
}

unint64_t sub_213B1415C()
{
  unint64_t result;

  result = qword_254D1A0D0;
  if (!qword_254D1A0D0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for GenericDevice.HardwareModel, &type metadata for GenericDevice.HardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D1A0D0);
  }
  return result;
}

unint64_t sub_213B141A4()
{
  unint64_t result;

  result = qword_254D1A0D8;
  if (!qword_254D1A0D8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for GenericDevice.HardwareModel, &type metadata for GenericDevice.HardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D1A0D8);
  }
  return result;
}

unint64_t sub_213B141EC()
{
  unint64_t result;

  result = qword_254D1A128;
  if (!qword_254D1A128)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for GenericDevice.Assets.ImageIdentifier, &type metadata for GenericDevice.Assets.ImageIdentifier);
    atomic_store(result, (unint64_t *)&qword_254D1A128);
  }
  return result;
}

uint64_t sub_213B14230()
{
  return sub_213AE1FE0(&qword_254D1A130, &qword_254D1A138);
}

ValueMetadata *type metadata accessor for GenericDevice()
{
  return &type metadata for GenericDevice;
}

ValueMetadata *type metadata accessor for GenericDevice.HardwareModel()
{
  return &type metadata for GenericDevice.HardwareModel;
}

ValueMetadata *type metadata accessor for GenericDevice.Configuration()
{
  return &type metadata for GenericDevice.Configuration;
}

ValueMetadata *type metadata accessor for GenericDevice.AssetRequest()
{
  return &type metadata for GenericDevice.AssetRequest;
}

uint64_t type metadata accessor for GenericDevice.Assets()
{
  return objc_opt_self();
}

uint64_t method lookup function for GenericDevice.Assets()
{
  return swift_lookUpClassMethod();
}

uint64_t _s10ProductKit13GenericDeviceV13HardwareModelOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B14304 + 4 * byte_213B31F88[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B14324 + 4 * byte_213B31F8D[v4]))();
}

_BYTE *sub_213B14304(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B14324(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B1432C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B14334(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B1433C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B14344(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GenericDevice.Assets.ImageIdentifier()
{
  return &type metadata for GenericDevice.Assets.ImageIdentifier;
}

uint64_t static Task.sleep(seconds:)(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
  return swift_task_switch();
}

void sub_213B14378()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v2;
    *v2 = v0;
    v2[1] = sub_213B14414;
    sub_213B2C068();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_213B14414()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B14460()
{
  return swift_release();
}

_QWORD *sub_213B14468(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

_QWORD *sub_213B1449C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_213B144DC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t sub_213B14514(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_213B1455C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for RaceTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RaceTask);
}

uint64_t sub_213B145A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213B2C23C();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *sub_213B14620(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  size_t v9;
  unint64_t v10;
  size_t v11;
  size_t v12;
  size_t v13;
  uint64_t v15;
  int v16;
  int v17;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 84);
  if (v8)
    v9 = *(_QWORD *)(v6 + 64);
  else
    v9 = *(_QWORD *)(v6 + 64) + 1;
  v10 = (v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  v12 = v10 + 9;
  if (v8 >= 2)
    v13 = v11;
  else
    v13 = v12;
  if ((v7 & 0x1000F8) != 0 || v13 > 0x18)
  {
    v15 = *(_QWORD *)__src;
    *__dst = *(_QWORD *)__src;
    __dst = (_QWORD *)(v15 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    if (v8 > 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, _QWORD))(v6 + 48))(__src, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 32)) >= 2)
      {
LABEL_18:
        memcpy(__dst, __src, v13);
        return __dst;
      }
    }
    else if (__src[v11])
    {
      v16 = __src[v11] - 1;
      v17 = v11 & 0xFFFFFFF8;
      if ((v11 & 0xFFFFFFF8) != 0)
      {
        v16 = 0;
        v17 = *(_DWORD *)__src;
      }
      if ((v17 | v16) != 0xFFFFFFFF)
        goto LABEL_18;
    }
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
    {
      memcpy(__dst, __src, v9);
    }
    else
    {
      (*(void (**)(_QWORD *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
    }
    *(_QWORD *)(((unint64_t)__dst + v9 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v9 + 7] & 0xFFFFFFFFFFFFF8);
    if (v8 <= 1)
      *((_BYTE *)__dst + v11) = 0;
  }
  return __dst;
}

_DWORD *sub_213B147A8(_DWORD *result, uint64_t a2)
{
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  int v10;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v6;
  if (v5 > 1)
  {
    result = (_DWORD *)(*(uint64_t (**)(_DWORD *))(v4 + 48))(result);
    if (result >= 2)
      return result;
    goto LABEL_14;
  }
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (!*((_BYTE *)result + v7)
    || ((v8 = v7 & 0xFFFFFFF8, (v7 & 0xFFFFFFF8) != 0)
      ? (v9 = 0)
      : (v9 = *((unsigned __int8 *)result + v7) - 1),
        !v8 ? (v10 = 0) : (v10 = *result),
        (v10 | v9) == 0xFFFFFFFF))
  {
LABEL_14:
    result = (_DWORD *)(*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
    if (!(_DWORD)result)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *, uint64_t))(v4 + 8))(v2, v3);
  }
  return result;
}

void *sub_213B14878(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  size_t v13;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (v7 > 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, _QWORD))(v6 + 48))(__src, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 32)) >= 2)
    {
LABEL_9:
      if (v7 >= 2)
        v13 = v9 + 8;
      else
        v13 = v9 + 9;
      memcpy(__dst, __src, v13);
      return __dst;
    }
  }
  else if (__src[v10])
  {
    v11 = __src[v10] - 1;
    v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0)
    {
      v11 = 0;
      v12 = *(_DWORD *)__src;
    }
    if ((v12 | v11) != 0xFFFFFFFF)
      goto LABEL_9;
  }
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
  {
    memcpy(__dst, __src, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
  }
  *(_QWORD *)(((unint64_t)__dst + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v8 + 7] & 0xFFFFFFFFFFFFF8);
  if (v7 <= 1)
    *((_BYTE *)__dst + v10) = 0;
  return __dst;
}

_DWORD *sub_213B149C4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  unsigned int (*v13)(_DWORD *, uint64_t, uint64_t);
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t (*v20)(_DWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  size_t v23;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (v7 <= 1)
  {
    if (*((_BYTE *)a1 + v10))
    {
      v11 = *((unsigned __int8 *)a1 + v10) - 1;
      if ((_DWORD)v9 == -8)
      {
        v12 = 0;
      }
      else
      {
        v11 = 0;
        v12 = *a1;
      }
      if ((v12 | v11) != 0xFFFFFFFF)
      {
        if (*((_BYTE *)a2 + v10))
        {
          v16 = *((unsigned __int8 *)a2 + v10) - 1;
          if ((_DWORD)v9 == -8)
          {
            v17 = 0;
          }
          else
          {
            v16 = 0;
            v17 = *a2;
          }
          if ((v17 | v16) != 0xFFFFFFFF)
            goto LABEL_35;
        }
        goto LABEL_39;
      }
    }
    if (*((_BYTE *)a2 + v10))
    {
      v18 = *((unsigned __int8 *)a2 + v10) - 1;
      if ((_DWORD)v9 == -8)
      {
        v19 = 0;
      }
      else
      {
        v18 = 0;
        v19 = *a2;
      }
      if ((v19 | v18) != 0xFFFFFFFF)
      {
        v13 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
LABEL_24:
        if (!v13(a1, 1, v5))
          (*(void (**)(_DWORD *, uint64_t))(v6 + 8))(a1, v5);
        goto LABEL_35;
      }
    }
LABEL_26:
    v20 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    v21 = v20(a1, 1, v5);
    v22 = v20(a2, 1, v5);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
LABEL_32:
        *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
        return a1;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 24))(a1, a2, v5);
        goto LABEL_32;
      }
      (*(void (**)(_DWORD *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    goto LABEL_32;
  }
  v13 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
  v14 = v13(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 32));
  v15 = v13(a2, v7, v5);
  if (v14 < 2)
  {
    if (v15 >= 2)
      goto LABEL_24;
    goto LABEL_26;
  }
  if (v15 >= 2)
  {
LABEL_35:
    if (v7 >= 2)
      v23 = v9 + 8;
    else
      v23 = v9 + 9;
    memcpy(a1, a2, v23);
    return a1;
  }
LABEL_39:
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
  if (v7 <= 1)
    *((_BYTE *)a1 + v10) = 0;
  return a1;
}

void *sub_213B14C98(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  size_t v13;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (v7 > 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, _QWORD))(v6 + 48))(__src, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 32)) >= 2)
    {
LABEL_9:
      if (v7 >= 2)
        v13 = v9 + 8;
      else
        v13 = v9 + 9;
      memcpy(__dst, __src, v13);
      return __dst;
    }
  }
  else if (__src[v10])
  {
    v11 = __src[v10] - 1;
    v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0)
    {
      v11 = 0;
      v12 = *(_DWORD *)__src;
    }
    if ((v12 | v11) != 0xFFFFFFFF)
      goto LABEL_9;
  }
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(__src, 1, v5))
  {
    memcpy(__dst, __src, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
  }
  *(_QWORD *)(((unint64_t)__dst + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v8 + 7] & 0xFFFFFFFFFFFFF8);
  if (v7 <= 1)
    *((_BYTE *)__dst + v10) = 0;
  return __dst;
}

_DWORD *sub_213B14DE4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  unsigned int (*v13)(_DWORD *, uint64_t, uint64_t);
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t (*v20)(_DWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  size_t v23;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (v7 <= 1)
  {
    if (*((_BYTE *)a1 + v10))
    {
      v11 = *((unsigned __int8 *)a1 + v10) - 1;
      if ((_DWORD)v9 == -8)
      {
        v12 = 0;
      }
      else
      {
        v11 = 0;
        v12 = *a1;
      }
      if ((v12 | v11) != 0xFFFFFFFF)
      {
        if (*((_BYTE *)a2 + v10))
        {
          v16 = *((unsigned __int8 *)a2 + v10) - 1;
          if ((_DWORD)v9 == -8)
          {
            v17 = 0;
          }
          else
          {
            v16 = 0;
            v17 = *a2;
          }
          if ((v17 | v16) != 0xFFFFFFFF)
            goto LABEL_35;
        }
        goto LABEL_39;
      }
    }
    if (*((_BYTE *)a2 + v10))
    {
      v18 = *((unsigned __int8 *)a2 + v10) - 1;
      if ((_DWORD)v9 == -8)
      {
        v19 = 0;
      }
      else
      {
        v18 = 0;
        v19 = *a2;
      }
      if ((v19 | v18) != 0xFFFFFFFF)
      {
        v13 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
LABEL_24:
        if (!v13(a1, 1, v5))
          (*(void (**)(_DWORD *, uint64_t))(v6 + 8))(a1, v5);
        goto LABEL_35;
      }
    }
LABEL_26:
    v20 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    v21 = v20(a1, 1, v5);
    v22 = v20(a2, 1, v5);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
LABEL_32:
        *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
        return a1;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 40))(a1, a2, v5);
        goto LABEL_32;
      }
      (*(void (**)(_DWORD *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    goto LABEL_32;
  }
  v13 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
  v14 = v13(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 32));
  v15 = v13(a2, v7, v5);
  if (v14 < 2)
  {
    if (v15 >= 2)
      goto LABEL_24;
    goto LABEL_26;
  }
  if (v15 >= 2)
  {
LABEL_35:
    if (v7 >= 2)
      v23 = v9 + 8;
    else
      v23 = v9 + 9;
    memcpy(a1, a2, v23);
    return a1;
  }
LABEL_39:
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
  if (v7 <= 1)
    *((_BYTE *)a1 + v10) = 0;
  return a1;
}

uint64_t sub_213B150B8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char v12;
  unsigned int v13;
  int v14;
  int v15;
  uint64_t result;
  unsigned int v17;
  BOOL v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (v5 >= 2)
  {
    v9 = 8;
  }
  else
  {
    v7 = 0;
    v9 = 9;
  }
  if (!a2)
    return 0;
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_25;
  v11 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + v9;
  v12 = 8 * v11;
  if (v11 > 3)
  {
LABEL_14:
    v14 = *((unsigned __int8 *)a1 + v11);
    if (!*((_BYTE *)a1 + v11))
      goto LABEL_25;
LABEL_17:
    v15 = (v14 - 1) << v12;
    if (v11 >= 4)
      v15 = 0;
    if ((_DWORD)v11)
    {
      if ((_DWORD)v11 == 1)
        LODWORD(v11) = *(unsigned __int8 *)a1;
      else
        LODWORD(v11) = *a1;
    }
    return v7 + (v11 | v15) + 1;
  }
  v13 = ((v10 + ~(-1 << v12)) >> v12) + 1;
  if (HIWORD(v13))
  {
    v14 = *(_DWORD *)((char *)a1 + v11);
    if (v14)
      goto LABEL_17;
  }
  else if (v13 > 0xFF)
  {
    v14 = *(unsigned __int16 *)((char *)a1 + v11);
    if (*(_WORD *)((char *)a1 + v11))
      goto LABEL_17;
  }
  else if (v13 >= 2)
  {
    goto LABEL_14;
  }
LABEL_25:
  if (!v7)
    return 0;
  if (v5 < 2)
    return 0;
  v17 = (*(uint64_t (**)(void))(v4 + 48))();
  v18 = v17 >= 2;
  result = v17 - 2;
  if ((_DWORD)result == 0 || !v18)
    return 0;
  return result;
}

void sub_213B151CC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  BOOL v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  v11 = 8;
  if (v8 < 2)
    v11 = 9;
  v12 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + v11;
  v13 = v9 - 1;
  if (v8 < 2)
    v13 = 0;
  v14 = a3 >= v13;
  v15 = a3 - v13;
  if (v15 != 0 && v14)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v13 < a2)
        goto LABEL_19;
      goto LABEL_27;
    }
    v16 = ((v15 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v16))
    {
      v6 = 4u;
      if (v13 < a2)
      {
LABEL_19:
        v17 = ~v13 + a2;
        if (v12 < 4)
        {
          if (!(_DWORD)v12)
            goto LABEL_25;
          v17 &= ~(-1 << (8 * v12));
          bzero(a1, v12);
          if ((_DWORD)v12 == 1)
          {
            *a1 = v17;
            goto LABEL_25;
          }
        }
        else
        {
          bzero(a1, v12);
        }
        *(_DWORD *)a1 = v17;
LABEL_25:
        __asm { BR              X10 }
      }
LABEL_27:
      __asm { BR              X13 }
    }
    if (v16 >= 0x100)
      v6 = 2;
    else
      v6 = v16 > 1;
  }
  if (v13 < a2)
    goto LABEL_19;
  goto LABEL_27;
}

void sub_213B15338(int a1, int a2, unsigned int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  unsigned int v17;
  int v18;
  _DWORD *v19;
  uint64_t v20;
  int v21;

  *((_BYTE *)v19 + v20) = 0;
  if (a2)
  {
    if (a2 + 1 <= v17)
    {
      if (a2 != -1 && a3 >= 2)
        (*(void (**)(_DWORD *, _QWORD))(v16 + 56))(v19, (a2 + 2));
    }
    else if (((v18 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v21 = a2 - v17;
      bzero(v19, ((v18 + 7) & 0xFFFFFFF8) + 8);
      *v19 = v21;
    }
  }
}

void sub_213B153BC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x213B153C4);
  JUMPOUT(0x213B1535CLL);
}

uint64_t sub_213B153DC(_DWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 32) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  v4 = *(_QWORD *)(v2 + 64);
  if (!v3)
    ++v4;
  if (v3 > 1)
  {
    v9 = (*(uint64_t (**)(void))(v2 + 48))();
    if (v9 >= 2)
      return v9 - 1;
    else
      return 0;
  }
  else
  {
    v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (*((_BYTE *)a1 + v5))
    {
      v6 = v5 & 0xFFFFFFF8;
      if ((v5 & 0xFFFFFFF8) != 0)
        v7 = 0;
      else
        v7 = *((unsigned __int8 *)a1 + v5) - 1;
      if (v6)
        v8 = *a1;
      else
        v8 = 0;
      return (v8 | v7) + 1;
    }
    else
    {
      return 0;
    }
  }
}

void sub_213B1546C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a2 <= v6)
  {
    if (v5 <= 1)
    {
      a1[v8] = 0;
    }
    else if (a2)
    {
      (*(void (**)(_BYTE *, _QWORD, _QWORD))(v4 + 56))(a1, a2 + 1, *(unsigned int *)(v4 + 84));
    }
  }
  else
  {
    if ((((_DWORD)v7 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a2 - v6;
    else
      v9 = 1;
    if ((((_DWORD)v7 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    if (v5 <= 1)
      a1[v8] = v9;
  }
}

void _s10RaceResultOMa()
{
  JUMPOUT(0x2199BCF8CLL);
}

uint64_t sub_213B15540@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  unint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  char *v61;

  v2 = v1;
  v58 = a1;
  v3 = sub_213B2BBD0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)&v52 - v7;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v8 = *(_QWORD *)(v56 - 8);
  v9 = MEMORY[0x24BDAC7A8](v56);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v52 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v57 = (char *)&v52 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v52 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v52 - v20;
  __swift_instantiateConcreteTypeFromMangledName(qword_254D1A2E8);
  v22 = *(_QWORD *)(v8 + 72);
  v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v53 = v22;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_213B2E300;
  v55 = v24;
  v60 = v24 + v23;
  v25 = (void *)sub_213B2BDF8();
  v26 = (void *)sub_213B2BDF8();
  v27 = v2;
  v28 = objc_msgSend(v2, sel_URLForResource_withExtension_, v25, v26);

  if (v28)
  {
    sub_213B2BBA0();

    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v30 = v21;
    v31 = 0;
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v30 = v21;
    v31 = 1;
  }
  v59 = v29;
  v29(v30, v31, 1, v3);
  v32 = v60;
  sub_213B15B2C((uint64_t)v21, v60);
  v33 = (void *)sub_213B2BDF8();
  v34 = (void *)sub_213B2BDF8();
  v35 = objc_msgSend(v27, sel_URLForResource_withExtension_, v33, v34);

  if (v35)
  {
    sub_213B2BBA0();

    v36 = 0;
  }
  else
  {
    v36 = 1;
  }
  v37 = v53;
  v59(v19, v36, 1, v3);
  v38 = v32 + v37;
  sub_213B15B2C((uint64_t)v19, v32 + v37);
  sub_213B0D074(v32, (uint64_t)v14);
  sub_213B15B2C((uint64_t)v14, (uint64_t)v11);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v39(v11, 1, v3) == 1)
  {
    sub_213B15B74((uint64_t)v11);
    v40 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v41 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v42 = v54;
    v41(v54, v11, v3);
    v41(v61, v42, v3);
    v40 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_213AE146C(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
    v44 = *(_QWORD *)(v40 + 16);
    v43 = *(_QWORD *)(v40 + 24);
    if (v44 >= v43 >> 1)
      v40 = sub_213AE146C(v43 > 1, v44 + 1, 1, v40);
    *(_QWORD *)(v40 + 16) = v44 + 1;
    v41((char *)(v40+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v44), v61, v3);
  }
  sub_213B0D074(v38, (uint64_t)v14);
  sub_213B15B2C((uint64_t)v14, (uint64_t)v11);
  if (v39(v11, 1, v3) == 1)
  {
    sub_213B15B74((uint64_t)v11);
    v45 = (uint64_t)v57;
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v47 = v54;
    v46(v54, v11, v3);
    v46(v61, v47, v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v40 = sub_213AE146C(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
    v45 = (uint64_t)v57;
    v49 = *(_QWORD *)(v40 + 16);
    v48 = *(_QWORD *)(v40 + 24);
    if (v49 >= v48 >> 1)
      v40 = sub_213AE146C(v48 > 1, v49 + 1, 1, v40);
    *(_QWORD *)(v40 + 16) = v49 + 1;
    v46((char *)(v40+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v49), v61, v3);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (*(_QWORD *)(v40 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v45, v40 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
    v50 = 0;
  }
  else
  {
    v50 = 1;
  }
  v59((char *)v45, v50, 1, v3);
  swift_bridgeObjectRelease();
  if (v39((char *)v45, 1, v3) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v58, v45, v3);
  sub_213B15B74(v45);
  result = sub_213B2C38C();
  __break(1u);
  return result;
}

uint64_t sub_213B15B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B15B74(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of VideoPlaybackControllable.startedHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.startedHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.startedHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.completedHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.completedHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.completedHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.featureHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.featureHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.featureHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.setPlaybackNotificationTimeRanges(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.transitionToFeatures()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.play()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of VideoPlaybackControllable.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t *sub_213B15C1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = sub_213B2BBD0();
      v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v12((uint64_t *)((char *)a1 + *(int *)(v13 + 48)), (uint64_t *)((char *)a2 + *(int *)(v13 + 48)), v11);
      v12((uint64_t *)((char *)a1 + *(int *)(v13 + 64)), (uint64_t *)((char *)a2 + *(int *)(v13 + 64)), v11);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_213B2BBD0();
      v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
      v8((uint64_t *)((char *)a1 + *(int *)(v9 + 48)), (uint64_t *)((char *)a2 + *(int *)(v9 + 48)), v7);
    }
    else
    {
      v14 = sub_213B2BBD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_213B15D8C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      v4 = sub_213B2BBD0();
      v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v8(a1, v4);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v8(a1 + *(int *)(v5 + 48), v4);
      return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(v5 + 64), v4);
    case 1:
      v6 = sub_213B2BBD0();
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v9(a1, v6);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48);
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + v7, v6);
    case 0:
      v3 = sub_213B2BBD0();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

uint64_t sub_213B15E98(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_213B2BBD0();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
    v9(a1 + *(int *)(v10 + 64), a2 + *(int *)(v10 + 64), v8);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_213B2BBD0();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
    v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
  }
  else
  {
    v11 = sub_213B2BBD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_213B15FD0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_213AD53FC(a1, type metadata accessor for VideoViewConfiguration.VideoSequence);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_213B2BBD0();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
      v9(a1 + *(int *)(v10 + 64), a2 + *(int *)(v10 + 64), v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_213B2BBD0();
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
      v6(a1, a2, v5);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
      v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
    }
    else
    {
      v11 = sub_213B2BBD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for VideoViewConfiguration.VideoSequence(uint64_t a1)
{
  return sub_213AD35E0(a1, qword_254D1A360);
}

uint64_t sub_213B16134(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_213B2BBD0();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
    v9(a1 + *(int *)(v10 + 64), a2 + *(int *)(v10 + 64), v8);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_213B2BBD0();
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
    v6(a1, a2, v5);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
    v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
  }
  else
  {
    v11 = sub_213B2BBD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_213B1626C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_213AD53FC(a1, type metadata accessor for VideoViewConfiguration.VideoSequence);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_213B2BBD0();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
      v9(a1, a2, v8);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v9(a1 + *(int *)(v10 + 48), a2 + *(int *)(v10 + 48), v8);
      v9(a1 + *(int *)(v10 + 64), a2 + *(int *)(v10 + 64), v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_213B2BBD0();
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
      v6(a1, a2, v5);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
      v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
    }
    else
    {
      v11 = sub_213B2BBD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_213B163BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_213B163C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_213B163D8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_213B163E8()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  char *v5;
  char *v6;

  result = sub_213B2BBD0();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v5 = &v3;
    swift_getTupleTypeLayout3();
    v6 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_213B16488(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(_QWORD *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for VideoViewConfiguration.VideoSequence(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_213B2BBD0();
      v12 = *(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v12(a1, a2, v8);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v12((_QWORD *)((char *)a1 + *(int *)(v13 + 48)), &a2[*(int *)(v13 + 48)], v8);
      v12((_QWORD *)((char *)a1 + *(int *)(v13 + 64)), &a2[*(int *)(v13 + 64)], v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_213B2BBD0();
      v9 = *(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
      v9((_QWORD *)((char *)a1 + *(int *)(v10 + 48)), &a2[*(int *)(v10 + 48)], v8);
    }
    else
    {
      v8 = sub_213B2BBD0();
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
    v14 = a3[5];
    v15 = (char *)a1 + v14;
    v16 = &a2[v14];
    sub_213B2BBD0();
    v17 = *(_QWORD *)(v8 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v18(v15, v16, v8);
    v19 = a3[6];
    v20 = (char *)a1 + v19;
    v21 = &a2[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v19], 1, v8))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v8);
    }
    v23 = a3[7];
    v24 = (char *)a1 + v23;
    v25 = &a2[v23];
    if (*(_QWORD *)&a2[v23 + 24] == 1)
    {
      v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
    }
    else
    {
      v27 = *(_QWORD *)v25;
      v28 = *((_QWORD *)v25 + 1);
      sub_213AD5300(*(_QWORD *)v25, v28);
      *(_QWORD *)v24 = v27;
      *((_QWORD *)v24 + 1) = v28;
      v29 = (void *)*((_QWORD *)v25 + 3);
      *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
      *((_QWORD *)v24 + 3) = v29;
      v30 = v29;
    }
    v31 = a3[9];
    *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)&a2[a3[8]];
    *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)&a2[v31];
    v32 = a3[10];
    v33 = a3[11];
    v34 = (char *)a1 + v32;
    v35 = &a2[v32];
    v36 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v36;
    v37 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v37;
    v34[128] = v35[128];
    v38 = *((_OWORD *)v35 + 7);
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    *((_OWORD *)v34 + 7) = v38;
    v39 = *((_OWORD *)v35 + 5);
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((_OWORD *)v34 + 5) = v39;
    *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)&a2[v33];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_213B16730(uint64_t a1, int *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v6 = sub_213B2BBD0();
      v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v7(a1, v6);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v7(a1 + *(int *)(v8 + 48), v6);
      v7(a1 + *(int *)(v8 + 64), v6);
      break;
    case 1:
      v9 = sub_213B2BBD0();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v10(a1, v9);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
      v10(a1 + *(int *)(v11 + 48), v9);
      break;
    case 0:
      v5 = sub_213B2BBD0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
  }
  v12 = a1 + a2[5];
  v13 = sub_213B2BBD0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v12, v13);
  v16 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
    v15(v16, v13);
  v17 = a1 + a2[7];
  if (*(_QWORD *)(v17 + 24) != 1)
  {
    sub_213AD5374(*(_QWORD *)v17, *(_QWORD *)(v17 + 8));

  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B168B8(uint64_t a1, uint64_t a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  void (*v16)(void *, const void *, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_213B2BBD0();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v10(a1, a2, v7);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    v10(a1 + *(int *)(v11 + 48), a2 + *(int *)(v11 + 48), v7);
    v10(a1 + *(int *)(v11 + 64), a2 + *(int *)(v11 + 64), v7);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_213B2BBD0();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
    v8(a1 + *(int *)(v9 + 48), a2 + *(int *)(v9 + 48), v7);
  }
  else
  {
    v7 = sub_213B2BBD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  v12 = a3[5];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  sub_213B2BBD0();
  v15 = *(_QWORD *)(v7 - 8);
  v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 16);
  v16(v13, v14, v7);
  v17 = a3[6];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a2 + v17, 1, v7))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v7);
  }
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  if (*(_QWORD *)(a2 + v21 + 24) == 1)
  {
    v24 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v24;
  }
  else
  {
    v25 = *v23;
    v26 = v23[1];
    sub_213AD5300(*v23, v26);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v26;
    v27 = (void *)v23[3];
    *(_QWORD *)(v22 + 16) = v23[2];
    *(_QWORD *)(v22 + 24) = v27;
    v28 = v27;
  }
  v29 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  v34 = *(_OWORD *)(v33 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 48) = v34;
  v35 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v35;
  *(_BYTE *)(v32 + 128) = *(_BYTE *)(v33 + 128);
  v36 = *(_OWORD *)(v33 + 112);
  *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
  *(_OWORD *)(v32 + 112) = v36;
  v37 = *(_OWORD *)(v33 + 80);
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
  *(_OWORD *)(v32 + 80) = v37;
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213B16B34(uint64_t a1, uint64_t a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;

  if (a1 != a2)
  {
    sub_213AD53FC(a1, type metadata accessor for VideoViewConfiguration.VideoSequence);
    type metadata accessor for VideoViewConfiguration.VideoSequence(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_213B2BBD0();
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v11(a1 + *(int *)(v12 + 48), a2 + *(int *)(v12 + 48), v10);
      v11(a1 + *(int *)(v12 + 64), a2 + *(int *)(v12 + 64), v10);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_213B2BBD0();
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
      v8(a1 + *(int *)(v9 + 48), a2 + *(int *)(v9 + 48), v7);
    }
    else
    {
      v13 = sub_213B2BBD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  v14 = a3[5];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_213B2BBD0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  v19(v15, v16, v17);
  v20 = a3[6];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v24 = v23(a1 + v20, 1, v17);
  v25 = v23((uint64_t)v22, 1, v17);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v21, v22, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
LABEL_13:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  v19((uint64_t)v21, (uint64_t)v22, v17);
LABEL_14:
  v27 = a3[7];
  v28 = a1 + v27;
  v29 = (uint64_t *)(a2 + v27);
  v30 = *(_QWORD *)(a1 + v27 + 24);
  v31 = *(_QWORD *)(a2 + v27 + 24);
  if (v30 == 1)
  {
    if (v31 == 1)
    {
      v32 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *(_OWORD *)(v28 + 16) = v32;
    }
    else
    {
      v34 = *v29;
      v35 = v29[1];
      sub_213AD5300(*v29, v35);
      *(_QWORD *)v28 = v34;
      *(_QWORD *)(v28 + 8) = v35;
      *(_QWORD *)(v28 + 16) = v29[2];
      v36 = (void *)v29[3];
      *(_QWORD *)(v28 + 24) = v36;
      v37 = v36;
    }
  }
  else if (v31 == 1)
  {
    sub_213B046AC(v28);
    v33 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v33;
  }
  else
  {
    v38 = *v29;
    v39 = v29[1];
    sub_213AD5300(*v29, v39);
    v40 = *(_QWORD *)v28;
    v41 = *(_QWORD *)(v28 + 8);
    *(_QWORD *)v28 = v38;
    *(_QWORD *)(v28 + 8) = v39;
    sub_213AD5374(v40, v41);
    *(_QWORD *)(v28 + 16) = v29[2];
    v42 = *(void **)(v28 + 24);
    v43 = (void *)v29[3];
    *(_QWORD *)(v28 + 24) = v43;
    v44 = v43;

  }
  v45 = a3[8];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v48 = a3[10];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_OWORD *)v49 = *(_OWORD *)v50;
  v51 = *(_OWORD *)(v50 + 16);
  v52 = *(_OWORD *)(v50 + 32);
  v53 = *(_OWORD *)(v50 + 64);
  *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
  *(_OWORD *)(v49 + 64) = v53;
  *(_OWORD *)(v49 + 16) = v51;
  *(_OWORD *)(v49 + 32) = v52;
  v54 = *(_OWORD *)(v50 + 80);
  v55 = *(_OWORD *)(v50 + 96);
  v56 = *(_OWORD *)(v50 + 112);
  *(_BYTE *)(v49 + 128) = *(_BYTE *)(v50 + 128);
  *(_OWORD *)(v49 + 96) = v55;
  *(_OWORD *)(v49 + 112) = v56;
  *(_OWORD *)(v49 + 80) = v54;
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213B16EAC(uint64_t a1, uint64_t a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  void (*v16)(void *, const void *, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_213B2BBD0();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v10(a1, a2, v7);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    v10(a1 + *(int *)(v11 + 48), a2 + *(int *)(v11 + 48), v7);
    v10(a1 + *(int *)(v11 + 64), a2 + *(int *)(v11 + 64), v7);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_213B2BBD0();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
    v8(a1 + *(int *)(v9 + 48), a2 + *(int *)(v9 + 48), v7);
  }
  else
  {
    v7 = sub_213B2BBD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  v12 = a3[5];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  sub_213B2BBD0();
  v15 = *(_QWORD *)(v7 - 8);
  v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 32);
  v16(v13, v14, v7);
  v17 = a3[6];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a2 + v17, 1, v7))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v7);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = (_OWORD *)(a1 + v21);
  v24 = (_OWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v26 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = v29;
  v30 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v30;
  *(_BYTE *)(v27 + 128) = *(_BYTE *)(v28 + 128);
  v31 = *(_OWORD *)(v28 + 112);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
  *(_OWORD *)(v27 + 112) = v31;
  v32 = *(_OWORD *)(v28 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
  *(_OWORD *)(v27 + 80) = v32;
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_213B170F4(uint64_t a1, uint64_t a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  if (a1 != a2)
  {
    sub_213AD53FC(a1, type metadata accessor for VideoViewConfiguration.VideoSequence);
    type metadata accessor for VideoViewConfiguration.VideoSequence(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_213B2BBD0();
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(a1, a2, v10);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
      v11(a1 + *(int *)(v12 + 48), a2 + *(int *)(v12 + 48), v10);
      v11(a1 + *(int *)(v12 + 64), a2 + *(int *)(v12 + 64), v10);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_213B2BBD0();
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0);
      v8(a1 + *(int *)(v9 + 48), a2 + *(int *)(v9 + 48), v7);
    }
    else
    {
      v13 = sub_213B2BBD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  v14 = a3[5];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_213B2BBD0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  v19(v15, v16, v17);
  v20 = a3[6];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v24 = v23(a1 + v20, 1, v17);
  v25 = v23((uint64_t)v22, 1, v17);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v21, v22, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
LABEL_13:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  v19((uint64_t)v21, (uint64_t)v22, v17);
LABEL_14:
  v27 = a3[7];
  v28 = (uint64_t *)(a1 + v27);
  v29 = a2 + v27;
  if (*(_QWORD *)(a1 + v27 + 24) != 1)
  {
    if (*(_QWORD *)(v29 + 24) != 1)
    {
      v31 = *v28;
      v32 = v28[1];
      *(_OWORD *)v28 = *(_OWORD *)v29;
      sub_213AD5374(v31, v32);
      v33 = (void *)v28[3];
      v34 = *(_QWORD *)(v29 + 24);
      v28[2] = *(_QWORD *)(v29 + 16);
      v28[3] = v34;

      goto LABEL_19;
    }
    sub_213B046AC((uint64_t)v28);
  }
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
LABEL_19:
  v35 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  v36 = a3[10];
  v37 = a3[11];
  v38 = a1 + v36;
  v39 = a2 + v36;
  v40 = *(_OWORD *)(v39 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(_OWORD *)(v38 + 48) = v40;
  v41 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v41;
  *(_BYTE *)(v38 + 128) = *(_BYTE *)(v39 + 128);
  v42 = *(_OWORD *)(v39 + 112);
  *(_OWORD *)(v38 + 96) = *(_OWORD *)(v39 + 96);
  *(_OWORD *)(v38 + 112) = v42;
  v43 = *(_OWORD *)(v39 + 80);
  *(_OWORD *)(v38 + 64) = *(_OWORD *)(v39 + 64);
  *(_OWORD *)(v38 + 80) = v43;
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213B173EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B173F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  int v17;

  v6 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_213B2BBD0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[11]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  v17 = v16 - 1;
  if (v17 < 0)
    v17 = -1;
  return (v17 + 1);
}

uint64_t sub_213B174D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B174E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_213B2BBD0();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[11]) = a2;
  return result;
}

uint64_t type metadata accessor for VideoViewConfiguration(uint64_t a1)
{
  return sub_213AD35E0(a1, (uint64_t *)&unk_254D1A3F0);
}

void sub_213B175C0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for VideoViewConfiguration.VideoSequence(319);
  if (v0 <= 0x3F)
  {
    sub_213B2BBD0();
    if (v1 <= 0x3F)
    {
      sub_213B17694();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_213B17694()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254D1A400)
  {
    sub_213B2BBD0();
    v0 = sub_213B2C23C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254D1A400);
  }
}

char *sub_213B176E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  id v24;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  v13 = type metadata accessor for VideoViewConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v25 - v18;
  sub_213AD6478(a1, (uint64_t)v12, &qword_254D18C58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_213AD6270((uint64_t)v12, &qword_254D18C58);
  }
  else
  {
    sub_213B088A8((uint64_t)v12, (uint64_t)v19);
    sub_213AD6478((uint64_t)&v19[*(int *)(v13 + 24)], (uint64_t)v6, &qword_254D188E0);
    v20 = sub_213B2BBD0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v6, 1, v20) == 1)
    {
      sub_213AD53FC((uint64_t)v19, type metadata accessor for VideoViewConfiguration);
      sub_213AD6270((uint64_t)v6, &qword_254D188E0);
    }
    else
    {
      sub_213AD6270((uint64_t)v6, &qword_254D188E0);
      if (a2 && ((*(_BYTE *)(a2 + 48) & 1) == 0 || *(_QWORD *)(a2 + 88) != 1))
      {
        sub_213B1799C((uint64_t)v19, (uint64_t)v17);
        v24 = objc_allocWithZone((Class)type metadata accessor for PersonalizedVideoView(0));
        swift_retain();
        v22 = sub_213ACFD58((uint64_t)v17);
        sub_213B0C8DC(v22, a2);
        swift_release();
        sub_213AD53FC((uint64_t)v19, type metadata accessor for VideoViewConfiguration);

        return v22;
      }
      sub_213AD53FC((uint64_t)v19, type metadata accessor for VideoViewConfiguration);
    }
  }
  sub_213AD6478(a1, (uint64_t)v10, &qword_254D18C58);
  v21 = objc_allocWithZone((Class)type metadata accessor for AdjustedVideoView());
  return sub_213B1B370((uint64_t)v10);
}

uint64_t sub_213B1799C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoViewConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_213B179E8(char a1)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B17A44()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213B17AE8()
{
  sub_213B2C518();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B17B5C(char a1)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B17BB4()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213B17C40()
{
  sub_213B2C518();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B17CA8(char a1)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B17D04()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B17DB0(char a1)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B17E0C()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213B17E98()
{
  sub_213B2C518();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B17F18(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_213B17F60()
{
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B17FF4()
{
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

void sub_213B18038(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_213B1807C()
{
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

void sub_213B180E4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_213B1812C()
{
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

void sub_213B181A8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_213B181F0()
{
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B1827C()
{
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B182D0()
{
  sub_213B2C518();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B18340(uint64_t a1, char a2)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B18398()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213B18444()
{
  sub_213B2C518();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B184A8(uint64_t a1, char a2)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B184FC()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213B18580()
{
  sub_213B2C518();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B185FC(uint64_t a1, char a2)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B18654()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void sub_213B186E0(uint64_t a1, char a2)
{
  sub_213B2C518();
  __asm { BR              X10 }
}

uint64_t sub_213B18738()
{
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

void Product.WatchBandFeature.init()(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000213B32350;
}

uint64_t Product.WatchBandFeature.URLs.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13F74(a1);
}

uint64_t Product.WatchBand.urls(_:variant:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_213B18844(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_24D0BEE10, (void (*)(char *))sub_213AFE5A8);
}

uint64_t Product.WatchBandFeature.Images.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13F74(a1);
}

uint64_t Product.WatchBand.image(_:variant:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_213B18844(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_24D0BEE38, (void (*)(char *))sub_213AFE5B8);
}

uint64_t sub_213B18844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *))
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];

  sub_213AD8B28(v8 + *(int *)(a6 + 36), (uint64_t)v19);
  __swift_project_boxed_opaque_existential_0(v19, v19[3]);
  v14 = sub_213B18C6C();
  v16 = v15;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  swift_retain();
  sub_213B25548(v14, v16, a2, a3, a8, v17);
  swift_bridgeObjectRelease();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
}

uint64_t Product.WatchBandFeature.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Product.WatchBandFeature.Strings.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13F74(a1);
}

void *static Product.WatchBandFeature.Strings.allCases.getter()
{
  return &unk_24D0BACA0;
}

uint64_t Product.WatchBandFeature.Strings.rawValue.getter()
{
  return 1701736302;
}

uint64_t sub_213B18974()
{
  return sub_213B19F3C();
}

uint64_t sub_213B18998()
{
  return sub_213B1A02C();
}

uint64_t sub_213B189B8@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13FF4(a1);
}

void sub_213B189C4(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAD00;
}

void *static Product.WatchBandFeature.Images.allCases.getter()
{
  return &unk_24D0BAD28;
}

uint64_t Product.WatchBandFeature.Images.rawValue.getter()
{
  return 1684955490;
}

uint64_t sub_213B189F0()
{
  return sub_213B19F3C();
}

uint64_t sub_213B18A14()
{
  return sub_213B1A02C();
}

uint64_t sub_213B18A34@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13FF4(a1);
}

uint64_t sub_213B18A40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Product.WatchBandFeature.Images.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B18A64(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAD88;
}

uint64_t Product.WatchBandFeature.Videos.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13F74(a1);
}

void *static Product.WatchBandFeature.Videos.allCases.getter()
{
  return &unk_24D0BADE8;
}

uint64_t Product.WatchBandFeature.Videos.rawValue.getter()
{
  return 1701736302;
}

uint64_t sub_213B18A9C@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13FF4(a1);
}

void sub_213B18AA8(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAE48;
}

uint64_t Product.WatchBandFeature.Datas.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13F74(a1);
}

void *static Product.WatchBandFeature.Datas.allCases.getter()
{
  return &unk_24D0BAEA8;
}

uint64_t Product.WatchBandFeature.Datas.rawValue.getter()
{
  return 1701736302;
}

uint64_t sub_213B18AE0@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13FF4(a1);
}

uint64_t sub_213B18AEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Product.WatchBandFeature.Datas.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B18B10(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAF08;
}

void *static Product.WatchBandFeature.URLs.allCases.getter()
{
  return &unk_24D0BAF30;
}

uint64_t Product.WatchBandFeature.URLs.rawValue.getter()
{
  return 0x6361666863746177;
}

uint64_t sub_213B18B48()
{
  return sub_213B19F3C();
}

uint64_t sub_213B18B78()
{
  return sub_213B1A02C();
}

uint64_t sub_213B18BA4@<X0>(BOOL *a1@<X8>)
{
  return sub_213B13FF4(a1);
}

uint64_t sub_213B18BB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Product.WatchBandFeature.URLs.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B18BD4(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BAF90;
}

uint64_t sub_213B18BE4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_213B18C10@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  sub_213AE36D0(a1, a5, (uint64_t (*)(_QWORD))type metadata accessor for Product.Identifier);
  v10 = a5 + *(int *)(type metadata accessor for Product.WatchBand(0, a3, a4, v9) + 36);
  return sub_213AE1104(a2, v10);
}

uint64_t sub_213B18C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = type metadata accessor for Product.Identifier();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MarketingPartNumberURL();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213B1A0BC(v1, (uint64_t)v4);
  sub_213AE36D0((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for MarketingPartNumberURL);
  v8 = sub_213B2BBB8();
  sub_213B1A100(1uLL, v8, v9);
  swift_bridgeObjectRelease();
  v10 = sub_213B2C248();
  v12 = v11;
  swift_bridgeObjectRelease();
  v15[0] = v10;
  v15[1] = v12;
  sub_213B2BF0C();
  v13 = sub_213B2BE70();
  swift_bridgeObjectRelease();
  sub_213B1A19C((uint64_t)v7);
  return v13;
}

uint64_t Product.WatchBand.data(_:)()
{
  return 0;
}

uint64_t sub_213B18DDC(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  void (*v35)(__int128 *);
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v6 = sub_213B2BBD0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v34 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v34 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A618);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213B1A074(a1, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *((_QWORD *)v18 + 1);
    v21 = v18[16];
    *(_QWORD *)&v38 = *(_QWORD *)v18;
    v19 = v38;
    *((_QWORD *)&v38 + 1) = v20;
    LOBYTE(v39) = v21;
    BYTE1(v39) = 1;
    a2(&v38);
    return sub_213AE402C(v19, v20, v21);
  }
  v23 = *(_QWORD *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D1A620) + 48)];
  v36 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v36(v15, v18, v6);
  if (*(_QWORD *)(v23 + 16) && (v24 = sub_213AD4B1C(0x6361666863746157, 0xEE00746E756F4365), (v25 & 1) != 0))
  {
    sub_213AE39F4(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {
    sub_213B1A1D8((uint64_t)&v38);
    goto LABEL_20;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_20:
    v28 = MEMORY[0x24BEE4AF8];
LABEL_22:
    v38 = v28;
    LOWORD(v39) = 0;
    a2(&v38);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  v35 = a2;
  v26 = v37;
  if (v37 >= 1)
  {
    v27 = v15;
    v34 = a3;
    v28 = MEMORY[0x24BEE4AF8];
    v29 = 1;
    while (1)
    {
      v37 = v29;
      *(_QWORD *)&v38 = sub_213B2C458();
      *((_QWORD *)&v38 + 1) = v30;
      sub_213B2BEAC();
      sub_213B2BB88();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_213AE146C(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
      v32 = *(_QWORD *)(v28 + 16);
      v31 = *(_QWORD *)(v28 + 24);
      if (v32 >= v31 >> 1)
        v28 = sub_213AE146C(v31 > 1, v32 + 1, 1, v28);
      *(_QWORD *)(v28 + 16) = v32 + 1;
      v36((char *)(v28+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v32), v10, v6);
      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      if (v26 == v29)
        break;
      if (__OFADD__(v29++, 1))
      {
        __break(1u);
        goto LABEL_23;
      }
    }
    a2 = v35;
    v15 = v27;
    goto LABEL_22;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_213B19170(uint64_t a1, void (*a2)(_BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  id v15;
  void *v16;
  id v17;
  id v18;
  _BYTE v19[24];
  char v20;

  v4 = sub_213B2BBD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A618);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_213B1A074(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    *(_QWORD *)v19 = *(_QWORD *)v10;
    v11 = *(_QWORD *)v19;
    *(_QWORD *)&v19[8] = v12;
    *(_QWORD *)&v19[16] = v13;
    v20 = 1;
    a2(v19);
    return sub_213AE402C(v11, v12, v13);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A620);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v10, v4);
    v15 = objc_allocWithZone(MEMORY[0x24BDD1488]);
    v16 = (void *)sub_213B2BB7C();
    v17 = objc_msgSend(v15, sel_initWithURL_, v16);

    if (v17)
    {
      *(_QWORD *)v19 = v17;
      *(_OWORD *)&v19[8] = xmmword_213B32890;
      v20 = 0;
      v18 = v17;
      a2(v19);

    }
    else
    {
      *(_OWORD *)v19 = xmmword_213B328A0;
      *(_QWORD *)&v19[16] = 2;
      v20 = 1;
      a2(v19);
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_213B19358()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_213B19380()
{
  unint64_t result;

  result = qword_254D1A448;
  if (!qword_254D1A448)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Strings, &type metadata for Product.WatchBandFeature.Strings);
    atomic_store(result, (unint64_t *)&qword_254D1A448);
  }
  return result;
}

uint64_t sub_213B193C4()
{
  return sub_213AE1FE0(&qword_254D1A450, &qword_254D1A458);
}

unint64_t sub_213B193EC()
{
  unint64_t result;

  result = qword_254D1A460;
  if (!qword_254D1A460)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Images, &type metadata for Product.WatchBandFeature.Images);
    atomic_store(result, (unint64_t *)&qword_254D1A460);
  }
  return result;
}

uint64_t sub_213B19430()
{
  return sub_213AE1FE0(&qword_254D1A468, &qword_254D1A470);
}

unint64_t sub_213B19458()
{
  unint64_t result;

  result = qword_254D1A478;
  if (!qword_254D1A478)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Videos, &type metadata for Product.WatchBandFeature.Videos);
    atomic_store(result, (unint64_t *)&qword_254D1A478);
  }
  return result;
}

uint64_t sub_213B1949C()
{
  return sub_213AE1FE0(&qword_254D1A480, &qword_254D1A488);
}

unint64_t sub_213B194C4()
{
  unint64_t result;

  result = qword_254D1A490;
  if (!qword_254D1A490)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Datas, &type metadata for Product.WatchBandFeature.Datas);
    atomic_store(result, (unint64_t *)&qword_254D1A490);
  }
  return result;
}

uint64_t sub_213B19508()
{
  return sub_213AE1FE0(&qword_254D1A498, &qword_254D1A4A0);
}

unint64_t sub_213B19530()
{
  unint64_t result;

  result = qword_254D1A4A8;
  if (!qword_254D1A4A8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.URLs, &type metadata for Product.WatchBandFeature.URLs);
    atomic_store(result, (unint64_t *)&qword_254D1A4A8);
  }
  return result;
}

uint64_t sub_213B19574()
{
  return sub_213AE1FE0(&qword_254D1A4B0, &qword_254D1A4B8);
}

unint64_t sub_213B1959C()
{
  unint64_t result;

  result = qword_254D1A4C0;
  if (!qword_254D1A4C0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Datas, &type metadata for Product.WatchBandFeature.Datas);
    atomic_store(result, (unint64_t *)&qword_254D1A4C0);
  }
  return result;
}

unint64_t sub_213B195E4()
{
  unint64_t result;

  result = qword_254D1A4C8;
  if (!qword_254D1A4C8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Datas, &type metadata for Product.WatchBandFeature.Datas);
    atomic_store(result, (unint64_t *)&qword_254D1A4C8);
  }
  return result;
}

unint64_t sub_213B1962C()
{
  unint64_t result;

  result = qword_254D1A4D0;
  if (!qword_254D1A4D0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Images, &type metadata for Product.WatchBandFeature.Images);
    atomic_store(result, (unint64_t *)&qword_254D1A4D0);
  }
  return result;
}

unint64_t sub_213B19674()
{
  unint64_t result;

  result = qword_254D1A4D8;
  if (!qword_254D1A4D8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Images, &type metadata for Product.WatchBandFeature.Images);
    atomic_store(result, (unint64_t *)&qword_254D1A4D8);
  }
  return result;
}

unint64_t sub_213B196BC()
{
  unint64_t result;

  result = qword_254D1A4E0;
  if (!qword_254D1A4E0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Strings, &type metadata for Product.WatchBandFeature.Strings);
    atomic_store(result, (unint64_t *)&qword_254D1A4E0);
  }
  return result;
}

unint64_t sub_213B19704()
{
  unint64_t result;

  result = qword_254D1A4E8;
  if (!qword_254D1A4E8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Strings, &type metadata for Product.WatchBandFeature.Strings);
    atomic_store(result, (unint64_t *)&qword_254D1A4E8);
  }
  return result;
}

unint64_t sub_213B1974C()
{
  unint64_t result;

  result = qword_254D1A4F0;
  if (!qword_254D1A4F0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.URLs, &type metadata for Product.WatchBandFeature.URLs);
    atomic_store(result, (unint64_t *)&qword_254D1A4F0);
  }
  return result;
}

unint64_t sub_213B19794()
{
  unint64_t result;

  result = qword_254D1A4F8;
  if (!qword_254D1A4F8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.URLs, &type metadata for Product.WatchBandFeature.URLs);
    atomic_store(result, (unint64_t *)&qword_254D1A4F8);
  }
  return result;
}

unint64_t sub_213B197DC()
{
  unint64_t result;

  result = qword_254D1A500;
  if (!qword_254D1A500)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Videos, &type metadata for Product.WatchBandFeature.Videos);
    atomic_store(result, (unint64_t *)&qword_254D1A500);
  }
  return result;
}

unint64_t sub_213B19824()
{
  unint64_t result;

  result = qword_254D1A508;
  if (!qword_254D1A508)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for Product.WatchBandFeature.Videos, &type metadata for Product.WatchBandFeature.Videos);
    atomic_store(result, (unint64_t *)&qword_254D1A508);
  }
  return result;
}

ValueMetadata *type metadata accessor for Product.WatchBandFeature()
{
  return &type metadata for Product.WatchBandFeature;
}

ValueMetadata *type metadata accessor for Product.WatchBandFeature.Strings()
{
  return &type metadata for Product.WatchBandFeature.Strings;
}

ValueMetadata *type metadata accessor for Product.WatchBandFeature.Images()
{
  return &type metadata for Product.WatchBandFeature.Images;
}

ValueMetadata *type metadata accessor for Product.WatchBandFeature.Videos()
{
  return &type metadata for Product.WatchBandFeature.Videos;
}

ValueMetadata *type metadata accessor for Product.WatchBandFeature.Datas()
{
  return &type metadata for Product.WatchBandFeature.Datas;
}

uint64_t _s16WatchBandFeatureV7StringsOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B198FC + 4 * byte_213B3235F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B1991C + 4 * byte_213B32364[v4]))();
}

_BYTE *sub_213B198FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B1991C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B19924(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B1992C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B19934(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B1993C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Product.WatchBandFeature.URLs()
{
  return &type metadata for Product.WatchBandFeature.URLs;
}

uint64_t sub_213B19958()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_213B19960()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213B2BBD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_213B199D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213B2BBD0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 36);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
  }
  return a1;
}

uint64_t sub_213B19A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return __swift_destroy_boxed_opaque_existential_0(a1 + *(int *)(a2 + 36));
}

uint64_t sub_213B19AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v6 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

uint64_t sub_213B19B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + *(int *)(a3 + 36)), (uint64_t *)(a2 + *(int *)(a3 + 36)));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_213B19CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t sub_213B19D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t sub_213B19DD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B19DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  if (*(_DWORD *)(*(_QWORD *)(type metadata accessor for Product.Identifier() - 8) + 84) == (_DWORD)a2)
  {
    v6 = type metadata accessor for MarketingPartNumberURL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
  }
  else
  {
    v8 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 24);
    if (v8 >= 0xFFFFFFFF)
      LODWORD(v8) = -1;
    return (v8 + 1);
  }
}

uint64_t sub_213B19E68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B19E74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Product.Identifier();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = type metadata accessor for MarketingPartNumberURL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, a2, a2, v9);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 36) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for Product.WatchBand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Product.WatchBand);
}

uint64_t sub_213B19F08()
{
  return sub_213B19F3C();
}

uint64_t sub_213B19F20()
{
  return sub_213B19F3C();
}

uint64_t sub_213B19F3C()
{
  sub_213B2C518();
  sub_213B2BE88();
  return sub_213B2C530();
}

uint64_t sub_213B19F88()
{
  return sub_213B2BE88();
}

uint64_t sub_213B19FA4()
{
  return sub_213B2BE88();
}

uint64_t sub_213B19FBC()
{
  return sub_213B2BE88();
}

uint64_t sub_213B19FCC()
{
  return sub_213B2BE88();
}

uint64_t sub_213B19FDC()
{
  return sub_213B2BE88();
}

uint64_t sub_213B19FF8()
{
  return sub_213B1A02C();
}

uint64_t sub_213B1A010()
{
  return sub_213B1A02C();
}

uint64_t sub_213B1A02C()
{
  sub_213B2C518();
  sub_213B2BE88();
  return sub_213B2C530();
}

uint64_t sub_213B1A074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B1A0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Product.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_213B1A100(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_213B2BEA0();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_213B2BF18();
  }
  __break(1u);
  return result;
}

uint64_t sub_213B1A19C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MarketingPartNumberURL();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213B1A1D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213B1A220()
{
  return SemanticVersion.init(asserting:)((uint64_t)&xmmword_254D1A628);
}

double ProductKitVersion.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_254D18428 != -1)
    swift_once();
  v2 = qword_254D1A638;
  result = *(double *)&xmmword_254D1A628;
  *(_OWORD *)a1 = xmmword_254D1A628;
  *(_QWORD *)(a1 + 16) = v2;
  return result;
}

_QWORD *Product.Catalog.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v11[5];

  v0 = type metadata accessor for MobileAssetManager();
  v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = &unk_254D1AEB0;
  *(_QWORD *)(v1 + 128) = 0;
  *(_QWORD *)(v1 + 136) = &unk_254D1AEA8;
  *(_QWORD *)(v1 + 144) = 0;
  v11[3] = v0;
  v11[4] = &off_24D0BF990;
  v11[0] = v1;
  type metadata accessor for Product.Catalog();
  v2 = (_QWORD *)swift_allocObject();
  v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
  v8 = *v6;
  v2[5] = v0;
  v2[6] = &off_24D0BF990;
  v2[2] = v8;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  return v2;
}

uint64_t sub_213B1A384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  __int128 v14[2];

  v9 = type metadata accessor for Product.Identifier();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213B1A0BC(a1, (uint64_t)v11);
  sub_213AD8B28(v4 + 16, (uint64_t)v14);
  return sub_213B18C10((uint64_t)v11, v14, a2, a3, a4);
}

uint64_t Product.Catalog.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t Product.Catalog.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t Product.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Product.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Product.Catalog()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Product.Identifier()
{
  uint64_t result;

  result = qword_254D1A748;
  if (!qword_254D1A748)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for Product()
{
  return objc_opt_self();
}

uint64_t method lookup function for Product()
{
  return swift_lookUpClassMethod();
}

uint64_t *initializeBufferWithCopyOfBuffer for Product.Identifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_213B2BBD0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t destroy for MarketingPartNumberURL(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MarketingPartNumberURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MarketingPartNumberURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MarketingPartNumberURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MarketingPartNumberURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Product.Identifier()
{
  type metadata accessor for MarketingPartNumberURL();
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B1A6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Product.Identifier()
{
  type metadata accessor for MarketingPartNumberURL();
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B1A780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_213B1A7C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = sub_213B2BBD0();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t method lookup function for Product.Catalog()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Product.Catalog.watchBand<A>(with:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

id sub_213B1A834(uint64_t a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  double *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  _QWORD v38[2];
  objc_super v39;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for AdjustedAsset();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v5[OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_startedHandler];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v5[OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_completedHandler];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v5[OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_featureHandler];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = (double *)&v5[OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_metrics];
  *v17 = a2;
  v17[1] = a3;
  v17[2] = a4;
  v39.receiver = v5;
  v39.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v39, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_213B1B25C(a1, (uint64_t)v13);
  v19 = objc_allocWithZone((Class)type metadata accessor for AdjustedImageView());
  v20 = v18;
  v21 = sub_213B1FE0C((uint64_t)v13);
  objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v20, sel_addSubview_, v21);
  v22 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18910);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_213B2E2D0;
  v24 = objc_msgSend(v21, sel_topAnchor);
  v25 = objc_msgSend(v20, sel_topAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(v21, sel_bottomAnchor);
  v28 = objc_msgSend(v20, sel_bottomAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(v21, sel_leftAnchor);
  v31 = objc_msgSend(v20, sel_leftAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(_QWORD *)(v23 + 48) = v32;
  v33 = objc_msgSend(v21, sel_rightAnchor);
  v34 = objc_msgSend(v20, sel_rightAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  *(_QWORD *)(v23 + 56) = v35;
  v38[1] = v23;
  sub_213B2BF54();
  sub_213B1B220();
  v36 = (void *)sub_213B2BF30();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_activateConstraints_, v36);

  sub_213B1B2A0(a1);
  return v20;
}

void sub_213B1ABA4(_OWORD *a1)
{
  char *v1;
  __int128 v2;
  CGImageRef v3;
  CGImageRef v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  double *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _OWORD v21[2];

  v2 = a1[1];
  v21[0] = *a1;
  v21[1] = v2;
  v3 = sub_213B296B0((uint64_t)v21);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_initWithCGImage_, v3);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_initWithImage_, v5);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v6, sel_setContentMode_, 1);
    objc_msgSend(v1, sel_addSubview_, v6);
    v7 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18910);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_213B2E2D0;
    v9 = objc_msgSend(v6, sel_heightAnchor);
    v10 = (double *)&v1[OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_metrics];
    v11 = objc_msgSend(v9, sel_constraintEqualToConstant_, *(double *)&v1[OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_metrics + 8]);

    *(_QWORD *)(v8 + 32) = v11;
    v12 = objc_msgSend(v6, sel_widthAnchor);
    v13 = objc_msgSend(v12, sel_constraintEqualToConstant_, *v10);

    *(_QWORD *)(v8 + 40) = v13;
    v14 = objc_msgSend(v6, sel_centerXAnchor);
    v15 = objc_msgSend(v1, sel_centerXAnchor);
    v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

    *(_QWORD *)(v8 + 48) = v16;
    v17 = objc_msgSend(v6, sel_centerYAnchor);
    v18 = objc_msgSend(v1, sel_topAnchor);
    v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, v10[2]);

    *(_QWORD *)(v8 + 56) = v19;
    *(_QWORD *)&v21[0] = v8;
    sub_213B2BF54();
    sub_213B1B220();
    v20 = (id)sub_213B2BF30();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_activateConstraints_, v20);

  }
}

id sub_213B1AF98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PersonalizedImageView()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for PersonalizedImageView.Metrics()
{
  return &type metadata for PersonalizedImageView.Metrics;
}

void sub_213B1B050(_OWORD *a1)
{
  sub_213B1ABA4(a1);
}

uint64_t sub_213B1B070(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_startedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213B1B084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_startedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213AD529C);
}

uint64_t (*sub_213B1B098())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_213B1B0E0(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_completedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213B1B0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_completedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213AD529C);
}

uint64_t (*sub_213B1B108())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_213B1B150(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_featureHandler, (void (*)(_QWORD, _QWORD))sub_213AD6500);
}

uint64_t sub_213B1B164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit21PersonalizedImageView_featureHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213B1B2DC);
}

uint64_t sub_213B1B178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  _QWORD *v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v10 = (uint64_t *)(*v6 + *a5);
  swift_beginAccess();
  v11 = *v10;
  v12 = v10[1];
  *v10 = a1;
  v10[1] = a2;
  return a6(v11, v12);
}

uint64_t (*sub_213B1B1D8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_213B1B220()
{
  unint64_t result;

  result = qword_254D18958;
  if (!qword_254D18958)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D18958);
  }
  return result;
}

uint64_t sub_213B1B25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdjustedAsset();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B1B2A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AdjustedAsset();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213B1B2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D1A848);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D1A848);
  if (qword_254D18478 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

char *sub_213B1B370(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  id v23;
  char *v24;
  id v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  id v43;
  char *v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  char *v56;
  void *v57;
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  char *v65;
  id v66;
  char *v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  void *v72;
  id v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  objc_class *ObjectType;
  uint64_t v99;
  uint64_t v100;
  objc_super v101;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_213B2BBD0();
  v4 = *(_QWORD *)(v3 - 8);
  v95 = v3;
  v96 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v93 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v94 = (char *)&v93 - v7;
  v8 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VideoViewConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v97 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v93 - v18;
  v20 = &v1[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_featureHandler];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = &v1[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_startedHandler];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v1[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_completedHandler];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  sub_213B04ADC(a1, (uint64_t)&v1[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_configuration]);
  v23 = objc_allocWithZone(MEMORY[0x24BE904F0]);
  v24 = v1;
  v25 = objc_msgSend(v23, sel_init);
  *(_QWORD *)&v24[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView] = v25;
  v99 = a1;
  sub_213B04ADC(a1, (uint64_t)v19);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v26(v19, 1, v11) == 1)
  {
    sub_213AD6270((uint64_t)v19, &qword_254D18C58);
    v27 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v28 = *(_QWORD *)&v19[*(int *)(v11 + 44)];
    swift_bridgeObjectRetain();
    sub_213AD53FC((uint64_t)v19, type metadata accessor for VideoViewConfiguration);
    if (v28)
    {
      v100 = v28;
      v27 = sub_213B27EA8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = MEMORY[0x24BEE4AF8];
    }
  }
  *(_QWORD *)&v24[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_playbackTimeRanges] = v27;

  v101.receiver = v24;
  v101.super_class = ObjectType;
  v29 = (char *)objc_msgSendSuper2(&v101, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_213B04ADC(v99, (uint64_t)v17);
  if (v26(v17, 1, v11) == 1)
  {
    v30 = v29;
    sub_213AD6270((uint64_t)v17, &qword_254D18C58);
    if (qword_254D18430 != -1)
      swift_once();
    v31 = sub_213B2BCF0();
    __swift_project_value_buffer(v31, (uint64_t)qword_254D1A848);
    v32 = sub_213B2BCD8();
    v33 = sub_213B2C158();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_213AC8000, v32, v33, "No configuration provided for video view", v34, 2u);
      MEMORY[0x2199BD0E8](v34, -1, -1);
    }

  }
  else
  {
    v35 = (uint64_t)v17;
    v36 = v97;
    sub_213B088A8(v35, v97);
    sub_213B1CAC4(v36, (uint64_t)v10);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
        v60 = &v10[*(int *)(v59 + 48)];
        ObjectType = (objc_class *)&v10[*(int *)(v59 + 64)];
        v61 = v95;
        v62 = v96;
        v63 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
        v64 = v94;
        v63(v94, v10, v95);
        v65 = v93;
        v63(v93, v60, v61);
        v66 = objc_allocWithZone(MEMORY[0x24BE904E8]);
        v67 = v29;
        v68 = (void *)sub_213B2BB7C();
        v69 = objc_msgSend(v66, sel_initWithURL_, v68);

        objc_msgSend(v69, sel_setShouldLoop_, 0);
        v70 = OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView;
        objc_msgSend(*(id *)&v67[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView], sel_addMovieItem_, v69);

        v71 = objc_allocWithZone(MEMORY[0x24BE904E8]);
        v72 = (void *)sub_213B2BB7C();
        v73 = objc_msgSend(v71, sel_initWithURL_, v72);

        objc_msgSend(v73, sel_setShouldLoop_, 1);
        objc_msgSend(*(id *)&v67[v70], sel_addMovieItem_, v73);

        v74 = *(void (**)(char *, uint64_t))(v62 + 8);
        v74(v65, v61);
        v74(v64, v61);
        sub_213AD53FC(v97, type metadata accessor for VideoViewConfiguration);
        v74((char *)ObjectType, v61);
        goto LABEL_18;
      }
      v38 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254D188D0) + 48)];
      v39 = v95;
      v40 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
      v41 = v94;
      v40(v94, v10, v95);
      v42 = v93;
      v40(v93, v38, v39);
      v43 = objc_allocWithZone(MEMORY[0x24BE904E8]);
      v44 = v29;
      v45 = (void *)sub_213B2BB7C();
      v46 = objc_msgSend(v43, sel_initWithURL_, v45);

      objc_msgSend(v46, sel_setShouldLoop_, 0);
      v47 = OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView;
      objc_msgSend(*(id *)&v44[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView], sel_addMovieItem_, v46);

      v48 = objc_allocWithZone(MEMORY[0x24BE904E8]);
      v49 = (void *)sub_213B2BB7C();
      v50 = objc_msgSend(v48, sel_initWithURL_, v49);

      objc_msgSend(v50, sel_setShouldLoop_, 1);
      objc_msgSend(*(id *)&v44[v47], sel_addMovieItem_, v50);

      v51 = *(void (**)(char *, uint64_t))(v96 + 8);
      v51(v42, v39);
      v51(v41, v39);
    }
    else
    {
      v52 = v95;
      v53 = v96;
      v54 = v94;
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v94, v10, v95);
      v55 = objc_allocWithZone(MEMORY[0x24BE904E8]);
      v56 = v29;
      v57 = (void *)sub_213B2BB7C();
      v58 = objc_msgSend(v55, sel_initWithURL_, v57);

      objc_msgSend(v58, sel_setShouldLoop_, 1);
      objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView], sel_addMovieItem_, v58);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
    }
    sub_213AD53FC(v97, type metadata accessor for VideoViewConfiguration);
  }
LABEL_18:
  v75 = OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView;
  v76 = *(void **)&v29[OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView];
  objc_msgSend(v76, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v29, sel_addSubview_, v76);
  v77 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D18910);
  v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_213B2E2D0;
  v79 = objc_msgSend(v76, sel_leadingAnchor);
  v80 = objc_msgSend(v29, sel_leadingAnchor);
  v81 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v80);

  *(_QWORD *)(v78 + 32) = v81;
  v82 = objc_msgSend(*(id *)&v29[v75], sel_trailingAnchor);
  v83 = objc_msgSend(v29, sel_trailingAnchor);
  v84 = objc_msgSend(v82, sel_constraintEqualToAnchor_, v83);

  *(_QWORD *)(v78 + 40) = v84;
  v85 = objc_msgSend(*(id *)&v29[v75], sel_topAnchor);
  v86 = objc_msgSend(v29, sel_topAnchor);
  v87 = objc_msgSend(v85, sel_constraintEqualToAnchor_, v86);

  *(_QWORD *)(v78 + 48) = v87;
  v88 = objc_msgSend(*(id *)&v29[v75], sel_bottomAnchor);
  v89 = objc_msgSend(v29, sel_bottomAnchor);
  v90 = objc_msgSend(v88, sel_constraintEqualToAnchor_, v89);

  *(_QWORD *)(v78 + 56) = v90;
  v100 = v78;
  sub_213B2BF54();
  sub_213AD63B4(0, (unint64_t *)&qword_254D18958);
  v91 = (void *)sub_213B2BF30();
  swift_bridgeObjectRelease();
  objc_msgSend(v77, sel_activateConstraints_, v91);

  sub_213B1BCF4();
  sub_213AD6270(v99, &qword_254D18C58);
  return v29;
}

uint64_t sub_213B1BCF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213B2BBD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213B04ADC(v0 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_configuration, (uint64_t)v3);
  v11 = type metadata accessor for VideoViewConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v3, 1, v11) == 1)
  {
    sub_213AD6270((uint64_t)v3, &qword_254D18C58);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_213AD6270((uint64_t)v6, &qword_254D188E0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, &v3[*(int *)(v11 + 20)], v7);
  sub_213AD53FC((uint64_t)v3, type metadata accessor for VideoViewConfiguration);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_213AD6270((uint64_t)v6, &qword_254D188E0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v13 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v14 = (unint64_t)objc_msgSend(v13, sel_userInterfaceStyle);

  if (v14 > 2)
    v15 = 2;
  else
    v15 = dword_213B32984[v14];
  v16 = *(void **)(v0 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView);
  v17 = (void *)sub_213B2BB7C();
  objc_msgSend(v16, sel_updateViewForAssetType_adjustmentsURL_, v15, v17);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_213B1BFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)();
  __int128 v38;
  id v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t aBlock;
  uint64_t v53;
  __int128 v54;
  void (*v55)();
  uint64_t v56;

  v1 = v0;
  v2 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_213B2BBD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18C58);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VideoViewConfiguration(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213B04ADC(v1 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_configuration, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_213AD6270((uint64_t)v11, &qword_254D18C58);
  sub_213B088A8((uint64_t)v11, (uint64_t)v15);
  sub_213B1CAC4((uint64_t)v15, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D18880);
    v18 = &v4[*(int *)(v17 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v17 + 64)], v5);
    v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19(v18, v5);
    v19(v4, v5);
    v20 = objc_allocWithZone(MEMORY[0x24BE904E8]);
    v21 = (void *)sub_213B2BB7C();
    v22 = objc_msgSend(v20, sel_initWithURL_, v21);

    v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v55 = sub_213B1CB2C;
    v56 = v23;
    v24 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v53 = 1107296256;
    *(_QWORD *)&v54 = sub_213AD39D8;
    *((_QWORD *)&v54 + 1) = &block_descriptor_2;
    v25 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v22, sel_setCompletedHandler_, v25);
    _Block_release(v25);
    v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v55 = sub_213B1CB64;
    v56 = v26;
    aBlock = v24;
    v53 = 1107296256;
    *(_QWORD *)&v54 = sub_213AD39D8;
    *((_QWORD *)&v54 + 1) = &block_descriptor_4;
    v27 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v22, sel_setStartedHandler_, v27);
    _Block_release(v27);
    v28 = (uint64_t *)(v1 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_featureHandler);
    swift_beginAccess();
    v29 = *v28;
    if (*v28)
    {
      v49 = v8;
      v50 = v19;
      v30 = v28[1];
      v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_playbackTimeRanges);
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        v48 = v22;
        v51 = MEMORY[0x24BEE4AF8];
        v46 = v30;
        v47 = v29;
        sub_213AD52AC(v29);
        swift_bridgeObjectRetain();
        sub_213B2C35C();
        v33 = (void *)objc_opt_self();
        v45 = v31;
        v34 = v31 + 40;
        do
        {
          v35 = *(_QWORD *)(v34 + 32);
          v36 = *(_QWORD *)v34;
          v37 = *(void (**)())(v34 + 24);
          v38 = *(_OWORD *)(v34 + 8);
          aBlock = *(_QWORD *)(v34 - 8);
          v53 = v36;
          v54 = v38;
          v55 = v37;
          v56 = v35;
          v39 = objc_msgSend(v33, sel_valueWithCMTimeRange_, &aBlock, v45);
          sub_213B2C344();
          sub_213B2C368();
          sub_213B2C374();
          sub_213B2C350();
          v34 += 48;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease();
        v22 = v48;
        v8 = v49;
        v24 = MEMORY[0x24BDAC760];
        v30 = v46;
        v29 = v47;
      }
      else
      {
        swift_retain();
        v8 = v49;
      }
      sub_213AD63B4(0, &qword_254D188B0);
      v42 = (void *)sub_213B2BF30();
      swift_bridgeObjectRelease();
      v55 = (void (*)())v29;
      v56 = v30;
      aBlock = v24;
      v53 = 1107296256;
      *(_QWORD *)&v54 = sub_213B1C574;
      *((_QWORD *)&v54 + 1) = &block_descriptor_7;
      v43 = _Block_copy(&aBlock);
      sub_213AD52AC(v29);
      swift_release();
      objc_msgSend(v22, sel_setPlaybackNotificationTimeRanges_withTimeRangeHandler_, v42, v43);
      _Block_release(v43);

      sub_213AD529C(v29);
      v19 = v50;
    }
    v44 = *(void **)(v1 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView);
    objc_msgSend(v44, sel_breakFirstEnqueuedLoop);
    objc_msgSend(v44, sel_speedUpRemainderOfCurrentItem);
    objc_msgSend(v44, sel_addMovieItem_, v22);

    v19(v8, v5);
    v40 = type metadata accessor for VideoViewConfiguration;
    v41 = (uint64_t)v15;
  }
  else
  {
    sub_213AD53FC((uint64_t)v15, type metadata accessor for VideoViewConfiguration);
    v40 = type metadata accessor for VideoViewConfiguration.VideoSequence;
    v41 = (uint64_t)v4;
  }
  return sub_213AD53FC(v41, v40);
}

uint64_t sub_213B1C574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

void sub_213B1C5BC(id a1)
{
  id v2;
  id v3;
  id v4;

  if (a1)
    v2 = objc_msgSend(a1, sel_userInterfaceStyle);
  else
    v2 = 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v4 = objc_msgSend(v3, sel_userInterfaceStyle);

  if (!a1 || v2 != v4)
    sub_213B1BCF4();
}

uint64_t sub_213B1C76C()
{
  return type metadata accessor for AdjustedVideoView();
}

uint64_t type metadata accessor for AdjustedVideoView()
{
  uint64_t result;

  result = qword_254D1A8A0;
  if (!qword_254D1A8A0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_213B1C7B0()
{
  unint64_t v0;

  sub_213B1C844();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_213B1C844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254D1A8B0)
  {
    type metadata accessor for VideoViewConfiguration(255);
    v0 = sub_213B2C23C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254D1A8B0);
  }
}

uint64_t sub_213B1C898(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_startedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213B1C8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_startedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213AD529C);
}

uint64_t (*sub_213B1C8C0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_213B1C908(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_completedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213B1C91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_completedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213AD529C);
}

uint64_t (*sub_213B1C930())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_213B1C978(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_featureHandler, (void (*)(_QWORD, _QWORD))sub_213AD6500);
}

uint64_t sub_213B1C98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_featureHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213B1B2DC);
}

uint64_t (*sub_213B1C9A0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_213B1C9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v6 = *v3;
  *(_QWORD *)(*v3 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_playbackTimeRanges) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_featureHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = a2;
  v7[1] = a3;
  sub_213AD529C(v8);
  return swift_retain();
}

uint64_t sub_213B1CA6C()
{
  return sub_213B1BFF0();
}

id sub_213B1CA8C()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView), sel_play);
}

id sub_213B1CAA8()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_mediaPlayerView), sel_stop);
}

uint64_t sub_213B1CAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoViewConfiguration.VideoSequence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B1CB08()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_213B1CB2C()
{
  uint64_t v0;

  sub_213AD097C(v0, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_completedHandler);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_213B1CB64()
{
  uint64_t v0;

  sub_213AD097C(v0, &OBJC_IVAR____TtC10ProductKit17AdjustedVideoView_startedHandler);
}

uint64_t MarketingPartNumberURL.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_213B2BCA8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_213B2BCC0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (_s10ProductKit0aB7CatalogC02isaB3URLySb10Foundation0E0VFZ_0(a1))
  {
    v9 = sub_213B2BBD0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a2, a1, v9);
  }
  else
  {
    sub_213B2BC9C();
    sub_213AFE048(MEMORY[0x24BEE4AF8]);
    sub_213AFE4D4();
    sub_213B2BB34();
    sub_213B2BCB4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
    v11 = sub_213B2BBD0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
}

uint64_t sub_213B1CCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_213B2BEB8();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_213B2BEB8();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_213B2C47C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_213B2BEB8();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_213B2BEB8();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

BOOL _s10ProductKit0aB7CatalogC02isaB3URLySb10Foundation0E0VFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  void (*v20)(char *, uint64_t);
  char v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v25;

  v2 = sub_213B2BBD0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v25 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  v12 = sub_213B2BBC4();
  if (!v13)
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v14(v11, a1, v2);
    goto LABEL_14;
  }
  if (v12 == 0x7370747468 && v13 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v14(v11, a1, v2);
    goto LABEL_7;
  }
  v15 = sub_213B2C47C();
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v14(v11, a1, v2);
  if ((v15 & 1) == 0)
  {
LABEL_14:
    v20 = *(void (**)(char *, uint64_t))(v3 + 8);
    v20(v11, v2);
    v14(v9, a1, v2);
    goto LABEL_15;
  }
LABEL_7:
  v16 = sub_213B2BBAC();
  if (!v17)
    goto LABEL_14;
  if (v16 != 0x6C7070612E6E706DLL || v17 != 0xED00006D6F632E65)
  {
    v19 = sub_213B2C47C();
    v20 = *(void (**)(char *, uint64_t))(v3 + 8);
    v20(v11, v2);
    swift_bridgeObjectRelease();
    v14(v9, a1, v2);
    if ((v19 & 1) != 0)
      goto LABEL_17;
LABEL_15:
    v21 = 0;
    goto LABEL_18;
  }
  v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v11, v2);
  swift_bridgeObjectRelease();
  v14(v9, a1, v2);
LABEL_17:
  sub_213B2BBB8();
  v21 = sub_213B1CCF0();
  swift_bridgeObjectRelease();
LABEL_18:
  v20(v9, v2);
  v14(v6, a1, v2);
  if ((v21 & 1) != 0)
  {
    sub_213B2BBB8();
    v22 = sub_213B2BE94();
    swift_bridgeObjectRelease();
    v23 = v22 > 5;
  }
  else
  {
    v23 = 0;
  }
  v20(v6, v2);
  return v23;
}

uint64_t initializeBufferWithCopyOfBuffer for MarketingPartNumberURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t getEnumTagSinglePayload for MarketingPartNumberURL()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B1D168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MarketingPartNumberURL()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B1D1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MarketingPartNumberURL()
{
  uint64_t result;

  result = qword_254D1A910;
  if (!qword_254D1A910)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213B1D22C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213B2BBD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213B1D294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D1A948);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D1A948);
  if (qword_254D18468 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213B1D324(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = swift_getObjectType();
  return swift_task_switch();
}

id sub_213B1D36C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v1 = *(void **)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A970);
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 40) = v2;
  *(_DWORD *)(v2 + ((*(unsigned int *)(*(_QWORD *)v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v3 = v2 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v2 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 2, v4);
  result = objc_msgSend(v1, sel_assetId);
  if (result)
  {
    v6 = result;
    v8 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);
    v9 = *(_BYTE *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 16);
    v11 = sub_213B2BE1C();
    v13 = v12;

    *(_QWORD *)(v0 + 48) = v13;
    v14 = swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v14;
    *(_QWORD *)(v14 + 16) = v2;
    *(_BYTE *)(v14 + 24) = v9;
    *(_QWORD *)(v14 + 32) = v11;
    *(_QWORD *)(v14 + 40) = v13;
    *(_QWORD *)(v14 + 48) = v8;
    *(_QWORD *)(v14 + 56) = v7;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v15;
    v15[2] = v8;
    v15[3] = v10;
    v15[4] = v2;
    v15[5] = v7;
    if (__isPlatformVersionAtLeast(2, 18, 0, 0))
    {
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v16;
      *v16 = v0;
      v16[1] = sub_213B1D544;
      return (id)sub_213B2C488();
    }
    else
    {
      return (id)swift_task_switch();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_213B1D544()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 104) = v0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_213B1D5CC()
{
  int8x16_t *v0;
  uint64_t v1;
  int8x16_t v2;

  v0[5].i64[0] = swift_task_addCancellationHandler();
  v1 = swift_task_alloc();
  v0[5].i64[1] = v1;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = sub_213B1D64C;
  v2 = v0[1];
  *(int8x16_t *)(v1 + 40) = vextq_s8(v0[2], v0[2], 8uLL);
  *(int8x16_t *)(v1 + 24) = vextq_s8(v2, v2, 8uLL);
  return swift_task_switch();
}

uint64_t sub_213B1D64C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B1D6B0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B1D6E4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B1D73C()
{
  swift_task_removeCancellationHandler();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B1D794()
{
  uint64_t v0;

  swift_task_removeCancellationHandler();
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 96);
  return swift_task_switch();
}

void sub_213B1D7D8(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t aBlock[7];

  sub_213B1E744(a1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a1 + 16), (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(_QWORD *)a1 + 48) + 3) & 0x1FFFFFFFCLL)));
  if ((a2 & 1) != 0)
  {
    if (qword_254D18438 != -1)
      swift_once();
    v9 = sub_213B2BCF0();
    __swift_project_value_buffer(v9, (uint64_t)qword_254D1A948);
    swift_bridgeObjectRetain_n();
    v10 = sub_213B2BCD8();
    v11 = sub_213B2C170();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      aBlock[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_213AE1780(a3, a4, aBlock);
      sub_213B2C254();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213AC8000, v10, v11, "Cancelling download for %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v13, -1, -1);
      MEMORY[0x2199BD0E8](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a3;
    *(_QWORD *)(v14 + 24) = a4;
    aBlock[4] = (uint64_t)sub_213B1F508;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_213B1DC08;
    aBlock[3] = (uint64_t)&block_descriptor_18_0;
    v15 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(a5, sel_cancelDownload_, v15);
    _Block_release(v15);
  }
}

void sub_213B1DA4C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_254D18438 != -1)
    swift_once();
  v5 = sub_213B2BCF0();
  __swift_project_value_buffer(v5, (uint64_t)qword_254D1A948);
  swift_bridgeObjectRetain_n();
  v6 = sub_213B2BCD8();
  v7 = sub_213B2C170();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v10 = v9;
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    sub_213AE1780(a2, a3, &v10);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2048;
    sub_213B2C254();
    _os_log_impl(&dword_213AC8000, v6, v7, "Download cancelled for %s with result %ld", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_213B1DC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213B1DC2C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_213B1DCD0;
  return sub_213B2C4A0();
}

uint64_t sub_213B1DCD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B1DD44()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213B1DD78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  void *v27;
  uint64_t v28;

  v21 = a5;
  v22 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  if (qword_254D18438 != -1)
    swift_once();
  v11 = sub_213B2BCF0();
  __swift_project_value_buffer(v11, (uint64_t)qword_254D1A948);
  v12 = sub_213B2BCD8();
  v13 = sub_213B2C170();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_213AC8000, v12, v13, "Starting download", v14, 2u);
    MEMORY[0x2199BD0E8](v14, -1, -1);
  }

  v27 = sub_213B1E01C;
  v28 = 0;
  v15 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v24 = 1107296256;
  v25 = sub_213B1E1A4;
  v26 = &block_descriptor_3;
  v16 = _Block_copy(&aBlock);
  objc_msgSend(a2, sel_attachProgressCallBack_, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v17 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v18 + ((v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  v27 = sub_213B1E738;
  v28 = v18;
  aBlock = v15;
  v24 = 1107296256;
  v25 = (void (*)(uint64_t, void *))sub_213B1DC08;
  v26 = &block_descriptor_12;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_startDownload_then_, v22, v19);
  _Block_release(v19);
  sub_213B1E8EC(a4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a4 + 16), (os_unfair_lock_s *)(a4 + ((*(unsigned int *)(*(_QWORD *)a4 + 48) + 3) & 0x1FFFFFFFCLL)), a1);
}

void sub_213B1E01C(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  id v7;

  if (a1)
  {
    v1 = qword_254D18438;
    v2 = a1;
    if (v1 != -1)
      swift_once();
    v3 = sub_213B2BCF0();
    __swift_project_value_buffer(v3, (uint64_t)qword_254D1A948);
    v7 = v2;
    v4 = sub_213B2BCD8();
    v5 = sub_213B2C14C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = swift_slowAlloc();
      *(_DWORD *)v6 = 134218240;
      objc_msgSend(v7, sel_expectedTimeRemaining);
      sub_213B2C254();
      *(_WORD *)(v6 + 12) = 1024;
      objc_msgSend(v7, sel_isStalled);
      sub_213B2C254();

      _os_log_impl(&dword_213AC8000, v4, v5, "Download progress: %f %{BOOL}d", (uint8_t *)v6, 0x12u);
      MEMORY[0x2199BD0E8](v6, -1, -1);

    }
    else
    {

    }
  }
}

void sub_213B1E1A4(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_213B1E1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v4 = _s11CancelStateOMa();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254D18438 != -1)
    swift_once();
  v7 = sub_213B2BCF0();
  __swift_project_value_buffer(v7, (uint64_t)qword_254D1A948);
  v8 = sub_213B2BCD8();
  v9 = sub_213B2C170();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_213AC8000, v8, v9, "Finished download", v10, 2u);
    MEMORY[0x2199BD0E8](v10, -1, -1);
  }

  v11 = a2 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a2 + 16);
  v12 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(_QWORD *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v12);
  sub_213B1F464(v11, (uint64_t)v6);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v6, 2, v13);
  if (v14)
  {
    if (v14 != 1)
    {
      os_unfair_lock_unlock(v12);
      return;
    }
  }
  else
  {
    sub_213B1F4A8((uint64_t)v6);
  }
  os_unfair_lock_unlock(v12);
  if (a1)
  {
    sub_213AD62AC();
    v15 = swift_allocError();
    if (a1 == 51)
      v17 = 3;
    else
      v17 = 2;
    if (a1 == 12)
      v17 = 10;
    *(_QWORD *)v16 = v17;
    *(_QWORD *)(v16 + 8) = 0;
    *(_BYTE *)(v16 + 16) = 2;
    v18[1] = v15;
    sub_213B2BFF0();
  }
  else
  {
    sub_213B2BFFC();
  }
}

uint64_t sub_213B1E410(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_213B1E44C()
{
  id *v0;

  return objc_msgSend(*v0, sel_wasLocal);
}

uint64_t sub_213B1E46C@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v3 = sub_213B2BBD0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  *(_QWORD *)&v8 = MEMORY[0x24BDAC7A8](v7).n128_u64[0];
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(*v1, sel_getLocalFileUrl, v8);
  if (v11)
  {
    v12 = v11;
    sub_213B2BBA0();

    v13 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v13(v10, v6, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v10, v3);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
  }
  __break(1u);
  return result;
}

id sub_213B1E5B4()
{
  id *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(*v0, sel_assetId);
  if (result)
  {
    v2 = result;
    v3 = sub_213B2BE1C();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_213B1E610(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v2;
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_213AD7E40;
  *(_BYTE *)(v7 + 112) = a2;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = swift_getObjectType();
  return swift_task_switch();
}

void sub_213B1E690()
{
  uint64_t v0;

  sub_213B1D7D8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_213B1E6A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_213ADA044;
  *(_OWORD *)(v4 + 40) = v6;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

void sub_213B1E710(uint64_t a1)
{
  uint64_t v1;

  sub_213B1DD78(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_213B1E738(uint64_t a1)
{
  return sub_213B1F68C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_213B1E1F8);
}

void sub_213B1E744(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s11CancelStateOMa();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(a2);
  sub_213B1F464(a1, (uint64_t)v10);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 2, v4);
  if (v11)
  {
    if (v11 == 1)
    {
      sub_213B1F4A8(a1);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 2, 2, v4);
    }
    os_unfair_lock_unlock(a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_213B1F4A8(a1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 2, 2, v4);
    os_unfair_lock_unlock(a2);
    sub_213AD62AC();
    v12 = swift_allocError();
    *(_OWORD *)v13 = xmmword_213B2EB70;
    *(_BYTE *)(v13 + 16) = 2;
    v14[1] = v12;
    sub_213B2BFF0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_213B1E8EC(uint64_t a1, os_unfair_lock_s *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v6 = _s11CancelStateOMa();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(a2);
  sub_213B1F464(a1, (uint64_t)v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9);
  if (v11 == 1)
  {
    sub_213B1F4A8(a1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a3, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 2, v9);
    os_unfair_lock_unlock(a2);
  }
  else if (v11 == 2)
  {
    sub_213B1F4A8(a1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 2, 2, v9);
    os_unfair_lock_unlock(a2);
    sub_213AD62AC();
    v12 = swift_allocError();
    *(_OWORD *)v13 = xmmword_213B2EB70;
    *(_BYTE *)(v13 + 16) = 2;
    v14[1] = v12;
    sub_213B2BFF0();
  }
  else
  {
    os_unfair_lock_unlock(a2);
    sub_213B2C38C();
    __break(1u);
  }
}

uint64_t sub_213B1EAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_213B1EAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A970);
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 48) = v3;
  *(_DWORD *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v10 = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 2, v5);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v3;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v1;
  *(_QWORD *)(v7 + 56) = v1;
  if (!__isPlatformVersionAtLeast(2, 18, 0, 0))
    return swift_task_switch();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v8;
  *v8 = v0;
  v8[1] = sub_213B1EC68;
  return sub_213B2C488();
}

uint64_t sub_213B1EC68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 104) = v0;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_213B1ECDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  int8x16_t v4;

  *(_QWORD *)(v0 + 80) = swift_task_addCancellationHandler();
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = sub_213B1ED64;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_OWORD *)(v0 + 24);
  v4 = *(int8x16_t *)(v0 + 40);
  *(_QWORD *)(v1 + 64) = v4.i64[0];
  *(_OWORD *)(v1 + 32) = v3;
  *(int8x16_t *)(v1 + 48) = vextq_s8(v4, v4, 8uLL);
  *(_QWORD *)(v1 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_213B1ED64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B1EDC8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B1EDFC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B1EE44()
{
  swift_task_removeCancellationHandler();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B1EE90()
{
  uint64_t v0;

  swift_task_removeCancellationHandler();
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 96);
  return swift_task_switch();
}

uint64_t sub_213B1EED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213B1EEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 56) = v1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  *v6 = v0;
  v6[1] = sub_213B1EFB4;
  return sub_213B2C4A0();
}

uint64_t sub_213B1EFB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B1F028()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213B1F05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v21 = a7;
  v22 = a4;
  v23 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  if (qword_254D18438 != -1)
    swift_once();
  v11 = sub_213B2BCF0();
  __swift_project_value_buffer(v11, (uint64_t)qword_254D1A948);
  v12 = sub_213B2BCD8();
  v13 = sub_213B2C170();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_213AC8000, v12, v13, "Starting catalog download", v14, 2u);
    MEMORY[0x2199BD0E8](v14, -1, -1);
  }

  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_213B2BDF8();
  v17 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v8);
  v18 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v19 + ((v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  aBlock[4] = sub_213B1F680;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_213B1DC08;
  aBlock[3] = &block_descriptor_30;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_startCatalogDownload_options_then_, v16, v22, v20);
  _Block_release(v20);

  sub_213B1E8EC(a5 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a5 + 16), (os_unfair_lock_s *)(a5 + ((*(unsigned int *)(*(_QWORD *)a5 + 48) + 3) & 0x1FFFFFFFCLL)), v17);
}

void sub_213B1F2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v4 = _s11CancelStateOMa();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a2 + 16);
  v8 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(_QWORD *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_213B1F464(v7, (uint64_t)v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 2, v9);
  if (v10)
  {
    if (v10 != 1)
    {
      os_unfair_lock_unlock(v8);
      return;
    }
  }
  else
  {
    sub_213B1F4A8((uint64_t)v6);
  }
  os_unfair_lock_unlock(v8);
  if (a1)
  {
    sub_213AD62AC();
    v11 = swift_allocError();
    *(_OWORD *)v12 = xmmword_213B2EB80;
    *(_BYTE *)(v12 + 16) = 2;
    v13[1] = v11;
    sub_213B2BFF0();
  }
  else
  {
    sub_213B2BFFC();
  }
}

uint64_t _s11CancelStateOMa()
{
  uint64_t result;

  result = qword_254D1AA18;
  if (!qword_254D1AA18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213B1F464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11CancelStateOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B1F4A8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s11CancelStateOMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213B1F4E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_213B1F508(uint64_t a1)
{
  uint64_t v1;

  sub_213B1DA4C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_213B1F510()
{
  uint64_t v0;

  sub_213B1E744(*(_QWORD *)(v0 + 24) + *(_QWORD *)(*MEMORY[0x24BEE27A8] + **(_QWORD **)(v0 + 24) + 16), (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24)+ ((*(unsigned int *)(**(_QWORD **)(v0 + 24) + 48) + 3) & 0x1FFFFFFFCLL)));
}

uint64_t sub_213B1F568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 24);
  v8 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_213ADA044;
  *(_QWORD *)(v6 + 64) = v5;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v4;
  return swift_task_switch();
}

void sub_213B1F5E8(uint64_t a1)
{
  uint64_t *v1;

  sub_213B1F05C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_213B1F680(uint64_t a1)
{
  return sub_213B1F68C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_213B1F2D8);
}

uint64_t sub_213B1F68C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + v5, *(_QWORD *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t *sub_213B1F6F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_213B1F7C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_213B1F82C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_213B1F8D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_213B1F9C8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_213B1FA70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_213B1FB64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B1FB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_213B1FBC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B1FBCC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_213B1FC24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_213B1FC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A978);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

void sub_213B1FCA4()
{
  unint64_t v0;

  sub_213B1FCF8();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_213B1FCF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254D1AA28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D190B0);
    v0 = sub_213B2C008();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254D1AA28);
  }
}

uint64_t sub_213B1FD7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D1AA30);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D1AA30);
  if (qword_254D18478 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_213B1FE0C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  char *v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  objc_class *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v52;
  uint8_t *v53;
  _DWORD *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t ObjectType;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  objc_super v69;

  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for AdjustedAsset();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v52 - v6;
  v8 = sub_213B2BCF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_213B2BBD0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v1[OBJC_IVAR____TtC10ProductKit17AdjustedImageView_startedHandler];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v1[OBJC_IVAR____TtC10ProductKit17AdjustedImageView_completedHandler];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v1[OBJC_IVAR____TtC10ProductKit17AdjustedImageView_featureHandler];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  (*(void (**)(char *, uint64_t))(v18 + 16))(v14, a1 + *(int *)(v3 + 20));
  v19 = v1;
  Adjustments.init(fileURL:)((uint64_t)v14, (uint64_t)&v62);
  v20 = v64;
  v21 = &v19[OBJC_IVAR____TtC10ProductKit17AdjustedImageView_adjustments];
  *(_OWORD *)v21 = v62;
  *((_OWORD *)v21 + 1) = v63;
  v21[32] = v20;

  v22 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  v23 = v22;
  v24 = a1;
  v25 = v23;
  v26 = (void *)sub_213B2BDF8();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v26, v25, 0);

  v28 = (objc_class *)ObjectType;
  if (!v27)
  {
    v29 = v60;
    v59 = v19;
    v30 = v8;
    if (qword_254D18440 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v8, (uint64_t)qword_254D1AA30);
    v32 = v9;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v34 = v11;
    v33(v11, v31, v30);
    v35 = (uint64_t)v7;
    sub_213B1B25C(v24, (uint64_t)v7);
    v36 = sub_213B2BCD8();
    v37 = sub_213B2C158();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = (uint64_t)v29;
      v57 = v38;
      v40 = (_DWORD *)swift_slowAlloc();
      v53 = (uint8_t *)v40;
      v56 = swift_slowAlloc();
      v68 = v56;
      *v40 = 136315138;
      v54 = v40 + 3;
      sub_213B1B25C(v35, v39);
      *(_QWORD *)&v62 = 0;
      *((_QWORD *)&v62 + 1) = 0xE000000000000000;
      sub_213B2C2E4();
      swift_bridgeObjectRelease();
      v66 = 0xD000000000000015;
      v67 = 0x8000000213B35520;
      v55 = v30;
      v41 = *(_QWORD *)(v39 + 8);
      v43 = *(void **)(v39 + 16);
      v42 = *(_QWORD *)(v39 + 24);
      v44 = *(_QWORD *)(v39 + 32);
      v45 = *(_BYTE *)(v39 + 40);
      *(_QWORD *)&v62 = *(_QWORD *)v39;
      *((_QWORD *)&v62 + 1) = v41;
      *(_QWORD *)&v63 = v43;
      *((_QWORD *)&v63 + 1) = v42;
      v64 = v44;
      v65 = v45;
      swift_bridgeObjectRetain();
      v52 = v43;
      swift_bridgeObjectRetain();
      GenericAsset.description.getter();
      v58 = v24;
      sub_213B2BEAC();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v53;
      sub_213B2BEAC();
      v47 = v66;
      v48 = v67;
      sub_213B1B2A0(v39);
      *(_QWORD *)&v62 = sub_213AE1780(v47, v48, &v68);
      sub_213B2C254();
      v24 = v58;
      swift_bridgeObjectRelease();
      sub_213B1B2A0(v35);
      _os_log_impl(&dword_213AC8000, v36, (os_log_type_t)v57, "Could not load image for %s", v46, 0xCu);
      v49 = v56;
      swift_arrayDestroy();
      MEMORY[0x2199BD0E8](v49, -1, -1);
      MEMORY[0x2199BD0E8](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v55);
    }
    else
    {
      sub_213B1B2A0(v35);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
    }
    v28 = (objc_class *)ObjectType;
    v19 = v59;
  }
  v69.receiver = v19;
  v69.super_class = v28;
  v50 = objc_msgSendSuper2(&v69, sel_initWithImage_, v27);
  sub_213B202DC();

  sub_213B1B2A0(v24);
  return v50;
}

void sub_213B202DC()
{
  char *v0;
  double *v1;
  double v2;
  double v3;
  id v4;
  id v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  float v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  void *v28;
  float v29;
  __int128 v30;
  int v31;
  float v32;
  __int128 v33;
  int v34;
  float v35;
  __int128 v36;
  uint64_t v37;
  int v38;

  v1 = (double *)&v0[OBJC_IVAR____TtC10ProductKit17AdjustedImageView_adjustments];
  if ((v0[OBJC_IVAR____TtC10ProductKit17AdjustedImageView_adjustments + 32] & 1) == 0)
  {
    v2 = v1[3];
    v3 = v1[1];
    v4 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
    v5 = objc_msgSend(v4, sel_userInterfaceStyle);

    if (v5 == (id)2)
      v6 = v3;
    else
      v6 = v2;
    if (v5)
      v2 = v6;
    sub_213B2BE1C();
    v7 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
    v8 = (void *)sub_213B2BDF8();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v7, sel_initWithType_, v8);

    v10 = MEMORY[0x24BDE53E8];
    v11 = *(_DWORD *)(MEMORY[0x24BDE53E8] + 20);
    v12 = *(_DWORD *)(MEMORY[0x24BDE53E8] + 44);
    v13 = *(_DWORD *)(MEMORY[0x24BDE53E8] + 76);
    v14 = v2;
    v15 = (void *)objc_opt_self();
    v29 = v14;
    v30 = *(_OWORD *)(v10 + 4);
    v31 = v11;
    v32 = v14;
    v33 = *(_OWORD *)(v10 + 28);
    v34 = v12;
    v35 = v14;
    v36 = *(_OWORD *)(v10 + 52);
    v37 = *(_QWORD *)(v10 + 68);
    v38 = v13;
    v16 = objc_msgSend(v15, sel_valueWithCAColorMatrix_, &v29);
    v17 = (void *)sub_213B2BDF8();
    objc_msgSend(v9, sel_setValue_forKey_, v16, v17);

    sub_213B2BE1C();
    v18 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
    v19 = (void *)sub_213B2BDF8();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_initWithType_, v19);

    v21 = (void *)sub_213B2C098();
    v22 = (void *)sub_213B2BDF8();
    objc_msgSend(v20, sel_setValue_forKey_, v21, v22);

    v23 = objc_msgSend(v0, sel_layer);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AA90);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_213B2E300;
    v25 = sub_213B20A38();
    *(_QWORD *)(v24 + 32) = v9;
    *(_QWORD *)(v24 + 88) = v25;
    *(_QWORD *)(v24 + 56) = v25;
    *(_QWORD *)(v24 + 64) = v20;
    v26 = v9;
    v27 = v20;
    v28 = (void *)sub_213B2BF30();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_setFilters_, v28);

  }
}

void sub_213B20710(id a1)
{
  id v2;
  id v3;
  id v4;

  if (a1)
    v2 = objc_msgSend(a1, sel_userInterfaceStyle);
  else
    v2 = 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v4 = objc_msgSend(v3, sel_userInterfaceStyle);

  if (!a1 || v2 != v4)
    sub_213B202DC();
}

uint64_t type metadata accessor for AdjustedImageView()
{
  return objc_opt_self();
}

uint64_t sub_213B208E8(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit17AdjustedImageView_startedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213B208FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit17AdjustedImageView_startedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213AD529C);
}

uint64_t (*sub_213B20910())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_213B20958(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit17AdjustedImageView_completedHandler, (void (*)(_QWORD, _QWORD))sub_213AD52AC);
}

uint64_t sub_213B2096C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit17AdjustedImageView_completedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213AD529C);
}

uint64_t (*sub_213B20980())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_213B209C8(uint64_t a1, uint64_t a2)
{
  return sub_213AD0E38(a1, a2, &OBJC_IVAR____TtC10ProductKit17AdjustedImageView_featureHandler, (void (*)(_QWORD, _QWORD))sub_213AD6500);
}

uint64_t sub_213B209DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_213B1B178(a1, a2, a3, a4, &OBJC_IVAR____TtC10ProductKit17AdjustedImageView_featureHandler, (uint64_t (*)(uint64_t, uint64_t))sub_213B1B2DC);
}

uint64_t (*sub_213B209F0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_213B20A38()
{
  unint64_t result;

  result = qword_254D1AA98;
  if (!qword_254D1AA98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D1AA98);
  }
  return result;
}

uint64_t AsyncChannel.__allocating_init(element:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  AsyncChannel.init(element:)(v0, v1, v2, v3);
  return v0;
}

uint64_t AsyncChannel.send(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_213AD7E40;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_213B20B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = v4[2];
  v8 = *(_QWORD *)(*v4 + 80);
  type metadata accessor for AsyncChannel.State(0, v8, a3, a4);
  sub_213AD6598((void (*)(uint64_t))sub_213B234E4, (uint64_t)&v7, v5);
  return v9;
}

uint64_t sub_213B20B74(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return swift_task_switch();
}

uint64_t sub_213B20B98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v7;

  v1 = v0[4];
  v2 = v0[3];
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v7 = (char *)&dword_254D1AC78 + dword_254D1AC78;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  v5 = sub_213B2C23C();
  *v4 = v0;
  v4[1] = sub_213B20C44;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, void (*)(uint64_t), uint64_t, uint64_t))v7)(v0[2], 0, 0, sub_213B2314C, v3, v5);
}

uint64_t sub_213B20C44()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B20C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  char *v15;

  v15 = (char *)&dword_254D1AC60 + dword_254D1AC60;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_213AD7E40;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v15)(a1, a4, a5, a2, a3, 0, 0, a6);
}

uint64_t AsyncChannel.Iterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(_QWORD *)(a2 + 16);
  v4 = sub_213B2C23C();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B20DB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v13;

  v1 = *(uint64_t **)(v0 + 24);
  if (*((_BYTE *)v1 + 8) == 1)
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *v1;
    *(_QWORD *)(v0 + 72) = *v1;
    v4 = swift_retain();
    v8 = sub_213B20B08(v4, v5, v6, v7);
    swift_release();
    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v9;
    *(_QWORD *)(v9 + 16) = v3;
    *(_QWORD *)(v9 + 24) = v8;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v10;
    v10[2] = v2;
    v10[3] = v1;
    v10[4] = v8;
    v13 = (char *)&dword_254D1AAC8 + dword_254D1AAC8;
    swift_retain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v11;
    *v11 = v0;
    v11[1] = sub_213B20F00;
    return ((uint64_t (*)(_QWORD, void (*)(), uint64_t, void *, _QWORD *, _QWORD))v13)(*(_QWORD *)(v0 + 64), sub_213B223C8, v9, &unk_254D1AAC0, v10, *(_QWORD *)(v0 + 40));
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 56))(*(_QWORD *)(v0 + 16), 1, 1);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_213B20F00()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B20F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 32))(v1, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    *(_BYTE *)(v5 + 8) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v6, 1, 1, v4);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 32);
    v8 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v8, *(_QWORD *)(v0 + 56), v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213B21054(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(*v1 + 80);
  v4 = sub_213B2C23C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v12[-v6];
  v8 = v1[2];
  v13 = v3;
  v14 = a1;
  type metadata accessor for AsyncChannel.State(0, v3, v9, v10);
  sub_213B2C074();
  sub_213B2C23C();
  sub_213AD6598((void (*)(uint64_t))sub_213B23488, (uint64_t)v12, v8);
  v11 = v15;
  if (v15)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v7, 1, 1, v3);
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(v5 + 32))(*(_QWORD *)(*(_QWORD *)(v11 + 64) + 40), v7, v4);
    swift_continuation_resume();
  }
}

uint64_t sub_213B21170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213B2118C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = **(_QWORD ***)(v0 + 24);
  *(_QWORD *)(v0 + 40) = v1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_213B21214;
  v3 = *(_QWORD *)(v0 + 16);
  v2[3] = *(_QWORD *)(v0 + 32);
  v2[4] = v1;
  v2[2] = v3;
  v2[5] = *v1;
  return swift_task_switch();
}

uint64_t sub_213B21214()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B21268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_213AD8CB0;
  return AsyncChannel.Iterator.next()(a1, a2);
}

uint64_t sub_213B212C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_213B2134C;
  return sub_213B2C014();
}

uint64_t sub_213B2134C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B2139C()
{
  return sub_213B2C524();
}

BOOL sub_213B213C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a4;
}

uint64_t sub_213B213CC()
{
  sub_213B2C518();
  sub_213B2C524();
  return sub_213B2C530();
}

uint64_t sub_213B21410()
{
  return sub_213B213CC();
}

uint64_t sub_213B2141C()
{
  return sub_213B2139C();
}

uint64_t sub_213B21428()
{
  sub_213B2C518();
  sub_213B2139C();
  return sub_213B2C530();
}

BOOL sub_213B21468(uint64_t *a1, uint64_t *a2)
{
  return sub_213B213C0(*a1, (uint64_t)a2, 0, *a2);
}

uint64_t sub_213B2147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v5 = v4;
  v6 = *((unsigned __int8 *)v4 + 8);
  if ((_DWORD)v6)
  {
    if ((_DWORD)v6 == 1)
    {
      v19 = *v5;
      v8 = type metadata accessor for AsyncChannel.Awaiting(255, *(_QWORD *)(a2 + 16), a3, a4);
      swift_bridgeObjectRetain();
      MEMORY[0x2199BD010](&unk_213B32BB0, v8);
      sub_213B2C0EC();
      sub_213B2C0C8();
      if (v18 == 1)
        v6 = 0;
      else
        v6 = v18;
      v9 = v19;
      swift_bridgeObjectRetain();
      v10 = sub_213B2C0E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v9 = 0;
        v11 = 2;
      }
      else
      {
        v11 = 1;
      }
      *v5 = v9;
      *((_BYTE *)v5 + 8) = v11;
    }
    else
    {
      v12 = type metadata accessor for AsyncChannel.Awaiting(255, *(_QWORD *)(a2 + 16), a3, a4);
      sub_213B2C464();
      swift_initStackObject();
      v13 = sub_213B2BF60();
      *(_QWORD *)v14 = a1;
      *(_QWORD *)(v14 + 8) = 0;
      *(_BYTE *)(v14 + 16) = 1;
      sub_213B2BFD8();
      if (MEMORY[0x2199BC464](v13, v12))
      {
        v15 = MEMORY[0x2199BD010](&unk_213B32BB0, v12);
        v16 = sub_213B23180(v13, v12, v15);
      }
      else
      {
        v16 = MEMORY[0x24BEE4B08];
      }
      swift_bridgeObjectRelease();
      v6 = 0;
      *v5 = v16;
      *((_BYTE *)v5 + 8) = 1;
    }
  }
  return v6;
}

_QWORD *AsyncChannel.init(element:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(*v4 + 80);
  v11 = 0;
  v12 = 2;
  v13 = 0;
  v14 = 0;
  v6 = type metadata accessor for AsyncChannel.State(0, v5, a3, a4);
  v9 = sub_213AD6624((uint64_t)&v11, v6, v7, v8);
  swift_bridgeObjectRelease();
  v4[2] = v9;
  return v4;
}

void sub_213B21688(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  __int16 *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int16 v30;

  v6 = *(_QWORD *)(*a2 + 80);
  v7 = sub_213B2C23C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-v9];
  v30 = 0;
  v11 = a2[2];
  v19 = v6;
  v20 = &v30;
  v21 = a3;
  v22 = a1;
  v23 = (char *)&v30 + 1;
  type metadata accessor for AsyncChannel.State(0, v6, v12, v13);
  v14 = MEMORY[0x24BEE4078];
  v15 = MEMORY[0x24BEE40A8];
  sub_213B2C074();
  v16 = sub_213B2C23C();
  v17 = type metadata accessor for UnsafeResumption(255, v16, v14, v15);
  sub_213B2C23C();
  sub_213AD6598((void (*)(uint64_t))sub_213B23154, (uint64_t)v18, v11);
  if (v27)
  {
    v24 = v27;
    v25 = v28;
    v26 = v29 & 1;
    sub_213B29C44(v17);
  }
  if ((v30 & 0x100) != 0 || v30 == 1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v10, 1, 1, v6);
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(v8 + 32))(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 40), v10, v7);
    swift_continuation_resume();
  }
}

uint64_t sub_213B21830@<X0>(uint64_t result@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  if (*(_BYTE *)(result + 24) == 1)
  {
    *a2 = 1;
LABEL_19:
    *(_QWORD *)a7 = 0;
    *(_QWORD *)(a7 + 8) = 0;
    *(_BYTE *)(a7 + 16) = 0;
    return result;
  }
  v9 = result;
  if (*(_BYTE *)(result + 8))
  {
    if (*(_BYTE *)(result + 8) == 1)
    {
      v35 = *(_QWORD *)result;
      v12 = type metadata accessor for AsyncChannel.Awaiting(255, a6, a3, a4);
      swift_bridgeObjectRetain();
      MEMORY[0x2199BD010](&unk_213B32BB0, v12);
      sub_213B2C0EC();
      sub_213B2C0D4();
      if (v33 != 1)
      {
        sub_213B2C0C8();
        *a5 = 1;
      }
      v13 = v35;
      swift_bridgeObjectRetain();
      v14 = sub_213B2C0E0();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v13 = 0;
        v15 = 2;
      }
      else
      {
        v15 = 1;
      }
      *(_QWORD *)v9 = v13;
      *(_BYTE *)(v9 + 8) = v15;
    }
    else
    {
      v24 = type metadata accessor for AsyncChannel.Awaiting(255, a6, a3, a4);
      sub_213B2C464();
      swift_initStackObject();
      v25 = sub_213B2BF60();
      *(_QWORD *)v26 = a3;
      *(_QWORD *)(v26 + 8) = a4;
      *(_BYTE *)(v26 + 16) = 0;
      sub_213B2BFD8();
      if (MEMORY[0x2199BC464](v25, v24))
      {
        v27 = MEMORY[0x2199BD010](&unk_213B32BB0, v24);
        v28 = sub_213B23180(v25, v24, v27);
      }
      else
      {
        v28 = MEMORY[0x24BEE4B08];
      }
      result = swift_bridgeObjectRelease();
      *(_QWORD *)v9 = v28;
      *(_BYTE *)(v9 + 8) = 1;
    }
    goto LABEL_19;
  }
  v31 = *(_QWORD *)result;
  sub_213B2C23C();
  sub_213B2C074();
  v16 = sub_213B2C23C();
  v17 = sub_213B2C074();
  v18 = sub_213B2BFD8();
  swift_bridgeObjectRetain();
  MEMORY[0x2199BD010](MEMORY[0x24BEE12E8], v18);
  sub_213B2C0F8();
  v19 = v32;
  v20 = v31;
  v21 = swift_bridgeObjectRetain();
  v22 = MEMORY[0x2199BC440](v21, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
    v23 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 0;
    v23 = 2;
  }
  *(_QWORD *)v9 = v20;
  *(_BYTE *)(v9 + 8) = v23;
  v35 = a4;
  result = sub_213B29B74(v19, (uint64_t)&v35, v16, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8], &v32);
  v29 = v33;
  v30 = v34;
  *(_QWORD *)a7 = v32;
  *(_QWORD *)(a7 + 8) = v29;
  *(_BYTE *)(a7 + 16) = v30;
  return result;
}

uint64_t sub_213B21B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_213B2BFE4();
  }
  return swift_task_switch();
}

uint64_t sub_213B21BC8()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_213B21C24;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_213B21C24()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  return (*(uint64_t (**)(void))(*v0 + 8))();
}

uint64_t _s10ProductKit12AsyncChannelC6finishyyF_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  uint64_t v37;
  _QWORD v38[2];

  v1 = *(_QWORD *)(*v0 + 80);
  v2 = sub_213B2C23C();
  v35 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v34 - v3;
  v5 = v0[2];
  v37 = v1;
  type metadata accessor for AsyncChannel.State(0, v1, v6, v7);
  v34 = v2;
  sub_213B2C074();
  v8 = sub_213B2C23C();
  v9 = sub_213B2C074();
  sub_213B2BFD8();
  v12 = type metadata accessor for AsyncChannel.Awaiting(255, v1, v10, v11);
  MEMORY[0x2199BD010](&unk_213B32BB0, v12);
  sub_213B2C0EC();
  swift_getTupleTypeMetadata2();
  sub_213AD6598((void (*)(uint64_t))sub_213B234F8, (uint64_t)v36, v5);
  v14 = v38[0];
  v13 = v38[1];
  if (MEMORY[0x2199BC458](v38[0], v9))
  {
    v15 = 4;
    do
    {
      v16 = v15 - 4;
      v17 = sub_213B2BF90();
      sub_213B2BF6C();
      if ((v17 & 1) != 0)
      {
        v18 = *(_QWORD *)(v14 + 8 * v15);
        v19 = v15 - 3;
        if (__OFADD__(v16, 1))
          goto LABEL_9;
      }
      else
      {
        v18 = sub_213B2C308();
        swift_unknownObjectRelease();
        v19 = v15 - 3;
        if (__OFADD__(v16, 1))
        {
LABEL_9:
          __break(1u);
          break;
        }
      }
      v38[0] = 0;
      (*(void (**)(_QWORD, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(*(_QWORD *)(*(_QWORD *)(v18 + 64) + 40), v38, v8);
      swift_continuation_resume();
      ++v15;
    }
    while (v19 != MEMORY[0x2199BC458](v14, v9));
  }
  result = swift_bridgeObjectRelease();
  v21 = 0;
  v22 = v13 + 56;
  v23 = 1 << *(_BYTE *)(v13 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & *(_QWORD *)(v13 + 56);
  v26 = (unint64_t)(v23 + 63) >> 6;
  v27 = v34;
  while (v25)
  {
    v28 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    v29 = v28 | (v21 << 6);
LABEL_27:
    v33 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 24 * v29 + 8);
    if (v33)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v4, 1, 1, v1);
      (*(void (**)(_QWORD, char *, uint64_t))(v35 + 32))(*(_QWORD *)(*(_QWORD *)(v33 + 64) + 40), v4, v27);
      result = swift_continuation_resume();
    }
  }
  v30 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v30 >= v26)
    return swift_release();
  v31 = *(_QWORD *)(v22 + 8 * v30);
  ++v21;
  if (v31)
    goto LABEL_26;
  v21 = v30 + 1;
  if (v30 + 1 >= v26)
    return swift_release();
  v31 = *(_QWORD *)(v22 + 8 * v21);
  if (v31)
  {
LABEL_26:
    v25 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v21 << 6);
    goto LABEL_27;
  }
  v32 = v30 + 2;
  if (v32 >= v26)
    return swift_release();
  v31 = *(_QWORD *)(v22 + 8 * v32);
  if (v31)
  {
    v21 = v32;
    goto LABEL_26;
  }
  while (1)
  {
    v21 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v21 >= v26)
      return swift_release();
    v31 = *(_QWORD *)(v22 + 8 * v21);
    ++v32;
    if (v31)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_213B21FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_BYTE *)(a1 + 24) != 1)
  {
    *(_BYTE *)(a1 + 24) = 1;
    v7 = *(_QWORD *)a1;
    if (!*(_BYTE *)(a1 + 8))
    {
      *(_QWORD *)a1 = 0;
      *(_BYTE *)(a1 + 8) = 2;
      *a5 = v7;
      goto LABEL_6;
    }
    if (*(_BYTE *)(a1 + 8) == 1)
    {
      *(_QWORD *)a1 = 0;
      *(_BYTE *)(a1 + 8) = 2;
      sub_213B2C23C();
      sub_213B2C074();
      sub_213B2C23C();
      sub_213B2C074();
      result = sub_213B2BF84();
      *a5 = result;
      a5[1] = v7;
      return result;
    }
  }
  sub_213B2C23C();
  sub_213B2C074();
  sub_213B2C23C();
  sub_213B2C074();
  *a5 = sub_213B2BF84();
LABEL_6:
  v9 = type metadata accessor for AsyncChannel.Awaiting(0, a2, a3, a4);
  v10 = sub_213B2BF84();
  if (MEMORY[0x2199BC464](v10, v9))
  {
    v11 = MEMORY[0x2199BD010](&unk_213B32BB0, v9);
    v12 = sub_213B23180(v10, v9, v11);
  }
  else
  {
    v12 = MEMORY[0x24BEE4B08];
  }
  result = swift_bridgeObjectRelease();
  a5[1] = v12;
  return result;
}

uint64_t sub_213B22170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_213B22188()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  if (!__isPlatformVersionAtLeast(2, 18, 0, 0))
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_213B22250;
  return sub_213B2C488();
}

uint64_t sub_213B22250()
{
  uint64_t v0;
  uint64_t result;

  result = swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_213B222BC()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[6] = swift_task_addCancellationHandler();
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_213B22318;
  return sub_213B2245C((uint64_t)v1, v0[3], v0[2]);
}

uint64_t sub_213B22318()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B2237C()
{
  swift_task_removeCancellationHandler();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B223C0()
{
  return swift_task_removeCancellationHandler();
}

void sub_213B223C8()
{
  uint64_t v0;

  sub_213B21054(*(_QWORD *)(v0 + 24));
}

uint64_t sub_213B223EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_213ADA044;
  v6[3] = v5;
  v6[4] = v4;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_213B2245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[5] = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v4 = sub_213B2C23C();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B224C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D1AC78 + dword_254D1AC78);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  sub_213B2C074();
  sub_213B2C23C();
  *v1 = v0;
  v1[1] = sub_213B22578;
  return v3(v0 + 16, 0, 0, (uint64_t)sub_213B23574, *(_QWORD *)(v0 + 24));
}

uint64_t sub_213B22578()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B225CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 16))(v2, *(_QWORD *)(v0 + 32), v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v2, 0, 1, v5);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), v2, v4);
    swift_continuation_resume();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213B22670(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = a2[2];
  v10 = *(_QWORD *)(*a2 + 80);
  v11 = a1;
  type metadata accessor for AsyncChannel.State(0, v10, a3, a4);
  sub_213B2C23C();
  v5 = MEMORY[0x24BEE4078];
  v6 = MEMORY[0x24BEE40A8];
  sub_213B2C074();
  v7 = sub_213B2C23C();
  v8 = type metadata accessor for UnsafeResumption(255, v7, v5, v6);
  sub_213B2C23C();
  sub_213AD6598((void (*)(uint64_t))sub_213B2357C, (uint64_t)&v9, v4);
  if (v15)
  {
    v12 = v15;
    v13 = v16;
    v14 = v17 & 1;
    sub_213B29C44(v8);
  }
}

uint64_t sub_213B22764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  if (*(_BYTE *)(a1 + 24) != 1)
  {
    if (*(_BYTE *)(a1 + 8))
    {
      if (*(_BYTE *)(a1 + 8) == 1)
      {
        v26 = *(_QWORD *)a1;
        v12 = type metadata accessor for AsyncChannel.Awaiting(255, a3, a3, a4);
        swift_bridgeObjectRetain();
        MEMORY[0x2199BD010](&unk_213B32BB0, v12);
        sub_213B2C0EC();
        sub_213B2C0B0();
        v21 = v24;
        v13 = v26;
        swift_bridgeObjectRetain();
        v14 = sub_213B2C0BC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14)
        {
          v15 = 1;
        }
        else
        {
          swift_bridgeObjectRelease();
          v13 = 0;
          v15 = 2;
        }
        *(_QWORD *)a1 = v13;
        *(_BYTE *)(a1 + 8) = v15;
        v22 = v21;
        sub_213B2C23C();
        v7 = MEMORY[0x24BEE4078];
        v8 = MEMORY[0x24BEE40A8];
        sub_213B2C074();
        v9 = sub_213B2C23C();
        v10 = &v22;
        goto LABEL_12;
      }
      sub_213B2C23C();
      sub_213B2C074();
      sub_213B2C23C();
      sub_213B2C074();
      sub_213B2C464();
      swift_allocObject();
      v17 = sub_213B2BF60();
      *v18 = a2;
      result = sub_213B2BFD8();
      *(_QWORD *)a1 = v17;
    }
    else
    {
      v23 = *(_QWORD *)a1;
      v26 = a2;
      sub_213B2C23C();
      sub_213B2C074();
      sub_213B2C23C();
      sub_213B2C074();
      sub_213B2BFD8();
      result = sub_213B2BFB4();
      *(_QWORD *)a1 = v23;
    }
    *(_BYTE *)(a1 + 8) = 0;
    *(_QWORD *)a5 = 0;
    *(_QWORD *)(a5 + 8) = 0;
    *(_BYTE *)(a5 + 16) = 0;
    return result;
  }
  v26 = 0;
  sub_213B2C23C();
  v7 = MEMORY[0x24BEE4078];
  v8 = MEMORY[0x24BEE40A8];
  sub_213B2C074();
  v9 = sub_213B2C23C();
  v10 = &v26;
LABEL_12:
  result = sub_213B29B74(a2, (uint64_t)v10, v9, v7, v8, &v23);
  v19 = v24;
  v20 = v25;
  *(_QWORD *)a5 = v23;
  *(_QWORD *)(a5 + 8) = v19;
  *(_BYTE *)(a5 + 16) = v20;
  return result;
}

uint64_t AsyncChannel.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = 1;
  return swift_retain();
}

uint64_t AsyncChannel.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AsyncChannel.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_213B22AB0@<X0>(uint64_t a1@<X8>)
{
  AsyncChannel.makeAsyncIterator()(a1);
  return swift_release();
}

uint64_t sub_213B22AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
  {
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 24) = v17;
    *v17 = v8;
    v17[1] = sub_213B14414;
    return sub_213B2C488();
  }
  else
  {
    v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254D1AC68 + dword_254D1AC68);
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 16) = v19;
    *v19 = v8;
    v19[1] = sub_213AD7E40;
    return v20(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_213B22C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[5] = a4;
  v6[6] = a5;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  if (a6)
  {
    swift_getObjectType();
    v7 = sub_213B2BFE4();
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v6[7] = v7;
  v6[8] = v9;
  return swift_task_switch();
}

uint64_t sub_213B22C7C()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = (int *)v0[3];
  v0[9] = swift_task_addCancellationHandler();
  v4 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc();
  v0[10] = v2;
  *v2 = v0;
  v2[1] = sub_213B22CE8;
  return v4(v0[2]);
}

uint64_t sub_213B22CE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B22D48()
{
  uint64_t v0;

  swift_task_removeCancellationHandler();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B22D7C()
{
  uint64_t v0;

  swift_task_removeCancellationHandler();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for AsyncChannel.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncChannel.State);
}

uint64_t sub_213B22DBC()
{
  return MEMORY[0x24BEE40A8];
}

void sub_213B22DC8()
{
  JUMPOUT(0x2199BD010);
}

uint64_t sub_213B22DD8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncChannel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncChannel);
}

uint64_t method lookup function for AsyncChannel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncChannel.__allocating_init(element:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_213B22E3C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_213B22E70()
{
  return swift_release();
}

uint64_t sub_213B22E78(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_213B22ED8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t sub_213B22F14(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_213B22F5C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AsyncChannel.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncChannel.Iterator);
}

uint64_t sub_213B22FA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B22FB0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213B22FF4(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_213B23064(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t sub_213B230B0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_213B23104(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

void sub_213B2314C(uint64_t a1)
{
  uint64_t v1;

  sub_213B21688(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_213B23154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213B21830(a1, *(_BYTE **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE **)(v2 + 48), *(_QWORD *)(v2 + 16), a2);
}

uint64_t type metadata accessor for AsyncChannel.Awaiting(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncChannel.Awaiting);
}

uint64_t sub_213B23180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v37 - v9;
  v37 = v10;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x2199BC440](v12))
  {
    sub_213B2C2D8();
    v15 = sub_213B2C2CC();
  }
  else
  {
    v15 = MEMORY[0x24BEE4B08];
  }
  v40 = MEMORY[0x2199BC464](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_213B2BF90();
    sub_213B2BF6C();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_213B2C308();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_213B2BDBC();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v7, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_213B2BDE0();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v7, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_213B23488@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = type metadata accessor for AsyncChannel.Emission(0, v5, a1, a2);
  result = sub_213B2147C(v6, v7, v8, v9);
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for AsyncChannel.Emission(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncChannel.Emission);
}

uint64_t sub_213B234E4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 16);
  *a2 = v2;
  *(_QWORD *)(result + 16) = v2 + 1;
  return result;
}

uint64_t sub_213B234F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_213B21FC4(a1, *(_QWORD *)(v4 + 16), a2, a3, a4);
}

uint64_t sub_213B23510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_213AD7E40;
  return sub_213B2245C(a1, v5, v4);
}

void sub_213B23574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  sub_213B22670(a1, v4, a3, a4);
}

uint64_t sub_213B2357C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_213B22764(a1, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 16), a2, a3);
}

uint64_t sub_213B23594(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_213B235F0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_213B23644()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_213B2364C(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213B23680(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213B236C0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213B236F8(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_213B23740(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_213B23784(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_213B2379C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void sub_213B237B4()
{
  JUMPOUT(0x2199BD010);
}

uint64_t sub_213B237D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D1AD90);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D1AD90);
  if (qword_254D18468 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_213B23864()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE66C10]), sel_init);
  objc_msgSend(v0, sel_setDiscretionary_, 0);
  objc_msgSend(v0, sel_setCanUseLocalCacheServer_, 1);
  objc_msgSend(v0, sel_setAllowsCellularAccess_, 1);
  result = objc_msgSend(v0, sel_setTimeoutIntervalForResource_, 15);
  qword_254D1ADA8 = (uint64_t)v0;
  return result;
}

uint64_t sub_213B238EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

void sub_213B23904()
{
  uint64_t *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (void *)sub_213B27954();
  v2 = objc_msgSend(v1, sel_assetType);

  if (v2)
  {
    sub_213B267D8();
    v3 = sub_213B2BE1C();
    v5 = v4;

    v0[4] = v5;
    v6 = (_QWORD *)swift_task_alloc();
    v0[5] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = sub_213B239B4;
    sub_213B1EAB8(v3, v5, v0[3]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_213B239B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B23A28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B23A5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_213B23A74()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)sub_213B27954();
  v0[17] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_213B23B1C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_213B23C08;
  v3[3] = &block_descriptor_20;
  v3[4] = v2;
  objc_msgSend(v1, sel_queryMetaData_, v3);
  return swift_continuation_await();
}

uint64_t sub_213B23B1C()
{
  return swift_task_switch();
}

uint64_t sub_213B23B68()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = objc_msgSend(*(id *)(v0 + 136), sel_results);
  if (v2)
  {
    v3 = v2;
    sub_213B267D8();
    v4 = sub_213B2BF3C();

  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
  }
  v5 = *(void **)(v0 + 136);
  v6 = sub_213B23C1C(v4);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v6);
}

uint64_t sub_213B23C08(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_213B23C1C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  unint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_213B2C398();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x24BEE4AF8];
  result = sub_213B28EEC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x2199BC7AC](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_213B28EEC(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_213B267D8();
        v16 = &off_24D0BF4C8;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_213AE1104(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v11 = *(_QWORD *)(v3 + 16);
        v12 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_213B28EEC(v12 > 1, v11 + 1, 1);
          v3 = v17;
        }
        v15 = sub_213B267D8();
        v16 = &off_24D0BF4C8;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_213AE1104(&v14, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_213B23DE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_213B23DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v1 + 112) & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_BYTE *)(v1 + 112) = 1;
  if (qword_254D18448 != -1)
    swift_once();
  v3 = sub_213B2BCF0();
  *(_QWORD *)(v0 + 32) = __swift_project_value_buffer(v3, (uint64_t)qword_254D1AD90);
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C170();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_213AC8000, v4, v5, "Updating catalog", v6, 2u);
    MEMORY[0x2199BD0E8](v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 24);

  v8 = *(int **)(v7 + 120);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v7 + 128);
  v9 = qword_254D18450;
  swift_retain();
  if (v9 != -1)
    swift_once();
  v10 = qword_254D1ADA8;
  v12 = (int *)((char *)v8 + *v8);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v11;
  *v11 = v0;
  v11[1] = sub_213B23F84;
  return ((uint64_t (*)(_QWORD, uint64_t))v12)(*(_QWORD *)(v0 + 16), v10);
}

uint64_t sub_213B23F84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_213B23FF8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;

  v1 = sub_213B2BCD8();
  v2 = sub_213B2C170();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_213AC8000, v1, v2, "Done updating catalog", v3, 2u);
    MEMORY[0x2199BD0E8](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 24);

  *(_BYTE *)(v4 + 112) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B240A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B240D8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 304) = a2;
  *(_QWORD *)(v4 + 312) = v3;
  *(_BYTE *)(v4 + 440) = a3;
  *(_QWORD *)(v4 + 296) = a1;
  *(_QWORD *)(v4 + 320) = *v3;
  v5 = sub_213B2BBD0();
  *(_QWORD *)(v4 + 328) = v5;
  *(_QWORD *)(v4 + 336) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 344) = swift_task_alloc();
  *(_QWORD *)(v4 + 352) = type metadata accessor for MobileAssetRequest();
  *(_QWORD *)(v4 + 360) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_213B2416C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;

  if (qword_254D18448 != -1)
    swift_once();
  v1 = v0[45];
  v2 = v0[38];
  v3 = sub_213B2BCF0();
  v0[46] = __swift_project_value_buffer(v3, (uint64_t)qword_254D1AD90);
  sub_213B10758(v2, v1);
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C170();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[45];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_213B27B28();
    v0[36] = sub_213AE1780(v10, v11, &v17);
    sub_213B2C254();
    swift_bridgeObjectRelease();
    sub_213B1079C(v7);
    _os_log_impl(&dword_213AC8000, v4, v5, "Performing request: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v9, -1, -1);
    MEMORY[0x2199BD0E8](v8, -1, -1);
  }
  else
  {
    sub_213B1079C(v0[45]);
  }

  v12 = v0[39];
  v13 = *(int **)(v12 + 136);
  v0[47] = *(_QWORD *)(v12 + 144);
  v16 = (uint64_t (*)(_QWORD))((char *)v13 + *v13);
  swift_retain();
  v14 = (_QWORD *)swift_task_alloc();
  v0[48] = v14;
  *v14 = v0;
  v14[1] = sub_213B24360;
  return v16(v0[38]);
}

uint64_t sub_213B24360(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 392) = a1;
  *(_QWORD *)(v3 + 400) = a2;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_213B243C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *buf;
  uint64_t v49;
  __int128 *v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, BOOL, uint64_t, uint64_t);
  uint64_t v53[2];

  v2 = *(_QWORD *)(v0 + 392);
  v1 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    if (!v3)
    {
      *(_QWORD *)(v0 + 88) = 0;
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
LABEL_16:
      if (!*(_QWORD *)(v0 + 80))
      {
        sub_213AD6270(v0 + 56, &qword_254D1AE70);
        swift_bridgeObjectRetain();
        v26 = sub_213B2BCD8();
        v27 = sub_213B2C158();
        v28 = os_log_type_enabled(v26, v27);
        v29 = *(_QWORD *)(v0 + 400);
        if (v28)
        {
          v30 = (uint8_t *)swift_slowAlloc();
          v31 = swift_slowAlloc();
          v53[0] = v31;
          *(_DWORD *)v30 = 136315138;
          *(_QWORD *)(v0 + 272) = v29;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AE78);
          v32 = sub_213B2BE64();
          *(_QWORD *)(v0 + 256) = sub_213AE1780(v32, v33, v53);
          sub_213B2C254();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_213AC8000, v26, v27, "Failed to find asset, received: %s", v30, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2199BD0E8](v31, -1, -1);
          MEMORY[0x2199BD0E8](v30, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      sub_213AE1104((__int128 *)(v0 + 56), v0 + 16);
      v15 = *(_QWORD *)(v0 + 40);
      v16 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + 16), v15);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16) & 1) != 0)
      {
        sub_213AD8B28(v0 + 16, v0 + 176);
        v17 = sub_213B2BCD8();
        v18 = sub_213B2C170();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = *(_QWORD *)(v0 + 344);
          v47 = *(_QWORD *)(v0 + 336);
          v46 = *(_QWORD *)(v0 + 328);
          v20 = (uint8_t *)swift_slowAlloc();
          v51 = swift_slowAlloc();
          v53[0] = v51;
          *(_DWORD *)v20 = 136315138;
          v22 = *(_QWORD *)(v0 + 200);
          v21 = *(_QWORD *)(v0 + 208);
          __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + 176), v22);
          (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v22, v21);
          sub_213AE1D7C();
          v23 = sub_213B2C458();
          v25 = v24;
          (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v19, v46);
          *(_QWORD *)(v0 + 280) = sub_213AE1780(v23, v25, v53);
          sub_213B2C254();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0(v0 + 176);
          _os_log_impl(&dword_213AC8000, v17, v18, "Found local asset: %s", v20, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2199BD0E8](v51, -1, -1);
          MEMORY[0x2199BD0E8](v20, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_0(v0 + 176);
        }

        sub_213B24DA4((_QWORD *)(v0 + 16), *(char **)(v0 + 296));
        __swift_destroy_boxed_opaque_existential_0(v0 + 16);
        swift_task_dealloc();
        swift_task_dealloc();
        v42 = *(uint64_t (**)(void))(v0 + 8);
        return v42();
      }
      sub_213AD8B28(v0 + 16, v0 + 216);
      v34 = sub_213B2BCD8();
      v35 = sub_213B2C170();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v49 = swift_slowAlloc();
        *(_DWORD *)v36 = 136315138;
        buf = v36;
        v53[0] = v49;
        v38 = *(_QWORD *)(v0 + 240);
        v37 = *(_QWORD *)(v0 + 248);
        __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + 216), v38);
        v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v38, v37);
        *(_QWORD *)(v0 + 264) = sub_213AE1780(v39, v40, v53);
        sub_213B2C254();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0(v0 + 216);
        _os_log_impl(&dword_213AC8000, v34, v35, "Downloading asset: %s", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199BD0E8](v49, -1, -1);
        MEMORY[0x2199BD0E8](buf, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0(v0 + 216);
      }

      v3 = *(_QWORD *)(v0 + 40);
      v11 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + 16), v3);
      if (qword_254D18450 == -1)
      {
LABEL_31:
        v43 = qword_254D1ADA8;
        v44 = *(_BYTE *)(*(_QWORD *)(v0 + 304) + *(int *)(*(_QWORD *)(v0 + 352) + 20));
        v52 = (uint64_t (*)(uint64_t, BOOL, uint64_t, uint64_t))(**(int **)(v11 + 32) + *(_QWORD *)(v11 + 32));
        v45 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 408) = v45;
        *v45 = v0;
        v45[1] = sub_213B24B90;
        return v52(v43, (v44 & 1) == 0, v3, v11);
      }
LABEL_33:
      swift_once();
      goto LABEL_31;
    }
LABEL_9:
    v50 = (__int128 *)(v0 + 96);
    v11 = v1 + 32;
    swift_bridgeObjectRetain();
    v12 = v1 + 32;
    do
    {
      sub_213AD8B28(v12, v0 + 136);
      v13 = *(_QWORD *)(v0 + 160);
      v14 = *(_QWORD *)(v0 + 168);
      __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + 136), v13);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_213AE1104((__int128 *)(v0 + 136), (uint64_t)v50);
        sub_213AE1104(v50, v0 + 56);
        goto LABEL_16;
      }
      __swift_destroy_boxed_opaque_existential_0(v0 + 136);
      v12 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v1 + 16))
    {
      sub_213AD8B28(v1 + 32, v0 + 56);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_33;
  }
  if (v3)
    goto LABEL_9;
  v4 = *(unsigned __int8 *)(v0 + 440);
  swift_bridgeObjectRelease();
  if (v2 != 2 || (v4 & 1) != 0)
  {
LABEL_25:
    sub_213AD62AC();
    swift_allocError();
    *(_OWORD *)v41 = xmmword_213B2EC80;
    *(_BYTE *)(v41 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  v5 = sub_213B2BCD8();
  v6 = sub_213B2C170();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_213AC8000, v5, v6, "XML is missing", v7, 2u);
    MEMORY[0x2199BD0E8](v7, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v8;
  *v8 = v0;
  v8[1] = sub_213B24C68;
  v9 = *(_QWORD *)(v0 + 312);
  v8[2] = *(_QWORD *)(v0 + 304);
  v8[3] = v9;
  return swift_task_switch();
}

uint64_t sub_213B24B90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B24BF4()
{
  uint64_t v0;

  sub_213B24DA4((_QWORD *)(v0 + 16), *(char **)(v0 + 296));
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B24C68()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v3[1])();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    v2[54] = v5;
    *v5 = v3;
    v5[1] = sub_213B24D04;
    return sub_213B240D8(v2[37], v2[38], 1);
  }
}

uint64_t sub_213B24D04()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B24D5C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_213B24DA4(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  id v38[2];

  v36 = a2;
  v38[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_213B2BBD0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v14 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v14);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
  v15 = (void *)sub_213B2BB7C();
  v35 = *(void (**)(char *, uint64_t))(v7 + 8);
  v35(v11, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AE88);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_213B2E300;
  v17 = (void *)*MEMORY[0x24BDBCC60];
  v18 = (void *)*MEMORY[0x24BDBCC90];
  *(_QWORD *)(v16 + 32) = *MEMORY[0x24BDBCC60];
  *(_QWORD *)(v16 + 40) = v18;
  type metadata accessor for URLResourceKey(0);
  v19 = v17;
  v20 = v18;
  v21 = (void *)sub_213B2BF30();
  swift_bridgeObjectRelease();
  v38[0] = 0;
  v22 = objc_msgSend(v12, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v15, v21, 7, v38);

  v23 = v38[0];
  if (v22)
  {
    v24 = sub_213B2BF3C();

    if (*(_QWORD *)(v24 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v24 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      v25 = 0;
    }
    else
    {
      v25 = 1;
    }
    v28 = v37;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v25, 1, v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_213AD6270((uint64_t)v5, &qword_254D188E0);
    }
    else
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v29(v28, v5, v6);
      v30 = objc_allocWithZone(MEMORY[0x24BDD1488]);
      v31 = (void *)sub_213B2BB7C();
      v32 = objc_msgSend(v30, sel_initWithURL_, v31);

      if (v32)
      {
        v29(v36, v28, v6);
        return;
      }
      v35(v28, v6);
    }
    sub_213AD62AC();
    v27 = (void *)swift_allocError();
    *(_OWORD *)v33 = xmmword_213B328A0;
    *(_BYTE *)(v33 + 16) = 2;
  }
  else
  {
    v26 = v23;
    v27 = (void *)sub_213B2BB4C();

  }
  swift_willThrow();
  sub_213AD62AC();
  swift_allocError();
  *(_OWORD *)v34 = xmmword_213B2EB60;
  *(_BYTE *)(v34 + 16) = 2;
  swift_willThrow();

}

unint64_t sub_213B25178(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D18898);
    v2 = (_QWORD *)sub_213B2C3BC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_213B00EB4();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_213AD6408(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_213AE39F4(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_213AD6408((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_213AD6270((uint64_t)v30, &qword_254D1AEA0);
      swift_bridgeObjectRelease();
      sub_213B00EB4();
      swift_release();
      return 0;
    }
    sub_213AE39F4((uint64_t)v31 + 8, (uint64_t)v25);
    sub_213AD6270((uint64_t)v30, &qword_254D1AEA0);
    sub_213AD5184(v25, v26);
    v27 = v24;
    sub_213AD5184(v26, v28);
    v16 = v27;
    sub_213AD5184(v28, v29);
    sub_213AD5184(v29, &v27);
    result = sub_213AD4B1C(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      result = (unint64_t)sub_213AD5184(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_213AD5184(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_213B25548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  _QWORD aBlock[10];
  char v24;

  v13 = *v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A618);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[6] = a1;
  aBlock[7] = a2;
  aBlock[8] = a3;
  aBlock[9] = a4;
  v24 = 0;
  v17 = sub_213B118D0();
  if (v17)
  {
    v18 = v17;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a5;
    v19[3] = a6;
    v19[4] = v18;
    v19[5] = v13;
    aBlock[4] = sub_213B267B4;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_213B1E410;
    aBlock[3] = &block_descriptor_4;
    v20 = _Block_copy(aBlock);
    swift_retain();
    v21 = v18;
    swift_release();
    objc_msgSend(v21, sel_queryMetaData_, v20);
    _Block_release(v20);

  }
  else
  {
    *(_OWORD *)v16 = xmmword_213B32BF0;
    v16[16] = 2;
    swift_storeEnumTagMultiPayload();
    a5(v16);
    sub_213AD6270((uint64_t)v16, &qword_254D1A618);
  }
}

void sub_213B256DC(uint64_t a1, void (*a2)(char *), uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;
  void (*v34)(char *);
  void *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  id v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  void *v67;
  char *v68;
  void (*v69)(uint64_t, char *, uint64_t);
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  __int128 aBlock;
  uint64_t (*v85)();
  void *v86;
  uint64_t (*v87)(uint64_t);
  _QWORD *v88;
  void *v89[4];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v74 - v11;
  v13 = sub_213B2BBD0();
  v83 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v80 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v81 = (char *)&v74 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v74 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A618);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v74 - v24;
  v26 = 11;
  switch(a1)
  {
    case 0:
      v78 = v13;
      v27 = objc_msgSend(a4, sel_results);
      if (!v27)
        goto LABEL_49;
      v28 = v27;
      v76 = v20;
      v77 = v25;
      sub_213B267D8();
      v29 = sub_213B2BF3C();

      if (v29 >> 62)
        goto LABEL_47;
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v30)
        goto LABEL_48;
      break;
    case 2:
      v26 = 8;
      goto LABEL_17;
    case 5:
      v26 = 10;
      goto LABEL_17;
    case 9:
      goto LABEL_17;
    default:
      v26 = 1;
LABEL_17:
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = 0;
      v23[16] = 2;
      swift_storeEnumTagMultiPayload();
      a2(v23);
      v43 = (uint64_t)v23;
LABEL_18:
      sub_213AD6270(v43, &qword_254D1A618);
      return;
  }
  while (1)
  {
    v75 = a2;
    a2 = (void (*)(char *))(v29 & 0xC000000000000001);
    if ((v29 & 0xC000000000000001) != 0)
    {
      v31 = (char *)MEMORY[0x2199BC7AC](0, v29);
    }
    else
    {
      if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_53:
        swift_once();
LABEL_35:
        v56 = qword_254D1ADA8;
        v57 = (_QWORD *)swift_allocObject();
        v57[2] = a2;
        v57[3] = a3;
        v57[4] = v23;
        v87 = sub_213B26854;
        v88 = v57;
        *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v85 = sub_213B1DC08;
        v86 = &block_descriptor_13;
        v58 = _Block_copy(&aBlock);
        swift_retain();
        v59 = v23;
        swift_release();
        objc_msgSend(v59, sel_startDownload_then_, v56, v58);

        _Block_release(v58);
        return;
      }
      v31 = (char *)*(id *)(v29 + 32);
    }
    v32 = v31;
    v74 = a3;
    *(_QWORD *)&aBlock = v31;
    if (v30 == 1)
      break;
    v79 = v29 & 0xFFFFFFFFFFFFFF8;
    a3 = 5;
    while (1)
    {
      v44 = a3 - 4;
      if (a2)
      {
        v45 = (char *)MEMORY[0x2199BC7AC](a3 - 4, v29);
      }
      else
      {
        if (v44 >= *(_QWORD *)(v79 + 16))
          goto LABEL_46;
        v45 = (char *)*(id *)(v29 + 8 * a3);
      }
      v23 = v45;
      v46 = __OFADD__(v44, 1);
      v47 = a3 - 3;
      if (v46)
        break;
      v89[0] = v45;
      if ((sub_213B2601C((id *)&aBlock, v89) & 1) != 0)
      {

        *(_QWORD *)&aBlock = v23;
        v32 = v23;
      }
      else
      {

        v23 = v32;
      }
      ++a3;
      if (v47 == v30)
        goto LABEL_10;
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_213B2C398();
    if (!v30)
    {
LABEL_48:
      swift_bridgeObjectRelease_n();
      v25 = v77;
LABEL_49:
      *(_OWORD *)v25 = xmmword_213B32C00;
      v25[16] = 2;
      swift_storeEnumTagMultiPayload();
      a2(v25);
LABEL_50:
      v43 = (uint64_t)v25;
      goto LABEL_18;
    }
  }
  v23 = v31;
LABEL_10:
  swift_bridgeObjectRelease_n();
  if ((objc_msgSend(v23, sel_wasLocal) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AA90);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_213B2E2E0;
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_213B2C2E4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = 0xD000000000000012;
    *((_QWORD *)&aBlock + 1) = 0x8000000213B35BD0;
    v49 = objc_msgSend(v23, sel_assetId);
    a3 = v74;
    a2 = v75;
    if (v49)
    {
      v50 = v49;
      v51 = (void *)sub_213B2BE1C();
      v53 = v52;

    }
    else
    {
      v51 = 0;
      v53 = 0;
    }
    v89[0] = v51;
    v89[1] = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AE98);
    sub_213B2C230();
    swift_bridgeObjectRelease();
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    v55 = aBlock;
    *(_QWORD *)(v48 + 56) = MEMORY[0x24BEE0D00];
    *(_OWORD *)(v48 + 32) = v55;
    sub_213B2C50C();
    swift_bridgeObjectRelease();
    if (qword_254D18450 == -1)
      goto LABEL_35;
    goto LABEL_53;
  }
  v33 = objc_msgSend(v23, sel_getLocalFileUrl);
  v34 = v75;
  if (v33)
  {
    v35 = v33;
    v36 = v81;
    sub_213B2BBA0();

    v37 = v83;
    v38 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
    v39 = v78;
    v38(v12, v36, v78);
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v40(v12, 0, 1, v39);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v12, 1, v39);
    v25 = v77;
    if (v41 == 1)
    {
      v42 = v37;
      v34 = v75;
      goto LABEL_32;
    }
    v38(v19, v12, v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AA90);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_213B2E2E0;
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_213B2C2E4();
    swift_bridgeObjectRelease();
    strcpy((char *)&aBlock, "Local asset: ");
    HIWORD(aBlock) = -4864;
    sub_213B2BB64();
    sub_213B2BEAC();
    swift_bridgeObjectRelease();
    sub_213B2BEAC();
    v61 = aBlock;
    *(_QWORD *)(v60 + 56) = MEMORY[0x24BEE0D00];
    *(_OWORD *)(v60 + 32) = v61;
    sub_213B2C50C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v39);
    v42 = v37;
    v54 = (uint64_t)v82;
    v34 = v75;
  }
  else
  {
    v42 = v83;
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56);
    v40(v12, 1, 1, v78);
    v25 = v77;
LABEL_32:
    sub_213AD6270((uint64_t)v12, &qword_254D188E0);
    v54 = (uint64_t)v82;
  }
  v62 = objc_msgSend(v23, sel_attributes, v74);
  if (!v62
    || (v63 = v62, v64 = sub_213B2BDB0(), v63, v65 = sub_213B25178(v64), swift_bridgeObjectRelease(), !v65))
  {
LABEL_44:
    *(_OWORD *)v25 = xmmword_213B2EB60;
    v25[16] = 2;
    swift_storeEnumTagMultiPayload();
    v34(v25);

    goto LABEL_50;
  }
  v66 = objc_msgSend(v23, sel_getLocalFileUrl);
  if (!v66)
  {
    v40((char *)v54, 1, 1, v78);
    goto LABEL_43;
  }
  v67 = v66;
  v68 = v81;
  sub_213B2BBA0();

  v69 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
  v70 = v68;
  v71 = v78;
  v69(v54, v70, v78);
  v40((char *)v54, 0, 1, v71);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v54, 1, v71) == 1)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    sub_213AD6270(v54, &qword_254D188E0);
    goto LABEL_44;
  }
  v72 = v80;
  v69((uint64_t)v80, (char *)v54, v71);
  v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D1A620) + 48);
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v25, v72, v71);
  *(_QWORD *)&v25[v73] = v65;
  swift_storeEnumTagMultiPayload();
  v34(v25);

  sub_213AD6270((uint64_t)v25, &qword_254D1A618);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v72, v71);
}

id sub_213B2601C(id *a1, void **a2)
{
  void *v2;
  id result;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;

  v2 = *a2;
  result = objc_msgSend(*a1, sel_attributes);
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  v4 = result;
  v5 = sub_213B2BDB0();

  v13 = sub_213B2BE1C();
  sub_213B2C2A8();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_213AD4C0C((uint64_t)v15), (v7 & 1) != 0))
  {
    sub_213AE39F4(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_213AD6444((uint64_t)v15);
  if (!*((_QWORD *)&v17 + 1))
  {
LABEL_16:
    sub_213AD6270((uint64_t)&v16, &qword_254D188A8);
    return 0;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = v13;
    result = objc_msgSend(v2, sel_attributes);
    if (result)
    {
      v9 = result;
      v10 = sub_213B2BDB0();

      v14 = sub_213B2BE1C();
      sub_213B2C2A8();
      if (*(_QWORD *)(v10 + 16) && (v11 = sub_213AD4C0C((uint64_t)v15), (v12 & 1) != 0))
      {
        sub_213AE39F4(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v16);
      }
      else
      {
        v16 = 0u;
        v17 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_213AD6444((uint64_t)v15);
      if (*((_QWORD *)&v17 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
          return (id)(v8 < v14);
        return 0;
      }
      goto LABEL_16;
    }
LABEL_20:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_213B26240(uint64_t a1, void (*a2)(char *), uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(char *);
  uint64_t v33;
  void (*v34)(char *);
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  char *v49;
  id v50;
  void (*v51)(char *);
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v50 = a4;
  v51 = a2;
  v52 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1A618);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v47 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D188E0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v47 - v15;
  v17 = sub_213B2BBD0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v47 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v47 - v24;
  if (a1 == 51)
  {
    v33 = 3;
LABEL_10:
    v34 = v51;
    *(_QWORD *)v8 = v33;
    *((_QWORD *)v8 + 1) = 0;
    v8[16] = 2;
    swift_storeEnumTagMultiPayload();
    v34(v8);
    v35 = (uint64_t)v8;
    return sub_213AD6270(v35, &qword_254D1A618);
  }
  if (a1 == 12)
  {
    v33 = 10;
    goto LABEL_10;
  }
  if (a1)
  {
    v33 = 2;
    goto LABEL_10;
  }
  v47 = v23;
  v26 = objc_msgSend(v50, sel_getLocalFileUrl);
  v49 = v14;
  if (v26)
  {
    v27 = v26;
    sub_213B2BBA0();

    v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v28(v16, v22, v17);
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v48(v16, 0, 1, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      v28(v25, v16, v17);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AA90);
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_213B2E2E0;
      v53 = 0;
      v54 = 0xE000000000000000;
      sub_213B2C2E4();
      swift_bridgeObjectRelease();
      v53 = 0xD000000000000012;
      v54 = 0x8000000213B35BF0;
      sub_213B2BB64();
      sub_213B2BEAC();
      swift_bridgeObjectRelease();
      sub_213B2BEAC();
      v30 = v53;
      v31 = v54;
      *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v29 + 32) = v30;
      *(_QWORD *)(v29 + 40) = v31;
      sub_213B2C50C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v17);
      v32 = v51;
      goto LABEL_13;
    }
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v48(v16, 1, 1, v17);
  }
  v32 = v51;
  sub_213AD6270((uint64_t)v16, &qword_254D188E0);
LABEL_13:
  v36 = objc_msgSend(v50, sel_attributes);
  if (v36)
  {
    v37 = v36;
    v38 = sub_213B2BDB0();

    v39 = sub_213B25178(v38);
    swift_bridgeObjectRelease();
    if (v39)
    {
      v40 = objc_msgSend(v50, sel_getLocalFileUrl);
      if (v40)
      {
        v41 = v40;
        sub_213B2BBA0();

        v42 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v43 = (uint64_t)v49;
        v42(v49, v22, v17);
        v48((char *)v43, 0, 1, v17);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v43, 1, v17) != 1)
        {
          v44 = v47;
          v42(v47, (char *)v43, v17);
          v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254D1A620) + 48);
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v10, v44, v17);
          *(_QWORD *)&v10[v45] = v39;
          swift_storeEnumTagMultiPayload();
          v32(v10);
          sub_213AD6270((uint64_t)v10, &qword_254D1A618);
          return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v44, v17);
        }
      }
      else
      {
        v43 = (uint64_t)v49;
        v48(v49, 1, 1, v17);
      }
      swift_bridgeObjectRelease();
      sub_213AD6270(v43, &qword_254D188E0);
    }
  }
  *(_OWORD *)v10 = xmmword_213B2EB80;
  v10[16] = 2;
  swift_storeEnumTagMultiPayload();
  v32(v10);
  v35 = (uint64_t)v10;
  return sub_213AD6270(v35, &qword_254D1A618);
}

uint64_t sub_213B26760()
{
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for MobileAssetManager()
{
  return objc_opt_self();
}

uint64_t sub_213B267AC()
{
  return objectdestroyTm_1();
}

void sub_213B267B4(uint64_t a1)
{
  uint64_t v1;

  sub_213B256DC(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_213B267D8()
{
  unint64_t result;

  result = qword_254D1AE90;
  if (!qword_254D1AE90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D1AE90);
  }
  return result;
}

uint64_t sub_213B26814()
{
  return objectdestroyTm_1();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_213B26854(uint64_t a1)
{
  uint64_t v1;

  return sub_213B26240(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_213B26860(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_213B2BDF8();
  if (qword_254D18450 != -1)
    swift_once();
  v6 = qword_254D1ADA8;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v9[4] = sub_213B269B4;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_213B1DC08;
  v9[3] = &block_descriptor_19;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_startCatalogDownload_options_then_, v5, v6, v8);
  _Block_release(v8);

}

uint64_t sub_213B26990()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213B269B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  __int128 v4;
  __int16 v5;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  if (a1)
  {
    v4 = xmmword_213B2EB80;
    v5 = 258;
  }
  else
  {
    v4 = 0uLL;
    v5 = 0;
  }
  return v2(&v4);
}

uint64_t HeadphoneHardwareModel.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213B26A4C + 4 * byte_213B32C80[*v0]))(0xD000000000000011, 0x8000000213B338E0);
}

uint64_t sub_213B26A4C()
{
  return 0x3173646F50726941;
}

uint64_t sub_213B26A68()
{
  return 0x3173646F50726941;
}

uint64_t sub_213B26A88()
{
  return 0x3173646F50726941;
}

uint64_t sub_213B26AA8()
{
  return 0x3173646F50726941;
}

uint64_t sub_213B26AC8()
{
  return 0x3173646F50726941;
}

uint64_t sub_213B26AE8()
{
  return 0x4D73646F50726941;
}

uint64_t sub_213B26B30()
{
  return 0x5073646F50726941;
}

uint64_t sub_213B26CC8()
{
  return 0x6165627265776F50;
}

unint64_t sub_213B26CF0()
{
  return 0xD000000000000010;
}

void HeadphoneHardwareModel.assetOverride.getter(char *a1@<X8>)
{
  _BYTE *v1;
  char v2;

  if (*v1 == 4)
    v2 = 3;
  else
    v2 = 25;
  *a1 = v2;
}

ProductKit::HeadphoneHardwareModel_optional __swiftcall HeadphoneHardwareModel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ProductKit::HeadphoneHardwareModel_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_213B2C494();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 7;
  switch(v3)
  {
    case 0:
      goto LABEL_9;
    case 1:
      v5 = 1;
      goto LABEL_9;
    case 2:
      v5 = 2;
      goto LABEL_9;
    case 3:
      v5 = 3;
      goto LABEL_9;
    case 4:
      v5 = 4;
      goto LABEL_9;
    case 5:
      v5 = 5;
      goto LABEL_9;
    case 6:
      v5 = 6;
LABEL_9:
      v6 = v5;
      break;
    case 7:
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    default:
      v6 = 25;
      break;
  }
  *v2 = v6;
  return result;
}

void *static HeadphoneHardwareModel.allCases.getter()
{
  return &unk_24D0BB230;
}

uint64_t sub_213B26E7C()
{
  return sub_213ADA050();
}

uint64_t sub_213B26E88()
{
  sub_213B2C518();
  HeadphoneHardwareModel.rawValue.getter();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

uint64_t sub_213B26EEC()
{
  HeadphoneHardwareModel.rawValue.getter();
  sub_213B2BE88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B26F3C()
{
  sub_213B2C518();
  HeadphoneHardwareModel.rawValue.getter();
  sub_213B2BE88();
  swift_bridgeObjectRelease();
  return sub_213B2C530();
}

ProductKit::HeadphoneHardwareModel_optional sub_213B26F9C(Swift::String *a1)
{
  return HeadphoneHardwareModel.init(rawValue:)(*a1);
}

uint64_t sub_213B26FA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HeadphoneHardwareModel.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213B26FCC(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0BB230;
}

uint64_t sub_213B26FDC()
{
  char *v0;

  return *(_QWORD *)&aB188[8 * *v0];
}

ProductKit::HeadphoneHardwareModel __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HeadphoneHardwareModel.init(productID:)(Swift::UInt32 productID)
{
  _BYTE *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = 25;
  v3 = &byte_24D0BB250;
  while (1)
  {
    v4 = *v3++;
    v5 = v4;
    if (dword_213B32FB0[v4] == productID)
      break;
    if ((v5 - 3) > 4)
    {
      if (productID == -1)
        break;
    }
    else if (dword_213B33014[(char)(v5 - 3)] == productID)
    {
      break;
    }
    if (!--v2)
    {
      sub_213AD62AC();
      swift_allocError();
      *(_OWORD *)v6 = xmmword_213B33030;
      *(_BYTE *)(v6 + 16) = 2;
      LOBYTE(productID) = swift_willThrow();
      return (char)productID;
    }
  }
  *v1 = v5;
  return (char)productID;
}

ProductKit::HeadphoneHardwareModel __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HeadphoneHardwareModel.init(codename:)(Swift::String codename)
{
  _BYTE *v1;
  void *object;
  uint64_t v3;
  uint64_t countAndFlagsBits;
  char *v5;
  int v6;
  int v7;
  void *v8;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  uint64_t v15;
  ProductKit::HeadphoneHardwareModel result;
  _BYTE *v17;

  object = codename._object;
  v17 = v1;
  v3 = 25;
  countAndFlagsBits = codename._countAndFlagsBits;
  v5 = &byte_24D0BB250;
  while (1)
  {
    v7 = *v5++;
    v6 = v7;
    if (sub_213B26FDC() == countAndFlagsBits && v8 == object)
    {
      result = swift_bridgeObjectRelease_n();
      goto LABEL_24;
    }
    v10 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      break;
    if (v6 == 7)
      v11 = 0x6338393662;
    else
      v11 = 808464482;
    if (v6 == 7)
      v12 = 0xE500000000000000;
    else
      v12 = 0xE400000000000000;
    if (v11 == countAndFlagsBits && v12 == (_QWORD)object)
    {
      swift_bridgeObjectRelease();
      break;
    }
    v14 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      break;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      sub_213AD62AC();
      swift_allocError();
      *(_OWORD *)v15 = xmmword_213B33030;
      *(_BYTE *)(v15 + 16) = 2;
      return swift_willThrow();
    }
  }
  result = swift_bridgeObjectRelease();
LABEL_24:
  *v17 = v6;
  return result;
}

unint64_t sub_213B27250()
{
  unint64_t result;

  result = qword_254D1AEB8;
  if (!qword_254D1AEB8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for HeadphoneHardwareModel, &type metadata for HeadphoneHardwareModel);
    atomic_store(result, (unint64_t *)&qword_254D1AEB8);
  }
  return result;
}

unint64_t sub_213B27298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D1AEC0;
  if (!qword_254D1AEC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D1AEC8);
    result = MEMORY[0x2199BD010](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D1AEC0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneHardwareModel(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneHardwareModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_213B273C0 + 4 * byte_213B32CB7[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_213B273F4 + 4 * byte_213B32CB2[v4]))();
}

uint64_t sub_213B273F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B273FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B27404);
  return result;
}

uint64_t sub_213B27410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B27418);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_213B2741C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B27424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneHardwareModel()
{
  return &type metadata for HeadphoneHardwareModel;
}

_QWORD *sub_213B27440(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213B2BC90();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(_QWORD *)v13 = *(_QWORD *)v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_213B274F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213B2BC90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_213B27540(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213B2BC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213B275CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v6 = sub_213B2BC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  return a1;
}

uint64_t sub_213B27670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_213B2BC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  return a1;
}

uint64_t sub_213B276F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_213B2BC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  return a1;
}

uint64_t sub_213B27780()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B2778C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213B2BC90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_213B2780C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B27818(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213B2BC90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for MobileAssetRequest()
{
  uint64_t result;

  result = qword_254D1AF28;
  if (!qword_254D1AF28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213B278D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213B2BC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213B27954()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t result;

  v1 = v0;
  v2 = objc_allocWithZone(MEMORY[0x24BE66BB0]);
  v3 = (void *)sub_213B2BDF8();
  v4 = objc_msgSend(v2, sel_initWithType_, v3);

  if (v4)
  {
    v5 = (void *)sub_213B2BDF8();
    v6 = type metadata accessor for MobileAssetRequest();
    v7 = (void *)sub_213B2BDF8();
    objc_msgSend(v4, sel_addKeyValuePair_with_, v5, v7);

    if ((*(_BYTE *)(v1 + *(int *)(v6 + 28) + 8) & 1) == 0)
    {
      v8 = (void *)sub_213B2BDF8();
      sub_213B2C458();
      v9 = (void *)sub_213B2BDF8();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_addKeyValuePair_with_, v8, v9);

    }
    if ((*(_BYTE *)(v1 + *(int *)(v6 + 20)) & 1) == 0)
      objc_msgSend(v4, sel_returnTypes_, 3);
    return (uint64_t)v4;
  }
  else
  {
    result = sub_213B2C38C();
    __break(1u);
  }
  return result;
}

uint64_t sub_213B27B28()
{
  void *v0;
  id v1;
  id v2;

  sub_213B2C2E4();
  sub_213B2BEAC();
  sub_213B2BC90();
  sub_213B107D8();
  sub_213B2C458();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  type metadata accessor for MobileAssetRequest();
  sub_213B2C458();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  v0 = (void *)sub_213B27954();
  v1 = objc_msgSend(v0, sel_queryParams);

  if (!v1)
  {
    sub_213B27D58();
    v1 = (id)MEMORY[0x2199BC68C](MEMORY[0x24BEE4AF8]);
  }
  v2 = objc_msgSend(v1, sel_description);
  sub_213B2BE1C();

  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  return 0;
}

unint64_t sub_213B27D58()
{
  unint64_t result;

  result = qword_254D1AF68;
  if (!qword_254D1AF68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D1AF68);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MobileAssetRequest.QueryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213B27DE0 + 4 * byte_213B33045[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213B27E14 + 4 * byte_213B33040[v4]))();
}

uint64_t sub_213B27E14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B27E1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B27E24);
  return result;
}

uint64_t sub_213B27E30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B27E38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213B27E3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B27E44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileAssetRequest.QueryType()
{
  return &type metadata for MobileAssetRequest.QueryType;
}

unint64_t sub_213B27E64()
{
  unint64_t result;

  result = qword_254D1AF70;
  if (!qword_254D1AF70)
  {
    result = MEMORY[0x2199BD010](&unk_213B33124, &type metadata for MobileAssetRequest.QueryType);
    atomic_store(result, (unint64_t *)&qword_254D1AF70);
  }
  return result;
}

uint64_t sub_213B27EA8()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v19 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_213B28E98(0, v2, 0);
    v3 = v19;
    v4 = v1 + 40;
    do
    {
      v5 = sub_213B2C1D0();
      v7 = v6;
      v18 = v8;
      v9 = sub_213B2C1D0();
      v11 = v10;
      v13 = v12;
      v15 = *(_QWORD *)(v19 + 16);
      v14 = *(_QWORD *)(v19 + 24);
      if (v15 >= v14 >> 1)
        sub_213B28E98(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v19 + 16) = v15 + 1;
      v16 = (_QWORD *)(v19 + 48 * v15);
      v16[4] = v5;
      v16[5] = v7;
      v16[6] = v18;
      v16[7] = v9;
      v16[8] = v11;
      v16[9] = v13;
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_213B27FDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = sub_213B2BBDC();
  v6 = v5;
  if (qword_254D18460 != -1)
    swift_once();
  sub_213B2966C();
  sub_213B2BAB0();
  v7 = sub_213B2BBD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  result = sub_213AD5374(v4, v6);
  *a2 = v9;
  return result;
}

uint64_t sub_213B282A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v0, qword_254D1AF78);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254D1AF78);
  if (qword_254D18478 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254D22E80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_213B28334()
{
  uint64_t result;

  sub_213B2BAC8();
  swift_allocObject();
  result = sub_213B2BABC();
  qword_254D1AF90 = result;
  return result;
}

double VideoViewFeatureTimings.Section.startTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double VideoViewFeatureTimings.Section.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

ProductKit::VideoViewFeatureTimings::Section __swiftcall VideoViewFeatureTimings.Section.init(startTime:duration:)(Swift::Double startTime, Swift::Double duration)
{
  Swift::Double *v2;
  ProductKit::VideoViewFeatureTimings::Section result;

  *v2 = startTime;
  v2[1] = duration;
  result.duration = duration;
  result.startTime = startTime;
  return result;
}

uint64_t sub_213B28388(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F697461727564;
  else
    return 0x6D69547472617473;
}

uint64_t sub_213B283C4()
{
  char *v0;

  return sub_213B28388(*v0);
}

uint64_t sub_213B283CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213B294E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213B283F0()
{
  sub_213B2855C();
  return sub_213B2C560();
}

uint64_t sub_213B28418()
{
  sub_213B2855C();
  return sub_213B2C56C();
}

uint64_t VideoViewFeatureTimings.Section.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AF98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B2855C();
  sub_213B2C554();
  v8[15] = 0;
  sub_213B2C434();
  if (!v1)
  {
    v8[14] = 1;
    sub_213B2C434();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_213B2855C()
{
  unint64_t result;

  result = qword_254D1AFA0;
  if (!qword_254D1AFA0)
  {
    result = MEMORY[0x2199BD010](&unk_213B333FC, &type metadata for VideoViewFeatureTimings.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1AFA0);
  }
  return result;
}

uint64_t VideoViewFeatureTimings.Section.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AFA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B2855C();
  sub_213B2C548();
  if (!v2)
  {
    v16 = 0;
    sub_213B2C404();
    v10 = v9;
    v15 = 1;
    sub_213B2C404();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_213B286F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return VideoViewFeatureTimings.Section.init(from:)(a1, a2);
}

uint64_t sub_213B28704(_QWORD *a1)
{
  return VideoViewFeatureTimings.Section.encode(to:)(a1);
}

uint64_t VideoViewFeatureTimings.sections.getter()
{
  return swift_bridgeObjectRetain();
}

ProductKit::VideoViewFeatureTimings __swiftcall VideoViewFeatureTimings.init(sections:)(ProductKit::VideoViewFeatureTimings sections)
{
  ProductKit::VideoViewFeatureTimings *v1;

  v1->sections._rawValue = sections.sections._rawValue;
  return sections;
}

uint64_t sub_213B2872C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213B295D0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_213B28754()
{
  sub_213B288C4();
  return sub_213B2C560();
}

uint64_t sub_213B2877C()
{
  sub_213B288C4();
  return sub_213B2C56C();
}

uint64_t VideoViewFeatureTimings.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AFB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B288C4();
  sub_213B2C554();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AFC0);
  sub_213B28A8C(&qword_254D1AFC8, (uint64_t (*)(void))sub_213B28908, MEMORY[0x24BEE12A0]);
  sub_213B2C44C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_213B288C4()
{
  unint64_t result;

  result = qword_254D1AFB8;
  if (!qword_254D1AFB8)
  {
    result = MEMORY[0x2199BD010](&unk_213B333AC, &type metadata for VideoViewFeatureTimings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1AFB8);
  }
  return result;
}

unint64_t sub_213B28908()
{
  unint64_t result;

  result = qword_254D1AFD0;
  if (!qword_254D1AFD0)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for VideoViewFeatureTimings.Section, &type metadata for VideoViewFeatureTimings.Section);
    atomic_store(result, (unint64_t *)&qword_254D1AFD0);
  }
  return result;
}

uint64_t VideoViewFeatureTimings.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AFD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_213B288C4();
  sub_213B2C548();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AFC0);
    sub_213B28A8C(&qword_254D1AFE0, (uint64_t (*)(void))sub_213B28AF4, MEMORY[0x24BEE12D0]);
    sub_213B2C41C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_213B28A8C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D1AFC0);
    v8 = a2();
    result = MEMORY[0x2199BD010](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213B28AF4()
{
  unint64_t result;

  result = qword_254D1AFE8;
  if (!qword_254D1AFE8)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for VideoViewFeatureTimings.Section, &type metadata for VideoViewFeatureTimings.Section);
    atomic_store(result, (unint64_t *)&qword_254D1AFE8);
  }
  return result;
}

uint64_t sub_213B28B38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return VideoViewFeatureTimings.init(from:)(a1, a2);
}

uint64_t sub_213B28B4C(_QWORD *a1)
{
  return VideoViewFeatureTimings.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for VideoViewFeatureTimings()
{
  return &type metadata for VideoViewFeatureTimings;
}

ValueMetadata *type metadata accessor for VideoViewFeatureTimings.Section()
{
  return &type metadata for VideoViewFeatureTimings.Section;
}

uint64_t storeEnumTagSinglePayload for VideoViewFeatureTimings.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213B28BC0 + 4 * byte_213B33150[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213B28BE0 + 4 * byte_213B33155[v4]))();
}

_BYTE *sub_213B28BC0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213B28BE0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B28BE8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B28BF0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213B28BF8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213B28C00(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for VideoViewFeatureTimings.CodingKeys()
{
  return &type metadata for VideoViewFeatureTimings.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VideoViewFeatureTimings.Section.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213B28C68 + 4 * byte_213B3315F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213B28C9C + 4 * byte_213B3315A[v4]))();
}

uint64_t sub_213B28C9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B28CA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213B28CACLL);
  return result;
}

uint64_t sub_213B28CB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213B28CC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213B28CC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213B28CCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoViewFeatureTimings.Section.CodingKeys()
{
  return &type metadata for VideoViewFeatureTimings.Section.CodingKeys;
}

unint64_t sub_213B28CEC()
{
  unint64_t result;

  result = qword_254D1AFF0;
  if (!qword_254D1AFF0)
  {
    result = MEMORY[0x2199BD010](&unk_213B332CC, &type metadata for VideoViewFeatureTimings.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1AFF0);
  }
  return result;
}

unint64_t sub_213B28D34()
{
  unint64_t result;

  result = qword_254D1AFF8;
  if (!qword_254D1AFF8)
  {
    result = MEMORY[0x2199BD010](&unk_213B33384, &type metadata for VideoViewFeatureTimings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1AFF8);
  }
  return result;
}

unint64_t sub_213B28D7C()
{
  unint64_t result;

  result = qword_254D1B000;
  if (!qword_254D1B000)
  {
    result = MEMORY[0x2199BD010](&unk_213B332F4, &type metadata for VideoViewFeatureTimings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1B000);
  }
  return result;
}

unint64_t sub_213B28DC4()
{
  unint64_t result;

  result = qword_254D1B008;
  if (!qword_254D1B008)
  {
    result = MEMORY[0x2199BD010](&unk_213B3331C, &type metadata for VideoViewFeatureTimings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1B008);
  }
  return result;
}

unint64_t sub_213B28E0C()
{
  unint64_t result;

  result = qword_254D1B010;
  if (!qword_254D1B010)
  {
    result = MEMORY[0x2199BD010](&unk_213B3323C, &type metadata for VideoViewFeatureTimings.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1B010);
  }
  return result;
}

unint64_t sub_213B28E54()
{
  unint64_t result;

  result = qword_254D1B018;
  if (!qword_254D1B018)
  {
    result = MEMORY[0x2199BD010](&unk_213B33264, &type metadata for VideoViewFeatureTimings.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D1B018);
  }
  return result;
}

uint64_t sub_213B28E98(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213B28F08(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213B28EB4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213B29080(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213B28ED0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213B291E8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213B28EEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213B29340(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_213B28F08(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1B020);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    memcpy(v12, v13, 48 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213B29080(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1B038);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213B291E8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1B028);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8])
      memmove(v13, v14, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213B29340(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1B040);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D1B048);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213B2C3C8();
  __break(1u);
  return result;
}

uint64_t sub_213B294E0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v3 || (sub_213B2C47C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213B295D0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_213B2C47C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_213B29654()
{
  return 0x736E6F6974636573;
}

unint64_t sub_213B2966C()
{
  unint64_t result;

  result = qword_254D1B030;
  if (!qword_254D1B030)
  {
    result = MEMORY[0x2199BD010](&protocol conformance descriptor for VideoViewFeatureTimings, &type metadata for VideoViewFeatureTimings);
    atomic_store(result, (unint64_t *)&qword_254D1B030);
  }
  return result;
}

CGImageRef sub_213B296B0(uint64_t a1)
{
  uint64_t v1;
  const __CFData *v2;
  CGImageSource *v3;
  CGImageRef ImageAtIndex;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t inited;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v38;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = (const __CFData *)sub_213B2BC24();
  v3 = CGImageSourceCreateWithData(v2, 0);

  if (!v3)
    return 0;
  if ((uint64_t)CGImageSourceGetCount(v3) < 1)
    goto LABEL_12;
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v3, 0, 0);

  if (ImageAtIndex && v1 == 1)
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, ImageAtIndex);
    v6 = (void *)sub_213B2BDF8();
    v7 = objc_msgSend((id)objc_opt_self(), sel_kernelWithString_, v6);

    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF690]), sel_initWithX_Y_Z_, 0.803921569, 0.807843137, 0.819607843);
    if (v7)
    {
      v9 = v7;
      objc_msgSend(v5, sel_extent);
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D1AA90);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_213B2E300;
      *(_QWORD *)(v18 + 56) = sub_213AD63B4(0, &qword_254D1B050);
      *(_QWORD *)(v18 + 32) = v5;
      *(_QWORD *)(v18 + 88) = sub_213AD63B4(0, &qword_254D1B058);
      *(_QWORD *)(v18 + 64) = v8;
      v19 = v5;
      v38 = v8;
      v20 = (void *)sub_213B2BF30();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend(v9, sel_applyWithExtent_arguments_, v20, v11, v13, v15, v17);

      if (v21)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D1B060);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_213B2E300;
        v23 = (void *)*MEMORY[0x24BDBF818];
        *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBF818];
        v24 = MEMORY[0x24BEE1328];
        *(_BYTE *)(inited + 40) = 0;
        v25 = (void *)*MEMORY[0x24BDBF858];
        *(_QWORD *)(inited + 64) = v24;
        *(_QWORD *)(inited + 72) = v25;
        v26 = objc_allocWithZone(MEMORY[0x24BDBCEF8]);
        v27 = v23;
        v28 = v25;
        v29 = objc_msgSend(v26, sel_init);
        *(_QWORD *)(inited + 104) = sub_213AD63B4(0, qword_254D1B068);
        *(_QWORD *)(inited + 80) = v29;
        sub_213AD125C(inited);
        v30 = objc_allocWithZone(MEMORY[0x24BDBF648]);
        type metadata accessor for CIContextOption(0);
        sub_213B29B2C();
        v31 = (void *)sub_213B2BDA4();
        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v30, sel_initWithOptions_, v31);

        objc_msgSend(v19, sel_extent);
        v33 = objc_msgSend(v32, sel_createCGImage_fromRect_, v21);

        return (CGImageRef)v33;
      }
    }
    if (qword_254D18488 != -1)
      swift_once();
    v34 = sub_213B2BCF0();
    __swift_project_value_buffer(v34, (uint64_t)qword_254D22EB0);
    v3 = (CGImageSource *)sub_213B2BCD8();
    v35 = sub_213B2C158();
    if (!os_log_type_enabled((os_log_t)v3, v35))
    {

      return 0;
    }
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    _os_log_impl(&dword_213AC8000, (os_log_t)v3, v35, "Failed to generate image from kernel", v36, 2u);
    MEMORY[0x2199BD0E8](v36, -1, -1);

LABEL_12:
    return 0;
  }
  return ImageAtIndex;
}

unint64_t sub_213B29B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D18608;
  if (!qword_254D18608)
  {
    type metadata accessor for CIContextOption(255);
    result = MEMORY[0x2199BD010](&unk_213B2E1A0, v1);
    atomic_store(result, (unint64_t *)&qword_254D18608);
  }
  return result;
}

uint64_t sub_213B29B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v12 = sub_213B2C53C();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a3 - 8) + 32))((char *)&v17 - v14, a2, a3, v13);
  swift_storeEnumTagMultiPayload();
  return sub_213B29C60(a1, (uint64_t)v15, a3, a4, a5, a6);
}

uint64_t sub_213B29C44(uint64_t a1)
{
  uint64_t *v1;

  return sub_213B29CE4((uint64_t)v1 + *(int *)(a1 + 44), *v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_213B29C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t v8;

  *a6 = a1;
  v7 = (char *)a6 + *(int *)(type metadata accessor for UnsafeResumption(0, a3, a4, a5) + 44);
  v8 = sub_213B2C53C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t sub_213B29CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_213B2C53C();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v24 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))((char *)&v24 - v17, a1, v15, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v20(v14, v18, a4);
    swift_allocError();
    v20(v21, v14, a4);
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v23(v9, v18, a3);
    v23(*(char **)(*(_QWORD *)(v25 + 64) + 40), v9, a3);
    return swift_continuation_throwingResume();
  }
}

uint64_t type metadata accessor for UnsafeResumption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeResumption);
}

uint64_t sub_213B29E84()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213B2C53C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_213B29F00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80));
  if (*(_QWORD *)(v5 + 64) <= *(_QWORD *)(v4 + 64))
    v7 = *(_QWORD *)(v4 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || v7 + ((v6 + 8) & (unint64_t)~v6) + 1 > 0x18)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v11 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v12 = *(unsigned __int8 *)((((unint64_t)a2 + v6 + 8) & ~v6) + v7);
    if (v12 >= 2)
    {
      if (v7 <= 3)
        v13 = v7;
      else
        v13 = 4;
      __asm { BR              X15 }
    }
    if (v12 == 1)
    {
      (*(void (**)(uint64_t))(v5 + 16))(v11);
      *(_BYTE *)(v11 + v7) = 1;
    }
    else
    {
      (*(void (**)(uint64_t))(v4 + 16))(v11);
      *(_BYTE *)(v11 + v7) = 0;
    }
  }
  return v3;
}

uint64_t sub_213B2A06C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80) | *(unsigned __int8 *)(v3 + 80);
  v6 = (a1 + v5 + 8) & ~v5;
  v7 = *(_QWORD *)(v3 + 64);
  if (*(_QWORD *)(v4 + 64) > v7)
    v7 = *(_QWORD *)(v4 + 64);
  v8 = *(unsigned __int8 *)(v6 + v7);
  if (v8 < 2)
  {
    if (v8 == 1)
      v3 = *(_QWORD *)(v2 - 8);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    return ((uint64_t (*)(void))((char *)&loc_213B2A0D0 + 4 * byte_213B33475[v9]))();
  }
}

_QWORD *sub_213B2A124(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80) | *(unsigned __int8 *)(v5 + 80);
  v8 = v7 + 8;
  v9 = ~v7;
  v10 = ((unint64_t)a2 + v7 + 8) & ~v7;
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v11 = *(_QWORD *)(v5 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64);
  v12 = *(unsigned __int8 *)(v10 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X0 }
  }
  v14 = ((unint64_t)a1 + v8) & v9;
  v15 = v12 == 1;
  if (v12 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(unint64_t))(v5 + 16))(((unint64_t)a1 + v8) & v9);
  *(_BYTE *)(v14 + v11) = v15;
  return a1;
}

_QWORD *sub_213B2A224(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80) | *(unsigned __int8 *)(v6 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  if (v9 != v10)
  {
    if (*(_QWORD *)(v7 + 64) <= *(_QWORD *)(v6 + 64))
      v11 = *(_QWORD *)(v6 + 64);
    else
      v11 = *(_QWORD *)(v7 + 64);
    v12 = *(unsigned __int8 *)(v9 + v11);
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
      v14 = *(_QWORD *)(v5 - 8);
    else
      v14 = *(_QWORD *)(v4 - 8);
    if (v12 == 1)
      v15 = *(_QWORD *)(a3 + 24);
    else
      v15 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v15);
    v16 = *(unsigned __int8 *)(v10 + v11);
    if (v16 >= 2)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    v18 = v16 == 1;
    if (v16 == 1)
      v19 = v7;
    else
      v19 = v6;
    if (v16 == 1)
      v20 = v5;
    else
      v20 = v4;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v9, v10, v20);
    *(_BYTE *)(v9 + v11) = v18;
  }
  return a1;
}

_QWORD *sub_213B2A3CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80) | *(unsigned __int8 *)(v5 + 80);
  v8 = v7 + 8;
  v9 = ~v7;
  v10 = ((unint64_t)a2 + v7 + 8) & ~v7;
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v11 = *(_QWORD *)(v5 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64);
  v12 = *(unsigned __int8 *)(v10 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X0 }
  }
  v14 = ((unint64_t)a1 + v8) & v9;
  v15 = v12 == 1;
  if (v12 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(unint64_t))(v5 + 32))(((unint64_t)a1 + v8) & v9);
  *(_BYTE *)(v14 + v11) = v15;
  return a1;
}

_QWORD *sub_213B2A4CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80) | *(unsigned __int8 *)(v6 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  if (v9 != v10)
  {
    if (*(_QWORD *)(v7 + 64) <= *(_QWORD *)(v6 + 64))
      v11 = *(_QWORD *)(v6 + 64);
    else
      v11 = *(_QWORD *)(v7 + 64);
    v12 = *(unsigned __int8 *)(v9 + v11);
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
      v14 = *(_QWORD *)(v5 - 8);
    else
      v14 = *(_QWORD *)(v4 - 8);
    if (v12 == 1)
      v15 = *(_QWORD *)(a3 + 24);
    else
      v15 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v15);
    v16 = *(unsigned __int8 *)(v10 + v11);
    if (v16 >= 2)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    v18 = v16 == 1;
    if (v16 == 1)
      v19 = v7;
    else
      v19 = v6;
    if (v16 == 1)
      v20 = v5;
    else
      v20 = v4;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v9, v10, v20);
    *(_BYTE *)(v9 + v11) = v18;
  }
  return a1;
}

uint64_t sub_213B2A674(_QWORD *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v5 + 64) > v4)
    v4 = *(_QWORD *)(v5 + 64);
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_5;
  v8 = *(unsigned __int8 *)(v5 + 80) | *(unsigned __int8 *)(v3 + 80);
  v9 = v4 + ((v8 + 8) & ~v8) + 1;
  v10 = 8 * v9;
  if (v9 > 3)
    goto LABEL_10;
  v12 = (a2 - 0x7FFFFFFF + ~(-1 << v10)) >> v10;
  if (v12 > 0xFFFE)
  {
    v11 = *(_DWORD *)((char *)a1 + v9);
    if (!v11)
      goto LABEL_5;
    goto LABEL_19;
  }
  if (v12 <= 0xFE)
  {
    if (!v12)
      goto LABEL_5;
LABEL_10:
    v11 = *((unsigned __int8 *)a1 + v9);
    if (!*((_BYTE *)a1 + v9))
      goto LABEL_5;
    goto LABEL_19;
  }
  v11 = *(unsigned __int16 *)((char *)a1 + v9);
  if (!*(_WORD *)((char *)a1 + v9))
  {
LABEL_5:
    v6 = *a1;
    if (*a1 >= 0xFFFFFFFFuLL)
      LODWORD(v6) = -1;
    return (v6 + 1);
  }
LABEL_19:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return v13 ^ 0x80000000;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_213B2A774 + 4 * byte_213B33498[(v9 - 1)]))();
}

void sub_213B2A7A4(_WORD *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_QWORD *)(v7 + 64) > v6)
    v6 = *(_QWORD *)(v7 + 64);
  v8 = *(unsigned __int8 *)(v7 + 80) | *(unsigned __int8 *)(v5 + 80);
  v9 = v6 + ((v8 + 8) & ~v8) + 1;
  if (a3 < 0)
  {
    if (v9 <= 3)
    {
      v11 = (a3 - 0x7FFFFFFF + ~(-1 << (8 * v9))) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        v10 = 4u;
        if (a2 < 0)
          goto LABEL_14;
      }
      else
      {
        if (v11 >= 0xFF)
          v10 = 2;
        else
          v10 = v11 != 0;
        if (a2 < 0)
          goto LABEL_14;
      }
    }
    else
    {
      v10 = 1u;
      if (a2 < 0)
      {
LABEL_14:
        v12 = a2 ^ 0x80000000;
        if (v9 < 4)
        {
          if ((_DWORD)v9)
          {
            v13 = a2 & ~(-1 << (8 * v9));
            bzero(a1, v9);
            if ((_DWORD)v9 == 3)
            {
              *a1 = v13;
              *((_BYTE *)a1 + 2) = BYTE2(v13);
            }
            else if ((_DWORD)v9 == 2)
            {
              *a1 = v13;
            }
            else
            {
              *(_BYTE *)a1 = v13;
            }
          }
        }
        else
        {
          bzero(a1, v9);
          *(_DWORD *)a1 = v12;
        }
        __asm { BR              X10 }
      }
    }
  }
  else
  {
    v10 = 0;
    if (a2 < 0)
      goto LABEL_14;
  }
  __asm { BR              X10 }
}

void sub_213B2A950()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x213B2A900);
}

void sub_213B2A958()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x213B2A900);
}

void sub_213B2A960()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x213B2A900);
}

uint64_t sub_213B2A96C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v4[6] = a2;
  v4[7] = v3;
  v4[5] = a1;
  v7 = (uint64_t (*)(void))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  v4[8] = v5;
  *v5 = v4;
  v5[1] = sub_213B2A9D0;
  return v7();
}

uint64_t sub_213B2A9D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B2AA3C(uint64_t a1)
{
  return sub_213B2AAE8(a1, qword_254D22E50);
}

uint64_t sub_213B2AA64(uint64_t a1)
{
  return sub_213B2AAE8(a1, qword_254D22E68);
}

uint64_t sub_213B2AA84(uint64_t a1)
{
  return sub_213B2AAE8(a1, qword_254D22E80);
}

uint64_t sub_213B2AA9C(uint64_t a1)
{
  return sub_213B2AAE8(a1, qword_254D22E98);
}

uint64_t sub_213B2AABC(uint64_t a1)
{
  return sub_213B2AAE8(a1, qword_254D22EB0);
}

uint64_t sub_213B2AAE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_213B2BCF0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_213B2BCE4();
}

uint64_t sub_213B2AB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  return swift_task_switch();
}

uint64_t sub_213B2AB7C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *);

  v1 = v0[12];
  v2 = *(int **)(v0[10] + 352);
  v0[2] = v0[11];
  v0[3] = v1;
  v5 = (uint64_t (*)(_QWORD *))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_213B2ABEC;
  return v5(v0 + 2);
}

uint64_t sub_213B2ABEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_213B2AC50()
{
  return swift_task_switch();
}

uint64_t sub_213B2AC64()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 112);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16 = v15;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_213AE1780(v8, v7, &v16);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 40) = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    *(_QWORD *)(v0 + 48) = sub_213AE1780(v11, v12, &v16);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v4, v5, "### %s ERROR -- %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v15, -1, -1);
    MEMORY[0x2199BD0E8](v9, -1, -1);

  }
  else
  {
    v13 = *(void **)(v0 + 112);

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B2AE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v10;

  v6[6] = a2;
  v6[7] = a3;
  v6[5] = a1;
  v10 = (_QWORD *)swift_task_alloc();
  v6[8] = v10;
  *v10 = v6;
  v10[1] = sub_213B2AEF4;
  return sub_213AE9378(a4, a5, a6);
}

uint64_t sub_213B2AEF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_213B2AF60()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 72);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_213B2BCD8();
  v5 = sub_213B2C158();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16 = v15;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_213AE1780(v8, v7, &v16);
    sub_213B2C254();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v6;
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D190B0);
    v11 = sub_213B2BE64();
    *(_QWORD *)(v0 + 32) = sub_213AE1780(v11, v12, &v16);
    sub_213B2C254();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_213AC8000, v4, v5, "### %s ERROR -- %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199BD0E8](v15, -1, -1);
    MEMORY[0x2199BD0E8](v9, -1, -1);

  }
  else
  {
    v13 = *(void **)(v0 + 72);

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_213B2B188()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213B2B1CC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DictionaryCRUD(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DictionaryCRUD);
}

uint64_t sub_213B2B1FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B2B208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_213B2B244()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213B2B250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_213B2BBD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MobileAssetResult()
{
  uint64_t result;

  result = qword_254D1B218;
  if (!qword_254D1B218)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213B2B2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for MobileAssetResult();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_allocWithZone(MEMORY[0x24BDD1488]);
  v5 = (void *)sub_213B2BB7C();
  v6 = objc_msgSend(v4, sel_initWithURL_, v5);

  if (v6)
    return (uint64_t)v6;
  sub_213B2B4CC(v0, (uint64_t)v3);
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  v8 = 0xD000000000000013;
  v9 = 0x8000000213B35DC0;
  sub_213B2BBD0();
  sub_213AE1D7C();
  sub_213B2C458();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  result = sub_213B2C38C();
  __break(1u);
  return result;
}

unint64_t sub_213B2B41C()
{
  sub_213B2C2E4();
  swift_bridgeObjectRelease();
  sub_213B2BBD0();
  sub_213AE1D7C();
  sub_213B2C458();
  sub_213B2BEAC();
  swift_bridgeObjectRelease();
  sub_213B2BEAC();
  return 0xD000000000000012;
}

uint64_t sub_213B2B4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileAssetResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213B2B510()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_254D22E28 == -1)
  {
    if (qword_254D22E30)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_254D22E28, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_254D22E30)
      return _availability_version_check();
  }
  if (qword_254D22E20 == -1)
  {
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_254D22E20, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_254D22E14 > a3)
    return 1;
  return dword_254D22E14 >= a3 && dword_254D22E18 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v1 = (uint64_t (*)(void))qword_254D22E30;
  if (qword_254D22E30)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x24BDAC970])
    {
      qword_254D22E30 = (uint64_t)MEMORY[0x24BDAC970];
      v1 = MEMORY[0x24BDAC970];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x2199BCB6C](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_254D22E14, &dword_254D22E18);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_213B2BA08()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_213B2BA14()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_213B2BA20()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_213B2BA2C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_213B2BA38()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_213B2BA44()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_213B2BA50()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_213B2BA5C()
{
  return MEMORY[0x24BDCB910]();
}

uint64_t sub_213B2BA68()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_213B2BA74()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_213B2BA80()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_213B2BA8C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_213B2BA98()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_213B2BAA4()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_213B2BAB0()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_213B2BABC()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_213B2BAC8()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_213B2BAD4()
{
  return MEMORY[0x24BDCD258]();
}

uint64_t sub_213B2BAE0()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_213B2BAEC()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_213B2BAF8()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_213B2BB04()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_213B2BB10()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_213B2BB1C()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_213B2BB28()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_213B2BB34()
{
  return MEMORY[0x24BDCD2C0]();
}

uint64_t sub_213B2BB40()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_213B2BB4C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_213B2BB58()
{
  return MEMORY[0x24BDCD5A8]();
}

uint64_t sub_213B2BB64()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_213B2BB70()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_213B2BB7C()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_213B2BB88()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_213B2BB94()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_213B2BBA0()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_213B2BBAC()
{
  return MEMORY[0x24BDCD9D8]();
}

uint64_t sub_213B2BBB8()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_213B2BBC4()
{
  return MEMORY[0x24BDCDA48]();
}

uint64_t sub_213B2BBD0()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_213B2BBDC()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_213B2BBE8()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_213B2BBF4()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_213B2BC00()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_213B2BC0C()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_213B2BC18()
{
  return MEMORY[0x24BDCDC58]();
}

uint64_t sub_213B2BC24()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_213B2BC30()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_213B2BC3C()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_213B2BC48()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_213B2BC54()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_213B2BC60()
{
  return MEMORY[0x24BDCE8B0]();
}

uint64_t sub_213B2BC6C()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_213B2BC78()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_213B2BC84()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_213B2BC90()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_213B2BC9C()
{
  return MEMORY[0x24BDCF568]();
}

uint64_t sub_213B2BCA8()
{
  return MEMORY[0x24BDCF5D8]();
}

uint64_t sub_213B2BCB4()
{
  return MEMORY[0x24BDCF5F8]();
}

uint64_t sub_213B2BCC0()
{
  return MEMORY[0x24BDCF610]();
}

uint64_t sub_213B2BCCC()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_213B2BCD8()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_213B2BCE4()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_213B2BCF0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_213B2BCFC()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_213B2BD08()
{
  return MEMORY[0x24BDF4130]();
}

uint64_t sub_213B2BD14()
{
  return MEMORY[0x24BDC61A8]();
}

uint64_t sub_213B2BD20()
{
  return MEMORY[0x24BDC63A0]();
}

uint64_t sub_213B2BD2C()
{
  return MEMORY[0x24BDC63B0]();
}

uint64_t sub_213B2BD38()
{
  return MEMORY[0x24BDC63E0]();
}

uint64_t sub_213B2BD44()
{
  return MEMORY[0x24BDC64E8]();
}

uint64_t sub_213B2BD50()
{
  return MEMORY[0x24BDC6508]();
}

uint64_t sub_213B2BD5C()
{
  return MEMORY[0x24BDC6510]();
}

uint64_t sub_213B2BD68()
{
  return MEMORY[0x24BDC6580]();
}

uint64_t sub_213B2BD74()
{
  return MEMORY[0x24BDC6628]();
}

uint64_t sub_213B2BD80()
{
  return MEMORY[0x24BDC6638]();
}

uint64_t sub_213B2BD8C()
{
  return MEMORY[0x24BDC66C8]();
}

uint64_t sub_213B2BD98()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_213B2BDA4()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_213B2BDB0()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_213B2BDBC()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_213B2BDC8()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_213B2BDD4()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_213B2BDE0()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_213B2BDEC()
{
  return MEMORY[0x24BDCF878]();
}

uint64_t sub_213B2BDF8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_213B2BE04()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_213B2BE10()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_213B2BE1C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_213B2BE28()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_213B2BE34()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_213B2BE40()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_213B2BE4C()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_213B2BE58()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_213B2BE64()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_213B2BE70()
{
  return MEMORY[0x24BEE0A20]();
}

uint64_t sub_213B2BE7C()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_213B2BE88()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_213B2BE94()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_213B2BEA0()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_213B2BEAC()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_213B2BEB8()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_213B2BEC4()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_213B2BED0()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_213B2BEDC()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_213B2BEE8()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_213B2BEF4()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_213B2BF00()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_213B2BF0C()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_213B2BF18()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_213B2BF24()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_213B2BF30()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_213B2BF3C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_213B2BF48()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_213B2BF54()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_213B2BF60()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_213B2BF6C()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_213B2BF78()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_213B2BF84()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_213B2BF90()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_213B2BF9C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_213B2BFA8()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_213B2BFB4()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_213B2BFC0()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_213B2BFCC()
{
  return MEMORY[0x24BEE1228]();
}

uint64_t sub_213B2BFD8()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_213B2BFE4()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_213B2BFF0()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_213B2BFFC()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_213B2C008()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_213B2C014()
{
  return MEMORY[0x24BEE6908]();
}

uint64_t sub_213B2C020()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_213B2C02C()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_213B2C038()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_213B2C044()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_213B2C050()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_213B2C05C()
{
  return MEMORY[0x24BEE6AD8]();
}

uint64_t sub_213B2C068()
{
  return MEMORY[0x24BEE6B28]();
}

uint64_t sub_213B2C074()
{
  return MEMORY[0x24BEE6B58]();
}

uint64_t sub_213B2C080()
{
  return MEMORY[0x24BEE6BA0]();
}

uint64_t sub_213B2C08C()
{
  return MEMORY[0x24BEE6BE0]();
}

uint64_t sub_213B2C098()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_213B2C0A4()
{
  return MEMORY[0x24BDCFC80]();
}

uint64_t sub_213B2C0B0()
{
  return MEMORY[0x24BEE15A0]();
}

uint64_t sub_213B2C0BC()
{
  return MEMORY[0x24BEE1628]();
}

uint64_t sub_213B2C0C8()
{
  return MEMORY[0x24BEE1658]();
}

uint64_t sub_213B2C0D4()
{
  return MEMORY[0x24BEE1660]();
}

uint64_t sub_213B2C0E0()
{
  return MEMORY[0x24BEE1668]();
}

uint64_t sub_213B2C0EC()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_213B2C0F8()
{
  return MEMORY[0x24BEE1A78]();
}

uint64_t sub_213B2C104()
{
  return MEMORY[0x24BDB8C78]();
}

uint64_t sub_213B2C110()
{
  return MEMORY[0x24BDB8D10]();
}

uint64_t sub_213B2C11C()
{
  return MEMORY[0x24BDB8D20]();
}

uint64_t sub_213B2C128()
{
  return MEMORY[0x24BEE5E80]();
}

uint64_t sub_213B2C134()
{
  return MEMORY[0x24BEE5220]();
}

uint64_t sub_213B2C140()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_213B2C14C()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_213B2C158()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_213B2C164()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_213B2C170()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_213B2C17C()
{
  return MEMORY[0x24BDB8D30]();
}

uint64_t sub_213B2C188()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_213B2C194()
{
  return MEMORY[0x24BDB8D98]();
}

uint64_t sub_213B2C1A0()
{
  return MEMORY[0x24BEE52D8]();
}

uint64_t sub_213B2C1AC()
{
  return MEMORY[0x24BEE52E0]();
}

uint64_t sub_213B2C1B8()
{
  return MEMORY[0x24BEE52E8]();
}

uint64_t sub_213B2C1C4()
{
  return MEMORY[0x24BEE52F0]();
}

uint64_t sub_213B2C1D0()
{
  return MEMORY[0x24BEE5320]();
}

uint64_t sub_213B2C1DC()
{
  return MEMORY[0x24BEE5328]();
}

uint64_t sub_213B2C1E8()
{
  return MEMORY[0x24BDB8E18]();
}

uint64_t sub_213B2C1F4()
{
  return MEMORY[0x24BDD0150]();
}

uint64_t sub_213B2C200()
{
  return MEMORY[0x24BDB8E28]();
}

uint64_t sub_213B2C20C()
{
  return MEMORY[0x24BDB8E48]();
}

uint64_t sub_213B2C218()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_213B2C224()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_213B2C230()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_213B2C23C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_213B2C248()
{
  return MEMORY[0x24BEE1D60]();
}

uint64_t sub_213B2C254()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_213B2C260()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_213B2C26C()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_213B2C278()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_213B2C284()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_213B2C290()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_213B2C29C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_213B2C2A8()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_213B2C2B4()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_213B2C2C0()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_213B2C2CC()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_213B2C2D8()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_213B2C2E4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_213B2C2F0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_213B2C2FC()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_213B2C308()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_213B2C314()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_213B2C320()
{
  return MEMORY[0x24BEE2788]();
}

uint64_t sub_213B2C32C()
{
  return MEMORY[0x24BEE27B0]();
}

uint64_t sub_213B2C338()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_213B2C344()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_213B2C350()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_213B2C35C()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_213B2C368()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_213B2C374()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_213B2C380()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_213B2C38C()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_213B2C398()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_213B2C3A4()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_213B2C3B0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_213B2C3BC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_213B2C3C8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_213B2C3D4()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_213B2C3E0()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_213B2C3EC()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_213B2C3F8()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_213B2C404()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_213B2C410()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_213B2C41C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_213B2C428()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_213B2C434()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_213B2C440()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_213B2C44C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_213B2C458()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_213B2C464()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_213B2C470()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_213B2C47C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_213B2C488()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_213B2C494()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_213B2C4A0()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_213B2C4AC()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_213B2C4B8()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_213B2C4C4()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_213B2C4D0()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_213B2C4DC()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_213B2C4E8()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_213B2C4F4()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_213B2C500()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_213B2C50C()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_213B2C518()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_213B2C524()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_213B2C530()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_213B2C53C()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_213B2C548()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_213B2C554()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_213B2C560()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_213B2C56C()
{
  return MEMORY[0x24BEE4A10]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x24BDE5410]();
  return result;
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x24BDE55D0](retstr, sx, sy, sz);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x24BDD9158](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x24BDD9170](data, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return MEMORY[0x24BDD9188](isrc);
}

CMTime *__cdecl CMTimeAdd(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x24BDC0420](retstr, lhs, rhs);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  Float64 result;

  MEMORY[0x24BDC0490](time);
  return result;
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return (CMTime *)MEMORY[0x24BDC0498](retstr, value, *(_QWORD *)&timescale);
}

CVReturn CVMetalTextureCacheCreate(CFAllocatorRef allocator, CFDictionaryRef cacheAttributes, id metalDevice, CFDictionaryRef textureAttributes, CVMetalTextureCacheRef *cacheOut)
{
  return MEMORY[0x24BDC51F8](allocator, cacheAttributes, metalDevice, textureAttributes, cacheOut);
}

CVReturn CVMetalTextureCacheCreateTextureFromImage(CFAllocatorRef allocator, CVMetalTextureCacheRef textureCache, CVImageBufferRef sourceImage, CFDictionaryRef textureAttributes, MTLPixelFormat pixelFormat, size_t width, size_t height, size_t planeIndex, CVMetalTextureRef *textureOut)
{
  return MEMORY[0x24BDC5200](allocator, textureCache, sourceImage, textureAttributes, pixelFormat, width, height, planeIndex);
}

id CVMetalTextureGetTexture(CVMetalTextureRef image)
{
  return (id)MEMORY[0x24BDC5210](image);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52B0](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52E8](pixelBuffer);
}

void IOSurfaceDecrementUseCount(IOSurfaceRef buffer)
{
  MEMORY[0x24BDD8B68](buffer);
}

void IOSurfaceIncrementUseCount(IOSurfaceRef buffer)
{
  MEMORY[0x24BDD8CF0](buffer);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _availability_version_check()
{
  return MEMORY[0x24BDAC970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x24BDADEA0](predicate, context, function);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE448](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x24BDAE4D8](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x24BDAE530](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

void rewind(FILE *a1)
{
  MEMORY[0x24BDAFB98](a1);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAFEA0](a1, a2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get()
{
  return MEMORY[0x24BEE71A8]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_addCancellationHandler()
{
  return MEMORY[0x24BEE7220]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_removeCancellationHandler()
{
  return MEMORY[0x24BEE7268]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

long double tan(long double __x)
{
  long double result;

  MEMORY[0x24BDB0138](__x);
  return result;
}

