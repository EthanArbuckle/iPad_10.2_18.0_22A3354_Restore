_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Handle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for Handle()
{
  return &type metadata for Handle;
}

uint64_t sub_23B6ED4FC()
{
  unsigned __int8 *v0;

  return sub_23B6ED504(*v0);
}

uint64_t sub_23B6ED504(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6ED540 + 4 * byte_23B79E6E9[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_23B6ED540()
{
  return 0xD000000000000013;
}

uint64_t getEnumTagSinglePayload for IDSStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for HandleType()
{
  return &type metadata for HandleType;
}

uint64_t storeEnumTagSinglePayload for Handle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOrigin()
{
  return &type metadata for ClientOrigin;
}

uint64_t storeEnumTagSinglePayload for IDSStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B6ED804 + 4 * byte_23B79E6FC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B6ED838 + 4 * byte_23B79E6F7[v4]))();
}

uint64_t sub_23B6ED838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6ED840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B6ED848);
  return result;
}

uint64_t sub_23B6ED854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B6ED85CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B6ED860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6ED868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSStatus()
{
  return &type metadata for IDSStatus;
}

BOOL static HandleType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

FindMyLocate::IDSStatus_optional __swiftcall IDSStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)(rawValue + 1) < 4)
    v2 = rawValue + 1;
  *v1 = v2;
  return (FindMyLocate::IDSStatus_optional)rawValue;
}

uint64_t sub_23B6ED8B0()
{
  return sub_23B6F3C6C();
}

uint64_t getEnumTagSinglePayload for FriendshipAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

uint64_t getEnumTagSinglePayload for PlaceMark(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

FindMyLocate::IDSStatus_optional sub_23B6ED9B8(Swift::Int *a1)
{
  return IDSStatus.init(rawValue:)(*a1);
}

uint64_t sub_23B6ED9C8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736567617373656DLL;
  if (*v0 != 1)
    v1 = 0x726568746FLL;
  if (*v0)
    return v1;
  else
    return 0x7041794D646E6966;
}

FindMyLocate::GroupID_optional sub_23B6EDA30(Swift::String *a1)
{
  return GroupID.init(rawValue:)(*a1);
}

uint64_t _s12FindMyLocate10HandleTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23B6EDA88 + 4 * byte_23B79E710[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23B6EDABC + 4 * byte_23B79E70B[v4]))();
}

uint64_t sub_23B6EDABC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6EDAC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B6EDACCLL);
  return result;
}

uint64_t sub_23B6EDAD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B6EDAE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23B6EDAE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6EDAEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6EDAFC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6EDB2C + 4 * byte_23B79E6D5[*v0]))(0x7265776F6C6C6F66, 0xE800000000000000);
}

uint64_t sub_23B6EDB2C()
{
  return 0x6E69776F6C6C6F66;
}

uint64_t sub_23B6EDB48()
{
  return 0x6F46657275747566;
}

uint64_t sub_23B6EDB80()
{
  return 0x4F676E69646E6570;
}

ValueMetadata *type metadata accessor for GroupID()
{
  return &type metadata for GroupID;
}

uint64_t sub_23B6EDBB0(unsigned __int8 *a1)
{
  return *a1;
}

void __swiftcall Device.init(identifier:deviceName:idsDeviceId:isActive:isThisDevice:isCompanion:isAutoMeCapable:)(FindMyLocate::Device *__return_ptr retstr, Swift::String identifier, Swift::String deviceName, Swift::String idsDeviceId, Swift::Bool isActive, Swift::Bool isThisDevice, Swift::Bool isCompanion, Swift::Bool isAutoMeCapable)
{
  retstr->identifier = identifier;
  retstr->deviceName = deviceName;
  retstr->idsDeviceId = idsDeviceId;
  retstr->isActive = isActive;
  retstr->isThisDevice = isThisDevice;
  retstr->isCompanion = isCompanion;
  retstr->isAutoMeCapable = isAutoMeCapable;
}

uint64_t storeEnumTagSinglePayload for Friend()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for Friend()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

_BYTE *sub_23B6EDC04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t sub_23B6EDC10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6EDC44 + 4 * byte_23B79E6E4[*v0]))(0x65776F6C6C6F662ELL, 0xE900000000000072);
}

uint64_t sub_23B6EDC44()
{
  return 0x69776F6C6C6F662ELL;
}

uint64_t sub_23B6EDC60()
{
  return 0x466572757475662ELL;
}

unint64_t sub_23B6EDC84()
{
  return 0xD000000000000010;
}

uint64_t sub_23B6EDCA0()
{
  return 0x676E69646E65702ELL;
}

uint64_t Device.isActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t Handle.expiresByGroupId.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for Device(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 52))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void Friend.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 176);
}

uint64_t storeEnumTagSinglePayload for Device(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 52) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23B6EDD80()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6567617373656D2ELL;
  if (*v0 != 1)
    v1 = 0x726568746F2ELL;
  if (*v0)
    return v1;
  else
    return 0x41794D646E69662ELL;
}

uint64_t sub_23B6EDDE4()
{
  uint64_t v0;

  v0 = sub_23B7969BC();
  __swift_allocate_value_buffer(v0, qword_254309068);
  __swift_project_value_buffer(v0, (uint64_t)qword_254309068);
  return sub_23B7969B0();
}

uint64_t sub_23B6EDE64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_23B6EDED8()
{
  unint64_t v0;

  sub_23B732B7C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

FindMyLocate::LegacyRefreshSchedule_optional __swiftcall LegacyRefreshSchedule.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FindMyLocate::LegacyRefreshSchedule_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23B796DB8();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_23B6EDFE0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_23B796ECC();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_23B796ECC() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for RequestOrigin(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B6EE0E0()
{
  swift_weakAssign();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B6EE138(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B86C6B8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B6EE178(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23B7968A8();
    result = MEMORY[0x23B86C6B8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B6EE1B8()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_23B79E218;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23B6EE23C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254303FE0)
  {
    sub_23B7968A8();
    v0 = sub_23B796C5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254303FE0);
  }
}

uint64_t sub_23B6EE290(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEC00000064656C75;
  v3 = 0x6465686353746F6ELL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x726F697250776F6CLL;
    else
      v5 = 0x6F69725068676968;
    if (v4 == 1)
      v6 = 0xEB00000000797469;
    else
      v6 = 0xEC00000079746972;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6465686353746F6ELL;
  v6 = 0xEC00000064656C75;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x726F697250776F6CLL;
    else
      v3 = 0x6F69725068676968;
    if (v7 == 1)
      v2 = 0xEB00000000797469;
    else
      v2 = 0xEC00000079746972;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23B6EE3D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 24);
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_23B6EE938;
  return sub_23B6FC0F4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 56));
}

uint64_t Account.icloudIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23B6EE47C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_weakAssign();
  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_23B7706E8;
  return sub_23B770730();
}

void sub_23B6EE4E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254302FF0)
  {
    sub_23B7966B0();
    v0 = sub_23B796C5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254302FF0);
  }
}

uint64_t sub_23B6EE53C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025E8);
  result = sub_23B796D94();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23B796F44();
      sub_23B796F50();
      result = sub_23B796F74();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B86C658](a1, v6, a5);
}

void sub_23B6EE838()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254303008)
  {
    sub_23B796908();
    v0 = sub_23B796C5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254303008);
  }
}

uint64_t sub_23B6EE88C()
{
  swift_weakAssign();
  swift_release();
  return swift_task_switch();
}

void sub_23B6EE8E4(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_23B6EE938()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_23B6EE9AC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B7968A8();
  if (v0 <= 0x3F)
  {
    sub_23B6EE838();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_23B6EEA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B6EEAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B6EEAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void __swiftcall LocationRequest.init(priority:origin:toHandles:reason:startRefreshingLocation:isCached:)(FindMyLocate::LocationRequest *__return_ptr retstr, FindMyLocate::LocatePriority priority, FindMyLocate::RequestOrigin origin, Swift::OpaquePointer toHandles, FindMyLocate::LegacyRefreshCommandReason_optional reason, Swift::Bool startRefreshingLocation, Swift::Bool isCached)
{
  uint64_t v8;
  FindMyLocate::ClientOrigin v9;
  uint64_t v10;
  Swift::Int v11;
  void *v12;
  int v13;
  void *clientPid;
  char v15;
  FindMyLocate::LegacyRefreshSchedule v16;
  char object;
  char rawValue;

  v8 = *(unsigned __int8 *)priority;
  v9 = **(_BYTE **)&origin.origin;
  v11 = *(_QWORD *)(*(_QWORD *)&origin.origin + 8);
  v10 = *(_QWORD *)(*(_QWORD *)&origin.origin + 16);
  v12 = *(void **)(*(_QWORD *)&origin.origin + 24);
  v13 = *(unsigned __int8 *)origin.clientBundleIdentifier.value._countAndFlagsBits;
  object = (char)origin.clientBundleIdentifier.value._object;
  rawValue = (char)toHandles._rawValue;
  if (v13 == 15)
    __asm { BR              X10 }
  clientPid = (void *)origin.clientPid;
  if ((_DWORD)v8 == 2)
    v15 = sub_23B796ECC();
  else
    v15 = 1;
  swift_bridgeObjectRelease();
  retstr->toHandles._rawValue = clientPid;
  if ((_DWORD)v8 == 2)
    v16 = FindMyLocate_LegacyRefreshSchedule_highPriorityScheduled;
  else
    v16 = FindMyLocate_LegacyRefreshSchedule_lowPriorityScheduled;
  retstr->priority = v8;
  retstr->origin.origin = v9;
  retstr->origin.clientPid = v11;
  retstr->origin.clientBundleIdentifier.value._countAndFlagsBits = v10;
  retstr->origin.clientBundleIdentifier.value._object = v12;
  retstr->shallowLocatesOnly = v15 & 1;
  retstr->type = v16;
  retstr->refreshReason = v13;
  retstr->startRefreshingLocation = object & 1;
  retstr->isCached = rawValue & 1;
}

uint64_t sub_23B6EECF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 24);
  type metadata accessor for FriendStreamChange();
  v7 = swift_task_alloc();
  *(_BYTE *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEE6A10], v3);
  sub_23B796BC0();
  swift_task_dealloc();
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v4;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v9;
  *v9 = v0;
  v9[1] = sub_23B6EDE64;
  return sub_23B796704();
}

uint64_t Device.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23B6EEE3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[11];
  v2 = swift_allocObject();
  v0[12] = v2;
  swift_weakInit();
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  v3[2] = v2;
  v3[3] = v0 + 2;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[14] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v4 = v0;
  v4[1] = sub_23B7580D8;
  return sub_23B796704();
}

uint64_t sub_23B6EEF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  sub_23B796680();
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302FE8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t RequestOrigin.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302718);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B6FD758();
  sub_23B796F80();
  if (!v2)
  {
    v19 = 0;
    sub_23B6FD7C0();
    sub_23B796E30();
    v9 = v20;
    v18 = 1;
    v10 = sub_23B796E24();
    v17 = 2;
    v12 = sub_23B796DDC();
    v13 = v8;
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23B6EF14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  sub_23B796680();
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302FE8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t RequestOrigin.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302C60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v11[2] = *((_QWORD *)v1 + 2);
  v11[3] = v9;
  v11[1] = *((_QWORD *)v1 + 3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B6FD758();
  sub_23B796F8C();
  v15 = v8;
  v14 = 0;
  sub_23B6FD804();
  sub_23B796EA8();
  if (!v2)
  {
    v13 = 1;
    sub_23B796E9C();
    v12 = 2;
    sub_23B796E54();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23B6EF35C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  char v4;
  _QWORD *v5;
  _QWORD *v7;
  _BYTE v8[24];
  uint64_t v9;

  if (objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0) == (id)3)
  {
    sub_23B796710();
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
      if (swift_dynamicCast())
        goto LABEL_13;
    }
    else
    {
      sub_23B769144((uint64_t)v8);
    }
    sub_23B796710();
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
      if ((swift_dynamicCast() & 1) != 0)
      {
LABEL_13:
        v5 = v7;
LABEL_16:
        v4 = sub_23B6EDFE0(0xD000000000000016, 0x800000023B7A15B0, v5);
        swift_bridgeObjectRelease();
        return v4 & 1;
      }
    }
    else
    {
      sub_23B769144((uint64_t)v8);
    }
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_16;
  }
  if (qword_254302FC0 != -1)
    swift_once();
  v0 = sub_23B7969BC();
  __swift_project_value_buffer(v0, (uint64_t)qword_254309198);
  v1 = sub_23B7969A4();
  v2 = sub_23B796C14();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B6EB000, v1, v2, "Client's Contact status is not authorized", v3, 2u);
    MEMORY[0x23B86C754](v3, -1, -1);
  }

  v4 = 0;
  return v4 & 1;
}

uint64_t sub_23B6EF558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_defaultActor_initialize();
  v1 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_serviceDescription;
  v2 = sub_23B7966B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_session) = 0;
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_disconnectionHandler);
  *v3 = 0;
  v3[1] = 0;
  v4 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v7 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_rangingContinuation;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_isSyncingContact) = 0;
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_syncContinuations) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection____lazy_storage___sharedContactStore) = 0;
  swift_weakInit();
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection__friendsWithPrettyName) = 0;
  v6(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_internalFollowingContinuation, 1, 1, v5);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_followers) = v9;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_followings) = v9;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowers) = v9;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowings) = v9;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_pendingOffers) = v9;
  return v0;
}

uint64_t ClientOrigin.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302C50);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302C58);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302C40);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302C48);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B6F4594();
  sub_23B796F8C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23B72CD80();
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23B72CD3C();
      v16 = v21;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23B6F45D8();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t sub_23B6EF944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 120) = 0;
  swift_unknownObjectWeakInit();
  v1 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_serviceDescription;
  v2 = sub_23B7966B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_session) = 0;
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_disconnectionHandler);
  *v3 = 0;
  v3[1] = 0;
  v4 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDevice;
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_DWORD *)(v4 + 48) = 0;
  v5 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDeviceContinuation;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_preferenceContinuation;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_weakInit();
  return v0;
}

uint64_t sub_23B6EFA5C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B6EFAC8()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t sub_23B6EFB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  swift_retain();
  swift_retain();
  sub_23B77520C((uint64_t)v11, a5, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_23B6EFBE8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v1 = *a1;
  sub_23B796710();
  swift_bridgeObjectRelease();
  if (v16)
  {
    result = swift_dynamicCast();
    if ((_DWORD)result && (v13 & 1) != 0)
      return result;
  }
  else
  {
    sub_23B769144((uint64_t)&v14);
  }
  v12 = v1;
  if (qword_254302FC0 != -1)
    swift_once();
  v3 = sub_23B7969BC();
  __swift_project_value_buffer(v3, (uint64_t)qword_254309198);
  v4 = sub_23B7969A4();
  v5 = sub_23B796C2C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = 0xD000000000000026;
    v9 = 0x800000023B79F9C0;
    if (v12 == 1)
    {
      v8 = 0xD00000000000002FLL;
      v9 = 0x800000023B79F990;
    }
    if (v12)
      v10 = v8;
    else
      v10 = 0xD00000000000002DLL;
    if (v12)
      v11 = v9;
    else
      v11 = 0x800000023B79F960;
    sub_23B6FB388(v10, v11, &v14);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B6EB000, v4, v5, "Missing entitlement: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);
  }

  v14 = 0;
  v15 = 0xE000000000000000;
  sub_23B796CD4();
  swift_bridgeObjectRelease();
  v14 = 0xD000000000000015;
  v15 = 0x800000023B7A1EC0;
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  result = sub_23B796D70();
  __break(1u);
  return result;
}

uint64_t sub_23B6EFF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  sub_23B7968D8();
  v3[10] = swift_task_alloc();
  sub_23B796680();
  v3[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302FE8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t type metadata accessor for LocationStreamChange()
{
  uint64_t result;

  result = qword_254303020;
  if (!qword_254303020)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B6F006C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = sub_23B743EA8();
  v16 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = v15;
  *(_BYTE *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v16, v10, v7);
  *(_QWORD *)(v18 + v17) = v21;
  swift_retain_n();
  sub_23B77520C((uint64_t)v13, (uint64_t)&unk_256A48DA8, v18);
  return swift_release();
}

uint64_t sub_23B6F01EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14[8];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v5 + 48) = 0;
  *(_BYTE *)(v5 + 56) = v3;
  *(_QWORD *)(v5 + 64) = v4;
  *(_QWORD *)(v5 + 72) = v1;
  *(_QWORD *)(v5 + 80) = v2;
  v14[0] = v3;
  v15 = v4;
  v16 = v1;
  v17 = v2;
  v6 = _s14descr250C98631C18LocationConnectionCMa();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v7 = sub_23B6F098C(v14);
  *(_QWORD *)(v5 + 40) = v7;
  v8 = _s14descr250C98A29C20FriendshipConnectionCMa();
  swift_allocObject();
  *(_QWORD *)(v5 + 24) = sub_23B6EF558();
  v9 = _s14descr250C985C9C18SettingsConnectionCMa();
  swift_allocObject();
  v10 = sub_23B6EF944();
  *(_QWORD *)(v5 + 32) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032F0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23B798100;
  *(_QWORD *)(v11 + 56) = v6;
  *(_QWORD *)(v11 + 64) = &off_250C96260;
  *(_QWORD *)(v11 + 32) = v7;
  v12 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v11 + 96) = v8;
  *(_QWORD *)(v11 + 104) = &off_250C963C0;
  *(_QWORD *)(v11 + 72) = v12;
  *(_QWORD *)(v11 + 136) = v9;
  *(_QWORD *)(v11 + 144) = &off_250C962E8;
  *(_QWORD *)(v11 + 112) = v10;
  *(_QWORD *)(v5 + 16) = v11;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v5 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t destroy for LocationRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t LocationRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543025F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v30 = *((unsigned __int8 *)v1 + 8);
  v25 = *((unsigned __int8 *)v1 + 16);
  v9 = v1[3];
  v23 = v1[4];
  v24 = v9;
  v22 = v1[5];
  LODWORD(v9) = *((unsigned __int8 *)v1 + 48);
  v20 = *((unsigned __int8 *)v1 + 49);
  v21 = v9;
  LODWORD(v9) = *((unsigned __int8 *)v1 + 50);
  v18 = *((unsigned __int8 *)v1 + 51);
  v19 = v9;
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_23B6FD520();
  sub_23B796F8C();
  v26 = v8;
  v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD8);
  sub_23B6FBE38(&qword_2543025C0, (uint64_t (*)(void))sub_23B6FC8B0, MEMORY[0x24BEE12A0]);
  sub_23B796EA8();
  if (!v2)
  {
    v15 = v23;
    v14 = v24;
    v16 = v25;
    LOBYTE(v26) = v30;
    v31 = 1;
    sub_23B6FDD84();
    sub_23B796EA8();
    LOBYTE(v26) = v16;
    v27 = v14;
    v28 = v15;
    v29 = v22;
    v31 = 2;
    sub_23B6FD5E0();
    sub_23B796EA8();
    LOBYTE(v26) = 3;
    sub_23B796E84();
    LOBYTE(v26) = v20;
    v31 = 4;
    sub_23B6FD058();
    sub_23B796EA8();
    LOBYTE(v26) = v19;
    v31 = 5;
    sub_23B6FCC5C();
    sub_23B796EA8();
    LOBYTE(v26) = 6;
    sub_23B796E84();
    LOBYTE(v26) = 7;
    sub_23B796E84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t sub_23B6F0688(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a7;
  v38 = a8;
  v35 = a5;
  v36 = a6;
  v31 = a3;
  v30 = a2;
  v33 = a4;
  v34 = a10;
  v32 = a9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v19 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v20 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = v20 + v13;
  v22 = (v20 + v13) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 63) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = &v24[v22];
  v26 = v30;
  *((_QWORD *)v24 + 2) = v30;
  *((_QWORD *)v24 + 3) = v19;
  *((_QWORD *)v24 + 4) = v26;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v20], v14, v11);
  v24[v21] = v31;
  v27 = v32;
  *((_QWORD *)v25 + 1) = v33;
  v25[16] = v35;
  v25[24] = v36;
  v28 = v38;
  *((_QWORD *)v25 + 4) = v37;
  *((_QWORD *)v25 + 5) = v28;
  *((_QWORD *)v25 + 6) = v27;
  *(_QWORD *)&v24[v23] = v34;
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_23B77520C((uint64_t)v17, (uint64_t)&unk_256A486A0, (uint64_t)v24);
  return swift_release();
}

void sub_23B6F087C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v5[6];

  if ((sub_23B6EF35C() & 1) != 0)
  {
    v0 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v1 = *MEMORY[0x24BDBA3D0];
    v2 = swift_allocObject();
    swift_weakInit();
    v5[4] = sub_23B743F1C;
    v5[5] = v2;
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 1107296256;
    v5[2] = sub_23B742638;
    v5[3] = &block_descriptor_1;
    v3 = _Block_copy(v5);
    swift_release();
    v4 = objc_msgSend(v0, sel_addObserverForName_object_queue_usingBlock_, v1, 0, 0, v3);
    _Block_release(v3);
    swift_unknownObjectRelease();

  }
}

uint64_t sub_23B6F098C(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_23B7968D8();
  MEMORY[0x24BDAC7A8](v3);
  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 3);
  swift_defaultActor_initialize();
  v8 = v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_serviceDescription;
  v9 = sub_23B7966B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_session) = 0;
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_disconnectionHandler);
  *v10 = 0;
  v10[1] = 0;
  v11 = v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesNeedingReverseGeocoding) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection____lazy_storage___locationShifter) = 0;
  v13 = OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_reverseGeocoder;
  if (qword_254303FB0 != -1)
    swift_once();
  swift_beginAccess();
  *(_QWORD *)(v1 + v13) = qword_254303FA8;
  v14 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationForHandles) = v14;
  v15 = OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationRefreshWorkQueue;
  sub_23B796674();
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  *(_QWORD *)(v1 + v15) = sub_23B79665C();
  swift_weakInit();
  v16 = v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_origin;
  *(_BYTE *)v16 = v4;
  *(_QWORD *)(v16 + 8) = v5;
  *(_QWORD *)(v16 + 16) = v6;
  *(_QWORD *)(v16 + 24) = v7;
  return v1;
}

uint64_t LocationRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302720);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B6FD520();
  sub_23B796F80();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD8);
  v28 = 0;
  sub_23B6FBE38(&qword_2543026C0, (uint64_t (*)(void))sub_23B70C8EC, MEMORY[0x24BEE12D0]);
  sub_23B796E30();
  v9 = v23;
  v28 = 1;
  sub_23B6FDCB8();
  swift_bridgeObjectRetain();
  sub_23B796E30();
  v10 = v23;
  v28 = 2;
  sub_23B6FD59C();
  sub_23B796E30();
  v27 = v10;
  v22 = v23;
  v12 = v26;
  v20 = v25;
  v21 = v24;
  LOBYTE(v23) = 3;
  swift_bridgeObjectRetain();
  v19 = sub_23B796E0C();
  v28 = 4;
  sub_23B6FCFD0();
  sub_23B796E30();
  v18 = v23;
  v28 = 5;
  sub_23B6FCBD4();
  sub_23B796E30();
  v17 = v23;
  LOBYTE(v23) = 6;
  v16 = sub_23B796E0C();
  LOBYTE(v23) = 7;
  v13 = sub_23B796E0C();
  HIDWORD(v15) = v19 & 1;
  v19 = v16 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v27;
  *(_BYTE *)(a2 + 16) = v22;
  v14 = v20;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v12;
  *(_BYTE *)(a2 + 48) = BYTE4(v15);
  *(_BYTE *)(a2 + 49) = v18;
  *(_BYTE *)(a2 + 50) = v17;
  *(_BYTE *)(a2 + 51) = v19;
  *(_BYTE *)(a2 + 52) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ReverseGeocoder.init(preferredLocale:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  v10 = sub_23B7968D8();
  MEMORY[0x24BDAC7A8](v10);
  swift_defaultActor_initialize();
  sub_23B796890();
  v11 = OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_workItemQueue;
  sub_23B796674();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  *(_QWORD *)(v1 + v11) = sub_23B79665C();
  v12 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_recordsPerGeoHash) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_recordsPerIdentifier) = v12;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_processedOperationsCount) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_nonCoarseHorizontalAccuracyRequirement) = 0x4069000000000000;
  if (qword_254302F98 != -1)
    swift_once();
  v13 = sub_23B7969BC();
  __swift_project_value_buffer(v13, (uint64_t)qword_254309068);
  sub_23B6F1360(a1, (uint64_t)v9);
  swift_retain_n();
  v14 = sub_23B7969A4();
  v15 = sub_23B796C38();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v25 = v4;
    v18 = v17;
    v28 = v17;
    *(_DWORD *)v16 = 136315394;
    v19 = sub_23B796FBC();
    v21 = sub_23B6FB388(v19, v20, &v28);
    v26 = a1;
    v27 = v21;
    sub_23B796C68();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_23B6F1360((uint64_t)v9, (uint64_t)v7);
    v22 = sub_23B796A4C();
    v27 = sub_23B6FB388(v22, v23, &v28);
    a1 = v26;
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F7190((uint64_t)v9, &qword_254303000);
    _os_log_impl(&dword_23B6EB000, v14, v15, "%s: initialized with preferred locale: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v18, -1, -1);
    MEMORY[0x23B86C754](v16, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_23B6F7190((uint64_t)v9, &qword_254303000);
  }

  sub_23B6FC8F4(a1, v2 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_locale, &qword_254303000);
  return v2;
}

uint64_t sub_23B6F1360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for Account()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for Handle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_23B6F1428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[2];
  uint64_t v30;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    if (qword_254303110 != -1)
      swift_once();
    v12 = sub_23B7969BC();
    __swift_project_value_buffer(v12, (uint64_t)qword_2543090D0);
    sub_23B6F1724(a3);
    sub_23B6F1724(a3);
    v13 = sub_23B7969A4();
    v14 = sub_23B796C38();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v26 = a1;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc();
      v30 = v17;
      v25 = a4;
      *(_DWORD *)v16 = 136315138;
      v18 = *(_OWORD *)(a3 + 16);
      v27 = *(_OWORD *)a3;
      v28 = v18;
      v29[0] = *(_OWORD *)(a3 + 32);
      *(_QWORD *)((char *)v29 + 13) = *(_QWORD *)(a3 + 45);
      LocationRequest.description.getter();
      *(_QWORD *)&v27 = sub_23B6FB388(v19, v20, &v30);
      a4 = v25;
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B6F16F0(a3);
      sub_23B6F16F0(a3);
      _os_log_impl(&dword_23B6EB000, v13, v14, "startRefreshingLocation: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v17, -1, -1);
      v21 = v16;
      a1 = v26;
      MEMORY[0x23B86C754](v21, -1, -1);
    }
    else
    {
      sub_23B6F16F0(a3);
      sub_23B6F16F0(a3);
    }

    v22 = sub_23B796B84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0;
    v24 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v23 + 48) = v24;
    *(_OWORD *)(v23 + 64) = *(_OWORD *)(a3 + 32);
    *(_QWORD *)(v23 + 77) = *(_QWORD *)(a3 + 45);
    *(_QWORD *)(v23 + 88) = v11;
    *(_QWORD *)(v23 + 96) = a1;
    *(_QWORD *)(v23 + 104) = a4;
    sub_23B6F1724(a3);
    swift_retain();
    sub_23B77520C((uint64_t)v9, (uint64_t)&unk_256A49020, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_23B6F16F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B6F1724(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B6F1758()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(void);

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B6EB000, v2, v3, "Starting LocationConnection", v4, 2u);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v25 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 56);

  v10 = (uint64_t *)(v7 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_disconnectionHandler);
  v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_disconnectionHandler);
  *v10 = v9;
  v10[1] = v8;
  sub_23B6FBEA0(v9);
  sub_23B6FBEB0(v11);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_interfaceWithProtocol_, &unk_256A5D478);
  *(_QWORD *)(v0 + 112) = v13;
  sub_23B79668C();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543030E8);
  v15 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v0 + 40) = v15;
  *(_QWORD *)(v0 + 48) = v14;
  objc_msgSendSuper2((objc_super *)(v0 + 40), sel_init);
  swift_release();
  v16 = v13;
  v17 = objc_msgSend(v12, sel_interfaceWithProtocol_, &unk_256A583E8);
  sub_23B7966A4();
  v18 = sub_23B7966B0();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v6, 0, 1, v18);
  sub_23B6EEAB4(v6, v5);
  v20 = v7 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_serviceDescription;
  swift_beginAccess();
  sub_23B6EEA6C(v5, v20);
  swift_endAccess();
  sub_23B6EEAFC(v20, v25);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v25, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302FC8);
    v23 = sub_23B7966F8();
    *(_QWORD *)(v0 + 120) = v23;
    *(_QWORD *)(v22 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_session) = v23;
    swift_retain();
    swift_release();
    v26 = (uint64_t (*)(void))((int)*MEMORY[0x24BE31988] + MEMORY[0x24BE31988]);
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v24;
    *v24 = v0;
    v24[1] = sub_23B6FC05C;
    return v26();
  }
  return result;
}

uint64_t sub_23B6F1AC8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(void);

  if (qword_254303288 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309170);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B6EB000, v2, v3, "Starting FriendshipConnection", v4, 2u);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v25 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 56);

  v10 = (uint64_t *)(v7 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_disconnectionHandler);
  v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_disconnectionHandler);
  *v10 = v9;
  v10[1] = v8;
  sub_23B6FBEA0(v9);
  sub_23B6FBEB0(v11);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_interfaceWithProtocol_, &unk_256A5D4D8);
  *(_QWORD *)(v0 + 112) = v13;
  sub_23B79668C();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303260);
  v15 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v0 + 40) = v15;
  *(_QWORD *)(v0 + 48) = v14;
  objc_msgSendSuper2((objc_super *)(v0 + 40), sel_init);
  swift_release();
  v16 = v13;
  v17 = objc_msgSend(v12, sel_interfaceWithProtocol_, &unk_256A58448);
  sub_23B7966A4();
  v18 = sub_23B7966B0();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v6, 0, 1, v18);
  sub_23B6FC8F4(v6, v5, &qword_254302FE8);
  v20 = v7 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_serviceDescription;
  swift_beginAccess();
  sub_23B6EEA6C(v5, v20);
  swift_endAccess();
  sub_23B6FDE3C(v20, v25, &qword_254302FE8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v25, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302FF8);
    v23 = sub_23B7966F8();
    *(_QWORD *)(v0 + 120) = v23;
    *(_QWORD *)(v22 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_session) = v23;
    swift_retain();
    swift_release();
    sub_23B6F087C();
    v26 = (uint64_t (*)(void))((int)*MEMORY[0x24BE31988] + MEMORY[0x24BE31988]);
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v24;
    *v24 = v0;
    v24[1] = sub_23B6FC05C;
    return v26();
  }
  return result;
}

uint64_t sub_23B6F1E54()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 56);
  if (v4)
  {
    v6 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v6 = 136447235;
    *(_QWORD *)(v0 + 16) = sub_23B6FB388(0xD00000000000003CLL, 0x800000023B7A0740, &v23);
    sub_23B796C68();
    *(_WORD *)(v6 + 12) = 2160;
    *(_QWORD *)(v0 + 24) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v6 + 22) = 2081;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = MEMORY[0x24BEE4AF8];
    if (v7)
    {
      v9 = *(_QWORD *)(v0 + 56);
      v24 = MEMORY[0x24BEE4AF8];
      sub_23B6F3FB8(0, v7, 0);
      v8 = v24;
      v10 = *(_QWORD *)(v24 + 16);
      v11 = 16 * v10;
      v12 = (uint64_t *)(v9 + 40);
      do
      {
        v13 = *(v12 - 1);
        v14 = *v12;
        v24 = v8;
        v15 = *(_QWORD *)(v8 + 24);
        swift_bridgeObjectRetain();
        if (v10 >= v15 >> 1)
        {
          sub_23B6F3FB8(v15 > 1, v10 + 1, 1);
          v8 = v24;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        v16 = v8 + v11;
        *(_QWORD *)(v16 + 32) = v13;
        *(_QWORD *)(v16 + 40) = v14;
        v11 += 16;
        v12 += 22;
        ++v10;
        --v7;
      }
      while (v7);
    }
    v17 = *(unsigned __int8 *)(v0 + 133);
    v18 = MEMORY[0x23B86BE78](v8, MEMORY[0x24BEE0D00]);
    v20 = v19;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_23B6FB388(v18, v20, &v23);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 32) = 2082;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease_n();

  v21 = *(_QWORD *)(v0 + 64);
  LOBYTE(v24) = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0((unsigned __int8 *)&v24);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v21 + 40);
  *(_BYTE *)(v0 + 134) = *(_BYTE *)(v21 + 56);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v21 + 64);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v21 + 72);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v21 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23B6F228C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);

  if (qword_2543031C8 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309108);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B6EB000, v2, v3, "Starting SettingsConnection", v4, 2u);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 112);
  v25 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);

  v9 = (uint64_t *)(v6 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_disconnectionHandler);
  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_disconnectionHandler);
  *v9 = v7;
  v9[1] = v8;
  sub_23B6FBEA0(v7);
  sub_23B6FBEB0(v10);
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_256A5D418);
  *(_QWORD *)(v0 + 120) = v12;
  sub_23B79668C();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543031A8);
  v14 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  swift_weakInit();
  sub_23B796674();
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  *(_QWORD *)(v14 + 120) = sub_23B79665C();
  swift_weakAssign();
  swift_release();
  *(_QWORD *)(v0 + 40) = v14;
  *(_QWORD *)(v0 + 48) = v13;
  objc_msgSendSuper2((objc_super *)(v0 + 40), sel_init);
  swift_release();
  v15 = v12;
  v16 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_256A58388);
  sub_23B7966A4();
  v17 = sub_23B7966B0();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v17);
  sub_23B6EEAB4(v5, v24);
  v19 = v6 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_serviceDescription;
  swift_beginAccess();
  sub_23B6EEA6C(v24, v19);
  swift_endAccess();
  sub_23B6EEAFC(v19, v25);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v25, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD0);
    v22 = sub_23B7966F8();
    *(_QWORD *)(v0 + 128) = v22;
    *(_QWORD *)(v21 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_session) = v22;
    swift_retain();
    swift_release();
    v26 = (uint64_t (*)(void))((int)*MEMORY[0x24BE31988] + MEMORY[0x24BE31988]);
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v23;
    *v23 = v0;
    v23[1] = sub_23B6FC27C;
    return v26();
  }
  return result;
}

uint64_t initializeWithCopy for Account(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t Handle.serverID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void LocationRequest.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23B796CD4();
  sub_23B796A7C();
  sub_23B796A7C();
  sub_23B796A7C();
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x23B86BE78](v2, &type metadata for Handle);
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  __asm { BR              X9 }
}

uint64_t sub_23B6F289C()
{
  uint64_t v1;

  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  RequestOrigin.description.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  LegacyRefreshCommandReason.description.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796D58();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796D58();
  sub_23B796A7C();
  return v1;
}

uint64_t LegacyRefreshCommandReason.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6F2B18 + 4 * byte_23B79F0B0[*v0]))(7364980, 0xE300000000000000);
}

uint64_t sub_23B6F2B18()
{
  return 0x646563726F66;
}

uint64_t sub_23B6F2B2C()
{
  return 0x72656D6974;
}

uint64_t sub_23B6F2B40()
{
  return 0x68736572666572;
}

uint64_t sub_23B6F2B58()
{
  return 0x61636F4C70656564;
}

uint64_t sub_23B6F2B74()
{
  return 0x6E656B6F54737061;
}

uint64_t sub_23B6F2B98()
{
  return 0x6165627472616568;
}

uint64_t sub_23B6F2BB4()
{
  return 0x6C6E557473726966;
}

uint64_t sub_23B6F2BD4()
{
  return 0x50676E697070616DLL;
}

unint64_t sub_23B6F2BF8()
{
  return 0xD000000000000014;
}

uint64_t RequestOrigin.description.getter()
{
  sub_23B796CD4();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796EB4();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return 0x3A6E696769726F3CLL;
}

uint64_t Friend.isLegacyLocationCapable.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Friend();
  MEMORY[0x24BDAC7A8]();
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_BYTE *)(v0 + 178);
  sub_23B6FA5FC(v0, (uint64_t)v2);
  if ((v3 & 1) != 0)
    v4 = 0;
  else
    v4 = v2[179];
  sub_23B6F9D50((uint64_t)v2);
  return v4;
}

uint64_t sub_23B6F2E90()
{
  return sub_23B796F50();
}

uint64_t sub_23B6F2EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B6F2EDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B6F2EDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7041794D646E6966 && a2 == 0xE900000000000070;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xEB00000000707041 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23B6F304C()
{
  sub_23B6F30A8();
  return sub_23B796AD0();
}

unint64_t sub_23B6F30A8()
{
  unint64_t result;

  result = qword_256A487F8;
  if (!qword_256A487F8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for GroupID, &type metadata for GroupID);
    atomic_store(result, (unint64_t *)&qword_256A487F8);
  }
  return result;
}

uint64_t _s12FindMyLocate6DeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;
  int v15;
  char v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v21 = *(unsigned __int8 *)(a1 + 48);
  v22 = *(unsigned __int8 *)(a1 + 49);
  v6 = *(unsigned __int8 *)(a1 + 50);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v18 = *(unsigned __int8 *)(a1 + 51);
  v19 = *(unsigned __int8 *)(a2 + 48);
  v20 = *(unsigned __int8 *)(a2 + 49);
  v11 = *(unsigned __int8 *)(a2 + 50);
  v17 = *(unsigned __int8 *)(a2 + 51);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_23B796ECC(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_23B796ECC(), result = 0, (v14 & 1) != 0))
    {
      v15 = v6 ^ v11;
      if (v3 == v9 && v5 == v10)
      {
        if (((v21 ^ v19 | v22 ^ v20 | v15) & 1) != 0)
          return 0;
      }
      else
      {
        v16 = sub_23B796ECC();
        result = 0;
        if ((v21 ^ v19) & 1 | ((v16 & 1) == 0) | (v22 ^ v20 | v15) & 1)
          return result;
      }
      return v18 ^ v17 ^ 1u;
    }
  }
  return result;
}

uint64_t sub_23B6F3264()
{
  sub_23B6F330C();
  return sub_23B796AC4();
}

uint64_t sub_23B6F32B0()
{
  sub_23B6F330C();
  return sub_23B796ADC();
}

unint64_t sub_23B6F330C()
{
  unint64_t result;

  result = qword_254302E10;
  if (!qword_254302E10)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for IDSStatus, &type metadata for IDSStatus);
    atomic_store(result, (unint64_t *)&qword_254302E10);
  }
  return result;
}

uint64_t sub_23B6F3350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23B796A58();
  v2 = v1;
  if (v0 == sub_23B796A58() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23B6F33E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B6F3408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B6F3408(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265776F6C6C6F66 && a2 == 0xE800000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69776F6C6C6F66 && a2 == 0xE900000000000067 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F46657275747566 && a2 == 0xEE007265776F6C6CLL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F46657275747566 && a2 == 0xEF676E69776F6C6CLL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4F676E69646E6570 && a2 == 0xEC00000072656666)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t Handle.description.getter()
{
  sub_23B796CD4();
  sub_23B796A7C();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CC8);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CE0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return 0;
}

uint64_t static Handle.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23B796A58();
  v2 = v1;
  if (v0 == sub_23B796A58() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

FindMyLocate::GroupID_optional __swiftcall GroupID.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FindMyLocate::GroupID_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23B796DB8();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_23B6F3954()
{
  sub_23B796F44();
  sub_23B796A58();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

uint64_t Device.description.getter()
{
  sub_23B796CD4();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t destroy for Device()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B6F3C6C()
{
  sub_23B796F44();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

uint64_t initializeWithCopy for Device(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t Handle.init(withID:qualifiedIdentifier:serverID:idsStatus:dsid:expiresByGroupId:trackingTimestamp:hashedDSID:favoriteOrder:reachable:pushIdentifiers:prettyName:contactIdentifier:siblingIdentifiers:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, char *a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, double a8@<D0>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v28 = *a5;
  v29 = sub_23B796A58();
  v47 = v30;
  swift_bridgeObjectRelease();
  if (a2)
  {
    a1 = sub_23B796A58();
    v46 = v31;
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = 0;
  }
  v32 = *(_QWORD *)(a21 + 16);
  if (v32)
  {
    v42 = v29;
    v43 = v28;
    v44 = a3;
    v45 = a4;
    v48 = MEMORY[0x24BEE4AF8];
    sub_23B6F3FB8(0, v32, 0);
    v33 = v48;
    v34 = a21 + 40;
    do
    {
      v35 = sub_23B796A58();
      v37 = v36;
      v39 = *(_QWORD *)(v48 + 16);
      v38 = *(_QWORD *)(v48 + 24);
      if (v39 >= v38 >> 1)
        sub_23B6F3FB8(v38 > 1, v39 + 1, 1);
      v34 += 16;
      *(_QWORD *)(v48 + 16) = v39 + 1;
      v40 = v48 + 16 * v39;
      *(_QWORD *)(v40 + 32) = v35;
      *(_QWORD *)(v40 + 40) = v37;
      --v32;
    }
    while (v32);
    result = swift_bridgeObjectRelease();
    a3 = v44;
    a4 = v45;
    v28 = v43;
    v29 = v42;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v33 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)a7 = v29;
  *(_QWORD *)(a7 + 8) = v47;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = v46;
  *(_BYTE *)(a7 + 32) = v28;
  *(_QWORD *)(a7 + 40) = a6;
  *(_QWORD *)(a7 + 48) = a9;
  *(_QWORD *)(a7 + 56) = a10;
  *(double *)(a7 + 64) = a8;
  *(_QWORD *)(a7 + 72) = a11;
  *(_QWORD *)(a7 + 80) = a12;
  *(_QWORD *)(a7 + 88) = a13;
  *(_QWORD *)(a7 + 96) = a14;
  *(_BYTE *)(a7 + 104) = a15;
  *(_QWORD *)(a7 + 112) = a16;
  *(_QWORD *)(a7 + 120) = a17;
  *(_QWORD *)(a7 + 128) = a18;
  *(_QWORD *)(a7 + 136) = a19;
  *(_QWORD *)(a7 + 144) = a20;
  *(_QWORD *)(a7 + 152) = v33;
  *(_QWORD *)(a7 + 160) = a3;
  *(_QWORD *)(a7 + 168) = a4;
  return result;
}

uint64_t sub_23B6F3FB8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23B6F3FD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23B6F3FD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302600);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t sub_23B6F413C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ClientOrigin.init(from:)(a1, a2);
}

uint64_t ClientOrigin.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302708);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8]();
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302710);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8]();
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543026F8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302700);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B6F4594();
  v13 = v41;
  sub_23B796F80();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23B796E3C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23B796D04();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v25 = &type metadata for ClientOrigin;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23B72CD80();
      v20 = v9;
      sub_23B796DC4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23B72CD3C();
      v28 = v15;
      sub_23B796DC4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23B6F45D8();
    sub_23B796DC4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

unint64_t sub_23B6F4594()
{
  unint64_t result;

  result = qword_254302DA0;
  if (!qword_254302DA0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798FC8, &type metadata for ClientOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DA0);
  }
  return result;
}

unint64_t sub_23B6F45D8()
{
  unint64_t result;

  result = qword_256A487D8;
  if (!qword_256A487D8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798ED8, &type metadata for ClientOrigin.FindMyAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A487D8);
  }
  return result;
}

uint64_t sub_23B6F461C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HandleType.init(from:)(a1, a2);
}

uint64_t HandleType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543026E0);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8]();
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543026F0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8]();
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543026E8);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8]();
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543026D8);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8]();
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543026D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8]();
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302498);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8]();
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23B6F4B28();
  v19 = v44;
  sub_23B796F80();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_23B796E3C();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_23B796D04();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v23 = &type metadata for HandleType;
    v24 = v28;
    v25 = v29;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

unint64_t sub_23B6F4B28()
{
  unint64_t result;

  result = qword_254302EF8;
  if (!qword_254302EF8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79F058, &type metadata for HandleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EF8);
  }
  return result;
}

unint64_t sub_23B6F4B6C()
{
  unint64_t result;

  result = qword_254302D70;
  if (!qword_254302D70)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79EEC8, &type metadata for HandleType.FollowerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302D70);
  }
  return result;
}

unint64_t sub_23B6F4BB0()
{
  unint64_t result;

  result = qword_254302D78;
  if (!qword_254302D78)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79EF18, &type metadata for HandleType.FollowingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302D78);
  }
  return result;
}

uint64_t Handle.debugDescription.getter()
{
  uint64_t v0;

  sub_23B796CD4();
  sub_23B796A7C();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CC8);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CE0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x23B86BE78](v0, MEMORY[0x24BEE0D00]);
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return 0;
}

uint64_t sub_23B6F4E8C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B6F4F50(__int128 *a1, __int128 *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  char isUniquelyReferenced_nonNull_native;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t result;
  char v31;
  __int128 *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t i;
  __int128 *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _OWORD v72[12];

  v3 = v2;
  v6 = *v2;
  sub_23B796F44();
  sub_23B796A58();
  swift_bridgeObjectRetain();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  v7 = sub_23B796F74();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = (_OWORD *)(*(_QWORD *)(v6 + 48) + 176 * v9);
    v12 = v10[1];
    v11 = v10[2];
    v72[0] = *v10;
    v72[1] = v12;
    v72[2] = v11;
    v13 = v10[3];
    v14 = v10[4];
    v15 = v10[6];
    v72[5] = v10[5];
    v72[6] = v15;
    v72[3] = v13;
    v72[4] = v14;
    v16 = v10[7];
    v17 = v10[8];
    v18 = v10[10];
    v72[9] = v10[9];
    v72[10] = v18;
    v72[7] = v16;
    v72[8] = v17;
    v19 = sub_23B796A58();
    v21 = v20;
    if (v19 == sub_23B796A58() && v21 == v22)
    {
      sub_23B6F4E8C((uint64_t)v72);
      swift_bridgeObjectRelease_n();
      v23 = v72;
    }
    else
    {
      v31 = sub_23B796ECC();
      sub_23B6F4E8C((uint64_t)v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B6F5744((uint64_t)v72);
      if ((v31 & 1) != 0)
        goto LABEL_9;
      v9 = (v9 + 1) & ~v8;
      for (i = (v9 >> 3) & 0xFFFFFFFFFFFFF8; ; i = (v9 >> 3) & 0xFFFFFFFFFFFFF8)
      {
        if (((*(_QWORD *)(v6 + 56 + i) >> v9) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
        v47 = (__int128 *)(*(_QWORD *)(v6 + 48) + 176 * v9);
        v49 = v47[1];
        v48 = v47[2];
        v61 = *v47;
        v62 = v49;
        v63 = v48;
        v50 = v47[3];
        v51 = v47[4];
        v52 = v47[6];
        v66 = v47[5];
        v67 = v52;
        v64 = v50;
        v65 = v51;
        v53 = v47[7];
        v54 = v47[8];
        v55 = v47[10];
        v70 = v47[9];
        v71 = v55;
        v68 = v53;
        v69 = v54;
        v56 = sub_23B796A58();
        v58 = v57;
        if (v56 == sub_23B796A58() && v58 == v59)
          break;
        v60 = sub_23B796ECC();
        sub_23B6F4E8C((uint64_t)&v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23B6F5744((uint64_t)&v61);
        if ((v60 & 1) != 0)
          goto LABEL_9;
        v9 = (v9 + 1) & ~v8;
      }
      sub_23B6F4E8C((uint64_t)&v61);
      swift_bridgeObjectRelease_n();
      v23 = &v61;
    }
    sub_23B6F5744((uint64_t)v23);
LABEL_9:
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)a2);
    v32 = (__int128 *)(*(_QWORD *)(*v3 + 48) + 176 * v9);
    v34 = v32[1];
    v33 = v32[2];
    v61 = *v32;
    v62 = v34;
    v63 = v33;
    v35 = v32[6];
    v37 = v32[3];
    v36 = v32[4];
    v66 = v32[5];
    v67 = v35;
    v64 = v37;
    v65 = v36;
    v38 = v32[10];
    v40 = v32[7];
    v39 = v32[8];
    v70 = v32[9];
    v71 = v38;
    v68 = v40;
    v69 = v39;
    v41 = v32[9];
    a1[8] = v32[8];
    a1[9] = v41;
    a1[10] = v32[10];
    v42 = v32[5];
    a1[4] = v32[4];
    a1[5] = v42;
    v43 = v32[7];
    a1[6] = v32[6];
    a1[7] = v43;
    v44 = v32[1];
    *a1 = *v32;
    a1[1] = v44;
    v45 = v32[3];
    a1[2] = v32[2];
    a1[3] = v45;
    sub_23B6F4E8C((uint64_t)&v61);
    return 0;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v72[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_23B6F4E8C((uint64_t)a2);
  sub_23B6F5318((uint64_t)a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = *(_QWORD *)&v72[0];
  swift_bridgeObjectRelease();
  v25 = a2[9];
  a1[8] = a2[8];
  a1[9] = v25;
  a1[10] = a2[10];
  v26 = a2[5];
  a1[4] = a2[4];
  a1[5] = v26;
  v27 = a2[7];
  a1[6] = a2[6];
  a1[7] = v27;
  v28 = a2[1];
  *a1 = *a2;
  a1[1] = v28;
  v29 = a2[3];
  result = 1;
  a1[2] = a2[2];
  a1[3] = v29;
  return result;
}

uint64_t sub_23B6F5318(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *i;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t *v52;
  _OWORD v53[11];
  _OWORD v54[12];

  v4 = v3;
  v6 = (_OWORD *)result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_23B6F5D44();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_23B6F5808();
      goto LABEL_21;
    }
    sub_23B6F5A00();
  }
  v9 = *v3;
  sub_23B796F44();
  sub_23B796A58();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  result = sub_23B796F74();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_21;
  v52 = v3;
  v11 = (_OWORD *)(*(_QWORD *)(v9 + 48) + 176 * a2);
  v13 = v11[1];
  v12 = v11[2];
  v54[0] = *v11;
  v54[1] = v13;
  v54[2] = v12;
  v14 = v11[3];
  v15 = v11[4];
  v16 = v11[6];
  v54[5] = v11[5];
  v54[6] = v16;
  v54[3] = v14;
  v54[4] = v15;
  v17 = v11[7];
  v18 = v11[8];
  v19 = v11[10];
  v54[9] = v11[9];
  v54[10] = v19;
  v54[7] = v17;
  v54[8] = v18;
  v20 = sub_23B796A58();
  v22 = v21;
  if (v20 == sub_23B796A58() && v22 == v23)
    goto LABEL_24;
  v24 = sub_23B796ECC();
  sub_23B6F4E8C((uint64_t)v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_23B6F5744((uint64_t)v54);
  if ((v24 & 1) != 0)
    goto LABEL_19;
  v25 = ~v10;
  while (1)
  {
    a2 = (a2 + 1) & v25;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
      goto LABEL_20;
    v27 = (_OWORD *)(*(_QWORD *)(v9 + 48) + 176 * a2);
    v29 = v27[1];
    v28 = v27[2];
    v53[0] = *v27;
    v53[1] = v29;
    v53[2] = v28;
    v30 = v27[3];
    v31 = v27[4];
    v32 = v27[6];
    v53[5] = v27[5];
    v53[6] = v32;
    v53[3] = v30;
    v53[4] = v31;
    v33 = v27[7];
    v34 = v27[8];
    v35 = v27[10];
    v53[9] = v27[9];
    v53[10] = v35;
    v53[7] = v33;
    v53[8] = v34;
    v36 = sub_23B796A58();
    v38 = v37;
    if (v36 == sub_23B796A58() && v38 == v39)
      break;
    v26 = sub_23B796ECC();
    sub_23B6F4E8C((uint64_t)v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_23B6F5744((uint64_t)v53);
    if ((v26 & 1) != 0)
      goto LABEL_19;
  }
  sub_23B6F4E8C((uint64_t)v53);
  swift_bridgeObjectRelease_n();
  for (i = v53; ; i = v54)
  {
    sub_23B6F5744((uint64_t)i);
LABEL_19:
    result = sub_23B796EE4();
    __break(1u);
LABEL_20:
    v4 = v52;
LABEL_21:
    v41 = *v4;
    *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
    v42 = (_OWORD *)(*(_QWORD *)(v41 + 48) + 176 * a2);
    v43 = v6[5];
    v42[4] = v6[4];
    v42[5] = v43;
    v44 = v6[10];
    v45 = v6[8];
    v42[9] = v6[9];
    v42[10] = v44;
    v46 = v6[7];
    v42[6] = v6[6];
    v42[7] = v46;
    v42[8] = v45;
    v47 = v6[1];
    *v42 = *v6;
    v42[1] = v47;
    v48 = v6[3];
    v42[2] = v6[2];
    v42[3] = v48;
    v49 = *(_QWORD *)(v41 + 16);
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (!v50)
      break;
    __break(1u);
LABEL_24:
    sub_23B6F4E8C((uint64_t)v54);
    swift_bridgeObjectRelease_n();
  }
  *(_QWORD *)(v41 + 16) = v51;
  return result;
}

unint64_t sub_23B6F564C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_23B796F44();
  sub_23B796F50();
  v2 = sub_23B796F74();
  return sub_23B6F56A4(a1, v2);
}

unint64_t sub_23B6F56A4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_23B6F5744(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_23B6F5808()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  _OWORD v29[11];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025E0);
  v2 = *v0;
  v3 = sub_23B796CBC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_28;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
      {
        v9 = v26 + 2;
        if (v26 + 2 >= v13)
          goto LABEL_28;
        v27 = *(_QWORD *)(v6 + 8 * v9);
        if (!v27)
          break;
      }
    }
LABEL_27:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 176 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[3];
    v19 = v17[4];
    v20 = v17[6];
    v29[5] = v17[5];
    v29[6] = v20;
    v29[3] = v18;
    v29[4] = v19;
    v21 = v17[7];
    v22 = v17[8];
    v23 = v17[10];
    v29[9] = v17[9];
    v29[10] = v23;
    v29[7] = v21;
    v29[8] = v22;
    v25 = v17[1];
    v24 = v17[2];
    v29[0] = *v17;
    v29[1] = v25;
    v29[2] = v24;
    memmove((void *)(*(_QWORD *)(v4 + 48) + v16), v17, 0xB0uLL);
    result = (void *)sub_23B6F4E8C((uint64_t)v29);
  }
  v28 = v26 + 3;
  if (v28 >= v13)
    goto LABEL_28;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23B6F5A00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025E0);
  v3 = sub_23B796CC8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v42 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v43 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v21 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v22 = v21 | (v10 << 6);
      goto LABEL_24;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v23 >= v43)
      goto LABEL_33;
    v24 = *(_QWORD *)(v42 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_33;
      v24 = *(_QWORD *)(v42 + 8 * v10);
      if (!v24)
      {
        v10 = v23 + 2;
        if (v23 + 2 >= v43)
          goto LABEL_33;
        v24 = *(_QWORD *)(v42 + 8 * v10);
        if (!v24)
          break;
      }
    }
LABEL_23:
    v7 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_24:
    v26 = (__int128 *)(*(_QWORD *)(v2 + 48) + 176 * v22);
    v28 = *v26;
    v27 = v26[1];
    v46 = v26[2];
    v29 = v26[3];
    v30 = v26[4];
    v31 = v26[6];
    v49 = v26[5];
    v50 = v31;
    v48 = v30;
    v47 = v29;
    v32 = v26[7];
    v33 = v26[8];
    v34 = v26[10];
    v53 = v26[9];
    v54 = v34;
    v51 = v32;
    v52 = v33;
    v44 = v28;
    v45 = v27;
    sub_23B796F44();
    sub_23B796A58();
    sub_23B6F4E8C((uint64_t)&v44);
    sub_23B796A64();
    swift_bridgeObjectRelease();
    result = sub_23B796F74();
    v35 = -1 << *(_BYTE *)(v4 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v8 + 8 * (v36 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v8 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v8 + 8 * v37);
      }
      while (v41 == -1);
      v11 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_OWORD *)(*(_QWORD *)(v4 + 48) + 176 * v11);
    v13 = v46;
    v14 = v44;
    v12[1] = v45;
    v12[2] = v13;
    v15 = v47;
    v16 = v48;
    v17 = v50;
    v12[5] = v49;
    v12[6] = v17;
    v12[3] = v15;
    v12[4] = v16;
    v18 = v51;
    v19 = v52;
    v20 = v54;
    v12[9] = v53;
    v12[10] = v20;
    v12[7] = v18;
    v12[8] = v19;
    *v12 = v14;
    ++*(_QWORD *)(v4 + 16);
  }
  v25 = v23 + 3;
  if (v25 >= v43)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v24 = *(_QWORD *)(v42 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v43)
      goto LABEL_33;
    v24 = *(_QWORD *)(v42 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23B6F5D44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025E0);
  v3 = sub_23B796CC8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v29 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v29)
          goto LABEL_33;
        v16 = v30[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v29)
            goto LABEL_33;
          v16 = v30[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v29)
              goto LABEL_33;
            v16 = v30[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v29)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v30[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v29)
                    goto LABEL_33;
                  v16 = v30[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 176 * v14;
      v19 = *(_QWORD *)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v37 = *(_OWORD *)(v18 + 112);
      v38 = *(_OWORD *)(v18 + 128);
      v39 = *(_OWORD *)(v18 + 144);
      v40 = *(_OWORD *)(v18 + 160);
      v33 = *(_OWORD *)(v18 + 48);
      v34 = *(_OWORD *)(v18 + 64);
      v35 = *(_OWORD *)(v18 + 80);
      v36 = *(_OWORD *)(v18 + 96);
      v31 = *(_OWORD *)(v18 + 16);
      v32 = *(_OWORD *)(v18 + 32);
      sub_23B796F44();
      sub_23B796A58();
      sub_23B796A64();
      swift_bridgeObjectRelease();
      result = sub_23B796F74();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v8 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 176 * v11;
      *(_QWORD *)v12 = v19;
      *(_QWORD *)(v12 + 8) = v20;
      *(_OWORD *)(v12 + 112) = v37;
      *(_OWORD *)(v12 + 128) = v38;
      *(_OWORD *)(v12 + 144) = v39;
      *(_OWORD *)(v12 + 160) = v40;
      *(_OWORD *)(v12 + 48) = v33;
      *(_OWORD *)(v12 + 64) = v34;
      *(_OWORD *)(v12 + 80) = v35;
      *(_OWORD *)(v12 + 96) = v36;
      *(_OWORD *)(v12 + 16) = v31;
      *(_OWORD *)(v12 + 32) = v32;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23B6F60B0()
{
  sub_23B796F44();
  Device.hash(into:)();
  return sub_23B796F74();
}

uint64_t Device.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  sub_23B796F5C();
  sub_23B796F5C();
  sub_23B796F5C();
  return sub_23B796F5C();
}

uint64_t Friend.handle.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v2 = v1[7];
  v3 = v1[9];
  v24 = v1[8];
  v25 = v3;
  v4 = v1[9];
  v26 = v1[10];
  v5 = v1[3];
  v6 = v1[5];
  v20 = v1[4];
  v7 = v20;
  v21 = v6;
  v8 = v1[5];
  v9 = v1[7];
  v22 = v1[6];
  v10 = v22;
  v23 = v9;
  v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  v12 = v1[3];
  v14 = *v1;
  v13 = v1[1];
  v18 = v1[2];
  v15 = v18;
  v19 = v12;
  a1[8] = v24;
  a1[9] = v4;
  a1[10] = v1[10];
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v2;
  *a1 = v14;
  a1[1] = v13;
  a1[2] = v15;
  a1[3] = v5;
  return sub_23B6F4E8C((uint64_t)v17);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B86C6A0]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

FindMyLocate::RequestOrigin __swiftcall RequestOrigin.init(_:)(FindMyLocate::ClientOrigin a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  signed int v5;
  id v6;
  id v7;
  FindMyLocate::ClientOrigin v8;
  Swift::Int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  FindMyLocate::RequestOrigin result;

  v2 = v1;
  v3 = *(_BYTE *)a1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
  v5 = objc_msgSend(v4, sel_processIdentifier);

  v6 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v7 = objc_msgSend(v6, sel_bundleIdentifier);

  if (v7)
  {
    v12 = sub_23B796A28();
    v14 = v13;

    sub_23B6F8270();
    v8 = sub_23B796C98();
    if ((v8 & 1) != 0)
    {
      v8 = swift_bridgeObjectRelease();
      v12 = 0xD000000000000013;
      v14 = 0x800000023B79F8B0;
    }
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  *(_BYTE *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v5;
  *(_QWORD *)(v2 + 16) = v12;
  *(_QWORD *)(v2 + 24) = v14;
  result.clientBundleIdentifier.value._object = v11;
  result.clientBundleIdentifier.value._countAndFlagsBits = v10;
  result.clientPid = v9;
  result.origin = v8;
  return result;
}

uint64_t Friend.checkFriendUpdateNeeded(with:)(_OWORD *a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char v68;
  void (*v69)(char *, uint64_t);
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  int v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  _OWORD *v109;
  _OWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD v128[11];
  _QWORD v129[22];
  _OWORD v130[11];
  uint64_t v131[44];
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  _BYTE v143[352];
  _QWORD v144[22];
  _QWORD v145[22];
  _BYTE v146[184];

  v2 = v1;
  v123 = type metadata accessor for Friend();
  v4 = MEMORY[0x24BDAC7A8](v123);
  v116 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v125 = (char *)&v104 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v115 = (uint64_t)&v104 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v121 = (char *)&v104 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v120 = (char *)&v104 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v114 = (uint64_t)&v104 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v124 = (uint64_t)&v104 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v122 = (uint64_t)&v104 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v113 = (uint64_t)&v104 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v112 = (uint64_t)&v104 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v111 = (uint64_t)&v104 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v127 = (uint64_t)&v104 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v126 = (uint64_t)&v104 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v104 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v104 - v33;
  v35 = sub_23B7968A8();
  v118 = *(_QWORD *)(v35 - 8);
  v119 = v35;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v104 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49058);
  MEMORY[0x24BDAC7A8](v117);
  v39 = (char *)&v104 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v104 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v41);
  v46 = (char *)&v104 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v104 - v47;
  if ((_s12FindMyLocate6FriendV2eeoiySbAC_ACtFZ_0(v2, a1) & 1) != 0)
  {
    v105 = v37;
    v106 = v43;
    v107 = v34;
    v108 = v32;
    v49 = v123;
    v50 = *(int *)(v123 + 48);
    v109 = v2;
    sub_23B6F7090((uint64_t)v2 + v50, (uint64_t)v48);
    v51 = *(int *)(v49 + 48);
    v110 = a1;
    sub_23B6F7090((uint64_t)a1 + v51, (uint64_t)v46);
    v52 = (uint64_t)&v39[*(int *)(v117 + 48)];
    sub_23B6F7090((uint64_t)v48, (uint64_t)v39);
    sub_23B6F7090((uint64_t)v46, v52);
    v54 = v118;
    v53 = v119;
    v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
    if (v55((uint64_t)v39, 1, v119) == 1)
    {
      sub_23B6F7190((uint64_t)v46, &qword_254302B18);
      sub_23B6F7190((uint64_t)v48, &qword_254302B18);
      if (v55(v52, 1, v53) == 1)
      {
        sub_23B6F7190((uint64_t)v39, &qword_254302B18);
        v56 = (uint64_t)v109;
        v57 = (uint64_t)v107;
        sub_23B6FA5FC((uint64_t)v109, (uint64_t)v107);
        v58 = (uint64_t)v110;
        v59 = (uint64_t)v108;
        sub_23B6FA5FC((uint64_t)v110, (uint64_t)v108);
        v60 = v124;
        v61 = (uint64_t)v125;
        v63 = (uint64_t)v120;
        v62 = (uint64_t)v121;
        goto LABEL_10;
      }
    }
    else
    {
      v65 = (uint64_t)v106;
      sub_23B6F7090((uint64_t)v39, (uint64_t)v106);
      if (v55(v52, 1, v53) != 1)
      {
        v66 = (uint64_t)v46;
        v67 = v105;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v105, v52, v53);
        sub_23B6F7284();
        v68 = sub_23B796A04();
        v69 = *(void (**)(char *, uint64_t))(v54 + 8);
        v69(v67, v53);
        sub_23B6F7190(v66, &qword_254302B18);
        sub_23B6F7190((uint64_t)v48, &qword_254302B18);
        v69((char *)v65, v53);
        sub_23B6F7190((uint64_t)v39, &qword_254302B18);
        v56 = (uint64_t)v109;
        v57 = (uint64_t)v107;
        sub_23B6FA5FC((uint64_t)v109, (uint64_t)v107);
        v58 = (uint64_t)v110;
        v59 = (uint64_t)v108;
        sub_23B6FA5FC((uint64_t)v110, (uint64_t)v108);
        v60 = v124;
        v61 = (uint64_t)v125;
        v63 = (uint64_t)v120;
        v62 = (uint64_t)v121;
        if ((v68 & 1) != 0)
        {
LABEL_10:
          v70 = sub_23B6F72CC(*(_QWORD *)(v57 + 56), *(_QWORD *)(v59 + 56));
          v71 = v57;
          v72 = v70;
          sub_23B6F9D50(v71);
          sub_23B6F9D50(v59);
          v73 = v126;
          sub_23B6FA5FC(v56, v126);
          v74 = v127;
          sub_23B6FA5FC(v58, v127);
          if ((v72 & 1) != 0)
          {
            v75 = *(unsigned __int8 *)(v73 + 176);
            v76 = v111;
            sub_23B6FA5FC(v73, v111);
            v77 = v73;
            v78 = v122;
            if (v75)
            {
              v79 = *(unsigned __int8 *)(v76 + 176);
              sub_23B6F9D50(v76);
              v80 = v112;
              sub_23B6FA5FC(v77, v112);
              v81 = v127;
              v82 = v113;
              sub_23B6FA5FC(v127, v113);
              if (v79 != 1)
              {
                sub_23B6F9D50(v82);
                sub_23B6F9D50(v80);
                sub_23B6F9D50(v81);
                sub_23B6F9D50(v126);
                v61 = (uint64_t)v125;
LABEL_26:
                v60 = v124;
                sub_23B6FA5FC(v56, v78);
                sub_23B6FA5FC(v58, v60);
                goto LABEL_27;
              }
            }
            else
            {
              sub_23B6F9D50(v76);
              v80 = v112;
              sub_23B6FA5FC(v77, v112);
              v82 = v113;
              sub_23B6FA5FC(v127, v113);
            }
            v87 = v123;
            sub_23B6FC8F4(v80 + *(int *)(v123 + 52), (uint64_t)v144, (uint64_t *)&unk_254302520);
            sub_23B6FC8F4(v82 + *(int *)(v87 + 52), (uint64_t)v145, (uint64_t *)&unk_254302520);
            sub_23B6FC8F4((uint64_t)v144, (uint64_t)v143, (uint64_t *)&unk_254302520);
            sub_23B6FC8F4((uint64_t)v145, (uint64_t)&v143[176], (uint64_t *)&unk_254302520);
            sub_23B6FC8F4((uint64_t)v144, (uint64_t)v146, (uint64_t *)&unk_254302520);
            v88 = sub_23B7251E4((uint64_t)v146);
            v61 = (uint64_t)v125;
            if (v88 == 1)
            {
              sub_23B75F4F8(v145, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F70D8);
              sub_23B6F9D50(v82);
              sub_23B6F9D50(v80);
              sub_23B6F9D50(v127);
              sub_23B6F9D50(v126);
              sub_23B6FC8F4((uint64_t)&v143[176], (uint64_t)&v132, (uint64_t *)&unk_254302520);
              sub_23B6FC8F4((uint64_t)&v132, (uint64_t)v131, (uint64_t *)&unk_254302520);
              if (sub_23B7251E4((uint64_t)v131) == 1)
              {
                sub_23B6FC8F4((uint64_t)v143, (uint64_t)v130, (uint64_t *)&unk_254302520);
                sub_23B75F4F8(v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F71CC);
                v78 = v122;
                goto LABEL_26;
              }
            }
            else
            {
              sub_23B6FC8F4((uint64_t)v144, (uint64_t)&v132, (uint64_t *)&unk_254302520);
              sub_23B6FC8F4((uint64_t)v145, (uint64_t)v131, (uint64_t *)&unk_254302520);
              if (sub_23B7251E4((uint64_t)v131) != 1)
              {
                sub_23B6FC8F4((uint64_t)v145, (uint64_t)v130, (uint64_t *)&unk_254302520);
                v99 = sub_23B796A58();
                v101 = v100;
                if (v99 == sub_23B796A58() && v101 == v102)
                  v103 = 1;
                else
                  v103 = sub_23B796ECC();
                sub_23B75F4F8(v144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F70D8);
                sub_23B75F4F8(v145, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F70D8);
                sub_23B75F4F8(v144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F70D8);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_23B75F4F8(v145, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F71CC);
                sub_23B6F9D50(v113);
                sub_23B6F9D50(v80);
                sub_23B6F9D50(v127);
                sub_23B6F9D50(v126);
                v128[8] = v140;
                v128[9] = v141;
                v128[10] = v142;
                v128[4] = v136;
                v128[5] = v137;
                v128[6] = v138;
                v128[7] = v139;
                v128[0] = v132;
                v128[1] = v133;
                v128[2] = v134;
                v128[3] = v135;
                sub_23B6F5744((uint64_t)v128);
                sub_23B6FC8F4((uint64_t)v143, (uint64_t)v129, (uint64_t *)&unk_254302520);
                sub_23B75F4F8(v129, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F71CC);
                v78 = v122;
                sub_23B6FA5FC(v56, v122);
                v60 = v124;
                sub_23B6FA5FC(v58, v124);
                v63 = (uint64_t)v120;
                v62 = (uint64_t)v121;
                if ((v103 & 1) != 0)
                {
LABEL_27:
                  v89 = v60;
                  v90 = *(unsigned __int8 *)(v78 + 177);
                  sub_23B6F9D50(v78);
                  v91 = *(unsigned __int8 *)(v89 + 177);
                  sub_23B6F9D50(v89);
                  v83 = v114;
                  sub_23B6FA5FC(v56, v114);
                  sub_23B6FA5FC(v58, v63);
                  if (v90 == v91)
                  {
                    v92 = v83;
                    v93 = *(unsigned __int8 *)(v83 + 178);
                    sub_23B6F9D50(v92);
                    v94 = *(unsigned __int8 *)(v63 + 178);
                    sub_23B6F9D50(v63);
                    sub_23B6FA5FC(v56, v62);
                    v84 = v115;
                    sub_23B6FA5FC(v58, v115);
                    if (v93 == v94)
                    {
                      v95 = *(unsigned __int8 *)(v62 + 179);
                      sub_23B6F9D50(v62);
                      v96 = *(unsigned __int8 *)(v84 + 179);
                      sub_23B6F9D50(v84);
                      sub_23B6FA5FC(v56, v61);
                      v85 = v116;
                      sub_23B6FA5FC(v58, v116);
                      if (v95 == v96)
                      {
                        v97 = *(_BYTE *)(v61 + 180);
                        sub_23B6F9D50(v61);
                        v98 = *(_BYTE *)(v85 + 180);
                        sub_23B6F9D50(v85);
                        v64 = v97 ^ v98;
                        return v64 & 1;
                      }
                      goto LABEL_20;
                    }
LABEL_19:
                    sub_23B6F9D50(v84);
                    sub_23B6F9D50(v62);
                    sub_23B6FA5FC(v56, v61);
                    v85 = v116;
                    sub_23B6FA5FC(v58, v116);
LABEL_20:
                    sub_23B6F9D50(v85);
                    sub_23B6F9D50(v61);
                    v64 = 1;
                    return v64 & 1;
                  }
LABEL_18:
                  sub_23B6F9D50(v63);
                  sub_23B6F9D50(v83);
                  sub_23B6FA5FC(v56, v62);
                  v84 = v115;
                  sub_23B6FA5FC(v58, v115);
                  goto LABEL_19;
                }
LABEL_17:
                sub_23B6F9D50(v60);
                sub_23B6F9D50(v78);
                v83 = v114;
                sub_23B6FA5FC(v56, v114);
                sub_23B6FA5FC(v58, v63);
                goto LABEL_18;
              }
              sub_23B6FC8F4((uint64_t)v144, (uint64_t)v128, (uint64_t *)&unk_254302520);
              sub_23B6FC8F4((uint64_t)v144, (uint64_t)v129, (uint64_t *)&unk_254302520);
              sub_23B6F4E8C((uint64_t)v129);
              sub_23B6F4E8C((uint64_t)v128);
              sub_23B6F9D50(v113);
              sub_23B6F9D50(v80);
              sub_23B6F9D50(v127);
              sub_23B6F9D50(v126);
              v130[8] = v140;
              v130[9] = v141;
              v130[10] = v142;
              v130[4] = v136;
              v130[5] = v137;
              v130[6] = v138;
              v130[7] = v139;
              v130[0] = v132;
              v130[1] = v133;
              v130[2] = v134;
              v130[3] = v135;
              sub_23B6F5744((uint64_t)v130);
            }
            v78 = v122;
            v60 = v124;
            memcpy(v131, v143, sizeof(v131));
            sub_23B75F3E4(v131);
LABEL_16:
            sub_23B6FA5FC(v56, v78);
            sub_23B6FA5FC(v58, v60);
            goto LABEL_17;
          }
LABEL_15:
          sub_23B6F9D50(v74);
          sub_23B6F9D50(v73);
          v78 = v122;
          goto LABEL_16;
        }
LABEL_14:
        sub_23B6F9D50(v57);
        sub_23B6F9D50(v59);
        v73 = v126;
        sub_23B6FA5FC(v56, v126);
        v74 = v127;
        sub_23B6FA5FC(v58, v127);
        goto LABEL_15;
      }
      sub_23B6F7190((uint64_t)v46, &qword_254302B18);
      sub_23B6F7190((uint64_t)v48, &qword_254302B18);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v65, v53);
    }
    sub_23B6F7190((uint64_t)v39, &qword_256A49058);
    v56 = (uint64_t)v109;
    v57 = (uint64_t)v107;
    sub_23B6FA5FC((uint64_t)v109, (uint64_t)v107);
    v58 = (uint64_t)v110;
    v59 = (uint64_t)v108;
    sub_23B6FA5FC((uint64_t)v110, (uint64_t)v108);
    v60 = v124;
    v61 = (uint64_t)v125;
    v63 = (uint64_t)v120;
    v62 = (uint64_t)v121;
    goto LABEL_14;
  }
  v64 = 0;
  return v64 & 1;
}

uint64_t sub_23B6F7090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B6F70D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23B6F7190(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23B6F71CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23B6F7284()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A49060;
  if (!qword_256A49060)
  {
    v1 = sub_23B7968A8();
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BDCE958], v1);
    atomic_store(result, (unint64_t *)&qword_256A49060);
  }
  return result;
}

uint64_t sub_23B6F72CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t result;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _BOOL8 v36;
  unsigned __int8 *v37;
  unsigned __int8 v38;
  unint64_t v39;
  char v40;
  char v41;
  void (*v42)(char *, uint64_t);
  int64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;

  v4 = sub_23B7968A8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v43 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49080);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (unsigned __int8 *)&v43 - v16;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v47 = a2;
  v48 = 0;
  v46 = a1;
  v20 = *(_QWORD *)(a1 + 64);
  v19 = a1 + 64;
  v18 = v20;
  v21 = 1 << *(_BYTE *)(v19 - 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v18;
  v44 = v19;
  v45 = (unint64_t)(v21 + 63) >> 6;
  v43 = v45 - 1;
  while (1)
  {
    if (v23)
    {
      v24 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v25 = v47;
      v26 = v24 | (v48 << 6);
LABEL_8:
      v27 = *(_QWORD *)(v46 + 56);
      *v14 = *(_BYTE *)(*(_QWORD *)(v46 + 48) + v26);
      v28 = v27 + *(_QWORD *)(v5 + 72) * v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49088);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v14[*(int *)(v29 + 48)], v28, v4);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 0, 1, v29);
      goto LABEL_30;
    }
    v25 = v47;
    v30 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v30 < v45)
    {
      v31 = *(_QWORD *)(v44 + 8 * v30);
      if (v31)
        goto LABEL_12;
      v32 = v48 + 2;
      ++v48;
      if (v30 + 1 < v45)
      {
        v31 = *(_QWORD *)(v44 + 8 * v32);
        if (v31)
          goto LABEL_15;
        v48 = v30 + 1;
        if (v30 + 2 < v45)
        {
          v31 = *(_QWORD *)(v44 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          v48 = v30 + 2;
          if (v30 + 3 < v45)
          {
            v31 = *(_QWORD *)(v44 + 8 * (v30 + 3));
            if (v31)
            {
              v30 += 3;
              goto LABEL_12;
            }
            v32 = v30 + 4;
            v48 = v30 + 3;
            if (v30 + 4 < v45)
              break;
          }
        }
      }
    }
LABEL_29:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49088);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v14, 1, 1, v33);
    v23 = 0;
LABEL_30:
    sub_23B6FC8F4((uint64_t)v14, (uint64_t)v17, &qword_256A49080);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49088);
    v35 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v17, 1, v34);
    v36 = v35 == 1;
    if (v35 == 1)
      return v36;
    v37 = &v17[*(int *)(v34 + 48)];
    v38 = *v17;
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 32))(v10, v37, v4);
    v39 = sub_23B6F8300(v38);
    if ((v40 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return 0;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, *(_QWORD *)(v25 + 56) + *(_QWORD *)(v5 + 72) * v39, v4);
    sub_23B6F7284();
    v41 = sub_23B796A04();
    v42 = *(void (**)(char *, uint64_t))(v5 + 8);
    v42(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v42)(v10, v4);
    if ((v41 & 1) == 0)
      return v36;
  }
  v31 = *(_QWORD *)(v44 + 8 * v32);
  if (v31)
  {
LABEL_15:
    v30 = v32;
LABEL_12:
    v23 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v48 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v45)
    {
      v48 = v43;
      goto LABEL_29;
    }
    v31 = *(_QWORD *)(v44 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for FriendStreamChange.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12FindMyLocate7GroupIDOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B6F77A4 + 4 * byte_23B798925[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B6F77D8 + 4 * byte_23B798920[v4]))();
}

uint64_t sub_23B6F77D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6F77E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B6F77E8);
  return result;
}

uint64_t sub_23B6F77F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B6F77FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B6F7800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6F7808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t Friend.init(handle:type:expiry:createdAt:origin:secureLocationsCapable:shallowOrLiveSecureLocationsCapable:fallbackToLegacyAllowed:fallbackToLegacy:ownerHandle:)@<X0>(_OWORD *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int *v25;
  _BYTE v27[184];

  v18 = *a2;
  v19 = *a5;
  sub_23B6FC8F4(a11, (uint64_t)v27, (uint64_t *)&unk_254302520);
  v20 = a1[9];
  *(_OWORD *)(a9 + 128) = a1[8];
  *(_OWORD *)(a9 + 144) = v20;
  *(_OWORD *)(a9 + 160) = a1[10];
  v21 = a1[5];
  *(_OWORD *)(a9 + 64) = a1[4];
  *(_OWORD *)(a9 + 80) = v21;
  v22 = a1[7];
  *(_OWORD *)(a9 + 96) = a1[6];
  *(_OWORD *)(a9 + 112) = v22;
  v23 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v23;
  v24 = a1[3];
  *(_OWORD *)(a9 + 32) = a1[2];
  *(_OWORD *)(a9 + 48) = v24;
  *(_BYTE *)(a9 + 176) = v18;
  v25 = (int *)type metadata accessor for Friend();
  sub_23B6FC8F4(a3, a9 + v25[10], &qword_254302B18);
  *(_BYTE *)(a9 + v25[14]) = v19;
  *(_BYTE *)(a9 + 177) = a6;
  *(_BYTE *)(a9 + 178) = a7;
  *(_BYTE *)(a9 + 179) = a8;
  *(_BYTE *)(a9 + 180) = a10;
  *(_BYTE *)(a9 + v25[11]) = 2;
  sub_23B6FC8F4((uint64_t)v27, a9 + v25[13], (uint64_t *)&unk_254302520);
  return sub_23B6FC8F4(a4, a9 + v25[12], &qword_254302B18);
}

uint64_t Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  double v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  int v59;
  unint64_t v60;
  void (*v61)(char *, unint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int v68;
  unint64_t v69;
  uint64_t v70;
  _BOOL8 v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  _QWORD *v77;
  int v78;
  unint64_t v79;
  uint64_t v80;
  _BOOL8 v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  int v85;
  int v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  double v95;
  double v96;
  uint64_t v97;
  int64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  uint64_t result;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  void (*v116)(char *, uint64_t, uint64_t, uint64_t);
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE v132[7];
  _QWORD *v133;

  v127 = a4;
  v128 = a7;
  v124 = a5;
  v125 = a8;
  v126 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v115 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v113 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v117 = (char *)&v113 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v113 - v19;
  v21 = sub_23B7968A8();
  v130 = *(_QWORD *)(v21 - 8);
  v131 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v118 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v119 = (char *)&v113 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v121 = (char *)&v113 - v26;
  sub_23B782D6C(a1, a2);
  swift_bridgeObjectRelease();
  v123 = sub_23B796A58();
  v28 = v27;
  swift_bridgeObjectRelease();
  v29 = a6 + 64;
  v30 = 1 << *(_BYTE *)(a6 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & *(_QWORD *)(a6 + 64);
  v33 = (unint64_t)(v30 + 63) >> 6;
  v122 = v28;
  swift_bridgeObjectRetain();
  v34 = 0;
  v129 = MEMORY[0x24BEE4B00];
  v120 = v20;
  while (v32)
  {
    v35 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    v36 = v35 | (v34 << 6);
LABEL_5:
    v37 = *(double *)(*(_QWORD *)(a6 + 56) + 8 * v36);
    swift_bridgeObjectRetain();
    v38 = sub_23B796DB8();
    swift_bridgeObjectRelease();
    if (v38 <= 2)
    {
      if (v37 == 0.0)
      {
        sub_23B796824();
        v42 = v130;
        v43 = v131;
        v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56);
        v116(v20, 0, 1, v131);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v20, 1, v43) != 1)
        {
          v114 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
          v114(v119, v20, v43);
          v67 = (_QWORD *)v129;
          LODWORD(v116) = swift_isUniquelyReferenced_nonNull_native();
          v133 = v67;
          v69 = sub_23B6F8300(v38);
          v70 = v67[2];
          v71 = (v68 & 1) == 0;
          v72 = v70 + v71;
          if (__OFADD__(v70, v71))
            goto LABEL_70;
          if (v67[3] >= v72)
          {
            v75 = v130;
            if ((v116 & 1) == 0)
            {
              LODWORD(v129) = v68;
              sub_23B782094();
              LOBYTE(v68) = v129;
              goto LABEL_36;
            }
          }
          else
          {
            LODWORD(v129) = v68;
            sub_23B6F857C(v72, (int)v116);
            v73 = sub_23B6F8300(v38);
            v74 = v68 & 1;
            LOBYTE(v68) = v129;
            if ((v129 & 1) != v74)
              goto LABEL_74;
            v69 = v73;
LABEL_36:
            v75 = v130;
          }
          v88 = v133;
          if ((v68 & 1) != 0)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v75 + 40))(v133[7] + *(_QWORD *)(v75 + 72) * v69, v119, v131);
            goto LABEL_57;
          }
          v133[(v69 >> 6) + 8] |= 1 << v69;
          *(_BYTE *)(v88[6] + v69) = v38;
          v114((char *)(v88[7] + *(_QWORD *)(v75 + 72) * v69), v119, v131);
          v89 = v88[2];
          v90 = __OFADD__(v89, 1);
          v91 = v89 + 1;
          if (v90)
            goto LABEL_72;
          goto LABEL_56;
        }
        sub_23B70C8AC((uint64_t)v20);
        v44 = v129;
        swift_bridgeObjectRetain();
        v45 = sub_23B6F8300(v38);
        v47 = v46;
        swift_bridgeObjectRelease();
        if ((v47 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v133 = (_QWORD *)v44;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_23B782094();
            v44 = (uint64_t)v133;
          }
          v49 = v131;
          v50 = (uint64_t)v117;
          (*(void (**)(char *, unint64_t, uint64_t))(v130 + 32))(v117, *(_QWORD *)(v44 + 56) + *(_QWORD *)(v130 + 72) * v45, v131);
          v129 = v44;
          sub_23B782920(v45, v44);
          swift_bridgeObjectRelease();
          v51 = v49;
          v52 = 0;
        }
        else
        {
          v52 = 1;
          v51 = v131;
          v50 = (uint64_t)v117;
        }
        v116((char *)v50, v52, 1, v51);
        sub_23B70C8AC(v50);
        v20 = v120;
      }
      else
      {
        sub_23B79686C();
        v54 = v130;
        v53 = v131;
        v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56);
        v116(v16, 0, 1, v131);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v16, 1, v53) == 1)
        {
          sub_23B70C8AC((uint64_t)v16);
          v55 = v129;
          swift_bridgeObjectRetain();
          v56 = sub_23B6F8300(v38);
          v58 = v57;
          swift_bridgeObjectRelease();
          if ((v58 & 1) != 0)
          {
            v59 = swift_isUniquelyReferenced_nonNull_native();
            v133 = (_QWORD *)v55;
            v20 = v120;
            if (!v59)
            {
              sub_23B782094();
              v55 = (uint64_t)v133;
            }
            v60 = *(_QWORD *)(v55 + 56) + *(_QWORD *)(v130 + 72) * v56;
            v61 = *(void (**)(char *, unint64_t, uint64_t))(v130 + 32);
            v62 = (uint64_t)v115;
            v129 = v56;
            v63 = v131;
            v61(v115, v60, v131);
            v64 = v129;
            v129 = v55;
            sub_23B782920(v64, v55);
            swift_bridgeObjectRelease();
            v65 = v63;
            v66 = 0;
          }
          else
          {
            v66 = 1;
            v62 = (uint64_t)v115;
            v65 = v131;
            v20 = v120;
          }
          v116((char *)v62, v66, 1, v65);
          sub_23B70C8AC(v62);
        }
        else
        {
          v76 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
          v76(v118, v16, v53);
          v77 = (_QWORD *)v129;
          LODWORD(v116) = swift_isUniquelyReferenced_nonNull_native();
          v133 = v77;
          v79 = sub_23B6F8300(v38);
          v80 = v77[2];
          v81 = (v78 & 1) == 0;
          v82 = v80 + v81;
          if (__OFADD__(v80, v81))
            goto LABEL_71;
          v114 = v76;
          if (v77[3] >= v82)
          {
            v87 = v130;
            v20 = v120;
            if ((v116 & 1) != 0)
              goto LABEL_53;
            LODWORD(v129) = v78;
            sub_23B782094();
            LOBYTE(v78) = v129;
          }
          else
          {
            v83 = v78;
            sub_23B6F857C(v82, (int)v116);
            v84 = sub_23B6F8300(v38);
            v85 = v78 & 1;
            LOBYTE(v78) = v83;
            v86 = v83 & 1;
            v20 = v120;
            if (v86 != v85)
              goto LABEL_74;
            v79 = v84;
          }
          v87 = v130;
LABEL_53:
          v88 = v133;
          if ((v78 & 1) != 0)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v87 + 40))(v133[7] + *(_QWORD *)(v87 + 72) * v79, v118, v131);
            goto LABEL_57;
          }
          v133[(v79 >> 6) + 8] |= 1 << v79;
          *(_BYTE *)(v88[6] + v79) = v38;
          v114((char *)(v88[7] + *(_QWORD *)(v87 + 72) * v79), v118, v131);
          v92 = v88[2];
          v90 = __OFADD__(v92, 1);
          v91 = v92 + 1;
          if (v90)
            goto LABEL_73;
LABEL_56:
          v88[2] = v91;
LABEL_57:
          v129 = (unint64_t)v133;
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  v39 = v34 + 1;
  if (__OFADD__(v34, 1))
  {
    __break(1u);
    goto LABEL_69;
  }
  if (v39 >= v33)
    goto LABEL_60;
  v40 = *(_QWORD *)(v29 + 8 * v39);
  ++v34;
  if (v40)
    goto LABEL_20;
  v34 = v39 + 1;
  if (v39 + 1 >= v33)
    goto LABEL_60;
  v40 = *(_QWORD *)(v29 + 8 * v34);
  if (v40)
    goto LABEL_20;
  v34 = v39 + 2;
  if (v39 + 2 >= v33)
    goto LABEL_60;
  v40 = *(_QWORD *)(v29 + 8 * v34);
  if (v40)
  {
LABEL_20:
    v32 = (v40 - 1) & v40;
    v36 = __clz(__rbit64(v40)) + (v34 << 6);
    goto LABEL_5;
  }
  v41 = v39 + 3;
  if (v41 < v33)
  {
    v40 = *(_QWORD *)(v29 + 8 * v41);
    if (!v40)
    {
      while (1)
      {
        v34 = v41 + 1;
        if (__OFADD__(v41, 1))
          break;
        if (v34 >= v33)
          goto LABEL_60;
        v40 = *(_QWORD *)(v29 + 8 * v34);
        ++v41;
        if (v40)
          goto LABEL_20;
      }
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      result = sub_23B796EF0();
      __break(1u);
      return result;
    }
    v34 = v41;
    goto LABEL_20;
  }
LABEL_60:
  swift_release();
  v93 = v129;
  swift_bridgeObjectRetain();
  v94 = v121;
  sub_23B79689C();
  sub_23B796878();
  v96 = v95;
  (*(void (**)(char *, uint64_t))(v130 + 8))(v94, v131);
  v97 = v128;
  v98 = *(_QWORD *)(v128 + 16);
  v99 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v98)
  {
    v133 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23B6F3FB8(0, v98, 0);
    v99 = v133;
    v100 = v97 + 40;
    v102 = v126;
    v101 = v127;
    do
    {
      v103 = sub_23B796A58();
      v105 = v104;
      v133 = v99;
      v107 = v99[2];
      v106 = v99[3];
      if (v107 >= v106 >> 1)
      {
        sub_23B6F3FB8(v106 > 1, v107 + 1, 1);
        v99 = v133;
      }
      v100 += 16;
      v99[2] = v107 + 1;
      v108 = &v99[2 * v107];
      v108[4] = v103;
      v108[5] = v105;
      --v98;
    }
    while (v98);
  }
  else
  {
    v102 = v126;
    v101 = v127;
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v110 = v125;
  v112 = v122;
  v111 = v123;
  *v125 = v123;
  v110[1] = v112;
  v110[2] = v111;
  v110[3] = v112;
  *((_BYTE *)v110 + 32) = 0;
  *(_DWORD *)((char *)v110 + 33) = (_DWORD)v133;
  *((_DWORD *)v110 + 9) = *(_DWORD *)((char *)&v133 + 3);
  v110[5] = 0;
  v110[6] = 0;
  v110[7] = v93;
  *((double *)v110 + 8) = floor(v96 * 1000.0);
  *(_OWORD *)(v110 + 9) = 0u;
  *(_OWORD *)(v110 + 11) = 0u;
  *((_BYTE *)v110 + 104) = 1;
  *((_DWORD *)v110 + 27) = *(_DWORD *)&v132[3];
  *(_DWORD *)((char *)v110 + 105) = *(_DWORD *)v132;
  v110[14] = v124;
  *(_OWORD *)(v110 + 15) = 0u;
  *(_OWORD *)(v110 + 17) = 0u;
  v110[19] = (uint64_t)v99;
  v110[20] = v102;
  v110[21] = v101;
  return result;
}

unint64_t sub_23B6F8270()
{
  unint64_t result;

  result = qword_254302FA0;
  if (!qword_254302FA0)
  {
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254302FA0);
  }
  return result;
}

unint64_t sub_23B6F82B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254302C38;
  if (!qword_254302C38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254303FE8);
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254302C38);
  }
  return result;
}

unint64_t sub_23B6F8300(unsigned __int8 a1)
{
  uint64_t v2;

  sub_23B796F44();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  v2 = sub_23B796F74();
  return sub_23B6F83C4(a1, v2);
}

unint64_t sub_23B6F83C4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xD000000000000013;
          v8 = 0x800000023B79F720;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v8 = 0x800000023B79F740;
          v7 = 0xD000000000000010;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xEA0000000000464DLL;
            if (v7 != 0x46746C7561666564)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v7 = 0x46746C7561666564;
        v8 = 0xEA0000000000464DLL;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0xD000000000000013;
      else
        v10 = 0xD000000000000010;
      if (v9 == 1)
        v11 = 0x800000023B79F720;
      else
        v11 = 0x800000023B79F740;
      if (v7 != v10)
        goto LABEL_19;
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      v12 = sub_23B796ECC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

uint64_t sub_23B6F857C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  const char *v39;
  char *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v44 = sub_23B7968A8();
  v5 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A486A8);
  v9 = sub_23B796D94();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v38 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v37 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v43 = v18;
  v39 = "kFMFGroupIdOneToOne";
  v40 = "ddress";
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_33;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v17 >= v41)
              goto LABEL_33;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v17 = v25;
      }
    }
LABEL_23:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v21);
    v27 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v43))(v7, *(_QWORD *)(v8 + 56) + v27 * v21, v44);
    sub_23B796F44();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    result = sub_23B796F74();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_BYTE *)(*(_QWORD *)(v10 + 48) + v19) = v26;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v27 * v19, v7, v44);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v42;
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_23B6F8954(_QWORD *a1)
{
  return Handle.encode(to:)(a1);
}

uint64_t Handle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302C68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v35 = *(_QWORD *)(v1 + 24);
  v36 = v7;
  v34 = *(unsigned __int8 *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v32 = *(_QWORD *)(v1 + 48);
  v33 = v8;
  v9 = *(_QWORD *)(v1 + 56);
  v30 = *(_QWORD *)(v1 + 72);
  v31 = v9;
  v10 = *(_QWORD *)(v1 + 80);
  v27 = *(_QWORD *)(v1 + 88);
  v28 = *(_QWORD *)(v1 + 96);
  v29 = v10;
  v26 = *(unsigned __int8 *)(v1 + 104);
  v11 = *(_QWORD *)(v1 + 112);
  v12 = *(_QWORD *)(v1 + 120);
  v24 = *(_QWORD *)(v1 + 128);
  v25 = v11;
  v13 = *(_QWORD *)(v1 + 136);
  v22 = *(_QWORD *)(v1 + 144);
  v23 = v12;
  v20 = *(_QWORD *)(v1 + 152);
  v21 = v13;
  v19[1] = *(_QWORD *)(v1 + 160);
  v19[2] = *(_QWORD *)(v1 + 168);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B6F98AC();
  v14 = v3;
  sub_23B796F8C();
  LOBYTE(v38) = 0;
  v15 = v37;
  sub_23B796E78();
  if (v15)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = v34;
  v17 = v31;
  LOBYTE(v38) = 1;
  sub_23B796E54();
  LOBYTE(v38) = v16;
  v39 = 2;
  sub_23B6F9A2C();
  sub_23B796E6C();
  v37 = v4;
  LOBYTE(v38) = 3;
  sub_23B796E54();
  v38 = v17;
  v39 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302E18);
  sub_23B6F99B0();
  sub_23B796EA8();
  LOBYTE(v38) = 5;
  sub_23B796E90();
  LOBYTE(v38) = 6;
  sub_23B796E54();
  LOBYTE(v38) = 7;
  sub_23B796E54();
  LOBYTE(v38) = 8;
  sub_23B796E60();
  v38 = v25;
  v39 = 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
  sub_23B6F984C(&qword_254302C30, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23B796E6C();
  LOBYTE(v38) = 10;
  sub_23B796E54();
  LOBYTE(v38) = 11;
  sub_23B796E54();
  v38 = v20;
  v39 = 12;
  sub_23B796EA8();
  LOBYTE(v38) = 13;
  sub_23B796E54();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v14);
}

uint64_t sub_23B6F8D9C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Handle.init(from:)(a1, a2);
}

uint64_t Handle.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _QWORD v80[4];
  char v81;
  _BYTE v82[7];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  _BYTE v92[7];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  _BYTE v102[7];
  _DWORD v103[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302728);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_23B6F98AC();
  sub_23B796F80();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  LOBYTE(v80[0]) = 0;
  v11 = sub_23B796E00();
  LOBYTE(v80[0]) = 1;
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_23B796DDC();
  v67 = v13;
  v62 = v14;
  v63 = v11;
  LOBYTE(v69) = 2;
  v16 = v15;
  sub_23B6F996C();
  swift_bridgeObjectRetain();
  sub_23B796DF4();
  v66 = v16;
  LODWORD(v13) = LOBYTE(v80[0]);
  LOBYTE(v80[0]) = 3;
  v61 = sub_23B796DDC();
  v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302E18);
  LOBYTE(v69) = 4;
  sub_23B6F98F0();
  swift_bridgeObjectRetain();
  sub_23B796E30();
  v65 = v18;
  v19 = v80[0];
  LOBYTE(v80[0]) = 5;
  swift_bridgeObjectRetain();
  sub_23B796E18();
  v21 = v20;
  v60 = v19;
  LOBYTE(v80[0]) = 6;
  v59 = sub_23B796DDC();
  LOBYTE(v80[0]) = 7;
  v23 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_23B796DDC();
  v64 = v23;
  v57 = v24;
  v58 = v13;
  LOBYTE(v80[0]) = 8;
  v26 = v25;
  swift_bridgeObjectRetain();
  v56 = sub_23B796DE8();
  v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
  LOBYTE(v69) = 9;
  v53 = sub_23B6F984C(&qword_2543026C8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_23B796DF4();
  v28 = v80[0];
  LOBYTE(v80[0]) = 10;
  v54 = v28;
  swift_bridgeObjectRetain();
  v50 = sub_23B796DDC();
  v52 = v29;
  v55 = 0;
  LOBYTE(v80[0]) = 11;
  swift_bridgeObjectRetain();
  v30 = v55;
  v49 = sub_23B796DDC();
  v51 = v31;
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v55)
      return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v69) = 12;
    swift_bridgeObjectRetain();
    sub_23B796E30();
    v32 = v80[0];
    v101 = 13;
    swift_bridgeObjectRetain();
    v33 = sub_23B796DDC();
    v53 = v34;
    v35 = v33;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)&v69 = v63;
    *((_QWORD *)&v69 + 1) = v67;
    *(_QWORD *)&v70 = v62;
    *((_QWORD *)&v70 + 1) = v66;
    LOBYTE(v71) = v58;
    *((_QWORD *)&v71 + 1) = v61;
    *(_QWORD *)&v72 = v65;
    *((_QWORD *)&v72 + 1) = v60;
    *(_QWORD *)&v73 = v21;
    *((_QWORD *)&v73 + 1) = v59;
    *(_QWORD *)&v74 = v64;
    *((_QWORD *)&v74 + 1) = v57;
    *(_QWORD *)&v75 = v27;
    v47 = v27;
    v48 = v35;
    BYTE8(v75) = v56;
    v36 = v54;
    *(_QWORD *)&v76 = v54;
    *((_QWORD *)&v76 + 1) = v50;
    *(_QWORD *)&v77 = v52;
    *((_QWORD *)&v77 + 1) = v49;
    *(_QWORD *)&v78 = v51;
    *((_QWORD *)&v78 + 1) = v32;
    *(_QWORD *)&v79 = v35;
    *((_QWORD *)&v79 + 1) = v53;
    sub_23B6F4E8C((uint64_t)&v69);
    v37 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = v78;
    a2[8] = v77;
    a2[9] = v41;
    a2[10] = v79;
    v42 = v74;
    a2[4] = v73;
    a2[5] = v42;
    v43 = v76;
    a2[6] = v75;
    a2[7] = v43;
    v44 = v70;
    *a2 = v69;
    a2[1] = v44;
    v45 = v72;
    a2[2] = v71;
    a2[3] = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    v80[0] = v63;
    v80[1] = v37;
    v80[2] = v62;
    v80[3] = v66;
    v81 = v58;
    *(_DWORD *)v82 = v103[0];
    *(_DWORD *)&v82[3] = *(_DWORD *)((char *)v103 + 3);
    v83 = v61;
    v84 = v65;
    v85 = v38;
    v86 = v21;
    v87 = v59;
    v88 = v64;
    v89 = v57;
    v90 = v39;
    v91 = v56;
    *(_DWORD *)&v92[3] = *(_DWORD *)&v102[3];
    *(_DWORD *)v92 = *(_DWORD *)v102;
    v93 = v36;
    v94 = v50;
    v95 = v52;
    v96 = v49;
    v97 = v40;
    v98 = v32;
    v99 = v48;
    v100 = v53;
    return sub_23B6F5744((uint64_t)v80);
  }
  return result;
}

uint64_t sub_23B6F984C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254303FE8);
    v8 = a2;
    result = MEMORY[0x23B86C6B8](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B6F98AC()
{
  unint64_t result;

  result = qword_254302DF0;
  if (!qword_254302DF0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79EE78, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DF0);
  }
  return result;
}

unint64_t sub_23B6F98F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2543026B8;
  if (!qword_2543026B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254302E18);
    v2[0] = sub_23B783210();
    v2[1] = sub_23B6EE178(&qword_254302670, MEMORY[0x24BDCE960]);
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2543026B8);
  }
  return result;
}

unint64_t sub_23B6F996C()
{
  unint64_t result;

  result = qword_2543026B0;
  if (!qword_2543026B0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for IDSStatus, &type metadata for IDSStatus);
    atomic_store(result, (unint64_t *)&qword_2543026B0);
  }
  return result;
}

unint64_t sub_23B6F99B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254302C28;
  if (!qword_254302C28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254302E18);
    v2[0] = sub_23B6FC650();
    v2[1] = sub_23B6EE178(&qword_254302BF8, MEMORY[0x24BDCE920]);
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254302C28);
  }
  return result;
}

unint64_t sub_23B6F9A2C()
{
  unint64_t result;

  result = qword_254302C20;
  if (!qword_254302C20)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for IDSStatus, &type metadata for IDSStatus);
    atomic_store(result, (unint64_t *)&qword_254302C20);
  }
  return result;
}

void sub_23B6F9A70()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[11];

  sub_23B796F44();
  v1 = v0[9];
  v6[8] = v0[8];
  v6[9] = v1;
  v6[10] = v0[10];
  v2 = v0[5];
  v6[4] = v0[4];
  v6[5] = v2;
  v3 = v0[7];
  v6[6] = v0[6];
  v6[7] = v3;
  v4 = v0[1];
  v6[0] = *v0;
  v6[1] = v4;
  v5 = v0[3];
  v6[2] = v0[2];
  v6[3] = v5;
  sub_23B796A58();
  sub_23B6F4E8C((uint64_t)v6);
  sub_23B796A64();
  swift_bridgeObjectRelease();
  sub_23B6F5744((uint64_t)v6);
  __asm { BR              X10 }
}

uint64_t sub_23B6F9B2C()
{
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

uint64_t initializeWithCopy for Handle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  v9 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Handle()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B6F9D50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Friend();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for Friend(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[10];
  v5 = sub_23B7968A8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[12];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  result = *(_QWORD *)(a1 + a2[13] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Friend(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = v9;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  v40 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v40;
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  v13 = a3[10];
  __dst = (void *)(a1 + v13);
  v14 = (const void *)(a2 + v13);
  v15 = sub_23B7968A8();
  v41 = *(_QWORD *)(v15 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    v18 = v41;
  }
  else
  {
    v18 = v41;
    (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(__dst, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v15);
  }
  v19 = a3;
  v20 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  if (v16((const void *)(a2 + v20), 1, v15))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v21, v22, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v15);
  }
  v24 = a3[13];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 8);
  if (v27)
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_QWORD *)(v25 + 8) = v27;
    v28 = *(_QWORD *)(v26 + 24);
    *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
    *(_QWORD *)(v25 + 24) = v28;
    *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
    v29 = *(_QWORD *)(v26 + 48);
    *(_QWORD *)(v25 + 40) = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 48) = v29;
    *(_QWORD *)(v25 + 56) = *(_QWORD *)(v26 + 56);
    *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
    v30 = *(_QWORD *)(v26 + 88);
    *(_QWORD *)(v25 + 80) = *(_QWORD *)(v26 + 80);
    *(_QWORD *)(v25 + 88) = v30;
    *(_QWORD *)(v25 + 96) = *(_QWORD *)(v26 + 96);
    *(_BYTE *)(v25 + 104) = *(_BYTE *)(v26 + 104);
    v31 = *(_QWORD *)(v26 + 120);
    *(_QWORD *)(v25 + 112) = *(_QWORD *)(v26 + 112);
    *(_QWORD *)(v25 + 120) = v31;
    v32 = *(_QWORD *)(v26 + 136);
    *(_QWORD *)(v25 + 128) = *(_QWORD *)(v26 + 128);
    *(_QWORD *)(v25 + 136) = v32;
    v33 = *(_QWORD *)(v26 + 152);
    *(_QWORD *)(v25 + 144) = *(_QWORD *)(v26 + 144);
    *(_QWORD *)(v25 + 152) = v33;
    v42 = *(_QWORD *)(v26 + 168);
    *(_QWORD *)(v25 + 160) = *(_QWORD *)(v26 + 160);
    *(_QWORD *)(v25 + 168) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = *(_OWORD *)(v26 + 144);
    *(_OWORD *)(v25 + 128) = *(_OWORD *)(v26 + 128);
    *(_OWORD *)(v25 + 144) = v34;
    *(_OWORD *)(v25 + 160) = *(_OWORD *)(v26 + 160);
    v35 = *(_OWORD *)(v26 + 80);
    *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
    *(_OWORD *)(v25 + 80) = v35;
    v36 = *(_OWORD *)(v26 + 112);
    *(_OWORD *)(v25 + 96) = *(_OWORD *)(v26 + 96);
    *(_OWORD *)(v25 + 112) = v36;
    v37 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v37;
    v38 = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v25 + 48) = v38;
  }
  *(_BYTE *)(a1 + v19[14]) = *(_BYTE *)(a2 + v19[14]);
  return a1;
}

uint64_t _s12FindMyLocate6FriendV2eeoiySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _OWORD v26[11];
  _OWORD v27[11];

  v4 = type metadata accessor for Friend();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v26 - v8;
  v10 = a1[9];
  v26[8] = a1[8];
  v26[9] = v10;
  v26[10] = a1[10];
  v11 = a1[5];
  v26[4] = a1[4];
  v26[5] = v11;
  v12 = a1[7];
  v26[6] = a1[6];
  v26[7] = v12;
  v13 = a1[1];
  v26[0] = *a1;
  v26[1] = v13;
  v14 = a1[3];
  v26[2] = a1[2];
  v26[3] = v14;
  v15 = a2[9];
  v27[8] = a2[8];
  v27[9] = v15;
  v27[10] = a2[10];
  v16 = a2[5];
  v27[4] = a2[4];
  v27[5] = v16;
  v17 = a2[7];
  v27[6] = a2[6];
  v27[7] = v17;
  v18 = a2[1];
  v27[0] = *a2;
  v27[1] = v18;
  v19 = a2[3];
  v27[2] = a2[2];
  v27[3] = v19;
  v20 = sub_23B796A58();
  v22 = v21;
  if (v20 == sub_23B796A58() && v22 == v23)
  {
    sub_23B6F4E8C((uint64_t)v26);
    sub_23B6F4E8C((uint64_t)v27);
    swift_bridgeObjectRelease_n();
    sub_23B6F5744((uint64_t)v27);
    sub_23B6F5744((uint64_t)v26);
    sub_23B6FA5FC((uint64_t)a1, (uint64_t)v9);
    sub_23B6FA5FC((uint64_t)a2, (uint64_t)v7);
    goto LABEL_5;
  }
  v24 = sub_23B796ECC();
  sub_23B6F4E8C((uint64_t)v26);
  sub_23B6F4E8C((uint64_t)v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B6F5744((uint64_t)v27);
  sub_23B6F5744((uint64_t)v26);
  sub_23B6FA5FC((uint64_t)a1, (uint64_t)v9);
  sub_23B6FA5FC((uint64_t)a2, (uint64_t)v7);
  if ((v24 & 1) != 0)
LABEL_5:
    __asm { BR              X10 }
  sub_23B6F9D50((uint64_t)v7);
  sub_23B6F9D50((uint64_t)v9);
  return 0;
}

uint64_t sub_23B6FA5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Friend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Friend()
{
  uint64_t result;

  result = qword_254303FC0;
  if (!qword_254303FC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for PlaceMark(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocatePriority()
{
  return &type metadata for LocatePriority;
}

BOOL sub_23B6FA710(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23B6FA724()
{
  unsigned __int8 *v0;

  return sub_23B6FA72C(*v0);
}

uint64_t sub_23B6FA72C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6FA764 + 4 * byte_23B79A26E[a1]))(0x656C646E61486F74, 0xE900000000000073);
}

uint64_t sub_23B6FA764()
{
  return 0x797469726F697270;
}

uint64_t sub_23B6FA77C()
{
  return 0x6E696769726FLL;
}

unint64_t sub_23B6FA790()
{
  return 0xD000000000000012;
}

uint64_t sub_23B6FA7AC()
{
  return 1701869940;
}

uint64_t sub_23B6FA7BC()
{
  return 0x5268736572666572;
}

unint64_t sub_23B6FA7E0()
{
  return 0xD000000000000017;
}

uint64_t sub_23B6FA804()
{
  return 0x6465686361437369;
}

void sub_23B6FA81C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 - 1;
}

double Handle.trackingTimestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t Friend.isSecureLocationCapable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t type metadata accessor for FriendStreamChange()
{
  uint64_t result;

  result = qword_254302FB0;
  if (!qword_254302FB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LocationRequest.toHandles.getter()
{
  return swift_bridgeObjectRetain();
}

void LocationRequest.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

unint64_t sub_23B6FA894@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = ServiceEntitlements.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t ServiceEntitlements.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000026;
  if (*v0 == 1)
    v1 = 0xD00000000000002FLL;
  if (*v0)
    return v1;
  else
    return 0xD00000000000002DLL;
}

ValueMetadata *type metadata accessor for LocationRequest()
{
  return &type metadata for LocationRequest;
}

uint64_t getEnumTagSinglePayload for RequestOrigin(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

void sub_23B6FA984(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t storeEnumTagSinglePayload for LegacyRefreshCommandReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_23B6FA9DC + 4 * byte_23B79F0DD[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_23B6FAA10 + 4 * byte_23B79F0D8[v4]))();
}

uint64_t sub_23B6FAA10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FAA18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B6FAA20);
  return result;
}

uint64_t sub_23B6FAA2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B6FAA34);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_23B6FAA38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FAA40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23B6FAA4C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEC00000064656C75;
  v4 = 0xEB00000000797469;
  v5 = 0x726F697250776F6CLL;
  if (v2 != 1)
  {
    v5 = 0x6F69725068676968;
    v4 = 0xEC00000079746972;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6465686353746F6ELL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for LegacyRefreshSchedule()
{
  return &type metadata for LegacyRefreshSchedule;
}

uint64_t LocationRequest.origin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 24) = v2;
  return swift_bridgeObjectRetain();
}

void LocationRequest.refreshReason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 50);
}

uint64_t destroy for RequestOrigin()
{
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for RequestOrigin(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t LocatePriority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy52_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t sub_23B6FAC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B7969BC();
  __swift_allocate_value_buffer(v0, qword_2543090D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2543090D0);
  if (qword_254303040 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254309080);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23B6FACA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B7969BC();
  __swift_allocate_value_buffer(v0, qword_254309170);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254309170);
  if (qword_254303060 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254309018);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23B6FAD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B7969BC();
  __swift_allocate_value_buffer(v0, qword_254309198);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254309198);
  if (qword_254303038 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254308FE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23B6FADC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B7969BC();
  __swift_allocate_value_buffer(v0, qword_254309108);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254309108);
  if (qword_254303050 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254309000);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23B6FAE50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23B7969BC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_23B7969B0();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23B6FAF04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  char v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[12];

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_OWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v4 = *(_BYTE *)(v0 + 97);
      v5 = v3[9];
      v22[8] = v3[8];
      v22[9] = v5;
      v22[10] = v3[10];
      v6 = v3[5];
      v22[4] = v3[4];
      v22[5] = v6;
      v7 = v3[7];
      v22[6] = v3[6];
      v22[7] = v7;
      v8 = v3[1];
      v22[0] = *v3;
      v22[1] = v8;
      v9 = v3[3];
      v22[2] = v3[2];
      v22[3] = v9;
      sub_23B6FB078(v22, v4);
      v3 += 11;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v1 = *(_QWORD *)(v0 + 24);
  }
  v18 = *(_OWORD *)(v0 + 72);
  v10 = *(_BYTE *)(v0 + 98);
  v11 = *(_BYTE *)(v0 + 97);
  v12 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 56);
  v20 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 32);
  v15 = *(_BYTE *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 48);
  type metadata accessor for LocationStreamChange();
  v16 = swift_task_alloc();
  *(_QWORD *)(v16 + 16) = v14;
  *(_BYTE *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v1;
  *(_BYTE *)(v16 + 40) = v11;
  *(_BYTE *)(v16 + 48) = v10;
  *(_OWORD *)(v16 + 56) = v18;
  *(_QWORD *)(v16 + 72) = v20;
  *(_QWORD *)(v16 + 80) = v13;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v12, *MEMORY[0x24BEE6A10], v21);
  sub_23B796BC0();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B6FB078(_OWORD *a1, char a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  __int128 v12;
  _OWORD v13[12];
  uint64_t v14;

  v3 = a1[9];
  v13[8] = a1[8];
  v13[9] = v3;
  v13[10] = a1[10];
  v4 = a1[5];
  v13[4] = a1[4];
  v13[5] = v4;
  v5 = a1[7];
  v13[6] = a1[6];
  v13[7] = v5;
  v6 = a1[1];
  v13[0] = *a1;
  v13[1] = v6;
  v7 = a1[3];
  v13[2] = a1[2];
  v13[3] = v7;
  if (qword_254303110 != -1)
    swift_once();
  v8 = sub_23B7969BC();
  __swift_project_value_buffer(v8, (uint64_t)qword_2543090D0);
  sub_23B6F4E8C((uint64_t)v13);
  v9 = sub_23B7969A4();
  v10 = sub_23B796C38();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v11 = 136446979;
    sub_23B6FB388(0xD000000000000041, 0x800000023B7A03A0, &v14);
    sub_23B796C68();
    *(_WORD *)(v11 + 12) = 2160;
    sub_23B796C68();
    *(_WORD *)(v11 + 22) = 2081;
    v12 = v13[0];
    swift_bridgeObjectRetain();
    sub_23B6FB388(v12, *((unint64_t *)&v12 + 1), &v14);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)v13);
    *(_WORD *)(v11 + 32) = 2082;
    __asm { BR              X10 }
  }
  sub_23B6F5744((uint64_t)v13);

}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23B6FB388(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23B6FB494(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23B6FB458((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23B6FB458((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23B6FB458(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23B6FB494(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23B796C74();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23B6FB64C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23B796D10();
  if (!v8)
  {
    sub_23B796D64();
    __break(1u);
LABEL_17:
    result = sub_23B796DAC();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23B6FB64C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23B6FB6E0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B72737C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23B72737C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23B6FB6E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23B6FB854(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23B796CE0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23B796D64();
      __break(1u);
LABEL_10:
      v2 = sub_23B796A94();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23B796DAC();
    __break(1u);
LABEL_14:
    result = sub_23B796D64();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23B6FB854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(qword_2543032F8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F90);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B6FBA30()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23B6EE4E8();
  if (v0 <= 0x3F)
  {
    sub_23B6FBB28(319, &qword_2543032A8, &qword_254302FA8);
    if (v1 <= 0x3F)
    {
      sub_23B6FBB28(319, &qword_2543032E8, &qword_2543032D8);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_23B6FBB28(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_23B796C5C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23B6FBB74()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23B6EE4E8();
  if (v0 <= 0x3F)
  {
    sub_23B6FBB28(319, &qword_2543032C0, &qword_2543032B0);
    if (v1 <= 0x3F)
    {
      sub_23B6FBB28(319, &qword_254302FE0, &qword_254302F90);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B86C6AC](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_23B6FBD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_23B6FBD9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543032D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543032C8);
    v0 = sub_23B796C5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543032D0);
  }
}

uint64_t sub_23B6FBDF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B6FBE38(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254302CD8);
    v8 = a2();
    result = MEMORY[0x23B86C6B8](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B6FBEA0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23B6FBEB0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for Location()
{
  uint64_t result;

  result = qword_254303FD0;
  if (!qword_254303FD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B6FBEFC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B6FBF44()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t Session.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 80) = *(_BYTE *)a1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(a1 + 24);
  return swift_task_switch();
}

uint64_t type metadata accessor for Session()
{
  return objc_opt_self();
}

uint64_t Session.startRefreshingLocation(forHandles:priority:reverseGeocode:)(uint64_t a1, uint64_t a2, _BYTE *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a2;
  *(_QWORD *)(v5 + 64) = v4;
  *(_BYTE *)(v5 + 132) = a4;
  *(_QWORD *)(v5 + 48) = a1;
  *(_BYTE *)(v5 + 133) = *a3;
  return swift_task_switch();
}

uint64_t Session.startUpdatingFriends(receiveInitialUpdates:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t _s14descr250C98A29C20FriendshipConnectionCMa()
{
  uint64_t result;

  result = qword_254303290;
  if (!qword_254303290)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B6FC05C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B6FC0B4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6F006C(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B6FC0C0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B6FC0F4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 88) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F78);
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B6FC164(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6FC194(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B6FC16C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6EFB08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_250C99768, (uint64_t)&unk_256A49B30);
}

uint64_t sub_23B6FC194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B6EFB08(a1, a2, a3, (uint64_t)&unk_250C99768, (uint64_t)&unk_256A49B30);
}

uint64_t sub_23B6FC1A8()
{
  return swift_initClassMetadata2();
}

uint64_t _s10TrampolineCMa_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10TrampolineCMn_1);
}

uint64_t sub_23B6FC200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  v1 = swift_retain();
  return v3(v1);
}

uint64_t _s14descr250C985C9C18SettingsConnectionCMa()
{
  uint64_t result;

  result = qword_2543031D0;
  if (!qword_2543031D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B6FC27C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B6FC2D4()
{
  return swift_initClassMetadata2();
}

uint64_t _s10TrampolineCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10TrampolineCMn);
}

void sub_23B6FC338()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B6EE4E8();
  if (v0 <= 0x3F)
  {
    sub_23B6FBD9C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t _s14descr250C98631C18LocationConnectionCMa()
{
  uint64_t result;

  result = qword_254303118;
  if (!qword_254303118)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B6FC450()
{
  return swift_initClassMetadata2();
}

uint64_t _s10TrampolineCMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10TrampolineCMn_0);
}

uint64_t sub_23B6FC4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  v1 = swift_retain();
  return v3(v1);
}

uint64_t sub_23B6FC4E4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6F0688(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_23B6FC520(uint64_t a1, uint64_t a2, _BYTE *a3, char a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v9;

  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = v5;
  *(_BYTE *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 40) = *v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543025D8);
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 64) = swift_task_alloc();
  *(_BYTE *)(v6 + 97) = *a3;
  *(_BYTE *)(v6 + 98) = *(_BYTE *)a5;
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(a5 + 8);
  *(_QWORD *)(v6 + 88) = *(_QWORD *)(a5 + 24);
  return swift_task_switch();
}

uint64_t sub_23B6FC5C4(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B6F1428(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B6FC5D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 80) = v1;
  *(_QWORD *)(v2 + 88) = *v1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 61) = *(_QWORD *)(a1 + 45);
  return swift_task_switch();
}

unint64_t sub_23B6FC60C()
{
  unint64_t result;

  result = qword_254302E08;
  if (!qword_254302E08)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for GroupID, &type metadata for GroupID);
    atomic_store(result, (unint64_t *)&qword_254302E08);
  }
  return result;
}

unint64_t sub_23B6FC650()
{
  unint64_t result;

  result = qword_254302C18;
  if (!qword_254302C18)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for GroupID, &type metadata for GroupID);
    atomic_store(result, (unint64_t *)&qword_254302C18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Account(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Account(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for Account()
{
  return &type metadata for Account;
}

uint64_t Account.peopleURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Account.appToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Account.dsid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for Account.TokenStatus()
{
  return &type metadata for Account.TokenStatus;
}

uint64_t sub_23B6FC7DC(uint64_t a1)
{
  return sub_23B6FAE50(a1, qword_254309018);
}

uint64_t sub_23B6FC800(uint64_t a1)
{
  return sub_23B6FAE50(a1, qword_254309000);
}

uint64_t sub_23B6FC824(uint64_t a1)
{
  return sub_23B6FAE50(a1, qword_254309080);
}

uint64_t sub_23B6FC848(uint64_t a1)
{
  return sub_23B6FAE50(a1, qword_254308FE0);
}

unint64_t sub_23B6FC86C()
{
  unint64_t result;

  result = qword_254302CB0;
  if (!qword_254302CB0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_254302CB0);
  }
  return result;
}

unint64_t sub_23B6FC8B0()
{
  unint64_t result;

  result = qword_254302C10;
  if (!qword_254302C10)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_254302C10);
  }
  return result;
}

uint64_t sub_23B6FC8F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for Handle.CodingKeys()
{
  return &type metadata for Handle.CodingKeys;
}

unint64_t sub_23B6FC950()
{
  unint64_t result;

  result = qword_254302E00;
  if (!qword_254302E00)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79EDC0, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302E00);
  }
  return result;
}

unint64_t sub_23B6FC994()
{
  unint64_t result;

  result = qword_254302DF8;
  if (!qword_254302DF8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79EDE8, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DF8);
  }
  return result;
}

void sub_23B6FC9D8()
{
  unint64_t v0;

  sub_23B6EE23C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t Device.isThisDevice.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t getEnumTagSinglePayload for LegacyRefreshCommandReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23B6FCB14()
{
  sub_23B6FCC18();
  return sub_23B796ADC();
}

FindMyLocate::LegacyRefreshCommandReason_optional sub_23B6FCB70(Swift::Int *a1)
{
  return LegacyRefreshCommandReason.init(rawValue:)(*a1);
}

uint64_t sub_23B6FCB78()
{
  sub_23B6FCC18();
  return sub_23B796AC4();
}

ValueMetadata *type metadata accessor for LegacyRefreshCommandReason()
{
  return &type metadata for LegacyRefreshCommandReason;
}

unint64_t sub_23B6FCBD4()
{
  unint64_t result;

  result = qword_254302698;
  if (!qword_254302698)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LegacyRefreshCommandReason, &type metadata for LegacyRefreshCommandReason);
    atomic_store(result, (unint64_t *)&qword_254302698);
  }
  return result;
}

unint64_t sub_23B6FCC18()
{
  unint64_t result;

  result = qword_254302CA8;
  if (!qword_254302CA8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LegacyRefreshCommandReason, &type metadata for LegacyRefreshCommandReason);
    atomic_store(result, (unint64_t *)&qword_254302CA8);
  }
  return result;
}

unint64_t sub_23B6FCC5C()
{
  unint64_t result;

  result = qword_254302578;
  if (!qword_254302578)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LegacyRefreshCommandReason, &type metadata for LegacyRefreshCommandReason);
    atomic_store(result, (unint64_t *)&qword_254302578);
  }
  return result;
}

uint64_t LegacyRefreshCommandReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FindMyLocate::LegacyRefreshCommandReason_optional __swiftcall LegacyRefreshCommandReason.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 15;
  if ((unint64_t)rawValue < 0xF)
    v2 = rawValue;
  *v1 = v2;
  return (FindMyLocate::LegacyRefreshCommandReason_optional)rawValue;
}

uint64_t LegacyRefreshCommandReason.reason.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6FCCE4 + 4 * byte_23B79F0BF[*v0]))(7364980, 0xE300000000000000);
}

uint64_t sub_23B6FCCE4()
{
  return 0x646563726F66;
}

uint64_t sub_23B6FCCF8()
{
  return 0x72656D6974;
}

uint64_t sub_23B6FCD0C()
{
  return 0x6144657461647075;
}

uint64_t sub_23B6FCD28()
{
  return 0x61636F4C72657375;
}

uint64_t sub_23B6FCD48()
{
  return 0x6E656B6F54737061;
}

uint64_t sub_23B6FCD6C()
{
  return 0x6165627472616568;
}

uint64_t sub_23B6FCD88()
{
  return 0x6C6E757473726966;
}

unint64_t sub_23B6FCDA8()
{
  return 0xD000000000000015;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange()
{
  return &type metadata for PreferenceStreamChange;
}

uint64_t storeEnumTagSinglePayload for LegacyRefreshSchedule(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B6FCEA0 + 4 * byte_23B79F0D3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B6FCED4 + 4 * byte_23B79F0CE[v4]))();
}

uint64_t sub_23B6FCED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FCEDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B6FCEE4);
  return result;
}

uint64_t sub_23B6FCEF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B6FCEF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B6FCEFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FCF04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FCF10()
{
  sub_23B6FD014();
  return sub_23B796AD0();
}

FindMyLocate::LegacyRefreshSchedule_optional sub_23B6FCF6C(Swift::String *a1)
{
  return LegacyRefreshSchedule.init(rawValue:)(*a1);
}

uint64_t sub_23B6FCF78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23B6EE290(*a1, *a2);
}

uint64_t sub_23B6FCF84()
{
  sub_23B6FD014();
  return sub_23B796AB8();
}

unint64_t sub_23B6FCFD0()
{
  unint64_t result;

  result = qword_254302690;
  if (!qword_254302690)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LegacyRefreshSchedule, &type metadata for LegacyRefreshSchedule);
    atomic_store(result, (unint64_t *)&qword_254302690);
  }
  return result;
}

unint64_t sub_23B6FD014()
{
  unint64_t result;

  result = qword_254302C98;
  if (!qword_254302C98)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LegacyRefreshSchedule, &type metadata for LegacyRefreshSchedule);
    atomic_store(result, (unint64_t *)&qword_254302C98);
  }
  return result;
}

unint64_t sub_23B6FD058()
{
  unint64_t result;

  result = qword_254302570;
  if (!qword_254302570)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LegacyRefreshSchedule, &type metadata for LegacyRefreshSchedule);
    atomic_store(result, (unint64_t *)&qword_254302570);
  }
  return result;
}

uint64_t LegacyRefreshSchedule.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F697250776F6CLL;
  if (*v0 != 1)
    v1 = 0x6F69725068676968;
  if (*v0)
    return v1;
  else
    return 0x6465686353746F6ELL;
}

ValueMetadata *type metadata accessor for RangingStreamChange()
{
  return &type metadata for RangingStreamChange;
}

ValueMetadata *type metadata accessor for MotionActivityState()
{
  return &type metadata for MotionActivityState;
}

ValueMetadata *type metadata accessor for DarwinNotifications()
{
  return &type metadata for DarwinNotifications;
}

uint64_t dispatch thunk of FriendshipProtocol.startFriendsUpdate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return v7(a1, a2);
}

uint64_t sub_23B6FD1B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B6FD1F8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Friend();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceStreamChange()
{
  return &type metadata for DeviceStreamChange;
}

ValueMetadata *type metadata accessor for ClientSessionError()
{
  return &type metadata for ClientSessionError;
}

ValueMetadata *type metadata accessor for ClientSessionError.Category()
{
  return &type metadata for ClientSessionError.Category;
}

uint64_t dispatch thunk of LocationProtocol.startRefreshingLocation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A13C;
  return v9(a1, a2, a3);
}

ValueMetadata *type metadata accessor for FriendshipAction()
{
  return &type metadata for FriendshipAction;
}

uint64_t sub_23B6FD318(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ReverseGeocoder(uint64_t a1)
{
  return sub_23B6FD318(a1, (uint64_t *)&unk_254303010);
}

uint64_t storeEnumTagSinglePayload for LocationRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 53) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 53))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23B6FD400@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LocationRequest.init(from:)(a1, a2);
}

uint64_t sub_23B6FD414(_QWORD *a1)
{
  return LocationRequest.encode(to:)(a1);
}

unint64_t sub_23B6FD428()
{
  unint64_t result;

  result = qword_254302558;
  if (!qword_254302558)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocationRequest, &type metadata for LocationRequest);
    atomic_store(result, (unint64_t *)&qword_254302558);
  }
  return result;
}

void LocationRequest.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

uint64_t LocationRequest.shallowLocatesOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

ValueMetadata *type metadata accessor for LocationRequest.CodingKeys()
{
  return &type metadata for LocationRequest.CodingKeys;
}

unint64_t sub_23B6FD498()
{
  unint64_t result;

  result = qword_254302B30;
  if (!qword_254302B30)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A338, &type metadata for LocationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B30);
  }
  return result;
}

unint64_t sub_23B6FD4DC()
{
  unint64_t result;

  result = qword_254302C90;
  if (!qword_254302C90)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A360, &type metadata for LocationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302C90);
  }
  return result;
}

unint64_t sub_23B6FD520()
{
  unint64_t result;

  result = qword_254302C88;
  if (!qword_254302C88)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A3F0, &type metadata for LocationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302C88);
  }
  return result;
}

uint64_t sub_23B6FD564@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestOrigin.init(from:)(a1, a2);
}

uint64_t sub_23B6FD578(_QWORD *a1)
{
  return RequestOrigin.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for RequestOrigin()
{
  return &type metadata for RequestOrigin;
}

unint64_t sub_23B6FD59C()
{
  unint64_t result;

  result = qword_254302688;
  if (!qword_254302688)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for RequestOrigin, &type metadata for RequestOrigin);
    atomic_store(result, (unint64_t *)&qword_254302688);
  }
  return result;
}

unint64_t sub_23B6FD5E0()
{
  unint64_t result;

  result = qword_254302C08;
  if (!qword_254302C08)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for RequestOrigin, &type metadata for RequestOrigin);
    atomic_store(result, (unint64_t *)&qword_254302C08);
  }
  return result;
}

uint64_t RequestOrigin.contextBundleApp.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RequestOrigin.contextApp.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23B6FD658()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6950746E65696C63;
  if (*v0 != 1)
    v1 = 0xD000000000000016;
  if (*v0)
    return v1;
  else
    return 0x6E696769726FLL;
}

ValueMetadata *type metadata accessor for RequestOrigin.CodingKeys()
{
  return &type metadata for RequestOrigin.CodingKeys;
}

unint64_t sub_23B6FD6D0()
{
  unint64_t result;

  result = qword_254302DE8;
  if (!qword_254302DE8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798DD0, &type metadata for RequestOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DE8);
  }
  return result;
}

unint64_t sub_23B6FD714()
{
  unint64_t result;

  result = qword_254302DE0;
  if (!qword_254302DE0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798DF8, &type metadata for RequestOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DE0);
  }
  return result;
}

unint64_t sub_23B6FD758()
{
  unint64_t result;

  result = qword_254302DD8;
  if (!qword_254302DD8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798E88, &type metadata for RequestOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationType()
{
  return &type metadata for LocationType;
}

uint64_t sub_23B6FD7AC(_QWORD *a1)
{
  return ClientOrigin.encode(to:)(a1);
}

unint64_t sub_23B6FD7C0()
{
  unint64_t result;

  result = qword_254302680;
  if (!qword_254302680)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ClientOrigin, &type metadata for ClientOrigin);
    atomic_store(result, (unint64_t *)&qword_254302680);
  }
  return result;
}

unint64_t sub_23B6FD804()
{
  unint64_t result;

  result = qword_254302C00;
  if (!qword_254302C00)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ClientOrigin, &type metadata for ClientOrigin);
    atomic_store(result, (unint64_t *)&qword_254302C00);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOrigin.MessagesAppCodingKeys()
{
  return &type metadata for ClientOrigin.MessagesAppCodingKeys;
}

unint64_t sub_23B6FD860()
{
  unint64_t result;

  result = qword_254302DD0;
  if (!qword_254302DD0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798C78, &type metadata for ClientOrigin.MessagesAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DD0);
  }
  return result;
}

unint64_t sub_23B6FD8A4()
{
  unint64_t result;

  result = qword_254302DC8;
  if (!qword_254302DC8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798CA0, &type metadata for ClientOrigin.MessagesAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOrigin.OtherCodingKeys()
{
  return &type metadata for ClientOrigin.OtherCodingKeys;
}

unint64_t sub_23B6FD900()
{
  unint64_t result;

  result = qword_254302DC0;
  if (!qword_254302DC0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798C28, &type metadata for ClientOrigin.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DC0);
  }
  return result;
}

unint64_t sub_23B6FD944()
{
  unint64_t result;

  result = qword_254302DB8;
  if (!qword_254302DB8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798C50, &type metadata for ClientOrigin.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOrigin.CodingKeys()
{
  return &type metadata for ClientOrigin.CodingKeys;
}

unint64_t sub_23B6FD9A0()
{
  unint64_t result;

  result = qword_254302DB0;
  if (!qword_254302DB0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798D18, &type metadata for ClientOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DB0);
  }
  return result;
}

unint64_t sub_23B6FD9E4()
{
  unint64_t result;

  result = qword_254302DA8;
  if (!qword_254302DA8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798D40, &type metadata for ClientOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302DA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOrigin.FindMyAppCodingKeys()
{
  return &type metadata for ClientOrigin.FindMyAppCodingKeys;
}

unint64_t sub_23B6FDA40()
{
  unint64_t result;

  result = qword_254302D98;
  if (!qword_254302D98)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798CC8, &type metadata for ClientOrigin.FindMyAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302D98);
  }
  return result;
}

unint64_t sub_23B6FDA84()
{
  unint64_t result;

  result = qword_254302D90;
  if (!qword_254302D90)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798CF0, &type metadata for ClientOrigin.FindMyAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302D90);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LocatePriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B6FDB14 + 4 * byte_23B79A725[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B6FDB48 + 4 * byte_23B79A720[v4]))();
}

uint64_t sub_23B6FDB48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FDB50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B6FDB58);
  return result;
}

uint64_t sub_23B6FDB64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B6FDB6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B6FDB70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FDB78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FDB84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6FDBB4 + 4 * byte_23B79A71C[*v0]))(0x776F6C6C6168732ELL, 0xE800000000000000);
}

unint64_t sub_23B6FDBB4()
{
  return 0xD000000000000015;
}

uint64_t sub_23B6FDBD4()
{
  return 0x6576696C2ELL;
}

unint64_t sub_23B6FDBE8()
{
  return 0xD000000000000014;
}

uint64_t sub_23B6FDC04()
{
  sub_23B6FDCFC();
  return sub_23B796ADC();
}

FindMyLocate::LocatePriority_optional sub_23B6FDC60(Swift::Int *a1)
{
  return LocatePriority.init(rawValue:)(*a1);
}

uint64_t sub_23B6FDC6C()
{
  sub_23B6FDCFC();
  return sub_23B796AC4();
}

unint64_t sub_23B6FDCB8()
{
  unint64_t result;

  result = qword_254302678;
  if (!qword_254302678)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocatePriority, &type metadata for LocatePriority);
    atomic_store(result, (unint64_t *)&qword_254302678);
  }
  return result;
}

unint64_t sub_23B6FDCFC()
{
  unint64_t result;

  result = qword_254302C78;
  if (!qword_254302C78)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocatePriority, &type metadata for LocatePriority);
    atomic_store(result, (unint64_t *)&qword_254302C78);
  }
  return result;
}

unint64_t sub_23B6FDD40()
{
  unint64_t result;

  result = qword_254302550;
  if (!qword_254302550)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocatePriority, &type metadata for LocatePriority);
    atomic_store(result, (unint64_t *)&qword_254302550);
  }
  return result;
}

unint64_t sub_23B6FDD84()
{
  unint64_t result;

  result = qword_254302548;
  if (!qword_254302548)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocatePriority, &type metadata for LocatePriority);
    atomic_store(result, (unint64_t *)&qword_254302548);
  }
  return result;
}

FindMyLocate::LocatePriority_optional __swiftcall LocatePriority.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (FindMyLocate::LocatePriority_optional)rawValue;
}

void LocatePriority.reason.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = 0x9040209u >> (8 * *v1);
}

uint64_t sub_23B6FDDF8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23B6FDE3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FriendshipAction.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6FDEA8 + 4 * byte_23B797570[*v0]))(1684300078, 0xE400000000000000);
}

uint64_t sub_23B6FDEA8()
{
  return 0x65766F6D65722ELL;
}

uint64_t sub_23B6FDEC0()
{
  return 0x796669646F6D2ELL;
}

uint64_t sub_23B6FDED8()
{
  return 0x726566666F2ELL;
}

uint64_t sub_23B6FDEEC()
{
  return 0x657469766E692ELL;
}

FindMyLocate::FriendshipAction_optional __swiftcall FriendshipAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FindMyLocate::FriendshipAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23B796DB8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FriendshipAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6FDF84 + 4 * byte_23B797575[*v0]))(6579297, 0xE300000000000000);
}

uint64_t sub_23B6FDF84()
{
  return 0x65766F6D6572;
}

uint64_t sub_23B6FDF98()
{
  return 0x796669646F6DLL;
}

uint64_t sub_23B6FDFAC()
{
  return 0x726566666FLL;
}

uint64_t sub_23B6FDFC0()
{
  return 0x657469766E69;
}

void sub_23B6FDFD4(char *a1)
{
  sub_23B73EE00(*a1);
}

void sub_23B6FDFE0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23B796F44();
  __asm { BR              X9 }
}

uint64_t sub_23B6FE024()
{
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

void sub_23B6FE09C()
{
  __asm { BR              X10 }
}

uint64_t sub_23B6FE0D0()
{
  sub_23B796A64();
  return swift_bridgeObjectRelease();
}

void sub_23B6FE134()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23B796F44();
  __asm { BR              X9 }
}

uint64_t sub_23B6FE174()
{
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

FindMyLocate::FriendshipAction_optional sub_23B6FE1EC(Swift::String *a1)
{
  return FriendshipAction.init(rawValue:)(*a1);
}

uint64_t sub_23B6FE1F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23B6FE220 + 4 * byte_23B797589[*v0]))();
}

void sub_23B6FE220(_QWORD *a1@<X8>)
{
  *a1 = 0x65766F6D6572;
  a1[1] = 0xE600000000000000;
}

void sub_23B6FE238(_QWORD *a1@<X8>)
{
  *a1 = 0x796669646F6DLL;
  a1[1] = 0xE600000000000000;
}

void sub_23B6FE250(_QWORD *a1@<X8>)
{
  *a1 = 0x726566666FLL;
  a1[1] = 0xE500000000000000;
}

void sub_23B6FE268(_QWORD *a1@<X8>)
{
  *a1 = 0x657469766E69;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_23B6FE280()
{
  sub_23B7016D4();
  return sub_23B796AD0();
}

uint64_t sub_23B6FE2DC()
{
  sub_23B7016D4();
  return sub_23B796AB8();
}

uint64_t sub_23B6FE328()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B6FE350 + 4 * byte_23B79758E[*v0]))(1684300078, 0xE400000000000000);
}

uint64_t sub_23B6FE350()
{
  return 0x65766F6D65722ELL;
}

uint64_t sub_23B6FE368()
{
  return 0x796669646F6D2ELL;
}

uint64_t sub_23B6FE380()
{
  return 0x726566666F2ELL;
}

uint64_t sub_23B6FE394()
{
  return 0x657469766E692ELL;
}

uint64_t sub_23B6FE3AC()
{
  return 1;
}

uint64_t sub_23B6FE3B8()
{
  return sub_23B796F50();
}

uint64_t sub_23B6FE3E0()
{
  return 12383;
}

uint64_t sub_23B6FE3F0()
{
  return 0;
}

void sub_23B6FE3FC(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23B6FE408()
{
  sub_23B6FEC74();
  return sub_23B796FA4();
}

uint64_t sub_23B6FE430()
{
  sub_23B6FEC74();
  return sub_23B796FB0();
}

uint64_t _s12FindMyLocate5FenceV16AcceptanceStatusO9hashValueSivg_0()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t sub_23B6FE49C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465766F6D6572;
  if (*v0 != 1)
    v1 = 0x6465696669646F6DLL;
  if (*v0)
    return v1;
  else
    return 0x6465646461;
}

uint64_t sub_23B6FE4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B701588(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B6FE518(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23B6FE524()
{
  sub_23B6FEB64();
  return sub_23B796FA4();
}

uint64_t sub_23B6FE54C()
{
  sub_23B6FEB64();
  return sub_23B796FB0();
}

uint64_t sub_23B6FE574()
{
  sub_23B6FEBEC();
  return sub_23B796FA4();
}

uint64_t sub_23B6FE59C()
{
  sub_23B6FEBEC();
  return sub_23B796FB0();
}

uint64_t sub_23B6FE5C4()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t sub_23B6FE604()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t sub_23B6FE640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23B796ECC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23B6FE6BC()
{
  sub_23B6FEC30();
  return sub_23B796FA4();
}

uint64_t sub_23B6FE6E4()
{
  sub_23B6FEC30();
  return sub_23B796FB0();
}

uint64_t FriendStreamChange.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F38);
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F40);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F48);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for Friend();
  v8 = MEMORY[0x24BDAC7A8](v43);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v33 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v33 - v14;
  v16 = type metadata accessor for FriendStreamChange();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F50);
  v44 = *(_QWORD *)(v19 - 8);
  v45 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B6FEB64();
  sub_23B796F8C();
  sub_23B6FEBA8(v42, (uint64_t)v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23B6FF360((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v46 = 0;
    sub_23B6FEC74();
    v27 = v33;
    v24 = v45;
    sub_23B796E48();
    sub_23B6FF320(&qword_256A47F68, (uint64_t)&protocol conformance descriptor for Friend);
    v28 = v35;
    sub_23B796EA8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v28);
    v26 = (uint64_t)v15;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_23B6FF360((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v47 = 1;
    sub_23B6FEC30();
    v23 = v36;
    v24 = v45;
    sub_23B796E48();
    sub_23B6FF320(&qword_256A47F68, (uint64_t)&protocol conformance descriptor for Friend);
    v25 = v38;
    sub_23B796EA8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v25);
    v26 = (uint64_t)v13;
LABEL_5:
    sub_23B700B04(v26, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v24);
  }
  sub_23B6FF360((uint64_t)v18, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  v48 = 2;
  sub_23B6FEBEC();
  v30 = v39;
  v31 = v45;
  sub_23B796E48();
  sub_23B6FF320(&qword_256A47F68, (uint64_t)&protocol conformance descriptor for Friend);
  v32 = v41;
  sub_23B796EA8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v32);
  sub_23B700B04((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v31);
}

unint64_t sub_23B6FEB64()
{
  unint64_t result;

  result = qword_256A47F58;
  if (!qword_256A47F58)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797BD4, &type metadata for FriendStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47F58);
  }
  return result;
}

uint64_t sub_23B6FEBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FriendStreamChange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23B6FEBEC()
{
  unint64_t result;

  result = qword_256A47F60;
  if (!qword_256A47F60)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797B84, &type metadata for FriendStreamChange.ModifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47F60);
  }
  return result;
}

unint64_t sub_23B6FEC30()
{
  unint64_t result;

  result = qword_256A47F70;
  if (!qword_256A47F70)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797B34, &type metadata for FriendStreamChange.RemovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47F70);
  }
  return result;
}

unint64_t sub_23B6FEC74()
{
  unint64_t result;

  result = qword_256A47F78;
  if (!qword_256A47F78)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797AE4, &type metadata for FriendStreamChange.AddedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47F78);
  }
  return result;
}

uint64_t FriendStreamChange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;

  v54 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F80);
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v55 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F88);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F90);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A47F98);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FriendStreamChange();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v43 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v43 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v43 - v20;
  v22 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23B6FEB64();
  v60 = v9;
  v23 = v62;
  sub_23B796F80();
  if (v23)
    goto LABEL_9;
  v44 = v16;
  v45 = v19;
  v46 = v13;
  v47 = v21;
  v24 = v57;
  v25 = v58;
  v27 = v59;
  v26 = v60;
  v62 = v10;
  v28 = sub_23B796E3C();
  if (*(_QWORD *)(v28 + 16) != 1)
  {
    v29 = v25;
    v30 = sub_23B796D04();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v32 = v62;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v29);
LABEL_9:
    v37 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  if (*(_BYTE *)(v28 + 32))
  {
    if (*(_BYTE *)(v28 + 32) == 1)
    {
      v64 = 1;
      sub_23B6FEC30();
      sub_23B796DC4();
      type metadata accessor for Friend();
      sub_23B6FF320(&qword_254302D68, (uint64_t)&protocol conformance descriptor for Friend);
      v35 = (uint64_t)v44;
      v36 = v52;
      sub_23B796E30();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v25);
      v37 = (uint64_t)v61;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v65 = 2;
      sub_23B6FEBEC();
      v33 = v55;
      sub_23B796DC4();
      type metadata accessor for Friend();
      sub_23B6FF320(&qword_254302D68, (uint64_t)&protocol conformance descriptor for Friend);
      v39 = (uint64_t)v46;
      v40 = v50;
      sub_23B796E30();
      v41 = v56;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v25);
      swift_storeEnumTagMultiPayload();
      v35 = v39;
      v37 = (uint64_t)v61;
    }
  }
  else
  {
    v63 = 0;
    sub_23B6FEC74();
    sub_23B796DC4();
    type metadata accessor for Friend();
    sub_23B6FF320(&qword_254302D68, (uint64_t)&protocol conformance descriptor for Friend);
    v35 = (uint64_t)v45;
    v38 = v49;
    sub_23B796E30();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v25);
    v37 = (uint64_t)v61;
    swift_storeEnumTagMultiPayload();
  }
  v42 = (uint64_t)v47;
  sub_23B6FF360(v35, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
  sub_23B6FF360(v42, v54, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_23B6FF320(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Friend();
    result = MEMORY[0x23B86C6B8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B6FF360(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_23B6FF3A8()
{
  unint64_t result;

  result = qword_256A47FB0;
  if (!qword_256A47FB0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipAction, &type metadata for FriendshipAction);
    atomic_store(result, (unint64_t *)&qword_256A47FB0);
  }
  return result;
}

uint64_t sub_23B6FF3EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FriendStreamChange.init(from:)(a1, a2);
}

uint64_t sub_23B6FF400(_QWORD *a1)
{
  return FriendStreamChange.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FriendshipAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23B6FF460 + 4 * byte_23B797598[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23B6FF494 + 4 * byte_23B797593[v4]))();
}

uint64_t sub_23B6FF494(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FF49C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B6FF4A4);
  return result;
}

uint64_t sub_23B6FF4B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B6FF4B8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23B6FF4BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B6FF4C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FriendStreamChange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(const void *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unsigned int (*v46)(const void *, uint64_t, uint64_t);
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  void *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *__dst;
  void *__dsta;
  void *__dstb;
  int *v122;
  int *v123;
  uint64_t v124;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v22 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v22;
      v23 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v23;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v24 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v24;
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      v25 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v25;
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
      v26 = a2[15];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v26;
      v27 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v27;
      v115 = a2[19];
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = v115;
      v28 = a2[21];
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_QWORD *)(a1 + 168) = v28;
      *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
      *(_BYTE *)(a1 + 180) = *((_BYTE *)a2 + 180);
      v29 = type metadata accessor for Friend();
      v30 = *(int *)(v29 + 40);
      __dsta = (void *)(a1 + v30);
      v123 = (int *)v29;
      v31 = (char *)a2 + v30;
      v32 = sub_23B7968A8();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34(v31, 1, v32))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(__dsta, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v33 + 16))(__dsta, v31, v32);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dsta, 0, 1, v32);
      }
      v56 = v33;
      v57 = v123;
      *(_BYTE *)(a1 + v123[11]) = *((_BYTE *)a2 + v123[11]);
      v58 = v123[12];
      v59 = (void *)(a1 + v58);
      v60 = (char *)a2 + v58;
      if (v34((char *)a2 + v58, 1, v32))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v56 + 16))(v59, v60, v32);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v59, 0, 1, v32);
      }
      v72 = v123[13];
      v73 = a1 + v72;
      v74 = (uint64_t)a2 + v72;
      v75 = *(_QWORD *)(v74 + 8);
      if (v75)
      {
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *(_QWORD *)(v73 + 8) = v75;
        v76 = *(_QWORD *)(v74 + 24);
        *(_QWORD *)(v73 + 16) = *(_QWORD *)(v74 + 16);
        *(_QWORD *)(v73 + 24) = v76;
        *(_BYTE *)(v73 + 32) = *(_BYTE *)(v74 + 32);
        v77 = *(_QWORD *)(v74 + 48);
        *(_QWORD *)(v73 + 40) = *(_QWORD *)(v74 + 40);
        *(_QWORD *)(v73 + 48) = v77;
        *(_QWORD *)(v73 + 56) = *(_QWORD *)(v74 + 56);
        *(_OWORD *)(v73 + 64) = *(_OWORD *)(v74 + 64);
        v78 = *(_QWORD *)(v74 + 88);
        *(_QWORD *)(v73 + 80) = *(_QWORD *)(v74 + 80);
        *(_QWORD *)(v73 + 88) = v78;
        *(_QWORD *)(v73 + 96) = *(_QWORD *)(v74 + 96);
        *(_BYTE *)(v73 + 104) = *(_BYTE *)(v74 + 104);
        v79 = *(_QWORD *)(v74 + 120);
        *(_QWORD *)(v73 + 112) = *(_QWORD *)(v74 + 112);
        *(_QWORD *)(v73 + 120) = v79;
        v80 = *(_QWORD *)(v74 + 136);
        *(_QWORD *)(v73 + 128) = *(_QWORD *)(v74 + 128);
        *(_QWORD *)(v73 + 136) = v80;
        v81 = *(_QWORD *)(v74 + 152);
        *(_QWORD *)(v73 + 144) = *(_QWORD *)(v74 + 144);
        *(_QWORD *)(v73 + 152) = v81;
        v117 = *(_QWORD *)(v74 + 168);
        *(_QWORD *)(v73 + 160) = *(_QWORD *)(v74 + 160);
        *(_QWORD *)(v73 + 168) = v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57 = v123;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v87 = *(_OWORD *)(v74 + 144);
        *(_OWORD *)(v73 + 128) = *(_OWORD *)(v74 + 128);
        *(_OWORD *)(v73 + 144) = v87;
        *(_OWORD *)(v73 + 160) = *(_OWORD *)(v74 + 160);
        v88 = *(_OWORD *)(v74 + 80);
        *(_OWORD *)(v73 + 64) = *(_OWORD *)(v74 + 64);
        *(_OWORD *)(v73 + 80) = v88;
        v89 = *(_OWORD *)(v74 + 112);
        *(_OWORD *)(v73 + 96) = *(_OWORD *)(v74 + 96);
        *(_OWORD *)(v73 + 112) = v89;
        v90 = *(_OWORD *)(v74 + 16);
        *(_OWORD *)v73 = *(_OWORD *)v74;
        *(_OWORD *)(v73 + 16) = v90;
        v91 = *(_OWORD *)(v74 + 48);
        *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
        *(_OWORD *)(v73 + 48) = v91;
      }
      *(_BYTE *)(a1 + v57[14]) = *((_BYTE *)a2 + v57[14]);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v9 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v9;
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      v10 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v10;
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
      v11 = a2[15];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v11;
      v12 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v12;
      v114 = a2[19];
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = v114;
      v13 = a2[21];
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_QWORD *)(a1 + 168) = v13;
      *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
      *(_BYTE *)(a1 + 180) = *((_BYTE *)a2 + 180);
      v14 = type metadata accessor for Friend();
      v15 = *(int *)(v14 + 40);
      __dst = (void *)(a1 + v15);
      v122 = (int *)v14;
      v16 = (char *)a2 + v15;
      v17 = sub_23B7968A8();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v16, 1, v17))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      v50 = v18;
      v51 = v122;
      *(_BYTE *)(a1 + v122[11]) = *((_BYTE *)a2 + v122[11]);
      v52 = v122[12];
      v53 = (void *)(a1 + v52);
      v54 = (char *)a2 + v52;
      if (v19((char *)a2 + v52, 1, v17))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v53, v54, v17);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v17);
      }
      v62 = v122[13];
      v63 = a1 + v62;
      v64 = (uint64_t)a2 + v62;
      v65 = *(_QWORD *)(v64 + 8);
      if (v65)
      {
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *(_QWORD *)(v63 + 8) = v65;
        v66 = *(_QWORD *)(v64 + 24);
        *(_QWORD *)(v63 + 16) = *(_QWORD *)(v64 + 16);
        *(_QWORD *)(v63 + 24) = v66;
        *(_BYTE *)(v63 + 32) = *(_BYTE *)(v64 + 32);
        v67 = *(_QWORD *)(v64 + 48);
        *(_QWORD *)(v63 + 40) = *(_QWORD *)(v64 + 40);
        *(_QWORD *)(v63 + 48) = v67;
        *(_QWORD *)(v63 + 56) = *(_QWORD *)(v64 + 56);
        *(_OWORD *)(v63 + 64) = *(_OWORD *)(v64 + 64);
        v68 = *(_QWORD *)(v64 + 88);
        *(_QWORD *)(v63 + 80) = *(_QWORD *)(v64 + 80);
        *(_QWORD *)(v63 + 88) = v68;
        *(_QWORD *)(v63 + 96) = *(_QWORD *)(v64 + 96);
        *(_BYTE *)(v63 + 104) = *(_BYTE *)(v64 + 104);
        v69 = *(_QWORD *)(v64 + 120);
        *(_QWORD *)(v63 + 112) = *(_QWORD *)(v64 + 112);
        *(_QWORD *)(v63 + 120) = v69;
        v70 = *(_QWORD *)(v64 + 136);
        *(_QWORD *)(v63 + 128) = *(_QWORD *)(v64 + 128);
        *(_QWORD *)(v63 + 136) = v70;
        v71 = *(_QWORD *)(v64 + 152);
        *(_QWORD *)(v63 + 144) = *(_QWORD *)(v64 + 144);
        *(_QWORD *)(v63 + 152) = v71;
        v116 = *(_QWORD *)(v64 + 168);
        *(_QWORD *)(v63 + 160) = *(_QWORD *)(v64 + 160);
        *(_QWORD *)(v63 + 168) = v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51 = v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v82 = *(_OWORD *)(v64 + 144);
        *(_OWORD *)(v63 + 128) = *(_OWORD *)(v64 + 128);
        *(_OWORD *)(v63 + 144) = v82;
        *(_OWORD *)(v63 + 160) = *(_OWORD *)(v64 + 160);
        v83 = *(_OWORD *)(v64 + 80);
        *(_OWORD *)(v63 + 64) = *(_OWORD *)(v64 + 64);
        *(_OWORD *)(v63 + 80) = v83;
        v84 = *(_OWORD *)(v64 + 112);
        *(_OWORD *)(v63 + 96) = *(_OWORD *)(v64 + 96);
        *(_OWORD *)(v63 + 112) = v84;
        v85 = *(_OWORD *)(v64 + 16);
        *(_OWORD *)v63 = *(_OWORD *)v64;
        *(_OWORD *)(v63 + 16) = v85;
        v86 = *(_OWORD *)(v64 + 48);
        *(_OWORD *)(v63 + 32) = *(_OWORD *)(v64 + 32);
        *(_OWORD *)(v63 + 48) = v86;
      }
      *(_BYTE *)(a1 + v51[14]) = *((_BYTE *)a2 + v51[14]);
    }
    else
    {
      v36 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v36;
      v37 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v37;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v38 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v38;
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      v39 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v39;
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
      v40 = a2[15];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v40;
      v41 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v41;
      __dstb = (void *)a2[19];
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = __dstb;
      v42 = a2[21];
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_QWORD *)(a1 + 168) = v42;
      *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
      *(_BYTE *)(a1 + 180) = *((_BYTE *)a2 + 180);
      v124 = type metadata accessor for Friend();
      v43 = *(int *)(v124 + 40);
      v112 = (void *)(a1 + v43);
      v44 = (char *)a2 + v43;
      v45 = sub_23B7968A8();
      v113 = *(_QWORD *)(v45 - 8);
      v46 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46(v44, 1, v45))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(v112, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        v48 = (int *)v124;
        v49 = v113;
      }
      else
      {
        v49 = v113;
        (*(void (**)(void *, char *, uint64_t))(v113 + 16))(v112, v44, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v112, 0, 1, v45);
        v48 = (int *)v124;
      }
      *(_BYTE *)(a1 + v48[11]) = *((_BYTE *)a2 + v48[11]);
      v92 = v48[12];
      v93 = (void *)(a1 + v92);
      v94 = (char *)a2 + v92;
      if (v46((char *)a2 + v92, 1, v45))
      {
        v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v93, v94, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v93, 0, 1, v45);
      }
      v96 = v48[13];
      v97 = a1 + v96;
      v98 = (uint64_t)a2 + v96;
      v99 = *(_QWORD *)(v98 + 8);
      if (v99)
      {
        *(_QWORD *)v97 = *(_QWORD *)v98;
        *(_QWORD *)(v97 + 8) = v99;
        v100 = *(_QWORD *)(v98 + 24);
        *(_QWORD *)(v97 + 16) = *(_QWORD *)(v98 + 16);
        *(_QWORD *)(v97 + 24) = v100;
        *(_BYTE *)(v97 + 32) = *(_BYTE *)(v98 + 32);
        v101 = *(_QWORD *)(v98 + 48);
        *(_QWORD *)(v97 + 40) = *(_QWORD *)(v98 + 40);
        *(_QWORD *)(v97 + 48) = v101;
        *(_QWORD *)(v97 + 56) = *(_QWORD *)(v98 + 56);
        *(_OWORD *)(v97 + 64) = *(_OWORD *)(v98 + 64);
        v102 = *(_QWORD *)(v98 + 88);
        *(_QWORD *)(v97 + 80) = *(_QWORD *)(v98 + 80);
        *(_QWORD *)(v97 + 88) = v102;
        *(_QWORD *)(v97 + 96) = *(_QWORD *)(v98 + 96);
        *(_BYTE *)(v97 + 104) = *(_BYTE *)(v98 + 104);
        v103 = *(_QWORD *)(v98 + 120);
        *(_QWORD *)(v97 + 112) = *(_QWORD *)(v98 + 112);
        *(_QWORD *)(v97 + 120) = v103;
        v104 = *(_QWORD *)(v98 + 136);
        *(_QWORD *)(v97 + 128) = *(_QWORD *)(v98 + 128);
        *(_QWORD *)(v97 + 136) = v104;
        v105 = *(_QWORD *)(v98 + 152);
        *(_QWORD *)(v97 + 144) = *(_QWORD *)(v98 + 144);
        *(_QWORD *)(v97 + 152) = v105;
        v118 = *(_QWORD *)(v98 + 168);
        *(_QWORD *)(v97 + 160) = *(_QWORD *)(v98 + 160);
        *(_QWORD *)(v97 + 168) = v118;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48 = (int *)v124;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v106 = *(_OWORD *)(v98 + 144);
        *(_OWORD *)(v97 + 128) = *(_OWORD *)(v98 + 128);
        *(_OWORD *)(v97 + 144) = v106;
        *(_OWORD *)(v97 + 160) = *(_OWORD *)(v98 + 160);
        v107 = *(_OWORD *)(v98 + 80);
        *(_OWORD *)(v97 + 64) = *(_OWORD *)(v98 + 64);
        *(_OWORD *)(v97 + 80) = v107;
        v108 = *(_OWORD *)(v98 + 112);
        *(_OWORD *)(v97 + 96) = *(_OWORD *)(v98 + 96);
        *(_OWORD *)(v97 + 112) = v108;
        v109 = *(_OWORD *)(v98 + 16);
        *(_OWORD *)v97 = *(_OWORD *)v98;
        *(_OWORD *)(v97 + 16) = v109;
        v110 = *(_OWORD *)(v98 + 48);
        *(_OWORD *)(v97 + 32) = *(_OWORD *)(v98 + 32);
        *(_OWORD *)(v97 + 48) = v110;
      }
      *(_BYTE *)(a1 + v48[14]) = *((_BYTE *)a2 + v48[14]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FriendStreamChange(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = (int *)type metadata accessor for Friend();
    v4 = a1 + v3[10];
    v5 = sub_23B7968A8();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = a1 + v3[12];
    if (!v7(v8, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    result = *(_QWORD *)(a1 + v3[13] + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *__dst;
  void *__dsta;
  uint64_t v56;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v8;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    v9 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v9;
    v10 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v10;
    v52 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v52;
    v11 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v11;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
    v56 = type metadata accessor for Friend();
    v12 = *(int *)(v56 + 40);
    __dst = (void *)(a1 + v12);
    v13 = (const void *)(a2 + v12);
    v14 = sub_23B7968A8();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v29 = v15;
  }
  else
  {
    v18 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v18;
    v19 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v19;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v20 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v20;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v21 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v21;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    v22 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v22;
    v23 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v23;
    __dsta = *(void **)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = __dsta;
    v24 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v24;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
    v56 = type metadata accessor for Friend();
    v25 = *(int *)(v56 + 40);
    v50 = (void *)(a1 + v25);
    v26 = (const void *)(a2 + v25);
    v14 = sub_23B7968A8();
    v51 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v26, 1, v14))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(v50, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      v28 = (int *)v56;
      v29 = v51;
      goto LABEL_10;
    }
    v29 = v51;
    (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v50, v26, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v14);
  }
  v28 = (int *)v56;
LABEL_10:
  *(_BYTE *)(a1 + v28[11]) = *(_BYTE *)(a2 + v28[11]);
  v30 = v28[12];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  if (v16((const void *)(a2 + v30), 1, v14))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v31, v32, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v14);
  }
  v34 = v28[13];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)(v36 + 8);
  if (v37)
  {
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *(_QWORD *)(v35 + 8) = v37;
    v38 = *(_QWORD *)(v36 + 24);
    *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
    *(_QWORD *)(v35 + 24) = v38;
    *(_BYTE *)(v35 + 32) = *(_BYTE *)(v36 + 32);
    v39 = *(_QWORD *)(v36 + 48);
    *(_QWORD *)(v35 + 40) = *(_QWORD *)(v36 + 40);
    *(_QWORD *)(v35 + 48) = v39;
    *(_QWORD *)(v35 + 56) = *(_QWORD *)(v36 + 56);
    *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
    v40 = *(_QWORD *)(v36 + 88);
    *(_QWORD *)(v35 + 80) = *(_QWORD *)(v36 + 80);
    *(_QWORD *)(v35 + 88) = v40;
    *(_QWORD *)(v35 + 96) = *(_QWORD *)(v36 + 96);
    *(_BYTE *)(v35 + 104) = *(_BYTE *)(v36 + 104);
    v41 = *(_QWORD *)(v36 + 120);
    *(_QWORD *)(v35 + 112) = *(_QWORD *)(v36 + 112);
    *(_QWORD *)(v35 + 120) = v41;
    v42 = *(_QWORD *)(v36 + 136);
    *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
    *(_QWORD *)(v35 + 136) = v42;
    v43 = *(_QWORD *)(v36 + 152);
    *(_QWORD *)(v35 + 144) = *(_QWORD *)(v36 + 144);
    *(_QWORD *)(v35 + 152) = v43;
    v53 = *(_QWORD *)(v36 + 168);
    *(_QWORD *)(v35 + 160) = *(_QWORD *)(v36 + 160);
    *(_QWORD *)(v35 + 168) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = (int *)v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v44 = *(_OWORD *)(v36 + 144);
    *(_OWORD *)(v35 + 128) = *(_OWORD *)(v36 + 128);
    *(_OWORD *)(v35 + 144) = v44;
    *(_OWORD *)(v35 + 160) = *(_OWORD *)(v36 + 160);
    v45 = *(_OWORD *)(v36 + 80);
    *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
    *(_OWORD *)(v35 + 80) = v45;
    v46 = *(_OWORD *)(v36 + 112);
    *(_OWORD *)(v35 + 96) = *(_OWORD *)(v36 + 96);
    *(_OWORD *)(v35 + 112) = v46;
    v47 = *(_OWORD *)(v36 + 16);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *(_OWORD *)(v35 + 16) = v47;
    v48 = *(_OWORD *)(v36 + 48);
    *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
    *(_OWORD *)(v35 + 48) = v48;
  }
  *(_BYTE *)(a1 + v28[14]) = *(_BYTE *)(a2 + v28[14]);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(const void *, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *__dst;
  int *v28;

  if (a1 != a2)
  {
    sub_23B700B04(a1, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
    *(_BYTE *)(a1 + 178) = *(_BYTE *)(a2 + 178);
    *(_BYTE *)(a1 + 179) = *(_BYTE *)(a2 + 179);
    *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
    v28 = (int *)type metadata accessor for Friend();
    v4 = v28[10];
    __dst = (void *)(a1 + v4);
    v5 = (const void *)(a2 + v4);
    v6 = sub_23B7968A8();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8(v5, 1, v6))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(__dst, v5, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dst, v5, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
    }
    v10 = v28;
    *(_BYTE *)(a1 + v28[11]) = *(_BYTE *)(a2 + v28[11]);
    v11 = v28[12];
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    if (v8((const void *)(a2 + v11), 1, v6))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v12, v13, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    }
    v15 = v28[13];
    v16 = a1 + v15;
    v17 = (__int128 *)(a2 + v15);
    if (*((_QWORD *)v17 + 1))
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
      *(_BYTE *)(v16 + 32) = *((_BYTE *)v17 + 32);
      *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
      *(_QWORD *)(v16 + 48) = *((_QWORD *)v17 + 6);
      *(_QWORD *)(v16 + 56) = *((_QWORD *)v17 + 7);
      *(_QWORD *)(v16 + 64) = *((_QWORD *)v17 + 8);
      *(_QWORD *)(v16 + 72) = *((_QWORD *)v17 + 9);
      *(_QWORD *)(v16 + 80) = *((_QWORD *)v17 + 10);
      *(_QWORD *)(v16 + 88) = *((_QWORD *)v17 + 11);
      *(_QWORD *)(v16 + 96) = *((_QWORD *)v17 + 12);
      *(_BYTE *)(v16 + 104) = *((_BYTE *)v17 + 104);
      *(_QWORD *)(v16 + 112) = *((_QWORD *)v17 + 14);
      *(_QWORD *)(v16 + 120) = *((_QWORD *)v17 + 15);
      *(_QWORD *)(v16 + 128) = *((_QWORD *)v17 + 16);
      *(_QWORD *)(v16 + 136) = *((_QWORD *)v17 + 17);
      *(_QWORD *)(v16 + 144) = *((_QWORD *)v17 + 18);
      *(_QWORD *)(v16 + 152) = *((_QWORD *)v17 + 19);
      *(_QWORD *)(v16 + 160) = *((_QWORD *)v17 + 20);
      *(_QWORD *)(v16 + 168) = *((_QWORD *)v17 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *v17;
      v19 = v17[2];
      *(_OWORD *)(v16 + 16) = v17[1];
      *(_OWORD *)(v16 + 32) = v19;
      *(_OWORD *)v16 = v18;
      v20 = v17[3];
      v21 = v17[4];
      v22 = v17[6];
      *(_OWORD *)(v16 + 80) = v17[5];
      *(_OWORD *)(v16 + 96) = v22;
      *(_OWORD *)(v16 + 48) = v20;
      *(_OWORD *)(v16 + 64) = v21;
      v23 = v17[7];
      v24 = v17[8];
      v25 = v17[10];
      *(_OWORD *)(v16 + 144) = v17[9];
      *(_OWORD *)(v16 + 160) = v25;
      *(_OWORD *)(v16 + 112) = v23;
      *(_OWORD *)(v16 + 128) = v24;
    }
    *(_BYTE *)(a1 + v10[14]) = *(_BYTE *)(a2 + v10[14]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23B700B04(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  swift_getEnumCaseMultiPayload();
  v4 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  v9 = (int *)type metadata accessor for Friend();
  v10 = v9[10];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23B7968A8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_BYTE *)(a1 + v9[11]) = *(_BYTE *)(a2 + v9[11]);
  v17 = v9[12];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if (v15((const void *)(a2 + v17), 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v18, v19, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  v21 = v9[13];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  v24 = v23[5];
  v22[4] = v23[4];
  v22[5] = v24;
  v25 = v23[10];
  v26 = v23[8];
  v22[9] = v23[9];
  v22[10] = v25;
  v27 = v23[7];
  v22[6] = v23[6];
  v22[7] = v27;
  v22[8] = v26;
  v28 = v23[1];
  *v22 = *v23;
  v22[1] = v28;
  v29 = v23[3];
  v22[2] = v23[2];
  v22[3] = v29;
  *(_BYTE *)(a1 + v9[14]) = *(_BYTE *)(a2 + v9[14]);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FriendStreamChange(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  if (a1 != a2)
  {
    sub_23B700B04(a1, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    swift_getEnumCaseMultiPayload();
    v4 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v4;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    v6 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v6;
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
    v9 = (int *)type metadata accessor for Friend();
    v10 = v9[10];
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    v13 = sub_23B7968A8();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_BYTE *)(a1 + v9[11]) = *(_BYTE *)(a2 + v9[11]);
    v17 = v9[12];
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    if (v15((const void *)(a2 + v17), 1, v13))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v18, v19, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    v21 = v9[13];
    v22 = (_OWORD *)(a1 + v21);
    v23 = (_OWORD *)(a2 + v21);
    v24 = v23[5];
    v22[4] = v23[4];
    v22[5] = v24;
    v25 = v23[10];
    v26 = v23[8];
    v22[9] = v23[9];
    v22[10] = v25;
    v27 = v23[7];
    v22[6] = v23[6];
    v22[7] = v27;
    v22[8] = v26;
    v28 = v23[1];
    *v22 = *v23;
    v22[1] = v28;
    v29 = v23[3];
    v22[2] = v23[2];
    v22[3] = v29;
    *(_BYTE *)(a1 + v9[14]) = *(_BYTE *)(a2 + v9[14]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FriendStreamChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FriendStreamChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23B700F84()
{
  return swift_storeEnumTagMultiPayload();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Fence.TimeOfDay(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Fence.TimeOfDay(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_256A47FB8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_256A47FB8);
  }
}

uint64_t storeEnumTagSinglePayload for FriendStreamChange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B701088 + 4 * byte_23B7975A2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B7010BC + 4 * byte_23B79759D[v4]))();
}

uint64_t sub_23B7010BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7010C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B7010CCLL);
  return result;
}

uint64_t sub_23B7010D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B7010E0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B7010E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7010EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FriendStreamChange.CodingKeys()
{
  return &type metadata for FriendStreamChange.CodingKeys;
}

uint64_t sub_23B701114()
{
  return 0;
}

ValueMetadata *type metadata accessor for FriendStreamChange.AddedCodingKeys()
{
  return &type metadata for FriendStreamChange.AddedCodingKeys;
}

ValueMetadata *type metadata accessor for FriendStreamChange.RemovedCodingKeys()
{
  return &type metadata for FriendStreamChange.RemovedCodingKeys;
}

uint64_t getEnumTagSinglePayload for FriendshipServiceEntitlement(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s12FindMyLocate18FriendStreamChangeO15AddedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23B7011CC + 4 * byte_23B7975A7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23B7011EC + 4 * byte_23B7975AC[v4]))();
}

_BYTE *sub_23B7011CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23B7011EC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B7011F4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B7011FC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B701204(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B70120C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FriendStreamChange.ModifiedCodingKeys()
{
  return &type metadata for FriendStreamChange.ModifiedCodingKeys;
}

unint64_t sub_23B70122C()
{
  unint64_t result;

  result = qword_256A47FC0;
  if (!qword_256A47FC0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797894, &type metadata for FriendStreamChange.ModifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FC0);
  }
  return result;
}

unint64_t sub_23B701274()
{
  unint64_t result;

  result = qword_256A47FC8;
  if (!qword_256A47FC8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79794C, &type metadata for FriendStreamChange.RemovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FC8);
  }
  return result;
}

unint64_t sub_23B7012BC()
{
  unint64_t result;

  result = qword_256A47FD0;
  if (!qword_256A47FD0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797A04, &type metadata for FriendStreamChange.AddedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FD0);
  }
  return result;
}

unint64_t sub_23B701304()
{
  unint64_t result;

  result = qword_256A47FD8;
  if (!qword_256A47FD8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797ABC, &type metadata for FriendStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FD8);
  }
  return result;
}

unint64_t sub_23B70134C()
{
  unint64_t result;

  result = qword_256A47FE0;
  if (!qword_256A47FE0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797974, &type metadata for FriendStreamChange.AddedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FE0);
  }
  return result;
}

unint64_t sub_23B701394()
{
  unint64_t result;

  result = qword_256A47FE8;
  if (!qword_256A47FE8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79799C, &type metadata for FriendStreamChange.AddedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FE8);
  }
  return result;
}

unint64_t sub_23B7013DC()
{
  unint64_t result;

  result = qword_256A47FF0;
  if (!qword_256A47FF0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7978BC, &type metadata for FriendStreamChange.RemovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FF0);
  }
  return result;
}

unint64_t sub_23B701424()
{
  unint64_t result;

  result = qword_256A47FF8;
  if (!qword_256A47FF8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7978E4, &type metadata for FriendStreamChange.RemovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A47FF8);
  }
  return result;
}

unint64_t sub_23B70146C()
{
  unint64_t result;

  result = qword_256A48000;
  if (!qword_256A48000)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797804, &type metadata for FriendStreamChange.ModifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48000);
  }
  return result;
}

unint64_t sub_23B7014B4()
{
  unint64_t result;

  result = qword_256A48008;
  if (!qword_256A48008)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79782C, &type metadata for FriendStreamChange.ModifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48008);
  }
  return result;
}

unint64_t sub_23B7014FC()
{
  unint64_t result;

  result = qword_256A48010;
  if (!qword_256A48010)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797A2C, &type metadata for FriendStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48010);
  }
  return result;
}

unint64_t sub_23B701544()
{
  unint64_t result;

  result = qword_256A48018;
  if (!qword_256A48018)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797A54, &type metadata for FriendStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48018);
  }
  return result;
}

uint64_t sub_23B701588(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465646461 && a2 == 0xE500000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465696669646F6DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23B7016D4()
{
  unint64_t result;

  result = qword_256A48080;
  if (!qword_256A48080)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipAction, &type metadata for FriendshipAction);
    atomic_store(result, (unint64_t *)&qword_256A48080);
  }
  return result;
}

uint64_t static NIDiscoveryToken.token(from:)(uint64_t a1, uint64_t a2)
{
  return sub_23B7017AC(a1, a2, &qword_256A48218);
}

void *NIDiscoveryToken.dataRepresentation.getter()
{
  return sub_23B7018AC();
}

uint64_t static NINearbyObject.neabyObject(from:)(uint64_t a1, uint64_t a2)
{
  return sub_23B7017AC(a1, a2, &qword_256A48220);
}

uint64_t sub_23B7017AC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_23B70182C(0, &qword_256A48210);
  sub_23B70182C(0, a3);
  return sub_23B796C44();
}

uint64_t sub_23B70182C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void *NINearbyObject.dataRepresentation.getter()
{
  return sub_23B7018AC();
}

void *sub_23B7018AC()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v5);
  v2 = v5[0];
  if (v1)
  {
    v3 = (void *)sub_23B79680C();

  }
  else
  {
    v3 = v2;
    sub_23B7967E8();

    swift_willThrow();
  }
  return v3;
}

uint64_t Device.deviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.idsDeviceId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.isCompanion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t Device.isAutoMeCapable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t sub_23B7019EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B701A24 + 4 * byte_23B797C28[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_23B701A24()
{
  return 0x614E656369766564;
}

uint64_t sub_23B701A40()
{
  return 0x6369766544736469;
}

uint64_t sub_23B701A60()
{
  return 0x6576697463417369;
}

uint64_t sub_23B701A78()
{
  return 0x6544736968547369;
}

uint64_t sub_23B701A98()
{
  return 0x6E61706D6F437369;
}

uint64_t sub_23B701AB8()
{
  return 0x654D6F7475417369;
}

uint64_t sub_23B701ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B7025D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B701B00(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23B701B0C()
{
  sub_23B7021F8();
  return sub_23B796FA4();
}

uint64_t sub_23B701B34()
{
  sub_23B7021F8();
  return sub_23B796FB0();
}

uint64_t Device.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[6];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302758);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  v15 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v13 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 48);
  v11[4] = *(unsigned __int8 *)(v1 + 49);
  v11[5] = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 50);
  v11[2] = *(unsigned __int8 *)(v1 + 51);
  v11[3] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7021F8();
  sub_23B796F8C();
  v23 = 0;
  v9 = v16;
  sub_23B796E78();
  if (!v9)
  {
    v22 = 1;
    sub_23B796E78();
    v21 = 2;
    sub_23B796E78();
    v20 = 3;
    sub_23B796E84();
    v19 = 4;
    sub_23B796E84();
    v18 = 5;
    sub_23B796E84();
    v17 = 6;
    sub_23B796E84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Device.hashValue.getter()
{
  sub_23B796F44();
  Device.hash(into:)();
  return sub_23B796F74();
}

uint64_t Device.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302D48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7021F8();
  sub_23B796F80();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v37 = 0;
  v9 = sub_23B796E00();
  v11 = v10;
  v30 = v9;
  v36 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23B796E00();
  v14 = v13;
  v28 = v12;
  v29 = v11;
  v35 = 2;
  swift_bridgeObjectRetain();
  v26 = sub_23B796E00();
  v27 = v14;
  v34 = 3;
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_23B796E0C();
  v33 = 4;
  v25 = sub_23B796E0C();
  v32 = 5;
  v24 = sub_23B796E0C();
  v31 = 6;
  LOBYTE(v14) = sub_23B796E0C();
  v23 = v17 & 1;
  v25 &= 1u;
  LOBYTE(v17) = v24 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v14 & 1;
  v20 = v29;
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = v20;
  v21 = v27;
  *(_QWORD *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v26;
  *(_QWORD *)(a2 + 40) = v16;
  *(_BYTE *)(a2 + 48) = v23;
  *(_BYTE *)(a2 + 49) = v25;
  *(_BYTE *)(a2 + 50) = v17;
  *(_BYTE *)(a2 + 51) = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B702158()
{
  sub_23B796F44();
  Device.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B7021D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Device.init(from:)(a1, a2);
}

uint64_t sub_23B7021E4(_QWORD *a1)
{
  return Device.encode(to:)(a1);
}

unint64_t sub_23B7021F8()
{
  unint64_t result;

  result = qword_254302ED0;
  if (!qword_254302ED0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797E08, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302ED0);
  }
  return result;
}

unint64_t sub_23B702240()
{
  unint64_t result;

  result = qword_254302620;
  if (!qword_254302620)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Device, &type metadata for Device);
    atomic_store(result, (unint64_t *)&qword_254302620);
  }
  return result;
}

uint64_t assignWithCopy for Device(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  return a1;
}

uint64_t assignWithTake for Device(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  return a1;
}

uint64_t getEnumTagSinglePayload for Device.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Device.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23B702480 + 4 * byte_23B797C34[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23B7024B4 + 4 * byte_23B797C2F[v4]))();
}

uint64_t sub_23B7024B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7024BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B7024C4);
  return result;
}

uint64_t sub_23B7024D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B7024D8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23B7024DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7024E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Device.CodingKeys()
{
  return &type metadata for Device.CodingKeys;
}

unint64_t sub_23B702504()
{
  unint64_t result;

  result = qword_256A48228;
  if (!qword_256A48228)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797DE0, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48228);
  }
  return result;
}

unint64_t sub_23B70254C()
{
  unint64_t result;

  result = qword_254302EE0;
  if (!qword_254302EE0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797D50, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EE0);
  }
  return result;
}

unint64_t sub_23B702594()
{
  unint64_t result;

  result = qword_254302ED8;
  if (!qword_254302ED8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797D78, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302ED8);
  }
  return result;
}

uint64_t sub_23B7025D8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E656369766564 && a2 == 0xEA0000000000656DLL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369766544736469 && a2 == 0xEB00000000644965 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6576697463417369 && a2 == 0xE800000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6544736968547369 && a2 == 0xEC00000065636976 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E61706D6F437369 && a2 == 0xEB000000006E6F69 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x654D6F7475417369 && a2 == 0xEF656C6261706143)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t PlaceMark.locality.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.administrativeArea.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.country.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.stateCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.streetAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.streetName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.formattedAddressLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlaceMark.formattedAddressLinesWithoutCountry.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlaceMark.coarseAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.poiAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.smallAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.mediumAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceMark.largeAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23B702B30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B702B64 + 4 * byte_23B797E58[a1]))(0x7974696C61636F6CLL, 0xE800000000000000);
}

unint64_t sub_23B702B64()
{
  return 0xD000000000000012;
}

uint64_t sub_23B702B80()
{
  return 0x7972746E756F63;
}

uint64_t sub_23B702B98()
{
  return 0x646F436574617473;
}

uint64_t sub_23B702BB4()
{
  return 0x6441746565727473;
}

uint64_t sub_23B702C84(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B702CB8 + 4 * byte_23B797E64[a1]))(0x7974696C61636F6CLL, 0xE800000000000000);
}

unint64_t sub_23B702CB8()
{
  return 0xD000000000000012;
}

uint64_t sub_23B702CD4()
{
  return 0x7972746E756F63;
}

uint64_t sub_23B702CEC()
{
  return 0x646F436574617473;
}

uint64_t sub_23B702D08()
{
  return 0x6441746565727473;
}

uint64_t sub_23B702DD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_23B702B30(*a1);
  v5 = v4;
  if (v3 == sub_23B702B30(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23B702E60()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23B796F44();
  sub_23B702B30(v1);
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

uint64_t sub_23B702EC0()
{
  unsigned __int8 *v0;

  sub_23B702B30(*v0);
  sub_23B796A64();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B702F00()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23B796F44();
  sub_23B702B30(v1);
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

uint64_t sub_23B702F5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23B706C68();
  *a1 = result;
  return result;
}

uint64_t sub_23B702F88@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23B702B30(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23B702FB0()
{
  unsigned __int8 *v0;

  return sub_23B702C84(*v0);
}

uint64_t sub_23B702FB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23B706C68();
  *a1 = result;
  return result;
}

void sub_23B702FDC(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_23B702FE8()
{
  sub_23B703C6C();
  return sub_23B796FA4();
}

uint64_t sub_23B703010()
{
  sub_23B703C6C();
  return sub_23B796FB0();
}

uint64_t PlaceMark.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48230);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_23B703C6C();
  sub_23B796F80();
  if (v2)
  {
    v91 = v2;
    v89 = 0;
    v90 = 0;
    v92 = 0;
    v93 = 0;
    v94 = 0;
    v95 = 0;
    v87 = 0;
    v88 = 0;
    v11 = 0;
    v96 = 0;
    v97 = 0;
    v98 = 0;
    v99 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v100 = 0;
    v16 = 0;
    v17 = 0;
    v85 = 0;
    v18 = 0;
  }
  else
  {
    LOBYTE(v113) = 0;
    v10 = sub_23B796DDC();
    v21 = v20;
    v22 = a2;
    v84 = v10;
    LOBYTE(v113) = 1;
    swift_bridgeObjectRetain();
    v23 = sub_23B796DDC();
    v85 = v21;
    v25 = v24;
    v83 = v23;
    LOBYTE(v113) = 2;
    swift_bridgeObjectRetain();
    v26 = sub_23B796DDC();
    v99 = v25;
    v80 = v26;
    LOBYTE(v113) = 3;
    v100 = v27;
    swift_bridgeObjectRetain();
    v81 = sub_23B796DDC();
    LOBYTE(v113) = 4;
    v82 = v28;
    swift_bridgeObjectRetain();
    v29 = sub_23B796DDC();
    v31 = v30;
    v79 = v29;
    LOBYTE(v113) = 5;
    swift_bridgeObjectRetain();
    v32 = sub_23B796DDC();
    v97 = v31;
    v78 = v32;
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
    LOBYTE(v101) = 6;
    sub_23B6F984C(&qword_2543026C8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    v98 = v34;
    swift_bridgeObjectRetain();
    sub_23B796DF4();
    v35 = v113;
    v96 = v113;
    if (v113)
    {
      if (*(_QWORD *)(v113 + 16))
      {
        swift_bridgeObjectRetain_n();
        v77 = sub_23B703E78(1, v35);
      }
      else
      {
        if (v98)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v36 = sub_23B705410(0, 1, 1, MEMORY[0x24BEE4AF8]);
          v38 = v36[2];
          v37 = v36[3];
          if (v38 >= v37 >> 1)
            v36 = sub_23B705410((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
          v39 = v78;
          v36[2] = v38 + 1;
          v40 = &v36[2 * v38];
          v41 = v98;
          v40[4] = v39;
          v40[5] = v41;
          v42 = v82;
        }
        else
        {
          swift_bridgeObjectRetain();
          v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
          v42 = v82;
        }
        if (v21)
        {
          swift_bridgeObjectRetain();
          v43 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v43 = sub_23B705410(0, v36[2] + 1, 1, v36);
          v36 = v43;
          v44 = v43[2];
          v45 = v36[3];
          if (v44 >= v45 >> 1)
            v36 = sub_23B705410((_QWORD *)(v45 > 1), v44 + 1, 1, v36);
          v36[2] = v44 + 1;
          v46 = &v36[2 * v44];
          v46[4] = v84;
          v46[5] = v21;
          v42 = v82;
        }
        if (v42)
        {
          swift_bridgeObjectRetain();
          v47 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v47 = sub_23B705410(0, v36[2] + 1, 1, v36);
          v36 = v47;
          v49 = v47[2];
          v48 = v47[3];
          if (v49 >= v48 >> 1)
            v36 = sub_23B705410((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
          v36[2] = v49 + 1;
          v50 = &v36[2 * v49];
          v51 = v82;
          v50[4] = v81;
          v50[5] = v51;
        }
        v77 = (uint64_t)v36;
      }
    }
    else
    {
      v77 = 0;
    }
    LOBYTE(v113) = 7;
    v88 = sub_23B796DDC();
    LOBYTE(v113) = 8;
    v95 = v52;
    swift_bridgeObjectRetain();
    v87 = sub_23B796DDC();
    LOBYTE(v113) = 9;
    v94 = v53;
    swift_bridgeObjectRetain();
    v89 = sub_23B796DDC();
    LOBYTE(v113) = 10;
    v93 = v54;
    swift_bridgeObjectRetain();
    v55 = sub_23B796DDC();
    v91 = 0;
    v92 = v55;
    v56 = v82;
    v137 = 11;
    v90 = v57;
    swift_bridgeObjectRetain();
    v58 = v91;
    v59 = sub_23B796DDC();
    v91 = v58;
    if (!v58)
    {
      v61 = v59;
      v62 = v60;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v63 = v62;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v101 = v84;
      *((_QWORD *)&v101 + 1) = v21;
      *(_QWORD *)&v102 = v83;
      *((_QWORD *)&v102 + 1) = v99;
      *(_QWORD *)&v103 = v80;
      *((_QWORD *)&v103 + 1) = v100;
      *(_QWORD *)&v104 = v81;
      *((_QWORD *)&v104 + 1) = v56;
      *(_QWORD *)&v105 = v79;
      *((_QWORD *)&v105 + 1) = v97;
      *(_QWORD *)&v106 = v78;
      *((_QWORD *)&v106 + 1) = v98;
      v64 = v95;
      *(_QWORD *)&v107 = v96;
      *((_QWORD *)&v107 + 1) = v77;
      *(_QWORD *)&v108 = v88;
      *((_QWORD *)&v108 + 1) = v95;
      *(_QWORD *)&v109 = v87;
      *((_QWORD *)&v109 + 1) = v94;
      *(_QWORD *)&v110 = v89;
      *((_QWORD *)&v110 + 1) = v93;
      *(_QWORD *)&v111 = v92;
      *((_QWORD *)&v111 + 1) = v90;
      v76 = v61;
      *(_QWORD *)&v112 = v61;
      *((_QWORD *)&v112 + 1) = v62;
      swift_bridgeObjectRetain();
      sub_23B703D94((uint64_t)&v101);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = v97;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = v94;
      swift_bridgeObjectRelease();
      v67 = v93;
      swift_bridgeObjectRelease();
      v68 = v90;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v69 = v96;
      swift_bridgeObjectRelease();
      v70 = v110;
      v22[8] = v109;
      v22[9] = v70;
      v71 = v112;
      v22[10] = v111;
      v22[11] = v71;
      v72 = v106;
      v22[4] = v105;
      v22[5] = v72;
      v73 = v108;
      v22[6] = v107;
      v22[7] = v73;
      v74 = v102;
      *v22 = v101;
      v22[1] = v74;
      v75 = v104;
      v22[2] = v103;
      v22[3] = v75;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
      v113 = v84;
      v114 = v85;
      v115 = v83;
      v116 = v99;
      v117 = v80;
      v118 = v100;
      v119 = v81;
      v120 = v82;
      v121 = v79;
      v122 = v65;
      v123 = v78;
      v124 = v98;
      v125 = v69;
      v126 = v77;
      v127 = v88;
      v128 = v64;
      v129 = v87;
      v130 = v66;
      v131 = v89;
      v132 = v67;
      v133 = v92;
      v134 = v68;
      v135 = v76;
      v136 = v63;
      return sub_23B703CB0((uint64_t)&v113);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v83;
    v18 = v84;
    v16 = v80;
    v15 = v81;
    v12 = v78;
    v13 = v79;
    v11 = v77;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  v113 = v18;
  v114 = v85;
  v115 = v17;
  v116 = v99;
  v117 = v16;
  v118 = v100;
  v119 = v15;
  v120 = v14;
  v121 = v13;
  v122 = v97;
  v123 = v12;
  v124 = v98;
  v125 = v96;
  v126 = v11;
  v127 = v88;
  v128 = v95;
  v129 = v87;
  v130 = v94;
  v131 = v89;
  v132 = v93;
  v133 = v92;
  v134 = v90;
  v136 = 0;
  v135 = 0;
  return sub_23B703CB0((uint64_t)&v113);
}

unint64_t sub_23B703C6C()
{
  unint64_t result;

  result = qword_256A48238;
  if (!qword_256A48238)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79809C, &type metadata for PlaceMark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48238);
  }
  return result;
}

uint64_t sub_23B703CB0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B703D94(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B703E78(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (result < 0)
    goto LABEL_30;
  v2 = a2;
  if (!result)
    return v2;
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
    v8 = MEMORY[0x24BEE4AF8];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v8;
  }
  v4 = 0;
  v5 = 0;
  v6 = (uint64_t *)(a2 + 40);
  v25 = v3 - 1;
  v7 = MEMORY[0x24BEE4AF8];
  v8 = MEMORY[0x24BEE4AF8];
  v24 = result;
  do
  {
    v14 = *(v6 - 1);
    v13 = *v6;
    v15 = *(_QWORD *)(v7 + 16);
    if (v15 < result)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23B6F3FB8(0, v15 + 1, 1);
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
        sub_23B6F3FB8(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v7 + 16) = v10 + 1;
      v11 = v7 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v14;
      *(_QWORD *)(v11 + 40) = v13;
      result = v24;
      v12 = a2;
LABEL_8:
      if (v25 == v4)
        goto LABEL_25;
      goto LABEL_9;
    }
    if (v5 >= v15)
      goto LABEL_28;
    v23 = *(v6 - 1);
    v16 = v7 + 16 * v5;
    v17 = *(_QWORD *)(v16 + 32);
    v18 = *(_QWORD *)(v16 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_23B6F3FB8(0, *(_QWORD *)(v8 + 16) + 1, 1);
    v20 = *(_QWORD *)(v8 + 16);
    v19 = *(_QWORD *)(v8 + 24);
    if (v20 >= v19 >> 1)
      sub_23B6F3FB8(v19 > 1, v20 + 1, 1);
    *(_QWORD *)(v8 + 16) = v20 + 1;
    v21 = v8 + 16 * v20;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v18;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_23B705BAC(v7);
      v7 = result;
    }
    v12 = a2;
    if (v5 >= *(_QWORD *)(v7 + 16))
      goto LABEL_29;
    v22 = v7 + 16 * v5;
    swift_bridgeObjectRelease();
    result = v24;
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v13;
    if ((uint64_t)++v5 < v24)
      goto LABEL_8;
    if (v25 == v4)
      goto LABEL_25;
    v5 = 0;
LABEL_9:
    ++v4;
    v6 += 2;
  }
  while (v4 < *(_QWORD *)(v12 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t PlaceMark.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[9];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48240);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v34 = v1[3];
  v35 = v7;
  v8 = v1[4];
  v32 = v1[5];
  v33 = v8;
  v9 = v1[6];
  v30 = v1[7];
  v31 = v9;
  v10 = v1[9];
  v27 = v1[8];
  v28 = v10;
  v11 = v1[11];
  v25 = v1[10];
  v26 = v11;
  v12 = v1[12];
  v23[8] = v1[14];
  v24 = v12;
  v13 = v1[15];
  v23[6] = v1[16];
  v23[7] = v13;
  v14 = v1[17];
  v23[4] = v1[18];
  v23[5] = v14;
  v15 = v1[19];
  v23[2] = v1[20];
  v23[3] = v15;
  v23[1] = v1[21];
  v16 = v1[23];
  v29 = v1[22];
  v17 = a1[3];
  v18 = a1;
  v20 = v19;
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_23B703C6C();
  sub_23B796F8C();
  LOBYTE(v38) = 0;
  v21 = v36;
  sub_23B796E54();
  if (!v21)
  {
    v36 = v16;
    LOBYTE(v38) = 1;
    sub_23B796E54();
    LOBYTE(v38) = 2;
    sub_23B796E54();
    v35 = v4;
    LOBYTE(v38) = 3;
    sub_23B796E54();
    LOBYTE(v38) = 4;
    sub_23B796E54();
    LOBYTE(v38) = 5;
    sub_23B796E54();
    v38 = v24;
    v37 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
    sub_23B6F984C(&qword_254302C30, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23B796E6C();
    LOBYTE(v38) = 7;
    sub_23B796E54();
    LOBYTE(v38) = 8;
    sub_23B796E54();
    LOBYTE(v38) = 9;
    sub_23B796E54();
    LOBYTE(v38) = 10;
    sub_23B796E54();
    LOBYTE(v38) = 11;
    sub_23B796E54();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v20);
}

double PlaceMark.init(locality:administrativeArea:country:state:streetAddress:streetName:formattedAddress:coarseAddress:poiAddress:smallAddress:mediumAddress:largeAddress:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, __int128 a10, __int128 a11, uint64_t a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, uint64_t a17, uint64_t a18)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  double result;
  __int128 v35;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  v23 = a18;
  v24 = a12;
  if (*(_QWORD *)(a12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_23B703E78(1, a12);
    v26 = a7;
    v27 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302600);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_23B7980F0;
    *(_OWORD *)(v28 + 32) = a11;
    *(_QWORD *)(v28 + 48) = a1;
    *(_QWORD *)(v28 + 56) = a2;
    *(_QWORD *)(v28 + 64) = a7;
    *(_QWORD *)(v28 + 72) = a8;
    *(_QWORD *)(v28 + 80) = a5;
    *(_QWORD *)(v28 + 88) = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_23B798100;
    *(_OWORD *)(v25 + 32) = a11;
    v27 = a1;
    *(_QWORD *)(v25 + 48) = a1;
    *(_QWORD *)(v25 + 56) = a2;
    *(_QWORD *)(v25 + 64) = a7;
    *(_QWORD *)(v25 + 72) = a8;
    v24 = v28;
    v23 = a18;
    v26 = a7;
  }
  *(_QWORD *)&v40 = v27;
  *((_QWORD *)&v40 + 1) = a2;
  *(_QWORD *)&v41 = a3;
  *((_QWORD *)&v41 + 1) = a4;
  *(_QWORD *)&v42 = a5;
  *((_QWORD *)&v42 + 1) = a6;
  *(_QWORD *)&v43 = v26;
  *((_QWORD *)&v43 + 1) = a8;
  v44 = a10;
  v45 = a11;
  *(_QWORD *)&v46 = v24;
  *((_QWORD *)&v46 + 1) = v25;
  v47 = a13;
  v48 = a14;
  v49 = a15;
  v50 = a16;
  *(_QWORD *)&v51 = a17;
  *((_QWORD *)&v51 + 1) = v23;
  sub_23B703D94((uint64_t)&v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B703CB0((uint64_t)&v40);
  v29 = v49;
  a9[8] = v48;
  a9[9] = v29;
  v30 = v51;
  a9[10] = v50;
  a9[11] = v30;
  v31 = v45;
  a9[4] = v44;
  a9[5] = v31;
  v32 = v47;
  a9[6] = v46;
  a9[7] = v32;
  v33 = v41;
  *a9 = v40;
  a9[1] = v33;
  result = *(double *)&v42;
  v35 = v43;
  a9[2] = v42;
  a9[3] = v35;
  return result;
}

double PlaceMark.init(address:)@<D0>(void *__src@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  double result;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _QWORD __dst[35];

  memcpy(__dst, __src, 0x110uLL);
  v2 = __dst[12];
  if (__dst[12])
    v3 = __dst[12];
  else
    v3 = 0xE000000000000000;
  v4 = __dst[4];
  v5 = __dst[8];
  if (__dst[4])
    v6 = __dst[4];
  else
    v6 = 0xE000000000000000;
  v7 = __dst[14];
  v36 = __dst[13];
  v38 = __dst[15];
  if (__dst[14])
    v8 = __dst[14];
  else
    v8 = 0xE000000000000000;
  v39 = __dst[9];
  v40 = v3;
  if (__dst[8])
    v9 = __dst[8];
  else
    v9 = 0xE000000000000000;
  v46 = __dst[16];
  v47 = v9;
  v42 = __dst[7];
  v44 = __dst[11];
  v33 = __dst[3];
  v48 = __dst[2];
  v41 = __dst[10];
  if (*(_QWORD *)(__dst[2] + 16))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = sub_23B703E78(1, v48);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302600);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_23B798110;
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_23B798110;
    v13 = v44;
    if (!v2)
      v13 = 0;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v3;
    v35 = v12;
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48 = v11;
    swift_bridgeObjectRetain();
  }
  if (v5)
    v14 = v42;
  else
    v14 = 0;
  v30 = __dst[24];
  v31 = v14;
  v43 = __dst[25];
  if (v7)
    v15 = v36;
  else
    v15 = 0;
  if (v4)
    v16 = v33;
  else
    v16 = 0;
  if (v2)
    v17 = v44;
  else
    v17 = 0;
  v18 = __dst[27];
  v28 = __dst[26];
  v29 = __dst[28];
  v19 = __dst[29];
  v37 = __dst[30];
  v20 = __dst[31];
  v34 = __dst[32];
  v45 = __dst[33];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_23B70551C((uint64_t)__dst);
  *(_QWORD *)&v49 = v17;
  *((_QWORD *)&v49 + 1) = v40;
  *(_QWORD *)&v50 = v38;
  *((_QWORD *)&v50 + 1) = v46;
  *(_QWORD *)&v51 = v16;
  *((_QWORD *)&v51 + 1) = v10;
  *(_QWORD *)&v52 = v15;
  *((_QWORD *)&v52 + 1) = v8;
  *(_QWORD *)&v53 = v39;
  *((_QWORD *)&v53 + 1) = v41;
  *(_QWORD *)&v54 = v31;
  *((_QWORD *)&v54 + 1) = v47;
  *(_QWORD *)&v55 = v48;
  *((_QWORD *)&v55 + 1) = v35;
  *(_QWORD *)&v56 = v30;
  *((_QWORD *)&v56 + 1) = v43;
  *(_QWORD *)&v57 = v28;
  *((_QWORD *)&v57 + 1) = v18;
  *(_QWORD *)&v58 = v29;
  *((_QWORD *)&v58 + 1) = v19;
  *(_QWORD *)&v59 = v37;
  *((_QWORD *)&v59 + 1) = v20;
  *(_QWORD *)&v60 = v34;
  *((_QWORD *)&v60 + 1) = v45;
  sub_23B703D94((uint64_t)&v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B703CB0((uint64_t)&v49);
  v21 = v58;
  a2[8] = v57;
  a2[9] = v21;
  v22 = v60;
  a2[10] = v59;
  a2[11] = v22;
  v23 = v54;
  a2[4] = v53;
  a2[5] = v23;
  v24 = v56;
  a2[6] = v55;
  a2[7] = v24;
  v25 = v50;
  *a2 = v49;
  a2[1] = v25;
  result = *(double *)&v51;
  v27 = v52;
  a2[2] = v51;
  a2[3] = v27;
  return result;
}

uint64_t PlaceMark.description.getter()
{
  sub_23B796CD4();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CE0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t PlaceMark.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0[3];
  v2 = v0[5];
  v3 = v0[7];
  v15 = v0[9];
  v16 = v0[11];
  v17 = v0[12];
  v18 = v0[13];
  v19 = v0[15];
  v4 = v0[17];
  v5 = v0[19];
  v20 = v0[21];
  v21 = v0[23];
  if (v0[1])
  {
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    v6 = v5;
    if (v1)
    {
LABEL_3:
      sub_23B796F5C();
      swift_bridgeObjectRetain();
      sub_23B796A64();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23B796F5C();
    v6 = v5;
    if (v1)
      goto LABEL_3;
  }
  sub_23B796F5C();
LABEL_6:
  if (v2)
  {
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    v7 = v16;
    if (v3)
      goto LABEL_8;
  }
  else
  {
    sub_23B796F5C();
    v7 = v16;
    if (v3)
    {
LABEL_8:
      sub_23B796F5C();
      swift_bridgeObjectRetain();
      sub_23B796A64();
      swift_bridgeObjectRelease();
      if (v15)
        goto LABEL_9;
      goto LABEL_28;
    }
  }
  sub_23B796F5C();
  if (v15)
  {
LABEL_9:
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_10;
    goto LABEL_29;
  }
LABEL_28:
  sub_23B796F5C();
  if (v7)
  {
LABEL_10:
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_11;
LABEL_30:
    sub_23B796F5C();
    if (v18)
      goto LABEL_16;
LABEL_31:
    sub_23B796F5C();
    if (v19)
      goto LABEL_21;
    goto LABEL_32;
  }
LABEL_29:
  sub_23B796F5C();
  if (!v17)
    goto LABEL_30;
LABEL_11:
  sub_23B796F5C();
  sub_23B796F50();
  v8 = *(_QWORD *)(v17 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = v17 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23B796A64();
      swift_bridgeObjectRelease();
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  if (!v18)
    goto LABEL_31;
LABEL_16:
  sub_23B796F5C();
  sub_23B796F50();
  v10 = *(_QWORD *)(v18 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    v11 = v18 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23B796A64();
      swift_bridgeObjectRelease();
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  if (v19)
  {
LABEL_21:
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    v13 = v20;
    v12 = v21;
    if (v4)
      goto LABEL_22;
    goto LABEL_33;
  }
LABEL_32:
  sub_23B796F5C();
  v13 = v20;
  v12 = v21;
  if (v4)
  {
LABEL_22:
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_23;
    goto LABEL_34;
  }
LABEL_33:
  sub_23B796F5C();
  if (v6)
  {
LABEL_23:
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_24;
LABEL_35:
    sub_23B796F5C();
    if (v12)
      goto LABEL_25;
    return sub_23B796F5C();
  }
LABEL_34:
  sub_23B796F5C();
  if (!v13)
    goto LABEL_35;
LABEL_24:
  sub_23B796F5C();
  swift_bridgeObjectRetain();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_25:
    sub_23B796F5C();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    return swift_bridgeObjectRelease();
  }
  return sub_23B796F5C();
}

uint64_t PlaceMark.hashValue.getter()
{
  sub_23B796F44();
  PlaceMark.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B705368()
{
  sub_23B796F44();
  PlaceMark.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B7053A8()
{
  sub_23B796F44();
  PlaceMark.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B7053E0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return PlaceMark.init(from:)(a1, a2);
}

uint64_t sub_23B7053F4(_QWORD *a1)
{
  return PlaceMark.encode(to:)(a1);
}

_QWORD *sub_23B705410(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254302600);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23B706CB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B70551C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B705640(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23B7059A0(a1, a2, a3, a4, &qword_256A48268, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
}

_QWORD *sub_23B705654(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543025F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[22 * v8 + 4])
          memmove(v12, a4 + 4, 176 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23B706DA0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B70577C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48270);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302F70) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23B796D64();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302F70) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23B706E90(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_23B70598C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23B7059A0(a1, a2, a3, a4, &qword_256A48278, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_23B7059A0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23B796D64();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23B706FAC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23B705BAC(uint64_t a1)
{
  return sub_23B6F3FD4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

BOOL _s12FindMyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  char v38;
  _BOOL8 result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  _QWORD *v162;
  _QWORD *v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  _QWORD *v223;
  _QWORD *v224;
  _QWORD *v225;
  _QWORD *v226;
  _QWORD *v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  _QWORD *v255;
  _QWORD *v256;
  _QWORD *v257;
  _QWORD *v258;
  _QWORD *v259;
  uint64_t v260;

  v3 = a1[1];
  v245 = a1[2];
  v241 = a1[4];
  v252 = a1[5];
  v253 = a1[3];
  v237 = a1[6];
  v243 = a1[7];
  v235 = a1[8];
  v4 = a1[10];
  v239 = a1[9];
  v6 = a1[11];
  v5 = (_QWORD *)a1[12];
  v7 = (_QWORD *)a1[13];
  v8 = a1[14];
  v9 = a1[15];
  v10 = a1[16];
  v11 = a1[17];
  v231 = a1[18];
  v232 = a1[19];
  v12 = a1[20];
  v13 = a1[21];
  v14 = a1[22];
  v15 = a1[23];
  v16 = a2[1];
  v244 = a2[2];
  v17 = a2[3];
  v240 = a2[4];
  v251 = a2[5];
  v236 = a2[6];
  v242 = a2[7];
  v234 = a2[8];
  v238 = a2[9];
  v233 = a2[10];
  v19 = (_QWORD *)a2[12];
  v18 = (_QWORD *)a2[13];
  v21 = a2[14];
  v20 = a2[15];
  v23 = a2[16];
  v22 = a2[17];
  v24 = a2[19];
  v230 = a2[18];
  v25 = a2[20];
  v26 = a2[21];
  v28 = a2[22];
  v27 = a2[23];
  if (!v3)
  {
    v229 = a2[11];
    if (v16)
      return 0;
    goto LABEL_8;
  }
  if (!v16)
    return 0;
  v229 = a2[11];
  if (*a1 == *a2 && v3 == v16)
    goto LABEL_8;
  v166 = a1[15];
  v172 = a1[22];
  v204 = a2[23];
  v213 = a2[22];
  v188 = a2[21];
  v180 = a1[21];
  v29 = a1[20];
  v150 = a1[11];
  v155 = a1[10];
  v30 = a2[20];
  v31 = a2[19];
  v146 = a2[17];
  v147 = a1[16];
  v32 = a1[17];
  v33 = a2[16];
  v34 = a1[14];
  v160 = (_QWORD *)a1[12];
  v35 = a2[15];
  v148 = a2[14];
  v222 = (_QWORD *)a2[13];
  v36 = (_QWORD *)a1[13];
  v37 = sub_23B796ECC();
  v7 = v36;
  v20 = v35;
  v5 = v160;
  v9 = v166;
  v8 = v34;
  v23 = v33;
  v22 = v146;
  v10 = v147;
  v11 = v32;
  v21 = v148;
  v6 = v150;
  v24 = v31;
  v25 = v30;
  v4 = v155;
  v12 = v29;
  v13 = v180;
  v26 = v188;
  v14 = v172;
  v27 = v204;
  v28 = v213;
  v18 = v222;
  v38 = v37;
  result = 0;
  if ((v38 & 1) != 0)
  {
LABEL_8:
    if (v253)
    {
      if (!v17)
        return 0;
      if (v245 != v244 || v253 != v17)
      {
        v167 = v9;
        v173 = v14;
        v223 = v18;
        v40 = v12;
        v246 = v25;
        v196 = v15;
        v205 = v27;
        v181 = v13;
        v189 = v26;
        v41 = v24;
        v214 = v28;
        v42 = v10;
        v43 = v11;
        v44 = v22;
        v151 = v6;
        v156 = v4;
        v45 = v23;
        v46 = v8;
        v47 = v20;
        v161 = v5;
        v48 = v21;
        v254 = v7;
        v49 = sub_23B796ECC();
        v7 = v254;
        v21 = v48;
        v5 = v161;
        v9 = v167;
        v20 = v47;
        v8 = v46;
        v23 = v45;
        v6 = v151;
        v4 = v156;
        v22 = v44;
        v11 = v43;
        v10 = v42;
        v27 = v205;
        v28 = v214;
        v24 = v41;
        v13 = v181;
        v26 = v189;
        v15 = v196;
        v25 = v246;
        v12 = v40;
        v18 = v223;
        v14 = v173;
        v50 = v49;
        result = 0;
        if ((v50 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v252)
    {
      if (!v251)
        return 0;
      if (v241 != v240 || v252 != v251)
      {
        v168 = v9;
        v174 = v14;
        v224 = v18;
        v51 = v12;
        v247 = v25;
        v197 = v15;
        v206 = v27;
        v182 = v13;
        v190 = v26;
        v52 = v24;
        v215 = v28;
        v53 = v10;
        v54 = v11;
        v55 = v22;
        v152 = v6;
        v157 = v4;
        v56 = v23;
        v57 = v8;
        v58 = v20;
        v162 = v5;
        v59 = v21;
        v255 = v7;
        v60 = sub_23B796ECC();
        v7 = v255;
        v21 = v59;
        v5 = v162;
        v9 = v168;
        v20 = v58;
        v8 = v57;
        v23 = v56;
        v6 = v152;
        v4 = v157;
        v22 = v55;
        v11 = v54;
        v10 = v53;
        v27 = v206;
        v28 = v215;
        v24 = v52;
        v13 = v182;
        v26 = v190;
        v15 = v197;
        v25 = v247;
        v12 = v51;
        v18 = v224;
        v14 = v174;
        v61 = v60;
        result = 0;
        if ((v61 & 1) == 0)
          return result;
      }
    }
    else if (v251)
    {
      return 0;
    }
    if (v243)
    {
      if (!v242)
        return 0;
      if (v237 != v236 || v243 != v242)
      {
        v169 = v9;
        v175 = v14;
        v225 = v18;
        v62 = v12;
        v248 = v25;
        v198 = v15;
        v207 = v27;
        v183 = v13;
        v191 = v26;
        v63 = v24;
        v216 = v28;
        v64 = v10;
        v65 = v11;
        v66 = v22;
        v153 = v6;
        v158 = v4;
        v67 = v23;
        v68 = v8;
        v69 = v20;
        v163 = v5;
        v70 = v21;
        v256 = v7;
        v71 = sub_23B796ECC();
        v7 = v256;
        v21 = v70;
        v5 = v163;
        v9 = v169;
        v20 = v69;
        v8 = v68;
        v23 = v67;
        v6 = v153;
        v4 = v158;
        v22 = v66;
        v11 = v65;
        v10 = v64;
        v27 = v207;
        v28 = v216;
        v24 = v63;
        v13 = v183;
        v26 = v191;
        v15 = v198;
        v25 = v248;
        v12 = v62;
        v18 = v225;
        v14 = v175;
        v72 = v71;
        result = 0;
        if ((v72 & 1) == 0)
          return result;
      }
    }
    else if (v242)
    {
      return 0;
    }
    if (v239)
    {
      if (!v238)
        return 0;
      if (v235 != v234 || v239 != v238)
      {
        v170 = v9;
        v176 = v14;
        v226 = v18;
        v73 = v12;
        v249 = v25;
        v199 = v15;
        v208 = v27;
        v184 = v13;
        v192 = v26;
        v74 = v24;
        v217 = v28;
        v75 = v10;
        v76 = v11;
        v77 = v22;
        v154 = v6;
        v159 = v4;
        v78 = v23;
        v79 = v8;
        v80 = v20;
        v164 = v5;
        v81 = v21;
        v257 = v7;
        v82 = sub_23B796ECC();
        v7 = v257;
        v21 = v81;
        v5 = v164;
        v9 = v170;
        v20 = v80;
        v8 = v79;
        v23 = v78;
        v6 = v154;
        v4 = v159;
        v22 = v77;
        v11 = v76;
        v10 = v75;
        v27 = v208;
        v28 = v217;
        v24 = v74;
        v13 = v184;
        v26 = v192;
        v15 = v199;
        v25 = v249;
        v12 = v73;
        v18 = v226;
        v14 = v176;
        v83 = v82;
        result = 0;
        if ((v83 & 1) == 0)
          return result;
      }
    }
    else if (v238)
    {
      return 0;
    }
    if (v6)
    {
      if (!v229)
        return 0;
      if (v4 != v233 || v6 != v229)
      {
        v171 = v9;
        v177 = v14;
        v227 = v18;
        v84 = v12;
        v250 = v25;
        v200 = v15;
        v209 = v27;
        v185 = v13;
        v193 = v26;
        v85 = v24;
        v218 = v28;
        v86 = v10;
        v87 = v11;
        v88 = v22;
        v89 = v23;
        v90 = v8;
        v91 = v20;
        v165 = v5;
        v92 = v21;
        v258 = v7;
        v93 = sub_23B796ECC();
        v7 = v258;
        v21 = v92;
        v5 = v165;
        v9 = v171;
        v20 = v91;
        v8 = v90;
        v23 = v89;
        v22 = v88;
        v11 = v87;
        v10 = v86;
        v27 = v209;
        v28 = v218;
        v24 = v85;
        v13 = v185;
        v26 = v193;
        v15 = v200;
        v25 = v250;
        v12 = v84;
        v18 = v227;
        v14 = v177;
        v94 = v93;
        result = 0;
        if ((v94 & 1) == 0)
          return result;
      }
    }
    else if (v229)
    {
      return 0;
    }
    if (v5)
    {
      if (!v19)
        return 0;
      v219 = v28;
      v228 = v18;
      v95 = v5;
      v178 = v14;
      v186 = v13;
      v96 = v12;
      v97 = v25;
      v201 = v15;
      v210 = v27;
      v98 = v24;
      v99 = v10;
      v194 = v26;
      v100 = v11;
      v101 = v22;
      v102 = v23;
      v103 = v8;
      v104 = v9;
      v105 = v20;
      v149 = v21;
      v259 = v7;
      v106 = sub_23B730A48(v95, v19);
      v7 = v259;
      v21 = v149;
      v20 = v105;
      v9 = v104;
      v8 = v103;
      v23 = v102;
      v22 = v101;
      v11 = v100;
      v10 = v99;
      v27 = v210;
      v28 = v219;
      v24 = v98;
      v13 = v186;
      v26 = v194;
      v15 = v201;
      v25 = v97;
      v12 = v96;
      v14 = v178;
      if ((v106 & 1) == 0)
        return 0;
    }
    else
    {
      v228 = v18;
      if (v19)
        return 0;
    }
    if (v7)
    {
      if (!v228)
        return 0;
      v260 = v20;
      v179 = v14;
      v187 = v13;
      v107 = v12;
      v108 = v25;
      v202 = v15;
      v211 = v27;
      v109 = v24;
      v220 = v28;
      v110 = v10;
      v195 = v26;
      v111 = v11;
      v112 = v22;
      v113 = v23;
      v114 = v8;
      v115 = v9;
      v116 = v21;
      v117 = sub_23B730A48(v7, v228);
      v21 = v116;
      v9 = v115;
      v8 = v114;
      v23 = v113;
      v22 = v112;
      v11 = v111;
      v10 = v110;
      v27 = v211;
      v28 = v220;
      v24 = v109;
      v13 = v187;
      v26 = v195;
      v15 = v202;
      v25 = v108;
      v12 = v107;
      v14 = v179;
      if ((v117 & 1) == 0)
        return 0;
    }
    else
    {
      v260 = v20;
      if (v228)
        return 0;
    }
    if (v9)
    {
      if (!v260)
        return 0;
      if (v8 != v21 || v9 != v260)
      {
        v118 = v14;
        v119 = v12;
        v120 = v25;
        v203 = v15;
        v212 = v27;
        v121 = v13;
        v122 = v24;
        v221 = v28;
        v123 = v10;
        v124 = v26;
        v125 = v11;
        v126 = v22;
        v127 = v23;
        v128 = sub_23B796ECC();
        v23 = v127;
        v22 = v126;
        v11 = v125;
        v26 = v124;
        v10 = v123;
        v27 = v212;
        v28 = v221;
        v24 = v122;
        v13 = v121;
        v15 = v203;
        v25 = v120;
        v12 = v119;
        v14 = v118;
        v129 = v128;
        result = 0;
        if ((v129 & 1) == 0)
          return result;
      }
    }
    else if (v260)
    {
      return 0;
    }
    if (v11)
    {
      if (!v22)
        return 0;
      if (v10 != v23 || v11 != v22)
      {
        v130 = v14;
        v131 = v12;
        v132 = v25;
        v133 = v15;
        v134 = v13;
        v135 = v24;
        v136 = sub_23B796ECC();
        v24 = v135;
        v13 = v134;
        v15 = v133;
        v25 = v132;
        v12 = v131;
        v14 = v130;
        v137 = v136;
        result = 0;
        if ((v137 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v232)
    {
      if (!v24)
        return 0;
      if (v231 != v230 || v232 != v24)
      {
        v138 = v14;
        v139 = v12;
        v140 = v25;
        v141 = sub_23B796ECC();
        v25 = v140;
        v12 = v139;
        v14 = v138;
        v142 = v141;
        result = 0;
        if ((v142 & 1) == 0)
          return result;
      }
    }
    else if (v24)
    {
      return 0;
    }
    v143 = v14;
    if (v13)
    {
      if (!v26)
        return 0;
      v144 = v15;
      if (v12 != v25 || v13 != v26)
      {
        v145 = sub_23B796ECC();
        result = 0;
        if ((v145 & 1) == 0)
          return result;
      }
    }
    else
    {
      v144 = v15;
      if (v26)
        return 0;
    }
    if (v144)
      return v27 && (v143 == v28 && v15 == v27 || (sub_23B796ECC() & 1) != 0);
    return !v27;
  }
  return result;
}

unint64_t sub_23B706564()
{
  unint64_t result;

  result = qword_256A48248;
  if (!qword_256A48248)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for PlaceMark, &type metadata for PlaceMark);
    atomic_store(result, (unint64_t *)&qword_256A48248);
  }
  return result;
}

uint64_t destroy for PlaceMark()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PlaceMark(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PlaceMark(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for PlaceMark(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PlaceMark()
{
  return &type metadata for PlaceMark;
}

uint64_t getEnumTagSinglePayload for PlaceMark.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceMark.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23B706B10 + 4 * byte_23B797E75[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23B706B44 + 4 * byte_23B797E70[v4]))();
}

uint64_t sub_23B706B44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B706B4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B706B54);
  return result;
}

uint64_t sub_23B706B60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B706B68);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23B706B6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B706B74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceMark.CodingKeys()
{
  return &type metadata for PlaceMark.CodingKeys;
}

unint64_t sub_23B706B94()
{
  unint64_t result;

  result = qword_256A48250;
  if (!qword_256A48250)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798074, &type metadata for PlaceMark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48250);
  }
  return result;
}

unint64_t sub_23B706BDC()
{
  unint64_t result;

  result = qword_256A48258;
  if (!qword_256A48258)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797FAC, &type metadata for PlaceMark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48258);
  }
  return result;
}

unint64_t sub_23B706C24()
{
  unint64_t result;

  result = qword_256A48260;
  if (!qword_256A48260)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B797FD4, &type metadata for PlaceMark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48260);
  }
  return result;
}

uint64_t sub_23B706C68()
{
  unint64_t v0;

  v0 = sub_23B796DB8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t sub_23B706CB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t sub_23B706DA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 176 * a1 + 32;
    v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t sub_23B706E90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302F70) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t sub_23B706FAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t Session.sendFriendshipOffer(to:from:end:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 200) = a2;
  *(_QWORD *)(v6 + 208) = v5;
  *(_BYTE *)(v6 + 264) = a5;
  *(_QWORD *)(v6 + 192) = a1;
  sub_23B7968D8();
  *(_QWORD *)(v6 + 216) = swift_task_alloc();
  *(_QWORD *)(v6 + 224) = type metadata accessor for FriendshipRequest();
  *(_QWORD *)(v6 + 232) = swift_task_alloc();
  sub_23B70743C(a3, v6 + 16);
  *(_BYTE *)(v6 + 265) = *a4;
  return swift_task_switch();
}

uint64_t sub_23B707170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE *v12;
  char v13;
  unsigned __int8 v14[9];

  v1 = *(_QWORD *)(v0 + 200);
  if (*(_QWORD *)(v1 + 16))
  {
    v3 = *(int **)(v0 + 224);
    v2 = *(_QWORD *)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 208);
    v13 = *(_BYTE *)(v0 + 264);
    v5 = v2 + v3[7];
    swift_bridgeObjectRetain();
    sub_23B707484((uint64_t *)(v0 + 16));
    sub_23B7844C0(v5);
    LOBYTE(v5) = *(_BYTE *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 64);
    v6 = *(_QWORD *)(v4 + 72);
    v8 = *(_QWORD *)(v4 + 80);
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    sub_23B796608();
    v9 = v2 + v3[10];
    *(_BYTE *)v9 = v5;
    *(_QWORD *)(v9 + 8) = v7;
    *(_QWORD *)(v9 + 16) = v6;
    *(_QWORD *)(v9 + 24) = v8;
    *(_QWORD *)(v2 + v3[5]) = v1;
    sub_23B70743C(v0 + 16, v2 + v3[6]);
    *(_BYTE *)(v2 + v3[8]) = 0;
    *(_BYTE *)(v2 + v3[9]) = 3;
    *(_BYTE *)(v2 + v3[11]) = v13;
    v14[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v14);
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v4 + 24);
    swift_retain();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v10;
    *v10 = v0;
    v10[1] = sub_23B707334;
    return sub_23B7856A0(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232));
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v12 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B707334()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B7073A0()
{
  uint64_t v0;

  sub_23B7090BC(*(_QWORD *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7073EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release();
  sub_23B7090BC(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B70743C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23B707484(uint64_t *a1)
{
  sub_23B6F70D8(*a1, a1[1]);
  return a1;
}

uint64_t Session.sendFriendshipInvite(to:from:isFromGroup:)(uint64_t a1, _OWORD *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)(v5 + 432) = a4;
  *(_QWORD *)(v5 + 368) = a1;
  *(_QWORD *)(v5 + 376) = v4;
  sub_23B7968D8();
  *(_QWORD *)(v5 + 384) = swift_task_alloc();
  *(_QWORD *)(v5 + 392) = type metadata accessor for FriendshipRequest();
  *(_QWORD *)(v5 + 400) = swift_task_alloc();
  v8 = a2[9];
  *(_OWORD *)(v5 + 320) = a2[8];
  *(_OWORD *)(v5 + 336) = v8;
  *(_OWORD *)(v5 + 352) = a2[10];
  v9 = a2[5];
  *(_OWORD *)(v5 + 256) = a2[4];
  *(_OWORD *)(v5 + 272) = v9;
  v10 = a2[7];
  *(_OWORD *)(v5 + 288) = a2[6];
  *(_OWORD *)(v5 + 304) = v10;
  v11 = a2[1];
  *(_OWORD *)(v5 + 192) = *a2;
  *(_OWORD *)(v5 + 208) = v11;
  v12 = a2[3];
  *(_OWORD *)(v5 + 224) = a2[2];
  *(_OWORD *)(v5 + 240) = v12;
  sub_23B70743C(a3, v5 + 16);
  return swift_task_switch();
}

uint64_t sub_23B7075B4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  char v23;
  unsigned __int8 v24;

  v1 = *(int **)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 376);
  v23 = *(_BYTE *)(v0 + 432);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025F8);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 320);
  v6 = *(_OWORD *)(v0 + 336);
  v7 = *(_OWORD *)(v0 + 288);
  v4[9] = *(_OWORD *)(v0 + 304);
  v4[10] = v5;
  v8 = *(_OWORD *)(v0 + 352);
  v4[11] = v6;
  v4[12] = v8;
  v9 = *(_OWORD *)(v0 + 256);
  v10 = *(_OWORD *)(v0 + 272);
  v11 = *(_OWORD *)(v0 + 224);
  v4[5] = *(_OWORD *)(v0 + 240);
  v4[6] = v9;
  v4[7] = v10;
  v4[8] = v7;
  v12 = *(_OWORD *)(v0 + 192);
  v13 = *(_OWORD *)(v0 + 208);
  v4[1] = xmmword_23B798110;
  v4[2] = v12;
  v4[3] = v13;
  v4[4] = v11;
  v14 = v2 + v1[7];
  v15 = sub_23B7968A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_BYTE *)(v3 + 56);
  v17 = *(_QWORD *)(v3 + 64);
  v22 = *(_QWORD *)(v3 + 72);
  v18 = *(_QWORD *)(v3 + 80);
  sub_23B6F4E8C(v0 + 192);
  sub_23B707484((uint64_t *)(v0 + 16));
  swift_bridgeObjectRetain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796608();
  v19 = v2 + v1[10];
  *(_BYTE *)v19 = v16;
  *(_QWORD *)(v19 + 8) = v17;
  *(_QWORD *)(v19 + 16) = v22;
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v2 + v1[5]) = v4;
  sub_23B70743C(v0 + 16, v2 + v1[6]);
  *(_BYTE *)(v2 + v1[8]) = 1;
  *(_BYTE *)(v2 + v1[9]) = 3;
  *(_BYTE *)(v2 + v1[11]) = v23;
  v24 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v24);
  *(_QWORD *)(v0 + 408) = *(_QWORD *)(v3 + 24);
  swift_retain();
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 416) = v20;
  *v20 = v0;
  v20[1] = sub_23B707774;
  return sub_23B7857DC(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 400));
}

uint64_t sub_23B707774()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B7077E0()
{
  uint64_t v0;

  sub_23B7090BC(*(_QWORD *)(v0 + 400));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B70782C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 400);
  swift_release();
  sub_23B7090BC(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.stopSharingMyLocation(with:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 200) = a2;
  *(_QWORD *)(v5 + 208) = v4;
  *(_BYTE *)(v5 + 264) = a4;
  *(_QWORD *)(v5 + 192) = a1;
  sub_23B7968D8();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_QWORD *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  sub_23B70743C(a3, v5 + 16);
  return swift_task_switch();
}

uint64_t sub_23B707914()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16[9];

  v1 = *(_QWORD *)(v0 + 200);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(int **)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 208);
    v15 = *(_BYTE *)(v0 + 264);
    v5 = v3 + v2[7];
    v6 = sub_23B7968A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = *(_BYTE *)(v4 + 56);
    v8 = *(_QWORD *)(v4 + 64);
    v14 = *(_QWORD *)(v4 + 72);
    v9 = *(_QWORD *)(v4 + 80);
    swift_bridgeObjectRetain();
    sub_23B707484((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    sub_23B796608();
    v10 = v3 + v2[10];
    *(_BYTE *)v10 = v7;
    *(_QWORD *)(v10 + 8) = v8;
    *(_QWORD *)(v10 + 16) = v14;
    *(_QWORD *)(v10 + 24) = v9;
    *(_QWORD *)(v3 + v2[5]) = v1;
    sub_23B70743C(v0 + 16, v3 + v2[6]);
    *(_BYTE *)(v3 + v2[8]) = 2;
    *(_BYTE *)(v3 + v2[9]) = 3;
    *(_BYTE *)(v3 + v2[11]) = v15;
    v16[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v16);
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v4 + 24);
    swift_retain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v11;
    *v11 = v0;
    v11[1] = sub_23B707334;
    return sub_23B785968(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232));
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v13 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t Session.sendNotNow(to:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 200) = a2;
  *(_QWORD *)(v5 + 208) = v4;
  *(_BYTE *)(v5 + 264) = a4;
  *(_QWORD *)(v5 + 192) = a1;
  sub_23B7968D8();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_QWORD *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  sub_23B70743C(a3, v5 + 16);
  return swift_task_switch();
}

uint64_t sub_23B707B88()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16[9];

  v1 = *(_QWORD *)(v0 + 200);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(int **)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 208);
    v15 = *(_BYTE *)(v0 + 264);
    v5 = v3 + v2[7];
    v6 = sub_23B7968A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = *(_BYTE *)(v4 + 56);
    v8 = *(_QWORD *)(v4 + 64);
    v14 = *(_QWORD *)(v4 + 72);
    v9 = *(_QWORD *)(v4 + 80);
    swift_bridgeObjectRetain();
    sub_23B707484((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    sub_23B796608();
    v10 = v3 + v2[10];
    *(_BYTE *)v10 = v7;
    *(_QWORD *)(v10 + 8) = v8;
    *(_QWORD *)(v10 + 16) = v14;
    *(_QWORD *)(v10 + 24) = v9;
    *(_QWORD *)(v3 + v2[5]) = v1;
    sub_23B70743C(v0 + 16, v3 + v2[6]);
    *(_BYTE *)(v3 + v2[8]) = 2;
    *(_BYTE *)(v3 + v2[9]) = 2;
    *(_BYTE *)(v3 + v2[11]) = v15;
    v16[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v16);
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v4 + 24);
    swift_retain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v11;
    *v11 = v0;
    v11[1] = sub_23B707D60;
    return sub_23B7858A4(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232));
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v13 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B707D60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t Session.approveFriendship(handles:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 200) = a2;
  *(_QWORD *)(v5 + 208) = v4;
  *(_BYTE *)(v5 + 264) = a4;
  *(_QWORD *)(v5 + 192) = a1;
  sub_23B7968D8();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_QWORD *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  sub_23B70743C(a3, v5 + 16);
  return swift_task_switch();
}

uint64_t sub_23B707E64()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16[9];

  v1 = *(_QWORD *)(v0 + 200);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(int **)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 208);
    v15 = *(_BYTE *)(v0 + 264);
    v5 = v3 + v2[7];
    v6 = sub_23B7968A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = *(_BYTE *)(v4 + 56);
    v8 = *(_QWORD *)(v4 + 64);
    v14 = *(_QWORD *)(v4 + 72);
    v9 = *(_QWORD *)(v4 + 80);
    swift_bridgeObjectRetain();
    sub_23B707484((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    sub_23B796608();
    v10 = v3 + v2[10];
    *(_BYTE *)v10 = v7;
    *(_QWORD *)(v10 + 8) = v8;
    *(_QWORD *)(v10 + 16) = v14;
    *(_QWORD *)(v10 + 24) = v9;
    *(_QWORD *)(v3 + v2[5]) = v1;
    sub_23B70743C(v0 + 16, v3 + v2[6]);
    *(_BYTE *)(v3 + v2[8]) = 2;
    *(_BYTE *)(v3 + v2[9]) = 0;
    *(_BYTE *)(v3 + v2[11]) = v15;
    v16[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v16);
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v4 + 24);
    swift_retain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v11;
    *v11 = v0;
    v11[1] = sub_23B707D60;
    return sub_23B7858A4(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232));
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v13 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t Session.declineFriendship(handles:from:isFromGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 200) = a2;
  *(_QWORD *)(v5 + 208) = v4;
  *(_BYTE *)(v5 + 264) = a4;
  *(_QWORD *)(v5 + 192) = a1;
  sub_23B7968D8();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_QWORD *)(v5 + 224) = type metadata accessor for FriendshipRequest();
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  sub_23B70743C(a3, v5 + 16);
  return swift_task_switch();
}

uint64_t sub_23B7080D4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16[9];

  v1 = *(_QWORD *)(v0 + 200);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(int **)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 208);
    v15 = *(_BYTE *)(v0 + 264);
    v5 = v3 + v2[7];
    v6 = sub_23B7968A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = *(_BYTE *)(v4 + 56);
    v8 = *(_QWORD *)(v4 + 64);
    v14 = *(_QWORD *)(v4 + 72);
    v9 = *(_QWORD *)(v4 + 80);
    swift_bridgeObjectRetain();
    sub_23B707484((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    sub_23B796608();
    v10 = v3 + v2[10];
    *(_BYTE *)v10 = v7;
    *(_QWORD *)(v10 + 8) = v8;
    *(_QWORD *)(v10 + 16) = v14;
    *(_QWORD *)(v10 + 24) = v9;
    *(_QWORD *)(v3 + v2[5]) = v1;
    sub_23B70743C(v0 + 16, v3 + v2[6]);
    *(_BYTE *)(v3 + v2[8]) = 2;
    *(_BYTE *)(v3 + v2[9]) = 1;
    *(_BYTE *)(v3 + v2[11]) = v15;
    v16[0] = 1;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v16);
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v4 + 24);
    swift_retain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v11;
    *v11 = v0;
    v11[1] = sub_23B707D60;
    return sub_23B7858A4(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 232));
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v13 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B7082AC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.stopUpdatingFriends()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B7082F8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B70836C;
  return sub_23B749B04();
}

uint64_t sub_23B70836C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B7083E0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.friendsSharingLocationsWithMe()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B709290;
  return sub_23B7689BC();
}

uint64_t Session.cachedFriendsSharingLocationsWithMe()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B708470()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B7084C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;

  swift_beginAccess();
  v4 = 1;
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23B76B5A0(v1, &v4);
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t Session.friendsSharingLocationsWithMe(filter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B708570()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[4];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[5] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B7085EC;
  return sub_23B74E0A4(v0[2], v0[3]);
}

uint64_t sub_23B7085EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B708674()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.friendsFollowingMyLocation()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B7086EC;
  return sub_23B768ADC();
}

uint64_t sub_23B7086EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t Session.cachedFriendsFollowingMyLocation()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B708758()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B7087B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;

  swift_beginAccess();
  v4 = 0;
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23B76B5A0(v1, &v4);
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t Session.friendsRequestedMyLocation()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B709290;
  return sub_23B768BFC();
}

uint64_t Session.cachedFriendsRequestedMyLocation()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B708894()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B7088EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowers);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t Session.friendsRequestedToShareLocationWithMe()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B709290;
  return sub_23B768C94();
}

uint64_t Session.cachedFriendsRequestedToShareLocationWithMe()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B7089B0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B708A08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowings);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t Session.friendsWithPendingOffers()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B709290;
  return sub_23B768D2C();
}

uint64_t Session.cachedFriendsWithPendingOffers()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B708ACC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B708B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;

  swift_beginAccess();
  v4 = 4;
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23B76B5A0(v1, &v4);
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t Session.friendshipState(for:isFromGroup:)(uint64_t a1, _OWORD *a2, char a3)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v6 = a2[9];
  *(_OWORD *)(v3 + 144) = a2[8];
  *(_OWORD *)(v3 + 160) = v6;
  *(_OWORD *)(v3 + 176) = a2[10];
  v7 = a2[5];
  *(_OWORD *)(v3 + 80) = a2[4];
  *(_OWORD *)(v3 + 96) = v7;
  v8 = a2[7];
  *(_OWORD *)(v3 + 112) = a2[6];
  *(_OWORD *)(v3 + 128) = v8;
  v9 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v9;
  v10 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 192) = v11;
  *v11 = v3;
  v11[1] = sub_23B708C4C;
  return Session.friendshipState(with:isFromGroup:)(a1, (_OWORD *)(v3 + 16), a3);
}

uint64_t sub_23B708C4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B708CB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.offerExpiration(for:groupId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[27] = a4;
  v5[28] = v4;
  v5[25] = a2;
  v5[26] = a3;
  v5[24] = a1;
  return swift_task_switch();
}

uint64_t sub_23B708CE4()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  unsigned __int8 v13;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(__int128 **)(v0 + 200);
  v13 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v13);
  *(_QWORD *)(v0 + 232) = *(_QWORD *)(v1 + 24);
  v3 = *v2;
  v4 = v2[2];
  *(_OWORD *)(v0 + 32) = v2[1];
  *(_OWORD *)(v0 + 48) = v4;
  *(_OWORD *)(v0 + 16) = v3;
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[6];
  *(_OWORD *)(v0 + 96) = v2[5];
  *(_OWORD *)(v0 + 112) = v7;
  *(_OWORD *)(v0 + 64) = v5;
  *(_OWORD *)(v0 + 80) = v6;
  v8 = v2[7];
  v9 = v2[8];
  v10 = v2[10];
  *(_OWORD *)(v0 + 160) = v2[9];
  *(_OWORD *)(v0 + 176) = v10;
  *(_OWORD *)(v0 + 128) = v8;
  *(_OWORD *)(v0 + 144) = v9;
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v11;
  *v11 = v0;
  v11[1] = sub_23B708DA4;
  return sub_23B784B00(*(_QWORD *)(v0 + 192), (_OWORD *)(v0 + 16), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
}

uint64_t sub_23B708DA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 248) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B708E18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.cachedOfferExpiration(for:groupId:)(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)(v5 + 208) = a4;
  *(_QWORD *)(v5 + 216) = v4;
  *(_QWORD *)(v5 + 192) = a1;
  *(_QWORD *)(v5 + 200) = a3;
  v6 = a2[9];
  *(_OWORD *)(v5 + 144) = a2[8];
  *(_OWORD *)(v5 + 160) = v6;
  *(_OWORD *)(v5 + 176) = a2[10];
  v7 = a2[5];
  *(_OWORD *)(v5 + 80) = a2[4];
  *(_OWORD *)(v5 + 96) = v7;
  v8 = a2[7];
  *(_OWORD *)(v5 + 112) = a2[6];
  *(_OWORD *)(v5 + 128) = v8;
  v9 = a2[1];
  *(_OWORD *)(v5 + 16) = *a2;
  *(_OWORD *)(v5 + 32) = v9;
  v10 = a2[3];
  *(_OWORD *)(v5 + 48) = a2[2];
  *(_OWORD *)(v5 + 64) = v10;
  return swift_task_switch();
}

uint64_t sub_23B708E70()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 216);
  v3 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v1 + 24);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B708EC8()
{
  uint64_t v0;

  sub_23B746E24((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 200), *(void **)(v0 + 208), *(_QWORD *)(v0 + 192));
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.handlesRecentlyViewed(recency:)()
{
  uint64_t v0;

  return sub_23B70913C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x24BEE4AF8]);
}

uint64_t static Session.fmfIsAllowedInRegion.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_23B796A1C();
  v1 = MGGetBoolAnswer();

  return v1;
}

id static Session.fmfIsRestrictedInScreenTime.getter()
{
  id result;
  void *v1;
  id v2;
  unsigned int v3;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v1 = result;
    v2 = (id)*MEMORY[0x24BE63928];
    v3 = objc_msgSend(v1, sel_effectiveBoolValueForSetting_, v2);

    return (id)(v3 == 2);
  }
  return result;
}

id static Session.hasCorrectPermissionsForLocationSharing.getter()
{
  void *v0;
  int v1;
  id v2;
  void *v3;
  id v4;
  unsigned int v5;

  v0 = (void *)sub_23B796A1C();
  v1 = MGGetBoolAnswer();

  if (!v1)
    return 0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v2
    && (v3 = v2,
        v4 = (id)*MEMORY[0x24BE63928],
        v5 = objc_msgSend(v3, sel_effectiveBoolValueForSetting_, v4),
        v4,
        v3,
        v5 == 2))
  {
    return 0;
  }
  else
  {
    return _s12FindMyLocate7SessionC37isiCloudProvisionedForLocationSharingSbvgZ_0();
  }
}

uint64_t sub_23B7090BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FriendshipRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23B7090F8()
{
  unint64_t result;

  result = qword_256A48288;
  if (!qword_256A48288)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ClientSessionError, &type metadata for ClientSessionError);
    atomic_store(result, (unint64_t *)&qword_256A48288);
  }
  return result;
}

uint64_t sub_23B70913C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

id _s12FindMyLocate7SessionC37isiCloudProvisionedForLocationSharingSbvgZ_0()
{
  id v0;
  void *v1;
  NSObject *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_aa_primaryAppleAccountWithPreloadedDataclasses);
    if (v2)
    {
      v3 = v2;
      v4 = -[NSObject isProvisionedForDataclass:](v2, sel_isProvisionedForDataclass_, *MEMORY[0x24BDB3EA0]);

      goto LABEL_10;
    }

  }
  if (qword_254302FC0 != -1)
    swift_once();
  v5 = sub_23B7969BC();
  __swift_project_value_buffer(v5, (uint64_t)qword_254309198);
  v3 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v3, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23B6EB000, v3, v6, "Missing primary account!", v7, 2u);
    MEMORY[0x23B86C754](v7, -1, -1);
  }
  v4 = 0;
LABEL_10:

  return v4;
}

void sub_23B7092A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  int *v13;
  double v14;
  double v15;
  double v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t aBlock;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD *v28;

  v7 = sub_23B7969C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v3 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_shifter);
  v12 = a1 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location;
  v13 = (int *)type metadata accessor for Location();
  v14 = *(double *)(v12 + v13[10]);
  v15 = *(double *)(v12 + v13[11]);
  v16 = *(double *)(v12 + v13[8]);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v27 = sub_23B7098E0;
  v28 = v17;
  v18 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v24 = 1107296256;
  v25 = sub_23B7098EC;
  v26 = &block_descriptor;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  v27 = sub_23B709BAC;
  v28 = (_QWORD *)v20;
  aBlock = v18;
  v24 = 1107296256;
  v25 = sub_23B6EE8E4;
  v26 = &block_descriptor_6;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  sub_23B709BB4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5490], v7);
  v22 = (void *)sub_23B796C50();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v11, sel_shiftCoordinate_accuracy_withCompletionHandler_mustGoToNetworkCallback_errorHandler_callbackQueue_, v19, 0, v21, v22, v14, v15, v16);

  _Block_release(v21);
  _Block_release(v19);
}

uint64_t sub_23B7094D0(uint64_t a1, void (*a2)(_QWORD, _QWORD), double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint8_t *v38;
  uint8_t *v39;
  char *v40;
  void (*v41)(_QWORD, _QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[25];

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for Location();
  v42 = *((_QWORD *)v13 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  sub_23B709C30(v16 + v13[5], (uint64_t)v45);
  v18 = *(_QWORD *)(v16 + v13[6]);
  v19 = *(_QWORD *)(v16 + v13[7]);
  v20 = *(_QWORD *)(v16 + v13[9]);
  v21 = *(_QWORD *)(v16 + v13[12]);
  v22 = *(_QWORD *)(v16 + v13[13]);
  v23 = *(_QWORD *)(v16 + v13[14]);
  v24 = *(_BYTE *)(v16 + v13[15]);
  LOBYTE(v16) = *(_BYTE *)(v16 + v13[16]);
  sub_23B709C30((uint64_t)v45, (uint64_t)&v15[v13[5]]);
  *(_QWORD *)&v15[v13[6]] = v18;
  *(_QWORD *)&v15[v13[7]] = v19;
  *(double *)&v15[v13[8]] = a5;
  *(_QWORD *)&v15[v13[9]] = v20;
  *(double *)&v15[v13[10]] = a3;
  *(double *)&v15[v13[11]] = a4;
  *(_QWORD *)&v15[v13[12]] = v21;
  *(_QWORD *)&v15[v13[13]] = v22;
  *(_QWORD *)&v15[v13[14]] = v23;
  v15[v13[15]] = v24;
  v15[v13[16]] = v16;
  sub_23B709C78(v45);
  v25 = qword_256A47EF0;
  swift_bridgeObjectRetain();
  if (v25 != -1)
    swift_once();
  v26 = sub_23B7969BC();
  __swift_project_value_buffer(v26, (uint64_t)qword_256A54890);
  swift_retain();
  v27 = sub_23B7969A4();
  v28 = sub_23B796C38();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v40 = v12;
    v31 = v30;
    v44 = v30;
    v39 = v29;
    *(_DWORD *)v29 = 136315138;
    v38 = v29 + 4;
    v41 = a2;
    v33 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
    v32 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier + 8);
    swift_bridgeObjectRetain();
    v43 = sub_23B6FB388(v33, v32, &v44);
    sub_23B796C68();
    swift_release();
    a2 = v41;
    swift_bridgeObjectRelease();
    v34 = v28;
    v35 = v39;
    _os_log_impl(&dword_23B6EB000, v27, v34, "LocationShifter: shifting completed %s", v39, 0xCu);
    swift_arrayDestroy();
    v36 = v31;
    v12 = v40;
    MEMORY[0x23B86C754](v36, -1, -1);
    MEMORY[0x23B86C754](v35, -1, -1);

  }
  else
  {

    swift_release();
  }
  sub_23B709DC4((uint64_t)v15, (uint64_t)v12);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v42 + 56))(v12, 0, 1, v13);
  a2(v12, 0);
  sub_23B709BF0((uint64_t)v12);
  return sub_23B709E08((uint64_t)v15);
}

uint64_t sub_23B7098B4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B7098E0(double a1, double a2, double a3)
{
  uint64_t v3;

  return sub_23B7094D0(*(_QWORD *)(v3 + 16), *(void (**)(_QWORD, _QWORD))(v3 + 24), a1, a2, a3);
}

uint64_t sub_23B7098EC(uint64_t a1, double a2, double a3, double a4)
{
  void (*v7)(uint64_t, double, double, double);
  uint64_t v8;

  v7 = *(void (**)(uint64_t, double, double, double))(a1 + 32);
  v8 = swift_retain();
  v7(v8, a2, a3, a4);
  return swift_release();
}

uint64_t sub_23B709940(void *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD);
  uint64_t v21;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A47EF0 != -1)
    swift_once();
  v7 = sub_23B7969BC();
  __swift_project_value_buffer(v7, (uint64_t)qword_256A54890);
  v8 = a1;
  v9 = a1;
  v10 = sub_23B7969A4();
  v11 = sub_23B796C20();
  if (os_log_type_enabled(v10, v11))
  {
    v20 = a2;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v21 = (uint64_t)a1;
    v22 = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48350);
    v15 = sub_23B796A4C();
    v21 = sub_23B6FB388(v15, v16, &v22);
    sub_23B796C68();
    a2 = v20;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v10, v11, "LocationShifter: shifting error %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v13, -1, -1);
    MEMORY[0x23B86C754](v12, -1, -1);
  }
  else
  {

  }
  v17 = type metadata accessor for Location();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  a2(v6, a1);
  return sub_23B709BF0((uint64_t)v6);
}

uint64_t sub_23B709B88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B709BAC(void *a1)
{
  uint64_t v1;

  return sub_23B709940(a1, *(void (**)(_QWORD, _QWORD))(v1 + 16));
}

unint64_t sub_23B709BB4()
{
  unint64_t result;

  result = qword_256A48348;
  if (!qword_256A48348)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A48348);
  }
  return result;
}

uint64_t sub_23B709BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B709C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23B709C78(uint64_t *a1)
{
  sub_23B709CE0(*a1, a1[1]);
  return a1;
}

uint64_t sub_23B709CE0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23B709DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B709E08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of SettingsProtocol.setActiveLocationSharingDevice(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD140;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SettingsProtocol.hideMyLocation(hidden:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD1B0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.allowFriendshipRequests(allowed:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.activeLocationSharingDevice(cached:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD140;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SettingsProtocol.thisDeviceWithCompanion()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.isMyLocationEnabled(cached:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A13C;
  return v9(a1, a2, a3);
}

uint64_t sub_23B70A13C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of SettingsProtocol.areFriendshipRequestsAllowed(cached:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A3D8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsProtocol.startMonitoringPreferencesChangeForClient()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return v7(a1, a2);
}

uint64_t dispatch thunk of SettingsProtocol.allDevices(cached:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A13C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsServiceClientProtocol.meDeviceUpdated(meDevice:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SettingsServiceClientProtocol.preferencesUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t static PreferenceError.== infix(_:_:)()
{
  return 1;
}

uint64_t PreferenceError.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t sub_23B70A408()
{
  return 0x4D676E697373696DLL;
}

uint64_t sub_23B70A42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x4D676E697373696DLL && a2 == 0xEF65636976654465)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23B796ECC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23B70A4E4()
{
  sub_23B70A6F8();
  return sub_23B796FA4();
}

uint64_t sub_23B70A50C()
{
  sub_23B70A6F8();
  return sub_23B796FB0();
}

uint64_t sub_23B70A534()
{
  return 0;
}

uint64_t sub_23B70A540@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23B70A56C()
{
  sub_23B70A73C();
  return sub_23B796FA4();
}

uint64_t sub_23B70A594()
{
  sub_23B70A73C();
  return sub_23B796FB0();
}

uint64_t PreferenceError.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A483C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A483C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B70A6F8();
  sub_23B796F8C();
  sub_23B70A73C();
  sub_23B796E48();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_23B70A6F8()
{
  unint64_t result;

  result = qword_256A483D0;
  if (!qword_256A483D0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798434, &type metadata for PreferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A483D0);
  }
  return result;
}

unint64_t sub_23B70A73C()
{
  unint64_t result;

  result = qword_256A483D8;
  if (!qword_256A483D8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7983E4, &type metadata for PreferenceError.MissingMeDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A483D8);
  }
  return result;
}

uint64_t PreferenceError.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t PreferenceError.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A483E0);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A483E8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B70A6F8();
  v8 = v23;
  sub_23B796F80();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_23B796E3C() + 16) != 1)
  {
    v14 = sub_23B796D04();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v16 = &type metadata for PreferenceError;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v13);
  }
  sub_23B70A73C();
  v11 = v4;
  sub_23B796DC4();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_23B70AA2C(_QWORD *a1)
{
  return PreferenceError.init(from:)(a1);
}

uint64_t sub_23B70AA40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A483C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A483C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B70A6F8();
  sub_23B796F8C();
  sub_23B70A73C();
  sub_23B796E48();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Session.setActiveLocationSharingDevice(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B70AB98()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[4];
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[5] = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B70AC14;
  return sub_23B74FE44(v0[2], v0[3]);
}

uint64_t sub_23B70AC14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Session.hideMyLocation(hidden:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23B70ACA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 16);
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_23B70836C;
  return sub_23B74FFC8(*(_BYTE *)(v0 + 48));
}

uint64_t Session.allowFriendshipRequests(allowed:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23B70AD3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 16);
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_23B70ADB8;
  return sub_23B750138(*(_BYTE *)(v0 + 48));
}

uint64_t sub_23B70ADB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Session.activeLocationSharingDevice(cached:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 116) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_23B70AE48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_BYTE *)(v0 + 116) == 1)
  {
    v5 = 2;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v5);
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    v4 = 2;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 32);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v3;
    *v3 = v0;
    v3[1] = sub_23B70B050;
    return sub_23B750274(*(_QWORD *)(v0 + 16), 0);
  }
}

uint64_t sub_23B70AF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDevice;
  v2 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 40) = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 40);
  *(_DWORD *)(v0 + 112) = *(_DWORD *)(v1 + 48);
  sub_23B70B5A0(v2, v3);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B70AFA4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v2 = *(_DWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    v5 = *(_OWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)v6 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v6 + 8) = v1;
    *(_OWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 32) = v4;
    *(_QWORD *)(v6 + 40) = v3;
    *(_BYTE *)(v6 + 48) = v2 & 1;
    *(_BYTE *)(v6 + 49) = BYTE1(v2) & 1;
    *(_BYTE *)(v6 + 50) = BYTE2(v2) & 1;
    *(_BYTE *)(v6 + 51) = HIBYTE(v2) & 1;
  }
  else
  {
    sub_23B70B5DC();
    swift_allocError();
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B70B050()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B70B0C4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.thisDeviceWithCompanion()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B70B110()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[3];
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[4] = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B6EE938;
  return sub_23B7503E8(v0[2]);
}

uint64_t Session.isMyLocationEnabled(cached:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23B70B1A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 16);
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_23B70B224;
  return sub_23B75049C(*(_BYTE *)(v0 + 48));
}

uint64_t sub_23B70B224(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_23B70B2AC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t Session.areFriendshipRequestsAllowed(cached:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23B70B300()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 16);
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_23B70B37C;
  return sub_23B750630(*(_BYTE *)(v0 + 48));
}

uint64_t sub_23B70B37C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t Session.startMonitoringActiveLocationSharingDeviceChange()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B70B41C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[3];
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[4] = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B70B498;
  return sub_23B7278AC(v0[2]);
}

uint64_t sub_23B70B498()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Session.startMonitoringPreferencesChange()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B70B524()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[3];
  v4 = 2;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[4] = *(_QWORD *)(v1 + 32);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B70B498;
  return sub_23B7279C4(v0[2]);
}

uint64_t sub_23B70B5A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23B70B5DC()
{
  unint64_t result;

  result = qword_256A48410;
  if (!qword_256A48410)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for PreferenceError, &type metadata for PreferenceError);
    atomic_store(result, (unint64_t *)&qword_256A48410);
  }
  return result;
}

unint64_t sub_23B70B624()
{
  unint64_t result;

  result = qword_256A48440;
  if (!qword_256A48440)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for PreferenceError, &type metadata for PreferenceError);
    atomic_store(result, (unint64_t *)&qword_256A48440);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferenceError()
{
  return &type metadata for PreferenceError;
}

uint64_t _s12FindMyLocate15PreferenceErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23B70B6BC + 4 * asc_23B798180[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23B70B6DC + 4 * byte_23B798185[v4]))();
}

_BYTE *sub_23B70B6BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23B70B6DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B70B6E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B70B6EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B70B6F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B70B6FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PreferenceError.CodingKeys()
{
  return &type metadata for PreferenceError.CodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceError.MissingMeDeviceCodingKeys()
{
  return &type metadata for PreferenceError.MissingMeDeviceCodingKeys;
}

unint64_t sub_23B70B72C()
{
  unint64_t result;

  result = qword_256A48448;
  if (!qword_256A48448)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7983BC, &type metadata for PreferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48448);
  }
  return result;
}

unint64_t sub_23B70B774()
{
  unint64_t result;

  result = qword_256A48450;
  if (!qword_256A48450)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7982DC, &type metadata for PreferenceError.MissingMeDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48450);
  }
  return result;
}

unint64_t sub_23B70B7BC()
{
  unint64_t result;

  result = qword_256A48458;
  if (!qword_256A48458)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798304, &type metadata for PreferenceError.MissingMeDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48458);
  }
  return result;
}

unint64_t sub_23B70B804()
{
  unint64_t result;

  result = qword_256A48460;
  if (!qword_256A48460)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79832C, &type metadata for PreferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48460);
  }
  return result;
}

unint64_t sub_23B70B84C()
{
  unint64_t result;

  result = qword_256A48468;
  if (!qword_256A48468)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798354, &type metadata for PreferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48468);
  }
  return result;
}

uint64_t Friend.secureLocationsCapable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t Friend.shallowOrLiveSecureLocationsCapable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t Friend.fallbackToLegacyAllowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 179);
}

uint64_t Friend.fallbackToLegacy.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 180);
}

uint64_t Friend.expiry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Friend() + 40);
  return sub_23B6F7090(v3, a1);
}

uint64_t Friend.origin.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Friend();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

void Friend.hash(into:)()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[11];

  v1 = v0[9];
  v6[8] = v0[8];
  v6[9] = v1;
  v6[10] = v0[10];
  v2 = v0[5];
  v6[4] = v0[4];
  v6[5] = v2;
  v3 = v0[7];
  v6[6] = v0[6];
  v6[7] = v3;
  v4 = v0[1];
  v6[0] = *v0;
  v6[1] = v4;
  v5 = v0[3];
  v6[2] = v0[2];
  v6[3] = v5;
  sub_23B796A58();
  sub_23B6F4E8C((uint64_t)v6);
  sub_23B796A64();
  swift_bridgeObjectRelease();
  sub_23B6F5744((uint64_t)v6);
  __asm { BR              X10 }
}

uint64_t sub_23B70B9D0()
{
  sub_23B796A64();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B70BA74(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B70BAA4 + 4 * byte_23B79848D[a1]))(0x656C646E6168, 0xE600000000000000);
}

uint64_t sub_23B70BAA4()
{
  return 1701869940;
}

unint64_t sub_23B70BAB4()
{
  return 0xD000000000000016;
}

unint64_t sub_23B70BB04()
{
  return 0xD000000000000010;
}

uint64_t sub_23B70BB20()
{
  return 0x797269707865;
}

uint64_t sub_23B70BB30()
{
  return 0x6E696769726FLL;
}

uint64_t sub_23B70BB40()
{
  return 0x614872656E776F5FLL;
}

uint64_t sub_23B70BB60()
{
  return 0x6E696769726F5FLL;
}

uint64_t sub_23B70BB78()
{
  return 0x646574616572635FLL;
}

uint64_t sub_23B70BB94()
{
  unsigned __int8 *v0;

  return sub_23B70BA74(*v0);
}

uint64_t sub_23B70BB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B70DCA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B70BBC0(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_23B70BBCC()
{
  sub_23B70C7C4();
  return sub_23B796FA4();
}

uint64_t sub_23B70BBF4()
{
  sub_23B70C7C4();
  return sub_23B796FB0();
}

uint64_t Friend.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  int *v20;
  char v21;
  _BYTE v22[184];
  _OWORD v23[12];
  uint64_t v24;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48470);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B70C7C4();
  sub_23B796F8C();
  v8 = *(_OWORD *)(v2 + 144);
  v23[8] = *(_OWORD *)(v2 + 128);
  v23[9] = v8;
  v23[10] = *(_OWORD *)(v2 + 160);
  v9 = *(_OWORD *)(v2 + 80);
  v23[4] = *(_OWORD *)(v2 + 64);
  v23[5] = v9;
  v10 = *(_OWORD *)(v2 + 112);
  v23[6] = *(_OWORD *)(v2 + 96);
  v23[7] = v10;
  v11 = *(_OWORD *)(v2 + 16);
  v23[0] = *(_OWORD *)v2;
  v23[1] = v11;
  v12 = *(_OWORD *)(v2 + 48);
  v23[2] = *(_OWORD *)(v2 + 32);
  v23[3] = v12;
  v22[0] = 0;
  sub_23B6FC8B0();
  v13 = v24;
  sub_23B796EA8();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  LOBYTE(v23[0]) = *(_BYTE *)(v2 + 176);
  v22[0] = 1;
  sub_23B70C808();
  sub_23B796EA8();
  LOBYTE(v23[0]) = 2;
  sub_23B796E84();
  v14 = v5;
  LOBYTE(v23[0]) = 3;
  sub_23B796E84();
  LOBYTE(v23[0]) = 4;
  sub_23B796E84();
  LOBYTE(v23[0]) = 5;
  sub_23B796E84();
  v20 = (int *)type metadata accessor for Friend();
  LOBYTE(v23[0]) = 6;
  v15 = sub_23B7968A8();
  sub_23B6EE138(&qword_254302BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v24 = v4;
  sub_23B796E6C();
  v19[2] = v15;
  LOBYTE(v23[0]) = *(_BYTE *)(v2 + v20[11]);
  v22[0] = 7;
  v16 = sub_23B6FD804();
  sub_23B796EA8();
  v19[1] = v16;
  v22[183] = 8;
  sub_23B796E6C();
  sub_23B6FC8F4(v2 + v20[13], (uint64_t)v23, (uint64_t *)&unk_254302520);
  sub_23B6FC8F4((uint64_t)v23, (uint64_t)v22, (uint64_t *)&unk_254302520);
  v21 = 9;
  v17 = v24;
  sub_23B796E6C();
  v22[0] = *(_BYTE *)(v2 + v20[14]);
  v21 = 10;
  sub_23B796EA8();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v17);
}

void Friend.hashValue.getter()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[11];

  sub_23B796F44();
  v1 = v0[9];
  v6[8] = v0[8];
  v6[9] = v1;
  v6[10] = v0[10];
  v2 = v0[5];
  v6[4] = v0[4];
  v6[5] = v2;
  v3 = v0[7];
  v6[6] = v0[6];
  v6[7] = v3;
  v4 = v0[1];
  v6[0] = *v0;
  v6[1] = v4;
  v5 = v0[3];
  v6[2] = v0[2];
  v6[3] = v5;
  sub_23B796A58();
  sub_23B6F4E8C((uint64_t)v6);
  sub_23B796A64();
  swift_bridgeObjectRelease();
  sub_23B6F5744((uint64_t)v6);
  __asm { BR              X10 }
}

uint64_t sub_23B70C0D0()
{
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

uint64_t Friend.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[5];
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  char v35;
  _BYTE v36[184];
  _BYTE v37[184];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  unint64_t v49;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v27 - v6;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48480);
  v8 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Friend();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23B70C7C4();
  v31 = v10;
  v15 = v49;
  sub_23B796F80();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  v49 = (unint64_t)v7;
  v16 = v8;
  v28 = (int *)v11;
  v37[183] = 0;
  v17 = sub_23B70C8EC();
  sub_23B796E30();
  v18 = v47;
  *((_OWORD *)v13 + 8) = v46;
  *((_OWORD *)v13 + 9) = v18;
  *((_OWORD *)v13 + 10) = v48;
  v19 = v43;
  *((_OWORD *)v13 + 4) = v42;
  *((_OWORD *)v13 + 5) = v19;
  v20 = v45;
  *((_OWORD *)v13 + 6) = v44;
  *((_OWORD *)v13 + 7) = v20;
  v21 = v39;
  *(_OWORD *)v13 = v38;
  *((_OWORD *)v13 + 1) = v21;
  v22 = v41;
  *((_OWORD *)v13 + 2) = v40;
  *((_OWORD *)v13 + 3) = v22;
  v36[0] = 1;
  sub_23B70C930();
  sub_23B796E30();
  v27[4] = v16;
  v13[176] = v37[0];
  v37[0] = 2;
  v13[177] = sub_23B796E0C() & 1;
  v37[0] = 3;
  v13[178] = sub_23B796E0C() & 1;
  v37[0] = 4;
  v13[179] = sub_23B796E0C() & 1;
  v37[0] = 5;
  v13[180] = sub_23B796E0C() & 1;
  v27[3] = sub_23B7968A8();
  v37[0] = 6;
  v27[2] = sub_23B6EE138(&qword_254302670, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23B796DF4();
  v27[1] = v17;
  v23 = v28;
  sub_23B6FC8F4(v49, (uint64_t)&v13[v28[10]], &qword_254302B18);
  v36[0] = 7;
  v49 = sub_23B6FD7C0();
  sub_23B796E30();
  v13[v23[11]] = v37[0];
  v37[0] = 8;
  v24 = (uint64_t)v30;
  sub_23B796DF4();
  sub_23B6FC8F4(v24, (uint64_t)&v13[v23[12]], &qword_254302B18);
  v36[183] = 9;
  sub_23B796DF4();
  sub_23B6FC8F4((uint64_t)v37, (uint64_t)v36, (uint64_t *)&unk_254302520);
  sub_23B6FC8F4((uint64_t)v36, (uint64_t)&v13[v28[13]], (uint64_t *)&unk_254302520);
  v34 = 10;
  sub_23B796E30();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v32);
  v25 = v29;
  v13[v28[14]] = v35;
  sub_23B6FA5FC((uint64_t)v13, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_23B6F9D50((uint64_t)v13);
}

uint64_t sub_23B70C790@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Friend.init(from:)(a1, a2);
}

uint64_t sub_23B70C7A4(_QWORD *a1)
{
  return Friend.encode(to:)(a1);
}

unint64_t sub_23B70C7C4()
{
  unint64_t result;

  result = qword_256A48478;
  if (!qword_256A48478)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79870C, &type metadata for Friend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48478);
  }
  return result;
}

unint64_t sub_23B70C808()
{
  unint64_t result;

  result = qword_254302E20;
  if (!qword_254302E20)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for HandleType, &type metadata for HandleType);
    atomic_store(result, (unint64_t *)&qword_254302E20);
  }
  return result;
}

uint64_t *sub_23B70C84C(uint64_t *a1)
{
  sub_23B6F71CC(*a1, a1[1]);
  return a1;
}

uint64_t sub_23B70C8AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23B70C8EC()
{
  unint64_t result;

  result = qword_254302CB8;
  if (!qword_254302CB8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_254302CB8);
  }
  return result;
}

unint64_t sub_23B70C930()
{
  unint64_t result;

  result = qword_256A48488;
  if (!qword_256A48488)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for HandleType, &type metadata for HandleType);
    atomic_store(result, (unint64_t *)&qword_256A48488);
  }
  return result;
}

uint64_t sub_23B70C974()
{
  return sub_23B6EE138(&qword_2543026A0, (uint64_t (*)(uint64_t))type metadata accessor for Friend, (uint64_t)&protocol conformance descriptor for Friend);
}

_QWORD *initializeBufferWithCopyOfBuffer for Friend(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    v9 = a2[11];
    v10 = a2[12];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v9;
    *(_QWORD *)(a1 + 96) = v10;
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    v11 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v11;
    v12 = a2[17];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = v12;
    v42 = a2[19];
    *(_QWORD *)(a1 + 144) = a2[18];
    *(_QWORD *)(a1 + 152) = v42;
    v13 = a2[21];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = v13;
    *(_DWORD *)(a1 + 176) = *((_DWORD *)a2 + 44);
    *(_BYTE *)(a1 + 180) = *((_BYTE *)a2 + 180);
    v14 = a3[10];
    __dst = (void *)(a1 + v14);
    v15 = (char *)a2 + v14;
    v16 = sub_23B7968A8();
    v43 = *(_QWORD *)(v16 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      v19 = v43;
    }
    else
    {
      v19 = v43;
      (*(void (**)(void *, char *, uint64_t))(v43 + 16))(__dst, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v16);
    }
    v21 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    if (v17((char *)a2 + v21, 1, v16))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v23, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v16);
    }
    v25 = a3;
    v26 = a3[13];
    v27 = (char *)v4 + v26;
    v28 = (uint64_t)a2 + v26;
    v29 = *(_QWORD *)(v28 + 8);
    if (v29)
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      v30 = *(_QWORD *)(v28 + 24);
      *((_QWORD *)v27 + 2) = *(_QWORD *)(v28 + 16);
      *((_QWORD *)v27 + 3) = v30;
      v27[32] = *(_BYTE *)(v28 + 32);
      v31 = *(_QWORD *)(v28 + 48);
      *((_QWORD *)v27 + 5) = *(_QWORD *)(v28 + 40);
      *((_QWORD *)v27 + 6) = v31;
      *((_QWORD *)v27 + 7) = *(_QWORD *)(v28 + 56);
      *((_OWORD *)v27 + 4) = *(_OWORD *)(v28 + 64);
      v32 = *(_QWORD *)(v28 + 88);
      *((_QWORD *)v27 + 10) = *(_QWORD *)(v28 + 80);
      *((_QWORD *)v27 + 11) = v32;
      *((_QWORD *)v27 + 12) = *(_QWORD *)(v28 + 96);
      v27[104] = *(_BYTE *)(v28 + 104);
      v33 = *(_QWORD *)(v28 + 120);
      *((_QWORD *)v27 + 14) = *(_QWORD *)(v28 + 112);
      *((_QWORD *)v27 + 15) = v33;
      v34 = *(_QWORD *)(v28 + 136);
      *((_QWORD *)v27 + 16) = *(_QWORD *)(v28 + 128);
      *((_QWORD *)v27 + 17) = v34;
      v35 = *(_QWORD *)(v28 + 152);
      *((_QWORD *)v27 + 18) = *(_QWORD *)(v28 + 144);
      *((_QWORD *)v27 + 19) = v35;
      v44 = *(_QWORD *)(v28 + 168);
      *((_QWORD *)v27 + 20) = *(_QWORD *)(v28 + 160);
      *((_QWORD *)v27 + 21) = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = a3;
    }
    else
    {
      v36 = *(_OWORD *)(v28 + 144);
      *((_OWORD *)v27 + 8) = *(_OWORD *)(v28 + 128);
      *((_OWORD *)v27 + 9) = v36;
      *((_OWORD *)v27 + 10) = *(_OWORD *)(v28 + 160);
      v37 = *(_OWORD *)(v28 + 80);
      *((_OWORD *)v27 + 4) = *(_OWORD *)(v28 + 64);
      *((_OWORD *)v27 + 5) = v37;
      v38 = *(_OWORD *)(v28 + 112);
      *((_OWORD *)v27 + 6) = *(_OWORD *)(v28 + 96);
      *((_OWORD *)v27 + 7) = v38;
      v39 = *(_OWORD *)(v28 + 16);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v39;
      v40 = *(_OWORD *)(v28 + 48);
      *((_OWORD *)v27 + 2) = *(_OWORD *)(v28 + 32);
      *((_OWORD *)v27 + 3) = v40;
    }
    *((_BYTE *)v4 + v25[14]) = *((_BYTE *)a2 + v25[14]);
  }
  return v4;
}

uint64_t assignWithCopy for Friend(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  *(_BYTE *)(a1 + 178) = *(_BYTE *)(a2 + 178);
  *(_BYTE *)(a1 + 179) = *(_BYTE *)(a2 + 179);
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  v6 = a3[10];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23B7968A8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v15 = a3[12];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  v21 = a3[13];
  v22 = a1 + v21;
  v23 = (__int128 *)(a2 + v21);
  v24 = *(_QWORD *)(a1 + v21 + 8);
  v25 = *(_QWORD *)(a2 + v21 + 8);
  if (v24)
  {
    if (v25)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
      *(_QWORD *)(v22 + 24) = *((_QWORD *)v23 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v22 + 32) = *((_BYTE *)v23 + 32);
      *(_QWORD *)(v22 + 40) = *((_QWORD *)v23 + 5);
      *(_QWORD *)(v22 + 48) = *((_QWORD *)v23 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 56) = *((_QWORD *)v23 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 64) = *((_QWORD *)v23 + 8);
      *(_QWORD *)(v22 + 72) = *((_QWORD *)v23 + 9);
      *(_QWORD *)(v22 + 80) = *((_QWORD *)v23 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 88) = *((_QWORD *)v23 + 11);
      *(_QWORD *)(v22 + 96) = *((_QWORD *)v23 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v22 + 104) = *((_BYTE *)v23 + 104);
      *(_QWORD *)(v22 + 112) = *((_QWORD *)v23 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 120) = *((_QWORD *)v23 + 15);
      *(_QWORD *)(v22 + 128) = *((_QWORD *)v23 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 136) = *((_QWORD *)v23 + 17);
      *(_QWORD *)(v22 + 144) = *((_QWORD *)v23 + 18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 152) = *((_QWORD *)v23 + 19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 160) = *((_QWORD *)v23 + 20);
      *(_QWORD *)(v22 + 168) = *((_QWORD *)v23 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B70D39C(v22);
      v27 = v23[1];
      v26 = v23[2];
      *(_OWORD *)v22 = *v23;
      *(_OWORD *)(v22 + 16) = v27;
      *(_OWORD *)(v22 + 32) = v26;
      v28 = v23[6];
      v30 = v23[3];
      v29 = v23[4];
      *(_OWORD *)(v22 + 80) = v23[5];
      *(_OWORD *)(v22 + 96) = v28;
      *(_OWORD *)(v22 + 48) = v30;
      *(_OWORD *)(v22 + 64) = v29;
      v31 = v23[10];
      v33 = v23[7];
      v32 = v23[8];
      *(_OWORD *)(v22 + 144) = v23[9];
      *(_OWORD *)(v22 + 160) = v31;
      *(_OWORD *)(v22 + 112) = v33;
      *(_OWORD *)(v22 + 128) = v32;
    }
  }
  else if (v25)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
    *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
    *(_QWORD *)(v22 + 24) = *((_QWORD *)v23 + 3);
    *(_BYTE *)(v22 + 32) = *((_BYTE *)v23 + 32);
    *(_QWORD *)(v22 + 40) = *((_QWORD *)v23 + 5);
    *(_QWORD *)(v22 + 48) = *((_QWORD *)v23 + 6);
    *(_QWORD *)(v22 + 56) = *((_QWORD *)v23 + 7);
    *(_QWORD *)(v22 + 64) = *((_QWORD *)v23 + 8);
    *(_QWORD *)(v22 + 72) = *((_QWORD *)v23 + 9);
    *(_QWORD *)(v22 + 80) = *((_QWORD *)v23 + 10);
    *(_QWORD *)(v22 + 88) = *((_QWORD *)v23 + 11);
    *(_QWORD *)(v22 + 96) = *((_QWORD *)v23 + 12);
    *(_BYTE *)(v22 + 104) = *((_BYTE *)v23 + 104);
    *(_QWORD *)(v22 + 112) = *((_QWORD *)v23 + 14);
    *(_QWORD *)(v22 + 120) = *((_QWORD *)v23 + 15);
    *(_QWORD *)(v22 + 128) = *((_QWORD *)v23 + 16);
    *(_QWORD *)(v22 + 136) = *((_QWORD *)v23 + 17);
    *(_QWORD *)(v22 + 144) = *((_QWORD *)v23 + 18);
    *(_QWORD *)(v22 + 152) = *((_QWORD *)v23 + 19);
    *(_QWORD *)(v22 + 160) = *((_QWORD *)v23 + 20);
    *(_QWORD *)(v22 + 168) = *((_QWORD *)v23 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = *v23;
    v35 = v23[2];
    *(_OWORD *)(v22 + 16) = v23[1];
    *(_OWORD *)(v22 + 32) = v35;
    *(_OWORD *)v22 = v34;
    v36 = v23[3];
    v37 = v23[4];
    v38 = v23[6];
    *(_OWORD *)(v22 + 80) = v23[5];
    *(_OWORD *)(v22 + 96) = v38;
    *(_OWORD *)(v22 + 48) = v36;
    *(_OWORD *)(v22 + 64) = v37;
    v39 = v23[7];
    v40 = v23[8];
    v41 = v23[10];
    *(_OWORD *)(v22 + 144) = v23[9];
    *(_OWORD *)(v22 + 160) = v41;
    *(_OWORD *)(v22 + 112) = v39;
    *(_OWORD *)(v22 + 128) = v40;
  }
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_23B70D39C(uint64_t a1)
{
  destroy for Handle();
  return a1;
}

uint64_t initializeWithTake for Friend(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  v11 = a3[10];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_23B7968A8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  if (v16((const void *)(a2 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v19, v20, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[13];
  v23 = a3[14];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[5];
  v24[4] = v25[4];
  v24[5] = v26;
  v27 = v25[10];
  v28 = v25[8];
  v24[9] = v25[9];
  v24[10] = v27;
  v29 = v25[7];
  v24[6] = v25[6];
  v24[7] = v29;
  v24[8] = v28;
  v30 = v25[1];
  *v24 = *v25;
  v24[1] = v30;
  v31 = v25[3];
  v24[2] = v25[2];
  v24[3] = v31;
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for Friend(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  *(_BYTE *)(a1 + 178) = *(_BYTE *)(a2 + 178);
  *(_BYTE *)(a1 + 179) = *(_BYTE *)(a2 + 179);
  v14 = a3[10];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  *(_BYTE *)(a1 + 180) = *(_BYTE *)(a2 + 180);
  v17 = sub_23B7968A8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = v19((void *)(a1 + v23), 1, v17);
  v27 = v19(v25, 1, v17);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_13:
  v29 = a3[13];
  v30 = a1 + v29;
  v31 = a2 + v29;
  if (!*(_QWORD *)(a1 + v29 + 8))
  {
LABEL_17:
    v40 = *(_OWORD *)(v31 + 144);
    *(_OWORD *)(v30 + 128) = *(_OWORD *)(v31 + 128);
    *(_OWORD *)(v30 + 144) = v40;
    *(_OWORD *)(v30 + 160) = *(_OWORD *)(v31 + 160);
    v41 = *(_OWORD *)(v31 + 80);
    *(_OWORD *)(v30 + 64) = *(_OWORD *)(v31 + 64);
    *(_OWORD *)(v30 + 80) = v41;
    v42 = *(_OWORD *)(v31 + 112);
    *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
    *(_OWORD *)(v30 + 112) = v42;
    v43 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v43;
    v44 = *(_OWORD *)(v31 + 48);
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
    *(_OWORD *)(v30 + 48) = v44;
    goto LABEL_18;
  }
  v32 = *(_QWORD *)(v31 + 8);
  if (!v32)
  {
    sub_23B70D39C(v30);
    goto LABEL_17;
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(v31 + 24);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v30 + 24) = v33;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 32) = *(_BYTE *)(v31 + 32);
  v34 = *(_QWORD *)(v31 + 48);
  *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 48) = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v30 + 56) = *(_QWORD *)(v31 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v30 + 64) = *(_QWORD *)(v31 + 64);
  v35 = *(_QWORD *)(v31 + 80);
  *(_QWORD *)(v30 + 72) = *(_QWORD *)(v31 + 72);
  *(_QWORD *)(v30 + 80) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v31 + 96);
  *(_QWORD *)(v30 + 88) = *(_QWORD *)(v31 + 88);
  *(_QWORD *)(v30 + 96) = v36;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 104) = *(_BYTE *)(v31 + 104);
  *(_QWORD *)(v30 + 112) = *(_QWORD *)(v31 + 112);
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v31 + 128);
  *(_QWORD *)(v30 + 120) = *(_QWORD *)(v31 + 120);
  *(_QWORD *)(v30 + 128) = v37;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v31 + 144);
  *(_QWORD *)(v30 + 136) = *(_QWORD *)(v31 + 136);
  *(_QWORD *)(v30 + 144) = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v30 + 152) = *(_QWORD *)(v31 + 152);
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v31 + 168);
  *(_QWORD *)(v30 + 160) = *(_QWORD *)(v31 + 160);
  *(_QWORD *)(v30 + 168) = v39;
  swift_bridgeObjectRelease();
LABEL_18:
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_23B70D974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_23B70D9F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Friend.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Friend.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_23B70DB48 + 4 * byte_23B7984B1[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_23B70DB7C + 4 * byte_23B7984AC[v4]))();
}

uint64_t sub_23B70DB7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B70DB84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B70DB8CLL);
  return result;
}

uint64_t sub_23B70DB98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B70DBA0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_23B70DBA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B70DBAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Friend.CodingKeys()
{
  return &type metadata for Friend.CodingKeys;
}

unint64_t sub_23B70DBCC()
{
  unint64_t result;

  result = qword_256A48490;
  if (!qword_256A48490)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7986E4, &type metadata for Friend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48490);
  }
  return result;
}

unint64_t sub_23B70DC14()
{
  unint64_t result;

  result = qword_256A48498;
  if (!qword_256A48498)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798654, &type metadata for Friend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48498);
  }
  return result;
}

unint64_t sub_23B70DC5C()
{
  unint64_t result;

  result = qword_256A484A0;
  if (!qword_256A484A0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79867C, &type metadata for Friend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A484A0);
  }
  return result;
}

uint64_t sub_23B70DCA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023B79FF90 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000023B79FFB0 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023B79FFE0 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023B7A0000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x797269707865 && a2 == 0xE600000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E696769726FLL && a2 == 0xE600000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646574616572635FLL && a2 == 0xEA00000000007441 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614872656E776F5FLL && a2 == 0xEC000000656C646ELL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E696769726F5FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_23B70E0E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t v22;
  int v23;
  int v24;

  v23 = a4;
  v24 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v17 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a2;
  *((_QWORD *)v19 + 3) = v16;
  *((_QWORD *)v19 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v17], v11, v8);
  v20 = &v19[v18];
  *(_QWORD *)v20 = a3;
  v20[8] = v23;
  v20[9] = v24;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_23B77520C((uint64_t)v14, (uint64_t)&unk_256A48568, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_23B70E294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v8 + 81) = a8;
  *(_BYTE *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  sub_23B7968D8();
  *(_QWORD *)(v8 + 40) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  *(_QWORD *)(v8 + 48) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B70E32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;
  char v13;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v12 = *(_BYTE *)(v0 + 80);
  v13 = *(_BYTE *)(v0 + 81);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  sub_23B796650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v7, v3);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v9 + v8, v1, v3);
  v10 = v9 + ((v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v10 = v5;
  *(_BYTE *)(v10 + 8) = v12;
  *(_BYTE *)(v10 + 9) = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B70E47C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 98) = a5;
  *(_BYTE *)(v5 + 97) = a4;
  *(_QWORD *)(v5 + 48) = a2;
  *(_QWORD *)(v5 + 56) = a3;
  *(_QWORD *)(v5 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  *(_QWORD *)(v5 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B70E4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_BYTE *)(v0 + 97);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v4, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  sub_23B6FC8F4(v1, v2, &qword_254302EF0);
  v8 = v5 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  swift_beginAccess();
  sub_23B6FBD54(v2, v8);
  swift_endAccess();
  *(_BYTE *)(v0 + 96) = v3;
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v9;
  *(_QWORD *)v9 = v0;
  *(_QWORD *)(v9 + 8) = sub_23B70E624;
  v10 = *(_BYTE *)(v0 + 98);
  v11 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v9 + 928) = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v9 + 936) = v10;
  *(_QWORD *)(v9 + 920) = v11;
  *(_BYTE *)(v9 + 937) = *(_BYTE *)(v0 + 96);
  return swift_task_switch();
}

uint64_t sub_23B70E624()
{
  uint64_t *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(unsigned __int8 *)(*v0 + 98);
  v3 = *v0;
  swift_task_dealloc();
  if (v2 == 1)
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 88) = v4;
    *v4 = v3;
    v4[1] = sub_23B70E6C4;
    return sub_23B70F078(*(_QWORD *)(v1 + 56));
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_23B70E6C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B70E71C(uint64_t a1, _BYTE *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 928) = v3;
  *(_BYTE *)(v4 + 936) = a3;
  *(_QWORD *)(v4 + 920) = a1;
  *(_BYTE *)(v4 + 937) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B70E744()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t i;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t j;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  unsigned __int8 v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unsigned __int8 v47;
  unint64_t v48;
  char v49;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  uint64_t k;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  _DWORD *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  if (qword_254303110 != -1)
    swift_once();
  v1 = (_OWORD *)(v0 + 544);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  swift_bridgeObjectRetain_n();
  v3 = sub_23B7969A4();
  v4 = sub_23B796C38();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 937);
    v6 = swift_slowAlloc();
    *(_QWORD *)&v73 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446979;
    *(_QWORD *)(v0 + 544) = sub_23B6FB388(0xD00000000000003ELL, 0x800000023B7A01E0, (uint64_t *)&v73);
    sub_23B796C68();
    *(_WORD *)(v6 + 12) = 2082;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease_n();

  v7 = *(_QWORD *)(v0 + 928)
     + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesNeedingReverseGeocoding;
  if (*(_BYTE *)(v0 + 936) == 1)
  {
    v8 = *(_QWORD *)(v0 + 920);
    swift_beginAccess();
    v9 = *(_QWORD *)(v8 + 16);
    if (!v9)
      goto LABEL_16;
    v10 = (__int128 *)(*(_QWORD *)(v0 + 920) + 32);
    swift_bridgeObjectRetain();
    for (i = v9 - 1; ; --i)
    {
      v12 = *v10;
      v13 = v10[2];
      *(_OWORD *)(v0 + 208) = v10[1];
      *(_OWORD *)(v0 + 224) = v13;
      *(_OWORD *)(v0 + 192) = v12;
      v14 = v10[3];
      v15 = v10[4];
      v16 = v10[6];
      *(_OWORD *)(v0 + 272) = v10[5];
      *(_OWORD *)(v0 + 288) = v16;
      *(_OWORD *)(v0 + 240) = v14;
      *(_OWORD *)(v0 + 256) = v15;
      v17 = v10[7];
      v18 = v10[8];
      v19 = v10[10];
      *(_OWORD *)(v0 + 336) = v10[9];
      *(_OWORD *)(v0 + 352) = v19;
      *(_OWORD *)(v0 + 304) = v17;
      *(_OWORD *)(v0 + 320) = v18;
      sub_23B6F4E8C(v0 + 192);
      sub_23B6F4F50(&v73, (__int128 *)(v0 + 192));
      v20 = v82;
      *(_OWORD *)(v0 + 672) = v81;
      *(_OWORD *)(v0 + 688) = v20;
      *(_OWORD *)(v0 + 704) = v83;
      v21 = v78;
      *(_OWORD *)(v0 + 608) = v77;
      *(_OWORD *)(v0 + 624) = v21;
      v22 = v80;
      *(_OWORD *)(v0 + 640) = v79;
      *(_OWORD *)(v0 + 656) = v22;
      v23 = v74;
      *v1 = v73;
      *(_OWORD *)(v0 + 560) = v23;
      v24 = v76;
      *(_OWORD *)(v0 + 576) = v75;
      *(_OWORD *)(v0 + 592) = v24;
      sub_23B6F5744(v0 + 544);
      if (!i)
        break;
      v10 += 11;
    }
    goto LABEL_15;
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    v25 = *(_QWORD *)(v0 + 920);
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      v27 = (__int128 *)(v25 + 32);
      swift_bridgeObjectRetain();
      for (j = v26 - 1; ; --j)
      {
        v29 = *v27;
        v30 = v27[2];
        *(_OWORD *)(v0 + 32) = v27[1];
        *(_OWORD *)(v0 + 48) = v30;
        *(_OWORD *)(v0 + 16) = v29;
        v31 = v27[3];
        v32 = v27[4];
        v33 = v27[6];
        *(_OWORD *)(v0 + 96) = v27[5];
        *(_OWORD *)(v0 + 112) = v33;
        *(_OWORD *)(v0 + 64) = v31;
        *(_OWORD *)(v0 + 80) = v32;
        v34 = v27[7];
        v35 = v27[8];
        v36 = v27[10];
        *(_OWORD *)(v0 + 160) = v27[9];
        *(_OWORD *)(v0 + 176) = v36;
        *(_OWORD *)(v0 + 128) = v34;
        *(_OWORD *)(v0 + 144) = v35;
        sub_23B6F4E8C(v0 + 16);
        sub_23B72093C((void *)(v0 + 720));
        sub_23B6FC8F4(v0 + 720, v0 + 544, (uint64_t *)&unk_254302520);
        sub_23B70C84C((uint64_t *)(v0 + 544));
        sub_23B6F5744(v0 + 16);
        if (!j)
          break;
        v27 += 11;
      }
LABEL_15:
      swift_bridgeObjectRelease();
    }
  }
LABEL_16:
  swift_endAccess();
  v37 = (_QWORD *)(*(_QWORD *)(v0 + 928)
                 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing);
  v38 = *(_BYTE *)(v0 + 937);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v73 = *v37;
  v40 = v73;
  *v37 = 0x8000000000000000;
  v42 = sub_23B6F564C(v38);
  v43 = *(_QWORD *)(v40 + 16);
  v44 = (v41 & 1) == 0;
  v45 = v43 + v44;
  if (__OFADD__(v43, v44))
  {
    __break(1u);
    JUMPOUT(0x23B70F058);
  }
  v46 = v41;
  if (*(_QWORD *)(v40 + 24) >= v45)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23B781998();
      v40 = v73;
    }
  }
  else
  {
    v47 = *(_BYTE *)(v0 + 937);
    sub_23B6EE53C(v45, isUniquelyReferenced_nonNull_native);
    v40 = v73;
    v48 = sub_23B6F564C(v47);
    if ((v46 & 1) != (v49 & 1))
      return sub_23B796EF0();
    v42 = v48;
  }
  *v37 = v40;
  swift_bridgeObjectRelease();
  v51 = (_QWORD *)*v37;
  swift_bridgeObjectRetain();
  if ((v46 & 1) == 0)
    sub_23B73BE90(v42, *(_BYTE *)(v0 + 937), MEMORY[0x24BEE4B08], v51);
  v52 = *(_QWORD *)(v0 + 920);
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v52 + 16);
  if (v53)
  {
    v54 = (__int128 *)(*(_QWORD *)(v0 + 920) + 32);
    for (k = v53 - 1; ; --k)
    {
      v56 = *v54;
      v57 = v54[2];
      *(_OWORD *)(v0 + 384) = v54[1];
      *(_OWORD *)(v0 + 400) = v57;
      *(_OWORD *)(v0 + 368) = v56;
      v58 = v54[3];
      v59 = v54[4];
      v60 = v54[6];
      *(_OWORD *)(v0 + 448) = v54[5];
      *(_OWORD *)(v0 + 464) = v60;
      *(_OWORD *)(v0 + 416) = v58;
      *(_OWORD *)(v0 + 432) = v59;
      v61 = v54[7];
      v62 = v54[8];
      v63 = v54[10];
      *(_OWORD *)(v0 + 512) = v54[9];
      *(_OWORD *)(v0 + 528) = v63;
      *(_OWORD *)(v0 + 480) = v61;
      *(_OWORD *)(v0 + 496) = v62;
      sub_23B6F4E8C(v0 + 368);
      sub_23B6F4F50(&v73, (__int128 *)(v0 + 368));
      v64 = v82;
      *(_OWORD *)(v0 + 672) = v81;
      *(_OWORD *)(v0 + 688) = v64;
      *(_OWORD *)(v0 + 704) = v83;
      v65 = v78;
      *(_OWORD *)(v0 + 608) = v77;
      *(_OWORD *)(v0 + 624) = v65;
      v66 = v80;
      *(_OWORD *)(v0 + 640) = v79;
      *(_OWORD *)(v0 + 656) = v66;
      v67 = v74;
      *v1 = v73;
      *(_OWORD *)(v0 + 560) = v67;
      v68 = v76;
      *(_OWORD *)(v0 + 576) = v75;
      *(_OWORD *)(v0 + 592) = v68;
      sub_23B6F5744(v0 + 544);
      if (!k)
        break;
      v54 += 11;
    }
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_retain_n();
  v69 = sub_23B7969A4();
  v70 = sub_23B796C38();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = *(unsigned __int8 *)(v0 + 937);
    v72 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)&v73 = swift_slowAlloc();
    *v72 = 136315651;
    __asm { BR              X9 }
  }
  swift_release_n();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B70F078(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[78] = v1;
  v2[77] = a1;
  v2[79] = type metadata accessor for LocationStreamChange();
  v2[80] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v2[81] = v3;
  v2[82] = *(_QWORD *)(v3 - 8);
  v2[83] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  v2[84] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025C8);
  v2[85] = swift_task_alloc();
  v4 = type metadata accessor for Location();
  v2[86] = v4;
  v2[87] = *(_QWORD *)(v4 - 8);
  v2[88] = swift_task_alloc();
  v2[89] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302588);
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B70F1B8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  v0[92] = __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[76] = sub_23B6FB388(0xD000000000000031, 0x800000023B7A01A0, &v8);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s Checking if we have any valid cached  location that needs rev-geo", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[93] = v6;
  *v6 = v0;
  v6[1] = sub_23B70F364;
  return sub_23B717B34(v0[77], 0, 0);
}

uint64_t sub_23B70F364(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 752) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B70F3C4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _QWORD *v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[2];

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 752) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v8 = sub_23B7969A4();
    v9 = sub_23B796C38();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v69[0] = v11;
      *(_DWORD *)v10 = 136446723;
      *(_QWORD *)(v0 + 584) = sub_23B6FB388(0xD000000000000031, 0x800000023B7A01A0, v69);
      sub_23B796C68();
      *(_WORD *)(v10 + 12) = 2160;
      *(_QWORD *)(v0 + 592) = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v10 + 22) = 2081;
      v12 = swift_bridgeObjectRetain();
      v13 = MEMORY[0x23B86BE78](v12, &type metadata for Handle);
      v15 = v14;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 600) = sub_23B6FB388(v13, v15, v69);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23B6EB000, v8, v9, "%{public}s no valid cached location\nfor handles:%{private,mask.hash}s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v11, -1, -1);
      MEMORY[0x23B86C754](v10, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_23;
  }
  swift_bridgeObjectRetain_n();
  v1 = sub_23B7969A4();
  v2 = sub_23B796C38();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v69[0] = v4;
    *(_DWORD *)v3 = 136446466;
    *(_QWORD *)(v0 + 568) = sub_23B6FB388(0xD000000000000031, 0x800000023B7A01A0, v69);
    sub_23B796C68();
    *(_WORD *)(v3 + 12) = 2080;
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v5 = sub_23B7969D4();
    v7 = v6;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 576) = sub_23B6FB388(v5, v7, v69);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v1, v2, "%{public}s send back rev-geo locations from cache: %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v4, -1, -1);
    MEMORY[0x23B86C754](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v16 = *(_QWORD *)(v0 + 752);
  v17 = swift_bridgeObjectRetain();
  v18 = sub_23B720E88(v17, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23B721428);
  swift_bridgeObjectRelease();
  sub_23B723FE4(v18, (void (*)(_OWORD *, uint64_t))sub_23B7254C4);
  swift_release();
  v19 = sub_23B720E88(v16, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23B720FE4);
  *(_QWORD *)(v0 + 760) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_BYTE *)(v19 + 32);
  *(_BYTE *)(v0 + 800) = v20;
  v21 = 1 << v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v23 = v22 & *(_QWORD *)(v19 + 64);
  *(_QWORD *)(v0 + 768) = OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  swift_beginAccess();
  if (v23)
  {
    v24 = 0;
    v25 = __clz(__rbit64(v23));
    v26 = (v23 - 1) & v23;
    v27 = *(_QWORD **)(v0 + 760);
LABEL_12:
    v28 = *(void **)(v0 + 720);
    v29 = *(_QWORD *)(v0 + 696);
    v30 = (_OWORD *)(v27[6] + 176 * v25);
    v32 = v30[1];
    v31 = v30[2];
    *(_OWORD *)(v0 + 16) = *v30;
    *(_OWORD *)(v0 + 32) = v32;
    *(_OWORD *)(v0 + 48) = v31;
    v33 = v30[6];
    v35 = v30[3];
    v34 = v30[4];
    *(_OWORD *)(v0 + 96) = v30[5];
    *(_OWORD *)(v0 + 112) = v33;
    *(_OWORD *)(v0 + 64) = v35;
    *(_OWORD *)(v0 + 80) = v34;
    v36 = v30[10];
    v38 = v30[7];
    v37 = v30[8];
    *(_OWORD *)(v0 + 160) = v30[9];
    *(_OWORD *)(v0 + 176) = v36;
    *(_OWORD *)(v0 + 128) = v38;
    *(_OWORD *)(v0 + 144) = v37;
    memmove(v28, v30, 0xB0uLL);
    v39 = v27[7] + *(_QWORD *)(v29 + 72) * v25;
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    sub_23B725660(v39, (uint64_t)v28 + *(int *)(v40 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v28, 0, 1, v40);
    sub_23B6F4E8C(v0 + 16);
    goto LABEL_21;
  }
  v41 = *(_BYTE *)(v0 + 800);
  v42 = v41 & 0x3F;
  if (v42 <= 6)
  {
    v24 = 0;
  }
  else
  {
    v27 = *(_QWORD **)(v0 + 760);
    v43 = v27[9];
    if (v43)
    {
      v24 = 1;
LABEL_16:
      v26 = (v43 - 1) & v43;
      v25 = __clz(__rbit64(v43)) + (v24 << 6);
      goto LABEL_12;
    }
    if (v42 < 8)
    {
      v24 = 1;
    }
    else
    {
      v43 = v27[10];
      if (v43)
      {
        v24 = 2;
        goto LABEL_16;
      }
      v43 = v27[11];
      if (v43)
      {
        v24 = 3;
        goto LABEL_16;
      }
      if (v42 < 9)
      {
        v24 = 3;
      }
      else
      {
        v43 = v27[12];
        if (v43)
        {
          v24 = 4;
          goto LABEL_16;
        }
        v65 = 0;
        v66 = (unint64_t)((1 << v41) + 63) >> 6;
        v67 = 5;
        if (v66 > 5)
          v67 = v66;
        v68 = v67 - 5;
        while (v68 != v65)
        {
          v43 = v27[v65++ + 13];
          if (v43)
          {
            v24 = v65 + 4;
            goto LABEL_16;
          }
        }
        v24 = v66 - 1;
      }
    }
  }
  v44 = *(_QWORD *)(v0 + 720);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
  v26 = 0;
LABEL_21:
  *(_QWORD *)(v0 + 784) = v26;
  *(_QWORD *)(v0 + 776) = v24;
  v46 = *(_QWORD *)(v0 + 728);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 720), v46, &qword_254302588);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47) == 1)
  {
    swift_release();
LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v49 = *(_OWORD **)(v0 + 728);
  v50 = *(_QWORD *)(v0 + 712);
  v52 = v49[1];
  v51 = v49[2];
  *(_OWORD *)(v0 + 192) = *v49;
  *(_OWORD *)(v0 + 208) = v52;
  *(_OWORD *)(v0 + 224) = v51;
  v53 = v49[6];
  v55 = v49[3];
  v54 = v49[4];
  *(_OWORD *)(v0 + 272) = v49[5];
  *(_OWORD *)(v0 + 288) = v53;
  *(_OWORD *)(v0 + 240) = v55;
  *(_OWORD *)(v0 + 256) = v54;
  v56 = v49[10];
  v58 = v49[7];
  v57 = v49[8];
  *(_OWORD *)(v0 + 336) = v49[9];
  *(_OWORD *)(v0 + 352) = v56;
  *(_OWORD *)(v0 + 304) = v58;
  *(_OWORD *)(v0 + 320) = v57;
  sub_23B6FF360((uint64_t)v49 + *(int *)(v47 + 48), v50, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v59 = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 512) = v59;
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 352);
  v60 = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 448) = v60;
  v61 = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v0 + 480) = v61;
  v62 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 384) = v62;
  v63 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 416) = v63;
  v64 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 792) = v64;
  *v64 = v0;
  v64[1] = sub_23B70FB84;
  return sub_23B71B7F8(*(_QWORD *)(v0 + 704), (_OWORD *)(v0 + 368), *(_QWORD *)(v0 + 712));
}

uint64_t sub_23B70FB84()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B70FBDC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _QWORD *v68;

  v1 = (_OWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = *(_QWORD *)(v0 + 656);
  v4 = *(_QWORD *)(v0 + 648);
  sub_23B6FDE3C(*(_QWORD *)(v0 + 624) + *(_QWORD *)(v0 + 768), v2, &qword_254302EF0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 704);
  v8 = *(_QWORD *)(v0 + 680);
  v9 = *(_QWORD *)(v0 + 672);
  if (v5)
  {
    sub_23B6F5744(v0 + 192);
    sub_23B700B04(v7, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B700B04(v6, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F7190(v9, &qword_254302EF0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 664);
    v12 = *(_QWORD *)(v0 + 656);
    v13 = *(_QWORD *)(v0 + 648);
    v14 = *(_QWORD *)(v0 + 640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v9, v13);
    sub_23B6F7190(v9, &qword_254302EF0);
    v15 = (_OWORD *)(v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302B10) + 48));
    sub_23B725660(v7, v14, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v17 = *(_OWORD *)(v0 + 208);
    v16 = *(_OWORD *)(v0 + 224);
    *v15 = *v1;
    v15[1] = v17;
    v15[2] = v16;
    v18 = *(_OWORD *)(v0 + 288);
    v20 = *(_OWORD *)(v0 + 240);
    v19 = *(_OWORD *)(v0 + 256);
    v15[5] = *(_OWORD *)(v0 + 272);
    v15[6] = v18;
    v15[3] = v20;
    v15[4] = v19;
    v21 = *(_OWORD *)(v0 + 352);
    v23 = *(_OWORD *)(v0 + 304);
    v22 = *(_OWORD *)(v0 + 320);
    v15[9] = *(_OWORD *)(v0 + 336);
    v15[10] = v21;
    v15[7] = v23;
    v15[8] = v22;
    swift_storeEnumTagMultiPayload();
    sub_23B796B90();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    sub_23B700B04(v7, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B700B04(v6, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
  }
  result = sub_23B6F7190(*(_QWORD *)(v0 + 680), &qword_2543025C8);
  v26 = *(_QWORD *)(v0 + 784);
  v27 = *(_QWORD *)(v0 + 776);
  if (v26)
  {
    v28 = (v26 - 1) & v26;
    v29 = __clz(__rbit64(v26)) | (v27 << 6);
    v30 = *(_QWORD *)(v0 + 760);
LABEL_6:
    v31 = *(void **)(v0 + 720);
    v32 = *(_QWORD *)(v0 + 696);
    v33 = (_OWORD *)(*(_QWORD *)(v30 + 48) + 176 * v29);
    v35 = v33[1];
    v34 = v33[2];
    *(_OWORD *)(v0 + 16) = *v33;
    *(_OWORD *)(v0 + 32) = v35;
    *(_OWORD *)(v0 + 48) = v34;
    v36 = v33[6];
    v38 = v33[3];
    v37 = v33[4];
    *(_OWORD *)(v0 + 96) = v33[5];
    *(_OWORD *)(v0 + 112) = v36;
    *(_OWORD *)(v0 + 64) = v38;
    *(_OWORD *)(v0 + 80) = v37;
    v39 = v33[10];
    v41 = v33[7];
    v40 = v33[8];
    *(_OWORD *)(v0 + 160) = v33[9];
    *(_OWORD *)(v0 + 176) = v39;
    *(_OWORD *)(v0 + 128) = v41;
    *(_OWORD *)(v0 + 144) = v40;
    memmove(v31, v33, 0xB0uLL);
    v42 = *(_QWORD *)(v30 + 56) + *(_QWORD *)(v32 + 72) * v29;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    sub_23B725660(v42, (uint64_t)v31 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v31, 0, 1, v43);
    sub_23B6F4E8C(v0 + 16);
    goto LABEL_25;
  }
  v44 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  v45 = (unint64_t)((1 << *(_BYTE *)(v0 + 800)) + 63) >> 6;
  if (v44 < v45)
  {
    v30 = *(_QWORD *)(v0 + 760);
    v46 = v30 + 64;
    v47 = *(_QWORD *)(v30 + 64 + 8 * v44);
    if (v47)
    {
LABEL_10:
      v28 = (v47 - 1) & v47;
      v29 = __clz(__rbit64(v47)) + (v44 << 6);
      v27 = v44;
      goto LABEL_6;
    }
    v48 = v27 + 2;
    ++v27;
    if (v44 + 1 < v45)
    {
      v47 = *(_QWORD *)(v46 + 8 * v48);
      if (v47)
      {
LABEL_13:
        v44 = v48;
        goto LABEL_10;
      }
      v27 = v44 + 1;
      if (v44 + 2 < v45)
      {
        v47 = *(_QWORD *)(v46 + 8 * (v44 + 2));
        if (v47)
        {
          v44 += 2;
          goto LABEL_10;
        }
        v48 = v44 + 3;
        v27 = v44 + 2;
        if (v44 + 3 < v45)
        {
          v47 = *(_QWORD *)(v46 + 8 * v48);
          if (v47)
            goto LABEL_13;
          while (1)
          {
            v44 = v48 + 1;
            if (__OFADD__(v48, 1))
              break;
            if (v44 >= v45)
            {
              v27 = v45 - 1;
              goto LABEL_24;
            }
            v47 = *(_QWORD *)(v46 + 8 * v44);
            ++v48;
            if (v47)
              goto LABEL_10;
          }
LABEL_29:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_24:
  v49 = *(_QWORD *)(v0 + 720);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 1, 1, v50);
  v28 = 0;
LABEL_25:
  *(_QWORD *)(v0 + 784) = v28;
  *(_QWORD *)(v0 + 776) = v27;
  v51 = *(_QWORD *)(v0 + 728);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 720), v51, &qword_254302588);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v51, 1, v52) == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v53 = *(_OWORD **)(v0 + 728);
    v54 = *(_QWORD *)(v0 + 712);
    v56 = v53[1];
    v55 = v53[2];
    *v1 = *v53;
    *(_OWORD *)(v0 + 208) = v56;
    *(_OWORD *)(v0 + 224) = v55;
    v57 = v53[6];
    v59 = v53[3];
    v58 = v53[4];
    *(_OWORD *)(v0 + 272) = v53[5];
    *(_OWORD *)(v0 + 288) = v57;
    *(_OWORD *)(v0 + 240) = v59;
    *(_OWORD *)(v0 + 256) = v58;
    v60 = v53[10];
    v62 = v53[7];
    v61 = v53[8];
    *(_OWORD *)(v0 + 336) = v53[9];
    *(_OWORD *)(v0 + 352) = v60;
    *(_OWORD *)(v0 + 304) = v62;
    *(_OWORD *)(v0 + 320) = v61;
    sub_23B6FF360((uint64_t)v53 + *(int *)(v52 + 48), v54, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v63 = *(_OWORD *)(v0 + 336);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 320);
    *(_OWORD *)(v0 + 512) = v63;
    *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 352);
    v64 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 448) = v64;
    v65 = *(_OWORD *)(v0 + 304);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v0 + 480) = v65;
    v66 = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 368) = *v1;
    *(_OWORD *)(v0 + 384) = v66;
    v67 = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 416) = v67;
    v68 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 792) = v68;
    *v68 = v0;
    v68[1] = sub_23B70FB84;
    return sub_23B71B7F8(*(_QWORD *)(v0 + 704), (_OWORD *)(v0 + 368), *(_QWORD *)(v0 + 712));
  }
}

uint64_t sub_23B710150(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[4];
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a7;
  v30 = a8;
  v27 = a5;
  v28 = a6;
  v26 = a4;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_23B796B84();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v20 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = v20;
  *(_QWORD *)(v22 + 32) = a2;
  *(_QWORD *)(v22 + 40) = a3;
  *(_BYTE *)(v22 + 48) = v26;
  *(_BYTE *)(v22 + 49) = v27;
  *(_BYTE *)(v22 + 56) = v28;
  v23 = v30;
  *(_QWORD *)(v22 + 64) = v29;
  *(_QWORD *)(v22 + 72) = v23;
  *(_QWORD *)(v22 + 80) = a9;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v13 + 32))(v22 + v21, v15, v12);
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_23B77520C((uint64_t)v18, (uint64_t)&unk_256A48670, v22);
  return swift_release();
}

uint64_t sub_23B710314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 48) = v13;
  *(_QWORD *)(v8 + 56) = v14;
  *(_OWORD *)(v8 + 32) = v12;
  *(_BYTE *)(v8 + 106) = a8;
  *(_BYTE *)(v8 + 105) = a7;
  *(_BYTE *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  sub_23B7968D8();
  *(_QWORD *)(v8 + 64) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  *(_QWORD *)(v8 + 72) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B7103BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v14 = *(_QWORD *)(v0 + 32);
  v15 = *(_QWORD *)(v0 + 40);
  v12 = *(_BYTE *)(v0 + 105);
  v13 = *(_BYTE *)(v0 + 106);
  v11 = *(_BYTE *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 16);
  sub_23B796650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v8 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v6;
  *(_BYTE *)(v9 + 32) = v11;
  *(_BYTE *)(v9 + 33) = v12;
  *(_BYTE *)(v9 + 40) = v13;
  *(_QWORD *)(v9 + 48) = v14;
  *(_QWORD *)(v9 + 56) = v15;
  *(_QWORD *)(v9 + 64) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v9 + v8, v1, v3);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B710534(uint64_t a1, uint64_t a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v20;

  *(_QWORD *)(v8 + 56) = v20;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302540);
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v8 + 80) = swift_task_alloc();
  v16 = swift_task_alloc();
  *(_BYTE *)(v8 + 112) = a3;
  *(_BYTE *)(v8 + 16) = a5;
  *(_QWORD *)(v8 + 88) = v16;
  *(_QWORD *)(v8 + 24) = a6;
  *(_QWORD *)(v8 + 32) = a7;
  *(_QWORD *)(v8 + 40) = a8;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 96) = v17;
  *v17 = v8;
  v17[1] = sub_23B710634;
  return sub_23B6FC520(v16, a2, (_BYTE *)(v8 + 112), a4, v8 + 16);
}

uint64_t sub_23B710634()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B710698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 80), v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  sub_23B796B60();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71072C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  sub_23B796B54();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B710790(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[4];
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a6;
  v31 = a7;
  v27 = a4;
  v28 = a9;
  v29 = a5;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = &v26[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_23B796B84();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v21 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v22 = (*(unsigned __int8 *)(v14 + 80) + 89) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = v21;
  *(_QWORD *)(v23 + 32) = a2;
  *(_QWORD *)(v23 + 40) = a3;
  *(_BYTE *)(v23 + 48) = v27;
  *(_BYTE *)(v23 + 56) = v29;
  v24 = v31;
  *(_QWORD *)(v23 + 64) = v30;
  *(_QWORD *)(v23 + 72) = v24;
  *(_QWORD *)(v23 + 80) = a8;
  *(_BYTE *)(v23 + 88) = v28;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v14 + 32))(v23 + v22, v16, v13);
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_23B77520C((uint64_t)v19, (uint64_t)&unk_256A48630, v23);
  return swift_release();
}

uint64_t sub_23B710958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  char v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 56) = v14;
  *(_BYTE *)(v8 + 106) = v13;
  *(_OWORD *)(v8 + 40) = v12;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a8;
  *(_BYTE *)(v8 + 105) = a7;
  *(_BYTE *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  sub_23B7968D8();
  *(_QWORD *)(v8 + 64) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  *(_QWORD *)(v8 + 72) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B710A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v15 = *(_BYTE *)(v0 + 106);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 32);
  v14 = *(_QWORD *)(v0 + 40);
  v11 = *(_BYTE *)(v0 + 104);
  v12 = *(_BYTE *)(v0 + 105);
  v7 = *(_QWORD *)(v0 + 16);
  sub_23B796650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v8 = (*(unsigned __int8 *)(v2 + 80) + 73) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v6;
  *(_BYTE *)(v9 + 32) = v11;
  *(_BYTE *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 48) = v13;
  *(_QWORD *)(v9 + 56) = v14;
  *(_QWORD *)(v9 + 64) = v5;
  *(_BYTE *)(v9 + 72) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v9 + v8, v1, v3);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B710B80(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  _QWORD *v11;
  uint64_t v13;

  *(_BYTE *)(v8 + 80) = a3;
  *(_BYTE *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 56) = v13;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 40) = a7;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 64) = v11;
  *v11 = v8;
  v11[1] = sub_23B710C14;
  return sub_23B710D10(a2, (_BYTE *)(v8 + 80), v8 + 16, a8);
}

uint64_t sub_23B710C14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B710C78()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  sub_23B796B60();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B710CBC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  sub_23B796B54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B710D10(uint64_t a1, _BYTE *a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 1616) = v4;
  *(_BYTE *)(v5 + 1477) = a4;
  *(_QWORD *)(v5 + 1608) = a1;
  *(_QWORD *)(v5 + 1624) = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  *(_QWORD *)(v5 + 1632) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  *(_QWORD *)(v5 + 1640) = swift_task_alloc();
  *(_BYTE *)(v5 + 1478) = *a2;
  *(_BYTE *)(v5 + 1479) = *(_BYTE *)a3;
  *(_OWORD *)(v5 + 1648) = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(v5 + 1664) = *(_QWORD *)(a3 + 24);
  return swift_task_switch();
}

uint64_t sub_23B710DD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t i;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 *v38;
  uint64_t j;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _QWORD *v48;
  unsigned __int8 v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t result;
  char v57;
  unsigned __int8 v58;
  unint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  uint64_t k;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  __int128 *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  FindMyLocate::LegacyRefreshCommandReason_optional v89;
  Swift::Bool v90;
  _OWORD *v91;
  uint64_t m;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  char v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  Swift::Bool v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t *v117;
  FindMyLocate::LocationRequest *v118;
  char v119;
  char v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;

  if (qword_254303110 != -1)
    swift_once();
  v1 = (uint64_t *)(v0 + 1608);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  swift_bridgeObjectRetain_n();
  v3 = sub_23B7969A4();
  v4 = sub_23B796C38();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v115 = swift_slowAlloc();
    *(_QWORD *)&v121 = v115;
    *(_DWORD *)v5 = 136446723;
    *(_QWORD *)(v0 + 1584) = sub_23B6FB388(0xD000000000000044, 0x800000023B7A0350, (uint64_t *)&v121);
    sub_23B796C68();
    *(_WORD *)(v5 + 12) = 2160;
    *(_QWORD *)(v0 + 1592) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v5 + 22) = 2081;
    v6 = swift_bridgeObjectRetain();
    v7 = MEMORY[0x23B86BE78](v6, &type metadata for Handle);
    v9 = v8;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1600) = sub_23B6FB388(v7, v9, (uint64_t *)&v121);
    sub_23B796C68();
    v1 = (uint64_t *)(v0 + 1608);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v3, v4, "%{public}s with handles: %{private,mask.hash}s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v115, -1, -1);
    MEMORY[0x23B86C754](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = *(_QWORD *)(v0 + 1640);
  v11 = *(_QWORD *)(v0 + 1616) + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v11, v10, &qword_254302EF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12);
  sub_23B6F7190(v10, &qword_254302EF0);
  if ((_DWORD)v11 == 1)
  {
    v13 = sub_23B7969A4();
    v14 = sub_23B796C20();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)&v121 = v16;
      *(_DWORD *)v15 = 136446210;
      *(_QWORD *)(v0 + 1576) = sub_23B6FB388(0xD000000000000044, 0x800000023B7A0350, (uint64_t *)&v121);
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, v13, v14, "%{public}s locationContinuation is nil", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v16, -1, -1);
      MEMORY[0x23B86C754](v15, -1, -1);
    }

    sub_23B7090F8();
    swift_allocError();
    *v17 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  v19 = *(_QWORD *)(v0 + 1616)
      + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesNeedingReverseGeocoding;
  if (*(_BYTE *)(v0 + 1477) == 1)
  {
    v20 = *v1;
    swift_beginAccess();
    v21 = *(_QWORD *)(v20 + 16);
    if (!v21)
      goto LABEL_22;
    v22 = (__int128 *)(*v1 + 32);
    swift_bridgeObjectRetain();
    for (i = v21 - 1; ; --i)
    {
      v24 = *v22;
      v25 = v22[2];
      *(_OWORD *)(v0 + 208) = v22[1];
      *(_OWORD *)(v0 + 224) = v25;
      *(_OWORD *)(v0 + 192) = v24;
      v26 = v22[3];
      v27 = v22[4];
      v28 = v22[6];
      *(_OWORD *)(v0 + 272) = v22[5];
      *(_OWORD *)(v0 + 288) = v28;
      *(_OWORD *)(v0 + 240) = v26;
      *(_OWORD *)(v0 + 256) = v27;
      v29 = v22[7];
      v30 = v22[8];
      v31 = v22[10];
      *(_OWORD *)(v0 + 336) = v22[9];
      *(_OWORD *)(v0 + 352) = v31;
      *(_OWORD *)(v0 + 304) = v29;
      *(_OWORD *)(v0 + 320) = v30;
      sub_23B6F4E8C(v0 + 192);
      sub_23B6F4F50(&v121, (__int128 *)(v0 + 192));
      v32 = v130;
      *(_OWORD *)(v0 + 672) = v129;
      *(_OWORD *)(v0 + 688) = v32;
      *(_OWORD *)(v0 + 704) = v131;
      v33 = v126;
      *(_OWORD *)(v0 + 608) = v125;
      *(_OWORD *)(v0 + 624) = v33;
      v34 = v128;
      *(_OWORD *)(v0 + 640) = v127;
      *(_OWORD *)(v0 + 656) = v34;
      v35 = v122;
      *(_OWORD *)(v0 + 544) = v121;
      *(_OWORD *)(v0 + 560) = v35;
      v36 = v124;
      *(_OWORD *)(v0 + 576) = v123;
      *(_OWORD *)(v0 + 592) = v36;
      sub_23B6F5744(v0 + 544);
      if (!i)
        break;
      v22 += 11;
    }
    goto LABEL_21;
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v19 + 16))
  {
    v37 = *(_QWORD *)(*v1 + 16);
    if (v37)
    {
      v116 = v1;
      v38 = (__int128 *)(*v1 + 32);
      swift_bridgeObjectRetain();
      for (j = v37 - 1; ; --j)
      {
        v40 = *v38;
        v41 = v38[2];
        *(_OWORD *)(v0 + 32) = v38[1];
        *(_OWORD *)(v0 + 48) = v41;
        *(_OWORD *)(v0 + 16) = v40;
        v42 = v38[3];
        v43 = v38[4];
        v44 = v38[6];
        *(_OWORD *)(v0 + 96) = v38[5];
        *(_OWORD *)(v0 + 112) = v44;
        *(_OWORD *)(v0 + 64) = v42;
        *(_OWORD *)(v0 + 80) = v43;
        v45 = v38[7];
        v46 = v38[8];
        v47 = v38[10];
        *(_OWORD *)(v0 + 160) = v38[9];
        *(_OWORD *)(v0 + 176) = v47;
        *(_OWORD *)(v0 + 128) = v45;
        *(_OWORD *)(v0 + 144) = v46;
        sub_23B6F4E8C(v0 + 16);
        sub_23B72093C((void *)(v0 + 1072));
        sub_23B6FC8F4(v0 + 1072, v0 + 1248, (uint64_t *)&unk_254302520);
        sub_23B70C84C((uint64_t *)(v0 + 1248));
        sub_23B6F5744(v0 + 16);
        if (!j)
          break;
        v38 += 11;
      }
      v1 = v116;
LABEL_21:
      swift_bridgeObjectRelease();
    }
  }
LABEL_22:
  swift_endAccess();
  v48 = (_QWORD *)(*(_QWORD *)(v0 + 1616)
                 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing);
  v49 = *(_BYTE *)(v0 + 1478);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v121 = *v48;
  v51 = v121;
  *v48 = 0x8000000000000000;
  v53 = sub_23B6F564C(v49);
  v54 = *(_QWORD *)(v51 + 16);
  v55 = (v52 & 1) == 0;
  result = v54 + v55;
  if (!__OFADD__(v54, v55))
  {
    v57 = v52;
    if (*(_QWORD *)(v51 + 24) >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23B781998();
        v51 = v121;
      }
    }
    else
    {
      v58 = *(_BYTE *)(v0 + 1478);
      sub_23B6EE53C(result, isUniquelyReferenced_nonNull_native);
      v51 = v121;
      v59 = sub_23B6F564C(v58);
      if ((v57 & 1) != (v60 & 1))
        return sub_23B796EF0();
      v53 = v59;
    }
    *v48 = v51;
    swift_bridgeObjectRelease();
    v61 = (_QWORD *)*v48;
    swift_bridgeObjectRetain();
    if ((v57 & 1) == 0)
      sub_23B73BE90(v53, *(_BYTE *)(v0 + 1478), MEMORY[0x24BEE4B08], v61);
    v118 = (FindMyLocate::LocationRequest *)(v0 + 1424);
    v62 = *v1;
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v62 + 16);
    if (v63)
    {
      v117 = v1;
      v64 = (__int128 *)(*v1 + 32);
      for (k = v63 - 1; ; --k)
      {
        v66 = *v64;
        v67 = v64[2];
        *(_OWORD *)(v0 + 384) = v64[1];
        *(_OWORD *)(v0 + 400) = v67;
        *(_OWORD *)(v0 + 368) = v66;
        v68 = v64[3];
        v69 = v64[4];
        v70 = v64[6];
        *(_OWORD *)(v0 + 448) = v64[5];
        *(_OWORD *)(v0 + 464) = v70;
        *(_OWORD *)(v0 + 416) = v68;
        *(_OWORD *)(v0 + 432) = v69;
        v71 = v64[7];
        v72 = v64[8];
        v73 = v64[10];
        *(_OWORD *)(v0 + 512) = v64[9];
        *(_OWORD *)(v0 + 528) = v73;
        *(_OWORD *)(v0 + 480) = v71;
        *(_OWORD *)(v0 + 496) = v72;
        sub_23B6F4E8C(v0 + 368);
        sub_23B6F4F50(&v121, (__int128 *)(v0 + 368));
        v74 = v130;
        *(_OWORD *)(v0 + 1024) = v129;
        *(_OWORD *)(v0 + 1040) = v74;
        *(_OWORD *)(v0 + 1056) = v131;
        v75 = v126;
        *(_OWORD *)(v0 + 960) = v125;
        *(_OWORD *)(v0 + 976) = v75;
        v76 = v128;
        *(_OWORD *)(v0 + 992) = v127;
        *(_OWORD *)(v0 + 1008) = v76;
        v77 = v122;
        *(_OWORD *)(v0 + 896) = v121;
        *(_OWORD *)(v0 + 912) = v77;
        v78 = v124;
        *(_OWORD *)(v0 + 928) = v123;
        *(_OWORD *)(v0 + 944) = v78;
        sub_23B6F5744(v0 + 896);
        if (!k)
          break;
        v64 += 11;
      }
      v1 = v117;
    }
    swift_bridgeObjectRelease();
    v79 = *(_QWORD *)(v0 + 1664);
    v80 = *(_QWORD *)(v0 + 1656);
    v81 = *(_QWORD *)(v0 + 1648);
    v82 = *(_BYTE *)(v0 + 1479);
    v83 = *(_BYTE *)(v0 + 1478);
    v84 = *(_QWORD *)(v0 + 1608);
    swift_endAccess();
    v119 = v83;
    LOBYTE(v121) = v82;
    *((_QWORD *)&v121 + 1) = v81;
    *(_QWORD *)&v122 = v80;
    *((_QWORD *)&v122 + 1) = v79;
    v120 = 3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v85 = &v121;
    v86 = &v120;
    v87 = v84;
    v88 = 1;
    LocationRequest.init(priority:origin:toHandles:reason:startRefreshingLocation:isCached:)(v118, (FindMyLocate::LocatePriority)&v119, *(FindMyLocate::RequestOrigin *)&v85, 0, v89, v90, v114);
    if (v63)
    {
      v91 = (_OWORD *)(*v1 + 32);
      swift_bridgeObjectRetain();
      for (m = v63 - 1; ; --m)
      {
        v94 = v91[1];
        v93 = v91[2];
        *(_OWORD *)(v0 + 720) = *v91;
        *(_OWORD *)(v0 + 736) = v94;
        *(_OWORD *)(v0 + 752) = v93;
        v95 = v91[6];
        v97 = v91[3];
        v96 = v91[4];
        *(_OWORD *)(v0 + 800) = v91[5];
        *(_OWORD *)(v0 + 816) = v95;
        *(_OWORD *)(v0 + 768) = v97;
        *(_OWORD *)(v0 + 784) = v96;
        v98 = v91[10];
        v100 = v91[7];
        v99 = v91[8];
        *(_OWORD *)(v0 + 864) = v91[9];
        *(_OWORD *)(v0 + 880) = v98;
        *(_OWORD *)(v0 + 832) = v100;
        *(_OWORD *)(v0 + 848) = v99;
        v101 = *(_BYTE *)(v0 + 1478);
        v102 = v91[9];
        v129 = v91[8];
        v130 = v102;
        v131 = v91[10];
        v103 = v91[5];
        v125 = v91[4];
        v126 = v103;
        v104 = v91[7];
        v127 = v91[6];
        v128 = v104;
        v105 = v91[1];
        v121 = *v91;
        v122 = v105;
        v106 = v91[3];
        v123 = v91[2];
        v124 = v106;
        sub_23B6F4E8C(v0 + 720);
        sub_23B7242A8(&v121, v101);
        sub_23B6F5744(v0 + 720);
        if (!m)
          break;
        v91 += 11;
      }
      swift_bridgeObjectRelease();
    }
    v107 = *(_QWORD *)(v0 + 1632);
    v108 = *(_QWORD *)(v0 + 1624);
    v109 = *(_QWORD *)(v0 + 1616);
    v110 = sub_23B796B84();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v107, 1, 1, v110);
    v111 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
    v112 = swift_allocObject();
    *(_QWORD *)(v112 + 16) = v109;
    *(_QWORD *)(v112 + 24) = v111;
    *(_QWORD *)(v112 + 32) = v109;
    v113 = *(_OWORD *)(v0 + 1440);
    *(_OWORD *)(v112 + 40) = *(_OWORD *)&v118->toHandles._rawValue;
    *(_OWORD *)(v112 + 56) = v113;
    *(_OWORD *)(v112 + 72) = *(_OWORD *)(v0 + 1456);
    *(_QWORD *)(v112 + 85) = *(_QWORD *)(v0 + 1469);
    *(_QWORD *)(v112 + 96) = v108;
    swift_retain_n();
    sub_23B77520C(v107, (uint64_t)&unk_256A48660, v112);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  __break(1u);
  return result;
}

uint64_t sub_23B7117D0()
{
  uint64_t v0;

  return sub_23B725E2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23B7117DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v17 = (*(unsigned __int8 *)(v9 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = v16;
  *(_QWORD *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a3;
  *(_BYTE *)(v18 + 48) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, v11, v8);
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_23B77520C((uint64_t)v14, (uint64_t)&unk_256A48600, v18);
  return swift_release();
}

uint64_t sub_23B711964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v7 + 24) = a5;
  *(_QWORD *)(v7 + 32) = a7;
  *(_BYTE *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 16) = a4;
  sub_23B7968D8();
  *(_QWORD *)(v7 + 40) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  *(_QWORD *)(v7 + 48) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v7 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B7119F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v10 = *(_BYTE *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  sub_23B796650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v6;
  *(_BYTE *)(v8 + 32) = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v1, v2);
  swift_retain();
  swift_bridgeObjectRetain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B711B28(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  *(_QWORD *)(v4 + 24) = a4;
  *(_BYTE *)(v4 + 48) = a3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v6;
  *v6 = v4;
  v6[1] = sub_23B711B94;
  return sub_23B711C90(a2, (_BYTE *)(v4 + 48));
}

uint64_t sub_23B711B94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B711BF8()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  sub_23B796B60();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B711C3C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  sub_23B796B54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B711C90(uint64_t a1, _BYTE *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v3 + 672) = v2;
  *(_QWORD *)(v3 + 664) = a1;
  *(_QWORD *)(v3 + 680) = *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  *(_QWORD *)(v3 + 688) = v5;
  *(_QWORD *)(v3 + 696) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 704) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  *(_QWORD *)(v3 + 712) = swift_task_alloc();
  *(_QWORD *)(v3 + 720) = swift_task_alloc();
  *(_BYTE *)(v3 + 752) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B711D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unsigned __int8 v18;
  uint64_t v19;
  void (*v20)(_QWORD *);
  __int128 *v22;
  uint64_t i;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t (*v52)();
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;

  v1 = v0 + 544;
  v2 = v0 + 576;
  v3 = (_OWORD *)(v0 + 664);
  v4 = *(_QWORD *)(v0 + 664);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = *(_OWORD *)(v4 + 176);
    v61 = *(_OWORD *)(v4 + 160);
    v62 = v6;
    v63 = *(_OWORD *)(v4 + 192);
    v7 = *(_OWORD *)(v4 + 112);
    v57 = *(_OWORD *)(v4 + 96);
    v58 = v7;
    v8 = *(_OWORD *)(v4 + 144);
    v59 = *(_OWORD *)(v4 + 128);
    v60 = v8;
    v9 = *(_OWORD *)(v4 + 48);
    v53 = *(_OWORD *)(v4 + 32);
    v54 = v9;
    v10 = *(_OWORD *)(v4 + 80);
    v55 = *(_OWORD *)(v4 + 64);
    v56 = v10;
    sub_23B724624(&v53);
    v11 = v5 - 1;
    if (v5 != 1)
    {
      v12 = (__int128 *)(v4 + 208);
      do
      {
        v13 = v12[9];
        v61 = v12[8];
        v62 = v13;
        v63 = v12[10];
        v14 = v12[5];
        v57 = v12[4];
        v58 = v14;
        v15 = v12[7];
        v59 = v12[6];
        v60 = v15;
        v16 = v12[1];
        v53 = *v12;
        v54 = v16;
        v17 = v12[3];
        v55 = v12[2];
        v56 = v17;
        sub_23B724624(&v53);
        v12 += 11;
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
  }
  v18 = *(_BYTE *)(v0 + 752);
  v52 = sub_23B75F964();
  v20 = sub_23B7205C8((_QWORD *)(v0 + 544), v18);
  if (*(_QWORD *)v19)
  {
    if (v5 && *(_QWORD *)(*(_QWORD *)v19 + 16) != 0)
    {
      v22 = (__int128 *)(*(_QWORD *)(v0 + 664) + 32);
      swift_bridgeObjectRetain();
      for (i = v5 - 1; ; --i)
      {
        v24 = *v22;
        v25 = v22[2];
        *(_OWORD *)(v0 + 32) = v22[1];
        *(_OWORD *)(v0 + 48) = v25;
        *(_OWORD *)(v0 + 16) = v24;
        v26 = v22[3];
        v27 = v22[4];
        v28 = v22[6];
        *(_OWORD *)(v0 + 96) = v22[5];
        *(_OWORD *)(v0 + 112) = v28;
        *(_OWORD *)(v0 + 64) = v26;
        *(_OWORD *)(v0 + 80) = v27;
        v29 = v22[7];
        v30 = v22[8];
        v31 = v22[10];
        *(_OWORD *)(v0 + 160) = v22[9];
        *(_OWORD *)(v0 + 176) = v31;
        *(_OWORD *)(v0 + 128) = v29;
        *(_OWORD *)(v0 + 144) = v30;
        sub_23B6F4E8C(v0 + 16);
        sub_23B72093C((void *)(v0 + 192));
        sub_23B6FC8F4(v0 + 192, v0 + 368, (uint64_t *)&unk_254302520);
        sub_23B70C84C((uint64_t *)(v0 + 368));
        sub_23B6F5744(v0 + 16);
        if (!i)
          break;
        v22 += 11;
      }
      v3 = (_OWORD *)(v0 + 664);
      swift_bridgeObjectRelease();
      v1 = v0 + 544;
      v2 = v0 + 576;
    }
  }
  ((void (*)(uint64_t, _QWORD))v20)(v1, 0);
  ((void (*)(uint64_t, _QWORD))v52)(v2, 0);
  if ((sub_23B71F090() & 1) == 0)
  {
    v32 = *(_QWORD *)(v0 + 720);
    v33 = *(_QWORD *)(v0 + 696);
    v34 = *(_QWORD *)(v0 + 688);
    v35 = *(_QWORD *)(v0 + 672) + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
    swift_beginAccess();
    sub_23B6FDE3C(v35, v32, &qword_254302EF0);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v32, 1, v34);
    v37 = *(_QWORD *)(v0 + 720);
    if (v36)
    {
      sub_23B6F7190(*(_QWORD *)(v0 + 720), &qword_254302EF0);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 704);
      v39 = *(_QWORD *)(v0 + 696);
      v40 = *(_QWORD *)(v0 + 688);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 16))(v38, *(_QWORD *)(v0 + 720), v40);
      sub_23B6F7190(v37, &qword_254302EF0);
      sub_23B796B9C();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v41 = *(_QWORD *)(v0 + 712);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 696) + 56))(v41, 1, 1, *(_QWORD *)(v0 + 688));
    swift_beginAccess();
    sub_23B6FBD54(v41, v35);
    swift_endAccess();
    if (qword_254303110 != -1)
      swift_once();
    v42 = sub_23B7969BC();
    __swift_project_value_buffer(v42, (uint64_t)qword_2543090D0);
    v43 = sub_23B7969A4();
    v44 = sub_23B796C38();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      *(_QWORD *)&v53 = v46;
      *(_DWORD *)v45 = 136446210;
      *(_QWORD *)(v0 + 656) = sub_23B6FB388(0xD00000000000002ALL, 0x800000023B7A0320, (uint64_t *)&v53);
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, v43, v44, "%{public}s Clear locationContinuation and empty cached locations since empty handles", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v46, -1, -1);
      MEMORY[0x23B86C754](v45, -1, -1);
    }

  }
  v47 = *(_BYTE *)(v0 + 752);
  v48 = *(_QWORD *)(v0 + 680);
  v49 = swift_task_alloc();
  *(_QWORD *)(v0 + 728) = v49;
  *(_OWORD *)(v49 + 16) = *v3;
  *(_BYTE *)(v49 + 32) = v47;
  *(_QWORD *)(v49 + 40) = v48;
  v50 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 736) = v50;
  *v50 = v0;
  v50[1] = sub_23B71222C;
  return sub_23B796704();
}

uint64_t sub_23B71222C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 744) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7122A0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7122EC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71234C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v12 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = v12;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v7, v4);
  swift_retain_n();
  sub_23B77520C((uint64_t)v10, (uint64_t)&unk_256A485D0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_23B7124B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[2] = a4;
  v5[3] = a5;
  sub_23B7968D8();
  v5[4] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v5[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[6] = v7;
  v5[7] = *(_QWORD *)(v7 + 64);
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B712544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 16);
  sub_23B796650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v1, v2);
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71265C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v2 + 24) = a2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_23B7126A8;
  return sub_23B71270C();
}

uint64_t sub_23B7126A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B71270C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1[13] = v0;
  v1[14] = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v1[15] = v2;
  v1[16] = *(_QWORD *)(v2 - 8);
  v1[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B7127AC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v21;
  uint64_t v22;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  v0[20] = __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v22 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[12] = sub_23B6FB388(0xD000000000000019, 0x800000023B7A02D0, &v22);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s for all", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = v0[19];
  v7 = v0[15];
  v8 = v0[16];
  v9 = v0[13] + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v9, v6, &qword_254302EF0);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  v11 = v0[19];
  if (v10)
  {
    sub_23B6F7190(v0[19], &qword_254302EF0);
  }
  else
  {
    v13 = v0[16];
    v12 = v0[17];
    v14 = v0[15];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16))(v12, v0[19], v14);
    sub_23B6F7190(v11, &qword_254302EF0);
    sub_23B796B9C();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v15 = v0[18];
  v21 = *(_OWORD *)(v0 + 13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[16] + 56))(v15, 1, 1, v0[15]);
  swift_beginAccess();
  sub_23B6FBD54(v15, v9);
  swift_endAccess();
  v16 = sub_23B72D958(MEMORY[0x24BEE4AF8]);
  v17 = (unint64_t *)(v21
                           + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing);
  swift_beginAccess();
  *v17 = v16;
  swift_bridgeObjectRelease();
  v18 = swift_task_alloc();
  v0[21] = v18;
  *(_OWORD *)(v18 + 16) = v21;
  v19 = (_QWORD *)swift_task_alloc();
  v0[22] = v19;
  *v19 = v0;
  v19[1] = sub_23B712AF8;
  return sub_23B796704();
}

uint64_t sub_23B712AF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B712B6C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_23B7969A4();
  v2 = sub_23B796C38();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B6EB000, v1, v2, "Clear locationContinuation and empty cached locations for all handles", v3, 2u);
    MEMORY[0x23B86C754](v3, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B712C30()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 184);
  swift_task_dealloc();
  v2 = v1;
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 184);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v10;
    sub_23B796C68();
    *v8 = v10;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Stop refreshing all locations failed with error: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 184);

  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B712DD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9, unsigned __int8 a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;

  v33 = a8;
  v32 = a5;
  v30 = a4;
  v31 = a10;
  v28 = a3;
  v29 = a9;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v22 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v23 = (*(unsigned __int8 *)(v15 + 80) + 83) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = v22;
  *(_QWORD *)(v24 + 32) = a2;
  *(_BYTE *)(v24 + 40) = v28;
  v25 = v32;
  *(_QWORD *)(v24 + 48) = v30;
  *(_QWORD *)(v24 + 56) = v25;
  *(_QWORD *)(v24 + 64) = a6;
  *(_QWORD *)(v24 + 72) = a7;
  *(_BYTE *)(v24 + 80) = v33;
  *(_BYTE *)(v24 + 81) = v29;
  *(_BYTE *)(v24 + 82) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v24 + v23, v17, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_23B77520C((uint64_t)v20, (uint64_t)&unk_256A48510, v24);
  return swift_release();
}

uint64_t sub_23B712FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  __int16 v14;
  uint64_t v15;

  *(_WORD *)(v8 + 106) = v14;
  *(_BYTE *)(v8 + 105) = v13;
  *(_QWORD *)(v8 + 48) = v12;
  *(_QWORD *)(v8 + 56) = v15;
  *(_QWORD *)(v8 + 32) = a7;
  *(_QWORD *)(v8 + 40) = a8;
  *(_BYTE *)(v8 + 104) = a5;
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a6;
  sub_23B7968D8();
  *(_QWORD *)(v8 + 64) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  *(_QWORD *)(v8 + 72) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B71306C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v15 = *(_BYTE *)(v0 + 106);
  v16 = *(_BYTE *)(v0 + 107);
  v14 = *(_BYTE *)(v0 + 105);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 32);
  v7 = *(_BYTE *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 24);
  sub_23B796650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 67) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_BYTE *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v13;
  *(_QWORD *)(v10 + 48) = v6;
  *(_QWORD *)(v10 + 56) = v5;
  *(_BYTE *)(v10 + 64) = v14;
  *(_BYTE *)(v10 + 65) = v15;
  *(_BYTE *)(v10 + 66) = v16;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v10 + v9, v1, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7131F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  _QWORD *v11;
  char v13;
  uint64_t v14;

  *(_BYTE *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = a4;
  *(_BYTE *)(v8 + 96) = a7;
  *(_QWORD *)(v8 + 40) = a5;
  *(_BYTE *)(v8 + 97) = v13;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 72) = v11;
  *v11 = v8;
  v11[1] = sub_23B7132A0;
  return sub_23B7133BC(v8 + 16, a6, (_BYTE *)(v8 + 96), a8, (_BYTE *)(v8 + 97));
}

uint64_t sub_23B7132A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_23B713314()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  sub_23B796B60();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B713368()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  sub_23B796B54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7133BC(uint64_t a1, uint64_t a2, _BYTE *a3, char a4, _BYTE *a5)
{
  _QWORD *v5;
  uint64_t v6;

  *(_BYTE *)(v6 + 69) = a4;
  *(_QWORD *)(v6 + 104) = a2;
  *(_QWORD *)(v6 + 112) = v5;
  *(_QWORD *)(v6 + 120) = *v5;
  *(_BYTE *)(v6 + 70) = *(_BYTE *)a1;
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v6 + 144) = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(v6 + 71) = *a3;
  *(_BYTE *)(v6 + 184) = *a5;
  return swift_task_switch();
}

uint64_t sub_23B713408()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  Swift::OpaquePointer v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  FindMyLocate::LegacyRefreshCommandReason_optional v19;
  Swift::Bool v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char v30;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v4 = 136446723;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000041, 0x800000023B7A0070, &v27);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2160;
    *(_QWORD *)(v0 + 88) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v4 + 22) = 2081;
    v5 = swift_bridgeObjectRetain();
    v6 = MEMORY[0x23B86BE78](v5, &type metadata for Handle);
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 96) = sub_23B6FB388(v6, v8, &v27);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s for handles: %{private,mask.hash}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v25, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(_BYTE *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 144);
  v11 = *(_BYTE *)(v0 + 70);
  v12 = *(_QWORD *)(v0 + 120);
  v13._rawValue = (void *)*(unsigned __int8 *)(v0 + 69);
  v14 = *(_QWORD *)(v0 + 104);
  v26 = *(_BYTE *)(v0 + 71);
  LOBYTE(v27) = v11;
  v28 = *(_OWORD *)(v0 + 128);
  v29 = v10;
  v30 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = &v27;
  v16 = &v30;
  v17 = v14;
  v18 = 0;
  LocationRequest.init(priority:origin:toHandles:reason:startRefreshingLocation:isCached:)((FindMyLocate::LocationRequest *)(v0 + 16), (FindMyLocate::LocatePriority)&v26, *(FindMyLocate::RequestOrigin *)&v15, v13, v19, v20, v25);
  v21 = swift_allocObject();
  *(_QWORD *)(v0 + 152) = v21;
  swift_weakInit();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v22;
  v22[2] = v21;
  v22[3] = v0 + 16;
  v22[4] = v12;
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v23 = v0;
  v23[1] = sub_23B713754;
  return sub_23B796704();
}

uint64_t sub_23B713754()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23B7137D0()
{
  uint64_t v0;

  sub_23B6F16F0(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_23B713808()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  sub_23B6F16F0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B713850(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v23 = a4;
  v24 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v18 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v19 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = v18;
  *(_QWORD *)(v20 + 32) = a2;
  *(_BYTE *)(v20 + 40) = a3;
  v21 = v24;
  *(_QWORD *)(v20 + 48) = v23;
  *(_QWORD *)(v20 + 56) = v21;
  *(_QWORD *)(v20 + 64) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v20 + v19, v13, v10);
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_23B77520C((uint64_t)v16, (uint64_t)&unk_256A484E0, v20);
  return swift_release();
}

uint64_t sub_23B7139F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v8 + 40) = a8;
  *(_QWORD *)(v8 + 48) = v12;
  *(_QWORD *)(v8 + 24) = a6;
  *(_QWORD *)(v8 + 32) = a7;
  *(_BYTE *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 16) = a4;
  sub_23B7968D8();
  *(_QWORD *)(v8 + 56) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  *(_QWORD *)(v8 + 64) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 72) = v10;
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B713A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_BYTE *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 32);
  sub_23B796650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  v8 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  *(_BYTE *)(v9 + 24) = v6;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 48) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v1, v2);
  swift_bridgeObjectRetain();
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B713BD8(_QWORD *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;

  *(_QWORD *)(v6 + 56) = a6;
  *(_BYTE *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 40) = a5;
  v8 = swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)v8 = v6;
  *(_QWORD *)(v8 + 8) = sub_23B713C68;
  *(_QWORD *)(v8 + 152) = a1;
  *(_QWORD *)(v8 + 160) = *a1;
  *(_BYTE *)(v8 + 69) = *(_BYTE *)(v6 + 16);
  *(_OWORD *)(v8 + 168) = *(_OWORD *)(v6 + 24);
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v6 + 40);
  return swift_task_switch();
}

uint64_t sub_23B713C68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B713CCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = v1;
  *(_QWORD *)(v2 + 160) = *v1;
  *(_BYTE *)(v2 + 69) = *(_BYTE *)a1;
  *(_OWORD *)(v2 + 168) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v2 + 184) = *(_QWORD *)(a1 + 24);
  return swift_task_switch();
}

uint64_t sub_23B713D04()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  _QWORD *v28;
  uint64_t result;
  unint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  uint64_t v45;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  *(_QWORD *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v45 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_QWORD *)(v0 + 144) = sub_23B6FB388(0xD000000000000021, 0x800000023B7A0040, &v45);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  if ((sub_23B71F090() & 1) == 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v6 = (uint64_t *)(*(_QWORD *)(v0 + 152)
                 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing);
  swift_beginAccess();
  v7 = *v6;
  *(_QWORD *)(v0 + 200) = *v6;
  v8 = *(_BYTE *)(v7 + 32);
  *(_BYTE *)(v0 + 70) = v8;
  v9 = -1;
  v10 = -1 << v8;
  if (-(-1 << v8) < 64)
    v9 = ~(-1 << -(char)v10);
  v11 = v9 & *(_QWORD *)(v7 + 64);
  v12 = (_QWORD *)swift_bridgeObjectRetain();
  if (v11)
  {
    v13 = 0;
    v14 = __clz(__rbit64(v11));
    v15 = (v11 - 1) & v11;
    goto LABEL_10;
  }
  v30 = 63 - v10;
  if ((unint64_t)(63 - v10) <= 0x7F)
  {
LABEL_40:
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v31 = v12[9];
  if (!v31)
  {
    if (v30 >= 0xC0)
    {
      v31 = v12[10];
      if (v31)
      {
        v13 = 2;
        goto LABEL_19;
      }
      if (v30 >= 0x100)
      {
        v31 = v12[11];
        if (v31)
        {
          v13 = 3;
          goto LABEL_19;
        }
        if (v30 >= 0x140)
        {
          v31 = v12[12];
          if (v31)
          {
            v13 = 4;
            goto LABEL_19;
          }
          v40 = 0;
          v41 = v30 >> 6;
          if (v41 <= 5)
            v41 = 5;
          v42 = v41 - 5;
          while (v42 != v40)
          {
            v31 = v12[v40++ + 13];
            if (v31)
            {
              v13 = v40 + 4;
              goto LABEL_19;
            }
          }
        }
      }
    }
    goto LABEL_40;
  }
  v13 = 1;
LABEL_19:
  v15 = (v31 - 1) & v31;
  v14 = __clz(__rbit64(v31)) + (v13 << 6);
LABEL_10:
  *(_QWORD *)(v0 + 208) = v13;
  *(_QWORD *)(v0 + 216) = v15;
  v16 = *(unsigned __int8 *)(v12[6] + v14);
  v17 = *(_QWORD *)(v12[7] + 8 * v14);
  swift_bridgeObjectRetain_n();
  v18 = sub_23B7969A4();
  v19 = sub_23B796C38();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v45 = v21;
    *(_DWORD *)v20 = 136315394;
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v22 = sub_23B796BF0();
    v24 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v20 + 4) = sub_23B6FB388(v22, v24, &v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2048;
    *(_QWORD *)(v20 + 14) = v16;
    _os_log_impl(&dword_23B6EB000, v18, v19, "Retry refreshing locations for: %s. Priority %ld", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v21, -1, -1);
    MEMORY[0x23B86C754](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v25 = *(_QWORD *)(v17 + 16);
  v44 = v16;
  if (v25)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543025F8);
    v26 = swift_allocObject();
    v27 = _swift_stdlib_malloc_size((const void *)v26);
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = 2 * ((uint64_t)(v27 - 32) / 176);
    v28 = sub_23B722B34((_QWORD *)(v0 + 72), (char *)(v26 + 32), v25, v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23B723160();
    if (v28 != (_QWORD *)v25)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 224) = v26;
  if ((_DWORD)v16 == 2)
  {
    v32 = sub_23B796ECC();
    v33 = 2;
  }
  else
  {
    v33 = 1;
    v32 = 1;
  }
  v34 = *(_QWORD *)(v0 + 184);
  v43 = *(_OWORD *)(v0 + 168);
  v35 = *(_BYTE *)(v0 + 69);
  v36 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v26;
  *(_BYTE *)(v0 + 24) = v44;
  *(_BYTE *)(v0 + 32) = v35;
  *(_OWORD *)(v0 + 40) = v43;
  *(_QWORD *)(v0 + 56) = v34;
  *(_BYTE *)(v0 + 64) = v32 & 1;
  *(_BYTE *)(v0 + 65) = v33;
  *(_WORD *)(v0 + 66) = 259;
  *(_BYTE *)(v0 + 68) = 0;
  v37 = swift_allocObject();
  *(_QWORD *)(v0 + 232) = v37;
  swift_weakInit();
  v38 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v38;
  v38[2] = v37;
  v38[3] = v0 + 16;
  v38[4] = v36;
  v39 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v39 = v0;
  v39[1] = sub_23B71437C;
  return sub_23B796704();
}

uint64_t sub_23B71437C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23B7143F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  _QWORD *v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int64_t v32;
  __int128 v33;
  uint64_t v34;

  v1 = v0 + 136;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  if (v4)
  {
    v5 = (v4 - 1) & v4;
    v6 = __clz(__rbit64(v4)) | (v3 << 6);
    result = *(_QWORD *)(v0 + 200);
    goto LABEL_3;
  }
  v20 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  v21 = (unint64_t)((1 << *(_BYTE *)(v0 + 70)) + 63) >> 6;
  result = *(_QWORD *)(v0 + 200);
  if (v20 >= v21)
    goto LABEL_28;
  v22 = result + 64;
  v23 = *(_QWORD *)(result + 64 + 8 * v20);
  ++v3;
  if (!v23)
  {
    v3 = v20 + 1;
    if (v20 + 1 < v21)
    {
      v23 = *(_QWORD *)(v22 + 8 * v3);
      if (v23)
        goto LABEL_12;
      v3 = v20 + 2;
      if (v20 + 2 < v21)
      {
        v23 = *(_QWORD *)(v22 + 8 * v3);
        if (v23)
          goto LABEL_12;
        v32 = v20 + 3;
        if (v32 < v21)
        {
          v23 = *(_QWORD *)(v22 + 8 * v32);
          if (!v23)
          {
            while (1)
            {
              v3 = v32 + 1;
              if (__OFADD__(v32, 1))
                goto LABEL_31;
              if (v3 >= v21)
                goto LABEL_28;
              v23 = *(_QWORD *)(v22 + 8 * v3);
              ++v32;
              if (v23)
                goto LABEL_12;
            }
          }
          v3 = v32;
          goto LABEL_12;
        }
      }
    }
LABEL_28:
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_12:
  v5 = (v23 - 1) & v23;
  v6 = __clz(__rbit64(v23)) + (v3 << 6);
LABEL_3:
  *(_QWORD *)(v0 + 208) = v3;
  *(_QWORD *)(v0 + 216) = v5;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(result + 48) + v6);
  v8 = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * v6);
  swift_bridgeObjectRetain_n();
  v9 = sub_23B7969A4();
  v10 = sub_23B796C38();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v34 = v12;
    *(_DWORD *)v11 = 136315394;
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v13 = sub_23B796BF0();
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 4) = sub_23B6FB388(v13, v15, &v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2048;
    *(_QWORD *)(v11 + 14) = v7;
    _os_log_impl(&dword_23B6EB000, v9, v10, "Retry refreshing locations for: %s. Priority %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v12, -1, -1);
    MEMORY[0x23B86C754](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v16 = *(_QWORD *)(v8 + 16);
  if (!v16)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025F8);
  v17 = swift_allocObject();
  v18 = _swift_stdlib_malloc_size((const void *)v17);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = 2 * ((uint64_t)(v18 - 32) / 176);
  v19 = sub_23B722B34((_QWORD *)(v0 + 72), (char *)(v17 + 32), v16, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_23B723160();
  if (v19 != (_QWORD *)v16)
  {
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  v1 = v0 + 136;
LABEL_14:
  *(_QWORD *)(v0 + 224) = v17;
  if ((_DWORD)v7 == 2)
  {
    v24 = sub_23B796ECC();
    v25 = 2;
  }
  else
  {
    v25 = 1;
    v24 = 1;
  }
  v26 = *(_QWORD *)(v0 + 184);
  v33 = *(_OWORD *)(v0 + 168);
  v27 = *(_BYTE *)(v0 + 69);
  v28 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v17;
  *(_BYTE *)(v0 + 24) = v7;
  *(_BYTE *)(v0 + 32) = v27;
  *(_OWORD *)(v0 + 40) = v33;
  *(_QWORD *)(v0 + 56) = v26;
  *(_BYTE *)(v0 + 64) = v24 & 1;
  *(_BYTE *)(v0 + 65) = v25;
  *(_WORD *)(v0 + 66) = 259;
  *(_BYTE *)(v0 + 68) = 0;
  v29 = swift_allocObject();
  *(_QWORD *)(v0 + 232) = v29;
  swift_weakInit();
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v30;
  v30[2] = v29;
  v30[3] = v1 - 120;
  v30[4] = v28;
  v31 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v31 = v0;
  v31[1] = sub_23B71437C;
  return sub_23B796704();
}

uint64_t sub_23B7148F8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B714960()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = v0;
  return swift_task_switch();
}

uint64_t sub_23B714978()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[12] = sub_23B6FB388(0xD00000000000002FLL, 0x800000023B7A0220, &v8);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[15] = v6;
  *v6 = v0;
  v6[1] = sub_23B714B14;
  return sub_23B757A4C();
}

uint64_t sub_23B714B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_23B714B88()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  int v21;
  int v22;
  char v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;

  swift_bridgeObjectRetain_n();
  v1 = sub_23B7969A4();
  v2 = sub_23B796C38();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v0[10] = 1752392040;
    v51 = v48;
    *(_DWORD *)v3 = 141558275;
    sub_23B796C68();
    *(_WORD *)(v3 + 12) = 2081;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v4 = sub_23B7969D4();
    v6 = v5;
    swift_bridgeObjectRelease();
    v0[11] = sub_23B6FB388(v4, v6, &v51);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v1, v2, "Received background proactive locations: %{private,mask.hash}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v48, -1, -1);
    MEMORY[0x23B86C754](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v7 = (uint64_t *)(v0[13] + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_23B6F564C(3u), (v10 & 1) != 0))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = MEMORY[0x24BEE4B08];
  }
  v12 = v0[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_23B724BE4(v12, v11);
  v0[18] = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain_n();
  swift_bridgeObjectRetain();
  v14 = sub_23B7969A4();
  v15 = sub_23B796C38();
  if (!os_log_type_enabled(v14, v15))
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
LABEL_21:

    v39 = v0[16];
    v40 = (_QWORD *)(v0[13] + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationForHandles);
    swift_beginAccess();
    *v40 = v39;
    swift_bridgeObjectRelease();
    v41 = (_QWORD *)swift_task_alloc();
    v0[19] = v41;
    *v41 = v0;
    v41[1] = sub_23B71516C;
    return sub_23B715648(v13);
  }
  v47 = v15;
  v16 = swift_slowAlloc();
  v46 = swift_slowAlloc();
  v50 = v46;
  *(_DWORD *)v16 = 136315394;
  v17 = *(_QWORD *)(v11 + 16);
  v18 = MEMORY[0x24BEE4AF8];
  if (!v17)
  {
LABEL_20:
    v33 = MEMORY[0x23B86BE78](v18, MEMORY[0x24BEE0D00]);
    v35 = v34;
    swift_bridgeObjectRelease();
    v0[8] = sub_23B6FB388(v33, v35, &v50);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_retain();
    v36 = sub_23B7969D4();
    v38 = v37;
    swift_release();
    v0[9] = sub_23B6FB388(v36, v38, &v50);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B6EB000, v14, v47, "backgroundProactiveHandles: %s. locationsOfInterest: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v46, -1, -1);
    MEMORY[0x23B86C754](v16, -1, -1);
    goto LABEL_21;
  }
  v42 = v16;
  v43 = v14;
  v44 = v13;
  v45 = v0;
  v51 = MEMORY[0x24BEE4AF8];
  sub_23B6F3FB8(0, v17, 0);
  v18 = v51;
  result = sub_23B722D74(v11);
  v20 = result;
  v22 = v21;
  v24 = v23 & 1;
  while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << *(_BYTE *)(v11 + 32))
  {
    if (((*(_QWORD *)(v11 + 56 + (((unint64_t)v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v11 + 36) != v22)
      goto LABEL_24;
    v49 = v24;
    v25 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 176 * v20);
    v27 = *v25;
    v26 = v25[1];
    v51 = v18;
    v28 = *(_QWORD *)(v18 + 16);
    v29 = *(_QWORD *)(v18 + 24);
    swift_bridgeObjectRetain();
    if (v28 >= v29 >> 1)
    {
      sub_23B6F3FB8(v29 > 1, v28 + 1, 1);
      v18 = v51;
    }
    *(_QWORD *)(v18 + 16) = v28 + 1;
    v30 = v18 + 16 * v28;
    *(_QWORD *)(v30 + 32) = v27;
    *(_QWORD *)(v30 + 40) = v26;
    result = sub_23B722E14(v20, v22, v49 & 1, v11);
    v20 = result;
    v22 = v31;
    v24 = v32 & 1;
    if (!--v17)
    {
      sub_23B7251D8(result, v31, v24);
      v13 = v44;
      v0 = v45;
      v16 = v42;
      v14 = v43;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_23B71516C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7151D0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B715204()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B715238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char v21;
  uint64_t v23;
  unint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _OWORD v39[11];
  _OWORD v40[12];

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23B796F44();
    sub_23B796A58();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    v3 = sub_23B796F74();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = (_OWORD *)(*(_QWORD *)(a2 + 48) + 176 * v5);
      v9 = v7[1];
      v8 = v7[2];
      v40[0] = *v7;
      v40[1] = v9;
      v40[2] = v8;
      v10 = v7[6];
      v12 = v7[3];
      v11 = v7[4];
      v40[5] = v7[5];
      v40[6] = v10;
      v40[3] = v12;
      v40[4] = v11;
      v13 = v7[10];
      v15 = v7[7];
      v14 = v7[8];
      v40[9] = v7[9];
      v40[10] = v13;
      v40[7] = v15;
      v40[8] = v14;
      v16 = sub_23B796A58();
      v18 = v17;
      if (v16 == sub_23B796A58() && v18 == v19)
      {
        sub_23B6F4E8C((uint64_t)v40);
        swift_bridgeObjectRelease_n();
        v20 = v40;
LABEL_6:
        sub_23B6F5744((uint64_t)v20);
        return 1;
      }
      v21 = sub_23B796ECC();
      sub_23B6F4E8C((uint64_t)v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B6F5744((uint64_t)v40);
      if ((v21 & 1) != 0)
        return 1;
      v23 = ~v4;
      v24 = (v5 + 1) & v23;
      if (((*(_QWORD *)(v6 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
      {
        while (1)
        {
          v25 = (_OWORD *)(*(_QWORD *)(a2 + 48) + 176 * v24);
          v27 = v25[1];
          v26 = v25[2];
          v39[0] = *v25;
          v39[1] = v27;
          v39[2] = v26;
          v28 = v25[6];
          v30 = v25[3];
          v29 = v25[4];
          v39[5] = v25[5];
          v39[6] = v28;
          v39[3] = v30;
          v39[4] = v29;
          v31 = v25[10];
          v33 = v25[7];
          v32 = v25[8];
          v39[9] = v25[9];
          v39[10] = v31;
          v39[7] = v33;
          v39[8] = v32;
          v34 = sub_23B796A58();
          v36 = v35;
          if (v34 == sub_23B796A58() && v36 == v37)
            break;
          v38 = sub_23B796ECC();
          sub_23B6F4E8C((uint64_t)v39);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23B6F5744((uint64_t)v39);
          if ((v38 & 1) != 0)
            return 1;
          v24 = (v24 + 1) & v23;
          if (((*(_QWORD *)(v6 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
            return 0;
        }
        sub_23B6F4E8C((uint64_t)v39);
        swift_bridgeObjectRelease_n();
        v20 = v39;
        goto LABEL_6;
      }
    }
  }
  return 0;
}

uint64_t sub_23B7154D0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v19 = MEMORY[0x24BEE4AF8];
  sub_23B6F3FB8(0, v1, 0);
  v2 = v19;
  result = sub_23B722D74(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != v7)
      goto LABEL_14;
    v18 = v9;
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 176 * v5);
    v11 = *v10;
    v12 = v10[1];
    v14 = *(_QWORD *)(v19 + 16);
    v13 = *(_QWORD *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      sub_23B6F3FB8(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v19 + 16) = v14 + 1;
    v15 = v19 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v12;
    result = sub_23B722E14(v5, v7, v18 & 1, a1);
    v5 = result;
    v7 = v16;
    v9 = v17 & 1;
    if (!--v1)
    {
      sub_23B7251D8(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_23B715648(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[70] = v1;
  v2[69] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  v2[71] = swift_task_alloc();
  v3 = sub_23B7968D8();
  v2[72] = v3;
  v2[73] = *(_QWORD *)(v3 - 8);
  v2[74] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  v2[75] = swift_task_alloc();
  v4 = type metadata accessor for Location();
  v2[76] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[77] = v5;
  v2[78] = *(_QWORD *)(v5 + 64);
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  v2[81] = swift_task_alloc();
  v2[82] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302588);
  v2[83] = swift_task_alloc();
  v2[84] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B71577C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t (*v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t *v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _OWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  char v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  _QWORD *v97;
  _OWORD *v98;
  int64_t v99;
  uint64_t v100;
  _OWORD v101[12];

  if (qword_254303110 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v1 = (uint64_t *)(v0 + 552);
    v2 = sub_23B7969BC();
    *(_QWORD *)(v0 + 680) = __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
    swift_bridgeObjectRetain_n();
    v3 = sub_23B7969A4();
    v4 = sub_23B796C38();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      *(_QWORD *)&v101[0] = v6;
      *(_DWORD *)v5 = 136446723;
      *(_QWORD *)(v0 + 536) = sub_23B6FB388(0xD000000000000017, 0x800000023B7A00C0, (uint64_t *)v101);
      sub_23B796C68();
      *(_WORD *)(v5 + 12) = 2160;
      *(_QWORD *)(v0 + 544) = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v5 + 22) = 2081;
      sub_23B72318C();
      swift_bridgeObjectRetain();
      v7 = sub_23B7969D4();
      v9 = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 512) = sub_23B6FB388(v7, v9, (uint64_t *)v101);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23B6EB000, v3, v4, "%{public}s with locations: %{private,mask.hash}s", (uint8_t *)v5, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v6, -1, -1);
      v10 = v5;
      v1 = (uint64_t *)(v0 + 552);
      MEMORY[0x23B86C754](v10, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v11 = (_OWORD *)(v0 + 16);
    v98 = (_OWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 552);
    swift_beginAccess();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_23B71A300(v13);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 688) = sub_23B724D98(v14);
    swift_bridgeObjectRelease();
    v15 = *(_BYTE *)(v12 + 32);
    *(_BYTE *)(v0 + 756) = v15;
    v16 = 1 << v15;
    v17 = v16 < 64 ? ~(-1 << v16) : -1;
    v18 = v17 & *(_QWORD *)(v12 + 64);
    *(_QWORD *)(v0 + 696) = OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationForHandles;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v19 = 0;
    v20 = &qword_254302580;
    v21 = type metadata accessor for Location;
    if (v18)
      break;
LABEL_13:
    v28 = v19 + 1;
    if (!__OFADD__(v19, 1))
    {
      v45 = (unint64_t)((1 << *(_BYTE *)(v0 + 756)) + 63) >> 6;
      if (v28 >= v45)
      {
        v48 = v19;
      }
      else
      {
        v30 = *v1;
        v46 = *v1 + 64;
        v47 = *(_QWORD *)(v46 + 8 * v28);
        if (v47)
          goto LABEL_16;
        v48 = v19 + 1;
        if (v19 + 2 < v45)
        {
          v47 = *(_QWORD *)(v46 + 8 * (v19 + 2));
          if (v47)
          {
            v28 = v19 + 2;
            goto LABEL_16;
          }
          v48 = v19 + 2;
          if (v19 + 3 < v45)
          {
            v47 = *(_QWORD *)(v46 + 8 * (v19 + 3));
            if (v47)
            {
              v28 = v19 + 3;
              goto LABEL_16;
            }
            v28 = v19 + 4;
            v48 = v19 + 3;
            if (v19 + 4 < v45)
            {
              v47 = *(_QWORD *)(v46 + 8 * v28);
              if (!v47)
              {
                v48 = v45 - 1;
                v86 = v45 - 5;
                do
                {
                  if (v86 == v19)
                    goto LABEL_18;
                  v47 = *(_QWORD *)(v30 + 104 + 8 * v19++);
                }
                while (!v47);
                v28 = v19 + 4;
              }
LABEL_16:
              v25 = v21;
              v26 = v20;
              v100 = (v47 - 1) & v47;
              v29 = __clz(__rbit64(v47)) + (v28 << 6);
              goto LABEL_12;
            }
          }
        }
      }
LABEL_18:
      v49 = *(_QWORD *)(v0 + 664);
      v50 = __swift_instantiateConcreteTypeFromMangledName(v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 1, 1, v50);
      v18 = 0;
      v44 = v48;
      goto LABEL_19;
    }
    __break(1u);
  }
  while (1)
  {
    v25 = v21;
    v26 = v20;
    v27 = __clz(__rbit64(v18));
    v100 = (v18 - 1) & v18;
    v28 = v19;
    v29 = v27 | (v19 << 6);
    v30 = *v1;
LABEL_12:
    v31 = *(void **)(v0 + 664);
    v32 = *(_QWORD *)(v0 + 616);
    v33 = (_OWORD *)(*(_QWORD *)(v30 + 48) + 176 * v29);
    v35 = v33[1];
    v34 = v33[2];
    *v98 = *v33;
    *(_OWORD *)(v0 + 208) = v35;
    *(_OWORD *)(v0 + 224) = v34;
    v36 = v33[6];
    v38 = v33[3];
    v37 = v33[4];
    *(_OWORD *)(v0 + 272) = v33[5];
    *(_OWORD *)(v0 + 288) = v36;
    *(_OWORD *)(v0 + 240) = v38;
    *(_OWORD *)(v0 + 256) = v37;
    v39 = v33[10];
    v41 = v33[7];
    v40 = v33[8];
    *(_OWORD *)(v0 + 336) = v33[9];
    *(_OWORD *)(v0 + 352) = v39;
    *(_OWORD *)(v0 + 304) = v41;
    *(_OWORD *)(v0 + 320) = v40;
    memmove(v31, v33, 0xB0uLL);
    v42 = *(_QWORD *)(v30 + 56) + *(_QWORD *)(v32 + 72) * v29;
    v20 = v26;
    v43 = __swift_instantiateConcreteTypeFromMangledName(v26);
    v21 = v25;
    sub_23B725660(v42, (uint64_t)v31 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v31, 0, 1, v43);
    sub_23B6F4E8C((uint64_t)v98);
    v44 = v28;
    v18 = v100;
LABEL_19:
    *(_QWORD *)(v0 + 712) = v18;
    *(_QWORD *)(v0 + 704) = v44;
    v51 = *(_QWORD *)(v0 + 672);
    sub_23B6FC8F4(*(_QWORD *)(v0 + 664), v51, &qword_254302588);
    v52 = __swift_instantiateConcreteTypeFromMangledName(v20);
    v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v51, 1, v52);
    v54 = *(_OWORD **)(v0 + 672);
    if (v53 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v55 = v20;
    v56 = *(_QWORD *)(v0 + 696);
    v57 = *(_QWORD *)(v0 + 656);
    v58 = *(_QWORD *)(v0 + 560);
    v60 = v54[1];
    v59 = v54[2];
    *v11 = *v54;
    *(_OWORD *)(v0 + 32) = v60;
    *(_OWORD *)(v0 + 48) = v59;
    v61 = v54[6];
    v63 = v54[3];
    v62 = v54[4];
    *(_OWORD *)(v0 + 96) = v54[5];
    *(_OWORD *)(v0 + 112) = v61;
    *(_OWORD *)(v0 + 64) = v63;
    *(_OWORD *)(v0 + 80) = v62;
    v64 = v54[10];
    v66 = v54[7];
    v65 = v54[8];
    *(_OWORD *)(v0 + 160) = v54[9];
    *(_OWORD *)(v0 + 176) = v64;
    *(_OWORD *)(v0 + 128) = v66;
    *(_OWORD *)(v0 + 144) = v65;
    sub_23B6FF360((uint64_t)v54 + *(int *)(v52 + 48), v57, (uint64_t (*)(_QWORD))v21);
    v67 = *(_QWORD *)(v58 + v56);
    if (*(_QWORD *)(v67 + 16))
    {
      sub_23B6F4E8C(v0 + 16);
      swift_bridgeObjectRetain();
      v68 = sub_23B780558(v0 + 16);
      v69 = *(_QWORD *)(v0 + 616);
      v70 = *(_QWORD *)(v0 + 608);
      v71 = *(_QWORD *)(v0 + 600);
      if ((v72 & 1) != 0)
      {
        sub_23B725660(*(_QWORD *)(v67 + 56) + *(_QWORD *)(v69 + 72) * v68, *(_QWORD *)(v0 + 600), (uint64_t (*)(_QWORD))v21);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v71, 0, 1, v70);
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v69 + 56))(*(_QWORD *)(v0 + 600), 1, 1, v70);
      }
      swift_bridgeObjectRelease();
      sub_23B6F5744(v0 + 16);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 616) + 56))(*(_QWORD *)(v0 + 600), 1, 1, *(_QWORD *)(v0 + 608));
    }
    v73 = *(_QWORD *)(v0 + 656);
    v74 = *(_OWORD *)(v0 + 160);
    v101[8] = *(_OWORD *)(v0 + 144);
    v101[9] = v74;
    v101[10] = *(_OWORD *)(v0 + 176);
    v75 = *(_OWORD *)(v0 + 96);
    v101[4] = *(_OWORD *)(v0 + 80);
    v101[5] = v75;
    v76 = *(_OWORD *)(v0 + 128);
    v101[6] = *(_OWORD *)(v0 + 112);
    v101[7] = v76;
    v77 = *(_OWORD *)(v0 + 32);
    v101[0] = *v11;
    v101[1] = v77;
    v78 = *(_OWORD *)(v0 + 64);
    v101[2] = *(_OWORD *)(v0 + 48);
    v101[3] = v78;
    sub_23B71A46C((uint64_t *)v101, v73);
    v79 = *(_QWORD *)(v0 + 656);
    if ((v80 & 1) != 0)
      break;
    v99 = v44;
    sub_23B725660(v79, *(_QWORD *)(v0 + 632), (uint64_t (*)(_QWORD))v21);
    sub_23B6F4E8C(v0 + 16);
    v81 = sub_23B7969A4();
    v82 = sub_23B796C38();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = *(_QWORD *)(v0 + 632);
      v84 = *(_QWORD *)(v0 + 608);
      v85 = swift_slowAlloc();
      *(_QWORD *)(v0 + 496) = swift_slowAlloc();
      *(_DWORD *)v85 = 136446979;
      *(_QWORD *)(v85 + 4) = sub_23B6FB388(0xD000000000000017, 0x800000023B7A00C0, (uint64_t *)(v0 + 496));
      *(_WORD *)(v85 + 12) = 2082;
      __asm { BR              X9 }
    }
    v22 = *(_QWORD *)(v0 + 656);
    v23 = *(_QWORD *)(v0 + 632);
    v24 = *(_QWORD *)(v0 + 600);

    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);
    sub_23B700B04(v23, (uint64_t (*)(_QWORD))v21);
    sub_23B6F7190(v24, (uint64_t *)&unk_254302530);
    sub_23B700B04(v22, (uint64_t (*)(_QWORD))v21);
    v1 = (uint64_t *)(v0 + 552);
    v19 = v99;
    v20 = v55;
    if (!v18)
      goto LABEL_13;
  }
  v88 = *(_QWORD *)(v0 + 640);
  v89 = *(_QWORD *)(v0 + 592);
  v90 = *(_QWORD *)(v0 + 584);
  v91 = *(_QWORD *)(v0 + 576);
  *(_QWORD *)(v0 + 720) = sub_23B75F860();
  sub_23B725660(v79, v88, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  type metadata accessor for LocationShiftingRequest();
  v92 = swift_allocObject();
  *(_QWORD *)(v0 + 728) = v92;
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  v93 = sub_23B7968B4();
  v95 = v94;
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
  v96 = (uint64_t *)(v92 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *v96 = v93;
  v96[1] = v95;
  sub_23B6FF360(v88, v92 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v97 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 736) = v97;
  *v97 = v0;
  v97[1] = sub_23B7162A8;
  return sub_23B726C04(*(_QWORD *)(v0 + 648), v92);
}

uint64_t sub_23B7162A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 744) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_23B716328()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  unint64_t i;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  char v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  _QWORD *v111;
  _OWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _OWORD v116[11];

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 648);
  v3 = *(_QWORD *)(v0 + 640);
  v4 = (_QWORD *)(*(_QWORD *)(v0 + 560) + *(_QWORD *)(v0 + 696));
  swift_beginAccess();
  sub_23B725660(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  sub_23B6F4E8C(v0 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v116[0] = *v4;
  *v4 = 0x8000000000000000;
  sub_23B73C024(v3, (_OWORD *)(v0 + 16), isUniquelyReferenced_nonNull_native);
  *v4 = *(_QWORD *)&v116[0];
  swift_bridgeObjectRelease();
  sub_23B6F5744(v0 + 16);
  swift_endAccess();
  sub_23B6F4E8C(v0 + 16);
  swift_bridgeObjectRetain();
  v6 = sub_23B7969A4();
  v7 = sub_23B796C38();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 688);
    v9 = swift_slowAlloc();
    v113 = swift_slowAlloc();
    *(_QWORD *)&v116[0] = v113;
    *(_DWORD *)v9 = 136446979;
    *(_QWORD *)(v0 + 504) = sub_23B6FB388(0xD000000000000017, 0x800000023B7A00C0, (uint64_t *)v116);
    sub_23B796C68();
    *(_WORD *)(v9 + 12) = 1024;
    *(_DWORD *)(v0 + 752) = sub_23B715238(v0 + 16, v8) & 1;
    sub_23B796C68();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 18) = 2160;
    *(_QWORD *)(v0 + 520) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v9 + 28) = 2081;
    v10 = *(_QWORD *)(v0 + 16);
    v11 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 528) = sub_23B6FB388(v10, v11, (uint64_t *)v116);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744(v0 + 16);
    _os_log_impl(&dword_23B6EB000, v6, v7, "%{public}s\nContains: %{BOOL}d. Handle: %{private,mask.hash}s.", (uint8_t *)v9, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v113, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23B6F5744(v0 + 16);
  }

  if ((sub_23B715238(v0 + 16, *(_QWORD *)(v0 + 688)) & 1) != 0)
  {
    v12 = *(_QWORD *)(v0 + 648);
    v13 = *(_QWORD *)(v0 + 640);
    v14 = *(_QWORD *)(v0 + 616);
    v15 = *(_QWORD *)(v0 + 568);
    v114 = v15;
    v16 = *(_QWORD *)(v0 + 560);
    v17 = sub_23B796B84();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v15, 1, 1, v17);
    sub_23B725660(v12, v13, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v19 = sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
    v20 = (*(unsigned __int8 *)(v14 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v21 = swift_allocObject();
    v22 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v21 + 152) = *(_OWORD *)(v0 + 128);
    v23 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v21 + 168) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v21 + 184) = v23;
    *(_OWORD *)(v21 + 200) = *(_OWORD *)(v0 + 176);
    v24 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v21 + 88) = *(_OWORD *)(v0 + 64);
    v25 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v21 + 104) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v21 + 120) = v25;
    *(_OWORD *)(v21 + 136) = v22;
    v26 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v21 + 40) = *v1;
    *(_OWORD *)(v21 + 56) = v26;
    *(_QWORD *)(v21 + 16) = v16;
    *(_QWORD *)(v21 + 24) = v19;
    *(_QWORD *)(v21 + 32) = v16;
    *(_OWORD *)(v21 + 72) = v24;
    sub_23B6FF360(v13, v21 + v20, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v114, 1, v17);
    swift_retain_n();
    v28 = *(_QWORD *)(v0 + 568);
    if (v27 == 1)
    {
      sub_23B6F7190(*(_QWORD *)(v0 + 568), &qword_254302FD8);
    }
    else
    {
      sub_23B796B78();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v28, v17);
    }
    if (*(_QWORD *)(v21 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v32 = sub_23B796B48();
      v34 = v33;
      swift_unknownObjectRelease();
    }
    else
    {
      v32 = 0;
      v34 = 0;
    }
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = &unk_256A48548;
    *(_QWORD *)(v35 + 24) = v21;
    if (v34 | v32)
    {
      *(_QWORD *)(v0 + 368) = 0;
      *(_QWORD *)(v0 + 376) = 0;
      *(_QWORD *)(v0 + 384) = v32;
      *(_QWORD *)(v0 + 392) = v34;
    }
    v29 = *(_QWORD *)(v0 + 656);
    v30 = *(_QWORD *)(v0 + 648);
    v31 = *(_QWORD *)(v0 + 600);
    swift_task_create();
    swift_release();
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 656);
    v30 = *(_QWORD *)(v0 + 648);
    v31 = *(_QWORD *)(v0 + 600);
    sub_23B6F5744(v0 + 16);
  }
  v112 = (_OWORD *)(v0 + 192);
  v36 = type metadata accessor for Location;
  sub_23B700B04(v30, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  sub_23B6F7190(v31, (uint64_t *)&unk_254302530);
  sub_23B700B04(v29, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  i = *(_QWORD *)(v0 + 712);
  v38 = *(_QWORD *)(v0 + 704);
  if (!i)
    goto LABEL_20;
LABEL_18:
  v42 = v36;
  v43 = __clz(__rbit64(i));
  v115 = (i - 1) & i;
  v44 = v38;
  v45 = v43 | (v38 << 6);
  v46 = *(_QWORD *)(v0 + 552);
LABEL_19:
  v47 = *(void **)(v0 + 664);
  v48 = *(_QWORD *)(v0 + 616);
  v49 = (_OWORD *)(*(_QWORD *)(v46 + 48) + 176 * v45);
  v51 = v49[1];
  v50 = v49[2];
  *v112 = *v49;
  *(_OWORD *)(v0 + 208) = v51;
  *(_OWORD *)(v0 + 224) = v50;
  v52 = v49[6];
  v54 = v49[3];
  v53 = v49[4];
  *(_OWORD *)(v0 + 272) = v49[5];
  *(_OWORD *)(v0 + 288) = v52;
  *(_OWORD *)(v0 + 240) = v54;
  *(_OWORD *)(v0 + 256) = v53;
  v55 = v49[10];
  v57 = v49[7];
  v56 = v49[8];
  *(_OWORD *)(v0 + 336) = v49[9];
  *(_OWORD *)(v0 + 352) = v55;
  *(_OWORD *)(v0 + 304) = v57;
  *(_OWORD *)(v0 + 320) = v56;
  memmove(v47, v49, 0xB0uLL);
  v58 = *(_QWORD *)(v46 + 56) + *(_QWORD *)(v48 + 72) * v45;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  v36 = v42;
  sub_23B725660(v58, (uint64_t)v47 + *(int *)(v59 + 48), (uint64_t (*)(_QWORD))v42);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v47, 0, 1, v59);
  sub_23B6F4E8C((uint64_t)v112);
  v38 = v44;
  for (i = v115; ; i = 0)
  {
    *(_QWORD *)(v0 + 712) = i;
    *(_QWORD *)(v0 + 704) = v38;
    v66 = *(_QWORD *)(v0 + 672);
    sub_23B6FC8F4(*(_QWORD *)(v0 + 664), v66, &qword_254302588);
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(v66, 1, v67);
    v69 = *(_OWORD **)(v0 + 672);
    if (v68 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v70 = *(_QWORD *)(v0 + 696);
    v71 = *(_QWORD *)(v0 + 656);
    v72 = *(_QWORD *)(v0 + 560);
    v74 = v69[1];
    v73 = v69[2];
    *v1 = *v69;
    *(_OWORD *)(v0 + 32) = v74;
    *(_OWORD *)(v0 + 48) = v73;
    v75 = v69[6];
    v77 = v69[3];
    v76 = v69[4];
    *(_OWORD *)(v0 + 96) = v69[5];
    *(_OWORD *)(v0 + 112) = v75;
    *(_OWORD *)(v0 + 64) = v77;
    *(_OWORD *)(v0 + 80) = v76;
    v78 = v69[10];
    v80 = v69[7];
    v79 = v69[8];
    *(_OWORD *)(v0 + 160) = v69[9];
    *(_OWORD *)(v0 + 176) = v78;
    *(_OWORD *)(v0 + 128) = v80;
    *(_OWORD *)(v0 + 144) = v79;
    sub_23B6FF360((uint64_t)v69 + *(int *)(v67 + 48), v71, (uint64_t (*)(_QWORD))v36);
    v81 = *(_QWORD *)(v72 + v70);
    if (*(_QWORD *)(v81 + 16))
    {
      sub_23B6F4E8C(v0 + 16);
      swift_bridgeObjectRetain();
      v82 = sub_23B780558(v0 + 16);
      v83 = *(_QWORD *)(v0 + 616);
      v84 = *(_QWORD *)(v0 + 608);
      v85 = *(_QWORD *)(v0 + 600);
      if ((v86 & 1) != 0)
      {
        sub_23B725660(*(_QWORD *)(v81 + 56) + *(_QWORD *)(v83 + 72) * v82, *(_QWORD *)(v0 + 600), (uint64_t (*)(_QWORD))v36);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v84);
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v83 + 56))(*(_QWORD *)(v0 + 600), 1, 1, v84);
      }
      swift_bridgeObjectRelease();
      sub_23B6F5744(v0 + 16);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 616) + 56))(*(_QWORD *)(v0 + 600), 1, 1, *(_QWORD *)(v0 + 608));
    }
    v87 = *(_QWORD *)(v0 + 656);
    v88 = *(_OWORD *)(v0 + 160);
    v116[8] = *(_OWORD *)(v0 + 144);
    v116[9] = v88;
    v116[10] = *(_OWORD *)(v0 + 176);
    v89 = *(_OWORD *)(v0 + 96);
    v116[4] = *(_OWORD *)(v0 + 80);
    v116[5] = v89;
    v90 = *(_OWORD *)(v0 + 128);
    v116[6] = *(_OWORD *)(v0 + 112);
    v116[7] = v90;
    v91 = *(_OWORD *)(v0 + 32);
    v116[0] = *v1;
    v116[1] = v91;
    v92 = *(_OWORD *)(v0 + 64);
    v116[2] = *(_OWORD *)(v0 + 48);
    v116[3] = v92;
    sub_23B71A46C((uint64_t *)v116, v87);
    if ((v93 & 1) != 0)
      break;
    sub_23B725660(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 632), (uint64_t (*)(_QWORD))v36);
    sub_23B6F4E8C(v0 + 16);
    v94 = sub_23B7969A4();
    v95 = sub_23B796C38();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = *(_QWORD *)(v0 + 632);
      v97 = *(_QWORD *)(v0 + 608);
      v98 = swift_slowAlloc();
      *(_QWORD *)(v0 + 496) = swift_slowAlloc();
      *(_DWORD *)v98 = 136446979;
      *(_QWORD *)(v98 + 4) = sub_23B6FB388(0xD000000000000017, 0x800000023B7A00C0, (uint64_t *)(v0 + 496));
      *(_WORD *)(v98 + 12) = 2082;
      __asm { BR              X9 }
    }
    v39 = *(_QWORD *)(v0 + 656);
    v40 = *(_QWORD *)(v0 + 632);
    v41 = *(_QWORD *)(v0 + 600);

    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);
    sub_23B700B04(v40, (uint64_t (*)(_QWORD))v36);
    sub_23B6F7190(v41, (uint64_t *)&unk_254302530);
    sub_23B700B04(v39, (uint64_t (*)(_QWORD))v36);
    if (i)
      goto LABEL_18;
LABEL_20:
    v44 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      JUMPOUT(0x23B71706CLL);
    }
    v60 = (unint64_t)((1 << *(_BYTE *)(v0 + 756)) + 63) >> 6;
    if (v44 >= v60)
    {
      v63 = v38;
    }
    else
    {
      v46 = *(_QWORD *)(v0 + 552);
      v61 = v46 + 64;
      v62 = *(_QWORD *)(v46 + 64 + 8 * v44);
      if (v62)
        goto LABEL_23;
      v63 = v38 + 1;
      if (v38 + 2 < v60)
      {
        v62 = *(_QWORD *)(v61 + 8 * (v38 + 2));
        if (v62)
        {
          v44 = v38 + 2;
LABEL_23:
          v42 = v36;
          v115 = (v62 - 1) & v62;
          v45 = __clz(__rbit64(v62)) + (v44 << 6);
          goto LABEL_19;
        }
        v63 = v38 + 2;
        if (v38 + 3 < v60)
        {
          v62 = *(_QWORD *)(v61 + 8 * (v38 + 3));
          if (v62)
          {
            v44 = v38 + 3;
            goto LABEL_23;
          }
          v44 = v38 + 4;
          v63 = v38 + 3;
          if (v38 + 4 < v60)
          {
            v62 = *(_QWORD *)(v61 + 8 * v44);
            if (v62)
              goto LABEL_23;
            v63 = v60 - 1;
            v99 = v60 - 5;
            while (v99 != v38)
            {
              v62 = *(_QWORD *)(v46 + 104 + 8 * v38++);
              if (v62)
              {
                v44 = v38 + 4;
                goto LABEL_23;
              }
            }
          }
        }
      }
    }
    v64 = *(_QWORD *)(v0 + 664);
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 1, 1, v65);
    v38 = v63;
  }
  v101 = *(_QWORD *)(v0 + 656);
  v102 = *(_QWORD *)(v0 + 640);
  v103 = *(_QWORD *)(v0 + 592);
  v104 = *(_QWORD *)(v0 + 584);
  v105 = *(_QWORD *)(v0 + 576);
  *(_QWORD *)(v0 + 720) = sub_23B75F860();
  sub_23B725660(v101, v102, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  type metadata accessor for LocationShiftingRequest();
  v106 = swift_allocObject();
  *(_QWORD *)(v0 + 728) = v106;
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  v107 = sub_23B7968B4();
  v109 = v108;
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v105);
  v110 = (uint64_t *)(v106 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *v110 = v107;
  v110[1] = v109;
  sub_23B6FF360(v102, v106 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v111 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 736) = v111;
  *v111 = v0;
  v111[1] = sub_23B7162A8;
  return sub_23B726C04(*(_QWORD *)(v0 + 648), v106);
}

uint64_t sub_23B71707C()
{
  uint64_t v0;
  _OWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t i;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  char v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  _QWORD *v90;
  _OWORD *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[11];

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 744);
  swift_release();
  swift_release();
  v3 = v2;
  sub_23B6F4E8C(v0 + 16);
  v4 = v2;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v5, v6))
  {
    v92 = *(void **)(v0 + 744);
    v95 = *(_QWORD *)(v0 + 656);
    v94 = *(_QWORD *)(v0 + 600);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v93 = swift_slowAlloc();
    *(_QWORD *)&v96[0] = v93;
    *(_DWORD *)v7 = 141558531;
    *(_QWORD *)(v0 + 488) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v7 + 12) = 2081;
    v9 = *(_QWORD *)(v0 + 16);
    v10 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 472) = sub_23B6FB388(v9, v10, (uint64_t *)v96);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);
    *(_WORD *)(v7 + 22) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 480) = v11;
    sub_23B796C68();
    *v8 = v11;

    _os_log_impl(&dword_23B6EB000, v5, v6, "Shifting failed for handle: %{private,mask.hash}s with ERROR: %{public}@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v93, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);

    sub_23B6F7190(v94, (uint64_t *)&unk_254302530);
    v12 = v95;
  }
  else
  {
    v13 = *(void **)(v0 + 744);
    v14 = *(_QWORD *)(v0 + 656);
    v15 = *(_QWORD *)(v0 + 600);

    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);

    sub_23B6F7190(v15, (uint64_t *)&unk_254302530);
    v12 = v14;
  }
  sub_23B700B04(v12, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v91 = (_OWORD *)(v0 + 192);
  i = *(_QWORD *)(v0 + 712);
  v17 = *(_QWORD *)(v0 + 704);
  if (!i)
    goto LABEL_9;
LABEL_7:
  v21 = __clz(__rbit64(i));
  v22 = (i - 1) & i;
  v23 = v17;
  v24 = v21 | (v17 << 6);
  v25 = *(_QWORD *)(v0 + 552);
LABEL_8:
  v26 = *(void **)(v0 + 664);
  v27 = *(_QWORD *)(v0 + 616);
  v28 = (_OWORD *)(*(_QWORD *)(v25 + 48) + 176 * v24);
  v30 = v28[1];
  v29 = v28[2];
  *v91 = *v28;
  *(_OWORD *)(v0 + 208) = v30;
  *(_OWORD *)(v0 + 224) = v29;
  v31 = v28[6];
  v33 = v28[3];
  v32 = v28[4];
  *(_OWORD *)(v0 + 272) = v28[5];
  *(_OWORD *)(v0 + 288) = v31;
  *(_OWORD *)(v0 + 240) = v33;
  *(_OWORD *)(v0 + 256) = v32;
  v34 = v28[10];
  v36 = v28[7];
  v35 = v28[8];
  *(_OWORD *)(v0 + 336) = v28[9];
  *(_OWORD *)(v0 + 352) = v34;
  *(_OWORD *)(v0 + 304) = v36;
  *(_OWORD *)(v0 + 320) = v35;
  memmove(v26, v28, 0xB0uLL);
  v37 = *(_QWORD *)(v25 + 56) + *(_QWORD *)(v27 + 72) * v24;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  sub_23B725660(v37, (uint64_t)v26 + *(int *)(v38 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v26, 0, 1, v38);
  sub_23B6F4E8C((uint64_t)v91);
  v39 = v23;
  for (i = v22; ; i = 0)
  {
    *(_QWORD *)(v0 + 712) = i;
    *(_QWORD *)(v0 + 704) = v39;
    v46 = *(_QWORD *)(v0 + 672);
    sub_23B6FC8F4(*(_QWORD *)(v0 + 664), v46, &qword_254302588);
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v48 = *(_QWORD *)(v0 + 696);
    v49 = *(_OWORD **)(v0 + 672);
    v50 = *(_QWORD *)(v0 + 656);
    v51 = *(_QWORD *)(v0 + 560);
    v53 = v49[1];
    v52 = v49[2];
    *v1 = *v49;
    *(_OWORD *)(v0 + 32) = v53;
    *(_OWORD *)(v0 + 48) = v52;
    v54 = v49[6];
    v56 = v49[3];
    v55 = v49[4];
    *(_OWORD *)(v0 + 96) = v49[5];
    *(_OWORD *)(v0 + 112) = v54;
    *(_OWORD *)(v0 + 64) = v56;
    *(_OWORD *)(v0 + 80) = v55;
    v57 = v49[10];
    v59 = v49[7];
    v58 = v49[8];
    *(_OWORD *)(v0 + 160) = v49[9];
    *(_OWORD *)(v0 + 176) = v57;
    *(_OWORD *)(v0 + 128) = v59;
    *(_OWORD *)(v0 + 144) = v58;
    sub_23B6FF360((uint64_t)v49 + *(int *)(v47 + 48), v50, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v60 = *(_QWORD *)(v51 + v48);
    if (*(_QWORD *)(v60 + 16))
    {
      sub_23B6F4E8C(v0 + 16);
      swift_bridgeObjectRetain();
      v61 = sub_23B780558(v0 + 16);
      v62 = *(_QWORD *)(v0 + 616);
      v63 = *(_QWORD *)(v0 + 608);
      v64 = *(_QWORD *)(v0 + 600);
      if ((v65 & 1) != 0)
      {
        sub_23B725660(*(_QWORD *)(v60 + 56) + *(_QWORD *)(v62 + 72) * v61, *(_QWORD *)(v0 + 600), (uint64_t (*)(_QWORD))type metadata accessor for Location);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v63);
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v62 + 56))(*(_QWORD *)(v0 + 600), 1, 1, v63);
      }
      swift_bridgeObjectRelease();
      sub_23B6F5744(v0 + 16);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 616) + 56))(*(_QWORD *)(v0 + 600), 1, 1, *(_QWORD *)(v0 + 608));
    }
    v66 = *(_QWORD *)(v0 + 656);
    v67 = *(_OWORD *)(v0 + 160);
    v96[8] = *(_OWORD *)(v0 + 144);
    v96[9] = v67;
    v96[10] = *(_OWORD *)(v0 + 176);
    v68 = *(_OWORD *)(v0 + 96);
    v96[4] = *(_OWORD *)(v0 + 80);
    v96[5] = v68;
    v69 = *(_OWORD *)(v0 + 128);
    v96[6] = *(_OWORD *)(v0 + 112);
    v96[7] = v69;
    v70 = *(_OWORD *)(v0 + 32);
    v96[0] = *v1;
    v96[1] = v70;
    v71 = *(_OWORD *)(v0 + 64);
    v96[2] = *(_OWORD *)(v0 + 48);
    v96[3] = v71;
    sub_23B71A46C((uint64_t *)v96, v66);
    if ((v72 & 1) != 0)
      break;
    sub_23B725660(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 632), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F4E8C(v0 + 16);
    v73 = sub_23B7969A4();
    v74 = sub_23B796C38();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = *(_QWORD *)(v0 + 632);
      v76 = *(_QWORD *)(v0 + 608);
      v77 = swift_slowAlloc();
      *(_QWORD *)(v0 + 496) = swift_slowAlloc();
      *(_DWORD *)v77 = 136446979;
      *(_QWORD *)(v77 + 4) = sub_23B6FB388(0xD000000000000017, 0x800000023B7A00C0, (uint64_t *)(v0 + 496));
      *(_WORD *)(v77 + 12) = 2082;
      __asm { BR              X9 }
    }
    v18 = *(_QWORD *)(v0 + 656);
    v19 = *(_QWORD *)(v0 + 632);
    v20 = *(_QWORD *)(v0 + 600);

    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);
    sub_23B700B04(v19, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F7190(v20, (uint64_t *)&unk_254302530);
    sub_23B700B04(v18, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v17 = v39;
    if (i)
      goto LABEL_7;
LABEL_9:
    v23 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      JUMPOUT(0x23B717B24);
    }
    v40 = (unint64_t)((1 << *(_BYTE *)(v0 + 756)) + 63) >> 6;
    if (v23 >= v40)
    {
      v43 = v17;
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 552);
      v41 = v25 + 64;
      v42 = *(_QWORD *)(v25 + 64 + 8 * v23);
      if (v42)
        goto LABEL_12;
      v43 = v17 + 1;
      if (v17 + 2 < v40)
      {
        v42 = *(_QWORD *)(v41 + 8 * (v17 + 2));
        if (v42)
        {
          v23 = v17 + 2;
LABEL_12:
          v22 = (v42 - 1) & v42;
          v24 = __clz(__rbit64(v42)) + (v23 << 6);
          goto LABEL_8;
        }
        v43 = v17 + 2;
        if (v17 + 3 < v40)
        {
          v42 = *(_QWORD *)(v41 + 8 * (v17 + 3));
          if (v42)
          {
            v23 = v17 + 3;
            goto LABEL_12;
          }
          v23 = v17 + 4;
          v43 = v17 + 3;
          if (v17 + 4 < v40)
          {
            v42 = *(_QWORD *)(v41 + 8 * v23);
            if (v42)
              goto LABEL_12;
            v43 = v40 - 1;
            v78 = v40 - 5;
            while (v78 != v17)
            {
              v42 = *(_QWORD *)(v25 + 104 + 8 * v17++);
              if (v42)
              {
                v23 = v17 + 4;
                goto LABEL_12;
              }
            }
          }
        }
      }
    }
    v44 = *(_QWORD *)(v0 + 664);
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
    v39 = v43;
  }
  v80 = *(_QWORD *)(v0 + 656);
  v81 = *(_QWORD *)(v0 + 640);
  v82 = *(_QWORD *)(v0 + 592);
  v83 = *(_QWORD *)(v0 + 584);
  v84 = *(_QWORD *)(v0 + 576);
  *(_QWORD *)(v0 + 720) = sub_23B75F860();
  sub_23B725660(v80, v81, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  type metadata accessor for LocationShiftingRequest();
  v85 = swift_allocObject();
  *(_QWORD *)(v0 + 728) = v85;
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  v86 = sub_23B7968B4();
  v88 = v87;
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
  v89 = (uint64_t *)(v85 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *v89 = v86;
  v89[1] = v88;
  sub_23B6FF360(v81, v85 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v90 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 736) = v90;
  *v90 = v0;
  v90[1] = sub_23B7162A8;
  return sub_23B726C04(*(_QWORD *)(v0 + 648), v85);
}

uint64_t sub_23B717B34(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 680) = v3;
  *(_BYTE *)(v4 + 841) = a3;
  *(_BYTE *)(v4 + 840) = a2;
  *(_QWORD *)(v4 + 672) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  *(_QWORD *)(v4 + 688) = swift_task_alloc();
  *(_QWORD *)(v4 + 696) = swift_task_alloc();
  *(_QWORD *)(v4 + 704) = swift_task_alloc();
  v5 = sub_23B7968A8();
  *(_QWORD *)(v4 + 712) = v5;
  *(_QWORD *)(v4 + 720) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 728) = swift_task_alloc();
  *(_QWORD *)(v4 + 736) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302F60);
  *(_QWORD *)(v4 + 744) = swift_task_alloc();
  v6 = type metadata accessor for Friend();
  *(_QWORD *)(v4 + 752) = v6;
  *(_QWORD *)(v4 + 760) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 768) = swift_task_alloc();
  *(_QWORD *)(v4 + 776) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B717C4C()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t (__cdecl *v10)();
  uint64_t v11;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 784) = Strong;
  if (Strong)
  {
    v10 = (uint64_t (__cdecl *)())((char *)&dword_256A48D28 + dword_256A48D28);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 792) = v2;
    *v2 = v0;
    v2[1] = sub_23B717EB4;
    return v10();
  }
  else
  {
    if (qword_254303110 != -1)
      swift_once();
    v4 = sub_23B7969BC();
    __swift_project_value_buffer(v4, (uint64_t)qword_2543090D0);
    v5 = sub_23B7969A4();
    v6 = sub_23B796C20();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136446210;
      *(_QWORD *)(v0 + 608) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, &v11);
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s missing FriendshipConnection.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v8, -1, -1);
      MEMORY[0x23B86C754](v7, -1, -1);
    }

    v9 = sub_23B72D430(MEMORY[0x24BEE4AF8]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
  }
}

uint64_t sub_23B717EB4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 800) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B717F20()
{
  uint64_t v0;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(v0 + 800))
    return swift_task_switch();
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = sub_23B7969A4();
  v4 = sub_23B796C20();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v8 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 608) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, &v8);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v3, v4, "%{public}s missing FriendshipConnection.", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v6, -1, -1);
    MEMORY[0x23B86C754](v5, -1, -1);
  }

  v7 = sub_23B72D430(MEMORY[0x24BEE4AF8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v7);
}

uint64_t sub_23B718144()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 800) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_followings);
  swift_beginAccess();
  *(_QWORD *)(v0 + 808) = *v1;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23B7181B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, unint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _QWORD *v79;
  int v80;
  char v81;
  unint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  unint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _OWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  _OWORD v134[12];

  v1 = *(_QWORD *)(v0 + 808);
  if (*(_BYTE *)(v0 + 841) == 1)
  {
    v2 = *(_QWORD *)(v0 + 672);
    v3 = MEMORY[0x24BEE4B00];
    v132 = (_QWORD *)MEMORY[0x24BEE4B00];
    v126 = *(_QWORD *)(v2 + 16);
    if (v126)
    {
      v4 = (_OWORD *)(v0 + 16);
      v121 = (_OWORD *)(v0 + 192);
      v5 = *(_QWORD *)(v0 + 760);
      v122 = *(_QWORD *)(v0 + 752);
      v6 = *(_QWORD *)(v0 + 720);
      v125 = v2 + 32;
      v7 = *(_QWORD *)(v1 + 16);
      swift_bridgeObjectRetain();
      v8 = 0;
      v123 = v7 - 1;
      v124 = v7;
      v127 = v5;
      v128 = (_OWORD *)(v0 + 16);
      v129 = v6;
      v130 = v1;
      while (1)
      {
        v131 = v8;
        v10 = (__int128 *)(v125 + 176 * v8);
        v11 = *v10;
        v12 = v10[2];
        v4[1] = v10[1];
        v4[2] = v12;
        *v4 = v11;
        v13 = v10[3];
        v14 = v10[4];
        v15 = v10[6];
        v4[5] = v10[5];
        v4[6] = v15;
        v4[3] = v13;
        v4[4] = v14;
        v16 = v10[7];
        v17 = v10[8];
        v18 = v10[10];
        v4[9] = v10[9];
        v4[10] = v18;
        v4[7] = v16;
        v4[8] = v17;
        if (v124)
        {
          v19 = v5;
          v20 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
          swift_bridgeObjectRetain();
          sub_23B6F4E8C((uint64_t)v4);
          swift_bridgeObjectRetain();
          v21 = *(_QWORD *)(v19 + 72);
          for (i = v123; ; --i)
          {
            v23 = *(_OWORD **)(v0 + 768);
            sub_23B725660(v20, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
            v25 = v23[1];
            v24 = v23[2];
            *(_OWORD *)(v0 + 368) = *v23;
            *(_OWORD *)(v0 + 384) = v25;
            *(_OWORD *)(v0 + 400) = v24;
            v26 = v23[6];
            v28 = v23[3];
            v27 = v23[4];
            *(_OWORD *)(v0 + 448) = v23[5];
            *(_OWORD *)(v0 + 464) = v26;
            *(_OWORD *)(v0 + 416) = v28;
            *(_OWORD *)(v0 + 432) = v27;
            v29 = v23[10];
            v31 = v23[7];
            v30 = v23[8];
            *(_OWORD *)(v0 + 512) = v23[9];
            *(_OWORD *)(v0 + 528) = v29;
            *(_OWORD *)(v0 + 480) = v31;
            *(_OWORD *)(v0 + 496) = v30;
            v32 = sub_23B796A58();
            v34 = v33;
            if (v32 == sub_23B796A58() && v34 == v35)
            {
              sub_23B6F4E8C(v0 + 368);
              swift_bridgeObjectRelease_n();
              sub_23B6F5744(v0 + 368);
LABEL_15:
              v37 = *(_QWORD *)(v0 + 768);
              v38 = *(_QWORD *)(v0 + 752);
              v39 = *(_QWORD *)(v0 + 744);
              v1 = v130;
              swift_bridgeObjectRelease();
              sub_23B6FF360(v37, v39, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
              v5 = v127;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v127 + 56))(v39, 0, 1, v38);
              swift_bridgeObjectRelease();
              v4 = (_OWORD *)(v0 + 16);
              v6 = v129;
              goto LABEL_18;
            }
            v36 = sub_23B796ECC();
            sub_23B6F4E8C(v0 + 368);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23B6F5744(v0 + 368);
            if ((v36 & 1) != 0)
              goto LABEL_15;
            sub_23B700B04(*(_QWORD *)(v0 + 768), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
            if (!i)
              break;
            v20 += v21;
          }
          v1 = v130;
          swift_bridgeObjectRelease();
          v5 = v127;
          v4 = (_OWORD *)(v0 + 16);
          v6 = v129;
        }
        else
        {
          sub_23B6F4E8C((uint64_t)v4);
          swift_bridgeObjectRetain();
        }
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v5 + 56))(*(_QWORD *)(v0 + 744), 1, 1, *(_QWORD *)(v0 + 752));
        swift_bridgeObjectRelease();
LABEL_18:
        v40 = *(_QWORD *)(v0 + 744);
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v5 + 48))(v40, 1, *(_QWORD *)(v0 + 752)) == 1)
        {
          sub_23B6F7190(v40, &qword_254302F60);
          if (qword_254303110 != -1)
            swift_once();
          v41 = sub_23B7969BC();
          __swift_project_value_buffer(v41, (uint64_t)qword_2543090D0);
          sub_23B6F4E8C((uint64_t)v4);
          v42 = sub_23B7969A4();
          v43 = sub_23B796C38();
          if (os_log_type_enabled(v42, v43))
          {
            v44 = swift_slowAlloc();
            v45 = swift_slowAlloc();
            v133 = v45;
            *(_DWORD *)v44 = 136446723;
            *(_QWORD *)(v0 + 640) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, &v133);
            sub_23B796C68();
            *(_WORD *)(v44 + 12) = 2160;
            *(_QWORD *)(v0 + 648) = 1752392040;
            sub_23B796C68();
            *(_WORD *)(v44 + 22) = 2081;
            v46 = v4[9];
            v134[8] = v4[8];
            v134[9] = v46;
            v134[10] = v4[10];
            v47 = v4[5];
            v134[4] = v4[4];
            v134[5] = v47;
            v48 = v4[7];
            v134[6] = v4[6];
            v134[7] = v48;
            v49 = v4[1];
            v134[0] = *v4;
            v134[1] = v49;
            v50 = v4[3];
            v134[2] = v4[2];
            v134[3] = v50;
            v51 = Handle.description.getter();
            *(_QWORD *)(v0 + 656) = sub_23B6FB388(v51, v52, &v133);
            v6 = v129;
            v1 = v130;
            sub_23B796C68();
            swift_bridgeObjectRelease();
            sub_23B6F5744((uint64_t)v4);
            sub_23B6F5744((uint64_t)v4);
            _os_log_impl(&dword_23B6EB000, v42, v43, "%{public}s handle:%{private,mask.hash}s not sharing yet", (uint8_t *)v44, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x23B86C754](v45, -1, -1);
            v53 = v44;
            v5 = v127;
            MEMORY[0x23B86C754](v53, -1, -1);
          }
          else
          {
            sub_23B6F5744((uint64_t)v4);
            sub_23B6F5744((uint64_t)v4);
          }

        }
        else
        {
          v54 = *(_QWORD *)(v0 + 776);
          v55 = *(_QWORD *)(v0 + 712);
          v56 = *(_QWORD *)(v0 + 704);
          sub_23B6FF360(v40, v54, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          sub_23B6FDE3C(v54 + *(int *)(v122 + 48), v56, &qword_254302B18);
          v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          if (v57(v56, 1, v55) == 1)
          {
            v9 = *(_QWORD *)(v0 + 704);
            sub_23B700B04(*(_QWORD *)(v0 + 776), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
            v4 = (_OWORD *)(v0 + 16);
            sub_23B6F5744((uint64_t)v128);
            sub_23B6F7190(v9, &qword_254302B18);
            v1 = v130;
          }
          else
          {
            v58 = *(_QWORD *)(v0 + 736);
            v59 = *(_QWORD *)(v0 + 712);
            v60 = *(_QWORD *)(v0 + 696);
            v61 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 32);
            v61(v58, *(_QWORD *)(v0 + 704), v59);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v60, v58, v59);
            v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
            v62(v60, 0, 1, v59);
            if (v57(v60, 1, v59) == 1)
            {
              sub_23B6F7190(*(_QWORD *)(v0 + 696), &qword_254302B18);
              v63 = (uint64_t)v132;
              swift_bridgeObjectRetain();
              v4 = (_OWORD *)(v0 + 16);
              v64 = sub_23B780558((uint64_t)v128);
              v66 = v65;
              swift_bridgeObjectRelease();
              v1 = v130;
              if ((v66 & 1) != 0)
              {
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)&v134[0] = v132;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_23B781B38();
                  v63 = *(_QWORD *)&v134[0];
                }
                v68 = *(_QWORD *)(v0 + 712);
                v69 = *(_QWORD *)(v0 + 688);
                v70 = (_OWORD *)(*(_QWORD *)(v63 + 48) + 176 * v64);
                v72 = v70[1];
                v71 = v70[2];
                *v121 = *v70;
                *(_OWORD *)(v0 + 208) = v72;
                *(_OWORD *)(v0 + 224) = v71;
                v73 = v70[6];
                v75 = v70[3];
                v74 = v70[4];
                *(_OWORD *)(v0 + 272) = v70[5];
                *(_OWORD *)(v0 + 288) = v73;
                *(_OWORD *)(v0 + 240) = v75;
                *(_OWORD *)(v0 + 256) = v74;
                v76 = v70[10];
                v78 = v70[7];
                v77 = v70[8];
                *(_OWORD *)(v0 + 336) = v70[9];
                *(_OWORD *)(v0 + 352) = v76;
                *(_OWORD *)(v0 + 304) = v78;
                *(_OWORD *)(v0 + 320) = v77;
                sub_23B6F5744((uint64_t)v121);
                v61(v69, *(_QWORD *)(v63 + 56) + *(_QWORD *)(v129 + 72) * v64, v68);
                sub_23B7824F4(v64, v63);
                v132 = (_QWORD *)v63;
                swift_bridgeObjectRelease();
                v62(v69, 0, 1, v68);
                sub_23B6F5744((uint64_t)v128);
                v1 = v130;
              }
              else
              {
                v62(*(_QWORD *)(v0 + 688), 1, 1, *(_QWORD *)(v0 + 712));
                sub_23B6F5744((uint64_t)v128);
              }
              sub_23B6F7190(*(_QWORD *)(v0 + 688), &qword_254302B18);
              v5 = v127;
              v6 = v129;
            }
            else
            {
              v61(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 712));
              v79 = v132;
              v80 = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)&v134[0] = v132;
              v4 = (_OWORD *)(v0 + 16);
              v82 = sub_23B780558((uint64_t)v128);
              v83 = v132[2];
              v84 = (v81 & 1) == 0;
              v85 = v83 + v84;
              v1 = v130;
              if (__OFADD__(v83, v84))
              {
                __break(1u);
LABEL_59:
                __break(1u);
LABEL_60:
                swift_once();
LABEL_49:
                v106 = sub_23B7969BC();
                __swift_project_value_buffer(v106, (uint64_t)qword_2543090D0);
                v107 = sub_23B7969A4();
                v108 = sub_23B796C38();
                if (os_log_type_enabled(v107, v108))
                {
                  v109 = (uint8_t *)swift_slowAlloc();
                  v110 = swift_slowAlloc();
                  *(_QWORD *)&v134[0] = v110;
                  *(_DWORD *)v109 = 136446210;
                  *(_QWORD *)(v0 + 632) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, (uint64_t *)v134);
                  sub_23B796C68();
                  _os_log_impl(&dword_23B6EB000, v107, v108, "%{public}s Checking if we have any valid cached location that needs rev-geo", v109, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x23B86C754](v110, -1, -1);
                  MEMORY[0x23B86C754](v109, -1, -1);
                }

                v111 = *(_BYTE *)(v0 + 840);
                swift_beginAccess();
                v112 = swift_bridgeObjectRetain();
                v113 = (unint64_t)sub_23B723E74(v112, (uint64_t *)&v132, v111);
                swift_bridgeObjectRelease();
                swift_retain_n();
                v114 = sub_23B7969A4();
                v115 = sub_23B796C38();
                if (os_log_type_enabled(v114, v115))
                {
                  v116 = swift_slowAlloc();
                  v117 = swift_slowAlloc();
                  *(_QWORD *)&v134[0] = v117;
                  *(_DWORD *)v116 = 136446723;
                  *(_QWORD *)(v0 + 664) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, (uint64_t *)v134);
                  sub_23B796C68();
                  *(_WORD *)(v116 + 12) = 2160;
                  *(_QWORD *)(v0 + 616) = 1752392040;
                  sub_23B796C68();
                  *(_WORD *)(v116 + 22) = 2081;
                  type metadata accessor for Location();
                  sub_23B72318C();
                  swift_retain();
                  v118 = sub_23B7969D4();
                  v120 = v119;
                  swift_release();
                  *(_QWORD *)(v0 + 624) = sub_23B6FB388(v118, v120, (uint64_t *)v134);
                  sub_23B796C68();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  _os_log_impl(&dword_23B6EB000, v114, v115, "%{public}s\ncachedLocations:%{private,mask.hash}s", (uint8_t *)v116, 0x20u);
                  swift_arrayDestroy();
                  MEMORY[0x23B86C754](v117, -1, -1);
                  MEMORY[0x23B86C754](v116, -1, -1);
                }
                else
                {
                  swift_release_n();
                }

                swift_release();
                goto LABEL_56;
              }
              v86 = v81;
              if (v132[3] >= v85)
              {
                v6 = v129;
                if ((v80 & 1) == 0)
                {
                  sub_23B781B38();
                  v79 = *(_QWORD **)&v134[0];
                }
              }
              else
              {
                sub_23B780870(v85, v80);
                v79 = *(_QWORD **)&v134[0];
                v87 = sub_23B780558((uint64_t)v128);
                v6 = v129;
                if ((v86 & 1) != (v88 & 1))
                  return sub_23B796EF0();
                v82 = v87;
              }
              v89 = *(_QWORD *)(v0 + 728);
              v90 = *(_QWORD *)(v0 + 712);
              v5 = v127;
              if ((v86 & 1) != 0)
              {
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(v79[7] + *(_QWORD *)(v6 + 72) * v82, v89, v90);
              }
              else
              {
                v79[(v82 >> 6) + 8] |= 1 << v82;
                v91 = (_OWORD *)(v79[6] + 176 * v82);
                v93 = *(_OWORD *)(v0 + 96);
                v92 = *(_OWORD *)(v0 + 112);
                v94 = *(_OWORD *)(v0 + 80);
                v91[3] = *(_OWORD *)(v0 + 64);
                v91[4] = v94;
                v91[5] = v93;
                v91[6] = v92;
                v96 = *(_OWORD *)(v0 + 32);
                v95 = *(_OWORD *)(v0 + 48);
                *v91 = *v128;
                v91[1] = v96;
                v91[2] = v95;
                v97 = *(_OWORD *)(v0 + 128);
                v98 = *(_OWORD *)(v0 + 144);
                v99 = *(_OWORD *)(v0 + 176);
                v91[9] = *(_OWORD *)(v0 + 160);
                v91[10] = v99;
                v91[7] = v97;
                v91[8] = v98;
                v61(v79[7] + *(_QWORD *)(v6 + 72) * v82, v89, v90);
                v100 = v79[2];
                v101 = __OFADD__(v100, 1);
                v102 = v100 + 1;
                if (v101)
                  goto LABEL_59;
                v79[2] = v102;
                sub_23B6F4E8C((uint64_t)v128);
              }
              v132 = v79;
              swift_bridgeObjectRelease();
              sub_23B6F5744((uint64_t)v128);
            }
            v103 = *(_QWORD *)(v0 + 776);
            (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 712));
            sub_23B700B04(v103, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          }
        }
        v8 = v131 + 1;
        if (v131 + 1 == v126)
        {
          swift_bridgeObjectRelease();
          v3 = (uint64_t)v132;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + 16))
    {
      if (qword_254303110 != -1)
        goto LABEL_60;
      goto LABEL_49;
    }
    v113 = sub_23B72D430(MEMORY[0x24BEE4AF8]);
    swift_release();
LABEL_56:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v113);
  }
  else
  {
    swift_bridgeObjectRelease();
    v104 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 816) = v104;
    *v104 = v0;
    v104[1] = sub_23B718F88;
    return sub_23B784CC0((uint64_t)&unk_250C92E10);
  }
}

uint64_t sub_23B718F88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 824) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 832) = a1;
  return swift_task_switch();
}

uint64_t sub_23B718FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, unint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  unint64_t v92;
  uint64_t v93;
  _OWORD *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  unint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  _OWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _OWORD *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _OWORD v136[12];

  v1 = *(_QWORD *)(v0 + 832);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = MEMORY[0x24BEE4B00];
  v134 = (_QWORD *)MEMORY[0x24BEE4B00];
  v129 = *(_QWORD *)(v2 + 16);
  if (v129)
  {
    v4 = (_OWORD *)(v0 + 16);
    v123 = (_OWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 760);
    v124 = *(_QWORD *)(v0 + 752);
    v6 = *(_QWORD *)(v0 + 720);
    v128 = v2 + 32;
    v7 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    v8 = 0;
    v127 = v7;
    v125 = v7 - 1;
    v130 = v5;
    v131 = (_OWORD *)(v0 + 16);
    v126 = v6;
    v132 = v1;
    while (1)
    {
      v133 = v8;
      v10 = (__int128 *)(v128 + 176 * v8);
      v11 = *v10;
      v12 = v10[2];
      v4[1] = v10[1];
      v4[2] = v12;
      *v4 = v11;
      v13 = v10[3];
      v14 = v10[4];
      v15 = v10[6];
      v4[5] = v10[5];
      v4[6] = v15;
      v4[3] = v13;
      v4[4] = v14;
      v16 = v10[7];
      v17 = v10[8];
      v18 = v10[10];
      v4[9] = v10[9];
      v4[10] = v18;
      v4[7] = v16;
      v4[8] = v17;
      if (v127)
      {
        v19 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        swift_bridgeObjectRetain();
        sub_23B6F4E8C((uint64_t)v4);
        swift_bridgeObjectRetain();
        v20 = *(_QWORD *)(v5 + 72);
        for (i = v125; ; --i)
        {
          v22 = *(_OWORD **)(v0 + 768);
          sub_23B725660(v19, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          v24 = v22[1];
          v23 = v22[2];
          *(_OWORD *)(v0 + 368) = *v22;
          *(_OWORD *)(v0 + 384) = v24;
          *(_OWORD *)(v0 + 400) = v23;
          v25 = v22[6];
          v27 = v22[3];
          v26 = v22[4];
          *(_OWORD *)(v0 + 448) = v22[5];
          *(_OWORD *)(v0 + 464) = v25;
          *(_OWORD *)(v0 + 416) = v27;
          *(_OWORD *)(v0 + 432) = v26;
          v28 = v22[10];
          v30 = v22[7];
          v29 = v22[8];
          *(_OWORD *)(v0 + 512) = v22[9];
          *(_OWORD *)(v0 + 528) = v28;
          *(_OWORD *)(v0 + 480) = v30;
          *(_OWORD *)(v0 + 496) = v29;
          v31 = sub_23B796A58();
          v33 = v32;
          if (v31 == sub_23B796A58() && v33 == v34)
          {
            sub_23B6F4E8C(v0 + 368);
            swift_bridgeObjectRelease_n();
            sub_23B6F5744(v0 + 368);
LABEL_14:
            v36 = *(_QWORD *)(v0 + 768);
            v37 = *(_QWORD *)(v0 + 752);
            v38 = *(_QWORD *)(v0 + 744);
            swift_bridgeObjectRelease();
            sub_23B6FF360(v36, v38, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
            v5 = v130;
            v39 = v37;
            v1 = v132;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v130 + 56))(v38, 0, 1, v39);
            swift_bridgeObjectRelease();
            v4 = (_OWORD *)(v0 + 16);
            v6 = v126;
            goto LABEL_17;
          }
          v35 = sub_23B796ECC();
          sub_23B6F4E8C(v0 + 368);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23B6F5744(v0 + 368);
          if ((v35 & 1) != 0)
            goto LABEL_14;
          sub_23B700B04(*(_QWORD *)(v0 + 768), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          if (!i)
            break;
          v19 += v20;
        }
        v1 = v132;
        swift_bridgeObjectRelease();
        v5 = v130;
        v4 = (_OWORD *)(v0 + 16);
        v6 = v126;
      }
      else
      {
        sub_23B6F4E8C((uint64_t)v4);
        swift_bridgeObjectRetain();
      }
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v5 + 56))(*(_QWORD *)(v0 + 744), 1, 1, *(_QWORD *)(v0 + 752));
      swift_bridgeObjectRelease();
LABEL_17:
      v40 = *(_QWORD *)(v0 + 744);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v5 + 48))(v40, 1, *(_QWORD *)(v0 + 752)) == 1)
      {
        sub_23B6F7190(v40, &qword_254302F60);
        if (qword_254303110 != -1)
          swift_once();
        v41 = sub_23B7969BC();
        __swift_project_value_buffer(v41, (uint64_t)qword_2543090D0);
        sub_23B6F4E8C((uint64_t)v4);
        v42 = sub_23B7969A4();
        v43 = sub_23B796C38();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v135 = v45;
          *(_DWORD *)v44 = 136446723;
          *(_QWORD *)(v0 + 640) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, &v135);
          sub_23B796C68();
          *(_WORD *)(v44 + 12) = 2160;
          *(_QWORD *)(v0 + 648) = 1752392040;
          sub_23B796C68();
          *(_WORD *)(v44 + 22) = 2081;
          v46 = v4[9];
          v136[8] = v4[8];
          v136[9] = v46;
          v136[10] = v4[10];
          v47 = v4[5];
          v136[4] = v4[4];
          v136[5] = v47;
          v48 = v4[7];
          v136[6] = v4[6];
          v136[7] = v48;
          v49 = v4[1];
          v136[0] = *v4;
          v136[1] = v49;
          v50 = v4[3];
          v136[2] = v4[2];
          v136[3] = v50;
          v51 = Handle.description.getter();
          *(_QWORD *)(v0 + 656) = sub_23B6FB388(v51, v52, &v135);
          v6 = v126;
          v5 = v130;
          sub_23B796C68();
          swift_bridgeObjectRelease();
          sub_23B6F5744((uint64_t)v4);
          sub_23B6F5744((uint64_t)v4);
          _os_log_impl(&dword_23B6EB000, v42, v43, "%{public}s handle:%{private,mask.hash}s not sharing yet", (uint8_t *)v44, 0x20u);
          swift_arrayDestroy();
          v53 = v45;
          v1 = v132;
          MEMORY[0x23B86C754](v53, -1, -1);
          MEMORY[0x23B86C754](v44, -1, -1);
        }
        else
        {
          sub_23B6F5744((uint64_t)v4);
          sub_23B6F5744((uint64_t)v4);
        }

      }
      else
      {
        v54 = *(_QWORD *)(v0 + 776);
        v55 = *(_QWORD *)(v0 + 712);
        v56 = *(_QWORD *)(v0 + 704);
        sub_23B6FF360(v40, v54, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        sub_23B6FDE3C(v54 + *(int *)(v124 + 48), v56, &qword_254302B18);
        v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        if (v57(v56, 1, v55) == 1)
        {
          v9 = *(_QWORD *)(v0 + 704);
          sub_23B700B04(*(_QWORD *)(v0 + 776), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          v4 = (_OWORD *)(v0 + 16);
          sub_23B6F5744((uint64_t)v131);
          sub_23B6F7190(v9, &qword_254302B18);
          v1 = v132;
        }
        else
        {
          v58 = *(_QWORD *)(v0 + 736);
          v59 = *(_QWORD *)(v0 + 712);
          v60 = *(_QWORD *)(v0 + 696);
          v61 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 32);
          v61(v58, *(_QWORD *)(v0 + 704), v59);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v60, v58, v59);
          v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
          v62(v60, 0, 1, v59);
          if (v57(v60, 1, v59) == 1)
          {
            sub_23B6F7190(*(_QWORD *)(v0 + 696), &qword_254302B18);
            v63 = (uint64_t)v134;
            swift_bridgeObjectRetain();
            v4 = (_OWORD *)(v0 + 16);
            v64 = sub_23B780558((uint64_t)v131);
            v66 = v65;
            swift_bridgeObjectRelease();
            if ((v66 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)&v136[0] = v134;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_23B781B38();
                v63 = *(_QWORD *)&v136[0];
              }
              v68 = *(_QWORD *)(v0 + 712);
              v69 = *(_QWORD *)(v0 + 688);
              v70 = (_OWORD *)(*(_QWORD *)(v63 + 48) + 176 * v64);
              v72 = v70[1];
              v71 = v70[2];
              *v123 = *v70;
              *(_OWORD *)(v0 + 208) = v72;
              *(_OWORD *)(v0 + 224) = v71;
              v73 = v70[6];
              v75 = v70[3];
              v74 = v70[4];
              *(_OWORD *)(v0 + 272) = v70[5];
              *(_OWORD *)(v0 + 288) = v73;
              *(_OWORD *)(v0 + 240) = v75;
              *(_OWORD *)(v0 + 256) = v74;
              v76 = v70[10];
              v78 = v70[7];
              v77 = v70[8];
              *(_OWORD *)(v0 + 336) = v70[9];
              *(_OWORD *)(v0 + 352) = v76;
              *(_OWORD *)(v0 + 304) = v78;
              *(_OWORD *)(v0 + 320) = v77;
              sub_23B6F5744((uint64_t)v123);
              v61(v69, *(_QWORD *)(v63 + 56) + *(_QWORD *)(v6 + 72) * v64, v68);
              sub_23B7824F4(v64, v63);
              v134 = (_QWORD *)v63;
              swift_bridgeObjectRelease();
              v79 = v69;
              v80 = 0;
              v81 = v68;
            }
            else
            {
              v81 = *(_QWORD *)(v0 + 712);
              v79 = *(_QWORD *)(v0 + 688);
              v80 = 1;
            }
            v62(v79, v80, 1, v81);
            sub_23B6F5744((uint64_t)v131);
            sub_23B6F7190(*(_QWORD *)(v0 + 688), &qword_254302B18);
          }
          else
          {
            v61(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 712));
            v82 = v134;
            v83 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v136[0] = v134;
            v4 = (_OWORD *)(v0 + 16);
            v85 = sub_23B780558((uint64_t)v131);
            v86 = v134[2];
            v87 = (v84 & 1) == 0;
            v88 = v86 + v87;
            if (__OFADD__(v86, v87))
            {
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              swift_once();
LABEL_47:
              v107 = sub_23B7969BC();
              __swift_project_value_buffer(v107, (uint64_t)qword_2543090D0);
              v108 = sub_23B7969A4();
              v109 = sub_23B796C38();
              if (os_log_type_enabled(v108, v109))
              {
                v110 = (uint8_t *)swift_slowAlloc();
                v111 = swift_slowAlloc();
                *(_QWORD *)&v136[0] = v111;
                *(_DWORD *)v110 = 136446210;
                *(_QWORD *)(v0 + 632) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, (uint64_t *)v136);
                sub_23B796C68();
                _os_log_impl(&dword_23B6EB000, v108, v109, "%{public}s Checking if we have any valid cached location that needs rev-geo", v110, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B86C754](v111, -1, -1);
                MEMORY[0x23B86C754](v110, -1, -1);
              }

              v112 = *(_BYTE *)(v0 + 840);
              swift_beginAccess();
              v113 = swift_bridgeObjectRetain();
              v114 = (unint64_t)sub_23B723E74(v113, (uint64_t *)&v134, v112);
              swift_bridgeObjectRelease();
              swift_retain_n();
              v115 = sub_23B7969A4();
              v116 = sub_23B796C38();
              if (os_log_type_enabled(v115, v116))
              {
                v117 = swift_slowAlloc();
                v118 = swift_slowAlloc();
                *(_QWORD *)&v136[0] = v118;
                *(_DWORD *)v117 = 136446723;
                *(_QWORD *)(v0 + 664) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, (uint64_t *)v136);
                sub_23B796C68();
                *(_WORD *)(v117 + 12) = 2160;
                *(_QWORD *)(v0 + 616) = 1752392040;
                sub_23B796C68();
                *(_WORD *)(v117 + 22) = 2081;
                type metadata accessor for Location();
                sub_23B72318C();
                swift_retain();
                v119 = sub_23B7969D4();
                v121 = v120;
                swift_release();
                *(_QWORD *)(v0 + 624) = sub_23B6FB388(v119, v121, (uint64_t *)v136);
                sub_23B796C68();
                swift_bridgeObjectRelease();
                swift_release_n();
                _os_log_impl(&dword_23B6EB000, v115, v116, "%{public}s\ncachedLocations:%{private,mask.hash}s", (uint8_t *)v117, 0x20u);
                swift_arrayDestroy();
                MEMORY[0x23B86C754](v118, -1, -1);
                MEMORY[0x23B86C754](v117, -1, -1);
              }
              else
              {
                swift_release_n();
              }

              swift_release();
              goto LABEL_54;
            }
            v89 = v84;
            if (v134[3] >= v88)
            {
              if ((v83 & 1) == 0)
              {
                sub_23B781B38();
                v82 = *(_QWORD **)&v136[0];
              }
            }
            else
            {
              sub_23B780870(v88, v83);
              v82 = *(_QWORD **)&v136[0];
              v90 = sub_23B780558((uint64_t)v131);
              if ((v89 & 1) != (v91 & 1))
                return sub_23B796EF0();
              v85 = v90;
            }
            v92 = *(_QWORD *)(v0 + 728);
            v93 = *(_QWORD *)(v0 + 712);
            if ((v89 & 1) != 0)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(v82[7] + *(_QWORD *)(v6 + 72) * v85, v92, v93);
            }
            else
            {
              v82[(v85 >> 6) + 8] |= 1 << v85;
              v94 = (_OWORD *)(v82[6] + 176 * v85);
              v96 = *(_OWORD *)(v0 + 96);
              v95 = *(_OWORD *)(v0 + 112);
              v97 = *(_OWORD *)(v0 + 80);
              v94[3] = *(_OWORD *)(v0 + 64);
              v94[4] = v97;
              v94[5] = v96;
              v94[6] = v95;
              v99 = *(_OWORD *)(v0 + 32);
              v98 = *(_OWORD *)(v0 + 48);
              *v94 = *v131;
              v94[1] = v99;
              v94[2] = v98;
              v100 = *(_OWORD *)(v0 + 128);
              v101 = *(_OWORD *)(v0 + 144);
              v102 = *(_OWORD *)(v0 + 176);
              v94[9] = *(_OWORD *)(v0 + 160);
              v94[10] = v102;
              v94[7] = v100;
              v94[8] = v101;
              v61(v82[7] + *(_QWORD *)(v6 + 72) * v85, v92, v93);
              v103 = v82[2];
              v104 = __OFADD__(v103, 1);
              v105 = v103 + 1;
              if (v104)
                goto LABEL_57;
              v82[2] = v105;
              sub_23B6F4E8C((uint64_t)v131);
            }
            v134 = v82;
            swift_bridgeObjectRelease();
            sub_23B6F5744((uint64_t)v131);
          }
          v5 = v130;
          v1 = v132;
          v106 = *(_QWORD *)(v0 + 776);
          (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 712));
          sub_23B700B04(v106, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        }
      }
      v8 = v133 + 1;
      if (v133 + 1 == v129)
      {
        swift_bridgeObjectRelease();
        v3 = (uint64_t)v134;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 16))
  {
    if (qword_254303110 != -1)
      goto LABEL_58;
    goto LABEL_47;
  }
  v114 = sub_23B72D430(MEMORY[0x24BEE4AF8]);
  swift_release();
LABEL_54:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v114);
}

uint64_t sub_23B719D48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v17;

  swift_release();
  if (qword_254303110 != -1)
    swift_once();
  v1 = *(void **)(v0 + 824);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C38();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 824);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v9 = 136446466;
    *(_QWORD *)(v0 + 600) = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, &v17);
    sub_23B796C68();
    *(_WORD *)(v9 + 12) = 2114;
    v12 = v8;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 592) = v13;
    sub_23B796C68();
    *v10 = v13;

    _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s failed with error: %{public}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v11, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 824);
  v15 = sub_23B72D430(MEMORY[0x24BEE4AF8]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v15);
}

uint64_t Session.stopRefreshingLocation(for:priority:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 57) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B71A024()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  unsigned __int8 v5;

  v1 = *(_BYTE *)(v0 + 57);
  v2 = *(_QWORD *)(v0 + 24);
  v5 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v5);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v2 + 40);
  *(_BYTE *)(v0 + 56) = v1;
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  *v3 = v0;
  v3[1] = sub_23B71A0AC;
  return sub_23B757F94(*(_QWORD *)(v0 + 16), (_BYTE *)(v0 + 56));
}

uint64_t sub_23B71A0AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B71A120()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.startRefreshingLocation(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 72) = v1;
  *(_QWORD *)(v2 + 80) = v3;
  *(_BYTE *)(v2 + 69) = *((_BYTE *)a1 + 8);
  *(_BYTE *)(v2 + 70) = *((_BYTE *)a1 + 16);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(a1 + 3);
  *(_QWORD *)(v2 + 104) = a1[5];
  *(_BYTE *)(v2 + 71) = *((_BYTE *)a1 + 48);
  *(_WORD *)(v2 + 136) = *(_WORD *)((char *)a1 + 49);
  *(_BYTE *)(v2 + 138) = *((_BYTE *)a1 + 51);
  *(_BYTE *)(v2 + 139) = *((_BYTE *)a1 + 52);
  return swift_task_switch();
}

uint64_t sub_23B71A188()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;
  char v12;
  unsigned __int8 v13;

  v12 = *(_BYTE *)(v0 + 139);
  v1 = *(_BYTE *)(v0 + 138);
  v2 = *(_WORD *)(v0 + 136);
  v3 = *(_BYTE *)(v0 + 71);
  v4 = *(_QWORD *)(v0 + 104);
  v11 = *(_OWORD *)(v0 + 88);
  v5 = *(_BYTE *)(v0 + 70);
  v6 = *(_BYTE *)(v0 + 69);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 80);
  v13 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v13);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(v0 + 16) = v8;
  *(_BYTE *)(v0 + 24) = v6;
  *(_BYTE *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v11;
  *(_QWORD *)(v0 + 56) = v4;
  *(_BYTE *)(v0 + 64) = v3;
  *(_WORD *)(v0 + 65) = v2;
  *(_BYTE *)(v0 + 67) = v1;
  *(_BYTE *)(v0 + 68) = v12;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v9;
  *v9 = v0;
  v9[1] = sub_23B71A26C;
  return sub_23B6FC5D0(v0 + 16);
}

uint64_t sub_23B71A26C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 128) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B71A2F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71A300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  v1 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_23;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_23;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_23;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
LABEL_5:
    v8 = swift_bridgeObjectRetain();
    result = sub_23B7223B0(v8);
  }
  v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v7 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v7);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_23B71A46C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _QWORD v11[7];
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for Location();
  MEMORY[0x24BDAC7A8](v5);
  v11[1] = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302600);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B798110;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v8;
  v12 = inited;
  swift_bridgeObjectRetain();
  v10 = swift_bridgeObjectRetain();
  sub_23B722260(v10);
  sub_23B725144(v12);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_23B71A594()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_23B71A5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_origin))
  {
    v3 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v3 + 16) && (sub_23B6F564C(2u), (v4 & 1) != 0))
    {
      v5 = swift_bridgeObjectRetain();
      v6 = sub_23B7154D0(v5);
      swift_bridgeObjectRelease();
      sub_23B7229A8(v6, v1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    JUMPOUT(0x23B71A5A0);
  }
  return sub_23B71A594();
}

uint64_t sub_23B71AC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[31] = a5;
  v6[32] = a6;
  v6[30] = a4;
  v6[33] = type metadata accessor for LocationStreamChange();
  v6[34] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v6[35] = v7;
  v6[36] = *(_QWORD *)(v7 - 8);
  v6[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  v6[38] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025C8);
  v6[39] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  v6[40] = swift_task_alloc();
  v8 = type metadata accessor for Location();
  v6[41] = v8;
  v6[42] = *(_QWORD *)(v8 - 8);
  v6[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B71AD74()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[11];

  v2 = *(_OWORD **)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v3 = v2[9];
  v44[8] = v2[8];
  v44[9] = v3;
  v44[10] = v2[10];
  v4 = v2[5];
  v44[4] = v2[4];
  v44[5] = v4;
  v5 = v2[7];
  v44[6] = v2[6];
  v44[7] = v5;
  v6 = v2[1];
  v44[0] = *v2;
  v44[1] = v6;
  v7 = v2[3];
  v44[2] = v2[2];
  v44[3] = v7;
  if ((sub_23B71B380(v44, v1) & 1) != 0)
  {
    v8 = *(_OWORD **)(v0 + 248);
    v10 = v8[1];
    v9 = v8[2];
    *(_OWORD *)(v0 + 16) = *v8;
    *(_OWORD *)(v0 + 32) = v10;
    *(_OWORD *)(v0 + 48) = v9;
    v11 = v8[6];
    v13 = v8[3];
    v12 = v8[4];
    *(_OWORD *)(v0 + 96) = v8[5];
    *(_OWORD *)(v0 + 112) = v11;
    *(_OWORD *)(v0 + 64) = v13;
    *(_OWORD *)(v0 + 80) = v12;
    v14 = v8[10];
    v16 = v8[7];
    v15 = v8[8];
    *(_OWORD *)(v0 + 160) = v8[9];
    *(_OWORD *)(v0 + 176) = v14;
    *(_OWORD *)(v0 + 128) = v16;
    *(_OWORD *)(v0 + 144) = v15;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v17;
    *v17 = v0;
    v17[1] = sub_23B71B084;
    return sub_23B71B7F8(*(_QWORD *)(v0 + 344), (_OWORD *)(v0 + 16), *(_QWORD *)(v0 + 256));
  }
  else
  {
    sub_23B725660(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 344), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v19 = *(_QWORD *)(v0 + 304);
    v20 = *(_QWORD *)(v0 + 280);
    v21 = *(_QWORD *)(v0 + 288);
    v22 = *(_QWORD *)(v0 + 240) + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
    swift_beginAccess();
    sub_23B6FDE3C(v22, v19, &qword_254302EF0);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
    v24 = *(_QWORD *)(v0 + 344);
    if (v23)
    {
      v25 = *(_QWORD *)(v0 + 304);
      sub_23B700B04(*(_QWORD *)(v0 + 344), (uint64_t (*)(_QWORD))type metadata accessor for Location);
      sub_23B6F7190(v25, &qword_254302EF0);
      v26 = 1;
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 304);
      v29 = *(_QWORD *)(v0 + 288);
      v28 = *(_QWORD *)(v0 + 296);
      v31 = *(_QWORD *)(v0 + 272);
      v30 = *(_QWORD *)(v0 + 280);
      v32 = *(_OWORD **)(v0 + 248);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v27, v30);
      sub_23B6F7190(v27, &qword_254302EF0);
      v33 = (_OWORD *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302B10) + 48));
      sub_23B725660(v24, v31, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      v35 = v32[1];
      v34 = v32[2];
      *v33 = *v32;
      v33[1] = v35;
      v33[2] = v34;
      v36 = v32[6];
      v38 = v32[3];
      v37 = v32[4];
      v33[5] = v32[5];
      v33[6] = v36;
      v33[3] = v38;
      v33[4] = v37;
      v39 = v32[10];
      v41 = v32[7];
      v40 = v32[8];
      v33[9] = v32[9];
      v33[10] = v39;
      v33[7] = v41;
      v33[8] = v40;
      swift_storeEnumTagMultiPayload();
      sub_23B6F4E8C((uint64_t)v32);
      sub_23B796B90();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      sub_23B700B04(v24, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      v26 = 0;
    }
    v42 = *(_QWORD *)(v0 + 312);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, v26, 1, v43);
    sub_23B6F7190(v42, &qword_2543025C8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B71B084()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B71B0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v4 = *(_OWORD **)(v0 + 248);
  sub_23B725660(*(_QWORD *)(v0 + 344), v3, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
  swift_beginAccess();
  sub_23B6F4E8C((uint64_t)v4);
  sub_23B7387D4(v3, v4);
  swift_endAccess();
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 240) + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v8, v5, &qword_254302EF0);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v10 = *(_QWORD *)(v0 + 344);
  if (v9)
  {
    v11 = *(_QWORD *)(v0 + 304);
    sub_23B700B04(*(_QWORD *)(v0 + 344), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F7190(v11, &qword_254302EF0);
    v12 = 1;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 304);
    v15 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 272);
    v16 = *(_QWORD *)(v0 + 280);
    v18 = *(_OWORD **)(v0 + 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v16);
    sub_23B6F7190(v13, &qword_254302EF0);
    v19 = (_OWORD *)(v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302B10) + 48));
    sub_23B725660(v10, v17, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v21 = v18[1];
    v20 = v18[2];
    *v19 = *v18;
    v19[1] = v21;
    v19[2] = v20;
    v22 = v18[6];
    v24 = v18[3];
    v23 = v18[4];
    v19[5] = v18[5];
    v19[6] = v22;
    v19[3] = v24;
    v19[4] = v23;
    v25 = v18[10];
    v27 = v18[7];
    v26 = v18[8];
    v19[9] = v18[9];
    v19[10] = v25;
    v19[7] = v27;
    v19[8] = v26;
    swift_storeEnumTagMultiPayload();
    sub_23B6F4E8C((uint64_t)v18);
    sub_23B796B90();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    sub_23B700B04(v10, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v12 = 0;
  }
  v28 = *(_QWORD *)(v0 + 312);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, v12, 1, v29);
  sub_23B6F7190(v28, &qword_2543025C8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71B380(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  int v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[4];
  _OWORD v39[11];
  _BYTE v40[192];
  _QWORD v41[26];

  v5 = type metadata accessor for Location();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[9];
  v39[8] = a1[8];
  v39[9] = v9;
  v39[10] = a1[10];
  v10 = a1[5];
  v39[4] = a1[4];
  v39[5] = v10;
  v11 = a1[7];
  v39[6] = a1[6];
  v39[7] = v11;
  v12 = a1[3];
  v39[2] = a1[2];
  v39[3] = v12;
  v13 = a1[1];
  v39[0] = *a1;
  v39[1] = v13;
  sub_23B6FC8F4(a2 + *(int *)(v6 + 20), (uint64_t)v40, &qword_256A48360);
  sub_23B6FC8F4((uint64_t)v40, (uint64_t)v41, &qword_256A48360);
  if (sub_23B725120((uint64_t)v41) == 1)
    goto LABEL_2;
  if (v41[19])
  {
LABEL_4:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14 = 1;
    goto LABEL_5;
  }
  v14 = 1;
  if (!v41[21] && !v41[23] && !v41[15])
  {
    if (!v41[17])
    {
LABEL_2:
      v14 = 0;
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    goto LABEL_4;
  }
LABEL_5:
  v15 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_origin);
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesNeedingReverseGeocoding);
  swift_beginAccess();
  v17 = *v16;
  swift_bridgeObjectRetain();
  v18 = sub_23B715238((uint64_t)v39, v17);
  swift_bridgeObjectRelease();
  if (qword_254303110 != -1)
    swift_once();
  v19 = (v14 ^ 1) & ((v15 == 1) | v18);
  v20 = sub_23B7969BC();
  __swift_project_value_buffer(v20, (uint64_t)qword_2543090D0);
  sub_23B725660(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  sub_23B6F4E8C((uint64_t)v39);
  v21 = sub_23B7969A4();
  v22 = sub_23B796C14();
  if (os_log_type_enabled(v21, v22))
  {
    v35 = v15 == 1;
    v23 = swift_slowAlloc();
    v34 = v14;
    v24 = v23;
    v25 = swift_slowAlloc();
    v36 = v25;
    *(_DWORD *)v24 = 141559811;
    v37 = 1752392040;
    v38[0] = v25;
    sub_23B796C68();
    *(_WORD *)(v24 + 12) = 2081;
    HIDWORD(v33) = v18;
    v26 = v19;
    v28 = *((_QWORD *)&v39[0] + 1);
    v27 = *(_QWORD *)&v39[0];
    swift_bridgeObjectRetain();
    v37 = sub_23B6FB388(v27, v28, v38);
    sub_23B796C68();
    v19 = v26;
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)v39);
    *(_WORD *)(v24 + 22) = 2160;
    v37 = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v24 + 32) = 2081;
    Location.description.getter();
    v37 = sub_23B6FB388(v29, v30, v38);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B700B04((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    *(_WORD *)(v24 + 42) = 1024;
    LODWORD(v37) = v26;
    sub_23B796C68();
    *(_WORD *)(v24 + 48) = 1024;
    LODWORD(v37) = v34;
    sub_23B796C68();
    *(_WORD *)(v24 + 54) = 1024;
    LODWORD(v37) = v35;
    sub_23B796C68();
    *(_WORD *)(v24 + 60) = 1024;
    LODWORD(v37) = BYTE4(v33) & 1;
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v21, v22, "Handle: %{private,mask.hash}s Location: %{private,mask.hash}s isReverseGeocodingNeeded: %{BOOL}d, hasAddress: %{BOOL}d, originIsMessages: %{BOOL}d, handleNeedsRevGeo: %{BOOL}d", (uint8_t *)v24, 0x42u);
    v31 = v36;
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v31, -1, -1);
    MEMORY[0x23B86C754](v24, -1, -1);
  }
  else
  {
    sub_23B6F5744((uint64_t)v39);
    sub_23B700B04((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  }

  return v19;
}

uint64_t sub_23B71B7F8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)(v4 + 1120) = v3;
  *(_QWORD *)(v4 + 1112) = a3;
  *(_QWORD *)(v4 + 1104) = a2;
  *(_QWORD *)(v4 + 1096) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  *(_QWORD *)(v4 + 1128) = swift_task_alloc();
  v6 = type metadata accessor for Location();
  *(_QWORD *)(v4 + 1136) = v6;
  *(_QWORD *)(v4 + 1144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 1152) = swift_task_alloc();
  *(_QWORD *)(v4 + 1160) = swift_task_alloc();
  v7 = a2[9];
  *(_OWORD *)(v4 + 800) = a2[8];
  *(_OWORD *)(v4 + 816) = v7;
  *(_OWORD *)(v4 + 832) = a2[10];
  v8 = a2[5];
  *(_OWORD *)(v4 + 736) = a2[4];
  *(_OWORD *)(v4 + 752) = v8;
  v9 = a2[7];
  *(_OWORD *)(v4 + 768) = a2[6];
  *(_OWORD *)(v4 + 784) = v9;
  v10 = a2[1];
  *(_OWORD *)(v4 + 672) = *a2;
  *(_OWORD *)(v4 + 688) = v10;
  v11 = a2[3];
  *(_OWORD *)(v4 + 704) = a2[2];
  *(_OWORD *)(v4 + 720) = v11;
  return swift_task_switch();
}

uint64_t sub_23B71B8D4()
{
  uint64_t v0;
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  __int128 v15[11];

  v1 = *(__int128 **)(v0 + 1104);
  v2 = v1[9];
  v15[8] = v1[8];
  v15[9] = v2;
  v15[10] = v1[10];
  v3 = v1[5];
  v15[4] = v1[4];
  v15[5] = v3;
  v4 = v1[7];
  v15[6] = v1[6];
  v15[7] = v4;
  v5 = v1[1];
  v15[0] = *v1;
  v15[1] = v5;
  v6 = v1[3];
  v15[2] = v1[2];
  v15[3] = v6;
  v7 = sub_23B71C7C8(v15);
  v8 = *(_OWORD *)(v0 + 816);
  *(_OWORD *)(v0 + 976) = *(_OWORD *)(v0 + 800);
  *(_OWORD *)(v0 + 992) = v8;
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 832);
  v9 = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 912) = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 928) = v9;
  v10 = *(_OWORD *)(v0 + 784);
  *(_OWORD *)(v0 + 944) = *(_OWORD *)(v0 + 768);
  *(_OWORD *)(v0 + 960) = v10;
  v11 = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 864) = v11;
  v12 = *(_OWORD *)(v0 + 720);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 896) = v12;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1168) = v13;
  *v13 = v0;
  v13[1] = sub_23B71B9C8;
  return sub_23B775768(v0 + 16, (uint64_t *)(v0 + 848), *(_QWORD *)(v0 + 1112), v7 & 1);
}

uint64_t sub_23B71B9C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B71BA30()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t __dst[35];

  v1 = *(int **)(v0 + 1136);
  v2 = *(_QWORD *)(v0 + 1112);
  v3 = *(_QWORD *)(v0 + 1096);
  memcpy(__dst, (const void *)(v0 + 16), 0x110uLL);
  PlaceMark.init(address:)(__dst, (_OWORD *)(v0 + 288));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 608) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 624) = v5;
  v6 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 640) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 656) = v6;
  v7 = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 544) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 560) = v7;
  v8 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 576) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 592) = v8;
  v9 = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v0 + 496) = v9;
  v10 = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 528) = v10;
  nullsub_1(v0 + 480);
  v11 = *(_QWORD *)(v2 + v1[6]);
  v12 = *(_QWORD *)(v2 + v1[7]);
  v13 = *(_QWORD *)(v2 + v1[8]);
  v14 = *(_QWORD *)(v2 + v1[9]);
  v15 = *(_QWORD *)(v2 + v1[10]);
  v16 = *(_QWORD *)(v2 + v1[11]);
  v17 = *(_QWORD *)(v2 + v1[12]);
  v18 = *(_QWORD *)(v2 + v1[13]);
  v19 = *(_QWORD *)(v2 + v1[14]);
  v20 = *(_BYTE *)(v2 + v1[15]);
  LOBYTE(v2) = *(_BYTE *)(v2 + v1[16]);
  sub_23B6FC8F4(v0 + 480, v3 + v1[5], &qword_256A48360);
  *(_QWORD *)(v3 + v1[6]) = v11;
  *(_QWORD *)(v3 + v1[7]) = v12;
  *(_QWORD *)(v3 + v1[8]) = v13;
  *(_QWORD *)(v3 + v1[9]) = v14;
  *(_QWORD *)(v3 + v1[10]) = v15;
  *(_QWORD *)(v3 + v1[11]) = v16;
  *(_QWORD *)(v3 + v1[12]) = v17;
  *(_QWORD *)(v3 + v1[13]) = v18;
  *(_QWORD *)(v3 + v1[14]) = v19;
  *(_BYTE *)(v3 + v1[15]) = v20;
  *(_BYTE *)(v3 + v1[16]) = v2;
  v21 = qword_254303110;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = *(_QWORD *)(v0 + 1160);
  v23 = *(_QWORD *)(v0 + 1096);
  v24 = sub_23B7969BC();
  __swift_project_value_buffer(v24, (uint64_t)qword_2543090D0);
  sub_23B725660(v23, v22, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v25 = sub_23B7969A4();
  v26 = sub_23B796C38();
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(_QWORD *)(v0 + 1160);
  if (v27)
  {
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    __dst[0] = v30;
    *(_DWORD *)v29 = 141558275;
    *(_QWORD *)(v0 + 1080) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v29 + 12) = 2081;
    Location.description.getter();
    *(_QWORD *)(v0 + 1088) = sub_23B6FB388(v31, v32, __dst);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B700B04(v28, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    _os_log_impl(&dword_23B6EB000, v25, v26, "Rev-geo succeeded! Location: %{private,mask.hash}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v30, -1, -1);
    MEMORY[0x23B86C754](v29, -1, -1);
  }
  else
  {
    sub_23B700B04(*(_QWORD *)(v0 + 1160), (uint64_t (*)(_QWORD))type metadata accessor for Location);
  }

  v33 = *(_QWORD *)(v0 + 1144);
  v34 = *(_QWORD *)(v0 + 1136);
  v35 = *(_QWORD *)(v0 + 1128);
  sub_23B725660(*(_QWORD *)(v0 + 1096), v35, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v34);
  swift_beginAccess();
  sub_23B6F4E8C(v0 + 672);
  sub_23B7387D4(v35, (_OWORD *)(v0 + 672));
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71BE24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  if (qword_254303110 != -1)
    swift_once();
  v1 = *(void **)(v0 + 1176);
  v2 = *(_QWORD *)(v0 + 1152);
  v3 = *(_QWORD *)(v0 + 1112);
  v4 = sub_23B7969BC();
  __swift_project_value_buffer(v4, (uint64_t)qword_2543090D0);
  sub_23B725660(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v5 = v1;
  v6 = v1;
  v7 = sub_23B7969A4();
  v8 = sub_23B796C20();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 1176);
  v11 = *(_QWORD *)(v0 + 1152);
  if (v9)
  {
    v12 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v23 = v22;
    *(_DWORD *)v12 = 136446723;
    *(_QWORD *)(v0 + 1072) = v10;
    v13 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v14 = sub_23B796A4C();
    *(_QWORD *)(v0 + 1064) = sub_23B6FB388(v14, v15, &v23);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 12) = 2160;
    *(_QWORD *)(v0 + 1048) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v12 + 22) = 2081;
    Location.description.getter();
    *(_QWORD *)(v0 + 1056) = sub_23B6FB388(v16, v17, &v23);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B700B04(v11, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    _os_log_impl(&dword_23B6EB000, v7, v8, "Rev-geo failed %{public}s. Returning original location: %{private,mask.hash}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v22, -1, -1);
    MEMORY[0x23B86C754](v12, -1, -1);

  }
  else
  {

    sub_23B700B04(v11, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  }
  sub_23B725660(*(_QWORD *)(v0 + 1112), *(_QWORD *)(v0 + 1096), (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v18 = *(_QWORD *)(v0 + 1144);
  v19 = *(_QWORD *)(v0 + 1136);
  v20 = *(_QWORD *)(v0 + 1128);
  sub_23B725660(*(_QWORD *)(v0 + 1096), v20, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v19);
  swift_beginAccess();
  sub_23B6F4E8C(v0 + 672);
  sub_23B7387D4(v20, (_OWORD *)(v0 + 672));
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71C17C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[52] = a1;
  v2[53] = v1;
  v2[54] = type metadata accessor for LocationStreamChange();
  v2[55] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v2[56] = v3;
  v2[57] = *(_QWORD *)(v3 - 8);
  v2[58] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  v2[59] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025C8);
  v2[60] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  v2[61] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B71C270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  _OWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_OWORD *)(v0 + 16);
    v67 = (_OWORD *)(v0 + 192);
    v4 = *(_QWORD *)(v0 + 456);
    v5 = *(_QWORD *)(v0 + 424);
    v6 = (uint64_t *)(v5 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationForHandles);
    v7 = v5 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
    v8 = (__int128 *)(v1 + 32);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v68 = v6;
    v69 = v4;
    v66 = v7;
    do
    {
      v22 = *v8;
      v23 = v8[2];
      *(_OWORD *)(v0 + 32) = v8[1];
      *(_OWORD *)(v0 + 48) = v23;
      *v3 = v22;
      v24 = v8[3];
      v25 = v8[4];
      v26 = v8[6];
      *(_OWORD *)(v0 + 96) = v8[5];
      *(_OWORD *)(v0 + 112) = v26;
      *(_OWORD *)(v0 + 64) = v24;
      *(_OWORD *)(v0 + 80) = v25;
      v27 = v8[7];
      v28 = v8[8];
      v29 = v8[10];
      *(_OWORD *)(v0 + 160) = v8[9];
      *(_OWORD *)(v0 + 176) = v29;
      *(_OWORD *)(v0 + 128) = v27;
      *(_OWORD *)(v0 + 144) = v28;
      sub_23B6F4E8C(v0 + 16);
      if (qword_254303110 != -1)
        swift_once();
      v30 = sub_23B7969BC();
      __swift_project_value_buffer(v30, (uint64_t)qword_2543090D0);
      sub_23B6F4E8C(v0 + 16);
      v31 = sub_23B7969A4();
      v32 = sub_23B796C38();
      v70 = v2;
      if (os_log_type_enabled(v31, v32))
      {
        v34 = *(_QWORD *)(v0 + 16);
        v33 = *(_QWORD *)(v0 + 24);
        v35 = swift_slowAlloc();
        v36 = swift_slowAlloc();
        v71 = v36;
        *(_DWORD *)v35 = 141558275;
        *(_QWORD *)(v35 + 4) = 1752392040;
        *(_WORD *)(v35 + 12) = 2081;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v35 + 14) = sub_23B6FB388(v34, v33, &v71);
        v6 = v68;
        swift_bridgeObjectRelease();
        sub_23B6F5744(v0 + 16);
        _os_log_impl(&dword_23B6EB000, v31, v32, "Removing cached location for handle: %{private,mask.hash}s.", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B86C754](v36, -1, -1);
        v37 = v35;
        v4 = v69;
        MEMORY[0x23B86C754](v37, -1, -1);
      }
      else
      {
        sub_23B6F5744(v0 + 16);
      }

      swift_beginAccess();
      swift_bridgeObjectRetain();
      v38 = sub_23B780558(v0 + 16);
      v40 = v39;
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v42 = *v6;
        v71 = *v6;
        *v6 = 0x8000000000000000;
        v43 = v6;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23B781DE8();
          v42 = v71;
        }
        v44 = *(_QWORD *)(v0 + 488);
        v45 = (_OWORD *)(*(_QWORD *)(v42 + 48) + 176 * v38);
        v47 = v45[1];
        v46 = v45[2];
        *v67 = *v45;
        *(_OWORD *)(v0 + 208) = v47;
        *(_OWORD *)(v0 + 224) = v46;
        v48 = v45[6];
        v50 = v45[3];
        v49 = v45[4];
        *(_OWORD *)(v0 + 272) = v45[5];
        *(_OWORD *)(v0 + 288) = v48;
        *(_OWORD *)(v0 + 240) = v50;
        *(_OWORD *)(v0 + 256) = v49;
        v51 = v45[10];
        v53 = v45[7];
        v52 = v45[8];
        *(_OWORD *)(v0 + 336) = v45[9];
        *(_OWORD *)(v0 + 352) = v51;
        *(_OWORD *)(v0 + 304) = v53;
        *(_OWORD *)(v0 + 320) = v52;
        sub_23B6F5744((uint64_t)v67);
        v54 = *(_QWORD *)(v42 + 56);
        v55 = type metadata accessor for Location();
        v56 = *(_QWORD *)(v55 - 8);
        sub_23B6FF360(v54 + *(_QWORD *)(v56 + 72) * v38, v44, (uint64_t (*)(_QWORD))type metadata accessor for Location);
        sub_23B782500(v38, v42);
        *v43 = v42;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v44, 0, 1, v55);
        v4 = v69;
        v6 = v43;
        v7 = v66;
      }
      else
      {
        v57 = *(_QWORD *)(v0 + 488);
        v58 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
      }
      v59 = *(_QWORD *)(v0 + 472);
      v60 = *(_QWORD *)(v0 + 448);
      sub_23B6F7190(*(_QWORD *)(v0 + 488), (uint64_t *)&unk_254302530);
      swift_endAccess();
      sub_23B6FDE3C(v7, v59, &qword_254302EF0);
      v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v59, 1, v60);
      v62 = *(_QWORD *)(v0 + 472);
      v63 = *(_QWORD *)(v0 + 480);
      if (v61)
      {
        sub_23B6F5744(v0 + 16);
        sub_23B6F7190(v62, &qword_254302EF0);
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 1, 1, v64);
      }
      else
      {
        v9 = *(_QWORD *)(v0 + 464);
        v11 = *(_OWORD **)(v0 + 440);
        v10 = *(_QWORD *)(v0 + 448);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v69 + 16))(v9, *(_QWORD *)(v0 + 472), v10);
        sub_23B6F7190(v62, &qword_254302EF0);
        v13 = *(_OWORD *)(v0 + 32);
        v12 = *(_OWORD *)(v0 + 48);
        *v11 = *v3;
        v11[1] = v13;
        v11[2] = v12;
        v14 = *(_OWORD *)(v0 + 112);
        v16 = *(_OWORD *)(v0 + 64);
        v15 = *(_OWORD *)(v0 + 80);
        v11[5] = *(_OWORD *)(v0 + 96);
        v11[6] = v14;
        v11[3] = v16;
        v11[4] = v15;
        v17 = *(_OWORD *)(v0 + 176);
        v19 = *(_OWORD *)(v0 + 128);
        v18 = *(_OWORD *)(v0 + 144);
        v11[9] = *(_OWORD *)(v0 + 160);
        v11[10] = v17;
        v11[7] = v19;
        v11[8] = v18;
        swift_storeEnumTagMultiPayload();
        v4 = v69;
        sub_23B796B90();
        v20 = v10;
        v6 = v68;
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v9, v20);
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v63, 0, 1, v21);
      }
      sub_23B6F7190(*(_QWORD *)(v0 + 480), &qword_2543025C8);
      v8 += 11;
      v2 = v70 - 1;
    }
    while (v70 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71C7C8(__int128 *a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  __int128 *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  __int128 *j;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  __int128 *v85;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  int64_t v95;
  __int128 *i;
  uint64_t v97;
  _OWORD v98[11];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;

  v2 = a1[9];
  v129 = a1[8];
  v130 = v2;
  v131 = a1[10];
  v3 = a1[5];
  v125 = a1[4];
  v126 = v3;
  v4 = a1[7];
  v127 = a1[6];
  v128 = v4;
  v5 = a1[1];
  v121 = *a1;
  v122 = v5;
  v6 = a1[3];
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing);
  v123 = a1[2];
  v124 = v6;
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16) || (v9 = sub_23B6F564C(3u), (v10 & 1) == 0))
  {
    if (qword_254303110 != -1)
LABEL_61:
      swift_once();
    v22 = sub_23B7969BC();
    __swift_project_value_buffer(v22, (uint64_t)qword_2543090D0);
    sub_23B6F4E8C((uint64_t)&v121);
    sub_23B6F4E8C((uint64_t)&v121);
    v23 = sub_23B7969A4();
    v24 = sub_23B796C14();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v99 = v26;
      *(_DWORD *)v25 = 141558275;
      *(_QWORD *)&v110 = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v25 + 12) = 2081;
      v118 = v129;
      v119 = v130;
      v120 = v131;
      v114 = v125;
      v115 = v126;
      v116 = v127;
      v117 = v128;
      v110 = v121;
      v111 = v122;
      v112 = v123;
      v113 = v124;
      v27 = Handle.description.getter();
      *(_QWORD *)&v110 = sub_23B6FB388(v27, v28, (uint64_t *)&v99);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B6F5744((uint64_t)&v121);
      sub_23B6F5744((uint64_t)&v121);
      _os_log_impl(&dword_23B6EB000, v23, v24, "%{private,mask.hash}s not subscribed to background proactive", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v26, -1, -1);
      MEMORY[0x23B86C754](v25, -1, -1);
    }
    else
    {
      sub_23B6F5744((uint64_t)&v121);
      sub_23B6F5744((uint64_t)&v121);
    }

    goto LABEL_48;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_bridgeObjectRetain();
  v93 = sub_23B715238((uint64_t)&v121, v11);
  swift_bridgeObjectRelease();
  v12 = *v7;
  v15 = *(_QWORD *)(*v7 + 64);
  v14 = (__int128 *)(*v7 + 64);
  v13 = v15;
  v16 = 1 << *(_BYTE *)(v12 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v13;
  v19 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain();
  v21 = 0;
  v94 = v12;
  v95 = v19;
  for (i = v14; ; v14 = i)
  {
    do
    {
LABEL_12:
      if (v18)
      {
        v29 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v30 = v29 | (v21 << 6);
      }
      else
      {
        v31 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
          goto LABEL_61;
        }
        if (v31 >= v19)
        {
LABEL_50:
          swift_release();
          v83 = v93;
          return v83 & 1;
        }
        v32 = *((_QWORD *)v14 + v31);
        ++v21;
        if (!v32)
        {
          v21 = v31 + 1;
          if (v31 + 1 >= v19)
            goto LABEL_50;
          v32 = *((_QWORD *)v14 + v21);
          if (!v32)
          {
            v21 = v31 + 2;
            if (v31 + 2 >= v19)
              goto LABEL_50;
            v32 = *((_QWORD *)v14 + v21);
            if (!v32)
            {
              v33 = v31 + 3;
              if (v33 >= v19)
                goto LABEL_50;
              v32 = *((_QWORD *)v14 + v33);
              if (!v32)
              {
                while (1)
                {
                  v21 = v33 + 1;
                  if (__OFADD__(v33, 1))
                    break;
                  if (v21 >= v19)
                    goto LABEL_50;
                  v32 = *((_QWORD *)v14 + v21);
                  ++v33;
                  if (v32)
                    goto LABEL_29;
                }
                __break(1u);
                goto LABEL_62;
              }
              v21 = v33;
            }
          }
        }
LABEL_29:
        v18 = (v32 - 1) & v32;
        v30 = __clz(__rbit64(v32)) + (v21 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 48) + v30);
      v34 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v30);
    }
    while (!*(_QWORD *)(v34 + 16));
    v35 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 48) + v30);
    sub_23B796F44();
    sub_23B796A58();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    v36 = sub_23B796F74();
    v37 = -1 << *(_BYTE *)(v34 + 32);
    v38 = v36 & ~v37;
    v97 = v34 + 56;
    if (((*(_QWORD *)(v34 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
      break;
    swift_bridgeObjectRelease();
LABEL_11:
    v19 = v95;
  }
  v39 = (__int128 *)(*(_QWORD *)(v34 + 48) + 176 * v38);
  v41 = v39[1];
  v40 = v39[2];
  v110 = *v39;
  v111 = v41;
  v112 = v40;
  v42 = v39[3];
  v43 = v39[4];
  v44 = v39[6];
  v115 = v39[5];
  v116 = v44;
  v113 = v42;
  v114 = v43;
  v45 = v39[7];
  v46 = v39[8];
  v47 = v39[10];
  v119 = v39[9];
  v120 = v47;
  v117 = v45;
  v118 = v46;
  v48 = sub_23B796A58();
  v50 = v49;
  if (v48 == sub_23B796A58() && v50 == v51)
  {
    sub_23B6F4E8C((uint64_t)&v110);
    swift_bridgeObjectRelease_n();
    v85 = &v110;
LABEL_53:
    sub_23B6F5744((uint64_t)v85);
    goto LABEL_54;
  }
  v52 = sub_23B796ECC();
  sub_23B6F4E8C((uint64_t)&v110);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B6F5744((uint64_t)&v110);
  if ((v52 & 1) != 0)
    goto LABEL_54;
  v53 = ~v37;
  v54 = (v38 + 1) & v53;
  if (((*(_QWORD *)(v97 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8)) >> v54) & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v12 = v94;
    goto LABEL_11;
  }
  v55 = (__int128 *)(*(_QWORD *)(v34 + 48) + 176 * v54);
  v57 = v55[1];
  v56 = v55[2];
  v99 = *v55;
  v100 = v57;
  v101 = v56;
  v58 = v55[3];
  v59 = v55[4];
  v60 = v55[6];
  v104 = v55[5];
  v105 = v60;
  v102 = v58;
  v103 = v59;
  v61 = v55[7];
  v62 = v55[8];
  v63 = v55[10];
  v108 = v55[9];
  v109 = v63;
  v106 = v61;
  v107 = v62;
  v64 = sub_23B796A58();
  v66 = v65;
  if (v64 == sub_23B796A58() && v66 == v67)
  {
    sub_23B6F4E8C((uint64_t)&v99);
    swift_bridgeObjectRelease_n();
    v85 = &v99;
    goto LABEL_53;
  }
  v68 = sub_23B796ECC();
  sub_23B6F4E8C((uint64_t)&v99);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  for (j = &v99; ; j = v98)
  {
    sub_23B6F5744((uint64_t)j);
    if ((v68 & 1) != 0)
      break;
    v54 = (v54 + 1) & v53;
    if (((*(_QWORD *)(v97 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8)) >> v54) & 1) == 0)
      goto LABEL_10;
    v70 = (_OWORD *)(*(_QWORD *)(v34 + 48) + 176 * v54);
    v72 = v70[1];
    v71 = v70[2];
    v98[0] = *v70;
    v98[1] = v72;
    v98[2] = v71;
    v73 = v70[3];
    v74 = v70[4];
    v75 = v70[6];
    v98[5] = v70[5];
    v98[6] = v75;
    v98[3] = v73;
    v98[4] = v74;
    v76 = v70[7];
    v77 = v70[8];
    v78 = v70[10];
    v98[9] = v70[9];
    v98[10] = v78;
    v98[7] = v76;
    v98[8] = v77;
    v79 = sub_23B796A58();
    v81 = v80;
    if (v79 == sub_23B796A58() && v81 == v82)
    {
      sub_23B6F4E8C((uint64_t)v98);
      swift_bridgeObjectRelease_n();
      v85 = v98;
      goto LABEL_53;
    }
    v68 = sub_23B796ECC();
    sub_23B6F4E8C((uint64_t)v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_54:
  swift_bridgeObjectRelease();
  v12 = v94;
  if (qword_254303110 == -1)
    goto LABEL_55;
LABEL_62:
  v35 = v20;
  swift_once();
LABEL_55:
  v86 = sub_23B7969BC();
  __swift_project_value_buffer(v86, (uint64_t)qword_2543090D0);
  sub_23B6F4E8C((uint64_t)&v121);
  sub_23B6F4E8C((uint64_t)&v121);
  v21 = sub_23B7969A4();
  v87 = sub_23B796C14();
  if (os_log_type_enabled((os_log_t)v21, v87))
  {
    v88 = swift_slowAlloc();
    v89 = swift_slowAlloc();
    *(_QWORD *)&v98[0] = v89;
    *(_DWORD *)v88 = 141558531;
    *(_QWORD *)&v99 = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v88 + 12) = 2081;
    v107 = v129;
    v108 = v130;
    v109 = v131;
    v103 = v125;
    v104 = v126;
    v105 = v127;
    v106 = v128;
    v99 = v121;
    v100 = v122;
    v101 = v123;
    v102 = v124;
    v14 = &v99;
    v90 = Handle.description.getter();
    *(_QWORD *)&v99 = sub_23B6FB388(v90, v91, (uint64_t *)v98);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)&v121);
    sub_23B6F5744((uint64_t)&v121);
    *(_WORD *)(v88 + 22) = 2080;
    v19 = 0xE800000000000000;
    v92 = 0x776F6C6C6168732ELL;
    switch(v35)
    {
      case 0:
        v92 = 0xD000000000000015;
        v19 = 0x800000023B7A0120;
        break;
      case 1:
        break;
      case 2:
        v19 = 0xE500000000000000;
        v92 = 0x6576696C2ELL;
        break;
      default:
        goto LABEL_12;
    }
    *(_QWORD *)&v99 = sub_23B6FB388(v92, v19, (uint64_t *)v98);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B6EB000, (os_log_t)v21, v87, "%{private,mask.hash}s also subscribed to %s", (uint8_t *)v88, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v89, -1, -1);
    MEMORY[0x23B86C754](v88, -1, -1);
    swift_release();

  }
  else
  {

    sub_23B6F5744((uint64_t)&v121);
    sub_23B6F5744((uint64_t)&v121);
    swift_release();
  }
LABEL_48:
  v83 = 0;
  return v83 & 1;
}

uint64_t sub_23B71D174(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[47] = a1;
  v2[48] = v1;
  v3 = sub_23B7968D8();
  v2[49] = v3;
  v2[50] = *(_QWORD *)(v3 - 8);
  v2[51] = swift_task_alloc();
  v2[52] = *(_QWORD *)(type metadata accessor for Location() - 8);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302588);
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B71D254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  _QWORD *v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 528) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-(-1 << v3) < 64)
    v4 = ~(-1 << -(char)(-1 << v3));
  v6 = v4 & *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v0 + 472) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = 0;
    v8 = __clz(__rbit64(v6));
    v9 = (v6 - 1) & v6;
LABEL_5:
    v10 = *(void **)(v0 + 456);
    v11 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 176 * v8);
    v13 = v11[1];
    v12 = v11[2];
    *(_OWORD *)(v0 + 192) = *v11;
    *(_OWORD *)(v0 + 208) = v13;
    *(_OWORD *)(v0 + 224) = v12;
    v14 = v11[6];
    v16 = v11[3];
    v15 = v11[4];
    *(_OWORD *)(v0 + 272) = v11[5];
    *(_OWORD *)(v0 + 288) = v14;
    *(_OWORD *)(v0 + 240) = v16;
    *(_OWORD *)(v0 + 256) = v15;
    v17 = v11[10];
    v19 = v11[7];
    v18 = v11[8];
    *(_OWORD *)(v0 + 336) = v11[9];
    *(_OWORD *)(v0 + 352) = v17;
    *(_OWORD *)(v0 + 304) = v19;
    *(_OWORD *)(v0 + 320) = v18;
    memmove(v10, v11, 0xB0uLL);
    v20 = *(_QWORD *)(v2 + 56) + *(_QWORD *)(v1 + 72) * v8;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    sub_23B725660(v20, (uint64_t)v10 + *(int *)(v21 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 0, 1, v21);
    sub_23B6F4E8C(v0 + 192);
    goto LABEL_12;
  }
  v22 = 63 - v5;
  if ((unint64_t)(63 - v5) <= 0x7F)
  {
    v7 = 0;
  }
  else
  {
    v23 = *(_QWORD *)(v2 + 72);
    if (v23)
    {
      v7 = 1;
LABEL_9:
      v9 = (v23 - 1) & v23;
      v8 = __clz(__rbit64(v23)) + (v7 << 6);
      goto LABEL_5;
    }
    if (v22 < 0xC0)
    {
      v7 = 1;
    }
    else
    {
      v23 = *(_QWORD *)(v2 + 80);
      if (v23)
      {
        v7 = 2;
        goto LABEL_9;
      }
      if (v22 < 0x100)
      {
        v7 = 2;
      }
      else
      {
        v23 = *(_QWORD *)(v2 + 88);
        if (v23)
        {
          v7 = 3;
          goto LABEL_9;
        }
        if (v22 < 0x140)
        {
          v7 = 3;
        }
        else
        {
          v23 = *(_QWORD *)(v2 + 96);
          if (v23)
          {
            v7 = 4;
            goto LABEL_9;
          }
          v50 = 0;
          v7 = (v22 >> 6) - 1;
          while ((v22 >> 6) - 5 != v50)
          {
            v23 = *(_QWORD *)(v2 + 104 + 8 * v50++);
            if (v23)
            {
              v7 = v50 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  v24 = *(_QWORD *)(v0 + 456);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v9 = 0;
LABEL_12:
  *(_QWORD *)(v0 + 480) = v7;
  *(_QWORD *)(v0 + 488) = v9;
  v26 = *(_QWORD *)(v0 + 464);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 456), v26, &qword_254302588);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27);
  v29 = *(_QWORD *)(v0 + 448);
  if (v28 == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 472));
  }
  else
  {
    v31 = *(_OWORD **)(v0 + 464);
    v32 = *(_QWORD *)(v0 + 432);
    v34 = *(_QWORD *)(v0 + 400);
    v33 = *(_QWORD *)(v0 + 408);
    v35 = *(_QWORD *)(v0 + 392);
    v37 = v31[1];
    v36 = v31[2];
    *(_OWORD *)(v0 + 16) = *v31;
    *(_OWORD *)(v0 + 32) = v37;
    *(_OWORD *)(v0 + 48) = v36;
    v38 = v31[6];
    v40 = v31[3];
    v39 = v31[4];
    *(_OWORD *)(v0 + 96) = v31[5];
    *(_OWORD *)(v0 + 112) = v38;
    *(_OWORD *)(v0 + 64) = v40;
    *(_OWORD *)(v0 + 80) = v39;
    v41 = v31[10];
    v43 = v31[7];
    v42 = v31[8];
    *(_OWORD *)(v0 + 160) = v31[9];
    *(_OWORD *)(v0 + 176) = v41;
    *(_OWORD *)(v0 + 128) = v43;
    *(_OWORD *)(v0 + 144) = v42;
    sub_23B6FF360((uint64_t)v31 + *(int *)(v27 + 48), v29, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    *(_QWORD *)(v0 + 496) = sub_23B75F860();
    sub_23B725660(v29, v32, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    type metadata accessor for LocationShiftingRequest();
    v44 = swift_allocObject();
    *(_QWORD *)(v0 + 504) = v44;
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    v45 = sub_23B7968B4();
    v47 = v46;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    v48 = (uint64_t *)(v44 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
    *v48 = v45;
    v48[1] = v47;
    sub_23B6FF360(v32, v44 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v49 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v49;
    *v49 = v0;
    v49[1] = sub_23B71D67C;
    return sub_23B726C04(*(_QWORD *)(v0 + 440), v44);
  }
}

uint64_t sub_23B71D67C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_23B71D6F8()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  int isUniquelyReferenced_nonNull_native;
  char v4;
  unint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t result;
  char v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  int64_t v47;
  int64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  _OWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  int64_t v76;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 472);
  sub_23B6FF360(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 424), (uint64_t (*)(_QWORD))type metadata accessor for Location);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 368) = v2;
  v5 = sub_23B780558(v0 + 16);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = (v4 & 1) == 0;
  result = v6 + v7;
  if (__OFADD__(v6, v7))
  {
    __break(1u);
    goto LABEL_37;
  }
  v9 = v4;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 472) + 24) >= result)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_23B781DE8();
  }
  else
  {
    sub_23B780F58(result, isUniquelyReferenced_nonNull_native);
    v10 = sub_23B780558(v0 + 16);
    if ((v9 & 1) != (v11 & 1))
      return sub_23B796EF0();
    v5 = v10;
  }
  v12 = *(_QWORD **)(v0 + 368);
  v14 = *(_QWORD *)(v0 + 416);
  v13 = *(_QWORD *)(v0 + 424);
  if ((v9 & 1) != 0)
  {
    sub_23B72561C(v13, v12[7] + *(_QWORD *)(v14 + 72) * v5);
    goto LABEL_12;
  }
  v12[(v5 >> 6) + 8] |= 1 << v5;
  v15 = (_OWORD *)(v12[6] + 176 * v5);
  v17 = *(_OWORD *)(v0 + 96);
  v16 = *(_OWORD *)(v0 + 112);
  v18 = *(_OWORD *)(v0 + 80);
  v15[3] = *(_OWORD *)(v0 + 64);
  v15[4] = v18;
  v15[5] = v17;
  v15[6] = v16;
  v20 = *(_OWORD *)(v0 + 32);
  v19 = *(_OWORD *)(v0 + 48);
  *v15 = *v1;
  v15[1] = v20;
  v15[2] = v19;
  v21 = *(_OWORD *)(v0 + 128);
  v22 = *(_OWORD *)(v0 + 144);
  v23 = *(_OWORD *)(v0 + 176);
  v15[9] = *(_OWORD *)(v0 + 160);
  v15[10] = v23;
  v15[7] = v21;
  v15[8] = v22;
  result = sub_23B6FF360(v13, v12[7] + *(_QWORD *)(v14 + 72) * v5, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v24 = v12[2];
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v12[2] = v26;
  sub_23B6F4E8C(v0 + 16);
LABEL_12:
  v27 = *(_QWORD *)(v0 + 448);
  swift_bridgeObjectRelease();
  sub_23B6F5744(v0 + 16);
  result = sub_23B700B04(v27, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v29 = *(_QWORD *)(v0 + 480);
  v28 = *(_QWORD *)(v0 + 488);
  *(_QWORD *)(v0 + 472) = v12;
  if (v28)
  {
    v30 = (v28 - 1) & v28;
    v31 = __clz(__rbit64(v28)) | (v29 << 6);
    v32 = *(_QWORD *)(v0 + 376);
LABEL_14:
    v33 = *(void **)(v0 + 456);
    v34 = *(_QWORD *)(v0 + 416);
    v35 = (_OWORD *)(*(_QWORD *)(v32 + 48) + 176 * v31);
    v37 = v35[1];
    v36 = v35[2];
    *(_OWORD *)(v0 + 192) = *v35;
    *(_OWORD *)(v0 + 208) = v37;
    *(_OWORD *)(v0 + 224) = v36;
    v38 = v35[6];
    v40 = v35[3];
    v39 = v35[4];
    *(_OWORD *)(v0 + 272) = v35[5];
    *(_OWORD *)(v0 + 288) = v38;
    *(_OWORD *)(v0 + 240) = v40;
    *(_OWORD *)(v0 + 256) = v39;
    v41 = v35[10];
    v43 = v35[7];
    v42 = v35[8];
    *(_OWORD *)(v0 + 336) = v35[9];
    *(_OWORD *)(v0 + 352) = v41;
    *(_OWORD *)(v0 + 304) = v43;
    *(_OWORD *)(v0 + 320) = v42;
    memmove(v33, v35, 0xB0uLL);
    v44 = *(_QWORD *)(v32 + 56) + *(_QWORD *)(v34 + 72) * v31;
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    sub_23B725660(v44, (uint64_t)v33 + *(int *)(v45 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v33, 0, 1, v45);
    sub_23B6F4E8C(v0 + 192);
    v46 = v29;
    goto LABEL_21;
  }
  v47 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
LABEL_38:
    __break(1u);
    return result;
  }
  v48 = (unint64_t)((1 << *(_BYTE *)(v0 + 528)) + 63) >> 6;
  if (v47 >= v48)
  {
    v46 = v29;
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 376);
    v49 = v32 + 64;
    v50 = *(_QWORD *)(v32 + 64 + 8 * v47);
    if (v50)
    {
LABEL_18:
      v30 = (v50 - 1) & v50;
      v31 = __clz(__rbit64(v50)) + (v47 << 6);
      v29 = v47;
      goto LABEL_14;
    }
    v46 = v29 + 1;
    if (v29 + 2 < v48)
    {
      v50 = *(_QWORD *)(v49 + 8 * (v29 + 2));
      if (v50)
      {
        v47 = v29 + 2;
        goto LABEL_18;
      }
      v46 = v29 + 2;
      if (v29 + 3 < v48)
      {
        v50 = *(_QWORD *)(v49 + 8 * (v29 + 3));
        if (v50)
        {
          v47 = v29 + 3;
          goto LABEL_18;
        }
        v47 = v29 + 4;
        v46 = v29 + 3;
        if (v29 + 4 < v48)
        {
          v50 = *(_QWORD *)(v49 + 8 * v47);
          if (v50)
            goto LABEL_18;
          v46 = v48 - 1;
          v76 = v48 - 5;
          while (v76 != v29)
          {
            v50 = *(_QWORD *)(v32 + 104 + 8 * v29++);
            if (v50)
            {
              v47 = v29 + 4;
              goto LABEL_18;
            }
          }
        }
      }
    }
  }
  v51 = *(_QWORD *)(v0 + 456);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 1, 1, v52);
  v30 = 0;
LABEL_21:
  *(_QWORD *)(v0 + 480) = v46;
  *(_QWORD *)(v0 + 488) = v30;
  v53 = *(_QWORD *)(v0 + 464);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 456), v53, &qword_254302588);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v53, 1, v54);
  v56 = *(_OWORD **)(v0 + 464);
  if (v55 == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 472));
  }
  else
  {
    v57 = *(_QWORD *)(v0 + 448);
    v58 = *(_QWORD *)(v0 + 432);
    v60 = *(_QWORD *)(v0 + 400);
    v59 = *(_QWORD *)(v0 + 408);
    v61 = *(_QWORD *)(v0 + 392);
    v63 = v56[1];
    v62 = v56[2];
    *v1 = *v56;
    *(_OWORD *)(v0 + 32) = v63;
    *(_OWORD *)(v0 + 48) = v62;
    v64 = v56[6];
    v66 = v56[3];
    v65 = v56[4];
    *(_OWORD *)(v0 + 96) = v56[5];
    *(_OWORD *)(v0 + 112) = v64;
    *(_OWORD *)(v0 + 64) = v66;
    *(_OWORD *)(v0 + 80) = v65;
    v67 = v56[10];
    v69 = v56[7];
    v68 = v56[8];
    *(_OWORD *)(v0 + 160) = v56[9];
    *(_OWORD *)(v0 + 176) = v67;
    *(_OWORD *)(v0 + 128) = v69;
    *(_OWORD *)(v0 + 144) = v68;
    sub_23B6FF360((uint64_t)v56 + *(int *)(v54 + 48), v57, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    *(_QWORD *)(v0 + 496) = sub_23B75F860();
    sub_23B725660(v57, v58, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    type metadata accessor for LocationShiftingRequest();
    v70 = swift_allocObject();
    *(_QWORD *)(v0 + 504) = v70;
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    v71 = sub_23B7968B4();
    v73 = v72;
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
    v74 = (uint64_t *)(v70 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
    *v74 = v71;
    v74[1] = v73;
    sub_23B6FF360(v58, v70 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v75 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v75;
    *v75 = v0;
    v75[1] = sub_23B71D67C;
    return sub_23B726C04(*(_QWORD *)(v0 + 440), v70);
  }
}

uint64_t sub_23B71DC90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD *v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;

  swift_release();
  swift_release();
  if (qword_254303110 != -1)
    swift_once();
  v1 = *(void **)(v0 + 520);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  sub_23B6F4E8C(v0 + 16);
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 520);
  v9 = *(_QWORD *)(v0 + 448);
  if (v7)
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v10 = 141558531;
    *(_QWORD *)(v10 + 4) = 1752392040;
    *(_WORD *)(v10 + 12) = 2081;
    v67 = v9;
    v68 = v12;
    v14 = *(_QWORD *)(v0 + 16);
    v13 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v10 + 14) = sub_23B6FB388(v14, v13, &v68);
    swift_bridgeObjectRelease();
    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);
    *(_WORD *)(v10 + 22) = 2114;
    v15 = sub_23B7967DC();
    *(_QWORD *)(v10 + 24) = v15;
    *v11 = v15;

    _os_log_impl(&dword_23B6EB000, v5, v6, "Shifting failed for handle: %{private,mask.hash}s with ERROR: %{public}@", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v12, -1, -1);
    MEMORY[0x23B86C754](v10, -1, -1);

    v16 = v67;
  }
  else
  {

    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);

    v16 = v9;
  }
  result = sub_23B700B04(v16, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v19 = *(_QWORD *)(v0 + 480);
  v18 = *(_QWORD *)(v0 + 488);
  if (v18)
  {
    v20 = (v18 - 1) & v18;
    v21 = __clz(__rbit64(v18)) | (v19 << 6);
    v22 = *(_QWORD *)(v0 + 376);
LABEL_8:
    v23 = *(void **)(v0 + 456);
    v24 = *(_QWORD *)(v0 + 416);
    v25 = (_OWORD *)(*(_QWORD *)(v22 + 48) + 176 * v21);
    v27 = v25[1];
    v26 = v25[2];
    *(_OWORD *)(v0 + 192) = *v25;
    *(_OWORD *)(v0 + 208) = v27;
    *(_OWORD *)(v0 + 224) = v26;
    v28 = v25[6];
    v30 = v25[3];
    v29 = v25[4];
    *(_OWORD *)(v0 + 272) = v25[5];
    *(_OWORD *)(v0 + 288) = v28;
    *(_OWORD *)(v0 + 240) = v30;
    *(_OWORD *)(v0 + 256) = v29;
    v31 = v25[10];
    v33 = v25[7];
    v32 = v25[8];
    *(_OWORD *)(v0 + 336) = v25[9];
    *(_OWORD *)(v0 + 352) = v31;
    *(_OWORD *)(v0 + 304) = v33;
    *(_OWORD *)(v0 + 320) = v32;
    memmove(v23, v25, 0xB0uLL);
    v34 = *(_QWORD *)(v22 + 56) + *(_QWORD *)(v24 + 72) * v21;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    sub_23B725660(v34, (uint64_t)v23 + *(int *)(v35 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v23, 0, 1, v35);
    sub_23B6F4E8C(v0 + 192);
    v36 = v19;
    goto LABEL_15;
  }
  v37 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    return result;
  }
  v38 = (unint64_t)((1 << *(_BYTE *)(v0 + 528)) + 63) >> 6;
  if (v37 >= v38)
  {
    v36 = *(_QWORD *)(v0 + 480);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 376);
    v39 = v22 + 64;
    v40 = *(_QWORD *)(v22 + 64 + 8 * v37);
    if (v40)
    {
LABEL_12:
      v20 = (v40 - 1) & v40;
      v21 = __clz(__rbit64(v40)) + (v37 << 6);
      v19 = v37;
      goto LABEL_8;
    }
    v36 = v19 + 1;
    if (v19 + 2 < v38)
    {
      v40 = *(_QWORD *)(v39 + 8 * (v19 + 2));
      if (v40)
      {
        v37 = v19 + 2;
        goto LABEL_12;
      }
      v36 = v19 + 2;
      if (v19 + 3 < v38)
      {
        v40 = *(_QWORD *)(v39 + 8 * (v19 + 3));
        if (v40)
        {
          v37 = v19 + 3;
          goto LABEL_12;
        }
        v37 = v19 + 4;
        v36 = v19 + 3;
        if (v19 + 4 < v38)
        {
          v40 = *(_QWORD *)(v39 + 8 * v37);
          if (v40)
            goto LABEL_12;
          v36 = v38 - 1;
          v66 = v38 - 5;
          while (v66 != v19)
          {
            v40 = *(_QWORD *)(v22 + 104 + 8 * v19++);
            if (v40)
            {
              v37 = v19 + 4;
              goto LABEL_12;
            }
          }
        }
      }
    }
  }
  v41 = *(_QWORD *)(v0 + 456);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
  v20 = 0;
LABEL_15:
  *(_QWORD *)(v0 + 480) = v36;
  *(_QWORD *)(v0 + 488) = v20;
  v43 = *(_QWORD *)(v0 + 464);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 456), v43, &qword_254302588);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44);
  v46 = *(_OWORD **)(v0 + 464);
  if (v45 == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 472));
  }
  else
  {
    v47 = *(_QWORD *)(v0 + 448);
    v48 = *(_QWORD *)(v0 + 432);
    v50 = *(_QWORD *)(v0 + 400);
    v49 = *(_QWORD *)(v0 + 408);
    v51 = *(_QWORD *)(v0 + 392);
    v53 = v46[1];
    v52 = v46[2];
    *(_OWORD *)(v0 + 16) = *v46;
    *(_OWORD *)(v0 + 32) = v53;
    *(_OWORD *)(v0 + 48) = v52;
    v54 = v46[6];
    v56 = v46[3];
    v55 = v46[4];
    *(_OWORD *)(v0 + 96) = v46[5];
    *(_OWORD *)(v0 + 112) = v54;
    *(_OWORD *)(v0 + 64) = v56;
    *(_OWORD *)(v0 + 80) = v55;
    v57 = v46[10];
    v59 = v46[7];
    v58 = v46[8];
    *(_OWORD *)(v0 + 160) = v46[9];
    *(_OWORD *)(v0 + 176) = v57;
    *(_OWORD *)(v0 + 128) = v59;
    *(_OWORD *)(v0 + 144) = v58;
    sub_23B6FF360((uint64_t)v46 + *(int *)(v44 + 48), v47, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    *(_QWORD *)(v0 + 496) = sub_23B75F860();
    sub_23B725660(v47, v48, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    type metadata accessor for LocationShiftingRequest();
    v60 = swift_allocObject();
    *(_QWORD *)(v0 + 504) = v60;
    _s12FindMyLocate5FenceV2IDVAEycfC_0();
    v61 = sub_23B7968B4();
    v63 = v62;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    v64 = (uint64_t *)(v60 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
    *v64 = v61;
    v64[1] = v63;
    sub_23B6FF360(v48, v60 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v65 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v65;
    *v65 = v0;
    v65[1] = sub_23B71D67C;
    return sub_23B726C04(*(_QWORD *)(v0 + 440), v60);
  }
}

uint64_t sub_23B71E2C0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 632) = v2;
  *(_BYTE *)(v3 + 728) = a2;
  *(_QWORD *)(v3 + 624) = a1;
  v4 = type metadata accessor for Location();
  *(_QWORD *)(v3 + 640) = v4;
  *(_QWORD *)(v3 + 648) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 656) = swift_task_alloc();
  *(_QWORD *)(v3 + 664) = swift_task_alloc();
  *(_QWORD *)(v3 + 672) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302588);
  *(_QWORD *)(v3 + 680) = swift_task_alloc();
  *(_QWORD *)(v3 + 688) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B71E378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _OWORD *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  if (*(_BYTE *)(v0 + 728) != 1)
  {
    v23 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRetain();
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
  }
  v1 = *(_QWORD *)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 592) = MEMORY[0x24BEE4B00];
  v4 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 729) = v4;
  v5 = -1;
  v6 = -1 << v4;
  if (-(-1 << v4) < 64)
    v5 = ~(-1 << -(char)(-1 << v4));
  v7 = v5 & *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v0 + 696) = v3;
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = 0;
    v9 = __clz(__rbit64(v7));
    v10 = (v7 - 1) & v7;
LABEL_6:
    v11 = *(void **)(v0 + 680);
    v12 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 176 * v9);
    v14 = v12[1];
    v13 = v12[2];
    *(_OWORD *)(v0 + 368) = *v12;
    *(_OWORD *)(v0 + 384) = v14;
    *(_OWORD *)(v0 + 400) = v13;
    v15 = v12[6];
    v17 = v12[3];
    v16 = v12[4];
    *(_OWORD *)(v0 + 448) = v12[5];
    *(_OWORD *)(v0 + 464) = v15;
    *(_OWORD *)(v0 + 416) = v17;
    *(_OWORD *)(v0 + 432) = v16;
    v18 = v12[10];
    v20 = v12[7];
    v19 = v12[8];
    *(_OWORD *)(v0 + 512) = v12[9];
    *(_OWORD *)(v0 + 528) = v18;
    *(_OWORD *)(v0 + 480) = v20;
    *(_OWORD *)(v0 + 496) = v19;
    memmove(v11, v12, 0xB0uLL);
    v21 = *(_QWORD *)(v2 + 56) + *(_QWORD *)(v1 + 72) * v9;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    sub_23B725660(v21, (uint64_t)v11 + *(int *)(v22 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 0, 1, v22);
    sub_23B6F4E8C(v0 + 368);
    goto LABEL_14;
  }
  v24 = 63 - v6;
  if ((unint64_t)(63 - v6) <= 0x7F)
  {
    v8 = 0;
  }
  else
  {
    v25 = *(_QWORD *)(v2 + 72);
    if (v25)
    {
      v8 = 1;
LABEL_11:
      v10 = (v25 - 1) & v25;
      v9 = __clz(__rbit64(v25)) + (v8 << 6);
      goto LABEL_6;
    }
    if (v24 < 0xC0)
    {
      v8 = 1;
    }
    else
    {
      v25 = *(_QWORD *)(v2 + 80);
      if (v25)
      {
        v8 = 2;
        goto LABEL_11;
      }
      if (v24 < 0x100)
      {
        v8 = 2;
      }
      else
      {
        v25 = *(_QWORD *)(v2 + 88);
        if (v25)
        {
          v8 = 3;
          goto LABEL_11;
        }
        if (v24 < 0x140)
        {
          v8 = 3;
        }
        else
        {
          v25 = *(_QWORD *)(v2 + 96);
          if (v25)
          {
            v8 = 4;
            goto LABEL_11;
          }
          v55 = 0;
          v56 = v24 >> 6;
          v57 = 5;
          if (v56 > 5)
            v57 = v56;
          v58 = v57 - 5;
          while (v58 != v55)
          {
            v25 = *(_QWORD *)(v2 + 104 + 8 * v55++);
            if (v25)
            {
              v8 = v55 + 4;
              goto LABEL_11;
            }
          }
          v8 = v56 - 1;
        }
      }
    }
  }
  v26 = *(_QWORD *)(v0 + 680);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v10 = 0;
LABEL_14:
  *(_QWORD *)(v0 + 712) = v10;
  *(_QWORD *)(v0 + 704) = v8;
  v28 = *(_QWORD *)(v0 + 688);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 680), v28, &qword_254302588);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29) == 1)
  {
    swift_release();
    if (qword_254303110 != -1)
      swift_once();
    v30 = sub_23B7969BC();
    __swift_project_value_buffer(v30, (uint64_t)qword_2543090D0);
    v31 = sub_23B7969A4();
    v32 = sub_23B796C38();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v59 = v34;
      *(_DWORD *)v33 = 136446723;
      *(_QWORD *)(v0 + 616) = sub_23B6FB388(0xD00000000000001ELL, 0x800000023B7A0250, &v59);
      sub_23B796C68();
      *(_WORD *)(v33 + 12) = 2160;
      *(_QWORD *)(v0 + 600) = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v33 + 22) = 2081;
      swift_beginAccess();
      sub_23B72318C();
      swift_bridgeObjectRetain();
      v35 = sub_23B7969D4();
      v37 = v36;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 608) = sub_23B6FB388(v35, v37, &v59);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B6EB000, v31, v32, "%{public}s locationWithAddress: %{private,mask.hash}s", (uint8_t *)v33, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v34, -1, -1);
      MEMORY[0x23B86C754](v33, -1, -1);
    }

    swift_beginAccess();
    v23 = *(_QWORD *)(v0 + 592);
    goto LABEL_20;
  }
  v39 = *(_OWORD **)(v0 + 688);
  v40 = *(_QWORD *)(v0 + 672);
  v42 = v39[1];
  v41 = v39[2];
  *(_OWORD *)(v0 + 16) = *v39;
  *(_OWORD *)(v0 + 32) = v42;
  *(_OWORD *)(v0 + 48) = v41;
  v43 = v39[6];
  v45 = v39[3];
  v44 = v39[4];
  *(_OWORD *)(v0 + 96) = v39[5];
  *(_OWORD *)(v0 + 112) = v43;
  *(_OWORD *)(v0 + 64) = v45;
  *(_OWORD *)(v0 + 80) = v44;
  v46 = v39[10];
  v48 = v39[7];
  v47 = v39[8];
  *(_OWORD *)(v0 + 160) = v39[9];
  *(_OWORD *)(v0 + 176) = v46;
  *(_OWORD *)(v0 + 128) = v48;
  *(_OWORD *)(v0 + 144) = v47;
  sub_23B6FF360((uint64_t)v39 + *(int *)(v29 + 48), v40, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v49 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = v49;
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
  v50 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = v50;
  v51 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = v51;
  v52 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 208) = v52;
  v53 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 240) = v53;
  v54 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v54;
  *v54 = v0;
  v54[1] = sub_23B71E984;
  return sub_23B71B7F8(*(_QWORD *)(v0 + 664), (_OWORD *)(v0 + 192), *(_QWORD *)(v0 + 672));
}

uint64_t sub_23B71E984()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B71E9DC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _QWORD *v58;
  uint64_t v59;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 672);
  v4 = *(_QWORD *)(v0 + 656);
  sub_23B6FF360(*(_QWORD *)(v0 + 664), v4, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v59 = v2;
  sub_23B73C024(v4, (_OWORD *)(v0 + 16), isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 592) = v2;
  swift_bridgeObjectRelease();
  sub_23B6F5744(v0 + 16);
  result = sub_23B700B04(v3, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v7 = *(_QWORD *)(v0 + 712);
  v8 = *(_QWORD *)(v0 + 704);
  *(_QWORD *)(v0 + 696) = v2;
  if (v7)
  {
    v9 = (v7 - 1) & v7;
    v10 = __clz(__rbit64(v7)) | (v8 << 6);
    v11 = *(_QWORD *)(v0 + 624);
LABEL_3:
    v12 = *(void **)(v0 + 680);
    v13 = *(_QWORD *)(v0 + 648);
    v14 = (_OWORD *)(*(_QWORD *)(v11 + 48) + 176 * v10);
    v16 = v14[1];
    v15 = v14[2];
    *(_OWORD *)(v0 + 368) = *v14;
    *(_OWORD *)(v0 + 384) = v16;
    *(_OWORD *)(v0 + 400) = v15;
    v17 = v14[6];
    v19 = v14[3];
    v18 = v14[4];
    *(_OWORD *)(v0 + 448) = v14[5];
    *(_OWORD *)(v0 + 464) = v17;
    *(_OWORD *)(v0 + 416) = v19;
    *(_OWORD *)(v0 + 432) = v18;
    v20 = v14[10];
    v22 = v14[7];
    v21 = v14[8];
    *(_OWORD *)(v0 + 512) = v14[9];
    *(_OWORD *)(v0 + 528) = v20;
    *(_OWORD *)(v0 + 480) = v22;
    *(_OWORD *)(v0 + 496) = v21;
    memmove(v12, v14, 0xB0uLL);
    v23 = *(_QWORD *)(v11 + 56) + *(_QWORD *)(v13 + 72) * v10;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
    sub_23B725660(v23, (uint64_t)v12 + *(int *)(v24 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
    sub_23B6F4E8C(v0 + 368);
    goto LABEL_22;
  }
  v25 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  v26 = (unint64_t)((1 << *(_BYTE *)(v0 + 729)) + 63) >> 6;
  if (v25 < v26)
  {
    v11 = *(_QWORD *)(v0 + 624);
    v27 = v11 + 64;
    v28 = *(_QWORD *)(v11 + 64 + 8 * v25);
    if (v28)
    {
LABEL_7:
      v9 = (v28 - 1) & v28;
      v10 = __clz(__rbit64(v28)) + (v25 << 6);
      v8 = v25;
      goto LABEL_3;
    }
    v29 = v8 + 2;
    ++v8;
    if (v25 + 1 < v26)
    {
      v28 = *(_QWORD *)(v27 + 8 * v29);
      if (v28)
      {
LABEL_10:
        v25 = v29;
        goto LABEL_7;
      }
      v8 = v25 + 1;
      if (v25 + 2 < v26)
      {
        v28 = *(_QWORD *)(v27 + 8 * (v25 + 2));
        if (v28)
        {
          v25 += 2;
          goto LABEL_7;
        }
        v29 = v25 + 3;
        v8 = v25 + 2;
        if (v25 + 3 < v26)
        {
          v28 = *(_QWORD *)(v27 + 8 * v29);
          if (v28)
            goto LABEL_10;
          while (1)
          {
            v25 = v29 + 1;
            if (__OFADD__(v29, 1))
              break;
            if (v25 >= v26)
            {
              v8 = v26 - 1;
              goto LABEL_21;
            }
            v28 = *(_QWORD *)(v27 + 8 * v25);
            ++v29;
            if (v28)
              goto LABEL_7;
          }
LABEL_30:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_21:
  v30 = *(_QWORD *)(v0 + 680);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v9 = 0;
LABEL_22:
  *(_QWORD *)(v0 + 712) = v9;
  *(_QWORD *)(v0 + 704) = v8;
  v32 = *(_QWORD *)(v0 + 688);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 680), v32, &qword_254302588);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
  {
    swift_release();
    if (qword_254303110 != -1)
      swift_once();
    v34 = sub_23B7969BC();
    __swift_project_value_buffer(v34, (uint64_t)qword_2543090D0);
    v35 = sub_23B7969A4();
    v36 = sub_23B796C38();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v59 = v38;
      *(_DWORD *)v37 = 136446723;
      *(_QWORD *)(v0 + 616) = sub_23B6FB388(0xD00000000000001ELL, 0x800000023B7A0250, &v59);
      sub_23B796C68();
      *(_WORD *)(v37 + 12) = 2160;
      *(_QWORD *)(v0 + 600) = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v37 + 22) = 2081;
      swift_beginAccess();
      sub_23B72318C();
      swift_bridgeObjectRetain();
      v39 = sub_23B7969D4();
      v41 = v40;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 608) = sub_23B6FB388(v39, v41, &v59);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B6EB000, v35, v36, "%{public}s locationWithAddress: %{private,mask.hash}s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v38, -1, -1);
      MEMORY[0x23B86C754](v37, -1, -1);
    }

    swift_beginAccess();
    v42 = *(_QWORD *)(v0 + 592);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v42);
  }
  else
  {
    v43 = *(_OWORD **)(v0 + 688);
    v44 = *(_QWORD *)(v0 + 672);
    v46 = v43[1];
    v45 = v43[2];
    *v1 = *v43;
    *(_OWORD *)(v0 + 32) = v46;
    *(_OWORD *)(v0 + 48) = v45;
    v47 = v43[6];
    v49 = v43[3];
    v48 = v43[4];
    *(_OWORD *)(v0 + 96) = v43[5];
    *(_OWORD *)(v0 + 112) = v47;
    *(_OWORD *)(v0 + 64) = v49;
    *(_OWORD *)(v0 + 80) = v48;
    v50 = v43[10];
    v52 = v43[7];
    v51 = v43[8];
    *(_OWORD *)(v0 + 160) = v43[9];
    *(_OWORD *)(v0 + 176) = v50;
    *(_OWORD *)(v0 + 128) = v52;
    *(_OWORD *)(v0 + 144) = v51;
    sub_23B6FF360((uint64_t)v43 + *(int *)(v33 + 48), v44, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v53 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 336) = v53;
    *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
    v54 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 272) = v54;
    v55 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 304) = v55;
    v56 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 192) = *v1;
    *(_OWORD *)(v0 + 208) = v56;
    v57 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 240) = v57;
    v58 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 720) = v58;
    *v58 = v0;
    v58[1] = sub_23B71E984;
    return sub_23B71B7F8(*(_QWORD *)(v0 + 664), (_OWORD *)(v0 + 192), *(_QWORD *)(v0 + 672));
  }
}

uint64_t sub_23B71EFF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B6FD1B0;
  return sub_23B715648(a1);
}

uint64_t sub_23B71F044(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B6FD140;
  return sub_23B71C17C(a1);
}

uint64_t sub_23B71F090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  v1 = v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing;
  result = swift_beginAccess();
  v3 = 0;
  v4 = *(_QWORD *)v1 + 64;
  v5 = 1 << *(_BYTE *)(*(_QWORD *)v1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*(_QWORD *)v1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v10 = v9 | (v3 << 6);
LABEL_5:
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 56) + 8 * v10) + 16))
      return 1;
  }
  v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v8)
    return 0;
  v12 = *(_QWORD *)(v4 + 8 * v11);
  ++v3;
  if (v12)
    goto LABEL_24;
  v3 = v11 + 1;
  if (v11 + 1 >= v8)
    return 0;
  v12 = *(_QWORD *)(v4 + 8 * v3);
  if (v12)
    goto LABEL_24;
  v3 = v11 + 2;
  if (v11 + 2 >= v8)
    return 0;
  v12 = *(_QWORD *)(v4 + 8 * v3);
  if (v12)
    goto LABEL_24;
  v3 = v11 + 3;
  if (v11 + 3 >= v8)
    return 0;
  v12 = *(_QWORD *)(v4 + 8 * v3);
  if (v12)
    goto LABEL_24;
  v3 = v11 + 4;
  if (v11 + 4 >= v8)
    return 0;
  v12 = *(_QWORD *)(v4 + 8 * v3);
  if (v12)
  {
LABEL_24:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
    goto LABEL_5;
  }
  v13 = v11 + 5;
  if (v13 >= v8)
    return 0;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 0;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23B71F208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;
  char v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 1472) = v12;
  *(_OWORD *)(v8 + 1456) = v11;
  *(_BYTE *)(v8 + 1303) = v10;
  *(_BYTE *)(v8 + 1302) = a8;
  *(_QWORD *)(v8 + 1448) = a7;
  *(_BYTE *)(v8 + 1301) = a6;
  *(_QWORD *)(v8 + 1440) = a5;
  *(_QWORD *)(v8 + 1432) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  *(_QWORD *)(v8 + 1480) = swift_task_alloc();
  *(_QWORD *)(v8 + 1488) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B71F2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t i;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t j;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _QWORD *v39;
  unsigned __int8 v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t result;
  char v48;
  unsigned __int8 v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t k;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  FindMyLocate::LegacyRefreshCommandReason_optional v80;
  Swift::Bool v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  char v86;
  __int16 v87;
  char v88;
  char v89;
  __int128 v90;
  _QWORD *v91;
  Swift::Bool v92;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _BYTE v99[64];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;

  v1 = *(_QWORD *)(v0 + 1488);
  v2 = *(_QWORD *)(v0 + 1480);
  v3 = *(unsigned __int8 *)(v0 + 1301);
  v4 = *(_QWORD *)(v0 + 1440);
  v5 = *(_QWORD *)(v0 + 1432);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v4, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  sub_23B6FC8F4(v1, v2, &qword_254302EF0);
  v8 = v5 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  swift_beginAccess();
  sub_23B6FBD54(v2, v8);
  swift_endAccess();
  v9 = v5 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesNeedingReverseGeocoding;
  if (v3 == 1)
  {
    v10 = *(_QWORD *)(v0 + 1448);
    swift_beginAccess();
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = (__int128 *)(*(_QWORD *)(v0 + 1448) + 32);
      swift_bridgeObjectRetain();
      for (i = v11 - 1; ; --i)
      {
        v14 = *v12;
        v15 = v12[2];
        *(_OWORD *)(v0 + 208) = v12[1];
        *(_OWORD *)(v0 + 224) = v15;
        *(_OWORD *)(v0 + 192) = v14;
        v16 = v12[3];
        v17 = v12[4];
        v18 = v12[6];
        *(_OWORD *)(v0 + 272) = v12[5];
        *(_OWORD *)(v0 + 288) = v18;
        *(_OWORD *)(v0 + 240) = v16;
        *(_OWORD *)(v0 + 256) = v17;
        v19 = v12[7];
        v20 = v12[8];
        v21 = v12[10];
        *(_OWORD *)(v0 + 336) = v12[9];
        *(_OWORD *)(v0 + 352) = v21;
        *(_OWORD *)(v0 + 304) = v19;
        *(_OWORD *)(v0 + 320) = v20;
        sub_23B6F4E8C(v0 + 192);
        sub_23B6F4F50((__int128 *)v99, (__int128 *)(v0 + 192));
        v22 = v105;
        *(_OWORD *)(v0 + 672) = v104;
        *(_OWORD *)(v0 + 688) = v22;
        *(_OWORD *)(v0 + 704) = v106;
        v23 = v101;
        *(_OWORD *)(v0 + 608) = v100;
        *(_OWORD *)(v0 + 624) = v23;
        v24 = v103;
        *(_OWORD *)(v0 + 640) = v102;
        *(_OWORD *)(v0 + 656) = v24;
        v25 = *(_OWORD *)&v99[16];
        *(_OWORD *)(v0 + 544) = *(_OWORD *)v99;
        *(_OWORD *)(v0 + 560) = v25;
        v26 = *(_OWORD *)&v99[48];
        *(_OWORD *)(v0 + 576) = *(_OWORD *)&v99[32];
        *(_OWORD *)(v0 + 592) = v26;
        sub_23B6F5744(v0 + 544);
        if (!i)
          break;
        v12 += 11;
      }
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v9 + 16))
    {
      v27 = *(_QWORD *)(v0 + 1448);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v29 = (__int128 *)(v27 + 32);
        swift_bridgeObjectRetain();
        for (j = v28 - 1; ; --j)
        {
          v31 = *v29;
          v32 = v29[2];
          *(_OWORD *)(v0 + 32) = v29[1];
          *(_OWORD *)(v0 + 48) = v32;
          *(_OWORD *)(v0 + 16) = v31;
          v33 = v29[3];
          v34 = v29[4];
          v35 = v29[6];
          *(_OWORD *)(v0 + 96) = v29[5];
          *(_OWORD *)(v0 + 112) = v35;
          *(_OWORD *)(v0 + 64) = v33;
          *(_OWORD *)(v0 + 80) = v34;
          v36 = v29[7];
          v37 = v29[8];
          v38 = v29[10];
          *(_OWORD *)(v0 + 160) = v29[9];
          *(_OWORD *)(v0 + 176) = v38;
          *(_OWORD *)(v0 + 128) = v36;
          *(_OWORD *)(v0 + 144) = v37;
          sub_23B6F4E8C(v0 + 16);
          sub_23B72093C((void *)(v0 + 1072));
          sub_23B6FC8F4(v0 + 1072, v0 + 896, (uint64_t *)&unk_254302520);
          sub_23B70C84C((uint64_t *)(v0 + 896));
          sub_23B6F5744(v0 + 16);
          if (!j)
            break;
          v29 += 11;
        }
        goto LABEL_12;
      }
    }
  }
  swift_endAccess();
  v39 = (_QWORD *)(*(_QWORD *)(v0 + 1432)
                 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_handlesForLocationRefreshing);
  v40 = *(_BYTE *)(v0 + 1302);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v99 = *v39;
  v42 = *(_QWORD *)v99;
  *v39 = 0x8000000000000000;
  v44 = sub_23B6F564C(v40);
  v45 = *(_QWORD *)(v42 + 16);
  v46 = (v43 & 1) == 0;
  result = v45 + v46;
  if (__OFADD__(v45, v46))
  {
    __break(1u);
  }
  else
  {
    v48 = v43;
    if (*(_QWORD *)(v42 + 24) >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23B781998();
        v42 = *(_QWORD *)v99;
      }
    }
    else
    {
      v49 = *(_BYTE *)(v0 + 1302);
      sub_23B6EE53C(result, isUniquelyReferenced_nonNull_native);
      v42 = *(_QWORD *)v99;
      v50 = sub_23B6F564C(v49);
      if ((v48 & 1) != (v51 & 1))
        return sub_23B796EF0();
      v44 = v50;
    }
    *v39 = v42;
    swift_bridgeObjectRelease();
    v52 = (_QWORD *)*v39;
    swift_bridgeObjectRetain();
    if ((v48 & 1) == 0)
      sub_23B73BE90(v44, *(_BYTE *)(v0 + 1302), MEMORY[0x24BEE4B08], v52);
    v53 = *(_QWORD *)(v0 + 1448);
    swift_bridgeObjectRelease();
    v54 = *(_QWORD *)(v53 + 16);
    if (v54)
    {
      v55 = (__int128 *)(*(_QWORD *)(v0 + 1448) + 32);
      for (k = v54 - 1; ; --k)
      {
        v57 = *v55;
        v58 = v55[2];
        *(_OWORD *)(v0 + 384) = v55[1];
        *(_OWORD *)(v0 + 400) = v58;
        *(_OWORD *)(v0 + 368) = v57;
        v59 = v55[3];
        v60 = v55[4];
        v61 = v55[6];
        *(_OWORD *)(v0 + 448) = v55[5];
        *(_OWORD *)(v0 + 464) = v61;
        *(_OWORD *)(v0 + 416) = v59;
        *(_OWORD *)(v0 + 432) = v60;
        v62 = v55[7];
        v63 = v55[8];
        v64 = v55[10];
        *(_OWORD *)(v0 + 512) = v55[9];
        *(_OWORD *)(v0 + 528) = v64;
        *(_OWORD *)(v0 + 480) = v62;
        *(_OWORD *)(v0 + 496) = v63;
        sub_23B6F4E8C(v0 + 368);
        sub_23B6F4F50((__int128 *)v99, (__int128 *)(v0 + 368));
        v65 = v105;
        *(_OWORD *)(v0 + 848) = v104;
        *(_OWORD *)(v0 + 864) = v65;
        *(_OWORD *)(v0 + 880) = v106;
        v66 = v101;
        *(_OWORD *)(v0 + 784) = v100;
        *(_OWORD *)(v0 + 800) = v66;
        v67 = v103;
        *(_OWORD *)(v0 + 816) = v102;
        *(_OWORD *)(v0 + 832) = v67;
        v68 = *(_OWORD *)&v99[16];
        *(_OWORD *)(v0 + 720) = *(_OWORD *)v99;
        *(_OWORD *)(v0 + 736) = v68;
        v69 = *(_OWORD *)&v99[48];
        *(_OWORD *)(v0 + 752) = *(_OWORD *)&v99[32];
        *(_OWORD *)(v0 + 768) = v69;
        sub_23B6F5744(v0 + 720);
        if (!k)
          break;
        v55 += 11;
      }
    }
    swift_bridgeObjectRelease();
    v70 = *(_QWORD *)(v0 + 1472);
    v71 = *(_QWORD *)(v0 + 1464);
    v72 = *(_QWORD *)(v0 + 1456);
    v73 = *(_BYTE *)(v0 + 1303);
    v74 = *(_BYTE *)(v0 + 1302);
    v75 = *(_QWORD *)(v0 + 1448);
    swift_endAccess();
    v93 = v74;
    v94 = v73;
    v95 = v72;
    v96 = v71;
    v97 = v70;
    v98 = 3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76 = &v94;
    v77 = &v98;
    v78 = v75;
    v79 = 1;
    LocationRequest.init(priority:origin:toHandles:reason:startRefreshingLocation:isCached:)((FindMyLocate::LocationRequest *)v99, (FindMyLocate::LocatePriority)&v93, *(FindMyLocate::RequestOrigin *)&v76, 0, v80, v81, v92);
    v82 = *(_QWORD *)v99;
    *(_QWORD *)(v0 + 1496) = *(_QWORD *)v99;
    v83 = v99[8];
    v84 = v99[16];
    v85 = *(_QWORD *)&v99[40];
    *(_QWORD *)(v0 + 1504) = *(_QWORD *)&v99[40];
    v86 = v99[48];
    v87 = *(_WORD *)&v99[49];
    v88 = v99[51];
    v89 = v99[52];
    v90 = *(_OWORD *)&v99[24];
    *(_QWORD *)(v0 + 1248) = v82;
    *(_BYTE *)(v0 + 1256) = v83;
    *(_BYTE *)(v0 + 1264) = v84;
    *(_OWORD *)(v0 + 1272) = v90;
    *(_QWORD *)(v0 + 1288) = v85;
    *(_BYTE *)(v0 + 1296) = v86;
    *(_WORD *)(v0 + 1297) = v87;
    *(_BYTE *)(v0 + 1299) = v88;
    *(_BYTE *)(v0 + 1300) = v89;
    v91 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1512) = v91;
    *v91 = v0;
    v91[1] = sub_23B71F84C;
    return sub_23B6FC5D0(v0 + 1248);
  }
  return result;
}

uint64_t sub_23B71F84C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 1520) = a1;
  *(_QWORD *)(v3 + 1528) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B71F8D8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v11 = v5;
    *(_DWORD *)v4 = 141558275;
    v0[175] = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2081;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v6 = sub_23B7969D4();
    v8 = v7;
    swift_bridgeObjectRelease();
    v0[176] = sub_23B6FB388(v6, v8, &v11);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v2, v3, "startRefreshingLocation result: %{private,mask.hash}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = (_QWORD *)swift_task_alloc();
  v0[192] = v9;
  *v9 = v0;
  v9[1] = sub_23B71FB10;
  return sub_23B715648(v0[190]);
}

uint64_t sub_23B71FB10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1544) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B71FB74()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71FBB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 1528);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 1416) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v10 = sub_23B796A4C();
    *(_QWORD *)(v0 + 1424) = sub_23B6FB388(v10, v11, &v13);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v5, v6, "StartRefreshingLocation error: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71FDC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 1544);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 1416) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v10 = sub_23B796A4C();
    *(_QWORD *)(v0 + 1424) = sub_23B6FB388(v10, v11, &v13);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v5, v6, "StartRefreshingLocation error: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B71FFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v6;
  _QWORD *v7;

  *(_QWORD *)(v5 + 96) = a4;
  v6 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a5 + 32);
  *(_QWORD *)(v5 + 61) = *(_QWORD *)(a5 + 45);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 104) = v7;
  *v7 = v5;
  v7[1] = sub_23B720038;
  return sub_23B6FC5D0(v5 + 16);
}

uint64_t sub_23B720038(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[14] = a1;
  v4[15] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v6 = (_QWORD *)swift_task_alloc();
  v4[16] = v6;
  *v6 = v4;
  v6[1] = sub_23B7200D8;
  return sub_23B715648(a1);
}

uint64_t sub_23B7200D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B720140()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B720170()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 120);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446466;
    *(_QWORD *)(v0 + 72) = sub_23B6FB388(0xD000000000000044, 0x800000023B7A0350, &v13);
    sub_23B796C68();
    *(_WORD *)(v7 + 12) = 2082;
    *(_QWORD *)(v0 + 80) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v10 = sub_23B796A4C();
    *(_QWORD *)(v0 + 88) = sub_23B6FB388(v10, v11, &v13);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s failed with %{public}s.", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B720398()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 136);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446466;
    *(_QWORD *)(v0 + 72) = sub_23B6FB388(0xD000000000000044, 0x800000023B7A0350, &v13);
    sub_23B796C68();
    *(_WORD *)(v7 + 12) = 2082;
    *(_QWORD *)(v0 + 80) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v10 = sub_23B796A4C();
    *(_QWORD *)(v0 + 88) = sub_23B6FB388(v10, v11, &v13);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s failed with %{public}s.", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void (*sub_23B7205C8(_QWORD *a1, unsigned __int8 a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_23B722024(v4, a2);
  return sub_23B720614;
}

void sub_23B720614(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_23B720644(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v36 = a2;
  v37 = type metadata accessor for LocationStreamChange();
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302EF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543025C8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[8];
  v18 = a1[9];
  v19 = a1[6];
  v45 = a1[7];
  v46 = v17;
  v20 = a1[10];
  v47 = v18;
  v48 = v20;
  v21 = a1[5];
  v42 = a1[4];
  v43 = v21;
  v44 = v19;
  v22 = a1[1];
  v38 = *a1;
  v39 = v22;
  v23 = a1[3];
  v24 = a3 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation;
  v40 = a1[2];
  v41 = v23;
  swift_beginAccess();
  sub_23B6FDE3C(v24, (uint64_t)v13, &qword_254302EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7))
  {
    sub_23B6F7190((uint64_t)v13, &qword_254302EF0);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v16, 1, 1, v25);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    sub_23B6F7190((uint64_t)v13, &qword_254302EF0);
    v26 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302B10) + 48)];
    sub_23B725660(v36, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v27 = v45;
    v28 = v47;
    v29 = v48;
    *((_OWORD *)v26 + 8) = v46;
    *((_OWORD *)v26 + 9) = v28;
    *((_OWORD *)v26 + 10) = v29;
    v30 = v43;
    *((_OWORD *)v26 + 4) = v42;
    *((_OWORD *)v26 + 5) = v30;
    *((_OWORD *)v26 + 6) = v44;
    *((_OWORD *)v26 + 7) = v27;
    v31 = v39;
    *(_OWORD *)v26 = v38;
    *((_OWORD *)v26 + 1) = v31;
    v32 = v41;
    *((_OWORD *)v26 + 2) = v40;
    *((_OWORD *)v26 + 3) = v32;
    swift_storeEnumTagMultiPayload();
    sub_23B6F4E8C((uint64_t)&v38);
    sub_23B796B90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48538);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v16, 0, 1, v33);
  }
  return sub_23B6F7190((uint64_t)v16, &qword_2543025C8);
}

uint64_t sub_23B72093C@<X0>(void *a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  char v23;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[11];
  _OWORD v42[12];

  v2 = v1;
  v4 = *v1;
  sub_23B796F44();
  sub_23B796A58();
  swift_bridgeObjectRetain();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  v5 = sub_23B796F74();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_23B7251FC(v42);
    return sub_23B6FC8F4((uint64_t)v42, (uint64_t)a1, (uint64_t *)&unk_254302520);
  }
  v8 = (_OWORD *)(*(_QWORD *)(v4 + 48) + 176 * v7);
  v10 = v8[1];
  v9 = v8[2];
  v42[0] = *v8;
  v42[1] = v10;
  v42[2] = v9;
  v11 = v8[3];
  v12 = v8[4];
  v13 = v8[6];
  v42[5] = v8[5];
  v42[6] = v13;
  v42[3] = v11;
  v42[4] = v12;
  v14 = v8[7];
  v15 = v8[8];
  v16 = v8[10];
  v42[9] = v8[9];
  v42[10] = v16;
  v42[7] = v14;
  v42[8] = v15;
  v17 = sub_23B796A58();
  v19 = v18;
  if (v17 == sub_23B796A58() && v19 == v20)
  {
    sub_23B6F4E8C((uint64_t)v42);
    swift_bridgeObjectRelease_n();
    v21 = v42;
LABEL_5:
    sub_23B6F5744((uint64_t)v21);
    goto LABEL_9;
  }
  v23 = sub_23B796ECC();
  sub_23B6F4E8C((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B6F5744((uint64_t)v42);
  if ((v23 & 1) == 0)
  {
    v26 = ~v6;
    while (1)
    {
      v7 = (v7 + 1) & v26;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        break;
      v28 = (_OWORD *)(*(_QWORD *)(v4 + 48) + 176 * v7);
      v30 = v28[1];
      v29 = v28[2];
      v41[0] = *v28;
      v41[1] = v30;
      v41[2] = v29;
      v31 = v28[3];
      v32 = v28[4];
      v33 = v28[6];
      v41[5] = v28[5];
      v41[6] = v33;
      v41[3] = v31;
      v41[4] = v32;
      v34 = v28[7];
      v35 = v28[8];
      v36 = v28[10];
      v41[9] = v28[9];
      v41[10] = v36;
      v41[7] = v34;
      v41[8] = v35;
      v37 = sub_23B796A58();
      v39 = v38;
      if (v37 == sub_23B796A58() && v39 == v40)
      {
        sub_23B6F4E8C((uint64_t)v41);
        swift_bridgeObjectRelease_n();
        v21 = v41;
        goto LABEL_5;
      }
      v27 = sub_23B796ECC();
      sub_23B6F4E8C((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B6F5744((uint64_t)v41);
      if ((v27 & 1) != 0)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v2;
  *(_QWORD *)&v41[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B6F5808();
    v25 = *(_QWORD *)&v41[0];
  }
  memmove(a1, (const void *)(*(_QWORD *)(v25 + 48) + 176 * v7), 0xB0uLL);
  sub_23B720C68(v7);
  *v2 = *(_QWORD *)&v41[0];
  swift_bridgeObjectRelease();
  return nullsub_1(a1);
}

unint64_t sub_23B720C68(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _OWORD v27[12];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B796CB0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (__int128 *)(*(_QWORD *)(v3 + 48) + 176 * v6);
        v12 = *v10;
        v11 = v10[1];
        v27[2] = v10[2];
        v13 = v10[3];
        v14 = v10[4];
        v15 = v10[6];
        v27[5] = v10[5];
        v27[6] = v15;
        v27[4] = v14;
        v27[3] = v13;
        v16 = v10[7];
        v17 = v10[8];
        v18 = v10[10];
        v27[9] = v10[9];
        v27[10] = v18;
        v27[7] = v16;
        v27[8] = v17;
        v27[0] = v12;
        v27[1] = v11;
        sub_23B796F44();
        sub_23B796A58();
        sub_23B6F4E8C((uint64_t)v27);
        sub_23B796A64();
        swift_bridgeObjectRelease();
        v19 = sub_23B796F74();
        sub_23B6F5744((uint64_t)v27);
        v20 = v19 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v20 < v9)
            goto LABEL_5;
        }
        else if (v20 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v20)
        {
LABEL_11:
          v21 = *(_QWORD *)(v3 + 48);
          v22 = (char *)(v21 + 176 * v2);
          v23 = (char *)(v21 + 176 * v6);
          if (v2 != v6 || (v2 = v6, v22 >= v23 + 176))
          {
            memmove(v22, v23, 0xB0uLL);
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v24 = *(_QWORD *)(v3 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v26;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23B720E88(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = a2((char *)v10, v7, v5);
    MEMORY[0x23B86C754](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_23B720FE4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[11];
  _QWORD v74[24];
  _BYTE v75[200];
  int64_t v76;

  v53 = a2;
  v54 = a1;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  v4 = MEMORY[0x24BDAC7A8](v60);
  v6 = (_OWORD *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (_OWORD *)((char *)&v53 - v7);
  v9 = type metadata accessor for Location();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  result = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v61 = (_QWORD *)a3;
  v14 = *(_QWORD *)(a3 + 64);
  v55 = 0;
  v56 = a3 + 64;
  v15 = 1 << *(_BYTE *)(a3 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v57 = (unint64_t)(v15 + 63) >> 6;
  if ((v16 & v14) == 0)
    goto LABEL_7;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v76 = v13;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v49)) + (v50 << 6))
  {
    v20 = v61[7];
    v21 = (__int128 *)(v61[6] + 176 * i);
    v23 = v21[1];
    v22 = v21[2];
    v62 = *v21;
    v63 = v23;
    v64 = v22;
    v24 = v21[6];
    v26 = v21[3];
    v25 = v21[4];
    v67 = v21[5];
    v68 = v24;
    v65 = v26;
    v66 = v25;
    v27 = v21[10];
    v29 = v21[7];
    v28 = v21[8];
    v71 = v21[9];
    v72 = v27;
    v69 = v29;
    v70 = v28;
    sub_23B725660(v20 + *(_QWORD *)(v58 + 72) * i, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v30 = v60;
    v31 = (uint64_t)v8 + *(int *)(v60 + 48);
    v32 = v71;
    v8[8] = v70;
    v8[9] = v32;
    v8[10] = v72;
    v33 = v67;
    v8[4] = v66;
    v8[5] = v33;
    v34 = v69;
    v8[6] = v68;
    v8[7] = v34;
    v35 = v63;
    *v8 = v62;
    v8[1] = v35;
    v36 = v65;
    v8[2] = v64;
    v8[3] = v36;
    sub_23B725660((uint64_t)v12, v31, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v37 = (uint64_t)v6 + *(int *)(v30 + 48);
    v38 = v71;
    v6[8] = v70;
    v6[9] = v38;
    v6[10] = v72;
    v39 = v67;
    v6[4] = v66;
    v6[5] = v39;
    v40 = v69;
    v6[6] = v68;
    v6[7] = v40;
    v41 = v63;
    *v6 = v62;
    v6[1] = v41;
    v42 = v65;
    v6[2] = v64;
    v6[3] = v42;
    sub_23B725660(v31, v37, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F4E8C((uint64_t)&v62);
    sub_23B6F4E8C((uint64_t)&v62);
    sub_23B6F4E8C((uint64_t)&v62);
    sub_23B6F7190((uint64_t)v8, &qword_254302580);
    v43 = v6[9];
    v73[8] = v6[8];
    v73[9] = v43;
    v73[10] = v6[10];
    v44 = v6[5];
    v73[4] = v6[4];
    v73[5] = v44;
    v45 = v6[7];
    v73[6] = v6[6];
    v73[7] = v45;
    v46 = v6[1];
    v73[0] = *v6;
    v73[1] = v46;
    v47 = v6[3];
    v73[2] = v6[2];
    v73[3] = v47;
    sub_23B6F5744((uint64_t)v73);
    sub_23B6FC8F4(v37 + *(int *)(v59 + 20), (uint64_t)v74, &qword_256A48360);
    sub_23B7254CC(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B709CE0);
    sub_23B700B04(v37, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6FC8F4((uint64_t)v74, (uint64_t)v75, &qword_256A48360);
    if (sub_23B725120((uint64_t)v75) == 1)
    {
      sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      result = sub_23B6F5744((uint64_t)&v62);
      *(unint64_t *)((char *)v54 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
      if (__OFADD__(v55++, 1))
        goto LABEL_27;
      v13 = v76;
      if (v17)
        goto LABEL_4;
    }
    else
    {
      sub_23B7254CC(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B725538);
      sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      result = sub_23B6F5744((uint64_t)&v62);
      v13 = v76;
      if (v17)
        goto LABEL_4;
    }
LABEL_7:
    v48 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v48 >= v57)
      return sub_23B721C08(v54, v53, v55, v61);
    v49 = *(_QWORD *)(v56 + 8 * v48);
    v50 = v13 + 1;
    if (!v49)
    {
      v50 = v13 + 2;
      if (v13 + 2 >= v57)
        return sub_23B721C08(v54, v53, v55, v61);
      v49 = *(_QWORD *)(v56 + 8 * v50);
      if (!v49)
      {
        v50 = v13 + 3;
        if (v13 + 3 >= v57)
          return sub_23B721C08(v54, v53, v55, v61);
        v49 = *(_QWORD *)(v56 + 8 * v50);
        if (!v49)
          break;
      }
    }
LABEL_20:
    v17 = (v49 - 1) & v49;
    v76 = v50;
  }
  v51 = v13 + 4;
  if (v13 + 4 >= v57)
    return sub_23B721C08(v54, v53, v55, v61);
  v49 = *(_QWORD *)(v56 + 8 * v51);
  if (v49)
  {
    v50 = v13 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v50 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v50 >= v57)
      return sub_23B721C08(v54, v53, v55, v61);
    v49 = *(_QWORD *)(v56 + 8 * v50);
    ++v51;
    if (v49)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23B721428(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[11];
  _QWORD v74[24];
  _BYTE v75[200];
  int64_t v76;

  v53 = a2;
  v54 = a1;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  v4 = MEMORY[0x24BDAC7A8](v60);
  v6 = (_OWORD *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (_OWORD *)((char *)&v53 - v7);
  v9 = type metadata accessor for Location();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  result = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v61 = (_QWORD *)a3;
  v14 = *(_QWORD *)(a3 + 64);
  v55 = 0;
  v56 = a3 + 64;
  v15 = 1 << *(_BYTE *)(a3 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v57 = (unint64_t)(v15 + 63) >> 6;
  if ((v16 & v14) == 0)
    goto LABEL_7;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v76 = v13;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v49)) + (v50 << 6))
  {
    v20 = v61[7];
    v21 = (__int128 *)(v61[6] + 176 * i);
    v23 = v21[1];
    v22 = v21[2];
    v62 = *v21;
    v63 = v23;
    v64 = v22;
    v24 = v21[6];
    v26 = v21[3];
    v25 = v21[4];
    v67 = v21[5];
    v68 = v24;
    v65 = v26;
    v66 = v25;
    v27 = v21[10];
    v29 = v21[7];
    v28 = v21[8];
    v71 = v21[9];
    v72 = v27;
    v69 = v29;
    v70 = v28;
    sub_23B725660(v20 + *(_QWORD *)(v58 + 72) * i, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v30 = v60;
    v31 = (uint64_t)v8 + *(int *)(v60 + 48);
    v32 = v71;
    v8[8] = v70;
    v8[9] = v32;
    v8[10] = v72;
    v33 = v67;
    v8[4] = v66;
    v8[5] = v33;
    v34 = v69;
    v8[6] = v68;
    v8[7] = v34;
    v35 = v63;
    *v8 = v62;
    v8[1] = v35;
    v36 = v65;
    v8[2] = v64;
    v8[3] = v36;
    sub_23B725660((uint64_t)v12, v31, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v37 = (uint64_t)v6 + *(int *)(v30 + 48);
    v38 = v71;
    v6[8] = v70;
    v6[9] = v38;
    v6[10] = v72;
    v39 = v67;
    v6[4] = v66;
    v6[5] = v39;
    v40 = v69;
    v6[6] = v68;
    v6[7] = v40;
    v41 = v63;
    *v6 = v62;
    v6[1] = v41;
    v42 = v65;
    v6[2] = v64;
    v6[3] = v42;
    sub_23B725660(v31, v37, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F4E8C((uint64_t)&v62);
    sub_23B6F4E8C((uint64_t)&v62);
    sub_23B6F4E8C((uint64_t)&v62);
    sub_23B6F7190((uint64_t)v8, &qword_254302580);
    v43 = v6[9];
    v73[8] = v6[8];
    v73[9] = v43;
    v73[10] = v6[10];
    v44 = v6[5];
    v73[4] = v6[4];
    v73[5] = v44;
    v45 = v6[7];
    v73[6] = v6[6];
    v73[7] = v45;
    v46 = v6[1];
    v73[0] = *v6;
    v73[1] = v46;
    v47 = v6[3];
    v73[2] = v6[2];
    v73[3] = v47;
    sub_23B6F5744((uint64_t)v73);
    sub_23B6FC8F4(v37 + *(int *)(v59 + 20), (uint64_t)v74, &qword_256A48360);
    sub_23B7254CC(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B709CE0);
    sub_23B700B04(v37, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6FC8F4((uint64_t)v74, (uint64_t)v75, &qword_256A48360);
    if (sub_23B725120((uint64_t)v75) == 1)
    {
      sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      result = sub_23B6F5744((uint64_t)&v62);
      v13 = v76;
      if (v17)
        goto LABEL_4;
    }
    else
    {
      sub_23B7254CC(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B725538);
      sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      result = sub_23B6F5744((uint64_t)&v62);
      *(unint64_t *)((char *)v54 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
      if (__OFADD__(v55++, 1))
        goto LABEL_27;
      v13 = v76;
      if (v17)
        goto LABEL_4;
    }
LABEL_7:
    v48 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v48 >= v57)
      return sub_23B721C08(v54, v53, v55, v61);
    v49 = *(_QWORD *)(v56 + 8 * v48);
    v50 = v13 + 1;
    if (!v49)
    {
      v50 = v13 + 2;
      if (v13 + 2 >= v57)
        return sub_23B721C08(v54, v53, v55, v61);
      v49 = *(_QWORD *)(v56 + 8 * v50);
      if (!v49)
      {
        v50 = v13 + 3;
        if (v13 + 3 >= v57)
          return sub_23B721C08(v54, v53, v55, v61);
        v49 = *(_QWORD *)(v56 + 8 * v50);
        if (!v49)
          break;
      }
    }
LABEL_20:
    v17 = (v49 - 1) & v49;
    v76 = v50;
  }
  v51 = v13 + 4;
  if (v13 + 4 >= v57)
    return sub_23B721C08(v54, v53, v55, v61);
  v49 = *(_QWORD *)(v56 + 8 * v51);
  if (v49)
  {
    v50 = v13 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v50 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v50 >= v57)
      return sub_23B721C08(v54, v53, v55, v61);
    v49 = *(_QWORD *)(v56 + 8 * v50);
    ++v51;
    if (v49)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23B72186C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD v39[2];
  unint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;

  v8 = sub_23B7968A8();
  v45 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)v39 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v43 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A486A8);
  result = sub_23B796DA0();
  v14 = result;
  v40 = a1;
  v41 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v39[0] = "kFMFGroupIdOneToOne";
  v39[1] = "ddress";
  v18 = v43;
  v19 = v44;
  v42 = a4;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v16 << 6);
    }
    else
    {
      v22 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v22 >= v41)
        return v14;
      v23 = v40[v22];
      ++v16;
      if (!v23)
      {
        v16 = v22 + 1;
        if (v22 + 1 >= v41)
          return v14;
        v23 = v40[v16];
        if (!v23)
        {
          v16 = v22 + 2;
          if (v22 + 2 >= v41)
            return v14;
          v23 = v40[v16];
          if (!v23)
          {
            v24 = v22 + 3;
            if (v24 >= v41)
              return v14;
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v16 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  return v14;
                v23 = v40[v16];
                ++v24;
                if (v23)
                  goto LABEL_24;
              }
            }
            v16 = v24;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v21 = __clz(__rbit64(v23)) + (v16 << 6);
    }
    v25 = a4[7];
    v26 = *(_BYTE *)(a4[6] + v21);
    v27 = v45;
    v28 = *(_QWORD *)(v45 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v19, v25 + v28 * v21, v18);
    v29 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v29(v46, v19, v18);
    sub_23B796F44();
    sub_23B796A64();
    swift_bridgeObjectRelease();
    result = sub_23B796F74();
    v30 = -1 << *(_BYTE *)(v14 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v33 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      v18 = v43;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v30) >> 6;
      v18 = v43;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v36 = v32 == v35;
        if (v32 == v35)
          v32 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v37 == -1);
      v33 = __clz(__rbit64(~v37)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    *(_BYTE *)(*(_QWORD *)(v14 + 48) + v33) = v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(*(_QWORD *)(v14 + 56) + v33 * v28, v46, v18);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v42;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23B721C08(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;

  v8 = type metadata accessor for Location();
  v59 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (uint64_t)&v54 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A485A0);
  result = sub_23B796DA0();
  v14 = result;
  v56 = a2;
  v55 = a1;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v57 = a4;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v60 = v16;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v56)
        return v14;
      v21 = v55[v20];
      v22 = v16 + 1;
      if (!v21)
      {
        v22 = v16 + 2;
        if (v16 + 2 >= v56)
          return v14;
        v21 = v55[v22];
        if (!v21)
        {
          v22 = v16 + 3;
          if (v16 + 3 >= v56)
            return v14;
          v21 = v55[v22];
          if (!v21)
          {
            v23 = v16 + 4;
            if (v16 + 4 >= v56)
              return v14;
            v21 = v55[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v56)
                  return v14;
                v21 = v55[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v60 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = a4[7];
    v25 = (__int128 *)(a4[6] + 176 * v19);
    v27 = v25[1];
    v26 = v25[2];
    v61 = *v25;
    v62 = v27;
    v63 = v26;
    v28 = v25[5];
    v29 = v25[6];
    v30 = v25[4];
    v64 = v25[3];
    v66 = v28;
    v67 = v29;
    v65 = v30;
    v31 = v25[10];
    v33 = v25[7];
    v32 = v25[8];
    v70 = v25[9];
    v71 = v31;
    v68 = v33;
    v69 = v32;
    v34 = *(_QWORD *)(v59 + 72);
    v35 = v58;
    sub_23B725660(v24 + v34 * v19, v58, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6FF360(v35, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B796F44();
    sub_23B796A58();
    sub_23B6F4E8C((uint64_t)&v61);
    sub_23B796A64();
    swift_bridgeObjectRelease();
    result = sub_23B796F74();
    v36 = -1 << *(_BYTE *)(v14 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v17 + 8 * (v37 >> 6))) != 0)
    {
      v39 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v17 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v42 = v38 == v41;
        if (v38 == v41)
          v38 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v17 + 8 * v38);
      }
      while (v43 == -1);
      v39 = __clz(__rbit64(~v43)) + (v38 << 6);
    }
    *(_QWORD *)(v17 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v44 = (_OWORD *)(*(_QWORD *)(v14 + 48) + 176 * v39);
    v46 = v66;
    v45 = v67;
    v47 = v65;
    v44[3] = v64;
    v44[4] = v47;
    v44[5] = v46;
    v44[6] = v45;
    v49 = v62;
    v48 = v63;
    *v44 = v61;
    v44[1] = v49;
    v44[2] = v48;
    v50 = v68;
    v51 = v69;
    v52 = v71;
    v44[9] = v70;
    v44[10] = v52;
    v44[7] = v50;
    v44[8] = v51;
    result = sub_23B6FF360((uint64_t)v11, *(_QWORD *)(v14 + 56) + v39 * v34, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v57;
    v16 = v60;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void (*sub_23B722024(_QWORD *a1, unsigned __int8 a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_23B722234(v4);
  v4[9] = sub_23B7220DC((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_23B7220A0;
}

void sub_23B7220A0(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

unint64_t (*sub_23B7220DC(uint64_t a1, unsigned __int8 a2, char a3))(unint64_t result)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t (*result)(unint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v8 = *v3;
  v10 = sub_23B6F564C(a2);
  *(_BYTE *)(a1 + 25) = v9 & 1;
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = *(_QWORD *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v10;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(_QWORD *)a1 = v16;
        return sub_23B7221EC;
      }
LABEL_11:
      v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23B781998();
      goto LABEL_7;
    }
    sub_23B6EE53C(v13, a3 & 1);
    v17 = sub_23B6F564C(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      *(_QWORD *)(a1 + 16) = v17;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (unint64_t (*)(unint64_t))sub_23B796EF0();
  __break(1u);
  return result;
}

unint64_t sub_23B7221EC(unint64_t result)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v2 = **(_QWORD ***)(result + 8);
    if ((*(_BYTE *)(result + 25) & 1) != 0)
      *(_QWORD *)(v2[7] + 8 * *(_QWORD *)(result + 16)) = v1;
    else
      return sub_23B73BE90(*(_QWORD *)(result + 16), *(_BYTE *)(result + 24), v1, v2);
  }
  else if ((*(_BYTE *)(result + 25) & 1) != 0)
  {
    return sub_23B782768(*(_QWORD *)(result + 16), **(_QWORD **)(result + 8));
  }
  return result;
}

uint64_t (*sub_23B722234(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_23B722254;
}

uint64_t sub_23B722254(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_23B722260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23B705410(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t sub_23B7223B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  char *v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  unint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  int64_t v59;
  int64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;
  _OWORD v64[11];
  _OWORD v65[11];
  _BYTE v66[176];
  _BYTE v67[176];
  _BYTE v68[176];
  _OWORD v69[11];
  _BYTE __dst[176];
  _QWORD v71[3];
  uint64_t v72;
  unint64_t v73;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = a1;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v10 = v5[3] >> 1, v10 < v7))
  {
    if (v6 <= v7)
      v11 = v6 + v4;
    else
      v11 = v6;
    v5 = sub_23B705654(isUniquelyReferenced_nonNull_native, v11, 1, v5);
    v10 = v5[3] >> 1;
  }
  v12 = v5[2];
  v6 = v10 - v12;
  v13 = sub_23B722B34(v71, (char *)&v5[22 * v12 + 4], v10 - v12, v8);
  if ((uint64_t)v13 < v4)
    goto LABEL_15;
  if (v13)
  {
    v14 = v5[2];
    v15 = __OFADD__(v14, v13);
    v16 = (char *)v13 + v14;
    if (v15)
    {
      __break(1u);
      goto LABEL_20;
    }
    v5[2] = v16;
  }
  if (v13 == (_QWORD *)v6)
  {
LABEL_16:
    v3 = v5[2];
    v7 = v71[0];
    v61 = v71[1];
    v62 = v71[0];
    v8 = v71[2];
    v4 = v72;
    if (v73)
    {
      v18 = (v73 - 1) & v73;
      v19 = __clz(__rbit64(v73)) | (v72 << 6);
LABEL_18:
      v20 = (_OWORD *)(*(_QWORD *)(v7 + 48) + 176 * v19);
      v22 = v20[1];
      v21 = v20[2];
      v69[0] = *v20;
      v69[1] = v22;
      v69[2] = v21;
      v23 = v20[3];
      v24 = v20[4];
      v25 = v20[6];
      v69[5] = v20[5];
      v69[6] = v25;
      v69[3] = v23;
      v69[4] = v24;
      v26 = v20[7];
      v27 = v20[8];
      v28 = v20[9];
      v69[10] = v20[10];
      v69[9] = v28;
      v69[8] = v27;
      v69[7] = v26;
      memmove(__dst, v20, 0xB0uLL);
      nullsub_1(__dst);
      sub_23B6F4E8C((uint64_t)v69);
      v6 = v4;
LABEL_42:
      sub_23B6FC8F4((uint64_t)__dst, (uint64_t)v68, (uint64_t *)&unk_254302520);
      sub_23B6FC8F4((uint64_t)v68, (uint64_t)v69, (uint64_t *)&unk_254302520);
      if (sub_23B7251E4((uint64_t)v69) == 1)
        goto LABEL_13;
      v63 = (unint64_t)(v8 + 64) >> 6;
      while (1)
      {
        v34 = v5[3];
        v35 = v34 >> 1;
        if ((uint64_t)(v34 >> 1) < v3 + 1)
        {
          v5 = sub_23B705654((_QWORD *)(v34 > 1), v3 + 1, 1, v5);
          v35 = v5[3] >> 1;
        }
        sub_23B6FC8F4((uint64_t)__dst, (uint64_t)v66, (uint64_t *)&unk_254302520);
        sub_23B6FC8F4((uint64_t)v66, (uint64_t)v67, (uint64_t *)&unk_254302520);
        if (sub_23B7251E4((uint64_t)v67) != 1)
          break;
LABEL_45:
        v5[2] = v3;
        sub_23B6FC8F4((uint64_t)__dst, (uint64_t)v68, (uint64_t *)&unk_254302520);
        sub_23B6FC8F4((uint64_t)v68, (uint64_t)v69, (uint64_t *)&unk_254302520);
        if (sub_23B7251E4((uint64_t)v69) == 1)
          goto LABEL_13;
      }
      while (1)
      {
        if (v3 >= v35)
          goto LABEL_45;
        result = sub_23B6FC8F4((uint64_t)v66, (uint64_t)v65, (uint64_t *)&unk_254302520);
        v47 = &v5[22 * v3 + 4];
        v49 = v65[1];
        v48 = v65[2];
        *v47 = v65[0];
        v47[1] = v49;
        v47[2] = v48;
        v50 = v65[6];
        v52 = v65[3];
        v51 = v65[4];
        v47[5] = v65[5];
        v47[6] = v50;
        v47[3] = v52;
        v47[4] = v51;
        v53 = v65[10];
        v55 = v65[7];
        v54 = v65[8];
        v47[9] = v65[9];
        v47[10] = v53;
        v47[7] = v55;
        v47[8] = v54;
        if (!v18)
          break;
        v36 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v37 = v36 | (v6 << 6);
LABEL_51:
        v38 = (_OWORD *)(*(_QWORD *)(v7 + 48) + 176 * v37);
        v40 = v38[1];
        v39 = v38[2];
        v64[0] = *v38;
        v64[1] = v40;
        v64[2] = v39;
        v41 = v38[3];
        v42 = v38[4];
        v43 = v38[6];
        v64[5] = v38[5];
        v64[6] = v43;
        v64[3] = v41;
        v64[4] = v42;
        v44 = v38[7];
        v45 = v38[8];
        v46 = v38[10];
        v64[9] = v38[9];
        v64[10] = v46;
        v64[7] = v44;
        v64[8] = v45;
        memmove(__dst, v38, 0xB0uLL);
        nullsub_1(__dst);
        sub_23B6F4E8C((uint64_t)v64);
LABEL_52:
        ++v3;
        sub_23B6FC8F4((uint64_t)__dst, (uint64_t)v66, (uint64_t *)&unk_254302520);
        sub_23B6FC8F4((uint64_t)v66, (uint64_t)v67, (uint64_t *)&unk_254302520);
        if (sub_23B7251E4((uint64_t)v67) == 1)
          goto LABEL_45;
      }
      v56 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        return result;
      }
      if (v56 >= v63)
      {
        v58 = v6;
LABEL_60:
        sub_23B7251FC(v64);
        sub_23B6FC8F4((uint64_t)v64, (uint64_t)__dst, (uint64_t *)&unk_254302520);
        v18 = 0;
        v6 = v58;
        v7 = v62;
        goto LABEL_52;
      }
      v57 = *(_QWORD *)(v61 + 8 * v56);
      if (v57)
      {
LABEL_58:
        v18 = (v57 - 1) & v57;
        v37 = __clz(__rbit64(v57)) + (v56 << 6);
        v6 = v56;
        goto LABEL_51;
      }
      v59 = v6 + 2;
      v58 = v6 + 1;
      if (v6 + 2 >= v63)
        goto LABEL_60;
      v57 = *(_QWORD *)(v61 + 8 * v59);
      if (!v57)
      {
        v58 = v6 + 2;
        if (v6 + 3 >= v63)
          goto LABEL_60;
        v57 = *(_QWORD *)(v61 + 8 * (v6 + 3));
        if (v57)
        {
          v56 = v6 + 3;
          goto LABEL_64;
        }
        v59 = v6 + 4;
        v58 = v6 + 3;
        if (v6 + 4 >= v63)
          goto LABEL_60;
        v57 = *(_QWORD *)(v61 + 8 * v59);
        if (!v57)
        {
          v56 = v6 + 5;
          v58 = v6 + 4;
          if (v6 + 5 >= v63)
            goto LABEL_60;
          v7 = v62;
          v57 = *(_QWORD *)(v61 + 8 * v56);
          if (!v57)
          {
            v60 = v6 + 6;
            while (v63 != v60)
            {
              v57 = *(_QWORD *)(v61 + 8 * v60++);
              if (v57)
              {
                v56 = v60 - 1;
                goto LABEL_64;
              }
            }
            v58 = v63 - 1;
            goto LABEL_60;
          }
          goto LABEL_58;
        }
      }
      v56 = v59;
LABEL_64:
      v7 = v62;
      goto LABEL_58;
    }
LABEL_20:
    v29 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      v30 = (unint64_t)(v8 + 64) >> 6;
      v6 = v4;
      if (v29 >= v30)
        goto LABEL_41;
      v31 = *(_QWORD *)(v61 + 8 * v29);
      if (v31)
      {
LABEL_23:
        v18 = (v31 - 1) & v31;
        v19 = __clz(__rbit64(v31)) + (v29 << 6);
        v4 = v29;
        goto LABEL_18;
      }
      v32 = v4 + 2;
      v6 = v4 + 1;
      if (v4 + 2 >= v30)
        goto LABEL_41;
      v1 = v8;
      v31 = *(_QWORD *)(v61 + 8 * v32);
      if (v31)
      {
LABEL_26:
        v29 = v32;
LABEL_27:
        v7 = v62;
        goto LABEL_23;
      }
      v6 = v4 + 2;
      v7 = v62;
      if (v4 + 3 >= v30)
        goto LABEL_41;
      v31 = *(_QWORD *)(v61 + 8 * (v4 + 3));
      if (v31)
      {
        v29 = v4 + 3;
        goto LABEL_27;
      }
      v32 = v4 + 4;
      v6 = v4 + 3;
      v7 = v62;
      if (v4 + 4 >= v30)
        goto LABEL_41;
      v31 = *(_QWORD *)(v61 + 8 * v32);
      if (v31)
        goto LABEL_26;
      v29 = v4 + 5;
      v6 = v4 + 4;
      v7 = v62;
      if (v4 + 5 >= v30)
      {
LABEL_41:
        sub_23B7251FC(v69);
        sub_23B6FC8F4((uint64_t)v69, (uint64_t)__dst, (uint64_t *)&unk_254302520);
        v18 = 0;
        goto LABEL_42;
      }
      v31 = *(_QWORD *)(v61 + 8 * v29);
      if (v31)
        goto LABEL_23;
      v6 = v30 - 1;
      v33 = v4 + 6;
      while (v30 != v33)
      {
        v31 = *(_QWORD *)(v61 + 8 * v33++);
        if (v31)
        {
          v29 = v33 - 1;
          goto LABEL_27;
        }
      }
    }
    v7 = v62;
    v8 = v1;
    goto LABEL_41;
  }
LABEL_13:
  result = sub_23B723160();
  *(_QWORD *)v2 = v5;
  return result;
}

uint64_t sub_23B7229A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  unint64_t j;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v22;

  if (!*(_QWORD *)(a2 + 16))
    return 1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v22 = a1 + 32;
  v4 = a2 + 56;
  swift_bridgeObjectRetain();
  for (i = 0; i != v2; ++i)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = (uint64_t *)(v22 + 16 * i);
      v8 = *v6;
      v7 = v6[1];
      sub_23B796F44();
      swift_bridgeObjectRetain();
      sub_23B796A64();
      v9 = sub_23B796F74();
      v10 = -1 << *(_BYTE *)(a2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(a2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_23B796ECC() & 1) != 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          v20 = 0;
          goto LABEL_23;
        }
        v15 = ~v10;
        for (j = v11 + 1; ; j = v17 + 1)
        {
          v17 = j & v15;
          if (((*(_QWORD *)(v4 + (((j & v15) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v15)) & 1) == 0)
            break;
          v18 = (_QWORD *)(v12 + 16 * v17);
          v19 = *v18 == v8 && v18[1] == v7;
          if (v19 || (sub_23B796ECC() & 1) != 0)
            goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  v20 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v20;
}

_QWORD *sub_23B722B34(_QWORD *result, char *__dst, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _OWORD v30[12];

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!__dst)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = __dst;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v29 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_OWORD *)(*(_QWORD *)(a4 + 48) + 176 * v16);
    v22 = v20[1];
    v21 = v20[2];
    v30[0] = *v20;
    v30[1] = v22;
    v30[2] = v21;
    v23 = v20[6];
    v25 = v20[3];
    v24 = v20[4];
    v30[5] = v20[5];
    v30[6] = v23;
    v30[3] = v25;
    v30[4] = v24;
    v26 = v20[10];
    v28 = v20[7];
    v27 = v20[8];
    v30[9] = v20[9];
    v30[10] = v26;
    v30[7] = v28;
    v30[8] = v27;
    memmove(v11, v20, 0xB0uLL);
    if (v13 == v10)
    {
      sub_23B6F4E8C((uint64_t)v30);
      goto LABEL_38;
    }
    v11 += 176;
    result = (_QWORD *)sub_23B6F4E8C((uint64_t)v30);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v29;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23B722D74(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_23B722E14(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23B722EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B722F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_BYTE *)(v1 + 40);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B6FD140;
  return sub_23B7139F0(a1, v4, v5, v6, v10, v7, v8, v9);
}

uint64_t sub_23B723044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B7230C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0) - 8) + 80);
  v3 = *(_QWORD **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = v0 + ((v2 + 56) & ~v2);
  v8 = *(_BYTE *)(v0 + 24);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_23B6FD140;
  return sub_23B713BD8(v3, v8, v4, v5, v6, v7);
}

uint64_t sub_23B723160()
{
  return swift_release();
}

uint64_t sub_23B723168()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

unint64_t sub_23B72318C()
{
  unint64_t result;

  result = qword_254302590;
  if (!qword_254302590)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_254302590);
  }
  return result;
}

uint64_t sub_23B7231D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 83) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B723260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 56);
  v11 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 64);
  v6 = *(_BYTE *)(v1 + 40);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B6FD140;
  return sub_23B712FB4(a1, v3, v4, v5, v6, v11, v10, v9);
}

uint64_t sub_23B723348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 67) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B7233D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;
  char v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254302768);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v11 = *(_BYTE *)(v0 + 65);
  v7 = *(_BYTE *)(v0 + 64);
  v8 = *(_BYTE *)(v0 + 24);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_23B6FD140;
  return sub_23B7131F8(v2, v8, v3, v4, v5, v6, v7, v11);
}

uint64_t sub_23B72349C(_OWORD *a1, uint64_t a2, uint64_t *a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __int128 v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  char *v54;
  _QWORD v55[2];
  char *v56;
  os_log_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[24];
  uint64_t v63[24];
  _OWORD v64[12];

  LODWORD(v59) = a4;
  v61 = type metadata accessor for Location();
  v7 = MEMORY[0x24BDAC7A8](v61);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v60 = (uint64_t)v55 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B7968A8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v55 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v55 - v21;
  v23 = a1[5];
  v64[4] = a1[4];
  v64[5] = v23;
  v24 = a1[3];
  v64[2] = a1[2];
  v64[3] = v24;
  v25 = a1[10];
  v26 = a1[8];
  v64[9] = a1[9];
  v64[10] = v25;
  v27 = a1[7];
  v64[6] = a1[6];
  v64[7] = v27;
  v64[8] = v26;
  v28 = a1[1];
  v64[0] = *a1;
  v64[1] = v28;
  v29 = *a3;
  if (!*(_QWORD *)(v29 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_7:
    sub_23B6F7190((uint64_t)v13, &qword_254302B18);
    return 0;
  }
  v58 = v20;
  sub_23B6F4E8C((uint64_t)v64);
  v30 = sub_23B780558((uint64_t)v64);
  if ((v31 & 1) != 0)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v13, *(_QWORD *)(v29 + 56) + *(_QWORD *)(v15 + 72) * v30, v14);
    v32 = 0;
  }
  else
  {
    v32 = 1;
  }
  v33 = v22;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v32, 1, v14);
  sub_23B6F5744((uint64_t)v64);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_7;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v13, v14);
  sub_23B79686C();
  v35 = sub_23B796848();
  v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v19, v14);
  if ((v35 & 1) != 0)
  {
    if (qword_254303110 != -1)
      swift_once();
    v37 = sub_23B7969BC();
    __swift_project_value_buffer(v37, (uint64_t)qword_2543090D0);
    v38 = v60;
    sub_23B725660(a2, v60, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v39 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
    v40 = v58;
    v39((uint64_t)v58, v33, v14);
    sub_23B6F4E8C((uint64_t)v64);
    sub_23B6F4E8C((uint64_t)v64);
    v41 = sub_23B7969A4();
    v42 = sub_23B796C38();
    v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v44 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v63[0] = v59;
      *(_DWORD *)v44 = 136447747;
      v57 = v41;
      v62[0] = sub_23B6FB388(0xD000000000000038, 0x800000023B7A0270, v63);
      sub_23B796C68();
      *(_WORD *)(v44 + 12) = 2160;
      v62[0] = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v44 + 22) = 2081;
      v56 = v33;
      sub_23B79686C();
      v55[1] = sub_23B6EE138(&qword_256A485C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v45 = sub_23B796EB4();
      LODWORD(v61) = v43;
      v47 = v46;
      v36(v19, v14);
      v62[0] = sub_23B6FB388(v45, v47, v63);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B700B04(v38, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      *(_WORD *)(v44 + 32) = 2160;
      v62[0] = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v44 + 42) = 2081;
      v48 = v64[0];
      swift_bridgeObjectRetain();
      v62[0] = sub_23B6FB388(v48, *((unint64_t *)&v48 + 1), v63);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B6F5744((uint64_t)v64);
      sub_23B6F5744((uint64_t)v64);
      *(_WORD *)(v44 + 52) = 2160;
      v62[0] = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v44 + 62) = 2081;
      v49 = v58;
      v50 = sub_23B796EB4();
      v62[0] = sub_23B6FB388(v50, v51, v63);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      v36(v49, v14);
      v52 = v57;
      _os_log_impl(&dword_23B6EB000, v57, (os_log_type_t)v61, "%{public}s\ndrop older location date:%{private,mask.hash}s\nfor handle: %{private,mask.hash}s\nwith date: %{private,mask.hash}s", (uint8_t *)v44, 0x48u);
      v53 = v59;
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v53, -1, -1);
      MEMORY[0x23B86C754](v44, -1, -1);

      v54 = v56;
    }
    else
    {

      v36(v40, v14);
      sub_23B6F5744((uint64_t)v64);
      sub_23B6F5744((uint64_t)v64);
      sub_23B700B04(v38, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      v54 = v33;
    }
    v36(v54, v14);
    return 0;
  }
  v36(v22, v14);
  sub_23B725660(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  if ((v59 & 1) != 0)
  {
    sub_23B6FC8F4((uint64_t)&v9[*(int *)(v61 + 20)], (uint64_t)v62, &qword_256A48360);
    sub_23B7254CC(v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B709CE0);
    sub_23B700B04((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6FC8F4((uint64_t)v62, (uint64_t)v63, &qword_256A48360);
    if (sub_23B725120((uint64_t)v63) == 1)
      return 0;
    sub_23B7254CC(v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B725538);
  }
  else
  {
    sub_23B700B04((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  }
  return 1;
}

uint64_t sub_23B723B7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t i;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[11];
  _OWORD v57[12];
  uint64_t *v58;

  v58 = a4;
  v39 = a2;
  v40 = a1;
  v7 = type metadata accessor for Location();
  v44 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = *(_QWORD *)(a3 + 64);
  v41 = 0;
  v42 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v43 = (unint64_t)(v13 + 63) >> 6;
  v16 = a5 & 1;
  if ((v14 & v12) == 0)
    goto LABEL_7;
LABEL_4:
  v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v17 | (v11 << 6); ; i = __clz(__rbit64(v36)) + (v11 << 6))
  {
    v19 = *(_QWORD *)(a3 + 56);
    v20 = (_OWORD *)(*(_QWORD *)(a3 + 48) + 176 * i);
    v22 = v20[1];
    v21 = v20[2];
    v56[0] = *v20;
    v56[1] = v22;
    v56[2] = v21;
    v23 = v20[6];
    v25 = v20[3];
    v24 = v20[4];
    v56[5] = v20[5];
    v56[6] = v23;
    v56[3] = v25;
    v56[4] = v24;
    v26 = v20[10];
    v28 = v20[7];
    v27 = v20[8];
    v56[9] = v20[9];
    v56[10] = v26;
    v56[7] = v28;
    v56[8] = v27;
    v29 = v20[9];
    v53 = v20[8];
    v54 = v29;
    v55 = v20[10];
    v30 = v20[5];
    v49 = v20[4];
    v50 = v30;
    v31 = v20[7];
    v51 = v20[6];
    v52 = v31;
    v32 = v20[1];
    v45 = *v20;
    v46 = v32;
    v33 = v20[3];
    v47 = v20[2];
    v48 = v33;
    sub_23B725660(v19 + *(_QWORD *)(v44 + 72) * i, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F4E8C((uint64_t)v56);
    v34 = sub_23B72349C(&v45, (uint64_t)v10, v58, v16);
    sub_23B700B04((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v57[8] = v53;
    v57[9] = v54;
    v57[10] = v55;
    v57[4] = v49;
    v57[5] = v50;
    v57[6] = v51;
    v57[7] = v52;
    v57[0] = v45;
    v57[1] = v46;
    v57[2] = v47;
    v57[3] = v48;
    result = sub_23B6F5744((uint64_t)v57);
    if ((v34 & 1) != 0)
    {
      *(unint64_t *)((char *)v40 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
      if (__OFADD__(v41, 1))
        goto LABEL_27;
      ++v41;
      if (v15)
        goto LABEL_4;
    }
    else if (v15)
    {
      goto LABEL_4;
    }
LABEL_7:
    v35 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v35 >= v43)
      return sub_23B721C08(v40, v39, v41, (_QWORD *)a3);
    v36 = *(_QWORD *)(v42 + 8 * v35);
    ++v11;
    if (!v36)
    {
      v11 = v35 + 1;
      if (v35 + 1 >= v43)
        return sub_23B721C08(v40, v39, v41, (_QWORD *)a3);
      v36 = *(_QWORD *)(v42 + 8 * v11);
      if (!v36)
      {
        v11 = v35 + 2;
        if (v35 + 2 >= v43)
          return sub_23B721C08(v40, v39, v41, (_QWORD *)a3);
        v36 = *(_QWORD *)(v42 + 8 * v11);
        if (!v36)
          break;
      }
    }
LABEL_20:
    v15 = (v36 - 1) & v36;
  }
  v37 = v35 + 3;
  if (v37 >= v43)
    return sub_23B721C08(v40, v39, v41, (_QWORD *)a3);
  v36 = *(_QWORD *)(v42 + 8 * v37);
  if (v36)
  {
    v11 = v37;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v11 >= v43)
      return sub_23B721C08(v40, v39, v41, (_QWORD *)a3);
    v36 = *(_QWORD *)(v42 + 8 * v11);
    ++v37;
    if (v36)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t *sub_23B723E74(uint64_t isStackAllocationSafe, uint64_t *a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_23B723B7C((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2, a3 & 1);
    if (v3)
      swift_willThrow();
    else
      return (uint64_t *)v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = (uint64_t *)sub_23B723B7C((unint64_t *)v11, v8, v6, a2, a3 & 1);
    MEMORY[0x23B86C754](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_23B723FE4(uint64_t a1, void (*a2)(_OWORD *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int64_t v48;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_OWORD *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 64);
  v36 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v48 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v32 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v32 >= v48)
      return swift_release();
    v33 = *(_QWORD *)(v36 + 8 * v32);
    ++v12;
    if (!v33)
    {
      v12 = v32 + 1;
      if (v32 + 1 >= v48)
        return swift_release();
      v33 = *(_QWORD *)(v36 + 8 * v12);
      if (!v33)
      {
        v12 = v32 + 2;
        if (v32 + 2 >= v48)
          return swift_release();
        v33 = *(_QWORD *)(v36 + 8 * v12);
        if (!v33)
        {
          v12 = v32 + 3;
          if (v32 + 3 >= v48)
            return swift_release();
          v33 = *(_QWORD *)(v36 + 8 * v12);
          if (!v33)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v33 - 1) & v33;
    v14 = __clz(__rbit64(v33)) + (v12 << 6);
LABEL_5:
    v15 = *(_QWORD *)(a1 + 56);
    v16 = (__int128 *)(*(_QWORD *)(a1 + 48) + 176 * v14);
    v18 = v16[1];
    v17 = v16[2];
    v37 = *v16;
    v38 = v18;
    v39 = v17;
    v19 = v16[6];
    v21 = v16[3];
    v20 = v16[4];
    v42 = v16[5];
    v43 = v19;
    v40 = v21;
    v41 = v20;
    v22 = v16[10];
    v24 = v16[7];
    v23 = v16[8];
    v46 = v16[9];
    v47 = v22;
    v44 = v24;
    v45 = v23;
    v25 = v15 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for Location() - 8) + 72) * v14;
    v26 = (uint64_t)v6 + *(int *)(v4 + 48);
    sub_23B725660(v25, v26, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v27 = v46;
    v6[8] = v45;
    v6[9] = v27;
    v6[10] = v47;
    v28 = v42;
    v6[4] = v41;
    v6[5] = v28;
    v29 = v44;
    v6[6] = v43;
    v6[7] = v29;
    v30 = v38;
    *v6 = v37;
    v6[1] = v30;
    v31 = v40;
    v6[2] = v39;
    v6[3] = v31;
    sub_23B6F4E8C((uint64_t)&v37);
    a2(v6, v26);
    result = sub_23B6F7190((uint64_t)v6, &qword_254302580);
  }
  v34 = v32 + 4;
  if (v34 >= v48)
    return swift_release();
  v33 = *(_QWORD *)(v36 + 8 * v34);
  if (v33)
  {
    v12 = v34;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v12 >= v48)
      return swift_release();
    v33 = *(_QWORD *)(v36 + 8 * v12);
    ++v34;
    if (v33)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B7242A8(_OWORD *a1, char a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v15;
  _OWORD v16[12];
  uint64_t v17;

  v4 = a1[9];
  v16[8] = a1[8];
  v16[9] = v4;
  v16[10] = a1[10];
  v5 = a1[5];
  v16[4] = a1[4];
  v16[5] = v5;
  v6 = a1[7];
  v16[6] = a1[6];
  v16[7] = v6;
  v7 = a1[1];
  v16[0] = *a1;
  v16[1] = v7;
  v8 = a1[3];
  v16[2] = a1[2];
  v16[3] = v8;
  if (qword_254303110 != -1)
    swift_once();
  v9 = sub_23B7969BC();
  __swift_project_value_buffer(v9, (uint64_t)qword_2543090D0);
  swift_retain_n();
  sub_23B6F4E8C((uint64_t)v16);
  v10 = sub_23B7969A4();
  v11 = sub_23B796C38();
  if (os_log_type_enabled(v10, v11))
  {
    v17 = v2;
    v12 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v12 = 141558787;
    sub_23B796C68();
    *(_WORD *)(v12 + 12) = 2081;
    v13 = v16[0];
    swift_bridgeObjectRetain();
    sub_23B6FB388(v13, *((unint64_t *)&v13 + 1), &v15);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)v16);
    *(_WORD *)(v12 + 22) = 2082;
    __asm { BR              X10 }
  }
  swift_release();
  sub_23B6F5744((uint64_t)v16);

  return swift_release();
}

void sub_23B724624(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD v12[11];
  uint64_t v13;

  v1 = a1[9];
  v12[8] = a1[8];
  v12[9] = v1;
  v12[10] = a1[10];
  v2 = a1[5];
  v12[4] = a1[4];
  v12[5] = v2;
  v3 = a1[7];
  v12[6] = a1[6];
  v12[7] = v3;
  v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  v5 = a1[3];
  v12[2] = a1[2];
  v12[3] = v5;
  if (qword_254303110 != -1)
    swift_once();
  v6 = sub_23B7969BC();
  __swift_project_value_buffer(v6, (uint64_t)qword_2543090D0);
  sub_23B6F4E8C((uint64_t)v12);
  v7 = sub_23B7969A4();
  v8 = sub_23B796C38();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136446723;
    sub_23B6FB388(0xD00000000000002ALL, 0x800000023B7A0320, &v13);
    sub_23B796C68();
    *(_WORD *)(v9 + 12) = 2160;
    sub_23B796C68();
    *(_WORD *)(v9 + 22) = 2081;
    v11 = v12[0];
    swift_bridgeObjectRetain();
    sub_23B6FB388(v11, *((unint64_t *)&v11 + 1), &v13);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)v12);
    _os_log_impl(&dword_23B6EB000, v7, v8, "%{public}s for handle: %{private,mask.hash}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);
  }
  else
  {
    sub_23B6F5744((uint64_t)v12);
  }

}

uint64_t sub_23B72485C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v57 = a4;
  v40 = a2;
  v41 = a1;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302580);
  MEMORY[0x24BDAC7A8](v45);
  v6 = (_OWORD *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Location();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = 0;
  v12 = 0;
  v13 = *(_QWORD *)(a3 + 64);
  v43 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v44 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_5;
    }
    v35 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v35 >= v44)
      return sub_23B721C08(v41, v40, v42, (_QWORD *)a3);
    v36 = *(_QWORD *)(v43 + 8 * v35);
    ++v12;
    if (!v36)
    {
      v12 = v35 + 1;
      if (v35 + 1 >= v44)
        return sub_23B721C08(v41, v40, v42, (_QWORD *)a3);
      v36 = *(_QWORD *)(v43 + 8 * v12);
      if (!v36)
      {
        v12 = v35 + 2;
        if (v35 + 2 >= v44)
          return sub_23B721C08(v41, v40, v42, (_QWORD *)a3);
        v36 = *(_QWORD *)(v43 + 8 * v12);
        if (!v36)
          break;
      }
    }
LABEL_20:
    v16 = (v36 - 1) & v36;
    v18 = __clz(__rbit64(v36)) + (v12 << 6);
LABEL_5:
    v19 = *(_QWORD *)(a3 + 56);
    v20 = (__int128 *)(*(_QWORD *)(a3 + 48) + 176 * v18);
    v22 = v20[1];
    v21 = v20[2];
    v46 = *v20;
    v47 = v22;
    v48 = v21;
    v23 = v20[6];
    v25 = v20[3];
    v24 = v20[4];
    v51 = v20[5];
    v52 = v23;
    v49 = v25;
    v50 = v24;
    v26 = v20[10];
    v28 = v20[7];
    v27 = v20[8];
    v55 = v20[9];
    v56 = v26;
    v53 = v28;
    v54 = v27;
    sub_23B725660(v19 + *(_QWORD *)(v8 + 72) * v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v29 = v55;
    v6[8] = v54;
    v6[9] = v29;
    v6[10] = v56;
    v30 = v51;
    v6[4] = v50;
    v6[5] = v30;
    v31 = v53;
    v6[6] = v52;
    v6[7] = v31;
    v32 = v47;
    *v6 = v46;
    v6[1] = v32;
    v33 = v49;
    v6[2] = v48;
    v6[3] = v33;
    sub_23B725660((uint64_t)v11, (uint64_t)v6 + *(int *)(v45 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B6F4E8C((uint64_t)&v46);
    sub_23B6F4E8C((uint64_t)&v46);
    v34 = sub_23B715238((uint64_t)&v46, v57);
    sub_23B6F7190((uint64_t)v6, &qword_254302580);
    sub_23B700B04((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    result = sub_23B6F5744((uint64_t)&v46);
    if ((v34 & 1) != 0)
    {
      *(unint64_t *)((char *)v41 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v42++, 1))
      {
        __break(1u);
        return sub_23B721C08(v41, v40, v42, (_QWORD *)a3);
      }
    }
  }
  v37 = v35 + 3;
  if (v37 >= v44)
    return sub_23B721C08(v41, v40, v42, (_QWORD *)a3);
  v36 = *(_QWORD *)(v43 + 8 * v37);
  if (v36)
  {
    v12 = v37;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v12 >= v44)
      return sub_23B721C08(v41, v40, v42, (_QWORD *)a3);
    v36 = *(_QWORD *)(v43 + 8 * v12);
    ++v37;
    if (v36)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23B724BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_23B72485C((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_23B72485C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x23B86C754](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_23B724D98(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10[11];
  _OWORD v11[11];
  uint64_t v12;
  __int128 v13[11];

  v2 = *(_QWORD *)(a1 + 16);
  sub_23B72318C();
  result = sub_23B796BFC();
  v12 = result;
  if (v2)
  {
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = v4[9];
      v13[8] = v4[8];
      v13[9] = v5;
      v13[10] = v4[10];
      v6 = v4[5];
      v13[4] = v4[4];
      v13[5] = v6;
      v7 = v4[7];
      v13[6] = v4[6];
      v13[7] = v7;
      v8 = v4[1];
      v13[0] = *v4;
      v13[1] = v8;
      v9 = v4[3];
      v13[2] = v4[2];
      v13[3] = v9;
      sub_23B6F4E8C((uint64_t)v13);
      sub_23B6F4F50(v10, v13);
      v11[8] = v10[8];
      v11[9] = v10[9];
      v11[10] = v10[10];
      v11[4] = v10[4];
      v11[5] = v10[5];
      v11[6] = v10[6];
      v11[7] = v10[7];
      v11[0] = v10[0];
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      sub_23B6F5744((uint64_t)v11);
      v4 += 11;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_23B724E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Location();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 216) & ~v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  if (*(_QWORD *)(v3 + *(int *)(v1 + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B724FF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Location() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)(v1 + 5);
  v9 = (uint64_t)v1 + ((v4 + 216) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B6FD140;
  return sub_23B71AC50(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_23B72508C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B7250B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A49788 + dword_256A49788))(a1, v4);
}

uint64_t sub_23B725120(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_23B725144(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_23B796BFC();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_23B76ED6C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23B7251D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23B7251E4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_23B7251FC(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23B72521C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B7252B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = v10[9];
  v13 = v10[8];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_23B6FD140;
  return sub_23B70E294(a1, v6, v7, v8, v9, v11, v13, v12);
}

uint64_t sub_23B725384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B725418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = v0 + v3;
  v6 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v7 = *(_QWORD *)v6;
  v8 = *(_BYTE *)(v6 + 9);
  v9 = *(_BYTE *)(v6 + 8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_23B6FD140;
  return sub_23B70E47C(v4, v5, v7, v9, v8);
}

uint64_t sub_23B7254C4(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23B720644(a1, a2, v2);
}

_QWORD *sub_23B7254CC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_23B725538(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B72561C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B725660(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B7256A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B725724(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B6FD140;
  return sub_23B7124B8(a1, v5, v6, v7, v8);
}

uint64_t sub_23B7257BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B725834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0) - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B6FD140;
  v4[3] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v4[4] = v5;
  *v5 = v4;
  v5[1] = sub_23B7126A8;
  return sub_23B71270C();
}

uint64_t sub_23B7258CC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B759B80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B7258D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B72595C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = v1 + ((v4 + 49) & ~v4);
  v10 = *(_BYTE *)(v1 + 48);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B6FD140;
  return sub_23B711964(a1, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_23B725A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B725A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = v0 + ((v2 + 33) & ~v2);
  v6 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_23B6FD140;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 48) = v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  *v7 = v6;
  v7[1] = sub_23B711B94;
  return sub_23B711C90(v3, (_BYTE *)(v6 + 48));
}

uint64_t sub_23B725B3C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B759330(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23B725B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 89) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B725BDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 64);
  v6 = *(_BYTE *)(v1 + 56);
  v7 = *(_BYTE *)(v1 + 48);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B6FD1B0;
  return sub_23B710958(a1, v10, v3, v4, v5, v7, v6, v11);
}

uint64_t sub_23B725CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 73) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B725D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254303FA0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  v12 = *(_OWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_BYTE *)(v0 + 72);
  v8 = v0 + ((v2 + 73) & ~v2);
  v9 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *(_QWORD *)v9 = v1;
  *(_QWORD *)(v9 + 8) = sub_23B6FD1B0;
  *(_QWORD *)(v9 + 56) = v8;
  *(_BYTE *)(v9 + 80) = v4;
  *(_BYTE *)(v9 + 16) = v5;
  *(_OWORD *)(v9 + 24) = v12;
  *(_QWORD *)(v9 + 40) = v6;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 64) = v10;
  *v10 = v9;
  v10[1] = sub_23B710C14;
  return sub_23B710D10(v3, (_BYTE *)(v9 + 80), v9 + 16, v7);
}

uint64_t sub_23B725E2C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23B725E34()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B725E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B6FD140;
  *(_QWORD *)(v3 + 96) = v2;
  v4 = *(_OWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 56);
  v6 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v3 + 61) = *(_QWORD *)(v0 + 85);
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = v6;
  *(_OWORD *)(v3 + 16) = v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 104) = v7;
  *v7 = v3;
  v7[1] = sub_23B720038;
  return sub_23B6FC5D0(v3 + 16);
}

uint64_t sub_23B725F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B725F9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  _QWORD *v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_BYTE *)(v1 + 49);
  v8 = *(_BYTE *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 48);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B6FD140;
  return sub_23B710314(a1, v3, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_23B726074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B7260FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254302480);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 33);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_BYTE *)(v0 + 40);
  v9 = *(_BYTE *)(v0 + 32);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_23B6FD140;
  return sub_23B710534(v2, v3, v9, v4, v8, v5, v6, v7);
}

uint64_t sub_23B7261BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B726268(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543032C8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = (char *)v1 + (v5 & 0xFFFFFFFFFFFFFFF8);
  v7 = v1[3];
  v15 = v1[2];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v4;
  v10 = *((_BYTE *)v1 + v5);
  v11 = *((_QWORD *)v6 + 1);
  v12 = v6[16];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B6FD140;
  return sub_23B71F208(a1, v15, v7, v8, v9, v10, v11, v12);
}

uint64_t Location.init(latitude:longitude:horizontalAccuracy:verticalAccuracy:speed:altitude:floor:timestamp:placemark:locationType:motionActivityState:customLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, _BYTE *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, double a14@<D5>)
{
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _BYTE v34[192];

  v28 = sub_23B7968D8();
  MEMORY[0x24BDAC7A8](v28);
  sub_23B709C30(a3, (uint64_t)v34);
  LOBYTE(a4) = *a4;
  LOBYTE(a3) = *a5;
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  v29 = (int *)type metadata accessor for Location();
  sub_23B796608();
  sub_23B709C30((uint64_t)v34, a8 + v29[5]);
  *(double *)(a8 + v29[10]) = a9;
  *(double *)(a8 + v29[11]) = a10;
  *(_QWORD *)(a8 + v29[7]) = a1;
  *(double *)(a8 + v29[8]) = a11;
  *(double *)(a8 + v29[14]) = a12;
  *(double *)(a8 + v29[12]) = a13;
  *(double *)(a8 + v29[6]) = a14;
  sub_23B796878();
  *(_QWORD *)(a8 + v29[13]) = v30;
  *(_BYTE *)(a8 + v29[15]) = (_BYTE)a4;
  *(_BYTE *)(a8 + v29[16]) = a3;
  if (a7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302600);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_23B798110;
    *(_QWORD *)(v31 + 32) = a6;
    *(_QWORD *)(v31 + 40) = a7;
  }
  else
  {
    v31 = MEMORY[0x24BEE4AF8];
  }
  v32 = sub_23B7968A8();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(a2, v32);
  *(_QWORD *)(a8 + v29[9]) = v31;
  return result;
}

uint64_t Session.startRanging(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[25] = a2;
  v3[26] = v2;
  v3[24] = a1;
  return swift_task_switch();
}

uint64_t sub_23B726554()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  unsigned __int8 v13;

  v2 = *(__int128 **)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v13 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v13);
  *(_QWORD *)(v0 + 216) = *(_QWORD *)(v1 + 24);
  v3 = *v2;
  v4 = v2[2];
  *(_OWORD *)(v0 + 32) = v2[1];
  *(_OWORD *)(v0 + 48) = v4;
  *(_OWORD *)(v0 + 16) = v3;
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[6];
  *(_OWORD *)(v0 + 96) = v2[5];
  *(_OWORD *)(v0 + 112) = v7;
  *(_OWORD *)(v0 + 64) = v5;
  *(_OWORD *)(v0 + 80) = v6;
  v8 = v2[7];
  v9 = v2[8];
  v10 = v2[10];
  *(_OWORD *)(v0 + 160) = v2[9];
  *(_OWORD *)(v0 + 176) = v10;
  *(_OWORD *)(v0 + 128) = v8;
  *(_OWORD *)(v0 + 144) = v9;
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v11;
  *v11 = v0;
  v11[1] = sub_23B72660C;
  return sub_23B747850(*(_QWORD *)(v0 + 192), (_OWORD *)(v0 + 16));
}

uint64_t sub_23B72660C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 232) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B726680()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.startOwnerRanging()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B7266A4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[3];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[4] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B6EE938;
  return sub_23B747AE4(v0[2]);
}

uint64_t Session.stopRanging()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B726738()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B70836C;
  return sub_23B784D9C();
}

uint64_t Session.resetTokenDatabase()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B7267C4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B70ADB8;
  return sub_23B784E54();
}

uint64_t Session.removePeerToken(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = v1;
  return swift_task_switch();
}

uint64_t sub_23B726850()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  unsigned __int8 v13;

  v2 = *(__int128 **)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v13 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v13);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v1 + 24);
  v3 = *v2;
  v4 = v2[2];
  *(_OWORD *)(v0 + 32) = v2[1];
  *(_OWORD *)(v0 + 48) = v4;
  *(_OWORD *)(v0 + 16) = v3;
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[6];
  *(_OWORD *)(v0 + 96) = v2[5];
  *(_OWORD *)(v0 + 112) = v7;
  *(_OWORD *)(v0 + 64) = v5;
  *(_OWORD *)(v0 + 80) = v6;
  v8 = v2[7];
  v9 = v2[8];
  v10 = v2[10];
  *(_OWORD *)(v0 + 160) = v2[9];
  *(_OWORD *)(v0 + 176) = v10;
  *(_OWORD *)(v0 + 128) = v8;
  *(_OWORD *)(v0 + 144) = v9;
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v11;
  *v11 = v0;
  v11[1] = sub_23B726900;
  return sub_23B784F04((_OWORD *)(v0 + 16));
}

uint64_t sub_23B726900()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 224) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B726974()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.requestOwnerToken(force:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23B72699C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 16);
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_23B70836C;
  return sub_23B78509C(*(_BYTE *)(v0 + 48));
}

BOOL static LocationShifter.LocationShifterError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LocationShifter.LocationShifterError.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t LocationShifter.LocationShifterError.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t LocationShifter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v0 = swift_allocObject();
  v1 = OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  if (qword_256A47EF0 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256A54890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CC28]), sel_init);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_shifter) = v4;
  return v0;
}

uint64_t LocationShifter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  if (qword_256A47EF0 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256A54890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CC28]), sel_init);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_shifter) = v4;
  return v0;
}

uint64_t sub_23B726C04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = type metadata accessor for Location();
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B726C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = (void *)objc_opt_self();
  v4 = v2 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location;
  v5 = objc_msgSend(v3, sel_isLocationShiftRequiredForCoordinate_, *(double *)(v4 + *(int *)(v1 + 40)), *(double *)(v4 + *(int *)(v1 + 44)));
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  if (v5)
  {
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v8;
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v9;
    *v9 = v0;
    v9[1] = sub_23B726EEC;
    return sub_23B796ED8();
  }
  else
  {
    swift_retain_n();
    v11 = sub_23B7969A4();
    v12 = sub_23B796C14();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 141558275;
      *(_QWORD *)(v0 + 16) = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v13 + 12) = 2081;
      Location.description.getter();
      *(_QWORD *)(v0 + 24) = sub_23B6FB388(v15, v16, &v17);
      sub_23B796C68();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B6EB000, v11, v12, "LocationShifter: shifting not required for location %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v14, -1, -1);
      MEMORY[0x23B86C754](v13, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    sub_23B709DC4(v4, *(_QWORD *)(v0 + 32));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B726EEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B726F58()
{
  uint64_t v0;

  sub_23B7274D0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B726F98()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B726FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48710);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_23B7092A0(a3, (uint64_t)sub_23B7277D0, v9);
  return swift_release();
}

uint64_t sub_23B7270B8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Location();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  if (a2)
  {
    v19 = (uint64_t)a2;
    v14 = a2;
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48710);
    return sub_23B796B54();
  }
  sub_23B727820(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23B709BF0((uint64_t)v6);
    sub_23B727868();
    v15 = swift_allocError();
    *v16 = 2;
    v19 = v15;
    goto LABEL_5;
  }
  sub_23B7274D0((uint64_t)v6, (uint64_t)v13);
  sub_23B709DC4((uint64_t)v13, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48710);
  sub_23B796B60();
  return sub_23B709E08((uint64_t)v13);
}

uint64_t LocationShifter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  v2 = sub_23B7969BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t LocationShifter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
  v2 = sub_23B7969BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_23B7272FC()
{
  uint64_t v0;

  v0 = sub_23B7969BC();
  __swift_allocate_value_buffer(v0, qword_256A54890);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A54890);
  return sub_23B7969B0();
}

uint64_t sub_23B72737C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2543032F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t sub_23B7274C8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B726FD4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B7274D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23B727518()
{
  unint64_t result;

  result = qword_256A486F0;
  if (!qword_256A486F0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocationShifter.LocationShifterError, &type metadata for LocationShifter.LocationShifterError);
    atomic_store(result, (unint64_t *)&qword_256A486F0);
  }
  return result;
}

uint64_t sub_23B72755C()
{
  return type metadata accessor for LocationShifter();
}

uint64_t type metadata accessor for LocationShifter()
{
  uint64_t result;

  result = qword_256A486F8;
  if (!qword_256A486F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B7275A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B7969BC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for LocationShifter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocationShifter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LocationShifter.shift(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 104) + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B6FD1B0;
  return v8(a1, a2);
}

uint64_t storeEnumTagSinglePayload for LocationShifter.LocationShifterError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B7276EC + 4 * byte_23B7987E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B727720 + 4 * byte_23B7987E0[v4]))();
}

uint64_t sub_23B727720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B727728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B727730);
  return result;
}

uint64_t sub_23B72773C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B727744);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B727748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B727750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationShifter.LocationShifterError()
{
  return &type metadata for LocationShifter.LocationShifterError;
}

uint64_t sub_23B72776C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48710);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23B7277D0(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48710);
  return sub_23B7270B8(a1, a2);
}

uint64_t sub_23B727820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23B727868()
{
  unint64_t result;

  result = qword_256A48718[0];
  if (!qword_256A48718[0])
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocationShifter.LocationShifterError, &type metadata for LocationShifter.LocationShifterError);
    atomic_store(result, qword_256A48718);
  }
  return result;
}

uint64_t sub_23B7278AC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543025D0);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B727918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEE6A10], v3);
  sub_23B796BC0();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7279C4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302760);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B727A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEE6A10], v3);
  sub_23B796BC0();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B727ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032A0);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B727B4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[10];
  v1 = v0[11];
  v4 = v0[8];
  v3 = v0[9];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FA8);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  sub_23B6FC8F4(v1, v2, &qword_2543032A0);
  v7 = v4 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDeviceContinuation;
  swift_beginAccess();
  sub_23B6FBDF4(v2, v7, &qword_2543032A0);
  swift_endAccess();
  v8 = (_QWORD *)swift_task_alloc();
  v0[12] = v8;
  *v8 = v0;
  v8[1] = sub_23B727C4C;
  return sub_23B75077C();
}

uint64_t sub_23B727C4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B727CC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 104);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 104);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446466;
    *(_QWORD *)(v0 + 40) = sub_23B6FB388(0xD000000000000032, 0x800000023B7A06B0, &v15);
    sub_23B796C68();
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 48) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v12 = sub_23B796A4C();
    *(_QWORD *)(v0 + 56) = sub_23B6FB388(v12, v13, &v15);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s error: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B727F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v16 = sub_23B729674();
  v17 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a2;
  *((_QWORD *)v18 + 3) = v16;
  *((_QWORD *)v18 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v17], (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(_QWORD *)&v18[(v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8] = a3;
  swift_retain_n();
  sub_23B77520C((uint64_t)v14, v21, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_23B728078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032E0);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B7280E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[10];
  v1 = v0[11];
  v4 = v0[8];
  v3 = v0[9];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032D8);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  sub_23B6FC8F4(v1, v2, &qword_2543032E0);
  v7 = v4 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_preferenceContinuation;
  swift_beginAccess();
  sub_23B6FBDF4(v2, v7, &qword_2543032E0);
  swift_endAccess();
  v8 = (_QWORD *)swift_task_alloc();
  v0[12] = v8;
  *v8 = v0;
  v8[1] = sub_23B7281E8;
  return sub_23B75077C();
}

uint64_t sub_23B7281E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B728264()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 104);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 104);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446466;
    *(_QWORD *)(v0 + 40) = sub_23B6FB388(0xD000000000000022, 0x800000023B7A0680, &v15);
    sub_23B796C68();
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 48) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v12 = sub_23B796A4C();
    *(_QWORD *)(v0 + 56) = sub_23B6FB388(v12, v13, &v15);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s error: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7284A4()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032E0);
  v1[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032A0);
  v1[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B72852C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDeviceContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v2, v1, &qword_2543032A0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FA8);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 1, v3);
  sub_23B6F7190(v1, &qword_2543032A0);
  if ((_DWORD)v2 == 1
    && (v4 = *(_QWORD *)(v0 + 80),
        v5 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_preferenceContinuation,
        swift_beginAccess(),
        sub_23B6FDE3C(v5, v4, &qword_2543032E0),
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032D8),
        LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6),
        sub_23B6F7190(v4, &qword_2543032E0),
        (_DWORD)v5 == 1))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v8;
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v0 + 64);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v9;
    *v9 = v0;
    v9[1] = sub_23B7286F0;
    return sub_23B796704();
  }
}

uint64_t sub_23B7286F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B728764()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7287A0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7287E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(v2 + 112) = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302CE8);
  *(_QWORD *)(v2 + 120) = v4;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 136) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032E0);
  *(_QWORD *)(v2 + 144) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032D8);
  *(_QWORD *)(v2 + 152) = v5;
  *(_QWORD *)(v2 + 160) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 168) = swift_task_alloc();
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 176) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 192) = v6;
  *(_OWORD *)(v2 + 208) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v2 + 224) = *(_DWORD *)(a1 + 48);
  *(_BYTE *)(v2 + 69) = *(_BYTE *)(a1 + 52);
  return swift_task_switch();
}

uint64_t sub_23B7288C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  _BOOL4 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v50;
  unsigned int v51;
  char v52;
  uint64_t v53;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;

  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(unsigned int *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v8 = *(_BYTE *)(v0 + 69);
  v9 = sub_23B7969BC();
  __swift_project_value_buffer(v9, (uint64_t)qword_254309108);
  sub_23B7295E0(v7, v6, v5, v4, v3, v2, v1, v8);
  sub_23B7295E0(v7, v6, v5, v4, v3, v2, v1, v8);
  v10 = sub_23B7969A4();
  type = sub_23B796C38();
  v11 = os_log_type_enabled(v10, type);
  v12 = *(_BYTE *)(v0 + 69);
  v13 = *(unsigned int *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 208);
  v57 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 184);
  if (v11)
  {
    v52 = *(_BYTE *)(v0 + 69);
    v19 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v59 = v50;
    *(_DWORD *)v19 = 136446466;
    *(_QWORD *)(v0 + 96) = sub_23B6FB388(0xD000000000000016, 0x800000023B7A0630, &v59);
    sub_23B796C68();
    *(_WORD *)(v19 + 12) = 2080;
    v60 = v18;
    v61 = v17;
    v62 = v16;
    v63 = v15;
    v64 = v14;
    v65 = v57;
    v66 = v13;
    v67 = v52;
    PreferenceStreamChange.description.getter();
    *(_QWORD *)(v0 + 104) = sub_23B6FB388(v20, v21, &v59);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B7295F0(v18, v17, v16, v15, v14, v57, v13, v52);
    sub_23B7295F0(v18, v17, v16, v15, v14, v57, v13, v52);
    _os_log_impl(&dword_23B6EB000, v10, type, "%{public}s with: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v50, -1, -1);
    MEMORY[0x23B86C754](v19, -1, -1);
  }
  else
  {
    sub_23B7295F0(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), v14, v57, v13, v12);
    sub_23B7295F0(v18, v17, v16, v15, v14, v57, v13, v12);
  }

  if (!*(_BYTE *)(v0 + 69))
  {
    v22 = *(_DWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 208);
    v23 = *(_QWORD *)(v0 + 216);
    v26 = *(_QWORD *)(v0 + 192);
    v25 = *(_QWORD *)(v0 + 200);
    v27 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 112);
    v60 = *(_QWORD *)(v0 + 176);
    v28 = v60;
    v61 = v27;
    v62 = v26;
    v63 = v25;
    v64 = v24;
    v65 = v23;
    v66 = v22;
    sub_23B728E58((uint64_t)&v60);
    v30 = v29 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDevice;
    v31 = *(_QWORD *)(v29 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDevice);
    v32 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v30 = v28;
    *(_QWORD *)(v30 + 8) = v27;
    *(_QWORD *)(v30 + 16) = v26;
    *(_QWORD *)(v30 + 24) = v25;
    *(_QWORD *)(v30 + 32) = v24;
    *(_QWORD *)(v30 + 40) = v23;
    *(_DWORD *)(v30 + 48) = v22;
    sub_23B70B5A0(v28, v27);
    sub_23B729600(v31, v32);
  }
  v33 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 160);
  v35 = *(_QWORD *)(v0 + 144);
  v36 = *(_QWORD *)(v0 + 112) + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_preferenceContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v36, v35, &qword_2543032E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v33) == 1)
  {
    sub_23B6F7190(*(_QWORD *)(v0 + 144), &qword_2543032E0);
    v37 = sub_23B7969A4();
    v38 = sub_23B796C20();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23B6EB000, v37, v38, "Missing preferenceContinuation!", v39, 2u);
      MEMORY[0x23B86C754](v39, -1, -1);
    }

  }
  else
  {
    v51 = *(_DWORD *)(v0 + 224);
    v41 = *(_QWORD *)(v0 + 208);
    v40 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 200);
    v45 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 184);
    v46 = *(_QWORD *)(v0 + 168);
    v58 = *(_QWORD *)(v0 + 160);
    v47 = *(_QWORD *)(v0 + 152);
    v53 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 128);
    v56 = *(_QWORD *)(v0 + 120);
    v48 = *(_BYTE *)(v0 + 69);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 32))(v46, *(_QWORD *)(v0 + 144), v47);
    *(_QWORD *)(v0 + 16) = v45;
    *(_QWORD *)(v0 + 24) = v44;
    *(_QWORD *)(v0 + 32) = v43;
    *(_QWORD *)(v0 + 40) = v42;
    *(_QWORD *)(v0 + 48) = v41;
    *(_QWORD *)(v0 + 56) = v40;
    *(_DWORD *)(v0 + 64) = v51;
    *(_BYTE *)(v0 + 68) = v48;
    sub_23B7295E0(v45, v44, v43, v42, v41, v40, v51, v48);
    sub_23B796B90();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)typea + 8))(v53, v56);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v46, v47);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B728E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint8_t *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  char *v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  os_log_t v54;
  uint8_t *v55;
  uint64_t isa;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302D40);
  isa = (uint64_t)v4[-1].isa;
  v57 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v55 = (uint8_t *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FA8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 32);
  v58 = *(_QWORD *)(a1 + 24);
  v59 = v16;
  v60 = *(_QWORD *)(a1 + 40);
  v17 = *(_DWORD *)(a1 + 48);
  v18 = v2 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDeviceContinuation;
  swift_beginAccess();
  v19 = v18;
  v20 = v10;
  sub_23B6FDE3C(v19, (uint64_t)v8, &qword_2543032A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23B6F7190((uint64_t)v8, &qword_2543032A0);
    if (qword_2543031C8 != -1)
      swift_once();
    v21 = sub_23B7969BC();
    __swift_project_value_buffer(v21, (uint64_t)qword_254309108);
    v23 = v58;
    v22 = v59;
    v24 = v60;
    sub_23B70B5A0(v14, v13);
    sub_23B70B5A0(v14, v13);
    v25 = sub_23B7969A4();
    v26 = sub_23B796C20();
    if (os_log_type_enabled(v25, v26))
    {
      v57 = v25;
      v27 = swift_slowAlloc();
      isa = swift_slowAlloc();
      v68 = isa;
      v55 = (uint8_t *)v27;
      *(_DWORD *)v27 = 136315138;
      v54 = (os_log_t)(v27 + 4);
      v61 = v14;
      v62 = v13;
      v63 = v15;
      v64 = v23;
      v65 = v22;
      v66 = v24;
      v67 = v17;
      sub_23B70B5A0(v14, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254302D38);
      v28 = sub_23B796A4C();
      v61 = sub_23B6FB388(v28, v29, &v68);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B729600(v14, v13);
      sub_23B729600(v14, v13);
      v30 = v57;
      v31 = v55;
      _os_log_impl(&dword_23B6EB000, v57, v26, "Missing meDeviceCountinuation for %s", v55, 0xCu);
      v32 = isa;
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v32, -1, -1);
      MEMORY[0x23B86C754](v31, -1, -1);

    }
    else
    {
      sub_23B729600(v14, v13);
      sub_23B729600(v14, v13);

    }
  }
  else
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v53 = v12;
    v33(v12, v8, v9);
    if (qword_2543031C8 != -1)
      swift_once();
    v34 = sub_23B7969BC();
    __swift_project_value_buffer(v34, (uint64_t)qword_254309108);
    v36 = v58;
    v35 = v59;
    v37 = v60;
    sub_23B70B5A0(v14, v13);
    sub_23B70B5A0(v14, v13);
    v38 = sub_23B7969A4();
    v39 = sub_23B796C38();
    v54 = v38;
    LODWORD(v52) = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v51 = v20;
      v40 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v68 = v50;
      *(_DWORD *)v40 = 136315138;
      v49 = v40 + 4;
      v61 = v14;
      v62 = v13;
      v63 = v15;
      v64 = v36;
      v65 = v35;
      v66 = v60;
      v67 = v17;
      sub_23B70B5A0(v14, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254302D38);
      v41 = sub_23B796A4C();
      v61 = sub_23B6FB388(v41, v42, &v68);
      v37 = v60;
      sub_23B796C68();
      v20 = v51;
      swift_bridgeObjectRelease();
      sub_23B729600(v14, v13);
      sub_23B729600(v14, v13);
      _os_log_impl(&dword_23B6EB000, v54, (os_log_type_t)v52, "meDeviceUpdated: %s", v40, 0xCu);
      v52 = v13;
      v43 = v15;
      v44 = v17;
      v45 = v50;
      swift_arrayDestroy();
      v46 = v45;
      v17 = v44;
      v15 = v43;
      v13 = v52;
      MEMORY[0x23B86C754](v46, -1, -1);
      MEMORY[0x23B86C754](v40, -1, -1);
    }
    else
    {
      sub_23B729600(v14, v13);
      sub_23B729600(v14, v13);
    }

    v61 = v14;
    v62 = v13;
    v63 = v15;
    v64 = v36;
    v65 = v35;
    v66 = v37;
    v67 = v17;
    sub_23B70B5A0(v14, v13);
    v47 = v55;
    v48 = v53;
    sub_23B796B90();
    (*(void (**)(uint8_t *, os_log_t))(isa + 8))(v47, v57);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v48, v9);
  }
}

uint64_t sub_23B729548(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B729560()
{
  uint64_t v0;

  sub_23B728E58(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B729594(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B6FD1B0;
  return sub_23B7287E8(a1);
}

uint64_t sub_23B7295E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (!a8)
    return sub_23B70B5A0(a1, a2);
  return a1;
}

uint64_t sub_23B7295F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (!a8)
    return sub_23B729600(a1, a2);
  return a1;
}

uint64_t sub_23B729600(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B72963C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B7536C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B729644(uint64_t a1)
{
  uint64_t v1;

  return sub_23B727F08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_2543032D8, (uint64_t)&unk_250C97280, (uint64_t)&unk_256A48750);
}

unint64_t sub_23B729674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254302D50;
  if (!qword_254302D50)
  {
    v1 = _s14descr250C985C9C18SettingsConnectionCMa();
    result = MEMORY[0x23B86C6B8](&unk_23B79AF90, v1);
    atomic_store(result, (unint64_t *)&qword_254302D50);
  }
  return result;
}

uint64_t sub_23B7296BC()
{
  return objectdestroyTm(&qword_2543032D8);
}

uint64_t sub_23B7296C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543032D8) - 8);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B6FD1B0;
  return sub_23B728078(a1, v5, v6, v7, v8);
}

uint64_t sub_23B729778(uint64_t a1)
{
  uint64_t v1;

  return sub_23B727F08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_254302FA8, (uint64_t)&unk_250C972A8, (uint64_t)&unk_256A48768);
}

uint64_t sub_23B7297A8()
{
  return objectdestroyTm(&qword_254302FA8);
}

uint64_t sub_23B7297B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302FA8) - 8);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B6FD140;
  return sub_23B727ADC(a1, v5, v6, v7, v8);
}

uint64_t sub_23B729864()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 96);
  v10 = *(_OWORD *)(v0 + 80);
  v2 = *(_BYTE *)(v0 + 134);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 133);
  v5 = *(_BYTE *)(v0 + 132);
  v6 = *(_QWORD *)(v0 + 56);
  sub_23B72C80C();
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v6;
  *(_BYTE *)(v7 + 32) = v4;
  *(_BYTE *)(v7 + 33) = v5;
  *(_BYTE *)(v7 + 40) = v2;
  *(_OWORD *)(v7 + 48) = v10;
  *(_QWORD *)(v7 + 64) = v1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302540);
  *v8 = v0;
  v8[1] = sub_23B729964;
  return sub_23B796ED8();
}

uint64_t sub_23B729964()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B7299FC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.addHandlesToLocationStream(_:priority:reverseGeocode:)(uint64_t a1, _BYTE *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + 124) = a3;
  *(_QWORD *)(v4 + 48) = a1;
  *(_QWORD *)(v4 + 56) = v3;
  *(_BYTE *)(v4 + 125) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B729A68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27[16];

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = (uint64_t *)(v0 + 48);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309198);
  swift_bridgeObjectRetain_n();
  v3 = sub_23B7969A4();
  v4 = sub_23B796C38();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 48);
  if (v5)
  {
    v7 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_DWORD *)v7 = 136447235;
    *(_QWORD *)(v0 + 16) = sub_23B6FB388(0xD000000000000036, 0x800000023B7A07D0, &v26);
    sub_23B796C68();
    *(_WORD *)(v7 + 12) = 2160;
    *(_QWORD *)(v0 + 24) = 1752392040;
    sub_23B796C68();
    v25 = v7;
    *(_WORD *)(v7 + 22) = 2081;
    v8 = *(_QWORD *)(v6 + 16);
    v9 = MEMORY[0x24BEE4AF8];
    if (v8)
    {
      v10 = *v1;
      *(_QWORD *)v27 = MEMORY[0x24BEE4AF8];
      sub_23B6F3FB8(0, v8, 0);
      v9 = *(_QWORD *)v27;
      v11 = *(_QWORD *)(*(_QWORD *)v27 + 16);
      v12 = 16 * v11;
      v13 = (uint64_t *)(v10 + 40);
      do
      {
        v14 = *(v13 - 1);
        v15 = *v13;
        *(_QWORD *)v27 = v9;
        v16 = *(_QWORD *)(v9 + 24);
        swift_bridgeObjectRetain();
        if (v11 >= v16 >> 1)
        {
          sub_23B6F3FB8(v16 > 1, v11 + 1, 1);
          v9 = *(_QWORD *)v27;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        v17 = v9 + v12;
        *(_QWORD *)(v17 + 32) = v14;
        *(_QWORD *)(v17 + 40) = v15;
        v12 += 16;
        v13 += 22;
        ++v11;
        --v8;
      }
      while (v8);
    }
    v18 = *(unsigned __int8 *)(v0 + 125);
    v19 = MEMORY[0x23B86BE78](v9, MEMORY[0x24BEE0D00]);
    v21 = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_23B6FB388(v19, v21, &v26);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 32) = 2082;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease_n();

  if (*(_QWORD *)(*v1 + 16))
  {
    v22 = *(_QWORD *)(v0 + 56);
    v27[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v27);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v22 + 40);
    *(_BYTE *)(v0 + 126) = *(_BYTE *)(v22 + 56);
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(v22 + 64);
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v22 + 72);
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v22 + 80);
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v24 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B729F1C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 88);
  v10 = *(_OWORD *)(v0 + 72);
  v2 = *(_BYTE *)(v0 + 126);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_BYTE *)(v0 + 125);
  v5 = *(_BYTE *)(v0 + 124);
  v6 = *(_QWORD *)(v0 + 48);
  sub_23B72C80C();
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v6;
  *(_BYTE *)(v7 + 32) = v4;
  *(_BYTE *)(v7 + 40) = v2;
  *(_OWORD *)(v7 + 48) = v10;
  *(_QWORD *)(v7 + 64) = v1;
  *(_BYTE *)(v7 + 72) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v8;
  *v8 = v0;
  v8[1] = sub_23B72A010;
  return sub_23B796ED8();
}

uint64_t sub_23B72A010()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B72A084()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B72A0C4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.stopRefreshingLocation(forHandles:priority:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v2;
  *(_BYTE *)(v3 + 96) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B72A12C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27[16];

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = (uint64_t *)(v0 + 48);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309198);
  swift_bridgeObjectRetain_n();
  v3 = sub_23B7969A4();
  v4 = sub_23B796C38();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 48);
  if (v5)
  {
    v7 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446979;
    *(_QWORD *)(v0 + 16) = sub_23B6FB388(0xD00000000000002CLL, 0x800000023B7A0840, &v26);
    sub_23B796C68();
    *(_WORD *)(v7 + 12) = 2160;
    *(_QWORD *)(v0 + 24) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v7 + 22) = 2081;
    v8 = *(_QWORD *)(v6 + 16);
    v9 = MEMORY[0x24BEE4AF8];
    if (v8)
    {
      v25 = v7;
      v10 = *v1;
      *(_QWORD *)v27 = MEMORY[0x24BEE4AF8];
      sub_23B6F3FB8(0, v8, 0);
      v9 = *(_QWORD *)v27;
      v11 = *(_QWORD *)(*(_QWORD *)v27 + 16);
      v12 = 16 * v11;
      v13 = (uint64_t *)(v10 + 40);
      do
      {
        v14 = *(v13 - 1);
        v15 = *v13;
        *(_QWORD *)v27 = v9;
        v16 = *(_QWORD *)(v9 + 24);
        swift_bridgeObjectRetain();
        if (v11 >= v16 >> 1)
        {
          sub_23B6F3FB8(v16 > 1, v11 + 1, 1);
          v9 = *(_QWORD *)v27;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        v17 = v9 + v12;
        *(_QWORD *)(v17 + 32) = v14;
        *(_QWORD *)(v17 + 40) = v15;
        v12 += 16;
        v13 += 22;
        ++v11;
        --v8;
      }
      while (v8);
      v7 = v25;
    }
    v18 = *(unsigned __int8 *)(v0 + 96);
    v19 = MEMORY[0x23B86BE78](v9, MEMORY[0x24BEE0D00]);
    v21 = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_23B6FB388(v19, v21, &v26);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 32) = 2082;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease_n();

  if (*(_QWORD *)(*v1 + 16))
  {
    v22 = *(_QWORD *)(v0 + 56);
    v27[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v27);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v22 + 40);
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v24 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B72A578()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  sub_23B72C80C();
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  *(_BYTE *)(v4 + 32) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_23B72A634;
  return sub_23B796ED8();
}

uint64_t sub_23B72A634()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B72A6A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B72A6D8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.stopRefreshingLocation()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_23B72A72C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v8;
  uint64_t v9;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[2] = sub_23B6FB388(0xD000000000000018, 0x800000023B7A0870, &v9);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = v0[3];
  v8 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v8);
  v0[4] = *(_QWORD *)(v6 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B72A8D0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23B72C80C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23B72A95C;
  return sub_23B796ED8();
}

uint64_t sub_23B72A95C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B72A9C0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B72A9F4()
{
  return swift_task_switch();
}

uint64_t Session.cachedLocation(for:includeAddress:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 68) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v2;
  return swift_task_switch();
}

uint64_t sub_23B72AA24()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  NSObject *log;
  uint64_t v28;
  unsigned __int8 v29[16];

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
  if (v1)
  {
    if (qword_254302FC0 != -1)
      swift_once();
    v2 = sub_23B7969BC();
    __swift_project_value_buffer(v2, (uint64_t)qword_254309198);
    swift_bridgeObjectRetain_n();
    v3 = sub_23B7969A4();
    v4 = sub_23B796C38();
    v5 = os_log_type_enabled(v3, v4);
    v6 = *(_QWORD *)(v0 + 32);
    if (v5)
    {
      v25 = v4;
      log = v3;
      v7 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v28 = v24;
      *(_DWORD *)v7 = 141558531;
      *(_QWORD *)(v0 + 16) = 1752392040;
      sub_23B796C68();
      v26 = v7;
      *(_WORD *)(v7 + 12) = 2081;
      *(_QWORD *)v29 = MEMORY[0x24BEE4AF8];
      sub_23B6F3FB8(0, v1, 0);
      v8 = *(_QWORD *)v29;
      v9 = *(_QWORD *)(*(_QWORD *)v29 + 16);
      v10 = 16 * v9;
      v11 = (uint64_t *)(v6 + 40);
      do
      {
        v12 = *(v11 - 1);
        v13 = *v11;
        *(_QWORD *)v29 = v8;
        v14 = *(_QWORD *)(v8 + 24);
        swift_bridgeObjectRetain();
        if (v9 >= v14 >> 1)
        {
          sub_23B6F3FB8(v14 > 1, v9 + 1, 1);
          v8 = *(_QWORD *)v29;
        }
        *(_QWORD *)(v8 + 16) = v9 + 1;
        v15 = v8 + v10;
        *(_QWORD *)(v15 + 32) = v12;
        *(_QWORD *)(v15 + 40) = v13;
        v10 += 16;
        v11 += 22;
        ++v9;
        --v1;
      }
      while (v1);
      v18 = *(unsigned __int8 *)(v0 + 68);
      v19 = MEMORY[0x23B86BE78](v8, MEMORY[0x24BEE0D00]);
      v21 = v20;
      swift_release();
      *(_QWORD *)(v0 + 24) = sub_23B6FB388(v19, v21, &v28);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 22) = 1024;
      *(_DWORD *)(v0 + 64) = v18;
      sub_23B796C68();
      v3 = log;
      _os_log_impl(&dword_23B6EB000, log, v25, "cachedLocation for %{private,mask.hash}s, includeAddress: %{BOOL}d", (uint8_t *)v26, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v24, -1, -1);
      MEMORY[0x23B86C754](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v22 = *(_QWORD *)(v0 + 40);
    v29[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v29);
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v22 + 40);
    swift_retain();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v23;
    *v23 = v0;
    v23[1] = sub_23B72ADB0;
    return sub_23B717B34(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 68), 1);
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v16 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B72ADB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t Session.locations(for:reverseGeocode:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 140) = a2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v2;
  return swift_task_switch();
}

uint64_t sub_23B72AE28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  _OWORD v12[11];

  v1 = v0[6];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_OWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v4 = v3[9];
      v12[8] = v3[8];
      v12[9] = v4;
      v12[10] = v3[10];
      v5 = v3[5];
      v12[4] = v3[4];
      v12[5] = v5;
      v6 = v3[7];
      v12[6] = v3[6];
      v12[7] = v6;
      v7 = v3[1];
      v12[0] = *v3;
      v12[1] = v7;
      v8 = v3[3];
      v12[2] = v3[2];
      v12[3] = v8;
      sub_23B72C870(v12);
      v3 += 11;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v9 = v0[7];
  LOBYTE(v12[0]) = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0((unsigned __int8 *)v12);
  v0[8] = *(_QWORD *)(v9 + 40);
  swift_retain();
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_23B72AF08;
  return sub_23B7581A0(v0[6]);
}

uint64_t sub_23B72AF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23B72AF84()
{
  uint64_t v0;
  _QWORD *v1;
  unsigned __int8 v3;

  v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_23B72AFF8;
  return sub_23B71D174(*(_QWORD *)(v0 + 88));
}

uint64_t sub_23B72AFF8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B72B068()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unsigned __int8 v11;
  uint64_t v12;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  *(_QWORD *)(v0 + 112) = __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v12 = v5;
    *(_DWORD *)v4 = 136446466;
    *(_QWORD *)(v0 + 32) = sub_23B6FB388(0xD00000000000001ELL, 0x800000023B7A0250, &v12);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2080;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v6 = sub_23B7969D4();
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 40) = sub_23B6FB388(v6, v8, &v12);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s Cached (on-disk) locations: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v11);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v9;
  *v9 = v0;
  v9[1] = sub_23B72B2E0;
  return sub_23B71E2C0(*(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 140));
}

uint64_t sub_23B72B2E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B72B354()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  swift_bridgeObjectRetain_n();
  v1 = sub_23B7969A4();
  v2 = sub_23B796C38();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 140);
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136446722;
    *(_QWORD *)(v0 + 16) = sub_23B6FB388(0xD00000000000001ELL, 0x800000023B7A0250, &v10);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 1024;
    *(_DWORD *)(v0 + 136) = v3;
    sub_23B796C68();
    *(_WORD *)(v4 + 18) = 2080;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v6 = sub_23B7969D4();
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = sub_23B6FB388(v6, v8, &v10);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v1, v2, "%{public}s reverseGeocode:%{BOOL}d:  location:%s", (uint8_t *)v4, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 128));
}

uint64_t sub_23B72B574()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.latestLocations(for:includeAddress:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 152) = a2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v2;
  return swift_task_switch();
}

uint64_t sub_23B72B5C4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  *(_QWORD *)(v0 + 72) = __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 56);
  if (v4)
  {
    v26 = v3;
    v6 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v6 = 136446979;
    *(_QWORD *)(v0 + 40) = sub_23B6FB388(0xD000000000000024, 0x800000023B7A0890, &v27);
    sub_23B796C68();
    *(_WORD *)(v6 + 12) = 2160;
    *(_QWORD *)(v0 + 48) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v6 + 22) = 2081;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = MEMORY[0x24BEE4AF8];
    if (v7)
    {
      v24 = v2;
      v9 = *(_QWORD *)(v0 + 56);
      v28 = MEMORY[0x24BEE4AF8];
      sub_23B6F3FB8(0, v7, 0);
      v8 = v28;
      v10 = *(_QWORD *)(v28 + 16);
      v11 = 16 * v10;
      v12 = (uint64_t *)(v9 + 40);
      do
      {
        v13 = *(v12 - 1);
        v14 = *v12;
        v28 = v8;
        v15 = *(_QWORD *)(v8 + 24);
        swift_bridgeObjectRetain();
        if (v10 >= v15 >> 1)
        {
          sub_23B6F3FB8(v15 > 1, v10 + 1, 1);
          v8 = v28;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        v16 = v8 + v11;
        *(_QWORD *)(v16 + 32) = v13;
        *(_QWORD *)(v16 + 40) = v14;
        v11 += 16;
        v12 += 22;
        ++v10;
        --v7;
      }
      while (v7);
      v2 = v24;
    }
    v17 = *(unsigned __int8 *)(v0 + 152);
    v18 = MEMORY[0x23B86BE78](v8, MEMORY[0x24BEE0D00]);
    v20 = v19;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = sub_23B6FB388(v18, v20, &v27);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 32) = 1024;
    *(_DWORD *)(v0 + 148) = v17;
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v26, "%{public}s handles: %{private,mask.hash}s includeAddress: %{BOOL}d", (uint8_t *)v6, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v25, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v21 = *(_QWORD *)(v0 + 64);
  LOBYTE(v28) = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0((unsigned __int8 *)&v28);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v21 + 40);
  swift_retain();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v22;
  *v22 = v0;
  v22[1] = sub_23B72B934;
  return sub_23B757CD0(*(_QWORD *)(v0 + 56));
}

uint64_t sub_23B72B934(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 104) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23B72B9B0()
{
  uint64_t v0;
  _QWORD *v1;
  unsigned __int8 v3;

  v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_23B72BA24;
  return sub_23B71D174(*(_QWORD *)(v0 + 104));
}

uint64_t sub_23B72BA24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B72BA94()
{
  uint64_t v0;
  _QWORD *v1;
  unsigned __int8 v3;

  v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v1;
  *v1 = v0;
  v1[1] = sub_23B72BB0C;
  return sub_23B71E2C0(*(_QWORD *)(v0 + 120), *(_BYTE *)(v0 + 152));
}

uint64_t sub_23B72BB0C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B72BB7C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  swift_bridgeObjectRetain_n();
  v1 = sub_23B7969A4();
  v2 = sub_23B796C38();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 152);
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136446722;
    *(_QWORD *)(v0 + 16) = sub_23B6FB388(0xD000000000000024, 0x800000023B7A0890, &v10);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 1024;
    *(_DWORD *)(v0 + 144) = v3;
    sub_23B796C68();
    *(_WORD *)(v4 + 18) = 2080;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v6 = sub_23B7969D4();
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_23B6FB388(v6, v8, &v10);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v1, v2, "%{public}s includeAddress:%{BOOL}d:  location:%s", (uint8_t *)v4, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
}

uint64_t sub_23B72BD90()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.subscribeToBackgroundProactiveLocations()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B72BDDC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 40);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B70836C;
  return sub_23B714960();
}

uint64_t Session.locationStream(handles:priority:reverseGeocode:)(uint64_t a1, uint64_t a2, _BYTE *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 72) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543025D8);
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  *(_BYTE *)(v5 + 73) = *a3;
  return swift_task_switch();
}

uint64_t sub_23B72BEC4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 32);
  v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B72BF18()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_BYTE *)(v0 + 73);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 24);
  type metadata accessor for LocationStreamChange();
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v7;
  *(_BYTE *)(v8 + 32) = v1;
  *(_BYTE *)(v8 + 33) = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v2, *MEMORY[0x24BEE6A10], v4);
  sub_23B796BC0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.startRefreshingLocation(forHandles:priority:)(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 96) = *a3;
  return swift_task_switch();
}

uint64_t sub_23B72C014()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 32);
  v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(v0 + 97) = *(_BYTE *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23B72C098()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 64);
  v9 = *(_OWORD *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 97);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_BYTE *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 24);
  sub_23B72C80C();
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 32) = v4;
  *(_BYTE *)(v6 + 33) = 0;
  *(_BYTE *)(v6 + 40) = v2;
  *(_OWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 64) = v1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302540);
  *v7 = v0;
  v7[1] = sub_23B72C18C;
  return sub_23B796ED8();
}

uint64_t sub_23B72C18C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B72C224()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.addHandlesToLocationStream(_:priority:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 88) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B72C28C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v3;
  unsigned __int8 v4[9];

  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    v1 = *(_QWORD *)(v0 + 24);
    v4[0] = 0;
    _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(v4);
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 40);
    *(_BYTE *)(v0 + 89) = *(_BYTE *)(v1 + 56);
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 64);
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 72);
    *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 80);
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
  else
  {
    sub_23B7090F8();
    swift_allocError();
    *v3 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B72C364()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 56);
  v9 = *(_OWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 89);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 16);
  sub_23B72C80C();
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 32) = v4;
  *(_BYTE *)(v6 + 40) = v2;
  *(_OWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 64) = v1;
  *(_BYTE *)(v6 + 72) = 0;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *v7 = v0;
  v7[1] = sub_23B72C44C;
  return sub_23B796ED8();
}

uint64_t sub_23B72C44C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B72C4C0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B72C500()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.cachedLocation(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B7086EC;
  *(_BYTE *)(v4 + 68) = 0;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = v1;
  return swift_task_switch();
}

uint64_t Session.locations(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B709290;
  *(_BYTE *)(v4 + 140) = 0;
  *(_QWORD *)(v4 + 48) = a1;
  *(_QWORD *)(v4 + 56) = v1;
  return swift_task_switch();
}

uint64_t sub_23B72C610(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48268);
  v10 = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

uint64_t sub_23B72C7F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23B72C610(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

unint64_t sub_23B72C80C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254303FB8;
  if (!qword_254303FB8)
  {
    v1 = _s14descr250C98631C18LocationConnectionCMa();
    result = MEMORY[0x23B86C6B8](&unk_23B79B0A8, v1);
    atomic_store(result, (unint64_t *)&qword_254303FB8);
  }
  return result;
}

uint64_t sub_23B72C85C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B7117DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_23B72C868(uint64_t a1)
{
  uint64_t v1;

  return sub_23B71234C(a1, v1);
}

void sub_23B72C870(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD v12[12];
  uint64_t v13;

  v1 = a1[9];
  v12[8] = a1[8];
  v12[9] = v1;
  v12[10] = a1[10];
  v2 = a1[5];
  v12[4] = a1[4];
  v12[5] = v2;
  v3 = a1[7];
  v12[6] = a1[6];
  v12[7] = v3;
  v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  v5 = a1[3];
  v12[2] = a1[2];
  v12[3] = v5;
  if (qword_254302FC0 != -1)
    swift_once();
  v6 = sub_23B7969BC();
  __swift_project_value_buffer(v6, (uint64_t)qword_254309198);
  sub_23B6F4E8C((uint64_t)v12);
  v7 = sub_23B7969A4();
  v8 = sub_23B796C38();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136446979;
    sub_23B6FB388(0xD00000000000001ELL, 0x800000023B7A0250, &v13);
    sub_23B796C68();
    *(_WORD *)(v9 + 12) = 2160;
    sub_23B796C68();
    *(_WORD *)(v9 + 22) = 2081;
    v11 = v12[0];
    swift_bridgeObjectRetain();
    sub_23B6FB388(v11, *((unint64_t *)&v11 + 1), &v13);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)v12);
    *(_WORD *)(v9 + 32) = 1024;
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v7, v8, "%{public}s handle: %{private,mask.hash}s reverseGeocode: %{BOOL}d", (uint8_t *)v9, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);
  }
  else
  {
    sub_23B6F5744((uint64_t)v12);
  }

}

uint64_t sub_23B72CAD4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B70E0E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33));
}

uint64_t sub_23B72CAE4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B710150(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_23B72CB1C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B710790(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
}

BOOL static ClientOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ClientOrigin.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6567617373656D2ELL;
  if (*v0 != 1)
    v1 = 0x726568746F2ELL;
  if (*v0)
    return v1;
  else
    return 0x41794D646E69662ELL;
}

uint64_t ClientOrigin.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t sub_23B72CBFC()
{
  sub_23B6F4594();
  return sub_23B796FA4();
}

uint64_t sub_23B72CC24()
{
  sub_23B6F4594();
  return sub_23B796FB0();
}

uint64_t sub_23B72CC4C()
{
  sub_23B6F45D8();
  return sub_23B796FA4();
}

uint64_t sub_23B72CC74()
{
  sub_23B6F45D8();
  return sub_23B796FB0();
}

uint64_t sub_23B72CC9C()
{
  sub_23B72CD80();
  return sub_23B796FA4();
}

uint64_t sub_23B72CCC4()
{
  sub_23B72CD80();
  return sub_23B796FB0();
}

uint64_t sub_23B72CCEC()
{
  sub_23B72CD3C();
  return sub_23B796FA4();
}

uint64_t sub_23B72CD14()
{
  sub_23B72CD3C();
  return sub_23B796FB0();
}

unint64_t sub_23B72CD3C()
{
  unint64_t result;

  result = qword_254302B20;
  if (!qword_254302B20)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798F78, &type metadata for ClientOrigin.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B20);
  }
  return result;
}

unint64_t sub_23B72CD80()
{
  unint64_t result;

  result = qword_254302C80;
  if (!qword_254302C80)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798F28, &type metadata for ClientOrigin.MessagesAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302C80);
  }
  return result;
}

uint64_t ClientOrigin.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t GroupID.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x46746C7561666564;
}

uint64_t sub_23B72CE74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23B73E714(*a1, *a2);
}

uint64_t sub_23B72CE80()
{
  return sub_23B77E674();
}

uint64_t sub_23B72CE88()
{
  sub_23B796A64();
  return swift_bridgeObjectRelease();
}

void sub_23B72CF14(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA0000000000464DLL;
  v4 = 0xD000000000000013;
  v5 = 0x800000023B79F720;
  if (v2 != 1)
  {
    v4 = 0xD000000000000010;
    v5 = 0x800000023B79F740;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v4;
  else
    v7 = 0x46746C7561666564;
  if (!v6)
    v3 = v5;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_23B72CF84()
{
  sub_23B6F30A8();
  return sub_23B796AB8();
}

void RequestOrigin.origin.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_23B72CFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B72D2D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B72D000()
{
  sub_23B6FD758();
  return sub_23B796FA4();
}

uint64_t sub_23B72D028()
{
  sub_23B6FD758();
  return sub_23B796FB0();
}

FindMyLocate::RequestOrigin __swiftcall RequestOrigin.init(_:fakeBundleIdBasedOnOrigin:)(FindMyLocate::ClientOrigin _, Swift::Bool fakeBundleIdBasedOnOrigin)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  id v6;
  signed int v7;
  FindMyLocate::ClientOrigin v8;
  Swift::Int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  const char *v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  FindMyLocate::RequestOrigin result;

  v4 = v2;
  v5 = *(unsigned __int8 *)_;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
  v7 = objc_msgSend(v6, sel_processIdentifier);

  if (fakeBundleIdBasedOnOrigin)
  {
    v12 = 0xD000000000000010;
    if (!v5)
    {
      v13 = "com.apple.findmy";
      goto LABEL_9;
    }
    if (v5 == 1)
    {
      v12 = 0xD000000000000013;
      v13 = "com.apple.MobileSMS";
LABEL_9:
      v17 = (unint64_t)(v13 - 32) | 0x8000000000000000;
      goto LABEL_10;
    }
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v15 = objc_msgSend(v14, sel_bundleIdentifier);

  if (v15)
  {
    v12 = sub_23B796A28();
    v17 = v16;

  }
  else
  {
    v12 = 0;
    v17 = 0;
  }
LABEL_10:
  *(_BYTE *)v4 = v5;
  *(_QWORD *)(v4 + 8) = v7;
  *(_QWORD *)(v4 + 16) = v12;
  *(_QWORD *)(v4 + 24) = v17;
  result.clientBundleIdentifier.value._object = v11;
  result.clientBundleIdentifier.value._countAndFlagsBits = v10;
  result.clientPid = v9;
  result.origin = v8;
  return result;
}

unint64_t sub_23B72D16C()
{
  unint64_t result;

  result = qword_256A487E0;
  if (!qword_256A487E0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ClientOrigin, &type metadata for ClientOrigin);
    atomic_store(result, (unint64_t *)&qword_256A487E0);
  }
  return result;
}

uint64_t assignWithCopy for RequestOrigin(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RequestOrigin(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23B72D244()
{
  unint64_t result;

  result = qword_256A487E8;
  if (!qword_256A487E8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798DA8, &type metadata for ClientOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A487E8);
  }
  return result;
}

unint64_t sub_23B72D28C()
{
  unint64_t result;

  result = qword_256A487F0;
  if (!qword_256A487F0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B798E60, &type metadata for RequestOrigin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A487F0);
  }
  return result;
}

uint64_t sub_23B72D2D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E696769726FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6950746E65696C63 && a2 == 0xE900000000000064 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023B7A08E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23B72D430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302598);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (__int128 *)((char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A485A0);
  v6 = sub_23B796DA0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v33[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23B72DB2C(v12, (uint64_t)v5);
    v14 = v5[9];
    v42 = v5[8];
    v43 = v14;
    v44 = v5[10];
    v15 = v5[5];
    v38 = v5[4];
    v39 = v15;
    v16 = v5[7];
    v40 = v5[6];
    v41 = v16;
    v17 = v5[1];
    v34 = *v5;
    v18 = v5[2];
    v37 = v5[3];
    v35 = v17;
    v36 = v18;
    result = sub_23B780558((uint64_t)&v34);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = (_OWORD *)(v7[6] + 176 * result);
    v23 = v43;
    v22[8] = v42;
    v22[9] = v23;
    v22[10] = v44;
    v24 = v39;
    v22[4] = v38;
    v22[5] = v24;
    v25 = v41;
    v22[6] = v40;
    v22[7] = v25;
    v26 = v35;
    *v22 = v34;
    v22[1] = v26;
    v27 = v37;
    v22[2] = v36;
    v22[3] = v27;
    v28 = v7[7];
    v29 = type metadata accessor for Location();
    result = sub_23B7274D0(v9, v28 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v21);
    v30 = v7[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_11;
    v7[2] = v32;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B72D630(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48810);
  v2 = (_QWORD *)sub_23B796DA0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23B72D814(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t Session.data(for:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
  return swift_task_switch();
}

uint64_t sub_23B72D758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = MEMORY[0x24BEE4AF8];
  v3 = sub_23B72D630(MEMORY[0x24BEE4AF8]);
  Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)((void *)0x7461642074736554, (void *)0xEF293A726F662861, 0, 0, v2, v3, v2, (uint64_t *)(v0 + 16));
  v4 = *(_OWORD *)(v0 + 16);
  v5 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v5;
  *(_OWORD *)v1 = v4;
  v6 = *(_OWORD *)(v0 + 64);
  v7 = *(_OWORD *)(v0 + 80);
  v8 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v1 + 96) = v8;
  *(_OWORD *)(v1 + 48) = v6;
  *(_OWORD *)(v1 + 64) = v7;
  v9 = *(_OWORD *)(v0 + 128);
  v10 = *(_OWORD *)(v0 + 144);
  v11 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v1 + 160) = v11;
  *(_OWORD *)(v1 + 112) = v9;
  *(_OWORD *)(v1 + 128) = v10;
  *(_QWORD *)(v1 + 176) = 0;
  *(_QWORD *)(v1 + 184) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23B72D814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23B796F44();
  sub_23B796A64();
  v4 = sub_23B796F74();
  return sub_23B72D878(a1, a2, v4);
}

unint64_t sub_23B72D878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23B796ECC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23B796ECC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23B72D958(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025E8);
  v3 = (_QWORD *)sub_23B796DA0();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_23B6F564C(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_23B6F564C(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23B72DA58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48808);
    v3 = (_QWORD *)sub_23B796DA0();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_23B7805CC(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23B72DB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ReverseGeocodingRequest.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReverseGeocodingRequest.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ReverseGeocodingRequest() + 20);
  return sub_23B709DC4(v3, a1);
}

uint64_t type metadata accessor for ReverseGeocodingRequest()
{
  uint64_t result;

  result = qword_256A48830;
  if (!qword_256A48830)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ReverseGeocodingRequest.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ReverseGeocodingRequest() + 24);
  return sub_23B6F1360(v3, a1);
}

uint64_t ReverseGeocodingRequest.isCoarseLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ReverseGeocodingRequest() + 28));
}

uint64_t ReverseGeocodingRequest.debugDescription.getter()
{
  sub_23B796CD4();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  type metadata accessor for ReverseGeocodingRequest();
  sub_23B72DF74();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  type metadata accessor for Location();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796EB4();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B72DF74()
{
  uint64_t v0;
  int *v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for Location();
  v2 = round(*(double *)(v0 + v1[10]) * 10000.0) / 10000.0;
  v3 = round(*(double *)(v0 + v1[11]) * 10000.0) / 10000.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48818);
  v4 = swift_allocObject();
  v5 = MEMORY[0x24BEE13C8];
  v6 = MEMORY[0x24BEE1448];
  *(_OWORD *)(v4 + 16) = xmmword_23B798100;
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(double *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(double *)(v4 + 72) = v3;
  v7 = *(double *)(v0 + v1[8]);
  if (v7 >= 5.0)
  {
    if (v7 >= 10.0)
    {
      if (v7 >= 25.0)
      {
        if (v7 >= 50.0)
        {
          if (v7 >= 100.0)
          {
            v8 = 1000;
            if (v7 < 250.0)
              v8 = 250;
          }
          else
          {
            v8 = 100;
          }
        }
        else
        {
          v8 = 50;
        }
      }
      else
      {
        v8 = 25;
      }
    }
    else
    {
      v8 = 10;
    }
  }
  else
  {
    v8 = 5;
  }
  v9 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v4 + 136) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v4 + 144) = v9;
  *(_QWORD *)(v4 + 112) = v8;
  return sub_23B796A40();
}

uint64_t ReverseGeocodingRequest.coarseGeoHash.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0 + *(int *)(type metadata accessor for ReverseGeocodingRequest() + 20);
  v2 = type metadata accessor for Location();
  v3 = round(*(double *)(v1 + *(int *)(v2 + 40)) * 100.0) / 100.0;
  v4 = round(*(double *)(v1 + *(int *)(v2 + 44)) * 100.0) / 100.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48818);
  v5 = swift_allocObject();
  v6 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v5 + 16) = xmmword_23B799020;
  v7 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(double *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(double *)(v5 + 72) = v4;
  return sub_23B796A40();
}

uint64_t ReverseGeocodingRequest.geoHash.getter()
{
  type metadata accessor for ReverseGeocodingRequest();
  return sub_23B72DF74();
}

uint64_t ReverseGeocodingRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23B796908();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23B796A64();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for ReverseGeocodingRequest();
  Location.hash(into:)();
  sub_23B6F1360(v0 + *(int *)(v8 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23B796F5C();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23B796F5C();
    sub_23B6EE138(&qword_256A48820, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
    sub_23B7969E0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_23B796F5C();
}

uint64_t ReverseGeocodingRequest.hashValue.getter()
{
  sub_23B796F44();
  ReverseGeocodingRequest.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B72E3B0()
{
  sub_23B796F44();
  ReverseGeocodingRequest.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B72E3F0()
{
  sub_23B796F44();
  ReverseGeocodingRequest.hash(into:)();
  return sub_23B796F74();
}

uint64_t _s12FindMyLocate23ReverseGeocodingRequestV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  char v21;
  int *v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _BYTE *v27;
  void (*v28)(_BYTE *, uint64_t);
  _BYTE v29[4];
  int v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;

  v4 = sub_23B796908();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48840);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v29[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v29[-v18];
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_23B796ECC(), v21 = 0, (v20 & 1) != 0))
  {
    v33 = v14;
    v22 = (int *)type metadata accessor for ReverseGeocodingRequest();
    if (_s12FindMyLocate8LocationV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v22[5], (uint64_t)a2 + v22[5]))
    {
      v32 = v7;
      sub_23B6F1360((uint64_t)a1 + v22[6], (uint64_t)v19);
      sub_23B6F1360((uint64_t)a2 + v22[6], (uint64_t)v17);
      v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_23B6F1360((uint64_t)v19, (uint64_t)v10);
      sub_23B6F1360((uint64_t)v17, v23);
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v24((uint64_t)v10, 1, v4) == 1)
      {
        sub_23B6F7190((uint64_t)v17, &qword_254303000);
        sub_23B6F7190((uint64_t)v19, &qword_254303000);
        if (v24(v23, 1, v4) == 1)
        {
          sub_23B6F7190((uint64_t)v10, &qword_254303000);
LABEL_14:
          v21 = *((_BYTE *)a1 + v22[7]) ^ *((_BYTE *)a2 + v22[7]) ^ 1;
          return v21 & 1;
        }
      }
      else
      {
        v31 = v5;
        v25 = (uint64_t)v33;
        sub_23B6F1360((uint64_t)v10, (uint64_t)v33);
        if (v24(v23, 1, v4) != 1)
        {
          v27 = v32;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v31 + 32))(v32, v23, v4);
          sub_23B6EE138(&qword_256A48848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE0]);
          v30 = sub_23B796A04();
          v28 = *(void (**)(_BYTE *, uint64_t))(v31 + 8);
          v28(v27, v4);
          sub_23B6F7190((uint64_t)v17, &qword_254303000);
          sub_23B6F7190((uint64_t)v19, &qword_254303000);
          v28((_BYTE *)v25, v4);
          sub_23B6F7190((uint64_t)v10, &qword_254303000);
          if ((v30 & 1) != 0)
            goto LABEL_14;
          goto LABEL_11;
        }
        sub_23B6F7190((uint64_t)v17, &qword_254303000);
        sub_23B6F7190((uint64_t)v19, &qword_254303000);
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v25, v4);
      }
      sub_23B6F7190((uint64_t)v10, &qword_256A48840);
    }
LABEL_11:
    v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_23B72E78C()
{
  return sub_23B6EE138(&qword_256A48828, (uint64_t (*)(uint64_t))type metadata accessor for ReverseGeocodingRequest, (uint64_t)&protocol conformance descriptor for ReverseGeocodingRequest);
}

_QWORD *initializeBufferWithCopyOfBuffer for ReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for Location();
    v13 = v12[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = *((_QWORD *)v15 + 1);
    if (v16 == 1)
    {
      v17 = *((_OWORD *)v15 + 9);
      *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
      *((_OWORD *)v14 + 9) = v17;
      v18 = *((_OWORD *)v15 + 11);
      *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
      *((_OWORD *)v14 + 11) = v18;
      v19 = *((_OWORD *)v15 + 5);
      *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
      *((_OWORD *)v14 + 5) = v19;
      v20 = *((_OWORD *)v15 + 7);
      *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
      *((_OWORD *)v14 + 7) = v20;
      v21 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v21;
      v22 = *((_OWORD *)v15 + 3);
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_OWORD *)v14 + 3) = v22;
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v16;
      v24 = *((_QWORD *)v15 + 3);
      *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
      *((_QWORD *)v14 + 3) = v24;
      v25 = *((_QWORD *)v15 + 5);
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      *((_QWORD *)v14 + 5) = v25;
      v26 = *((_QWORD *)v15 + 7);
      *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
      *((_QWORD *)v14 + 7) = v26;
      v27 = *((_QWORD *)v15 + 9);
      *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
      *((_QWORD *)v14 + 9) = v27;
      v28 = *((_QWORD *)v15 + 11);
      *((_QWORD *)v14 + 10) = *((_QWORD *)v15 + 10);
      *((_QWORD *)v14 + 11) = v28;
      v42 = *((_QWORD *)v15 + 13);
      *((_QWORD *)v14 + 12) = *((_QWORD *)v15 + 12);
      *((_QWORD *)v14 + 13) = v42;
      v29 = *((_QWORD *)v15 + 15);
      *((_QWORD *)v14 + 14) = *((_QWORD *)v15 + 14);
      *((_QWORD *)v14 + 15) = v29;
      v30 = *((_QWORD *)v15 + 17);
      *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
      *((_QWORD *)v14 + 17) = v30;
      v31 = *((_QWORD *)v15 + 19);
      *((_QWORD *)v14 + 18) = *((_QWORD *)v15 + 18);
      *((_QWORD *)v14 + 19) = v31;
      v32 = *((_QWORD *)v15 + 21);
      *((_QWORD *)v14 + 20) = *((_QWORD *)v15 + 20);
      *((_QWORD *)v14 + 21) = v32;
      v41 = *((_QWORD *)v15 + 23);
      *((_QWORD *)v14 + 22) = *((_QWORD *)v15 + 22);
      *((_QWORD *)v14 + 23) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)&v9[v12[6]] = *(_QWORD *)&v10[v12[6]];
    *(_QWORD *)&v9[v12[7]] = *(_QWORD *)&v10[v12[7]];
    *(_QWORD *)&v9[v12[8]] = *(_QWORD *)&v10[v12[8]];
    *(_QWORD *)&v9[v12[9]] = *(_QWORD *)&v10[v12[9]];
    *(_QWORD *)&v9[v12[10]] = *(_QWORD *)&v10[v12[10]];
    *(_QWORD *)&v9[v12[11]] = *(_QWORD *)&v10[v12[11]];
    *(_QWORD *)&v9[v12[12]] = *(_QWORD *)&v10[v12[12]];
    *(_QWORD *)&v9[v12[13]] = *(_QWORD *)&v10[v12[13]];
    *(_QWORD *)&v9[v12[14]] = *(_QWORD *)&v10[v12[14]];
    v9[v12[15]] = v10[v12[15]];
    v9[v12[16]] = v10[v12[16]];
    v33 = a3[6];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_23B796908();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    if (v38(v35, 1, v36))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for ReverseGeocodingRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  if (*(_QWORD *)(v4 + *(int *)(type metadata accessor for Location() + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23B796908();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

_QWORD *initializeWithCopy for ReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for Location();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = *((_QWORD *)v14 + 1);
  if (v15 == 1)
  {
    v16 = *((_OWORD *)v14 + 9);
    *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
    *((_OWORD *)v13 + 9) = v16;
    v17 = *((_OWORD *)v14 + 11);
    *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
    *((_OWORD *)v13 + 11) = v17;
    v18 = *((_OWORD *)v14 + 5);
    *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
    *((_OWORD *)v13 + 5) = v18;
    v19 = *((_OWORD *)v14 + 7);
    *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
    *((_OWORD *)v13 + 7) = v19;
    v20 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v20;
    v21 = *((_OWORD *)v14 + 3);
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    *((_OWORD *)v13 + 3) = v21;
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v22 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v22;
    v23 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v23;
    v41 = v3;
    v24 = *((_QWORD *)v14 + 7);
    *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
    *((_QWORD *)v13 + 7) = v24;
    v25 = *((_QWORD *)v14 + 9);
    *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
    *((_QWORD *)v13 + 9) = v25;
    v26 = *((_QWORD *)v14 + 11);
    *((_QWORD *)v13 + 10) = *((_QWORD *)v14 + 10);
    *((_QWORD *)v13 + 11) = v26;
    v40 = *((_QWORD *)v14 + 13);
    *((_QWORD *)v13 + 12) = *((_QWORD *)v14 + 12);
    *((_QWORD *)v13 + 13) = v40;
    v27 = *((_QWORD *)v14 + 15);
    *((_QWORD *)v13 + 14) = *((_QWORD *)v14 + 14);
    *((_QWORD *)v13 + 15) = v27;
    v28 = *((_QWORD *)v14 + 17);
    *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
    *((_QWORD *)v13 + 17) = v28;
    v29 = *((_QWORD *)v14 + 19);
    *((_QWORD *)v13 + 18) = *((_QWORD *)v14 + 18);
    *((_QWORD *)v13 + 19) = v29;
    v30 = *((_QWORD *)v14 + 21);
    *((_QWORD *)v13 + 20) = *((_QWORD *)v14 + 20);
    *((_QWORD *)v13 + 21) = v30;
    v39 = *((_QWORD *)v14 + 23);
    *((_QWORD *)v13 + 22) = *((_QWORD *)v14 + 22);
    *((_QWORD *)v13 + 23) = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v3 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  *(_QWORD *)&v8[v11[8]] = *(_QWORD *)&v9[v11[8]];
  *(_QWORD *)&v8[v11[9]] = *(_QWORD *)&v9[v11[9]];
  *(_QWORD *)&v8[v11[10]] = *(_QWORD *)&v9[v11[10]];
  *(_QWORD *)&v8[v11[11]] = *(_QWORD *)&v9[v11[11]];
  *(_QWORD *)&v8[v11[12]] = *(_QWORD *)&v9[v11[12]];
  *(_QWORD *)&v8[v11[13]] = *(_QWORD *)&v9[v11[13]];
  *(_QWORD *)&v8[v11[14]] = *(_QWORD *)&v9[v11[14]];
  v8[v11[15]] = v9[v11[15]];
  v8[v11[16]] = v9[v11[16]];
  v31 = *(int *)(v3 + 24);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_23B796908();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  if (v36(v33, 1, v34))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  *((_BYTE *)a1 + *(int *)(v3 + 28)) = *((_BYTE *)a2 + *(int *)(v3 + 28));
  return a1;
}

_QWORD *assignWithCopy for ReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Location();
  v11 = v10[5];
  v12 = (uint64_t)&v7[v11];
  v13 = &v8[v11];
  v14 = *(_QWORD *)&v7[v11 + 8];
  v15 = *(_QWORD *)&v8[v11 + 8];
  if (v14 == 1)
  {
    if (v15 == 1)
    {
      v16 = *(_OWORD *)v13;
      v17 = *((_OWORD *)v13 + 1);
      v18 = *((_OWORD *)v13 + 3);
      *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
      *(_OWORD *)(v12 + 48) = v18;
      *(_OWORD *)v12 = v16;
      *(_OWORD *)(v12 + 16) = v17;
      v19 = *((_OWORD *)v13 + 4);
      v20 = *((_OWORD *)v13 + 5);
      v21 = *((_OWORD *)v13 + 7);
      *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
      *(_OWORD *)(v12 + 112) = v21;
      *(_OWORD *)(v12 + 64) = v19;
      *(_OWORD *)(v12 + 80) = v20;
      v22 = *((_OWORD *)v13 + 8);
      v23 = *((_OWORD *)v13 + 9);
      v24 = *((_OWORD *)v13 + 11);
      *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
      *(_OWORD *)(v12 + 176) = v24;
      *(_OWORD *)(v12 + 128) = v22;
      *(_OWORD *)(v12 + 144) = v23;
    }
    else
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      *(_QWORD *)(v12 + 24) = *((_QWORD *)v13 + 3);
      *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
      *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
      *(_QWORD *)(v12 + 48) = *((_QWORD *)v13 + 6);
      *(_QWORD *)(v12 + 56) = *((_QWORD *)v13 + 7);
      *(_QWORD *)(v12 + 64) = *((_QWORD *)v13 + 8);
      *(_QWORD *)(v12 + 72) = *((_QWORD *)v13 + 9);
      *(_QWORD *)(v12 + 80) = *((_QWORD *)v13 + 10);
      *(_QWORD *)(v12 + 88) = *((_QWORD *)v13 + 11);
      *(_QWORD *)(v12 + 96) = *((_QWORD *)v13 + 12);
      *(_QWORD *)(v12 + 104) = *((_QWORD *)v13 + 13);
      *(_QWORD *)(v12 + 112) = *((_QWORD *)v13 + 14);
      *(_QWORD *)(v12 + 120) = *((_QWORD *)v13 + 15);
      *(_QWORD *)(v12 + 128) = *((_QWORD *)v13 + 16);
      *(_QWORD *)(v12 + 136) = *((_QWORD *)v13 + 17);
      *(_QWORD *)(v12 + 144) = *((_QWORD *)v13 + 18);
      *(_QWORD *)(v12 + 152) = *((_QWORD *)v13 + 19);
      *(_QWORD *)(v12 + 160) = *((_QWORD *)v13 + 20);
      *(_QWORD *)(v12 + 168) = *((_QWORD *)v13 + 21);
      *(_QWORD *)(v12 + 176) = *((_QWORD *)v13 + 22);
      *(_QWORD *)(v12 + 184) = *((_QWORD *)v13 + 23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_23B72F474(v12);
    v25 = *((_OWORD *)v13 + 3);
    v27 = *(_OWORD *)v13;
    v26 = *((_OWORD *)v13 + 1);
    *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
    *(_OWORD *)(v12 + 48) = v25;
    *(_OWORD *)v12 = v27;
    *(_OWORD *)(v12 + 16) = v26;
    v28 = *((_OWORD *)v13 + 7);
    v30 = *((_OWORD *)v13 + 4);
    v29 = *((_OWORD *)v13 + 5);
    *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
    *(_OWORD *)(v12 + 112) = v28;
    *(_OWORD *)(v12 + 64) = v30;
    *(_OWORD *)(v12 + 80) = v29;
    v31 = *((_OWORD *)v13 + 11);
    v33 = *((_OWORD *)v13 + 8);
    v32 = *((_OWORD *)v13 + 9);
    *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
    *(_OWORD *)(v12 + 176) = v31;
    *(_OWORD *)(v12 + 128) = v33;
    *(_OWORD *)(v12 + 144) = v32;
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = *((_QWORD *)v13 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    *(_QWORD *)(v12 + 24) = *((_QWORD *)v13 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
    *(_QWORD *)(v12 + 40) = *((_QWORD *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 48) = *((_QWORD *)v13 + 6);
    *(_QWORD *)(v12 + 56) = *((_QWORD *)v13 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 64) = *((_QWORD *)v13 + 8);
    *(_QWORD *)(v12 + 72) = *((_QWORD *)v13 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 80) = *((_QWORD *)v13 + 10);
    *(_QWORD *)(v12 + 88) = *((_QWORD *)v13 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 96) = *((_QWORD *)v13 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 104) = *((_QWORD *)v13 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 112) = *((_QWORD *)v13 + 14);
    *(_QWORD *)(v12 + 120) = *((_QWORD *)v13 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 128) = *((_QWORD *)v13 + 16);
    *(_QWORD *)(v12 + 136) = *((_QWORD *)v13 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 144) = *((_QWORD *)v13 + 18);
    *(_QWORD *)(v12 + 152) = *((_QWORD *)v13 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 160) = *((_QWORD *)v13 + 20);
    *(_QWORD *)(v12 + 168) = *((_QWORD *)v13 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 176) = *((_QWORD *)v13 + 22);
    *(_QWORD *)(v12 + 184) = *((_QWORD *)v13 + 23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  *(_QWORD *)&v7[v10[11]] = *(_QWORD *)&v8[v10[11]];
  *(_QWORD *)&v7[v10[12]] = *(_QWORD *)&v8[v10[12]];
  *(_QWORD *)&v7[v10[13]] = *(_QWORD *)&v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  v7[v10[16]] = v8[v10[16]];
  v34 = a3[6];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_23B796908();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v35, v36, v37);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_13;
  }
  if (v41)
  {
LABEL_13:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_14:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t sub_23B72F474(uint64_t a1)
{
  destroy for PlaceMark();
  return a1;
}

_OWORD *initializeWithTake for ReverseGeocodingRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Location();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v15 = *((_OWORD *)v13 + 3);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_OWORD *)v12 + 3) = v15;
  v16 = *((_OWORD *)v13 + 7);
  *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
  *((_OWORD *)v12 + 7) = v16;
  v17 = *((_OWORD *)v13 + 5);
  *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
  *((_OWORD *)v12 + 5) = v17;
  v18 = *((_OWORD *)v13 + 11);
  *((_OWORD *)v12 + 10) = *((_OWORD *)v13 + 10);
  *((_OWORD *)v12 + 11) = v18;
  v19 = *((_OWORD *)v13 + 9);
  *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
  *((_OWORD *)v12 + 9) = v19;
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  *(_QWORD *)&v7[v10[10]] = *(_QWORD *)&v8[v10[10]];
  *(_QWORD *)&v7[v10[11]] = *(_QWORD *)&v8[v10[11]];
  *(_QWORD *)&v7[v10[12]] = *(_QWORD *)&v8[v10[12]];
  *(_QWORD *)&v7[v10[13]] = *(_QWORD *)&v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  v7[v10[16]] = v8[v10[16]];
  v20 = a3[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23B796908();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *assignWithTake for ReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for Location();
  v12 = v11[5];
  v13 = (uint64_t)&v8[v12];
  v14 = &v9[v12];
  if (*(_QWORD *)&v8[v12 + 8] == 1)
    goto LABEL_4;
  v15 = *((_QWORD *)v14 + 1);
  if (v15 == 1)
  {
    sub_23B72F474(v13);
LABEL_4:
    v16 = *((_OWORD *)v14 + 9);
    *(_OWORD *)(v13 + 128) = *((_OWORD *)v14 + 8);
    *(_OWORD *)(v13 + 144) = v16;
    v17 = *((_OWORD *)v14 + 11);
    *(_OWORD *)(v13 + 160) = *((_OWORD *)v14 + 10);
    *(_OWORD *)(v13 + 176) = v17;
    v18 = *((_OWORD *)v14 + 5);
    *(_OWORD *)(v13 + 64) = *((_OWORD *)v14 + 4);
    *(_OWORD *)(v13 + 80) = v18;
    v19 = *((_OWORD *)v14 + 7);
    *(_OWORD *)(v13 + 96) = *((_OWORD *)v14 + 6);
    *(_OWORD *)(v13 + 112) = v19;
    v20 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v20;
    v21 = *((_OWORD *)v14 + 3);
    *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
    *(_OWORD *)(v13 + 48) = v21;
    goto LABEL_6;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  v22 = *((_QWORD *)v14 + 3);
  *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
  *(_QWORD *)(v13 + 24) = v22;
  swift_bridgeObjectRelease();
  v23 = *((_QWORD *)v14 + 5);
  *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
  *(_QWORD *)(v13 + 40) = v23;
  swift_bridgeObjectRelease();
  v24 = *((_QWORD *)v14 + 7);
  *(_QWORD *)(v13 + 48) = *((_QWORD *)v14 + 6);
  *(_QWORD *)(v13 + 56) = v24;
  swift_bridgeObjectRelease();
  v25 = *((_QWORD *)v14 + 9);
  *(_QWORD *)(v13 + 64) = *((_QWORD *)v14 + 8);
  *(_QWORD *)(v13 + 72) = v25;
  swift_bridgeObjectRelease();
  v26 = *((_QWORD *)v14 + 11);
  *(_QWORD *)(v13 + 80) = *((_QWORD *)v14 + 10);
  *(_QWORD *)(v13 + 88) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 96) = *((_QWORD *)v14 + 12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 104) = *((_QWORD *)v14 + 13);
  swift_bridgeObjectRelease();
  v27 = *((_QWORD *)v14 + 15);
  *(_QWORD *)(v13 + 112) = *((_QWORD *)v14 + 14);
  *(_QWORD *)(v13 + 120) = v27;
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)v14 + 17);
  *(_QWORD *)(v13 + 128) = *((_QWORD *)v14 + 16);
  *(_QWORD *)(v13 + 136) = v28;
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)v14 + 19);
  *(_QWORD *)(v13 + 144) = *((_QWORD *)v14 + 18);
  *(_QWORD *)(v13 + 152) = v29;
  swift_bridgeObjectRelease();
  v30 = *((_QWORD *)v14 + 21);
  *(_QWORD *)(v13 + 160) = *((_QWORD *)v14 + 20);
  *(_QWORD *)(v13 + 168) = v30;
  swift_bridgeObjectRelease();
  v31 = *((_QWORD *)v14 + 23);
  *(_QWORD *)(v13 + 176) = *((_QWORD *)v14 + 22);
  *(_QWORD *)(v13 + 184) = v31;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  *(_QWORD *)&v8[v11[8]] = *(_QWORD *)&v9[v11[8]];
  *(_QWORD *)&v8[v11[9]] = *(_QWORD *)&v9[v11[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v11[10]] = *(_QWORD *)&v9[v11[10]];
  *(_QWORD *)&v8[v11[11]] = *(_QWORD *)&v9[v11[11]];
  *(_QWORD *)&v8[v11[12]] = *(_QWORD *)&v9[v11[12]];
  *(_QWORD *)&v8[v11[13]] = *(_QWORD *)&v9[v11[13]];
  *(_QWORD *)&v8[v11[14]] = *(_QWORD *)&v9[v11[14]];
  v8[v11[15]] = v9[v11[15]];
  v8[v11[16]] = v9[v11[16]];
  v32 = a3[6];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_23B796908();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v33, v34, v35);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
    goto LABEL_11;
  }
  if (v39)
  {
LABEL_11:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_12:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReverseGeocodingRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B72F9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Location();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ReverseGeocodingRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B72FA54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Location();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23B72FAF4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Location();
  if (v0 <= 0x3F)
  {
    sub_23B6EE838();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t Location.date.getter()
{
  type metadata accessor for Location();
  return sub_23B79686C();
}

uint64_t Location.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

_QWORD *Location.address.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[24];

  v3 = type metadata accessor for Location();
  sub_23B709C30(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_23B709C30((uint64_t)v5, a1);
  return sub_23B7254CC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B709CE0);
}

double Location.altitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 24));
}

uint64_t Location.floorLevel.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Location() + 28));
}

double Location.horizontalAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 32));
}

uint64_t Location.labels.getter()
{
  type metadata accessor for Location();
  return swift_bridgeObjectRetain();
}

double Location.latitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 40));
}

double Location.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 44));
}

double Location.speed.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 48));
}

double Location.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 52));
}

double Location.verticalAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Location() + 56));
}

uint64_t Location.locationType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Location();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t Location.motionActivityState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Location();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t sub_23B72FDD4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  char v7;

  v1 = *(_QWORD **)(v0 + *(int *)(type metadata accessor for Location() + 36));
  if (!v1[2])
    return 0;
  v3 = v1[4];
  v2 = (void *)v1[5];
  swift_bridgeObjectRetain_n();
  v4._countAndFlagsBits = v3;
  v4._object = v2;
  DefaultCustomLabel.init(rawValue:)(v4);
  if (v7 != 5)
  {
    DefaultCustomLabel.localizedLabel.getter();
    v3 = v5;
    swift_bridgeObjectRelease();
  }
  return v3;
}

void Location.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[192];
  _QWORD v5[25];

  v1 = sub_23B7968A8();
  MEMORY[0x24BDAC7A8](v1);
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_23B796CD4();
  sub_23B796A7C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  sub_23B731C54(&qword_256A48850, MEMORY[0x24BE316E8]);
  sub_23B796EB4();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  v2 = type metadata accessor for Location();
  sub_23B709C30(v0 + *(int *)(v2 + 20), (uint64_t)v4);
  sub_23B709C30((uint64_t)v4, (uint64_t)v5);
  if (sub_23B725120((uint64_t)v5) != 1)
    PlaceMark.description.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796EB4();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  v3 = swift_bridgeObjectRetain();
  MEMORY[0x23B86BE78](v3, MEMORY[0x24BEE0D00]);
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  sub_23B796BE4();
  sub_23B796A7C();
  __asm { BR              X10 }
}

uint64_t sub_23B730300()
{
  uint64_t v0;
  uint64_t v1;

  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return ((uint64_t (*)(uint64_t))((char *)sub_23B7303BC
                                          + 4 * byte_23B79912C[*(unsigned __int8 *)(v0 + *(int *)(v1 + 64))]))(0x6E776F6E6B6E752ELL);
}

uint64_t sub_23B7303BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B79686C();
  sub_23B796818();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 8) + 8))(v2, v1);
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v0 + 216);
}

uint64_t Location.coarseAddressLabel.getter()
{
  char v1;

  v1 = 0;
  return Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(0, 0, 1, (FindMyLocate::Location::LabelLength)&v1).value._countAndFlagsBits;
}

Swift::String_optional __swiftcall Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(Swift::Bool includeCustomLabel, Swift::Bool includePointsOfInterest, Swift::Bool wantsCoarseAddress, FindMyLocate::Location::LabelLength maxLength)
{
  uint64_t v4;
  unsigned __int8 *v5;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  Swift::String_optional result;
  _QWORD v29[24];
  _QWORD v30[17];
  void *v31;
  uint64_t v32;
  void *v33;
  _BYTE v34[192];
  _QWORD v35[25];

  v5 = (unsigned __int8 *)maxLength;
  v9 = (int *)type metadata accessor for Location();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v5;
  v14 = *(unsigned __int8 *)(v4 + *(int *)(v10 + 64));
  sub_23B709DC4(v4, (uint64_t)v12);
  if (v14 != 1)
    v14 = v12[v9[16]] == 2;
  sub_23B709E08((uint64_t)v12);
  if (*(_BYTE *)(v4 + v9[15]) != 2)
    v14 = 1;
  sub_23B709C30(v4 + v9[5], (uint64_t)v34);
  sub_23B709C30((uint64_t)v34, (uint64_t)v35);
  if (sub_23B725120((uint64_t)v35) == 1)
  {
    v15 = 0;
    v16 = 0;
    if (!v14)
      goto LABEL_17;
  }
  else
  {
    v15 = v35[14];
    v16 = (void *)v35[15];
    swift_bridgeObjectRetain();
    if (!v14)
      goto LABEL_17;
  }
  if (includeCustomLabel)
  {
    v17 = sub_23B72FDD4();
    if (v18)
    {
      v19 = v17;
      v20 = v18;
      goto LABEL_30;
    }
  }
  if (includePointsOfInterest)
  {
    sub_23B709C30((uint64_t)v34, (uint64_t)v30);
    if (sub_23B725120((uint64_t)v30) != 1)
    {
      v20 = v31;
      if (v31)
      {
        v19 = v30[16];
        swift_bridgeObjectRetain();
        goto LABEL_30;
      }
    }
  }
  if (!wantsCoarseAddress)
  {
    sub_23B709C30((uint64_t)v34, (uint64_t)v30);
    if (sub_23B725120((uint64_t)v30) == 1)
    {
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v19 = 0;
      v20 = 0;
      if (v13)
        goto LABEL_20;
    }
    else
    {
      v19 = v32;
      v20 = v33;
      sub_23B709C30((uint64_t)v34, (uint64_t)v29);
      v23 = v29[20];
      v24 = (void *)v29[21];
      v21 = v29[22];
      v22 = (void *)v29[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_20:
        if (v13 == 1)
        {
          swift_bridgeObjectRelease();
          if (v24)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v19 = v23;
            v20 = v24;
            goto LABEL_31;
          }
        }
        else
        {
          if (v22)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v19 = v21;
            v20 = v22;
            goto LABEL_31;
          }
          if (v24)
            goto LABEL_22;
        }
        if (v20)
          goto LABEL_30;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v20)
      goto LABEL_17;
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
LABEL_17:
  v19 = v15;
  v20 = v16;
LABEL_31:
  v25 = v19;
  v26 = v20;
  result.value._object = v26;
  result.value._countAndFlagsBits = v25;
  return result;
}

uint64_t Location.displayAddress.getter()
{
  char v1;

  v1 = 1;
  return Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(1, 1, 0, (FindMyLocate::Location::LabelLength)&v1).value._countAndFlagsBits;
}

uint64_t Location.fullAddress.getter()
{
  char v1;

  v1 = 2;
  return Location.label(includeCustomLabel:includePointsOfInterest:wantsCoarseAddress:maxLength:)(1, 1, 0, (FindMyLocate::Location::LabelLength)&v1).value._countAndFlagsBits;
}

BOOL static Location.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location();
  return *(double *)(a1 + *(int *)(v4 + 52)) < *(double *)(a2 + *(int *)(v4 + 52));
}

uint64_t Location.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  _BYTE v7[192];
  _BYTE v8[192];

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  sub_23B731C54(&qword_256A48858, MEMORY[0x24BE316D0]);
  sub_23B7969E0();
  v1 = type metadata accessor for Location();
  sub_23B709C30(v0 + *(int *)(v1 + 20), (uint64_t)v7);
  sub_23B709C30((uint64_t)v7, (uint64_t)v8);
  if (sub_23B725120((uint64_t)v8) == 1)
  {
    sub_23B796F5C();
  }
  else
  {
    sub_23B709C30((uint64_t)v7, (uint64_t)&v6);
    sub_23B796F5C();
    PlaceMark.hash(into:)();
  }
  sub_23B796F68();
  sub_23B796F50();
  sub_23B796F68();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 36));
  sub_23B796F50();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23B796A64();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_23B796F68();
  sub_23B796F68();
  sub_23B796F68();
  sub_23B796F68();
  sub_23B796F68();
  sub_23B796F50();
  return sub_23B796F50();
}

uint64_t sub_23B730A48(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_23B796ECC(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_23B796ECC() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23B730B0C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B730B48 + 4 * byte_23B799132[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_23B730B48()
{
  return 0x73736572646461;
}

uint64_t sub_23B730B60()
{
  return 0x6564757469746C61;
}

uint64_t sub_23B730B7C()
{
  return 0x76654C726F6F6C66;
}

unint64_t sub_23B730B98()
{
  return 0xD000000000000012;
}

uint64_t sub_23B730C88()
{
  unsigned __int8 *v0;

  return sub_23B730B0C(*v0);
}

uint64_t sub_23B730C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B732ED0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B730CB4(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_23B730CC0()
{
  sub_23B731B44();
  return sub_23B796FA4();
}

uint64_t sub_23B730CE8()
{
  sub_23B731B44();
  return sub_23B796FB0();
}

uint64_t Location.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  _QWORD v12[24];
  _BYTE v13[200];
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48860);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B731B44();
  sub_23B796F8C();
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  sub_23B731C54(&qword_256A48870, MEMORY[0x24BE316C8]);
  sub_23B796EA8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for Location();
    sub_23B709C30(v3 + v9[5], (uint64_t)v13);
    sub_23B709C30((uint64_t)v13, (uint64_t)v12);
    v14 = 1;
    sub_23B731B88();
    sub_23B796E6C();
    LOBYTE(v12[0]) = 2;
    sub_23B796E90();
    LOBYTE(v12[0]) = 3;
    sub_23B796E9C();
    LOBYTE(v12[0]) = 4;
    sub_23B796E90();
    v12[0] = *(_QWORD *)(v3 + v9[9]);
    v14 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
    sub_23B6F984C(&qword_254302C30, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23B796EA8();
    LOBYTE(v12[0]) = 6;
    sub_23B796E90();
    LOBYTE(v12[0]) = 7;
    sub_23B796E90();
    LOBYTE(v12[0]) = 8;
    sub_23B796E90();
    LOBYTE(v12[0]) = 9;
    sub_23B796E90();
    LOBYTE(v12[0]) = 10;
    sub_23B796E90();
    LOBYTE(v12[0]) = *(_BYTE *)(v3 + v9[15]);
    v14 = 11;
    sub_23B731BCC();
    sub_23B796EA8();
    LOBYTE(v12[0]) = *(_BYTE *)(v3 + v9[16]);
    v14 = 12;
    sub_23B731C10();
    sub_23B796EA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Location.hashValue.getter()
{
  sub_23B796F44();
  Location.hash(into:)();
  return sub_23B796F74();
}

uint64_t Location.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  _BYTE v31[192];
  char v32[200];
  char v33;
  char v34;

  v23 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48890);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (int *)type metadata accessor for Location();
  MEMORY[0x24BDAC7A8](v29);
  v27 = a1;
  v28 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B731B44();
  v24 = v9;
  sub_23B796F80();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  v22 = v7;
  v32[0] = 0;
  sub_23B731C54(&qword_256A48898, MEMORY[0x24BE316E0]);
  sub_23B796E30();
  v11 = v28;
  (*(void (**)(char *, char *))(v26 + 32))(v28, v6);
  v34 = 1;
  sub_23B731C98();
  sub_23B796DF4();
  sub_23B709C30((uint64_t)v32, (uint64_t)v31);
  v12 = v29;
  sub_23B709C30((uint64_t)v31, (uint64_t)&v11[v29[5]]);
  LOBYTE(v30) = 2;
  sub_23B796E18();
  *(_QWORD *)&v11[v12[6]] = v13;
  LOBYTE(v30) = 3;
  *(_QWORD *)&v11[v12[7]] = sub_23B796E24();
  LOBYTE(v30) = 4;
  sub_23B796E18();
  *(_QWORD *)&v11[v12[8]] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254303FE8);
  v33 = 5;
  sub_23B6F984C(&qword_2543026C8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_23B796E30();
  *(_QWORD *)&v11[v12[9]] = v30;
  LOBYTE(v30) = 6;
  sub_23B796E18();
  *(_QWORD *)&v11[v12[10]] = v15;
  LOBYTE(v30) = 7;
  sub_23B796E18();
  *(_QWORD *)&v11[v12[11]] = v16;
  LOBYTE(v30) = 8;
  sub_23B796E18();
  *(_QWORD *)&v11[v29[12]] = v17;
  LOBYTE(v30) = 9;
  sub_23B796E18();
  *(_QWORD *)&v28[v29[13]] = v18;
  LOBYTE(v30) = 10;
  sub_23B796E18();
  *(_QWORD *)&v28[v29[14]] = v19;
  v33 = 11;
  sub_23B731CDC();
  sub_23B796E30();
  v28[v29[15]] = v30;
  v33 = 12;
  sub_23B731D20();
  sub_23B796E30();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v25);
  v20 = (uint64_t)v28;
  v28[v29[16]] = v30;
  sub_23B709DC4(v20, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_23B709E08(v20);
}

uint64_t sub_23B7316D4()
{
  sub_23B796F44();
  Location.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B731714()
{
  sub_23B796F44();
  Location.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B73174C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Location.init(from:)(a1, a2);
}

uint64_t sub_23B731760(_QWORD *a1)
{
  return Location.encode(to:)(a1);
}

BOOL sub_23B731778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 52)) < *(double *)(a2 + *(int *)(a3 + 52));
}

BOOL sub_23B731790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 52)) >= *(double *)(a1 + *(int *)(a3 + 52));
}

BOOL sub_23B7317A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 52)) >= *(double *)(a2 + *(int *)(a3 + 52));
}

BOOL sub_23B7317C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 52)) < *(double *)(a1 + *(int *)(a3 + 52));
}

BOOL static Location.LabelLength.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Location.LabelLength.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t Location.LabelLength.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

BOOL _s12FindMyLocate8LocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  BOOL MyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0;
  _OWORD v7[12];
  _OWORD v8[12];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[192];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34[24];
  uint64_t v35;
  _BYTE v36[192];
  _QWORD v37[24];
  _BYTE v38[192];

  v4 = (int *)type metadata accessor for Location();
  if ((_s12FindMyLocate5FenceV2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  sub_23B709C30(a1 + v4[5], (uint64_t)v36);
  sub_23B709C30(a2 + v4[5], (uint64_t)v37);
  sub_23B709C30((uint64_t)v36, (uint64_t)v38);
  if (sub_23B725120((uint64_t)v38) != 1)
  {
    sub_23B709C30((uint64_t)v36, (uint64_t)&v22);
    sub_23B709C30((uint64_t)v37, (uint64_t)v34);
    if (sub_23B725120((uint64_t)v34) != 1)
    {
      sub_23B709C30((uint64_t)v37, (uint64_t)v8);
      v7[8] = v8[8];
      v7[9] = v8[9];
      v7[10] = v8[10];
      v7[11] = v8[11];
      v7[4] = v8[4];
      v7[5] = v8[5];
      v7[6] = v8[6];
      v7[7] = v8[7];
      v7[0] = v8[0];
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      MyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0 = _s12FindMyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0(&v22, v7);
      v17 = v30;
      v18 = v31;
      v19 = v32;
      v20 = v33;
      v13 = v26;
      v14 = v27;
      v15 = v28;
      v16 = v29;
      v9 = v22;
      v10 = v23;
      v11 = v24;
      v12 = v25;
      sub_23B709C30((uint64_t)v36, (uint64_t)v21);
      sub_23B703D94((uint64_t)v21);
      sub_23B703CB0((uint64_t)&v9);
      if (!MyLocate9PlaceMarkV2eeoiySbAC_ACtFZ_0)
        return 0;
      goto LABEL_9;
    }
    v17 = v30;
    v18 = v31;
    v19 = v32;
    v20 = v33;
    v13 = v26;
    v14 = v27;
    v15 = v28;
    v16 = v29;
    v9 = v22;
    v10 = v23;
    v11 = v24;
    v12 = v25;
    sub_23B709C30((uint64_t)v36, (uint64_t)v21);
    sub_23B703D94((uint64_t)v21);
    sub_23B703D94((uint64_t)v21);
    sub_23B703CB0((uint64_t)&v9);
LABEL_7:
    sub_23B709C30((uint64_t)v36, (uint64_t)v34);
    sub_23B709C30((uint64_t)v37, (uint64_t)&v35);
    sub_23B7254CC(v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B709CE0);
    sub_23B7333F0(v34);
    return 0;
  }
  sub_23B709C30((uint64_t)v37, (uint64_t)v34);
  if (sub_23B725120((uint64_t)v34) != 1)
    goto LABEL_7;
LABEL_9:
  if (*(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])
    && *(_QWORD *)(a1 + v4[7]) == *(_QWORD *)(a2 + v4[7])
    && *(double *)(a1 + v4[8]) == *(double *)(a2 + v4[8])
    && (sub_23B730A48(*(_QWORD **)(a1 + v4[9]), *(_QWORD **)(a2 + v4[9])) & 1) != 0
    && *(double *)(a1 + v4[10]) == *(double *)(a2 + v4[10])
    && *(double *)(a1 + v4[11]) == *(double *)(a2 + v4[11])
    && *(double *)(a1 + v4[12]) == *(double *)(a2 + v4[12])
    && *(double *)(a1 + v4[13]) == *(double *)(a2 + v4[13])
    && *(double *)(a1 + v4[14]) == *(double *)(a2 + v4[14])
    && *(unsigned __int8 *)(a1 + v4[15]) == *(unsigned __int8 *)(a2 + v4[15]))
  {
    return *(unsigned __int8 *)(a1 + v4[16]) == *(unsigned __int8 *)(a2 + v4[16]);
  }
  return 0;
}

unint64_t sub_23B731B44()
{
  unint64_t result;

  result = qword_256A48868;
  if (!qword_256A48868)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799484, &type metadata for Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48868);
  }
  return result;
}

unint64_t sub_23B731B88()
{
  unint64_t result;

  result = qword_256A48878;
  if (!qword_256A48878)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for PlaceMark, &type metadata for PlaceMark);
    atomic_store(result, (unint64_t *)&qword_256A48878);
  }
  return result;
}

unint64_t sub_23B731BCC()
{
  unint64_t result;

  result = qword_256A48880;
  if (!qword_256A48880)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocationType, &type metadata for LocationType);
    atomic_store(result, (unint64_t *)&qword_256A48880);
  }
  return result;
}

unint64_t sub_23B731C10()
{
  unint64_t result;

  result = qword_256A48888;
  if (!qword_256A48888)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for MotionActivityState, &type metadata for MotionActivityState);
    atomic_store(result, (unint64_t *)&qword_256A48888);
  }
  return result;
}

uint64_t sub_23B731C54(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A48358);
    result = MEMORY[0x23B86C6B8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B731C98()
{
  unint64_t result;

  result = qword_256A488A0;
  if (!qword_256A488A0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for PlaceMark, &type metadata for PlaceMark);
    atomic_store(result, (unint64_t *)&qword_256A488A0);
  }
  return result;
}

unint64_t sub_23B731CDC()
{
  unint64_t result;

  result = qword_256A488A8;
  if (!qword_256A488A8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocationType, &type metadata for LocationType);
    atomic_store(result, (unint64_t *)&qword_256A488A8);
  }
  return result;
}

unint64_t sub_23B731D20()
{
  unint64_t result;

  result = qword_256A488B0;
  if (!qword_256A488B0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for MotionActivityState, &type metadata for MotionActivityState);
    atomic_store(result, (unint64_t *)&qword_256A488B0);
  }
  return result;
}

unint64_t sub_23B731D68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A488B8;
  if (!qword_256A488B8)
  {
    v1 = type metadata accessor for Location();
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Location, v1);
    atomic_store(result, (unint64_t *)&qword_256A488B8);
  }
  return result;
}

unint64_t sub_23B731DB4()
{
  unint64_t result;

  result = qword_256A488C0;
  if (!qword_256A488C0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Location.LabelLength, &type metadata for Location.LabelLength);
    atomic_store(result, (unint64_t *)&qword_256A488C0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Location(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 == 1)
    {
      v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      v13 = *((_OWORD *)v10 + 11);
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      *((_OWORD *)v9 + 11) = v13;
      v14 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v14;
      v15 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v15;
      v16 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v16;
      v17 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v17;
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v19 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v19;
      v20 = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = v20;
      v21 = *((_QWORD *)v10 + 7);
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      *((_QWORD *)v9 + 7) = v21;
      v22 = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
      *((_QWORD *)v9 + 9) = v22;
      v23 = *((_QWORD *)v10 + 11);
      *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 11) = v23;
      v24 = *((_QWORD *)v10 + 13);
      *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
      *((_QWORD *)v9 + 13) = v24;
      v25 = *((_QWORD *)v10 + 15);
      *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
      *((_QWORD *)v9 + 15) = v25;
      v26 = *((_QWORD *)v10 + 17);
      *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
      *((_QWORD *)v9 + 17) = v26;
      v27 = *((_QWORD *)v10 + 19);
      *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
      *((_QWORD *)v9 + 19) = v27;
      v28 = *((_QWORD *)v10 + 21);
      *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
      *((_QWORD *)v9 + 21) = v28;
      v35 = *((_QWORD *)v10 + 23);
      *((_QWORD *)v9 + 22) = *((_QWORD *)v10 + 22);
      *((_QWORD *)v9 + 23) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v29 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
    v30 = a3[9];
    *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
    v31 = a3[11];
    *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
    v32 = a3[13];
    *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
    *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
    v33 = a3[15];
    *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
    *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(v9 + 144);
    *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 144) = v11;
    v12 = *(_OWORD *)(v9 + 176);
    *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
    *(_OWORD *)(v8 + 176) = v12;
    v13 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v13;
    v14 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v14;
    v15 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v15;
    v16 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v16;
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v17 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v17;
    v18 = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = v18;
    v19 = *(_QWORD *)(v9 + 56);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 56) = v19;
    v20 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v8 + 72) = v20;
    v21 = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
    *(_QWORD *)(v8 + 88) = v21;
    v22 = *(_QWORD *)(v9 + 104);
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_QWORD *)(v8 + 104) = v22;
    v23 = *(_QWORD *)(v9 + 120);
    *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = v23;
    v24 = *(_QWORD *)(v9 + 136);
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    *(_QWORD *)(v8 + 136) = v24;
    v25 = *(_QWORD *)(v9 + 152);
    *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
    *(_QWORD *)(v8 + 152) = v25;
    v26 = *(_QWORD *)(v9 + 168);
    *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 + 160);
    *(_QWORD *)(v8 + 168) = v26;
    v33 = *(_QWORD *)(v9 + 184);
    *(_QWORD *)(v8 + 176) = *(_QWORD *)(v9 + 176);
    *(_QWORD *)(v8 + 184) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  v28 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  v29 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  v31 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      v13 = v9[1];
      v14 = v9[3];
      *(_OWORD *)(v8 + 32) = v9[2];
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)v8 = v12;
      *(_OWORD *)(v8 + 16) = v13;
      v15 = v9[4];
      v16 = v9[5];
      v17 = v9[7];
      *(_OWORD *)(v8 + 96) = v9[6];
      *(_OWORD *)(v8 + 112) = v17;
      *(_OWORD *)(v8 + 64) = v15;
      *(_OWORD *)(v8 + 80) = v16;
      v18 = v9[8];
      v19 = v9[9];
      v20 = v9[11];
      *(_OWORD *)(v8 + 160) = v9[10];
      *(_OWORD *)(v8 + 176) = v20;
      *(_OWORD *)(v8 + 128) = v18;
      *(_OWORD *)(v8 + 144) = v19;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
      *(_QWORD *)(v8 + 40) = *((_QWORD *)v9 + 5);
      *(_QWORD *)(v8 + 48) = *((_QWORD *)v9 + 6);
      *(_QWORD *)(v8 + 56) = *((_QWORD *)v9 + 7);
      *(_QWORD *)(v8 + 64) = *((_QWORD *)v9 + 8);
      *(_QWORD *)(v8 + 72) = *((_QWORD *)v9 + 9);
      *(_QWORD *)(v8 + 80) = *((_QWORD *)v9 + 10);
      *(_QWORD *)(v8 + 88) = *((_QWORD *)v9 + 11);
      *(_QWORD *)(v8 + 96) = *((_QWORD *)v9 + 12);
      *(_QWORD *)(v8 + 104) = *((_QWORD *)v9 + 13);
      *(_QWORD *)(v8 + 112) = *((_QWORD *)v9 + 14);
      *(_QWORD *)(v8 + 120) = *((_QWORD *)v9 + 15);
      *(_QWORD *)(v8 + 128) = *((_QWORD *)v9 + 16);
      *(_QWORD *)(v8 + 136) = *((_QWORD *)v9 + 17);
      *(_QWORD *)(v8 + 144) = *((_QWORD *)v9 + 18);
      *(_QWORD *)(v8 + 152) = *((_QWORD *)v9 + 19);
      *(_QWORD *)(v8 + 160) = *((_QWORD *)v9 + 20);
      *(_QWORD *)(v8 + 168) = *((_QWORD *)v9 + 21);
      *(_QWORD *)(v8 + 176) = *((_QWORD *)v9 + 22);
      *(_QWORD *)(v8 + 184) = *((_QWORD *)v9 + 23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_23B72F474(v8);
    v21 = v9[3];
    v23 = *v9;
    v22 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v21;
    *(_OWORD *)v8 = v23;
    *(_OWORD *)(v8 + 16) = v22;
    v24 = v9[7];
    v26 = v9[4];
    v25 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v24;
    *(_OWORD *)(v8 + 64) = v26;
    *(_OWORD *)(v8 + 80) = v25;
    v27 = v9[11];
    v29 = v9[8];
    v28 = v9[9];
    *(_OWORD *)(v8 + 160) = v9[10];
    *(_OWORD *)(v8 + 176) = v27;
    *(_OWORD *)(v8 + 128) = v29;
    *(_OWORD *)(v8 + 144) = v28;
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
    *(_QWORD *)(v8 + 40) = *((_QWORD *)v9 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 48) = *((_QWORD *)v9 + 6);
    *(_QWORD *)(v8 + 56) = *((_QWORD *)v9 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 64) = *((_QWORD *)v9 + 8);
    *(_QWORD *)(v8 + 72) = *((_QWORD *)v9 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 80) = *((_QWORD *)v9 + 10);
    *(_QWORD *)(v8 + 88) = *((_QWORD *)v9 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 96) = *((_QWORD *)v9 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 104) = *((_QWORD *)v9 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 112) = *((_QWORD *)v9 + 14);
    *(_QWORD *)(v8 + 120) = *((_QWORD *)v9 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 128) = *((_QWORD *)v9 + 16);
    *(_QWORD *)(v8 + 136) = *((_QWORD *)v9 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 144) = *((_QWORD *)v9 + 18);
    *(_QWORD *)(v8 + 152) = *((_QWORD *)v9 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 160) = *((_QWORD *)v9 + 20);
    *(_QWORD *)(v8 + 168) = *((_QWORD *)v9 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 176) = *((_QWORD *)v9 + 22);
    *(_QWORD *)(v8 + 184) = *((_QWORD *)v9 + 23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

uint64_t initializeWithTake for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[3];
  v9[2] = v10[2];
  v9[3] = v11;
  v12 = v10[1];
  *v9 = *v10;
  v9[1] = v12;
  v13 = v10[7];
  v9[6] = v10[6];
  v9[7] = v13;
  v14 = v10[5];
  v9[4] = v10[4];
  v9[5] = v14;
  v15 = v10[11];
  v9[10] = v10[10];
  v9[11] = v15;
  v16 = v10[9];
  v9[8] = v10[8];
  v9[9] = v16;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  v21 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  return a1;
}

uint64_t assignWithTake for Location(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*(_QWORD *)(a1 + v7 + 8) != 1)
  {
    v10 = v9[1];
    if (v10 != 1)
    {
      *v8 = *v9;
      v8[1] = v10;
      swift_bridgeObjectRelease();
      v17 = v9[3];
      v8[2] = v9[2];
      v8[3] = v17;
      swift_bridgeObjectRelease();
      v18 = v9[5];
      v8[4] = v9[4];
      v8[5] = v18;
      swift_bridgeObjectRelease();
      v19 = v9[7];
      v8[6] = v9[6];
      v8[7] = v19;
      swift_bridgeObjectRelease();
      v20 = v9[9];
      v8[8] = v9[8];
      v8[9] = v20;
      swift_bridgeObjectRelease();
      v21 = v9[11];
      v8[10] = v9[10];
      v8[11] = v21;
      swift_bridgeObjectRelease();
      v8[12] = v9[12];
      swift_bridgeObjectRelease();
      v8[13] = v9[13];
      swift_bridgeObjectRelease();
      v22 = v9[15];
      v8[14] = v9[14];
      v8[15] = v22;
      swift_bridgeObjectRelease();
      v23 = v9[17];
      v8[16] = v9[16];
      v8[17] = v23;
      swift_bridgeObjectRelease();
      v24 = v9[19];
      v8[18] = v9[18];
      v8[19] = v24;
      swift_bridgeObjectRelease();
      v25 = v9[21];
      v8[20] = v9[20];
      v8[21] = v25;
      swift_bridgeObjectRelease();
      v26 = v9[23];
      v8[22] = v9[22];
      v8[23] = v26;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23B72F474((uint64_t)v8);
  }
  v11 = *((_OWORD *)v9 + 9);
  *((_OWORD *)v8 + 8) = *((_OWORD *)v9 + 8);
  *((_OWORD *)v8 + 9) = v11;
  v12 = *((_OWORD *)v9 + 11);
  *((_OWORD *)v8 + 10) = *((_OWORD *)v9 + 10);
  *((_OWORD *)v8 + 11) = v12;
  v13 = *((_OWORD *)v9 + 5);
  *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
  *((_OWORD *)v8 + 5) = v13;
  v14 = *((_OWORD *)v9 + 7);
  *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
  *((_OWORD *)v8 + 7) = v14;
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  v16 = *((_OWORD *)v9 + 3);
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  *((_OWORD *)v8 + 3) = v16;
LABEL_6:
  v27 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  v28 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_bridgeObjectRelease();
  v29 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  v31 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Location()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B732A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Location()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B732B00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

void sub_23B732B7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254303FF0)
  {
    type metadata accessor for Location();
    v0 = sub_23B7965FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254303FF0);
  }
}

uint64_t storeEnumTagSinglePayload for Location.LabelLength(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B732C1C + 4 * byte_23B799144[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B732C50 + 4 * byte_23B79913F[v4]))();
}

uint64_t sub_23B732C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B732C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B732C60);
  return result;
}

uint64_t sub_23B732C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B732C74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B732C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B732C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Location.LabelLength()
{
  return &type metadata for Location.LabelLength;
}

uint64_t getEnumTagSinglePayload for Location.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_23B732D78 + 4 * byte_23B79914E[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_23B732DAC + 4 * byte_23B799149[v4]))();
}

uint64_t sub_23B732DAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B732DB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B732DBCLL);
  return result;
}

uint64_t sub_23B732DC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B732DD0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_23B732DD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B732DDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Location.CodingKeys()
{
  return &type metadata for Location.CodingKeys;
}

unint64_t sub_23B732DFC()
{
  unint64_t result;

  result = qword_256A488C8;
  if (!qword_256A488C8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79945C, &type metadata for Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A488C8);
  }
  return result;
}

unint64_t sub_23B732E44()
{
  unint64_t result;

  result = qword_256A488D0;
  if (!qword_256A488D0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7993CC, &type metadata for Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A488D0);
  }
  return result;
}

unint64_t sub_23B732E8C()
{
  unint64_t result;

  result = qword_256A488D8;
  if (!qword_256A488D8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B7993F4, &type metadata for Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A488D8);
  }
  return result;
}

uint64_t sub_23B732ED0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x76654C726F6F6C66 && a2 == 0xEA00000000006C65 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023B7A0960 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023B7A0980 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023B7A09A0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v5 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t *sub_23B7333F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = a1[25];
  v4 = a1[24];
  sub_23B725538(*a1, a1[1]);
  sub_23B725538(v4, v2);
  return a1;
}

void __swiftcall Device.init()(FindMyLocate::Device *__return_ptr retstr)
{
  retstr->identifier._countAndFlagsBits = 0;
  retstr->identifier._object = (void *)0xE000000000000000;
  retstr->deviceName._countAndFlagsBits = 0;
  retstr->deviceName._object = (void *)0xE000000000000000;
  retstr->idsDeviceId._countAndFlagsBits = 0;
  retstr->idsDeviceId._object = (void *)0xE000000000000000;
  *(_DWORD *)&retstr->isActive = 0;
}

uint64_t Fence.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B725660(v1, a1, type metadata accessor for Fence.ID);
}

uint64_t type metadata accessor for Fence.ID(uint64_t a1)
{
  return sub_23B6FD318(a1, (uint64_t *)&unk_256A489D0);
}

uint64_t Fence.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Fence(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for Fence(uint64_t a1)
{
  return sub_23B6FD318(a1, (uint64_t *)&unk_256A489C0);
}

uint64_t Fence.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Fence(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Fence.label.modify())(_QWORD)
{
  type metadata accessor for Fence(0);
  return nullsub_1;
}

uint64_t Fence.createdBy.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Fence(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t Fence.finder.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Fence(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t Fence.variant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Fence(0);
  return sub_23B725660(v1 + *(int *)(v3 + 32), a1, type metadata accessor for Fence.Variant);
}

uint64_t type metadata accessor for Fence.Variant(uint64_t a1)
{
  return sub_23B6FD318(a1, (uint64_t *)&unk_256A489F0);
}

uint64_t Fence.variant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Fence(0) + 32);
  return sub_23B733710(a1, v3);
}

uint64_t sub_23B733710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Fence.Variant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Fence.variant.modify())(_QWORD)
{
  type metadata accessor for Fence(0);
  return nullsub_1;
}

uint64_t Fence.acceptanceStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Fence(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

double Fence.region.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  char v5;

  v3 = v1 + *(int *)(type metadata accessor for Fence(0) + 40);
  result = *(double *)(v3 + 16);
  v5 = *(_BYTE *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(double *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = v5;
  return result;
}

__n128 Fence.region.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for Fence(0) + 40));
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*Fence.region.modify())(_QWORD)
{
  type metadata accessor for Fence(0);
  return nullsub_1;
}

uint64_t Fence.placemark.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for Fence(0) + 44));
  v4 = v3[9];
  v5 = v3[7];
  v29 = v3[8];
  v30 = v4;
  v6 = v3[9];
  v7 = v3[11];
  v31 = v3[10];
  v8 = v31;
  v32 = v7;
  v9 = v3[5];
  v11 = v3[3];
  v25 = v3[4];
  v10 = v25;
  v26 = v9;
  v12 = v3[5];
  v13 = v3[7];
  v27 = v3[6];
  v14 = v27;
  v28 = v13;
  v15 = v3[1];
  v16 = v3[3];
  v23 = v3[2];
  v17 = v23;
  v24 = v16;
  v18 = v3[1];
  v22[0] = *v3;
  v19 = v22[0];
  v22[1] = v18;
  a1[8] = v29;
  a1[9] = v6;
  v20 = v3[11];
  a1[10] = v8;
  a1[11] = v20;
  a1[4] = v10;
  a1[5] = v12;
  a1[6] = v14;
  a1[7] = v5;
  *a1 = v19;
  a1[1] = v15;
  a1[2] = v17;
  a1[3] = v11;
  return sub_23B703D94((uint64_t)v22);
}

__n128 Fence.placemark.setter(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __n128 result;
  __int128 v16;
  _OWORD v17[12];

  v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for Fence(0) + 44));
  v4 = v3[9];
  v17[8] = v3[8];
  v17[9] = v4;
  v5 = v3[11];
  v17[10] = v3[10];
  v17[11] = v5;
  v6 = v3[5];
  v17[4] = v3[4];
  v17[5] = v6;
  v7 = v3[7];
  v17[6] = v3[6];
  v17[7] = v7;
  v8 = v3[3];
  v17[2] = v3[2];
  v17[3] = v8;
  v9 = v3[1];
  v17[0] = *v3;
  v17[1] = v9;
  sub_23B703CB0((uint64_t)v17);
  v10 = *(_OWORD *)(a1 + 144);
  v3[8] = *(_OWORD *)(a1 + 128);
  v3[9] = v10;
  v11 = *(_OWORD *)(a1 + 176);
  v3[10] = *(_OWORD *)(a1 + 160);
  v3[11] = v11;
  v12 = *(_OWORD *)(a1 + 80);
  v3[4] = *(_OWORD *)(a1 + 64);
  v3[5] = v12;
  v13 = *(_OWORD *)(a1 + 112);
  v3[6] = *(_OWORD *)(a1 + 96);
  v3[7] = v13;
  v14 = *(_OWORD *)(a1 + 16);
  *v3 = *(_OWORD *)a1;
  v3[1] = v14;
  result = *(__n128 *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  v3[2] = result;
  v3[3] = v16;
  return result;
}

uint64_t (*Fence.placemark.modify())(_QWORD)
{
  type metadata accessor for Fence(0);
  return nullsub_1;
}

uint64_t Fence.others.getter()
{
  type metadata accessor for Fence(0);
  return swift_bridgeObjectRetain();
}

uint64_t Fence.muteEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Fence(0) + 52);
  return sub_23B6F7090(v3, a1);
}

uint64_t Fence.init(label:createdBy:finder:variant:acceptanceStatus:region:placemark:others:muteEndDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v15 = *a3;
  v16 = *a4;
  v17 = *a6;
  v27 = *a7;
  v18 = *((_QWORD *)a7 + 2);
  v19 = *((_BYTE *)a7 + 24);
  v36 = a8[8];
  v37 = a8[9];
  v38 = a8[10];
  v39 = a8[11];
  v32 = a8[4];
  v33 = a8[5];
  v34 = a8[6];
  v35 = a8[7];
  v28 = *a8;
  v29 = a8[1];
  v30 = a8[2];
  v31 = a8[3];
  v20 = (int *)type metadata accessor for Fence(0);
  v21 = a9 + v20[13];
  v22 = sub_23B7968A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  v23 = (_QWORD *)(a9 + v20[5]);
  *v23 = a1;
  v23[1] = a2;
  *(_BYTE *)(a9 + v20[6]) = v15;
  *(_BYTE *)(a9 + v20[7]) = v16;
  sub_23B6FF360(a5, a9 + v20[8], type metadata accessor for Fence.Variant);
  *(_BYTE *)(a9 + v20[9]) = v17;
  v24 = a9 + v20[10];
  *(_OWORD *)v24 = v27;
  *(_QWORD *)(v24 + 16) = v18;
  *(_BYTE *)(v24 + 24) = v19;
  v25 = (_OWORD *)(a9 + v20[11]);
  v25[8] = v36;
  v25[9] = v37;
  v25[10] = v38;
  v25[11] = v39;
  v25[4] = v32;
  v25[5] = v33;
  v25[6] = v34;
  v25[7] = v35;
  *v25 = v28;
  v25[1] = v29;
  v25[2] = v30;
  v25[3] = v31;
  *(_QWORD *)(a9 + v20[12]) = a10;
  return sub_23B733D9C(a11, v21);
}

uint64_t Fence.init(id:label:createdBy:finder:variant:acceptanceStatus:region:placemark:others:muteEndDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, uint64_t a11, uint64_t a12)
{
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v16 = *a4;
  v17 = *a5;
  v18 = *a7;
  v28 = *a8;
  v19 = *((_QWORD *)a8 + 2);
  v20 = *((_BYTE *)a8 + 24);
  v38 = a10[8];
  v39 = a10[9];
  v40 = a10[10];
  v41 = a10[11];
  v34 = a10[4];
  v35 = a10[5];
  v36 = a10[6];
  v37 = a10[7];
  v30 = *a10;
  v31 = a10[1];
  v32 = a10[2];
  v33 = a10[3];
  v21 = (int *)type metadata accessor for Fence(0);
  v22 = a9 + v21[13];
  v23 = sub_23B7968A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  sub_23B6FF360(a1, a9, type metadata accessor for Fence.ID);
  v24 = (_QWORD *)(a9 + v21[5]);
  *v24 = a2;
  v24[1] = a3;
  *(_BYTE *)(a9 + v21[6]) = v16;
  *(_BYTE *)(a9 + v21[7]) = v17;
  sub_23B6FF360(a6, a9 + v21[8], type metadata accessor for Fence.Variant);
  *(_BYTE *)(a9 + v21[9]) = v18;
  v25 = a9 + v21[10];
  *(_OWORD *)v25 = v28;
  *(_QWORD *)(v25 + 16) = v19;
  *(_BYTE *)(v25 + 24) = v20;
  v26 = (_OWORD *)(a9 + v21[11]);
  v26[8] = v38;
  v26[9] = v39;
  v26[10] = v40;
  v26[11] = v41;
  v26[4] = v34;
  v26[5] = v35;
  v26[6] = v36;
  v26[7] = v37;
  *v26 = v30;
  v26[1] = v31;
  v26[2] = v32;
  v26[3] = v33;
  *(_QWORD *)(a9 + v21[12]) = a11;
  return sub_23B733D9C(a12, v22);
}

uint64_t Fence.ID.init(id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_23B733D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s12FindMyLocate5FenceV2IDV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23B7968D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s12FindMyLocate5FenceV2IDV4hash4intoys6HasherVz_tF_0()
{
  sub_23B7968D8();
  sub_23B6EE138(&qword_256A488E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23B7969E0();
}

uint64_t _s12FindMyLocate5FenceV2IDV9hashValueSivg_0()
{
  sub_23B796F44();
  sub_23B7968D8();
  sub_23B6EE138(&qword_256A488E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23B7969E0();
  return sub_23B796F74();
}

uint64_t sub_23B733F08()
{
  sub_23B796F44();
  sub_23B7968D8();
  sub_23B6EE138(&qword_256A488E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23B7969E0();
  return sub_23B796F74();
}

uint64_t sub_23B733F70()
{
  sub_23B7343E4();
  return sub_23B796FA4();
}

uint64_t sub_23B733F98()
{
  sub_23B7343E4();
  return sub_23B796FB0();
}

uint64_t sub_23B733FC0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E69646E6570;
  if (*v0 != 1)
    v1 = 0x6465747065636361;
  if (*v0)
    return v1;
  else
    return 0x48676E69646E6570;
}

uint64_t sub_23B734028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B7384B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B73404C()
{
  sub_23B7343A0();
  return sub_23B796FA4();
}

uint64_t sub_23B734074()
{
  sub_23B7343A0();
  return sub_23B796FB0();
}

uint64_t sub_23B73409C()
{
  sub_23B734428();
  return sub_23B796FA4();
}

uint64_t sub_23B7340C4()
{
  sub_23B734428();
  return sub_23B796FB0();
}

uint64_t sub_23B7340EC()
{
  sub_23B73446C();
  return sub_23B796FA4();
}

uint64_t sub_23B734114()
{
  sub_23B73446C();
  return sub_23B796FB0();
}

uint64_t Fence.AcceptanceStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A488F0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A488F8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48900);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48908);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7343A0();
  sub_23B796F8C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23B734428();
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23B7343E4();
      v16 = v21;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23B73446C();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23B7343A0()
{
  unint64_t result;

  result = qword_256A48910;
  if (!qword_256A48910)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799FDC, &type metadata for Fence.AcceptanceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48910);
  }
  return result;
}

unint64_t sub_23B7343E4()
{
  unint64_t result;

  result = qword_256A48918;
  if (!qword_256A48918)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799F8C, &type metadata for Fence.AcceptanceStatus.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48918);
  }
  return result;
}

unint64_t sub_23B734428()
{
  unint64_t result;

  result = qword_256A48920;
  if (!qword_256A48920)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799F3C, &type metadata for Fence.AcceptanceStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48920);
  }
  return result;
}

unint64_t sub_23B73446C()
{
  unint64_t result;

  result = qword_256A48928;
  if (!qword_256A48928)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799EEC, &type metadata for Fence.AcceptanceStatus.PendingHiddenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48928);
  }
  return result;
}

uint64_t Fence.AcceptanceStatus.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48930);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48938);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48940);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48948);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7343A0();
  v13 = v41;
  sub_23B796F80();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23B796E3C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23B796D04();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v25 = &type metadata for Fence.AcceptanceStatus;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23B734428();
      v20 = v9;
      sub_23B796DC4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23B7343E4();
      v28 = v15;
      sub_23B796DC4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23B73446C();
    sub_23B796DC4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_23B7348F8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return Fence.AcceptanceStatus.init(from:)(a1, a2);
}

uint64_t sub_23B73490C(_QWORD *a1)
{
  return Fence.AcceptanceStatus.encode(to:)(a1);
}

uint64_t Fence.Variant.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v1 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Fence.Variant(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B725660(v0, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23B6FF360((uint64_t)v6, (uint64_t)v3, type metadata accessor for Fence.Schedule);
    sub_23B796F50();
    sub_23B796F50();
    sub_23B796F50();
    sub_23B796F50();
    sub_23B796F50();
    sub_23B796F5C();
    sub_23B79698C();
    sub_23B6EE138(&qword_256A48950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
    sub_23B7969E0();
    return sub_23B700B04((uint64_t)v3, type metadata accessor for Fence.Schedule);
  }
  else
  {
    sub_23B796F50();
    return sub_23B796F50();
  }
}

uint64_t type metadata accessor for Fence.Schedule(uint64_t a1)
{
  return sub_23B6FD318(a1, (uint64_t *)&unk_256A48A00);
}

uint64_t Fence.Variant.hashValue.getter()
{
  sub_23B796F44();
  Fence.Variant.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B734B08()
{
  sub_23B796F44();
  Fence.Variant.hash(into:)();
  return sub_23B796F74();
}

uint64_t sub_23B734B48()
{
  sub_23B796F44();
  Fence.Variant.hash(into:)();
  return sub_23B796F74();
}

double Fence.MonitorRegion.center.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double Fence.MonitorRegion.radius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void Fence.MonitorRegion.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

FindMyLocate::Fence::MonitorRegion __swiftcall Fence.MonitorRegion.init(center:radius:source:)(__C::CLLocationCoordinate2D center, Swift::Double radius, FindMyLocate::Fence::MonitorRegion::Source source)
{
  uint64_t v3;
  char v4;
  FindMyLocate::Fence::MonitorRegion result;

  v4 = *(_BYTE *)source;
  *(Swift::Double *)v3 = center.latitude;
  *(Swift::Double *)(v3 + 8) = center.longitude;
  *(Swift::Double *)(v3 + 16) = radius;
  *(_BYTE *)(v3 + 24) = v4;
  result.center.longitude = center.longitude;
  result.center.latitude = center.latitude;
  result.radius = radius;
  result.source = source;
  return result;
}

BOOL static Fence.MonitorRegion.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Fence.MonitorRegion.Source.hash(into:)()
{
  return sub_23B796F50();
}

BOOL static Fence.Participant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Fence.Participant.hash(into:)()
{
  return sub_23B796F50();
}

BOOL sub_23B734C38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_23B734C50()
{
  byte_256A488E0 = 127;
}

uint64_t sub_23B734CC8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t static Fence.DaysOfWeek.all.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  if (qword_256A47EF8 != -1)
    result = swift_once();
  *a1 = byte_256A488E0;
  return result;
}

uint64_t Fence.DaysOfWeek.init(rawValue:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static Fence.DaysOfWeek.sunday.getter(_BYTE *a1@<X8>)
{
  *a1 = 64;
}

void static Fence.DaysOfWeek.monday.getter(_BYTE *a1@<X8>)
{
  *a1 = 32;
}

void static Fence.DaysOfWeek.tuesday.getter(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

void static Fence.DaysOfWeek.wednesday.getter(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

void static Fence.DaysOfWeek.thursday.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void static Fence.DaysOfWeek.friday.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static Fence.DaysOfWeek.saturday.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Fence.DaysOfWeek.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_BYTE *sub_23B734DD0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23B734DDC()
{
  sub_23B796F44();
  sub_23B796F5C();
  return sub_23B796F74();
}

uint64_t sub_23B734E20()
{
  return sub_23B796F5C();
}

uint64_t sub_23B734E48()
{
  sub_23B796F44();
  sub_23B796F5C();
  return sub_23B796F74();
}

void sub_23B734E88(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

_BYTE *sub_23B734E90@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 | *result;
  return result;
}

_BYTE *sub_23B734EA4@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & *result;
  return result;
}

_BYTE *sub_23B734EB8@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23B734ECC(_BYTE *a1, unsigned __int8 *a2)
{
  _BYTE *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_23B734EFC@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_BYTE)v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_23B734F28@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

_BYTE *sub_23B734F4C(_BYTE *result)
{
  _BYTE *v1;

  *v1 |= *result;
  return result;
}

_BYTE *sub_23B734F60(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= *result;
  return result;
}

_BYTE *sub_23B734F74(_BYTE *result)
{
  _BYTE *v1;

  *v1 ^= *result;
  return result;
}

_BYTE *sub_23B734F88@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23B734F9C(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23B734FB0(_BYTE *a1)
{
  _BYTE *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23B734FC4(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23B734FD8()
{
  _BYTE *v0;

  return *v0 == 0;
}

uint64_t sub_23B734FE8()
{
  return sub_23B796CA4();
}

_BYTE *sub_23B735000(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_23B735014@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23B735024(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t Fence.TimeOfDay.hour.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Fence.TimeOfDay.minute.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

FindMyLocate::Fence::TimeOfDay __swiftcall Fence.TimeOfDay.init(hour:minute:)(Swift::UInt hour, Swift::UInt minute)
{
  Swift::UInt *v2;
  FindMyLocate::Fence::TimeOfDay result;

  *v2 = hour;
  v2[1] = minute;
  result.minute = minute;
  result.hour = hour;
  return result;
}

uint64_t Fence.TimeOfDay.hash(into:)()
{
  sub_23B796F50();
  return sub_23B796F50();
}

BOOL static Fence.TimeOfDay.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t Fence.TimeOfDay.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t sub_23B7350F4()
{
  sub_23B796F44();
  sub_23B796F50();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t sub_23B73514C()
{
  sub_23B796F50();
  return sub_23B796F50();
}

uint64_t sub_23B735184()
{
  sub_23B796F44();
  sub_23B796F50();
  sub_23B796F50();
  return sub_23B796F74();
}

BOOL sub_23B7351D8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

__n128 Fence.Schedule.start.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

__n128 Fence.Schedule.end.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[1];
  *a1 = result;
  return result;
}

void Fence.Schedule.daysOfWeek.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t Fence.Schedule.timeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  v4 = sub_23B79698C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Fence.Schedule.init(start:end:daysOfWeek:timeZone:)@<X0>(_OWORD *a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a3;
  v8 = *a2;
  *(_OWORD *)a5 = *a1;
  *(_OWORD *)(a5 + 16) = v8;
  *(_BYTE *)(a5 + 32) = v7;
  v9 = a5 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  v10 = sub_23B79698C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a4, v10);
}

uint64_t Fence.Schedule.hash(into:)()
{
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F5C();
  type metadata accessor for Fence.Schedule(0);
  sub_23B79698C();
  sub_23B6EE138(&qword_256A48950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23B7969E0();
}

uint64_t Fence.Schedule.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F5C();
  type metadata accessor for Fence.Schedule(0);
  sub_23B79698C();
  sub_23B6EE138(&qword_256A48950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23B7969E0();
  return sub_23B796F74();
}

uint64_t sub_23B73541C()
{
  sub_23B796F44();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F5C();
  sub_23B79698C();
  sub_23B6EE138(&qword_256A48950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23B7969E0();
  return sub_23B796F74();
}

uint64_t sub_23B7354DC()
{
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F5C();
  sub_23B79698C();
  sub_23B6EE138(&qword_256A48950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23B7969E0();
}

uint64_t sub_23B735574()
{
  sub_23B796F44();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F50();
  sub_23B796F5C();
  sub_23B79698C();
  sub_23B6EE138(&qword_256A48950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23B7969E0();
  return sub_23B796F74();
}

uint64_t Fence.findee.getter@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Fence(0);
  *a1 = (*(_BYTE *)(v1 + *(int *)(result + 28)) & 1) == 0;
  return result;
}

Swift::Void __swiftcall Fence.update(acceptanceStatus:)(FindMyLocate::Fence::AcceptanceStatus acceptanceStatus)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)acceptanceStatus;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Fence(0) + 36)) = v2;
}

uint64_t Fence.update(muteEndDate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Fence(0) + 52);
  return sub_23B735A1C(a1, v3);
}

uint64_t static Fence.isAllowed(at:)(double a1, double a2)
{
  if (qword_256A47F00 != -1)
    swift_once();
  return objc_msgSend((id)qword_256A48B50, sel_containsCoordinate_, a1, a2) ^ 1;
}

uint64_t _s12FindMyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v3;

  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    v3 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v3 && *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
    {
      type metadata accessor for Fence.Schedule(0);
      JUMPOUT(0x23B86BCE0);
    }
  }
  return 0;
}

uint64_t _s12FindMyLocate5FenceV7VariantO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int EnumCaseMultiPayload;
  char v22;
  char v23;
  char MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0;
  uint64_t v26;

  v4 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Fence.Variant(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v26 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48A58);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_23B725660(a1, (uint64_t)v19, type metadata accessor for Fence.Variant);
  sub_23B725660(a2, (uint64_t)v20, type metadata accessor for Fence.Variant);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23B725660((uint64_t)v19, (uint64_t)v15, type metadata accessor for Fence.Variant);
    if (!swift_getEnumCaseMultiPayload())
    {
      v22 = *v15;
      goto LABEL_7;
    }
LABEL_11:
    sub_23B738628((uint64_t)v19);
    MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 = 0;
    return MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_23B725660((uint64_t)v19, (uint64_t)v10, type metadata accessor for Fence.Variant);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23B6FF360((uint64_t)v20, (uint64_t)v6, type metadata accessor for Fence.Schedule);
      MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 = _s12FindMyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0((uint64_t)v10, (uint64_t)v6);
      sub_23B700B04((uint64_t)v6, type metadata accessor for Fence.Schedule);
      sub_23B700B04((uint64_t)v10, type metadata accessor for Fence.Schedule);
      sub_23B700B04((uint64_t)v19, type metadata accessor for Fence.Variant);
      return MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 & 1;
    }
    sub_23B700B04((uint64_t)v10, type metadata accessor for Fence.Schedule);
    goto LABEL_11;
  }
  sub_23B725660((uint64_t)v19, (uint64_t)v13, type metadata accessor for Fence.Variant);
  if (swift_getEnumCaseMultiPayload() != 1)
    goto LABEL_11;
  v22 = *v13;
LABEL_7:
  v23 = v22 ^ *v20;
  sub_23B700B04((uint64_t)v19, type metadata accessor for Fence.Variant);
  MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 = v23 ^ 1;
  return MyLocate5FenceV8ScheduleV2eeoiySbAE_AEtFZ_0 & 1;
}

uint64_t sub_23B735A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B735A64()
{
  return sub_23B6EE138(&qword_256A48958, type metadata accessor for Fence.ID, (uint64_t)&protocol conformance descriptor for Fence.ID);
}

uint64_t sub_23B735A90()
{
  return sub_23B6EE138(&qword_256A48960, type metadata accessor for Fence.TriggerID, (uint64_t)&protocol conformance descriptor for Fence.TriggerID);
}

uint64_t type metadata accessor for Fence.TriggerID(uint64_t a1)
{
  return sub_23B6FD318(a1, (uint64_t *)&unk_256A489E0);
}

unint64_t sub_23B735AD4()
{
  unint64_t result;

  result = qword_256A48968;
  if (!qword_256A48968)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.AcceptanceStatus, &type metadata for Fence.AcceptanceStatus);
    atomic_store(result, (unint64_t *)&qword_256A48968);
  }
  return result;
}

unint64_t sub_23B735B1C()
{
  unint64_t result;

  result = qword_256A48970;
  if (!qword_256A48970)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.Trigger, &type metadata for Fence.Trigger);
    atomic_store(result, (unint64_t *)&qword_256A48970);
  }
  return result;
}

uint64_t sub_23B735B60()
{
  return sub_23B6EE138(&qword_256A48978, type metadata accessor for Fence.Variant, (uint64_t)&protocol conformance descriptor for Fence.Variant);
}

unint64_t sub_23B735B90()
{
  unint64_t result;

  result = qword_256A48980;
  if (!qword_256A48980)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.MonitorRegion.Source, &type metadata for Fence.MonitorRegion.Source);
    atomic_store(result, (unint64_t *)&qword_256A48980);
  }
  return result;
}

unint64_t sub_23B735BD8()
{
  unint64_t result;

  result = qword_256A48988;
  if (!qword_256A48988)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.Participant, &type metadata for Fence.Participant);
    atomic_store(result, (unint64_t *)&qword_256A48988);
  }
  return result;
}

unint64_t sub_23B735C20()
{
  unint64_t result;

  result = qword_256A48990;
  if (!qword_256A48990)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.DaysOfWeek, &type metadata for Fence.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_256A48990);
  }
  return result;
}

unint64_t sub_23B735C68()
{
  unint64_t result;

  result = qword_256A48998;
  if (!qword_256A48998)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.DaysOfWeek, &type metadata for Fence.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_256A48998);
  }
  return result;
}

unint64_t sub_23B735CB0()
{
  unint64_t result;

  result = qword_256A489A0;
  if (!qword_256A489A0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.DaysOfWeek, &type metadata for Fence.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_256A489A0);
  }
  return result;
}

unint64_t sub_23B735CF8()
{
  unint64_t result;

  result = qword_256A489A8;
  if (!qword_256A489A8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.DaysOfWeek, &type metadata for Fence.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_256A489A8);
  }
  return result;
}

unint64_t sub_23B735D40()
{
  unint64_t result;

  result = qword_256A489B0;
  if (!qword_256A489B0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.TimeOfDay, &type metadata for Fence.TimeOfDay);
    atomic_store(result, (unint64_t *)&qword_256A489B0);
  }
  return result;
}

uint64_t sub_23B735D84()
{
  return sub_23B6EE138(&qword_256A489B8, type metadata accessor for Fence.Schedule, (uint64_t)&protocol conformance descriptor for Fence.Schedule);
}

_QWORD *initializeBufferWithCopyOfBuffer for Fence(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  char *__dst;
  _QWORD *v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = sub_23B7968D8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Fence.Variant(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v17 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v17;
      v14[32] = v15[32];
      v18 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      v19 = &v14[v18];
      v20 = &v15[v18];
      v21 = sub_23B79698C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v24 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v25 = (_OWORD *)((char *)a1 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    *v25 = *v26;
    *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
    v27 = a3[11];
    v28 = a3[12];
    v29 = (_QWORD *)((char *)a1 + v27);
    v30 = (_QWORD *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v30[3];
    v29[2] = v30[2];
    v29[3] = v32;
    v33 = v30[5];
    v29[4] = v30[4];
    v29[5] = v33;
    v34 = v30[7];
    v29[6] = v30[6];
    v29[7] = v34;
    v35 = v30[9];
    v29[8] = v30[8];
    v29[9] = v35;
    v36 = v30[11];
    v29[10] = v30[10];
    v29[11] = v36;
    v37 = a1;
    v38 = v30[13];
    v29[12] = v30[12];
    v29[13] = v38;
    v39 = v30[15];
    v29[14] = v30[14];
    v29[15] = v39;
    v40 = v30[17];
    v29[16] = v30[16];
    v29[17] = v40;
    v41 = v30[19];
    v29[18] = v30[18];
    v29[19] = v41;
    v42 = v30[21];
    v29[20] = v30[20];
    v29[21] = v42;
    v48 = v30[23];
    v29[22] = v30[22];
    v29[23] = v48;
    v43 = a3[13];
    __dst = (char *)v37 + v43;
    v52 = v37;
    v49 = (char *)a2 + v43;
    *(_QWORD *)((char *)v37 + v28) = *(_QWORD *)((char *)a2 + v28);
    v44 = sub_23B7968A8();
    v47 = *(_QWORD *)(v44 - 8);
    v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50(v49, 1, v44))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v49, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v44);
    }
    return v52;
  }
  return (_QWORD *)v23;
}

uint64_t destroy for Fence(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  type metadata accessor for Fence.Variant(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = v5 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v7 = sub_23B79698C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 52);
  v9 = sub_23B7968A8();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  return result;
}

uint64_t initializeWithCopy for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  const void *v45;
  unsigned int (*v46)(const void *, uint64_t, uint64_t);
  void *__dst;
  uint64_t v48;

  v6 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v48 = a1;
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for Fence.Variant(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v16 = v14[1];
    *v13 = *v14;
    v13[1] = v16;
    *((_BYTE *)v13 + 32) = *((_BYTE *)v14 + 32);
    v17 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    v20 = sub_23B79698C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v21 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  *v22 = *v23;
  *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v23 + 9);
  v24 = a3[11];
  v25 = a3[12];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = v27[3];
  v26[2] = v27[2];
  v26[3] = v29;
  v30 = v27[5];
  v26[4] = v27[4];
  v26[5] = v30;
  v31 = v27[7];
  v26[6] = v27[6];
  v26[7] = v31;
  v32 = v27[9];
  v26[8] = v27[8];
  v26[9] = v32;
  v33 = v27[11];
  v26[10] = v27[10];
  v26[11] = v33;
  v34 = v27[13];
  v26[12] = v27[12];
  v26[13] = v34;
  v35 = v27[15];
  v26[14] = v27[14];
  v26[15] = v35;
  v36 = v27[17];
  v26[16] = v27[16];
  v26[17] = v36;
  v37 = v27[19];
  v26[18] = v27[18];
  v26[19] = v37;
  v38 = v27[21];
  v26[20] = v27[20];
  v26[21] = v38;
  v44 = v27[23];
  v26[22] = v27[22];
  v26[23] = v44;
  v39 = a3[13];
  __dst = (void *)(v48 + v39);
  v45 = (const void *)(a2 + v39);
  *(_QWORD *)(v48 + v25) = *(_QWORD *)(a2 + v25);
  v40 = sub_23B7968A8();
  v43 = *(_QWORD *)(v40 - 8);
  v46 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46(v45, 1, v40))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(__dst, v45, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(__dst, v45, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v40);
  }
  return v48;
}

uint64_t assignWithCopy for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;

  v6 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  if (a1 != a2)
  {
    v10 = a3[8];
    v11 = (_OWORD *)(a1 + v10);
    v12 = (_OWORD *)(a2 + v10);
    sub_23B700B04(a1 + v10, type metadata accessor for Fence.Variant);
    v13 = type metadata accessor for Fence.Variant(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *v11 = *v12;
      v11[1] = v12[1];
      *((_BYTE *)v11 + 32) = *((_BYTE *)v12 + 32);
      v14 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      v15 = (char *)v11 + v14;
      v16 = (char *)v12 + v14;
      v17 = sub_23B79698C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v18 = a3[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_BYTE *)(v19 + 24) = *(_BYTE *)(v20 + 24);
  v21 = a3[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *(_QWORD *)(a2 + v21);
  v22[1] = *(_QWORD *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[2] = v23[2];
  v22[3] = v23[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[4] = v23[4];
  v22[5] = v23[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[6] = v23[6];
  v22[7] = v23[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[8] = v23[8];
  v22[9] = v23[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[10] = v23[10];
  v22[11] = v23[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[12] = v23[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[13] = v23[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[14] = v23[14];
  v22[15] = v23[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[16] = v23[16];
  v22[17] = v23[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[18] = v23[18];
  v22[19] = v23[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[20] = v23[20];
  v22[21] = v23[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[22] = v23[22];
  v22[23] = v23[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[13];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = sub_23B7968A8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v22) = v29(v25, 1, v27);
  v30 = v29(v26, 1, v27);
  if (!(_DWORD)v22)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_10;
  }
  if (v30)
  {
LABEL_10:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

uint64_t initializeWithTake for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = type metadata accessor for Fence.Variant(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v12 = v10[1];
    *v9 = *v10;
    v9[1] = v12;
    *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    v13 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = sub_23B79698C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v18 = (_OWORD *)(a1 + v17);
  v19 = (_OWORD *)(a2 + v17);
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v19 + 9);
  *v18 = *v19;
  v20 = a3[11];
  v21 = a3[12];
  v22 = (_OWORD *)(a1 + v20);
  v23 = (_OWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v23[3];
  v22[2] = v23[2];
  v22[3] = v25;
  v26 = v23[7];
  v22[6] = v23[6];
  v22[7] = v26;
  v27 = v23[5];
  v22[4] = v23[4];
  v22[5] = v27;
  v28 = v23[11];
  v22[10] = v23[10];
  v22[11] = v28;
  v29 = v23[9];
  v22[8] = v23[8];
  v22[9] = v29;
  v30 = a3[13];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v33 = sub_23B7968A8();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  return a1;
}

uint64_t assignWithTake for Fence(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  uint64_t v46;

  v6 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  if (a1 != a2)
  {
    v13 = a3[8];
    v14 = (_OWORD *)(a1 + v13);
    v15 = (_OWORD *)(a2 + v13);
    sub_23B700B04(a1 + v13, type metadata accessor for Fence.Variant);
    v16 = type metadata accessor for Fence.Variant(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v17 = v15[1];
      *v14 = *v15;
      v14[1] = v17;
      *((_BYTE *)v14 + 32) = *((_BYTE *)v15 + 32);
      v18 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      v19 = (char *)v14 + v18;
      v20 = (char *)v15 + v18;
      v21 = sub_23B79698C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v22 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  v25 = a3[11];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *v26 = *(_QWORD *)(a2 + v25);
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v29 = v27[3];
  v26[2] = v27[2];
  v26[3] = v29;
  swift_bridgeObjectRelease();
  v30 = v27[5];
  v26[4] = v27[4];
  v26[5] = v30;
  swift_bridgeObjectRelease();
  v31 = v27[7];
  v26[6] = v27[6];
  v26[7] = v31;
  swift_bridgeObjectRelease();
  v32 = v27[9];
  v26[8] = v27[8];
  v26[9] = v32;
  swift_bridgeObjectRelease();
  v33 = v27[11];
  v26[10] = v27[10];
  v26[11] = v33;
  swift_bridgeObjectRelease();
  v26[12] = v27[12];
  swift_bridgeObjectRelease();
  v26[13] = v27[13];
  swift_bridgeObjectRelease();
  v34 = v27[15];
  v26[14] = v27[14];
  v26[15] = v34;
  swift_bridgeObjectRelease();
  v35 = v27[17];
  v26[16] = v27[16];
  v26[17] = v35;
  swift_bridgeObjectRelease();
  v36 = v27[19];
  v26[18] = v27[18];
  v26[19] = v36;
  swift_bridgeObjectRelease();
  v37 = v27[21];
  v26[20] = v27[20];
  v26[21] = v37;
  swift_bridgeObjectRelease();
  v38 = v27[23];
  v26[22] = v27[22];
  v26[23] = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  v39 = a3[13];
  v40 = (void *)(a1 + v39);
  v41 = (void *)(a2 + v39);
  v42 = sub_23B7968A8();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
  LODWORD(v27) = v44(v40, 1, v42);
  v45 = v44(v41, 1, v42);
  if (!(_DWORD)v27)
  {
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v43 + 40))(v40, v41, v42);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
    goto LABEL_10;
  }
  if (v45)
  {
LABEL_10:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v43 + 32))(v40, v41, v42);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fence()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B736E7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Fence.ID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = type metadata accessor for Fence.Variant(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[13];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for Fence()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B736F5C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for Fence.ID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = type metadata accessor for Fence.Variant(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[13];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23B73702C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23B7968D8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Fence.Variant(319);
    if (v1 <= 0x3F)
    {
      sub_23B6EE23C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for Fence.ID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Fence.ID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s12FindMyLocate5FenceV2IDVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s12FindMyLocate5FenceV2IDVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23B7968D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s12FindMyLocate5FenceV2IDVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s12FindMyLocate5FenceV2IDVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s12FindMyLocate5FenceV2IDVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s12FindMyLocate5FenceV2IDVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fence.TriggerID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Fence.TriggerID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B7968D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23B737364()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B7968D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus()
{
  return &type metadata for Fence.AcceptanceStatus;
}

ValueMetadata *type metadata accessor for Fence.Trigger()
{
  return &type metadata for Fence.Trigger;
}

_OWORD *initializeBufferWithCopyOfBuffer for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_OWORD *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23B79698C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for Fence.Variant(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = a1 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v4 = sub_23B79698C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_OWORD *initializeWithCopy for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23B79698C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithCopy for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23B700B04((uint64_t)a1, type metadata accessor for Fence.Variant);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v6 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23B79698C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *initializeWithTake for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23B79698C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for Fence.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23B700B04((uint64_t)a1, type metadata accessor for Fence.Variant);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23B79698C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23B737824()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Fence.Schedule(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Fence.TriggerPosition(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for Fence.TriggerPosition(id *a1)
{

}

uint64_t assignWithCopy for Fence.TriggerPosition(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for Fence.TriggerPosition(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for Fence.TriggerPosition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Fence.TriggerPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23B7379E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23B7379EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Fence.TriggerPosition()
{
  return &type metadata for Fence.TriggerPosition;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Fence.MonitorRegion(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 8;
  v5 = v3 - 8;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Fence.MonitorRegion(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion()
{
  return &type metadata for Fence.MonitorRegion;
}

uint64_t getEnumTagSinglePayload for Fence.MonitorRegion.Source(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Fence.MonitorRegion.Source(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23B737B94 + 4 * byte_23B7994E5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23B737BC8 + 4 * byte_23B7994E0[v4]))();
}

uint64_t sub_23B737BC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B737BD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B737BD8);
  return result;
}

uint64_t sub_23B737BE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B737BECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23B737BF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B737BF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Fence.MonitorRegion.Source()
{
  return &type metadata for Fence.MonitorRegion.Source;
}

uint64_t getEnumTagSinglePayload for DeviceWithCompanion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12FindMyLocate5FenceV11ParticipantOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B737CF0 + 4 * byte_23B7994EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B737D24 + 4 * byte_23B7994EA[v4]))();
}

uint64_t sub_23B737D24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B737D2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B737D34);
  return result;
}

uint64_t sub_23B737D40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B737D48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B737D4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B737D54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23B737D60(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Fence.Participant()
{
  return &type metadata for Fence.Participant;
}

ValueMetadata *type metadata accessor for Fence.DaysOfWeek()
{
  return &type metadata for Fence.DaysOfWeek;
}

ValueMetadata *type metadata accessor for Fence.TimeOfDay()
{
  return &type metadata for Fence.TimeOfDay;
}

_QWORD *initializeBufferWithCopyOfBuffer for Fence.Schedule(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23B79698C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for Fence.Schedule(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_23B79698C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Fence.Schedule(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fence.Schedule()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B738018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = sub_23B79698C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for Fence.Schedule()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B738064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = sub_23B79698C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23B7380A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B79698C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s12FindMyLocate5FenceV16AcceptanceStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B738178 + 4 * byte_23B7994F9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B7381AC + 4 * byte_23B7994F4[v4]))();
}

uint64_t sub_23B7381AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7381B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B7381BCLL);
  return result;
}

uint64_t sub_23B7381C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B7381D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B7381D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7381DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.CodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.PendingHiddenCodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.PendingHiddenCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.PendingCodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.PendingCodingKeys;
}

ValueMetadata *type metadata accessor for Fence.AcceptanceStatus.AcceptedCodingKeys()
{
  return &type metadata for Fence.AcceptanceStatus.AcceptedCodingKeys;
}

unint64_t sub_23B73822C()
{
  unint64_t result;

  result = qword_256A48A10;
  if (!qword_256A48A10)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799EC4, &type metadata for Fence.AcceptanceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A10);
  }
  return result;
}

unint64_t sub_23B738274()
{
  unint64_t result;

  result = qword_256A48A18;
  if (!qword_256A48A18)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799DE4, &type metadata for Fence.AcceptanceStatus.PendingHiddenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A18);
  }
  return result;
}

unint64_t sub_23B7382BC()
{
  unint64_t result;

  result = qword_256A48A20;
  if (!qword_256A48A20)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799E0C, &type metadata for Fence.AcceptanceStatus.PendingHiddenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A20);
  }
  return result;
}

unint64_t sub_23B738304()
{
  unint64_t result;

  result = qword_256A48A28;
  if (!qword_256A48A28)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799D94, &type metadata for Fence.AcceptanceStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A28);
  }
  return result;
}

unint64_t sub_23B73834C()
{
  unint64_t result;

  result = qword_256A48A30;
  if (!qword_256A48A30)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799DBC, &type metadata for Fence.AcceptanceStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A30);
  }
  return result;
}

unint64_t sub_23B738394()
{
  unint64_t result;

  result = qword_256A48A38;
  if (!qword_256A48A38)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799D44, &type metadata for Fence.AcceptanceStatus.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A38);
  }
  return result;
}

unint64_t sub_23B7383DC()
{
  unint64_t result;

  result = qword_256A48A40;
  if (!qword_256A48A40)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799D6C, &type metadata for Fence.AcceptanceStatus.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A40);
  }
  return result;
}

unint64_t sub_23B738424()
{
  unint64_t result;

  result = qword_256A48A48;
  if (!qword_256A48A48)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799E34, &type metadata for Fence.AcceptanceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A48);
  }
  return result;
}

unint64_t sub_23B73846C()
{
  unint64_t result;

  result = qword_256A48A50;
  if (!qword_256A48A50)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B799E5C, &type metadata for Fence.AcceptanceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48A50);
  }
  return result;
}

uint64_t sub_23B7384B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x48676E69646E6570 && a2 == 0xED00006E65646469;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E6570 && a2 == 0xE700000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465747065636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23B738628(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48A58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Fence.UpdateStream.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Fence.UpdateStream.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t Fence.UpdateStream.Snapshot.fences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Fence.UpdateStream.AsyncIterator.next()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B7386D0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7386E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B7386F8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B73870C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B738728()
{
  return MEMORY[0x24BEE40A8];
}

unint64_t sub_23B738738()
{
  unint64_t result;

  result = qword_256A48A78;
  if (!qword_256A48A78)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Fence.UpdateStream.AsyncIterator, &type metadata for Fence.UpdateStream.AsyncIterator);
    atomic_store(result, &qword_256A48A78);
  }
  return result;
}

uint64_t sub_23B73877C()
{
  return swift_release();
}

uint64_t type metadata accessor for Fence.UpdateStream()
{
  return objc_opt_self();
}

uint64_t method lookup function for Fence.UpdateStream()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for Fence.UpdateStream.Snapshot()
{
  return &type metadata for Fence.UpdateStream.Snapshot;
}

ValueMetadata *type metadata accessor for Fence.UpdateStream.AsyncIterator()
{
  return &type metadata for Fence.UpdateStream.AsyncIterator;
}

uint64_t sub_23B7387D4(uint64_t a1, _OWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Location();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_23B6F7190(a1, (uint64_t *)&unk_254302530);
    sub_23B75FE84((uint64_t)a2, (uint64_t)v8);
    sub_23B6F5744((uint64_t)a2);
    return sub_23B6F7190((uint64_t)v8, (uint64_t *)&unk_254302530);
  }
  else
  {
    sub_23B6FF360(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_23B73C024((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return sub_23B6F5744((uint64_t)a2);
  }
}

uint64_t sub_23B73892C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_23B6F7190(a1, (uint64_t *)&unk_256A48AA0);
    sub_23B7600A8(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_23B6F7190((uint64_t)v10, (uint64_t *)&unk_256A48AA0);
  }
  else
  {
    sub_23B6FF360(a1, (uint64_t)v13, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_23B73C154((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23B738A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[78] = v2;
  v3[77] = a2;
  v3[76] = a1;
  v4 = sub_23B7968A8();
  v3[79] = v4;
  v3[80] = *(_QWORD *)(v4 - 8);
  v3[81] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
  v3[82] = swift_task_alloc();
  v5 = sub_23B796908();
  v3[83] = v5;
  v3[84] = *(_QWORD *)(v5 - 8);
  v3[85] = swift_task_alloc();
  v3[86] = type metadata accessor for ReverseGeocodingRequest();
  v3[87] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B738B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40[2];

  if (qword_254302F98 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = sub_23B7969BC();
  *(_QWORD *)(v0 + 704) = __swift_project_value_buffer(v3, (uint64_t)qword_254309068);
  sub_23B725660(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  swift_retain_n();
  v4 = sub_23B7969A4();
  v5 = sub_23B796C38();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 696);
  if (v6)
  {
    v39 = v0 + 592;
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v40[0] = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = sub_23B796FBC();
    *(_QWORD *)(v0 + 592) = sub_23B6FB388(v10, v11, v40);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2080;
    v12 = ReverseGeocodingRequest.debugDescription.getter();
    *(_QWORD *)(v0 + 600) = sub_23B6FB388(v12, v13, v40);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B700B04(v7, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    _os_log_impl(&dword_23B6EB000, v4, v5, "%s: Loading new address for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_23B700B04(v7, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  }

  v14 = *(_QWORD *)(v0 + 688);
  v15 = *(_QWORD *)(v0 + 672);
  v16 = *(_QWORD *)(v0 + 664);
  v17 = *(_QWORD *)(v0 + 656);
  v18 = *(_QWORD *)(v0 + 616);
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_sharedService);
  v21 = objc_msgSend(v20, sel_defaultTraits);
  *(_QWORD *)(v0 + 712) = v21;

  v22 = v18 + *(int *)(v14 + 20);
  v23 = type metadata accessor for Location();
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CC20]), sel_initWithLatitude_longitude_, *(double *)(v22 + *(int *)(v23 + 40)), *(double *)(v22 + *(int *)(v23 + 44)));
  *(_QWORD *)(v0 + 720) = v24;
  sub_23B6F1360(v18 + *(int *)(v14 + 24), v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v16) == 1)
  {
    sub_23B6F7190(*(_QWORD *)(v0 + 656), &qword_254303000);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 672) + 32))(*(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 664));
    sub_23B7968E4();
    sub_23B7968FC();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_clearDeviceDisplayLanguages);
    v25 = *(_QWORD *)(v0 + 680);
    v26 = *(_QWORD *)(v0 + 672);
    v27 = *(_QWORD *)(v0 + 664);
    if (v21)
    {
      v28 = v21;
      v29 = (void *)sub_23B796A1C();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_addDeviceDisplayLanguage_, v29);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v26 + 8))(*(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 664));
      swift_bridgeObjectRelease();
    }
  }
  if (*(_BYTE *)(*(_QWORD *)(v0 + 616) + *(int *)(*(_QWORD *)(v0 + 688) + 28)) == 1 && v24)
    objc_msgSend(v24, sel_setHorizontalAccuracy_, 1100.0);
  v30 = objc_msgSend(v19, sel_sharedService, v39, v40[0]);
  if (v30
    && (v31 = v30,
        v32 = objc_msgSend(v30, sel_ticketForReverseGeocodeLocation_traits_, v24, v21),
        *(_QWORD *)(v0 + 728) = v32,
        v31,
        v32))
  {
    v33 = *(_QWORD *)(v0 + 624);
    v34 = *(_QWORD *)(v0 + 616);
    sub_23B73BD14();
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 736) = v35;
    v35[2] = v33;
    v35[3] = v32;
    v35[4] = v34;
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 744) = v36;
    *v36 = v0;
    v36[1] = sub_23B7390E0;
    return sub_23B796ED8();
  }
  else
  {
    sub_23B73BCD0();
    swift_allocError();
    *v38 = 3;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B7390E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 752) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B739148()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double v20;
  double v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t __dst[35];

  v1 = (const void *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 648);
  v3 = *(_QWORD *)(v0 + 640);
  v4 = *(_QWORD *)(v0 + 632);
  v5 = *(_QWORD *)(v0 + 624);
  v6 = *(_QWORD *)(v0 + 616);
  memcpy((void *)(v0 + 288), (const void *)(v0 + 16), 0x110uLL);
  memcpy(__dst, (const void *)(v0 + 16), 0x110uLL);
  sub_23B79689C();
  sub_23B73994C(v6, __dst, v2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_processedOperationsCount;
  v9 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_processedOperationsCount);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_processedOperationsCount) = v11;
    swift_retain_n();
    v12 = sub_23B7969A4();
    v13 = sub_23B796C38();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      __dst[0] = swift_slowAlloc();
      v31 = __dst[0];
      *(_DWORD *)v14 = 136315394;
      v15 = sub_23B796FBC();
      *(_QWORD *)(v0 + 576) = sub_23B6FB388(v15, v16, __dst);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v14 + 12) = 2048;
      v17 = *(_QWORD *)(v5 + v8);
      swift_release();
      *(_QWORD *)(v0 + 584) = v17;
      sub_23B796C68();
      swift_release();
      _os_log_impl(&dword_23B6EB000, v12, v13, "%s: Total operations processed: %ld.", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      v1 = (const void *)(v0 + 288);
      MEMORY[0x23B86C754](v31, -1, -1);
      MEMORY[0x23B86C754](v14, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v18 = *(_QWORD *)(v5 + v8);
    if (__ROR8__(0xCCCCCCCCCCCCCCCDLL * v18 + 0x1999999999999998, 1) <= 0x1999999999999998uLL)
    {
      sub_23B796860();
      v21 = v20;
      swift_retain_n();
      v22 = sub_23B7969A4();
      v23 = sub_23B796C38();
      v24 = os_log_type_enabled(v22, v23);
      v25 = *(void **)(v0 + 720);
      if (v24)
      {
        v30 = *(void **)(v0 + 712);
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        __dst[0] = v27;
        *(_DWORD *)v26 = 136315394;
        v28 = sub_23B796FBC();
        *(_QWORD *)(v0 + 560) = sub_23B6FB388(v28, v29, __dst);
        sub_23B796C68();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v26 + 12) = 2048;
        *(double *)(v0 + 568) = (double)v18 / fabs(v21);
        sub_23B796C68();
        _os_log_impl(&dword_23B6EB000, v22, v23, "%s: Current throughput: %f requests per second.", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B86C754](v27, -1, -1);
        MEMORY[0x23B86C754](v26, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_release_n();
        swift_unknownObjectRelease();

      }
    }
    else
    {
      v19 = *(void **)(v0 + 720);

      swift_unknownObjectRelease();
    }
    memcpy(*(void **)(v0 + 608), v1, 0x110uLL);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B7395E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 720);

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B739668(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  id v19;
  _QWORD aBlock[6];

  v19 = a3;
  v6 = type metadata accessor for ReverseGeocodingRequest();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_23B725660(a4, (uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23B73C2F8;
  *(_QWORD *)(v15 + 24) = v13;
  sub_23B6FF360((uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  aBlock[4] = sub_23B73C4B8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B73A374;
  aBlock[3] = &block_descriptor_0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_submitWithHandler_timeout_networkActivity_, v16, 25, 0);
  _Block_release(v16);
  return swift_release();
}

uint64_t sub_23B73984C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v7[272];
  _QWORD v8[34];
  _QWORD __src[34];
  _BYTE v10[272];

  sub_23B73C534(a1, (uint64_t)v10);
  if (a2)
  {
    __src[0] = a2;
    v3 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
    return sub_23B796B54();
  }
  else
  {
    sub_23B73C534((uint64_t)v10, (uint64_t)__src);
    if (sub_23B73C57C((uint64_t)__src) == 1)
    {
      sub_23B73BCD0();
      v5 = swift_allocError();
      *v6 = 2;
      v8[0] = v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
      return sub_23B796B54();
    }
    else
    {
      memcpy(v7, __src, sizeof(v7));
      sub_23B73C534((uint64_t)v10, (uint64_t)v8);
      sub_23B73BD68((uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
      return sub_23B796B60();
    }
  }
}

uint64_t sub_23B73994C(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  _BYTE v50[280];

  v45 = a2;
  v46 = a3;
  v49 = (uint64_t *)a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AA0);
  MEMORY[0x24BDAC7A8](v3);
  v48 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Location();
  MEMORY[0x24BDAC7A8](v42);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B7968A8();
  v43 = *(_QWORD *)(v7 - 8);
  v8 = v43;
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReverseGeocodingRequest();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (int *)type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
  v47 = *((_QWORD *)v14 - 1);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v41 - v18;
  memcpy(v50, v45, 0x110uLL);
  sub_23B725660((uint64_t)v49, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v46, v7);
  v20 = v13[1];
  *(_QWORD *)v17 = *v13;
  *((_QWORD *)v17 + 1) = v20;
  v21 = (uint64_t)v13 + *(int *)(v11 + 20);
  sub_23B73BD68((uint64_t)v50);
  swift_bridgeObjectRetain();
  *((_QWORD *)v17 + 2) = sub_23B72DF74();
  *((_QWORD *)v17 + 3) = v22;
  sub_23B725660(v21, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  sub_23B700B04((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  sub_23B6FF360((uint64_t)v6, (uint64_t)&v17[v14[6]], (uint64_t (*)(_QWORD))type metadata accessor for Location);
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v17[v14[7]], v10, v44);
  memcpy(&v17[v14[8]], v50, 0x110uLL);
  sub_23B6FF360((uint64_t)v17, (uint64_t)v19, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
  v23 = (char *)v49 + *(int *)(v11 + 20);
  if (*((_BYTE *)v49 + *(int *)(v11 + 28)) == 1)
  {
    v24 = round(*(double *)&v23[*(int *)(v42 + 40)] * 100.0) / 100.0;
    v25 = round(*(double *)&v23[*(int *)(v42 + 44)] * 100.0) / 100.0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48818);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23B799020;
    v27 = MEMORY[0x24BEE13C8];
    v28 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v26 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v26 + 64) = v28;
    *(double *)(v26 + 32) = v24;
    *(_QWORD *)(v26 + 96) = v27;
    *(_QWORD *)(v26 + 104) = v28;
    *(double *)(v26 + 72) = v25;
    v29 = sub_23B796A40();
    v31 = v30;
    v32 = v48;
    sub_23B725660((uint64_t)v19, v48, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v47 + 56))(v32, 0, 1, v14);
    swift_beginAccess();
    v33 = v32;
  }
  else
  {
    v34 = v49;
    v35 = sub_23B72DF74();
    v37 = v36;
    v38 = v48;
    sub_23B725660((uint64_t)v19, v48, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    v39 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v47 + 56);
    v39(v38, 0, 1, v14);
    swift_beginAccess();
    sub_23B73892C(v38, v35, v37);
    swift_endAccess();
    v29 = *v34;
    v31 = v34[1];
    sub_23B725660((uint64_t)v19, v38, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    v39(v38, 0, 1, v14);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v33 = v38;
  }
  sub_23B73892C(v33, v29, v31);
  swift_endAccess();
  return sub_23B700B04((uint64_t)v19, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
}

void sub_23B739DF4(unint64_t a1, void *a2, void (*a3)(_QWORD *, void *), void (*a4)(_QWORD *, void *), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  _BYTE *v39;
  void (*v40)(_QWORD *, void *);
  uint64_t v41[34];
  _QWORD v42[34];
  _OWORD v43[17];

  v10 = type metadata accessor for ReverseGeocodingRequest();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  if (a2)
  {
    v13 = a2;
    if (qword_254302F98 != -1)
      swift_once();
    v14 = sub_23B7969BC();
    __swift_project_value_buffer(v14, (uint64_t)qword_254309068);
    v15 = a2;
    v16 = a2;
    v17 = sub_23B7969A4();
    v18 = sub_23B796C20();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v43[0] = v20;
      v40 = a4;
      *(_DWORD *)v19 = 136446210;
      swift_getErrorValue();
      v21 = sub_23B796EFC();
      v42[0] = sub_23B6FB388(v21, v22, (uint64_t *)v43);
      sub_23B796C68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23B6EB000, v17, v18, "ReverseGeocoder: reverse geocoding completed with error: %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v20, -1, -1);
      MEMORY[0x23B86C754](v19, -1, -1);
    }
    else
    {

    }
    sub_23B73C508(v43);
    sub_23B73C534((uint64_t)v43, (uint64_t)v42);
    v36 = a2;
    a3(v42, a2);

    v37 = a2;
    goto LABEL_22;
  }
  if (!a1)
  {
LABEL_21:
    sub_23B73C508(v43);
    sub_23B73C534((uint64_t)v43, (uint64_t)v42);
    sub_23B73BCD0();
    v38 = swift_allocError();
    *v39 = 0;
    a3(v42, (void *)v38);
    v37 = (void *)v38;
LABEL_22:

    return;
  }
  if (!(a1 >> 62))
  {
    v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v23)
      goto LABEL_9;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  if (!sub_23B796D7C())
  {
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_9:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x23B86C04C](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  v24 = (void *)swift_unknownObjectRetain();
  Address.init(mapItem:)(v24, (uint64_t *)v43);
  if (qword_254302F98 != -1)
LABEL_25:
    swift_once();
  v25 = sub_23B7969BC();
  __swift_project_value_buffer(v25, (uint64_t)qword_254309068);
  sub_23B725660(a5, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  sub_23B73BD68((uint64_t)v43);
  sub_23B73BD68((uint64_t)v43);
  v26 = sub_23B7969A4();
  v27 = sub_23B796C38();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v40 = a3;
    v30 = v29;
    v41[0] = v29;
    *(_DWORD *)v28 = 136315394;
    v31 = ReverseGeocodingRequest.debugDescription.getter();
    v42[0] = sub_23B6FB388(v31, v32, v41);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    *(_WORD *)(v28 + 12) = 2080;
    memcpy(v42, v43, sizeof(v42));
    v33 = Address.description.getter();
    v42[0] = sub_23B6FB388(v33, v34, v41);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B70551C((uint64_t)v43);
    sub_23B70551C((uint64_t)v43);
    _os_log_impl(&dword_23B6EB000, v26, v27, "ReverseGeocoder: address received for request: %s - %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    v35 = v30;
    a3 = v40;
    MEMORY[0x23B86C754](v35, -1, -1);
    MEMORY[0x23B86C754](v28, -1, -1);
  }
  else
  {
    sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    sub_23B70551C((uint64_t)v43);
    sub_23B70551C((uint64_t)v43);
  }

  memcpy(v42, v43, sizeof(v42));
  nullsub_1(v42);
  sub_23B73C534((uint64_t)v42, (uint64_t)v41);
  a3(v41, 0);
  swift_unknownObjectRelease();
  sub_23B70551C((uint64_t)v43);
}

uint64_t sub_23B73A374(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B20);
    v4 = sub_23B796B0C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23B73A3F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void (*v58)(char *, uint64_t, uint64_t, int *);
  char *v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t *v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  const void *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t *v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  double v142;
  double v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v166;
  char *v167;
  double v168;
  double v169;
  uint64_t v170;
  uint64_t *v171;
  NSObject *v172;
  os_log_type_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  id v183;
  char *v184;
  id v185;
  double v186;
  double v187;
  double v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  NSObject *v192;
  os_log_type_t v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t *v216;
  uint64_t *v217;
  uint64_t v218;
  char *v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  __int128 v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  uint64_t v234;
  int *v235;
  _BYTE v236[272];
  uint64_t v237[34];
  _OWORD v238[17];

  v3 = v2;
  v229 = a2;
  v228 = type metadata accessor for Location();
  MEMORY[0x24BDAC7A8](v228);
  v222 = (uint64_t)&v206 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B7968A8();
  v224 = *(_QWORD *)(v6 - 8);
  v225 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v223 = (char *)&v206 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReverseGeocodingRequest();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v216 = (uint64_t *)((char *)&v206 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v213 = (uint64_t)&v206 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v210 = (uint64_t *)((char *)&v206 - v14);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v220 = (uint64_t *)((char *)&v206 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v218 = (uint64_t)&v206 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v217 = (uint64_t *)((char *)&v206 - v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AA0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v219 = (char *)&v206 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v215 = (char *)&v206 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v221 = (uint64_t)&v206 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v206 - v27;
  v29 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v208 = (uint64_t)&v206 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v207 = (uint64_t *)((char *)&v206 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v209 = (uint64_t *)((char *)&v206 - v36);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v211 = (uint64_t)&v206 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v212 = (uint64_t)&v206 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v214 = (uint64_t)&v206 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v206 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43);
  v226 = (uint64_t)&v206 - v47;
  MEMORY[0x24BDAC7A8](v46);
  *(_QWORD *)&v230 = (char *)&v206 - v48;
  v231 = v8;
  v49 = *(int *)(v8 + 20);
  v233 = a1;
  v227 = (char *)a1 + v49;
  v50 = sub_23B72DF74();
  v52 = v51;
  v234 = v3;
  v53 = (uint64_t *)(v3 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_recordsPerGeoHash);
  swift_beginAccess();
  v54 = *v53;
  v55 = *(_QWORD *)(*v53 + 16);
  v235 = (int *)v29;
  v232 = v30;
  if (v55)
  {
    swift_bridgeObjectRetain();
    v56 = sub_23B72D814(v50, v52);
    v30 = v232;
    if ((v57 & 1) != 0)
    {
      sub_23B725660(*(_QWORD *)(v54 + 56) + *(_QWORD *)(v232 + 72) * v56, (uint64_t)v28, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      v58 = *(void (**)(char *, uint64_t, uint64_t, int *))(v30 + 56);
      v59 = v28;
      v60 = 0;
    }
    else
    {
      v58 = *(void (**)(char *, uint64_t, uint64_t, int *))(v232 + 56);
      v59 = v28;
      v60 = 1;
    }
    v29 = (uint64_t)v235;
    v58(v59, v60, 1, v235);
    swift_bridgeObjectRelease();
  }
  else
  {
    v58 = *(void (**)(char *, uint64_t, uint64_t, int *))(v30 + 56);
    v58(v28, 1, 1, (int *)v29);
  }
  swift_bridgeObjectRelease();
  v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v61(v28, 1, v29) != 1)
  {
    v79 = (uint64_t)v28;
    v80 = v230;
    sub_23B6FF360(v79, v230, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    if (qword_254302F98 != -1)
      swift_once();
    v81 = sub_23B7969BC();
    __swift_project_value_buffer(v81, (uint64_t)qword_254309068);
    v82 = v233;
    v83 = v217;
    sub_23B725660((uint64_t)v233, (uint64_t)v217, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    v84 = (uint64_t)v82;
    v85 = v218;
    sub_23B725660(v84, v218, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    v86 = v226;
    sub_23B725660(v80, v226, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    swift_retain_n();
    v87 = sub_23B7969A4();
    v88 = sub_23B796C38();
    v89 = v88;
    if (os_log_type_enabled(v87, v88))
    {
      v90 = swift_slowAlloc();
      v219 = (char *)swift_slowAlloc();
      v237[0] = (uint64_t)v219;
      *(_DWORD *)v90 = 136316163;
      LODWORD(v216) = v89;
      v91 = sub_23B796FBC();
      *(_QWORD *)&v238[0] = sub_23B6FB388(v91, v92, v237);
      sub_23B796C68();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 12) = 2160;
      *(_QWORD *)&v238[0] = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v90 + 22) = 2081;
      v93 = *v83;
      v94 = v83[1];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v238[0] = sub_23B6FB388(v93, v94, v237);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B700B04((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
      *(_WORD *)(v90 + 32) = 2080;
      v95 = sub_23B72DF74();
      *(_QWORD *)&v238[0] = sub_23B6FB388(v95, v96, v237);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B700B04(v85, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
      *(_WORD *)(v90 + 42) = 2080;
      v97 = v235;
      v98 = v226;
      memcpy(v238, (const void *)(v226 + v235[8]), sizeof(v238));
      v99 = Address.description.getter();
      *(_QWORD *)&v238[0] = sub_23B6FB388(v99, v100, v237);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B700B04(v98, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      _os_log_impl(&dword_23B6EB000, v87, (os_log_type_t)v216, "%s: Using cached request %{private,mask.hash}s based on geoHash %s -> %s.", (uint8_t *)v90, 0x34u);
      v101 = v219;
      swift_arrayDestroy();
      v102 = v101;
      v103 = v231;
      MEMORY[0x23B86C754](v102, -1, -1);
      v104 = v90;
      v80 = v230;
      MEMORY[0x23B86C754](v104, -1, -1);

    }
    else
    {
      swift_release_n();
      sub_23B700B04((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
      sub_23B700B04(v85, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
      sub_23B700B04(v86, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);

      v97 = v235;
      v103 = v231;
    }
    v105 = v233[1];
    v235 = (int *)*v233;
    v106 = v220;
    sub_23B725660((uint64_t)v233, (uint64_t)v220, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    v107 = (const void *)(v80 + v97[8]);
    memcpy(v236, v107, sizeof(v236));
    swift_bridgeObjectRetain();
    sub_23B73BD68((uint64_t)v236);
    v108 = v223;
    sub_23B79686C();
    v109 = v106[1];
    *(_QWORD *)v45 = *v106;
    *((_QWORD *)v45 + 1) = v109;
    v110 = (char *)v106 + *(int *)(v103 + 20);
    swift_bridgeObjectRetain();
    *((_QWORD *)v45 + 2) = sub_23B72DF74();
    *((_QWORD *)v45 + 3) = v111;
    v112 = (uint64_t)v110;
    v113 = v222;
    sub_23B725660(v112, v222, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B700B04((uint64_t)v106, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    sub_23B6FF360(v113, (uint64_t)&v45[v97[6]], (uint64_t (*)(_QWORD))type metadata accessor for Location);
    (*(void (**)(char *, char *, uint64_t))(v224 + 32))(&v45[v97[7]], v108, v225);
    memcpy(&v45[v97[8]], v236, 0x110uLL);
    v114 = (uint64_t)v45;
    v115 = v221;
    sub_23B6FF360(v114, v221, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v232 + 56))(v115, 0, 1, v97);
    swift_beginAccess();
    sub_23B73892C(v115, (uint64_t)v235, v105);
    swift_endAccess();
    memcpy(v237, v107, sizeof(v237));
    sub_23B73BD68((uint64_t)v237);
    v116 = v230;
    goto LABEL_18;
  }
  sub_23B6F7190((uint64_t)v28, (uint64_t *)&unk_256A48AA0);
  v62 = v233;
  v63 = (uint64_t)v219;
  if (*((_BYTE *)v233 + *(int *)(v231 + 28)) == 1)
  {
    v64 = round(*(double *)&v227[*(int *)(v228 + 40)] * 100.0) / 100.0;
    v65 = round(*(double *)&v227[*(int *)(v228 + 44)] * 100.0) / 100.0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48818);
    v66 = swift_allocObject();
    v230 = xmmword_23B799020;
    *(_OWORD *)(v66 + 16) = xmmword_23B799020;
    v67 = MEMORY[0x24BEE13C8];
    v68 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v66 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v66 + 64) = v68;
    *(double *)(v66 + 32) = v64;
    *(_QWORD *)(v66 + 96) = v67;
    *(_QWORD *)(v66 + 104) = v68;
    *(double *)(v66 + 72) = v65;
    v69 = sub_23B796A40();
    v71 = v70;
    v72 = *v53;
    if (*(_QWORD *)(*v53 + 16))
    {
      v73 = v69;
      swift_bridgeObjectRetain();
      v74 = sub_23B72D814(v73, v71);
      v75 = (uint64_t)v215;
      if ((v76 & 1) != 0)
      {
        sub_23B725660(*(_QWORD *)(v72 + 56) + *(_QWORD *)(v232 + 72) * v74, (uint64_t)v215, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
        v77 = v75;
        v78 = 0;
      }
      else
      {
        v77 = (uint64_t)v215;
        v78 = 1;
      }
      v117 = (uint64_t)v235;
      v58((char *)v77, v78, 1, v235);
      swift_bridgeObjectRelease();
    }
    else
    {
      v75 = (uint64_t)v215;
      v117 = (uint64_t)v235;
      v58(v215, 1, 1, v235);
    }
    swift_bridgeObjectRelease();
    if (v61((char *)v75, 1, v117) != 1)
    {
      v126 = v214;
      sub_23B6FF360(v75, v214, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      v127 = v233;
      if (qword_254302F98 != -1)
        swift_once();
      v128 = sub_23B7969BC();
      __swift_project_value_buffer(v128, (uint64_t)qword_254309068);
      v129 = v210;
      sub_23B725660((uint64_t)v127, (uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
      v130 = (uint64_t)v127;
      v131 = v213;
      sub_23B725660(v130, v213, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
      v132 = v212;
      sub_23B725660(v126, v212, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      swift_retain_n();
      v133 = sub_23B7969A4();
      v134 = sub_23B796C38();
      if (os_log_type_enabled(v133, v134))
      {
        v135 = swift_slowAlloc();
        v233 = (uint64_t *)swift_slowAlloc();
        v237[0] = (uint64_t)v233;
        *(_DWORD *)v135 = 136316163;
        v136 = sub_23B796FBC();
        *(_QWORD *)&v238[0] = sub_23B6FB388(v136, v137, v237);
        sub_23B796C68();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 12) = 2160;
        *(_QWORD *)&v238[0] = 1752392040;
        sub_23B796C68();
        *(_WORD *)(v135 + 22) = 2081;
        v138 = *v129;
        v139 = v129[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)&v238[0] = sub_23B6FB388(v138, v139, v237);
        sub_23B796C68();
        swift_bridgeObjectRelease();
        sub_23B700B04((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
        *(_WORD *)(v135 + 32) = 2080;
        v140 = v213;
        v141 = v213 + *(int *)(v231 + 20);
        v142 = round(*(double *)(v141 + *(int *)(v228 + 40)) * 100.0) / 100.0;
        v143 = round(*(double *)(v141 + *(int *)(v228 + 44)) * 100.0) / 100.0;
        v144 = swift_allocObject();
        *(_OWORD *)(v144 + 16) = v230;
        v145 = MEMORY[0x24BEE13C8];
        *(_QWORD *)(v144 + 56) = MEMORY[0x24BEE13C8];
        v146 = MEMORY[0x24BEE1448];
        *(_QWORD *)(v144 + 64) = MEMORY[0x24BEE1448];
        *(double *)(v144 + 32) = v142;
        *(_QWORD *)(v144 + 96) = v145;
        *(_QWORD *)(v144 + 104) = v146;
        *(double *)(v144 + 72) = v143;
        v147 = sub_23B796A40();
        *(_QWORD *)&v238[0] = sub_23B6FB388(v147, v148, v237);
        sub_23B796C68();
        swift_bridgeObjectRelease();
        sub_23B700B04(v140, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
        *(_WORD *)(v135 + 42) = 2080;
        v149 = (uint64_t)v235;
        v150 = v212;
        memcpy(v238, (const void *)(v212 + v235[8]), sizeof(v238));
        v151 = Address.description.getter();
        *(_QWORD *)&v238[0] = sub_23B6FB388(v151, v152, v237);
        sub_23B796C68();
        swift_bridgeObjectRelease();
        sub_23B700B04(v150, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
        _os_log_impl(&dword_23B6EB000, v133, v134, "%s: Using coarse cached request %{private,mask.hash}s based on coarseGeoHash %s -> %s.", (uint8_t *)v135, 0x34u);
        v153 = v233;
        swift_arrayDestroy();
        MEMORY[0x23B86C754](v153, -1, -1);
        MEMORY[0x23B86C754](v135, -1, -1);

      }
      else
      {
        swift_release_n();
        sub_23B700B04((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
        sub_23B700B04(v131, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
        sub_23B700B04(v132, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);

        v149 = (uint64_t)v235;
      }
      v180 = v214;
      memcpy(v237, (const void *)(v214 + *(int *)(v149 + 32)), sizeof(v237));
      sub_23B73BD68((uint64_t)v237);
      v116 = v180;
      goto LABEL_18;
    }
    sub_23B6F7190(v75, (uint64_t *)&unk_256A48AA0);
    v62 = v233;
  }
  v119 = *v62;
  v118 = v62[1];
  v120 = (uint64_t *)(v234 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_recordsPerIdentifier);
  swift_beginAccess();
  v121 = *v120;
  if (!*(_QWORD *)(v121 + 16))
  {
    v58((char *)v63, 1, 1, v235);
    v123 = v216;
LABEL_34:
    sub_23B6F7190(v63, (uint64_t *)&unk_256A48AA0);
    if (qword_254302F98 != -1)
      swift_once();
    v155 = sub_23B7969BC();
    __swift_project_value_buffer(v155, (uint64_t)qword_254309068);
    sub_23B725660((uint64_t)v62, (uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    swift_retain_n();
    v156 = sub_23B7969A4();
    v157 = sub_23B796C38();
    if (os_log_type_enabled(v156, v157))
    {
      v158 = swift_slowAlloc();
      v159 = swift_slowAlloc();
      *(_QWORD *)&v238[0] = v159;
      *(_DWORD *)v158 = 136315651;
      v160 = sub_23B796FBC();
      v237[0] = sub_23B6FB388(v160, v161, (uint64_t *)v238);
      sub_23B796C68();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v158 + 12) = 2160;
      v237[0] = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v158 + 22) = 2081;
      v162 = (uint64_t)v123;
      v163 = *v123;
      v164 = v123[1];
      swift_bridgeObjectRetain();
      v237[0] = sub_23B6FB388(v163, v164, (uint64_t *)v238);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B700B04(v162, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
      _os_log_impl(&dword_23B6EB000, v156, v157, "%s: No cached request for %{private,mask.hash}s.", (uint8_t *)v158, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v159, -1, -1);
      MEMORY[0x23B86C754](v158, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_23B700B04((uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
    }

    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v122 = sub_23B72D814(v119, v118);
  v123 = v216;
  if ((v124 & 1) != 0)
  {
    sub_23B725660(*(_QWORD *)(v121 + 56) + *(_QWORD *)(v232 + 72) * v122, v63, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    v125 = 0;
  }
  else
  {
    v125 = 1;
  }
  v154 = (uint64_t)v235;
  v58((char *)v63, v125, 1, v235);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v61((char *)v63, 1, v154) == 1)
    goto LABEL_34;
  v166 = v211;
  sub_23B6FF360(v63, v211, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
  v167 = v223;
  sub_23B796890();
  sub_23B796830();
  v169 = v168;
  (*(void (**)(char *, uint64_t))(v224 + 8))(v167, v225);
  if (v169 > 30.0)
  {
    if (qword_254302F98 != -1)
      swift_once();
    v170 = sub_23B7969BC();
    __swift_project_value_buffer(v170, (uint64_t)qword_254309068);
    v171 = v209;
    sub_23B725660(v166, (uint64_t)v209, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    swift_retain_n();
    v172 = sub_23B7969A4();
    v173 = sub_23B796C38();
    if (os_log_type_enabled(v172, v173))
    {
      v174 = swift_slowAlloc();
      v235 = (int *)swift_slowAlloc();
      *(_QWORD *)&v238[0] = v235;
      *(_DWORD *)v174 = 136315907;
      v175 = sub_23B796FBC();
      v237[0] = sub_23B6FB388(v175, v176, (uint64_t *)v238);
      sub_23B796C68();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v174 + 12) = 2160;
      v237[0] = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v174 + 22) = 2081;
      v177 = *v171;
      v178 = v171[1];
      swift_bridgeObjectRetain();
      v237[0] = sub_23B6FB388(v177, v178, (uint64_t *)v238);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B700B04((uint64_t)v171, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      *(_WORD *)(v174 + 32) = 2048;
      v237[0] = 0x403E000000000000;
      sub_23B796C68();
      swift_release_n();
      _os_log_impl(&dword_23B6EB000, v172, v173, "%s: Cached request for %{private,mask.hash}s is older than %f s.", (uint8_t *)v174, 0x2Au);
      v179 = (uint64_t)v235;
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v179, -1, -1);
      MEMORY[0x23B86C754](v174, -1, -1);

      sub_23B700B04(v211, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    }
    else
    {
      swift_release_n();

      sub_23B700B04((uint64_t)v171, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      swift_release_n();
      sub_23B700B04(v166, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    }
    goto LABEL_40;
  }
  v181 = v166 + *(int *)(v154 + 24);
  v182 = (int *)v228;
  v183 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, *(double *)(v181 + *(int *)(v228 + 40)), *(double *)(v181 + *(int *)(v228 + 44)));
  v184 = v227;
  v185 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, *(double *)&v227[v182[10]], *(double *)&v227[v182[11]]);
  objc_msgSend(v183, sel_distanceFromLocation_, v185);
  v187 = v186;
  if (v184[v182[15]] == 2)
    v188 = 250.0;
  else
    v188 = 50.0;
  if (v186 >= v188)
  {
    sub_23B700B04(v166, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);

LABEL_40:
    sub_23B73C508(v238);
    return sub_23B73C534((uint64_t)v238, v229);
  }
  if (qword_254302F98 != -1)
    swift_once();
  v189 = sub_23B7969BC();
  __swift_project_value_buffer(v189, (uint64_t)qword_254309068);
  v190 = v207;
  sub_23B725660(v166, (uint64_t)v207, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
  v191 = v208;
  sub_23B725660(v166, v208, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
  swift_retain_n();
  v192 = sub_23B7969A4();
  v193 = sub_23B796C38();
  v194 = v193;
  if (os_log_type_enabled(v192, v193))
  {
    v195 = swift_slowAlloc();
    v233 = (uint64_t *)swift_slowAlloc();
    v237[0] = (uint64_t)v233;
    *(_DWORD *)v195 = 136316419;
    v196 = sub_23B796FBC();
    *(_QWORD *)&v238[0] = sub_23B6FB388(v196, v197, v237);
    LODWORD(v232) = v194;
    sub_23B796C68();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v195 + 12) = 2160;
    *(_QWORD *)&v238[0] = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v195 + 22) = 2081;
    v199 = *v190;
    v198 = v190[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v238[0] = sub_23B6FB388(v199, v198, v237);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B700B04((uint64_t)v190, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    *(_WORD *)(v195 + 32) = 2048;
    *(double *)v238 = v187;
    sub_23B796C68();
    *(_WORD *)(v195 + 42) = 2048;
    *(double *)v238 = v188;
    sub_23B796C68();
    *(_WORD *)(v195 + 52) = 2080;
    v200 = (uint64_t)v235;
    v201 = v208;
    memcpy(v238, (const void *)(v208 + v235[8]), sizeof(v238));
    v202 = Address.description.getter();
    *(_QWORD *)&v238[0] = sub_23B6FB388(v202, v203, v237);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B700B04(v201, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    _os_log_impl(&dword_23B6EB000, v192, (os_log_type_t)v232, "%s: Using cached request for %{private,mask.hash}s due to location distance throttling - distance: %f, limit: %f -> %s.", (uint8_t *)v195, 0x3Eu);
    v204 = v233;
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v204, -1, -1);
    v205 = v195;
    v166 = v211;
    MEMORY[0x23B86C754](v205, -1, -1);

  }
  else
  {
    swift_release_n();
    sub_23B700B04((uint64_t)v190, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    sub_23B700B04(v191, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);

    v200 = (uint64_t)v235;
  }
  memcpy(v237, (const void *)(v166 + *(int *)(v200 + 32)), sizeof(v237));
  sub_23B73BD68((uint64_t)v237);
  v116 = v166;
LABEL_18:
  sub_23B700B04(v116, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
  memcpy(v238, v237, sizeof(v238));
  nullsub_1(v238);
  return sub_23B73C534((uint64_t)v238, v229);
}

unint64_t sub_23B73BCD0()
{
  unint64_t result;

  result = qword_256A48A90;
  if (!qword_256A48A90)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ReverseGeocoder.ReverseGeocodingError, &type metadata for ReverseGeocoder.ReverseGeocodingError);
    atomic_store(result, (unint64_t *)&qword_256A48A90);
  }
  return result;
}

unint64_t sub_23B73BD14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A48A98;
  if (!qword_256A48A98)
  {
    v1 = type metadata accessor for ReverseGeocoder(255);
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ReverseGeocoder, v1);
    atomic_store(result, (unint64_t *)&qword_256A48A98);
  }
  return result;
}

uint64_t sub_23B73BD5C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B739668(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B73BD68(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_23B73BE90(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_23B73BED4(unint64_t a1, _OWORD *a2, uint64_t a3, _QWORD *a4)
{
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v7 = a2[9];
  v8 = (_OWORD *)(a4[6] + 176 * a1);
  v8[8] = a2[8];
  v8[9] = v7;
  v8[10] = a2[10];
  v9 = a2[5];
  v8[4] = a2[4];
  v8[5] = v9;
  v10 = a2[7];
  v8[6] = a2[6];
  v8[7] = v10;
  v11 = a2[1];
  *v8 = *a2;
  v8[1] = v11;
  v12 = a2[3];
  v8[2] = a2[2];
  v8[3] = v12;
  v13 = a4[7];
  v14 = type metadata accessor for Location();
  result = sub_23B6FF360(a3, v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v16 = a4[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a4[2] = v18;
  return result;
}

uint64_t sub_23B73BF94(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
  result = sub_23B6FF360(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_23B73C024(uint64_t a1, _OWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23B780558((uint64_t)a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for Location();
        return sub_23B73C594(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for Location);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23B781DE8();
      goto LABEL_7;
    }
    sub_23B780F58(v13, a3 & 1);
    v20 = sub_23B780558((uint64_t)a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23B73BED4(v10, a2, a1, v16);
      return sub_23B6F4E8C((uint64_t)a2);
    }
  }
  result = sub_23B796EF0();
  __break(1u);
  return result;
}

uint64_t sub_23B73C154(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23B72D814(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
        return sub_23B73C594(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B7822B0();
      goto LABEL_7;
    }
    sub_23B781618(v15, a4 & 1);
    v22 = sub_23B72D814(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23B73BF94(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23B796EF0();
  __break(1u);
  return result;
}

uint64_t sub_23B73C294()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23B73C2F8(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
  return sub_23B73984C(a1, a2);
}

uint64_t sub_23B73C348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for ReverseGeocodingRequest();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  if (*(_QWORD *)(v4 + *(int *)(type metadata accessor for Location() + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v6 = v3 + *(int *)(v1 + 24);
  v7 = sub_23B796908();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_deallocObject();
}

void sub_23B73C4B8(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReverseGeocodingRequest() - 8) + 80);
  sub_23B739DF4(a1, a2, *(void (**)(_QWORD *, void *))(v2 + 16), *(void (**)(_QWORD *, void *))(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

double sub_23B73C508(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23B73C534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B73C57C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23B73C594(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

FindMyLocate::DarwinNotifications_optional __swiftcall DarwinNotifications.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FindMyLocate::DarwinNotifications_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23B796DB8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DarwinNotifications.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23B73C664 + 4 * byte_23B79A130[*v0]))(0xD00000000000001DLL, 0x800000023B79F7A0);
}

uint64_t sub_23B73C664(uint64_t a1)
{
  return a1 + 2;
}

void sub_23B73C6AC(char *a1)
{
  sub_23B73E9B8(*a1);
}

unint64_t sub_23B73C6BC()
{
  unint64_t result;

  result = qword_256A48B30;
  if (!qword_256A48B30)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for DarwinNotifications, &type metadata for DarwinNotifications);
    atomic_store(result, (unint64_t *)&qword_256A48B30);
  }
  return result;
}

void sub_23B73C700()
{
  char *v0;

  sub_23B77E724(*v0);
}

void sub_23B73C708(uint64_t a1)
{
  char *v1;

  sub_23B77E998(a1, *v1);
}

void sub_23B73C710(uint64_t a1)
{
  char *v1;

  sub_23B77EA38(a1, *v1);
}

FindMyLocate::DarwinNotifications_optional sub_23B73C718(Swift::String *a1)
{
  return DarwinNotifications.init(rawValue:)(*a1);
}

uint64_t sub_23B73C724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DarwinNotifications.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for DarwinNotifications(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23B73C794 + 4 * byte_23B79A13A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23B73C7C8 + 4 * byte_23B79A135[v4]))();
}

uint64_t sub_23B73C7C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B73C7D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B73C7D8);
  return result;
}

uint64_t sub_23B73C7E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B73C7ECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23B73C7F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B73C7F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FriendshipRequestStreamChange(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for FriendshipRequest();
    *(_QWORD *)((char *)a1 + v8[5]) = *(_QWORD *)((char *)a2 + v8[5]);
    v9 = v8[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v12)
      {
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v12;
        v13 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = v13;
        v10[32] = v11[32];
        v14 = *((_QWORD *)v11 + 6);
        *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
        *((_QWORD *)v10 + 6) = v14;
        *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        v15 = *((_QWORD *)v11 + 11);
        *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
        *((_QWORD *)v10 + 11) = v15;
        *((_QWORD *)v10 + 12) = *((_QWORD *)v11 + 12);
        v10[104] = v11[104];
        v16 = *((_QWORD *)v11 + 15);
        *((_QWORD *)v10 + 14) = *((_QWORD *)v11 + 14);
        *((_QWORD *)v10 + 15) = v16;
        v17 = *((_QWORD *)v11 + 17);
        *((_QWORD *)v10 + 16) = *((_QWORD *)v11 + 16);
        *((_QWORD *)v10 + 17) = v17;
        v49 = *((_QWORD *)v11 + 19);
        *((_QWORD *)v10 + 18) = *((_QWORD *)v11 + 18);
        *((_QWORD *)v10 + 19) = v49;
        v18 = *((_QWORD *)v11 + 20);
        v19 = *((_QWORD *)v11 + 21);
        *((_QWORD *)v10 + 20) = v18;
        *((_QWORD *)v10 + 21) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v28 = *((_OWORD *)v11 + 9);
        *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
        *((_OWORD *)v10 + 9) = v28;
        *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
        v29 = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        *((_OWORD *)v10 + 5) = v29;
        v30 = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 7) = v30;
        v31 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v31;
        v32 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v32;
      }
      v33 = v8[7];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = sub_23B7968A8();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
LABEL_13:
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_15:
        *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
        *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
        v45 = v8[10];
        v46 = (char *)a1 + v45;
        v47 = (char *)a2 + v45;
        *v46 = *v47;
        *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
        *((_QWORD *)v46 + 3) = *((_QWORD *)v47 + 3);
        *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v12)
      {
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v12;
        v21 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = v21;
        v10[32] = v11[32];
        v22 = *((_QWORD *)v11 + 6);
        *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
        *((_QWORD *)v10 + 6) = v22;
        *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        v23 = *((_QWORD *)v11 + 11);
        *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
        *((_QWORD *)v10 + 11) = v23;
        *((_QWORD *)v10 + 12) = *((_QWORD *)v11 + 12);
        v10[104] = v11[104];
        v24 = *((_QWORD *)v11 + 15);
        *((_QWORD *)v10 + 14) = *((_QWORD *)v11 + 14);
        *((_QWORD *)v10 + 15) = v24;
        v25 = *((_QWORD *)v11 + 17);
        *((_QWORD *)v10 + 16) = *((_QWORD *)v11 + 16);
        *((_QWORD *)v10 + 17) = v25;
        v50 = *((_QWORD *)v11 + 19);
        *((_QWORD *)v10 + 18) = *((_QWORD *)v11 + 18);
        *((_QWORD *)v10 + 19) = v50;
        v26 = *((_QWORD *)v11 + 20);
        v27 = *((_QWORD *)v11 + 21);
        *((_QWORD *)v10 + 20) = v26;
        *((_QWORD *)v10 + 21) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v38 = *((_OWORD *)v11 + 9);
        *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
        *((_OWORD *)v10 + 9) = v38;
        *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
        v39 = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        *((_OWORD *)v10 + 5) = v39;
        v40 = *((_OWORD *)v11 + 7);
        *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
        *((_OWORD *)v10 + 7) = v40;
        v41 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v41;
        v42 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v42;
      }
      v43 = v8[7];
      v34 = (char *)a1 + v43;
      v35 = (char *)a2 + v43;
      v36 = sub_23B7968A8();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    goto LABEL_15;
  }
  v20 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for FriendshipRequestStreamChange(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_getEnumCaseMultiPayload();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for FriendshipRequest();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(v3 + 24) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(v3 + 28);
  v5 = sub_23B7968A8();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = (int *)type metadata accessor for FriendshipRequest();
  *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  if (EnumCaseMultiPayload != 1)
  {
    if (v10)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      v18 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v18;
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v19 = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = v19;
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
      v20 = *(_QWORD *)(v9 + 88);
      *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
      *(_QWORD *)(v8 + 88) = v20;
      *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
      *(_BYTE *)(v8 + 104) = *(_BYTE *)(v9 + 104);
      v21 = *(_QWORD *)(v9 + 120);
      *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
      *(_QWORD *)(v8 + 120) = v21;
      v22 = *(_QWORD *)(v9 + 136);
      *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
      *(_QWORD *)(v8 + 136) = v22;
      v47 = *(_QWORD *)(v9 + 152);
      *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
      *(_QWORD *)(v8 + 152) = v47;
      v23 = *(_QWORD *)(v9 + 160);
      v24 = *(_QWORD *)(v9 + 168);
      *(_QWORD *)(v8 + 160) = v23;
      *(_QWORD *)(v8 + 168) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = *(_OWORD *)(v9 + 144);
      *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
      *(_OWORD *)(v8 + 144) = v35;
      *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
      v36 = *(_OWORD *)(v9 + 80);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 80) = v36;
      v37 = *(_OWORD *)(v9 + 112);
      *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
      *(_OWORD *)(v8 + 112) = v37;
      v38 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v38;
      v39 = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = v39;
    }
    v40 = v6[7];
    v31 = (void *)(a1 + v40);
    v32 = (const void *)(a2 + v40);
    v33 = sub_23B7968A8();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      goto LABEL_11;
LABEL_12:
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    goto LABEL_13;
  }
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v12 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v12;
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    v13 = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
    *(_QWORD *)(v8 + 88) = v13;
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_BYTE *)(v8 + 104) = *(_BYTE *)(v9 + 104);
    v14 = *(_QWORD *)(v9 + 120);
    *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = v14;
    v15 = *(_QWORD *)(v9 + 136);
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    *(_QWORD *)(v8 + 136) = v15;
    v46 = *(_QWORD *)(v9 + 152);
    *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
    *(_QWORD *)(v8 + 152) = v46;
    v16 = *(_QWORD *)(v9 + 160);
    v17 = *(_QWORD *)(v9 + 168);
    *(_QWORD *)(v8 + 160) = v16;
    *(_QWORD *)(v8 + 168) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *(_OWORD *)(v9 + 144);
    *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 144) = v25;
    *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
    v26 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v26;
    v27 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v27;
    v28 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v28;
    v29 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v29;
  }
  v30 = v6[7];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  v33 = sub_23B7968A8();
  v34 = *(_QWORD *)(v33 - 8);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    goto LABEL_12;
LABEL_11:
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_13:
  *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  v42 = v6[10];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_BYTE *)v43 = *(_BYTE *)v44;
  *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
  *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a1 != a2)
  {
    sub_23B73D794(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = (int *)type metadata accessor for FriendshipRequest();
    *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
    v7 = v6[6];
    v8 = a1 + v7;
    v9 = (__int128 *)(a2 + v7);
    v10 = *(_QWORD *)(a2 + v7 + 8);
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload == 1)
    {
      if (v10)
      {
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
        *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
        *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
        *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
        *(_QWORD *)(v8 + 40) = *((_QWORD *)v9 + 5);
        *(_QWORD *)(v8 + 48) = *((_QWORD *)v9 + 6);
        *(_QWORD *)(v8 + 56) = *((_QWORD *)v9 + 7);
        *(_QWORD *)(v8 + 64) = *((_QWORD *)v9 + 8);
        *(_QWORD *)(v8 + 72) = *((_QWORD *)v9 + 9);
        *(_QWORD *)(v8 + 80) = *((_QWORD *)v9 + 10);
        *(_QWORD *)(v8 + 88) = *((_QWORD *)v9 + 11);
        *(_QWORD *)(v8 + 96) = *((_QWORD *)v9 + 12);
        *(_BYTE *)(v8 + 104) = *((_BYTE *)v9 + 104);
        *(_QWORD *)(v8 + 112) = *((_QWORD *)v9 + 14);
        *(_QWORD *)(v8 + 120) = *((_QWORD *)v9 + 15);
        *(_QWORD *)(v8 + 128) = *((_QWORD *)v9 + 16);
        *(_QWORD *)(v8 + 136) = *((_QWORD *)v9 + 17);
        *(_QWORD *)(v8 + 144) = *((_QWORD *)v9 + 18);
        *(_QWORD *)(v8 + 152) = *((_QWORD *)v9 + 19);
        *(_QWORD *)(v8 + 160) = *((_QWORD *)v9 + 20);
        *(_QWORD *)(v8 + 168) = *((_QWORD *)v9 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v11 = *v9;
        v12 = v9[2];
        *(_OWORD *)(v8 + 16) = v9[1];
        *(_OWORD *)(v8 + 32) = v12;
        *(_OWORD *)v8 = v11;
        v13 = v9[3];
        v14 = v9[4];
        v15 = v9[6];
        *(_OWORD *)(v8 + 80) = v9[5];
        *(_OWORD *)(v8 + 96) = v15;
        *(_OWORD *)(v8 + 48) = v13;
        *(_OWORD *)(v8 + 64) = v14;
        v16 = v9[7];
        v17 = v9[8];
        v18 = v9[10];
        *(_OWORD *)(v8 + 144) = v9[9];
        *(_OWORD *)(v8 + 160) = v18;
        *(_OWORD *)(v8 + 112) = v16;
        *(_OWORD *)(v8 + 128) = v17;
      }
      v19 = v6[7];
      v20 = (void *)(a1 + v19);
      v21 = (const void *)(a2 + v19);
      v22 = sub_23B7968A8();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
LABEL_12:
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_14:
        *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
        *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
        v34 = v6[10];
        v35 = a1 + v34;
        v36 = a2 + v34;
        *(_BYTE *)v35 = *(_BYTE *)v36;
        *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
        *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
        *(_QWORD *)(v35 + 24) = *(_QWORD *)(v36 + 24);
        *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v10)
      {
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
        *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
        *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
        *(_BYTE *)(v8 + 32) = *((_BYTE *)v9 + 32);
        *(_QWORD *)(v8 + 40) = *((_QWORD *)v9 + 5);
        *(_QWORD *)(v8 + 48) = *((_QWORD *)v9 + 6);
        *(_QWORD *)(v8 + 56) = *((_QWORD *)v9 + 7);
        *(_QWORD *)(v8 + 64) = *((_QWORD *)v9 + 8);
        *(_QWORD *)(v8 + 72) = *((_QWORD *)v9 + 9);
        *(_QWORD *)(v8 + 80) = *((_QWORD *)v9 + 10);
        *(_QWORD *)(v8 + 88) = *((_QWORD *)v9 + 11);
        *(_QWORD *)(v8 + 96) = *((_QWORD *)v9 + 12);
        *(_BYTE *)(v8 + 104) = *((_BYTE *)v9 + 104);
        *(_QWORD *)(v8 + 112) = *((_QWORD *)v9 + 14);
        *(_QWORD *)(v8 + 120) = *((_QWORD *)v9 + 15);
        *(_QWORD *)(v8 + 128) = *((_QWORD *)v9 + 16);
        *(_QWORD *)(v8 + 136) = *((_QWORD *)v9 + 17);
        *(_QWORD *)(v8 + 144) = *((_QWORD *)v9 + 18);
        *(_QWORD *)(v8 + 152) = *((_QWORD *)v9 + 19);
        *(_QWORD *)(v8 + 160) = *((_QWORD *)v9 + 20);
        *(_QWORD *)(v8 + 168) = *((_QWORD *)v9 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v24 = *v9;
        v25 = v9[2];
        *(_OWORD *)(v8 + 16) = v9[1];
        *(_OWORD *)(v8 + 32) = v25;
        *(_OWORD *)v8 = v24;
        v26 = v9[3];
        v27 = v9[4];
        v28 = v9[6];
        *(_OWORD *)(v8 + 80) = v9[5];
        *(_OWORD *)(v8 + 96) = v28;
        *(_OWORD *)(v8 + 48) = v26;
        *(_OWORD *)(v8 + 64) = v27;
        v29 = v9[7];
        v30 = v9[8];
        v31 = v9[10];
        *(_OWORD *)(v8 + 144) = v9[9];
        *(_OWORD *)(v8 + 160) = v31;
        *(_OWORD *)(v8 + 112) = v29;
        *(_OWORD *)(v8 + 128) = v30;
      }
      v32 = v6[7];
      v20 = (void *)(a1 + v32);
      v21 = (const void *)(a2 + v32);
      v22 = sub_23B7968A8();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        goto LABEL_12;
    }
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    goto LABEL_14;
  }
  return a1;
}

uint64_t sub_23B73D794(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FriendshipRequestStreamChange();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FriendshipRequestStreamChange()
{
  uint64_t result;

  result = qword_256A48B40;
  if (!qword_256A48B40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithTake for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  v6 = (int *)type metadata accessor for FriendshipRequest();
  *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
  v7 = v6[6];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  v13 = v9[10];
  v14 = v9[8];
  v8[9] = v9[9];
  v8[10] = v13;
  v15 = v9[7];
  v8[6] = v9[6];
  v8[7] = v15;
  v8[8] = v14;
  v16 = v6[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_23B7968A8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  if (EnumCaseMultiPayload != 1)
  {
    if (v21)
      goto LABEL_3;
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    goto LABEL_6;
  }
  if (!v21)
    goto LABEL_5;
LABEL_3:
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_6:
  *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  v23 = v6[10];
  v24 = (_OWORD *)(a1 + v23);
  v25 = (_OWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FriendshipRequestStreamChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;

  if (a1 != a2)
  {
    sub_23B73D794(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = (int *)type metadata accessor for FriendshipRequest();
    *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
    v7 = v6[6];
    v8 = (_OWORD *)(a1 + v7);
    v9 = (_OWORD *)(a2 + v7);
    v10 = v9[1];
    *v8 = *v9;
    v8[1] = v10;
    v11 = v9[5];
    v8[4] = v9[4];
    v8[5] = v11;
    v12 = v9[3];
    v8[2] = v9[2];
    v8[3] = v12;
    v13 = v9[10];
    v14 = v9[8];
    v8[9] = v9[9];
    v8[10] = v13;
    v15 = v9[7];
    v8[6] = v9[6];
    v8[7] = v15;
    v8[8] = v14;
    v16 = v6[7];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    v19 = sub_23B7968A8();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (v21)
      {
LABEL_4:
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_7:
        *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
        *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
        v23 = v6[10];
        v24 = (_OWORD *)(a1 + v23);
        v25 = (_OWORD *)(a2 + v23);
        v26 = v25[1];
        *v24 = *v25;
        v24[1] = v26;
        *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v21)
    {
      goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_23B73DC2C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FriendshipRequest();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_23B73DC90()
{
  id result;

  result = sub_23B73DCAC();
  qword_256A48B50 = (uint64_t)result;
  return result;
}

id sub_23B73DCAC()
{
  id result;
  void *v1;
  uint64_t i;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[32];
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;

  v9 = &unk_250C92330;
  v10 = &unk_250C91CA0;
  v11 = &unk_250C91EB0;
  v12 = &unk_250C920C0;
  v13 = &unk_250C921E0;
  v14 = &unk_250C92210;
  v15 = &unk_250C92240;
  v16 = &unk_250C92270;
  v17 = &unk_250C922A0;
  v18 = &unk_250C922D0;
  v19 = &unk_250C92300;
  v20 = &unk_250C91CD0;
  v21 = &unk_250C91D00;
  v22 = &unk_250C91D30;
  v23 = &unk_250C91D60;
  v24 = &unk_250C91D90;
  v25 = &unk_250C91DC0;
  v26 = &unk_250C91DF0;
  v27 = &unk_250C91E20;
  v28 = &unk_250C91E50;
  v29 = &unk_250C91E80;
  v30 = &unk_250C91EE0;
  v31 = &unk_250C91F10;
  v32 = &unk_250C91F40;
  v33 = &unk_250C91F70;
  v34 = &unk_250C91FA0;
  v35 = &unk_250C91FD0;
  v36 = &unk_250C92000;
  v37 = &unk_250C92030;
  v38 = &unk_250C92060;
  v39 = &unk_250C92090;
  v40 = &unk_250C920F0;
  v41 = &unk_250C92120;
  v42 = &unk_250C92150;
  v43 = &unk_250C92180;
  v44 = &unk_250C921B0;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CF60]), sel_init);
  if (result)
  {
    v1 = result;
    v7 = MEMORY[0x24BEE4AF8];
    result = (id)sub_23B796D34();
    for (i = 32; i != 320; i += 8)
    {
      v3 = *(_QWORD *)&v8[i];
      if (*(_QWORD *)(v3 + 16) < 2uLL)
      {
        __break(1u);
        goto LABEL_10;
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CC08]), sel_initWithLatitude_longitude_, *(double *)(v3 + 40), *(double *)(v3 + 32));
      sub_23B796D1C();
      sub_23B796D40();
      sub_23B796D4C();
      result = (id)sub_23B796D28();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B58);
    swift_arrayDestroy();
    v4 = *(_QWORD *)(v7 + 16);
    if (v4)
    {
      v5 = (uint64_t *)(v7 + 32);
      do
      {
        v6 = *v5++;
        objc_msgSend(v1, sel_addVertex_, v6);
        --v4;
      }
      while (v4);
    }
    swift_release();
    return v1;
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t Session.peerToken(peer:)(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)(v2 + 392) = v1;
  v3 = a1[9];
  *(_OWORD *)(v2 + 144) = a1[8];
  *(_OWORD *)(v2 + 160) = v3;
  *(_OWORD *)(v2 + 176) = a1[10];
  v4 = a1[5];
  *(_OWORD *)(v2 + 80) = a1[4];
  *(_OWORD *)(v2 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v2 + 112) = a1[6];
  *(_OWORD *)(v2 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v2 + 48) = a1[2];
  *(_OWORD *)(v2 + 64) = v7;
  return swift_task_switch();
}

uint64_t sub_23B73DFBC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  unsigned __int8 v16;
  uint64_t v17;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  sub_23B6F4E8C(v0 + 16);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v17 = v5;
    *(_DWORD *)v4 = 136446723;
    *(_QWORD *)(v0 + 368) = sub_23B6FB388(0xD000000000000010, 0x800000023B7A0A40, &v17);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2160;
    *(_QWORD *)(v0 + 376) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v4 + 22) = 2081;
    v6 = *(_QWORD *)(v0 + 16);
    v7 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 384) = sub_23B6FB388(v6, v7, &v17);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744(v0 + 16);
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s for %{private,mask.hash}s!", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    sub_23B6F5744(v0 + 16);
  }

  v8 = *(_QWORD *)(v0 + 392);
  v16 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v16);
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v8 + 24);
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = v9;
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
  v10 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = v10;
  v11 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = v11;
  v12 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 208) = v12;
  v13 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 240) = v13;
  swift_retain();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v14;
  *v14 = v0;
  v14[1] = sub_23B73E24C;
  return sub_23B785164((_OWORD *)(v0 + 192));
}

uint64_t sub_23B73E24C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 416) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B73E2D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.ownerToken()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_23B73E2F8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int8 v9;
  uint64_t v10;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[2] = sub_23B6FB388(0x6B6F5472656E776FLL, 0xEC00000029286E65, &v10);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = v0[3];
  v9 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v9);
  v0[4] = *(_QWORD *)(v6 + 24);
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v0[5] = v7;
  *v7 = v0;
  v7[1] = sub_23B73E4B8;
  return sub_23B78532C();
}

uint64_t sub_23B73E4B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t Session.stopConfigRangingSession()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_23B73E558()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int8 v9;
  uint64_t v10;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[2] = sub_23B6FB388(0xD00000000000001ALL, 0x800000023B7A0A60, &v10);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = v0[3];
  v9 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v9);
  v0[4] = *(_QWORD *)(v6 + 24);
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v0[5] = v7;
  *v7 = v0;
  v7[1] = sub_23B6EE938;
  return sub_23B7853F8();
}

uint64_t sub_23B73E714(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA0000000000464DLL;
  v3 = 0x46746C7561666564;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000013;
    else
      v5 = 0xD000000000000010;
    if (v4 == 1)
      v6 = 0x800000023B79F720;
    else
      v6 = 0x800000023B79F740;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x46746C7561666564;
  v6 = 0xEA0000000000464DLL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000013;
    else
      v3 = 0xD000000000000010;
    if (v7 == 1)
      v2 = 0x800000023B79F720;
    else
      v2 = 0x800000023B79F740;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23B73E81C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000002DLL;
  else
    v3 = 0xD000000000000016;
  if (v2)
    v4 = 0x800000023B79F910;
  else
    v4 = 0x800000023B79F930;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000002DLL;
  else
    v5 = 0xD000000000000016;
  if ((a2 & 1) != 0)
    v6 = 0x800000023B79F930;
  else
    v6 = 0x800000023B79F910;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23B73E8C4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000002DLL;
  v3 = 0x800000023B79F960;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000002FLL;
    else
      v5 = 0xD000000000000026;
    if (v4 == 1)
      v6 = 0x800000023B79F990;
    else
      v6 = 0x800000023B79F9C0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000002DLL;
  v6 = 0x800000023B79F960;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000002FLL;
    else
      v2 = 0xD000000000000026;
    if (v7 == 1)
      v3 = 0x800000023B79F990;
    else
      v3 = 0x800000023B79F9C0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_23B73E9B8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23B73EA04(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23B73EA68 + 4 * byte_23B79A24D[a2]))(a3 + 2);
}

uint64_t sub_23B73EA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 2 && v3 == 0x800000023B79F7C0)
    v4 = 1;
  else
    v4 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_23B73EB00(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6572616853746F6ELL;
    else
      v3 = 0x6967696C45746F6ELL;
    if (v2 == 1)
      v4 = 0xE900000000000064;
    else
      v4 = 0xEB00000000656C62;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6572616853746F6ELL;
      else
        v6 = 0x6967696C45746F6ELL;
      if (v5 == 1)
        v7 = 0xE900000000000064;
      else
        v7 = 0xEB00000000656C62;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x646572616873;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x646572616873)
  {
LABEL_21:
    v8 = sub_23B796ECC();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_23B73EC28(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23B73EC8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23B73ED20 + 4 * byte_23B79A257[a2]))(0x6B726F773C21245FLL);
}

uint64_t sub_23B73ED20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6B726F773C21245FLL && v2 == v1)
    v3 = 1;
  else
    v3 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_23B73EE00(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23B73EE40(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23B73EEAC + 4 * byte_23B79A261[a2]))(0x65766F6D6572);
}

uint64_t sub_23B73EEAC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65766F6D6572 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t LocationRequest.toHandles.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*LocationRequest.toHandles.modify())()
{
  return nullsub_1;
}

uint64_t LocationRequest.startRefreshingLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t LocationRequest.isCached.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t sub_23B73EFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B73F24C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B73EFCC(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_23B73EFD8()
{
  sub_23B6FD520();
  return sub_23B796FA4();
}

uint64_t sub_23B73F000()
{
  sub_23B6FD520();
  return sub_23B796FB0();
}

uint64_t assignWithCopy for LocationRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  return a1;
}

uint64_t assignWithTake for LocationRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  return a1;
}

uint64_t storeEnumTagSinglePayload for LocationRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23B73F194 + 4 * byte_23B79A27B[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23B73F1C8 + 4 * byte_23B79A276[v4]))();
}

uint64_t sub_23B73F1C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B73F1D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B73F1D8);
  return result;
}

uint64_t sub_23B73F1E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B73F1ECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23B73F1F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B73F1F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_23B73F208()
{
  unint64_t result;

  result = qword_256A48B78;
  if (!qword_256A48B78)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A3C8, &type metadata for LocationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48B78);
  }
  return result;
}

uint64_t sub_23B73F24C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C646E61486F74 && a2 == 0xE900000000000073;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E696769726FLL && a2 == 0xE600000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023B7A0B10 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5268736572666572 && a2 == 0xED00006E6F736165 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023B7A0B30 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6465686361437369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

FindMyLocate::Account::TokenStatus_optional __swiftcall Account.TokenStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (FindMyLocate::Account::TokenStatus_optional)rawValue;
}

uint64_t Account.TokenStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FindMyLocate::Account::TokenStatus_optional sub_23B73F5BC(Swift::Int *a1)
{
  return Account.TokenStatus.init(rawValue:)(*a1);
}

uint64_t sub_23B73F5C4()
{
  sub_23B7409C4();
  return sub_23B796ADC();
}

uint64_t sub_23B73F620()
{
  sub_23B7409C4();
  return sub_23B796AC4();
}

uint64_t Account.authToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Account.authToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Account.authToken.modify())()
{
  return nullsub_1;
}

void Account.authTokenStatus.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t Account.appHostName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Account.apsEnvironment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall Account.init(icloudIdentifier:dsid:authTokenStatus:appToken:appHostName:apsEnvironment:peopleURL:authToken:)(FindMyLocate::Account *__return_ptr retstr, Swift::String icloudIdentifier, Swift::String dsid, FindMyLocate::Account::TokenStatus authTokenStatus, Swift::String appToken, Swift::String_optional appHostName, Swift::String apsEnvironment, Swift::String_optional peopleURL, Swift::String_optional authToken)
{
  FindMyLocate::Account::TokenStatus v9;

  v9 = *(_BYTE *)authTokenStatus;
  retstr->icloudIdentifier = icloudIdentifier;
  retstr->dsid = dsid;
  retstr->authToken = authToken;
  retstr->authTokenStatus = v9;
  retstr->appToken = appToken;
  retstr->appHostName.value._countAndFlagsBits = appHostName.value._countAndFlagsBits;
  *(Swift::String_optional *)&retstr->appHostName.value._object = *(Swift::String_optional *)&appHostName.value._object;
  *(Swift::String_optional *)&retstr->apsEnvironment._object = *(Swift::String_optional *)((char *)&peopleURL - 8);
  retstr->peopleURL.value._object = peopleURL.value._object;
}

uint64_t sub_23B73F774(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23B73F7AC + 4 * byte_23B79A440[a1]))(0xD000000000000010, 0x800000023B7A0B50);
}

uint64_t sub_23B73F7AC()
{
  return 1684632420;
}

uint64_t sub_23B73F7BC()
{
  return 0x656B6F5468747561;
}

uint64_t sub_23B73F7E0()
{
  return 0x656B6F5468747561;
}

uint64_t sub_23B73F804()
{
  return 0x6E656B6F54707061;
}

uint64_t sub_23B73F81C()
{
  return 0x4E74736F48707061;
}

uint64_t sub_23B73F83C()
{
  return 0x7269766E45737061;
}

uint64_t sub_23B73F860()
{
  return 0x5255656C706F6570;
}

uint64_t sub_23B73F87C()
{
  unsigned __int8 *v0;

  return sub_23B73F774(*v0);
}

uint64_t sub_23B73F884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B740628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B73F8A8()
{
  sub_23B73FB84();
  return sub_23B796FA4();
}

uint64_t sub_23B73F8D0()
{
  sub_23B73FB84();
  return sub_23B796FB0();
}

uint64_t Account.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[9];
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v21 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v18 = *(_QWORD *)(v1 + 40);
  v19 = v8;
  v17 = *(unsigned __int8 *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 64);
  v16[7] = *(_QWORD *)(v1 + 56);
  v16[8] = v9;
  v10 = *(_QWORD *)(v1 + 72);
  v16[5] = *(_QWORD *)(v1 + 80);
  v16[6] = v10;
  v11 = *(_QWORD *)(v1 + 96);
  v16[3] = *(_QWORD *)(v1 + 88);
  v16[4] = v11;
  v12 = *(_QWORD *)(v1 + 104);
  v16[1] = *(_QWORD *)(v1 + 112);
  v16[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B73FB84();
  sub_23B796F8C();
  v31 = 0;
  v13 = v22;
  sub_23B796E78();
  if (!v13)
  {
    v14 = v17;
    v30 = 1;
    sub_23B796E78();
    v29 = 2;
    sub_23B796E54();
    v28 = v14;
    v27 = 3;
    sub_23B73FBC8();
    sub_23B796EA8();
    v26 = 4;
    sub_23B796E78();
    v25 = 5;
    sub_23B796E54();
    v24 = 6;
    sub_23B796E78();
    v23 = 7;
    sub_23B796E54();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23B73FB84()
{
  unint64_t result;

  result = qword_256A48B88;
  if (!qword_256A48B88)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A6AC, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48B88);
  }
  return result;
}

unint64_t sub_23B73FBC8()
{
  unint64_t result;

  result = qword_256A48B90;
  if (!qword_256A48B90)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Account.TokenStatus, &type metadata for Account.TokenStatus);
    atomic_store(result, (unint64_t *)&qword_256A48B90);
  }
  return result;
}

uint64_t Account.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  unsigned __int8 v51;
  char v52;
  char v53;
  char v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B73FB84();
  sub_23B796F80();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v44 = a2;
    v54 = 0;
    v10 = sub_23B796E00();
    v12 = v11;
    v53 = 1;
    swift_bridgeObjectRetain();
    v40 = sub_23B796E00();
    v41 = v10;
    v52 = 2;
    v14 = v13;
    swift_bridgeObjectRetain();
    v15 = sub_23B796DDC();
    v45 = v14;
    v17 = v16;
    v39 = v15;
    v50 = 3;
    sub_23B740164();
    swift_bridgeObjectRetain();
    sub_23B796E30();
    v38 = v51;
    v49 = 4;
    v18 = sub_23B796E00();
    v43 = v19;
    v37 = v18;
    v48 = 5;
    swift_bridgeObjectRetain();
    v35 = sub_23B796DDC();
    v36 = v12;
    v47 = 6;
    v42 = v20;
    swift_bridgeObjectRetain();
    v21 = sub_23B796E00();
    v23 = v22;
    v34 = v21;
    v46 = 7;
    swift_bridgeObjectRetain();
    v24 = sub_23B796DDC();
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33 = v24;
    v27(v8, v5);
    swift_bridgeObjectRetain();
    v28 = v44;
    v29 = v45;
    v30 = v42;
    v31 = v36;
    *v44 = v41;
    v28[1] = v31;
    v28[2] = v40;
    v28[3] = v29;
    v28[4] = v39;
    v28[5] = v17;
    *((_BYTE *)v28 + 48) = v38;
    v32 = v43;
    v28[7] = v37;
    v28[8] = v32;
    v28[9] = v35;
    v28[10] = v30;
    v28[11] = v34;
    v28[12] = v23;
    v28[13] = v33;
    v28[14] = v26;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_23B740164()
{
  unint64_t result;

  result = qword_256A48BA0;
  if (!qword_256A48BA0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Account.TokenStatus, &type metadata for Account.TokenStatus);
    atomic_store(result, (unint64_t *)&qword_256A48BA0);
  }
  return result;
}

unint64_t sub_23B7401AC()
{
  unint64_t result;

  result = qword_256A48BA8;
  if (!qword_256A48BA8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Account.TokenStatus, &type metadata for Account.TokenStatus);
    atomic_store(result, (unint64_t *)&qword_256A48BA8);
  }
  return result;
}

uint64_t sub_23B7401F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Account.init(from:)(a1, a2);
}

uint64_t sub_23B740204(_QWORD *a1)
{
  return Account.encode(to:)(a1);
}

uint64_t assignWithCopy for Account(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Account(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for Account.TokenStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B740414 + 4 * byte_23B79A44D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B740448 + 4 * byte_23B79A448[v4]))();
}

uint64_t sub_23B740448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B740450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B740458);
  return result;
}

uint64_t sub_23B740464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B74046CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B740470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B740478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for Account.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23B7404D0 + 4 * byte_23B79A457[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23B740504 + 4 * byte_23B79A452[v4]))();
}

uint64_t sub_23B740504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B74050C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B740514);
  return result;
}

uint64_t sub_23B740520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B740528);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23B74052C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B740534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Account.CodingKeys()
{
  return &type metadata for Account.CodingKeys;
}

unint64_t sub_23B740554()
{
  unint64_t result;

  result = qword_256A48BB0;
  if (!qword_256A48BB0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A684, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48BB0);
  }
  return result;
}

unint64_t sub_23B74059C()
{
  unint64_t result;

  result = qword_256A48BB8;
  if (!qword_256A48BB8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A5F4, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48BB8);
  }
  return result;
}

unint64_t sub_23B7405E4()
{
  unint64_t result;

  result = qword_256A48BC0;
  if (!qword_256A48BC0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79A61C, &type metadata for Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A48BC0);
  }
  return result;
}

uint64_t sub_23B740628(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023B7A0B50 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632420 && a2 == 0xE400000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656B6F5468747561 && a2 == 0xE90000000000006ELL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656B6F5468747561 && a2 == 0xEF7375746174536ELL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E656B6F54707061 && a2 == 0xE800000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4E74736F48707061 && a2 == 0xEB00000000656D61 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7269766E45737061 && a2 == 0xEE00746E656D6E6FLL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5255656C706F6570 && a2 == 0xE90000000000004CLL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_23B7409C4()
{
  unint64_t result;

  result = qword_256A48BC8;
  if (!qword_256A48BC8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Account.TokenStatus, &type metadata for Account.TokenStatus);
    atomic_store(result, &qword_256A48BC8);
  }
  return result;
}

uint64_t sub_23B740A08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 416) = a2;
  *(_QWORD *)(v4 + 424) = v3;
  *(_BYTE *)(v4 + 472) = a3;
  *(_QWORD *)(v4 + 408) = a1;
  v5 = type metadata accessor for Friend();
  *(_QWORD *)(v4 + 432) = v5;
  *(_QWORD *)(v4 + 440) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 448) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B740A70()
{
  uint64_t v0;
  int v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v20;
  uint64_t v21;

  v1 = *(unsigned __int8 *)(v0 + 472);
  v2 = *(_OWORD **)(v0 + 416);
  v4 = v2[1];
  v3 = v2[2];
  *(_OWORD *)(v0 + 16) = *v2;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  v5 = v2[6];
  v7 = v2[3];
  v6 = v2[4];
  *(_OWORD *)(v0 + 96) = v2[5];
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = v6;
  v8 = v2[10];
  v10 = v2[7];
  v9 = v2[8];
  *(_OWORD *)(v0 + 160) = v2[9];
  *(_OWORD *)(v0 + 176) = v8;
  *(_OWORD *)(v0 + 128) = v10;
  *(_OWORD *)(v0 + 144) = v9;
  if (v1 == 1)
  {
    if (qword_254303288 != -1)
      swift_once();
    v11 = sub_23B7969BC();
    __swift_project_value_buffer(v11, (uint64_t)qword_254309170);
    sub_23B6F4E8C(v0 + 16);
    v12 = sub_23B7969A4();
    v13 = sub_23B796C38();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v21 = v15;
      *(_DWORD *)v14 = 141558275;
      *(_QWORD *)(v0 + 392) = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v14 + 12) = 2081;
      v16 = *(_QWORD *)(v0 + 16);
      v17 = *(_QWORD *)(v0 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 400) = sub_23B6FB388(v16, v17, &v21);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B6F5744(v0 + 16);
      _os_log_impl(&dword_23B6EB000, v12, v13, "Query Friend:%{private,mask.hash}s's prettyName through cache", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v15, -1, -1);
      MEMORY[0x23B86C754](v14, -1, -1);
    }
    else
    {
      sub_23B6F5744(v0 + 16);
    }

    sub_23B743EA8();
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v20;
    *v20 = v0;
    v20[1] = sub_23B740D28;
    return sub_23B796EC0();
  }
  else
  {
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 464) = v18;
    *v18 = v0;
    v18[1] = sub_23B740FCC;
    return sub_23B741018(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416));
  }
}

uint64_t sub_23B740D28()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B740D80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 424)
                 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection__friendsWithPrettyName);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 440);
      v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      swift_bridgeObjectRetain();
      v26 = *(_QWORD *)(v4 + 72);
      for (i = v3 - 1; ; --i)
      {
        v7 = *(_OWORD **)(v0 + 448);
        sub_23B725660(v5, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        v9 = v7[1];
        v8 = v7[2];
        *(_OWORD *)(v0 + 192) = *v7;
        *(_OWORD *)(v0 + 208) = v9;
        *(_OWORD *)(v0 + 224) = v8;
        v10 = v7[6];
        v12 = v7[3];
        v11 = v7[4];
        *(_OWORD *)(v0 + 272) = v7[5];
        *(_OWORD *)(v0 + 288) = v10;
        *(_OWORD *)(v0 + 240) = v12;
        *(_OWORD *)(v0 + 256) = v11;
        v13 = v7[10];
        v15 = v7[7];
        v14 = v7[8];
        *(_OWORD *)(v0 + 336) = v7[9];
        *(_OWORD *)(v0 + 352) = v13;
        *(_OWORD *)(v0 + 304) = v15;
        *(_OWORD *)(v0 + 320) = v14;
        v16 = sub_23B796A58();
        v18 = v17;
        if (v16 == sub_23B796A58() && v18 == v19)
        {
          sub_23B6F4E8C(v0 + 192);
          swift_bridgeObjectRelease_n();
          sub_23B6F5744(v0 + 192);
LABEL_11:
          v22 = *(_QWORD *)(v0 + 440);
          v21 = *(_QWORD *)(v0 + 448);
          v23 = *(_QWORD *)(v0 + 432);
          v24 = *(_QWORD *)(v0 + 408);
          swift_bridgeObjectRelease();
          sub_23B743904(v21, v24);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v23);
          goto LABEL_14;
        }
        v20 = sub_23B796ECC();
        sub_23B6F4E8C(v0 + 192);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23B6F5744(v0 + 192);
        if ((v20 & 1) != 0)
          goto LABEL_11;
        sub_23B700B04(*(_QWORD *)(v0 + 448), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        if (!i)
          break;
        v5 += v26;
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 440) + 56))(*(_QWORD *)(v0 + 408), 1, 1, *(_QWORD *)(v0 + 432));
LABEL_14:
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 440) + 56))(*(_QWORD *)(v0 + 408), 1, 1, *(_QWORD *)(v0 + 432));
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B740FCC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B741018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[80] = v2;
  v3[79] = a2;
  v3[78] = a1;
  v4 = type metadata accessor for Friend();
  v3[81] = v4;
  v3[82] = *(_QWORD *)(v4 - 8);
  v3[83] = swift_task_alloc();
  v3[84] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B7410C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  id v16;
  char **v17;
  id v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void **v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  id v57;
  void *v58;
  id v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD v118[11];
  uint64_t v119;

  v119 = *MEMORY[0x24BDAC8D0];
  if (qword_254303288 != -1)
    goto LABEL_27;
  while (1)
  {
    v1 = *(_QWORD *)(v0 + 672);
    v2 = *(_QWORD *)(v0 + 632);
    v3 = sub_23B7969BC();
    *(_QWORD *)(v0 + 680) = __swift_project_value_buffer(v3, (uint64_t)qword_254309170);
    sub_23B725660(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v4 = sub_23B7969A4();
    v5 = sub_23B796C38();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(uint64_t **)(v0 + 672);
    if (v6)
    {
      v8 = swift_slowAlloc();
      v114 = swift_slowAlloc();
      *(_QWORD *)&v118[0] = v114;
      *(_DWORD *)v8 = 141558275;
      *(_QWORD *)(v0 + 608) = 1752392040;
      sub_23B796C68();
      *(_WORD *)(v8 + 12) = 2081;
      v10 = *v7;
      v9 = v7[1];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 616) = sub_23B6FB388(v10, v9, (uint64_t *)v118);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B700B04((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      _os_log_impl(&dword_23B6EB000, v4, v5, "Query Friend:%{private,mask.hash}s through Contact", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v114, -1, -1);
      MEMORY[0x23B86C754](v8, -1, -1);
    }
    else
    {
      sub_23B700B04((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    }

    v11 = *(uint64_t **)(v0 + 632);
    v12 = *v11;
    v13 = v11[1];
    *(_QWORD *)(v0 + 544) = *v11;
    *(_QWORD *)(v0 + 552) = v13;
    *(_QWORD *)(v0 + 560) = 64;
    *(_QWORD *)(v0 + 568) = 0xE100000000000000;
    sub_23B6F8270();
    v14 = sub_23B796C98();
    v15 = (void *)objc_opt_self();
    v111 = v13;
    v112 = v12;
    if ((v14 & 1) != 0)
    {
      v16 = (id)sub_23B796A1C();
      v17 = &selRef_predicateForContactsMatchingEmailAddress_;
    }
    else
    {
      v18 = objc_allocWithZone(MEMORY[0x24BDBAD88]);
      swift_bridgeObjectRetain();
      v19 = (void *)sub_23B796A1C();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend(v18, sel_initWithStringValue_, v19);

      v17 = &selRef_predicateForContactsMatchingPhoneNumber_;
    }
    v115 = objc_msgSend(v15, *v17, v16);
    *(_QWORD *)(v0 + 688) = v115;

    __swift_instantiateConcreteTypeFromMangledName(&qword_256A48BF0);
    v20 = swift_allocObject();
    v21 = (void **)MEMORY[0x24BDBA3F0];
    *(_OWORD *)(v20 + 16) = xmmword_23B79A700;
    v22 = *v21;
    v23 = (void *)*MEMORY[0x24BDBA2E0];
    *(_QWORD *)(v20 + 32) = *v21;
    *(_QWORD *)(v20 + 40) = v23;
    v24 = (void *)*MEMORY[0x24BDBA2C8];
    v25 = (void *)*MEMORY[0x24BDBA2C0];
    *(_QWORD *)(v20 + 48) = *MEMORY[0x24BDBA2C8];
    *(_QWORD *)(v20 + 56) = v25;
    v26 = (void *)*MEMORY[0x24BDBA310];
    v27 = (void *)*MEMORY[0x24BDBA328];
    v28 = (void **)MEMORY[0x24BDBA288];
    *(_QWORD *)(v20 + 64) = *MEMORY[0x24BDBA310];
    *(_QWORD *)(v20 + 72) = v27;
    v29 = *v28;
    v30 = (void *)*MEMORY[0x24BDBA348];
    *(_QWORD *)(v20 + 80) = *v28;
    *(_QWORD *)(v20 + 88) = v30;
    v113 = (void *)*MEMORY[0x24BDBA378];
    *(_QWORD *)(v20 + 96) = *MEMORY[0x24BDBA378];
    *(_QWORD *)&v118[0] = v20;
    sub_23B796B24();
    *(_QWORD *)(v0 + 600) = *(_QWORD *)&v118[0];
    v31 = (void *)objc_opt_self();
    v32 = v22;
    v33 = v23;
    v34 = v24;
    v35 = v25;
    v36 = v26;
    v37 = v27;
    v38 = v29;
    v39 = v30;
    v40 = v31;
    v41 = v113;
    v42 = objc_msgSend(v31, sel_descriptorForRequiredKeysForStyle_, 0);
    MEMORY[0x23B86BE48]();
    if (*(_QWORD *)((*(_QWORD *)(v0 + 600) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 600) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23B796B30();
    sub_23B796B3C();
    sub_23B796B24();
    v43 = sub_23B76B03C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48BF8);
    v44 = (void *)sub_23B796AF4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 592) = 0;
    v45 = objc_msgSend(v43, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v115, v44, v0 + 592);

    v46 = *(void **)(v0 + 592);
    if (!v45)
      break;
    sub_23B743E0C();
    v47 = sub_23B796B0C();
    v48 = v46;

    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      v49 = sub_23B796D7C();
      swift_bridgeObjectRelease();
      if (!v49)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        v55 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 720) = v55;
        *v55 = v0;
        v55[1] = sub_23B741C44;
        return sub_23B742238(*(_QWORD *)(v0 + 632));
      }
    }
    else
    {
      v49 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v49)
        goto LABEL_20;
    }
    v50 = 0;
    while (1)
    {
      v51 = (v47 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x23B86C04C](v50, v47)
          : *(id *)(v47 + 8 * v50 + 32);
      v52 = v51;
      *(_QWORD *)(v0 + 696) = v51;
      v53 = v50 + 1;
      if (__OFADD__(v50, 1))
        break;
      v54 = objc_msgSend(v40, sel_stringFromContact_style_, v51, 0);
      if (v54)
      {
        v68 = v54;
        v69 = *(_QWORD *)(v0 + 664);
        v70 = *(int **)(v0 + 648);
        v71 = *(_QWORD *)(v0 + 632);
        v72 = sub_23B796A28();
        v116 = v73;
        v117 = v72;

        swift_bridgeObjectRelease();
        v74 = *(_BYTE *)(v71 + 32);
        v75 = *(_QWORD *)(v71 + 56);
        v76 = *(_QWORD *)(v71 + 64);
        v77 = *(_BYTE *)(v71 + 104);
        v78 = *(_QWORD *)(v71 + 144);
        v79 = *(_QWORD *)(v71 + 152);
        v80 = *(_OWORD *)(v71 + 16);
        v81 = *(_OWORD *)(v71 + 40);
        v82 = *(_OWORD *)(v71 + 72);
        v83 = *(_OWORD *)(v71 + 88);
        v84 = *(_OWORD *)(v71 + 112);
        v85 = *(_OWORD *)(v71 + 128);
        v86 = *(_OWORD *)(v71 + 160);
        *(_QWORD *)(v0 + 16) = v112;
        *(_QWORD *)(v0 + 24) = v111;
        *(_OWORD *)(v0 + 32) = v80;
        *(_BYTE *)(v0 + 48) = v74;
        *(_OWORD *)(v0 + 56) = v81;
        *(_QWORD *)(v0 + 72) = v75;
        *(_QWORD *)(v0 + 80) = v76;
        *(_OWORD *)(v0 + 88) = v82;
        *(_OWORD *)(v0 + 104) = v83;
        *(_BYTE *)(v0 + 120) = v77;
        *(_OWORD *)(v0 + 128) = v84;
        *(_OWORD *)(v0 + 144) = v85;
        *(_QWORD *)(v0 + 160) = v78;
        *(_QWORD *)(v0 + 168) = v79;
        *(_OWORD *)(v0 + 176) = v86;
        v87 = *(_OWORD *)(v0 + 128);
        v88 = *(_OWORD *)(v0 + 160);
        v89 = *(_OWORD *)(v0 + 176);
        v118[8] = *(_OWORD *)(v0 + 144);
        v118[9] = v88;
        v118[10] = v89;
        v90 = *(_OWORD *)(v0 + 64);
        v91 = *(_OWORD *)(v0 + 96);
        v92 = *(_OWORD *)(v0 + 112);
        v118[4] = *(_OWORD *)(v0 + 80);
        v118[5] = v91;
        v118[6] = v92;
        v118[7] = v87;
        v93 = *(_OWORD *)(v0 + 32);
        v94 = *(_OWORD *)(v0 + 48);
        v118[0] = *(_OWORD *)(v0 + 16);
        v118[1] = v93;
        v118[2] = v94;
        v118[3] = v90;
        sub_23B6F4E8C(v0 + 16);
        v95 = objc_msgSend(v52, sel_identifier);
        v96 = sub_23B796A28();
        v98 = v97;

        swift_bridgeObjectRetain();
        Handle.init(with:prettyName:contactIdentifier:siblingIdentifiers:)(v118, v117, v116, v96, v98, v79, v0 + 192);
        LOBYTE(v96) = *(_BYTE *)(v71 + 176);
        sub_23B6FDE3C(v71 + v70[10], v69 + v70[10], &qword_254302B18);
        sub_23B6FDE3C(v71 + v70[12], v69 + v70[12], &qword_254302B18);
        sub_23B7251FC((_OWORD *)(v0 + 368));
        v99 = *(_OWORD *)(v0 + 192);
        v100 = *(_OWORD *)(v0 + 224);
        *(_OWORD *)(v69 + 16) = *(_OWORD *)(v0 + 208);
        *(_OWORD *)(v69 + 32) = v100;
        *(_OWORD *)v69 = v99;
        v101 = *(_OWORD *)(v0 + 240);
        v102 = *(_OWORD *)(v0 + 256);
        v103 = *(_OWORD *)(v0 + 288);
        *(_OWORD *)(v69 + 80) = *(_OWORD *)(v0 + 272);
        *(_OWORD *)(v69 + 96) = v103;
        *(_OWORD *)(v69 + 48) = v101;
        *(_OWORD *)(v69 + 64) = v102;
        v104 = *(_OWORD *)(v0 + 304);
        v105 = *(_OWORD *)(v0 + 320);
        v106 = *(_OWORD *)(v0 + 352);
        *(_OWORD *)(v69 + 144) = *(_OWORD *)(v0 + 336);
        *(_OWORD *)(v69 + 160) = v106;
        *(_OWORD *)(v69 + 112) = v104;
        *(_OWORD *)(v69 + 128) = v105;
        *(_BYTE *)(v69 + 176) = v96;
        *(_BYTE *)(v69 + v70[14]) = 2;
        *(_DWORD *)(v69 + 177) = 0;
        *(_BYTE *)(v69 + v70[11]) = 2;
        sub_23B6FC8F4(v0 + 368, v69 + v70[13], (uint64_t *)&unk_254302520);
        v107 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 704) = v107;
        *v107 = v0;
        v107[1] = sub_23B741AD4;
        return sub_23B742238(*(_QWORD *)(v0 + 664));
      }

      ++v50;
      if (v53 == v49)
        goto LABEL_20;
    }
    __break(1u);
LABEL_27:
    swift_once();
  }
  v57 = v46;
  v58 = (void *)sub_23B7967E8();

  swift_willThrow();
  v59 = v58;
  v60 = v58;
  v61 = sub_23B7969A4();
  v62 = sub_23B796C20();
  if (os_log_type_enabled(v61, v62))
  {
    v63 = (uint8_t *)swift_slowAlloc();
    v64 = swift_slowAlloc();
    *(_QWORD *)&v118[0] = v64;
    *(_DWORD *)v63 = 136446210;
    *(_QWORD *)(v0 + 584) = v58;
    v65 = v58;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v66 = sub_23B796A4C();
    *(_QWORD *)(v0 + 576) = sub_23B6FB388(v66, v67, (uint64_t *)v118);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v61, v62, "Contacts match error %{public}s", v63, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v64, -1, -1);
    MEMORY[0x23B86C754](v63, -1, -1);

  }
  else
  {

  }
  v108 = *(_QWORD *)(v0 + 656);
  v109 = *(_QWORD *)(v0 + 648);
  v110 = *(_QWORD *)(v0 + 624);
  sub_23B725660(*(_QWORD *)(v0 + 632), v110, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v108 + 56))(v110, 0, 1, v109);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B741AD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 712) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B741B84()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 664);
  v3 = *(_QWORD *)(v0 + 656);
  v4 = *(_QWORD *)(v0 + 648);
  v5 = *(_QWORD *)(v0 + 624);

  sub_23B743904(v2, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B741C44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 728) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B741CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 648);
  v3 = *(_QWORD *)(v0 + 632);
  v4 = *(_QWORD *)(v0 + 624);

  sub_23B725660(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v4, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B741DB4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 664);

  sub_23B700B04(v2, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  v3 = *(void **)(v0 + 712);
  v4 = v3;
  v5 = v3;
  v6 = sub_23B7969A4();
  v7 = sub_23B796C20();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17[0] = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 584) = v3;
    v10 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v11 = sub_23B796A4C();
    *(_QWORD *)(v0 + 576) = sub_23B6FB388(v11, v12, v17);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v6, v7, "Contacts match error %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);

  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 656);
  v14 = *(_QWORD *)(v0 + 648);
  v15 = *(_QWORD *)(v0 + 624);
  sub_23B725660(*(_QWORD *)(v0 + 632), v15, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B742004()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];

  v1 = *(void **)(v0 + 728);
  v2 = v1;
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15[0] = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 584) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v9 = sub_23B796A4C();
    *(_QWORD *)(v0 + 576) = sub_23B6FB388(v9, v10, v15);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v4, v5, "Contacts match error %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);

  }
  else
  {

  }
  v11 = *(_QWORD *)(v0 + 656);
  v12 = *(_QWORD *)(v0 + 648);
  v13 = *(_QWORD *)(v0 + 624);
  sub_23B725660(*(_QWORD *)(v0 + 632), v13, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B742238(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B742294()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t (*v2)();
  uint64_t (*v3)();
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  int64_t v9;
  unint64_t *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0 + 16;
  v3 = sub_23B76B0AC();
  if (*(_QWORD *)v2)
  {
    v4 = v2;
    v5 = *(_QWORD *)(v0 + 80);
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = v5;
    v7 = 0;
    v8 = sub_23B743948((uint64_t (*)(unint64_t))sub_23B743E48);
    v9 = *(_QWORD *)(*(_QWORD *)v4 + 16);
    if (v9 < v8)
    {
      __break(1u);
LABEL_11:
      v1 = sub_23B705640(0, *(_QWORD *)(v1 + 16) + 1, 1, v1);
      *v7 = v1;
      goto LABEL_6;
    }
    sub_23B743C64(v8, v9);
    swift_task_dealloc();
  }
  v6 = v0 + 48;
  ((void (*)(uint64_t, _QWORD))v3)(v0 + 16, 0);
  v4 = sub_23B76B0AC();
  if (!*v10)
    goto LABEL_9;
  v7 = v10;
  sub_23B725660(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  v1 = *v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_11;
LABEL_6:
  v13 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  if (v13 >= v12 >> 1)
  {
    v1 = sub_23B705640(v12 > 1, v13 + 1, 1, v1);
    *v7 = v1;
  }
  v15 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v1 + 16) = v13 + 1;
  sub_23B743904(v14, v1+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v13);
LABEL_9:
  ((void (*)(uint64_t, _QWORD))v4)(v6, 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B742424()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23B742478();
    return swift_release();
  }
  return result;
}

uint64_t sub_23B742478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B796B84();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_23B6F7190((uint64_t)v4, &qword_254302FD8);
  }
  else
  {
    sub_23B796B78();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_23B796B48();
      v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23B742638(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23B796764();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23B796758();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23B7426DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302F60);
  v4[6] = swift_task_alloc();
  v4[7] = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B742760()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23B743EA8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_23B7427EC;
  return sub_23B796EC0();
}

uint64_t sub_23B7427EC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B742844()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 40)
                 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection__friendsWithPrettyName);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 80) = *v1;
  if (v2)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_isSyncingContact) = 1;
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v0 + 88) = v3;
    swift_bridgeObjectRetain();
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 56);
      v5 = *(_QWORD *)(v0 + 64);
      v6 = *(_DWORD *)(v4 + 80);
      *(_DWORD *)(v0 + 128) = v6;
      *(_QWORD *)(v0 + 96) = *(_QWORD *)(v4 + 72);
      *(_QWORD *)(v0 + 104) = 0;
      v7 = *(_QWORD *)(v0 + 80) + ((v6 + 32) & ~(unint64_t)v6);
      swift_bridgeObjectRetain();
      sub_23B725660(v7, v5, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v8;
      *v8 = v0;
      v8[1] = sub_23B74296C;
      return sub_23B741018(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64));
    }
    sub_23B76B474();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74296C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7429D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 104) + 1;
  sub_23B6F7190(*(_QWORD *)(v0 + 48), &qword_254302F60);
  sub_23B700B04(v2, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  if (v3 == v1)
  {
    swift_bridgeObjectRelease();
    sub_23B76B474();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104) + 1;
    *(_QWORD *)(v0 + 104) = v6;
    sub_23B725660(*(_QWORD *)(v0 + 80)+ ((*(unsigned __int8 *)(v0 + 128) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 128))+ v5 * v6, *(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v7;
    *v7 = v0;
    v7[1] = sub_23B74296C;
    return sub_23B741018(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_23B742AE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  sub_23B700B04(v1, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B742B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23B796B84();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23B796B78();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_23B6F7190(a1, &qword_254302FD8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B796B48();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_23B742C84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = v0;
  v1[6] = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F78);
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302510);
  v1[10] = v3;
  v1[11] = *(_QWORD *)(v3 - 8);
  v1[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B8);
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B742D40()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_254303288 != -1)
    swift_once();
  v0 = sub_23B7969BC();
  __swift_project_value_buffer(v0, (uint64_t)qword_254309170);
  v1 = sub_23B7969A4();
  v2 = sub_23B796C38();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B6EB000, v1, v2, "Query Friend  start an internal friend update stream to listen for friendship changes and update the cache as needed", v3, 2u);
    MEMORY[0x23B86C754](v3, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_23B742E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 40)
     + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_internalFollowingContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v2, v1, &qword_2543032B8);
  return swift_task_switch();
}

uint64_t sub_23B742EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  sub_23B6F7190(v1, &qword_2543032B8);
  if (v3 == 1)
  {
    v5 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 64);
    type metadata accessor for FriendStreamChange();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v7, *MEMORY[0x24BEE6A10], v8);
    sub_23B796BC0();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B742FD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v2;
  *v2 = v0;
  v2[1] = sub_23B743068;
  return sub_23B796704();
}

uint64_t sub_23B743068()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7430DC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B743124()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B743180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_23B77520C((uint64_t)v9, (uint64_t)&unk_256A48C40, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_23B7432C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B8);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B743338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v2, 0, 1, v5);
  sub_23B6FC8F4(v2, v1, &qword_2543032B8);
  v7 = v4 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_internalFollowingContinuation;
  swift_beginAccess();
  sub_23B7440DC(v1, v7);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B743420(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302F60);
  v2[8] = swift_task_alloc();
  type metadata accessor for Friend();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for FriendStreamChange();
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B7434D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)();
  int EnumCaseMultiPayload;
  _QWORD *v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  _QWORD *v12;

  v2 = (uint64_t *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_isSyncingContact) = 1;
  v4 = type metadata accessor for FriendStreamChange;
  sub_23B725660(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
LABEL_7:
      sub_23B700B04(*v2, (uint64_t (*)(_QWORD))v4);
      sub_23B76B474();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v2 = (uint64_t *)(v0 + 72);
    sub_23B743904(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
    v7 = sub_23B76B0AC();
    if (!*v6)
    {
LABEL_6:
      ((void (*)(uint64_t, _QWORD))v7)(v0 + 16, 0);
      v4 = type metadata accessor for Friend;
      goto LABEL_7;
    }
    v8 = v6;
    v9 = *v2;
    *(_QWORD *)(swift_task_alloc() + 16) = v9;
    result = sub_23B743948((uint64_t (*)(unint64_t))sub_23B744124);
    v11 = *(_QWORD *)(*v8 + 16);
    if (v11 >= result)
    {
      sub_23B743C64(result, v11);
      swift_task_dealloc();
      goto LABEL_6;
    }
    __break(1u);
  }
  else
  {
    sub_23B743904(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v12;
    *v12 = v0;
    v12[1] = sub_23B74367C;
    return sub_23B741018(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 80));
  }
  return result;
}

uint64_t sub_23B74367C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7436E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_23B6F7190(*(_QWORD *)(v0 + 64), &qword_254302F60);
  sub_23B700B04(v1, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  sub_23B76B474();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B743770()
{
  uint64_t v0;

  sub_23B700B04(*(_QWORD *)(v0 + 80), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7437E0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _OWORD v18[11];
  _OWORD v19[11];

  v2 = a1[9];
  v18[8] = a1[8];
  v18[9] = v2;
  v18[10] = a1[10];
  v3 = a1[5];
  v18[4] = a1[4];
  v18[5] = v3;
  v4 = a1[7];
  v18[6] = a1[6];
  v18[7] = v4;
  v5 = a1[1];
  v18[0] = *a1;
  v18[1] = v5;
  v6 = a1[3];
  v18[2] = a1[2];
  v18[3] = v6;
  v7 = a2[9];
  v19[8] = a2[8];
  v19[9] = v7;
  v19[10] = a2[10];
  v8 = a2[5];
  v19[4] = a2[4];
  v19[5] = v8;
  v9 = a2[7];
  v19[6] = a2[6];
  v19[7] = v9;
  v10 = a2[1];
  v19[0] = *a2;
  v19[1] = v10;
  v11 = a2[3];
  v19[2] = a2[2];
  v19[3] = v11;
  v12 = sub_23B796A58();
  v14 = v13;
  if (v12 == sub_23B796A58() && v14 == v15)
    v16 = 1;
  else
    v16 = sub_23B796ECC();
  sub_23B6F4E8C((uint64_t)v18);
  sub_23B6F4E8C((uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B6F5744((uint64_t)v19);
  sub_23B6F5744((uint64_t)v18);
  return v16 & 1;
}

uint64_t sub_23B743904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Friend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B743948(uint64_t (*a1)(unint64_t))
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v1;
  v5 = type metadata accessor for Friend();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v30 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v35 = (uint64_t)&v30 - v11;
  v12 = *v1;
  v13 = *(_QWORD *)(*v1 + 16);
  if (!v13)
    return 0;
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v16 = 0;
  v31 = v14;
  while (1)
  {
    v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v12 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    v19 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v19)
      return v16;
    v20 = v15 + v14;
    v21 = v16 + 1;
    v30 = v1;
    v32 = v15;
    while (v21 < v19)
    {
      v22 = v3;
      v36 = v20;
      v23 = v35;
      sub_23B725660(v12 + v20, v35, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      v24 = a1(v23);
      result = sub_23B700B04(v23, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      if ((v24 & 1) != 0)
      {
        v3 = v22;
        v25 = v32;
      }
      else
      {
        v3 = v22;
        v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v26 = *v3;
          v27 = *(_QWORD *)(*v3 + 16);
          if (v16 >= v27)
            goto LABEL_33;
          result = sub_23B725660(v26 + v31 + v16 * v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          if (v21 >= v27)
            goto LABEL_34;
          sub_23B725660(v26 + v36, v34, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          result = swift_isUniquelyReferenced_nonNull_native();
          v3 = v30;
          *v30 = v26;
          if ((result & 1) == 0)
          {
            result = sub_23B743C50(v26);
            v26 = result;
            *v3 = result;
          }
          if (v16 >= *(_QWORD *)(v26 + 16))
            goto LABEL_35;
          result = sub_23B743E64(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(_QWORD *)(*v3 + 16))
            goto LABEL_36;
          result = sub_23B743E64(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_31;
      }
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_30;
      v12 = *v3;
      v19 = *(_QWORD *)(*v3 + 16);
      ++v21;
      v20 = v36 + v25;
      if (v29 == v19)
        return v16;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23B743C50(unint64_t a1)
{
  return sub_23B705640(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23B743C64(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_23B705640(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_23B796DAC();
  __break(1u);
  return result;
}

unint64_t sub_23B743E0C()
{
  unint64_t result;

  result = qword_256A48C08;
  if (!qword_256A48C08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_256A48C08);
  }
  return result;
}

uint64_t sub_23B743E48(_OWORD *a1)
{
  uint64_t v1;

  return sub_23B7437E0(a1, *(_OWORD **)(v1 + 16)) & 1;
}

uint64_t sub_23B743E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Friend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23B743EA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254302F80;
  if (!qword_254302F80)
  {
    v1 = _s14descr250C98A29C20FriendshipConnectionCMa();
    result = MEMORY[0x23B86C6B8](&unk_23B79D0C8, v1);
    atomic_store(result, (unint64_t *)&qword_254302F80);
  }
  return result;
}

uint64_t sub_23B743EF0(uint64_t a1)
{
  uint64_t v1;

  return sub_23B76B300(a1, v1);
}

uint64_t sub_23B743EF8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B743F1C()
{
  return sub_23B742424();
}

uint64_t sub_23B743F24()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B743F50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B6FD1B0;
  return sub_23B7426DC(a1, v4, v5, v6);
}

uint64_t sub_23B743FBC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B743180(a1, v1);
}

uint64_t sub_23B743FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B744044(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B6FD1B0;
  return sub_23B7432C8(a1, v5, v6, v7, v8);
}

uint64_t sub_23B7440DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B744124(_OWORD *a1)
{
  return sub_23B743E48(a1) & 1;
}

void LocatePriority.schedulePriority.getter(char *a1@<X8>)
{
  _BYTE *v1;
  char v2;

  if (*v1 == 2)
    v2 = 2;
  else
    v2 = 1;
  *a1 = v2;
}

uint64_t LocatePriority.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B744184 + 4 * byte_23B79A718[*v0]))(0x776F6C6C6168732ELL, 0xE800000000000000);
}

unint64_t sub_23B744184()
{
  return 0xD000000000000015;
}

uint64_t sub_23B7441A4()
{
  return 0x6576696C2ELL;
}

unint64_t sub_23B7441B8()
{
  return 0xD000000000000014;
}

void *static LocatePriority.allCases.getter()
{
  return &unk_250C91AE8;
}

unint64_t sub_23B7441E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A48C50;
  if (!qword_256A48C50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A48C58);
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256A48C50);
  }
  return result;
}

void sub_23B744230(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C91B10;
}

uint64_t dispatch thunk of LocationProtocol.stopRefreshingLocation(for:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD1B0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of LocationProtocol.stopRefreshingAllLocations()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return v7(a1, a2);
}

uint64_t dispatch thunk of LocationProtocol.locations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A3D8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of LocationProtocol.subscribeToBackgroundProactiveLocations()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 40) + *(_QWORD *)(a2 + 40));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B70A3D8;
  return v7(a1, a2);
}

uint64_t dispatch thunk of LocationProtocol.latestLocations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A3D8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of LocationServiceClientProtocol.locationsForHandles(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of LocationServiceClientProtocol.locationsUnavailable(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t Address.init(mapItem:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t result;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v138 = 0;
  v139 = 0;
  v136 = 0;
  v137 = 0;
  v4 = objc_msgSend(a1, sel_name);
  if (v4)
  {
    v5 = v4;
    sub_23B796A28();

    v6 = sub_23B796AAC();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v134 = a1;
  v9 = objc_msgSend(a1, sel_geoAddress);
  v132 = v6;
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_formattedAddressLines);
    v12 = MEMORY[0x24BEE4AF8];
    if (v11)
    {
      v13 = v11;
      sub_23B796B00();

    }
    v14 = objc_msgSend(v10, sel_structuredAddress);
    v133 = v12;
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, sel_country);
      if (v16)
      {
        v17 = v16;
        sub_23B796A28();

        v18 = sub_23B796AAC();
        v127 = v19;
        v128 = v18;
      }
      else
      {
        v127 = 0;
        v128 = 0;
      }
      v23 = objc_msgSend(v15, sel_countryCode);
      if (v23)
      {
        v24 = v23;
        sub_23B796A28();

        v25 = sub_23B796AAC();
        v125 = v26;
        v126 = v25;
      }
      else
      {
        v125 = 0;
        v126 = 0;
      }
      v27 = objc_msgSend(v15, sel_thoroughfare);
      if (v27)
      {
        v28 = v27;
        sub_23B796A28();

        v29 = sub_23B796AAC();
        v31 = v30;
        v124 = v29;
        v138 = v29;
        v139 = v30;
      }
      else
      {
        v124 = 0;
        v31 = 0;
      }
      v32 = objc_msgSend(v15, sel_fullThoroughfare);
      if (v32)
      {
        v33 = v32;
        sub_23B796A28();

        v34 = sub_23B796AAC();
        v122 = v35;
        v123 = v34;
      }
      else
      {
        v122 = 0;
        v123 = 0;
      }
      v36 = objc_msgSend(v15, sel_locality);
      if (v36)
      {
        v37 = v36;
        sub_23B796A28();

        v121 = sub_23B796AAC();
        v136 = v121;
        v137 = v38;
        v20 = v38;
      }
      else
      {
        v121 = 0;
        v20 = 0;
      }
      v39 = objc_msgSend(v15, sel_administrativeAreaCode);
      if (v39)
      {
        v40 = v39;
        sub_23B796A28();

        v41 = sub_23B796AAC();
        v119 = v42;
        v120 = v41;
      }
      else
      {
        v119 = 0;
        v120 = 0;
      }
      v43 = objc_msgSend(v15, sel_administrativeArea);
      if (v43)
      {
        v44 = v43;
        sub_23B796A28();

        v45 = sub_23B796AAC();
        v117 = v46;
        v118 = v45;
      }
      else
      {
        v117 = 0;
        v118 = 0;
      }
      v47 = objc_msgSend(v15, sel_subAdministrativeArea);
      if (v47)
      {
        v48 = v47;
        sub_23B796A28();

        v49 = sub_23B796AAC();
        v115 = v50;
        v116 = v49;

      }
      else
      {

        v115 = 0;
        v116 = 0;
      }
      v22 = v134;
      v21 = v31;
    }
    else
    {

      v115 = 0;
      v116 = 0;
      v117 = 0;
      v118 = 0;
      v119 = 0;
      v120 = 0;
      v122 = 0;
      v123 = 0;
      v125 = 0;
      v126 = 0;
      v127 = 0;
      v128 = 0;
      v121 = 0;
      v20 = 0;
      v124 = 0;
      v21 = 0;
      v22 = a1;
    }
  }
  else
  {
    v115 = 0;
    v116 = 0;
    v117 = 0;
    v118 = 0;
    v119 = 0;
    v120 = 0;
    v122 = 0;
    v123 = 0;
    v125 = 0;
    v126 = 0;
    v127 = 0;
    v128 = 0;
    v121 = 0;
    v20 = 0;
    v124 = 0;
    v21 = 0;
    v133 = MEMORY[0x24BEE4AF8];
    v22 = a1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = objc_msgSend(v22, sel_geoAddress);
  if (v51
    && (v52 = v51,
        v53 = objc_msgSend(v51, sel_structuredAddress),
        v52,
        v53)
    && (v54 = objc_msgSend(v53, sel_fullThoroughfare), v53, v54))
  {
    v55 = sub_23B796A28();
    v113 = v56;
    v114 = v55;

  }
  else
  {
    v113 = 0;
    v114 = 0;
  }
  v57 = objc_msgSend(v22, sel_geoAddress);
  v135 = v21;
  if (v57
    && (v58 = v57,
        v59 = objc_msgSend(v57, sel_structuredAddress),
        v58,
        v59))
  {
    v60 = objc_msgSend(v59, sel_areaOfInterests);

    v61 = MEMORY[0x24BEE4AF8];
    if (v60)
    {
      sub_23B796B00();

    }
  }
  else
  {
    v61 = MEMORY[0x24BEE4AF8];
  }
  v62 = objc_msgSend(v22, sel_addressObject);
  v131 = v8;
  if (v62
    && (v63 = v62,
        v64 = objc_msgSend(v62, sel_fullAddressNoCurrentCountryWithMultiline_, 0),
        v63,
        v64))
  {
    v65 = sub_23B796A28();
    v111 = v66;
    v112 = v65;

  }
  else
  {
    v111 = 0;
    v112 = 0;
  }
  v67 = objc_msgSend(v22, sel_addressObject);
  v68 = v67;
  if (!v67)
    goto LABEL_56;
  v69 = objc_msgSend(v67, sel_cityAndAboveNoCurrentCountryWithFallback_, 0);
  if (!v69)
    goto LABEL_56;
  v70 = v69;
  v71 = sub_23B796A28();
  v73 = v72;

  v74 = HIBYTE(v73) & 0xF;
  if ((v73 & 0x2000000000000000) == 0)
    v74 = v71 & 0xFFFFFFFFFFFFLL;
  if (!v74)
  {
    swift_bridgeObjectRelease();
LABEL_56:
    v129 = 0;
    v130 = 0;
    goto LABEL_57;
  }
  v129 = v71;
  v130 = v73;
LABEL_57:
  v75 = sub_23B745488(&v138, &v136);
  v77 = v76;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v77)
    goto LABEL_61;
  v78 = HIBYTE(v77) & 0xF;
  if ((v77 & 0x2000000000000000) == 0)
    v78 = v75 & 0xFFFFFFFFFFFFLL;
  if (!v78)
  {
    swift_bridgeObjectRelease();
    v75 = 0;
    v77 = 0;
    if (v68)
    {
LABEL_62:
      v79 = objc_msgSend(v68, sel_shortAddress);
      v110 = v61;
      if (v79)
      {
        v80 = v79;
        v81 = v20;
        v82 = sub_23B796A28();
        v84 = v83;

        v85 = HIBYTE(v84) & 0xF;
        if ((v84 & 0x2000000000000000) == 0)
          v85 = v82 & 0xFFFFFFFFFFFFLL;
        if (v85)
        {
LABEL_71:
          v106 = objc_msgSend(v68, sel_fullAddressNoCurrentCountryWithMultiline_, 0);
          if (v106)
          {
            v107 = v106;
            v86 = sub_23B796A28();
            v87 = v108;

            swift_unknownObjectRelease();
            v109 = HIBYTE(v87) & 0xF;
            if ((v87 & 0x2000000000000000) == 0)
              v109 = v86 & 0xFFFFFFFFFFFFLL;
            if (v109)
              goto LABEL_78;
            swift_bridgeObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease();
          }
          v86 = 0;
          v87 = 0;
LABEL_78:
          v88 = v132;
          v89 = v131;
          v91 = v127;
          v90 = v128;
          v93 = v125;
          v92 = v126;
          v95 = v123;
          v94 = v124;
          v97 = v121;
          v96 = v122;
          v99 = v119;
          result = v120;
          v101 = v117;
          v100 = v118;
          v103 = v115;
          v102 = v116;
          v105 = v113;
          v104 = v114;
          v61 = v110;
          goto LABEL_79;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v81 = v20;
      }
      v82 = 0;
      v84 = 0;
      goto LABEL_71;
    }
  }
  else
  {
LABEL_61:
    if (v68)
      goto LABEL_62;
  }
  v81 = v20;
  swift_unknownObjectRelease();
  v86 = 0;
  v87 = 0;
  v82 = 0;
  v84 = 0;
  v88 = v132;
  v89 = v131;
  v91 = v127;
  v90 = v128;
  v93 = v125;
  v92 = v126;
  v95 = v123;
  v94 = v124;
  v97 = v121;
  v96 = v122;
  v99 = v119;
  result = v120;
  v101 = v117;
  v100 = v118;
  v103 = v115;
  v102 = v116;
  v105 = v113;
  v104 = v114;
LABEL_79:
  *a2 = v88;
  a2[1] = v89;
  a2[2] = v133;
  a2[3] = v90;
  a2[4] = v91;
  a2[5] = v92;
  a2[6] = v93;
  a2[7] = v94;
  a2[8] = v135;
  a2[9] = v95;
  a2[10] = v96;
  a2[11] = v97;
  a2[12] = v81;
  a2[13] = result;
  a2[14] = v99;
  a2[15] = v100;
  a2[16] = v101;
  a2[17] = v102;
  a2[18] = v103;
  a2[19] = v104;
  a2[20] = v105;
  a2[21] = v61;
  a2[22] = v112;
  a2[23] = v111;
  a2[24] = v129;
  a2[25] = v130;
  a2[26] = 0;
  a2[27] = 0;
  a2[28] = v75;
  a2[29] = v77;
  a2[30] = v82;
  a2[31] = v84;
  a2[32] = v86;
  a2[33] = v87;
  return result;
}

uint64_t Address.description.getter()
{
  uint64_t v0;

  sub_23B796CD4();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x23B86BE78](v0, MEMORY[0x24BEE0D00]);
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  MEMORY[0x23B86BE78]();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_23B745488(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  swift_beginAccess();
  v4 = a1[1];
  if (v4)
  {
    v5 = *a1;
    v6 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v6 = *a1 & 0xFFFFFFFFFFFFLL;
    if (!v6)
      return 0;
    swift_beginAccess();
    v7 = a2[1];
    if (!v7)
      return 0;
    v8 = *a2;
    v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v9 = *a2 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      type metadata accessor for BundleHelper();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v11 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_23B796788();

      __swift_instantiateConcreteTypeFromMangledName(&qword_256A48818);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_23B799020;
      v14 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
      v15 = sub_23B745D00();
      *(_QWORD *)(v13 + 32) = v5;
      *(_QWORD *)(v13 + 40) = v4;
      *(_QWORD *)(v13 + 96) = v14;
      *(_QWORD *)(v13 + 104) = v15;
      *(_QWORD *)(v13 + 64) = v15;
      *(_QWORD *)(v13 + 72) = v8;
      *(_QWORD *)(v13 + 80) = v7;
      v4 = sub_23B796A34();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t destroy for Address()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Address(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v20 = a2[21];
  a1[20] = a2[20];
  a1[21] = v20;
  v13 = a2[23];
  a1[22] = a2[22];
  a1[23] = v13;
  v14 = a2[25];
  a1[24] = a2[24];
  a1[25] = v14;
  v15 = a2[27];
  a1[26] = a2[26];
  a1[27] = v15;
  v16 = a2[29];
  a1[28] = a2[28];
  a1[29] = v16;
  v17 = a2[31];
  a1[30] = a2[30];
  a1[31] = v17;
  v18 = a2[33];
  a1[32] = a2[32];
  a1[33] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Address(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for Address(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Address(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 272))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Address(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 272) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Address()
{
  return &type metadata for Address;
}

unint64_t sub_23B745D00()
{
  unint64_t result;

  result = qword_256A48CA0;
  if (!qword_256A48CA0)
  {
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256A48CA0);
  }
  return result;
}

uint64_t MotionActivityState.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B745D74 + 4 * byte_23B79A8F0[*v0]))(0x6E776F6E6B6E752ELL, 0xE800000000000000);
}

uint64_t sub_23B745D74()
{
  return 0x6E6F69746174732ELL;
}

uint64_t sub_23B745D94()
{
  return 0x676E696B6C61772ELL;
}

uint64_t sub_23B745DA8()
{
  return 0x676E696E6E75722ELL;
}

uint64_t sub_23B745DBC()
{
  return 0x676E696C6379632ELL;
}

uint64_t sub_23B745DD0()
{
  return 0x746F6D6F7475612ELL;
}

FindMyLocate::MotionActivityState_optional __swiftcall MotionActivityState.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (FindMyLocate::MotionActivityState_optional)rawValue;
}

void *static MotionActivityState.allCases.getter()
{
  return &unk_250C924F8;
}

uint64_t MotionActivityState.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_23B745E1C()
{
  unint64_t result;

  result = qword_256A48CA8;
  if (!qword_256A48CA8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for MotionActivityState, &type metadata for MotionActivityState);
    atomic_store(result, (unint64_t *)&qword_256A48CA8);
  }
  return result;
}

FindMyLocate::MotionActivityState_optional sub_23B745E60(Swift::Int *a1)
{
  return MotionActivityState.init(rawValue:)(*a1);
}

uint64_t sub_23B745E68()
{
  sub_23B746168();
  return sub_23B796ADC();
}

uint64_t sub_23B745EC4()
{
  sub_23B746168();
  return sub_23B796AC4();
}

unint64_t sub_23B745F14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A48CB0;
  if (!qword_256A48CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A48CB8);
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256A48CB0);
  }
  return result;
}

void sub_23B745F60(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C924F8;
}

uint64_t sub_23B745F70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B745FA0 + 4 * byte_23B79A8F6[*v0]))(0x6E776F6E6B6E752ELL, 0xE800000000000000);
}

uint64_t sub_23B745FA0()
{
  return 0x6E6F69746174732ELL;
}

uint64_t sub_23B745FC0()
{
  return 0x676E696B6C61772ELL;
}

uint64_t sub_23B745FD4()
{
  return 0x676E696E6E75722ELL;
}

uint64_t sub_23B745FE8()
{
  return 0x676E696C6379632ELL;
}

uint64_t sub_23B745FFC()
{
  return 0x746F6D6F7475612ELL;
}

uint64_t getEnumTagSinglePayload for MotionActivityState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MotionActivityState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23B7460F8 + 4 * byte_23B79A901[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23B74612C + 4 * byte_23B79A8FC[v4]))();
}

uint64_t sub_23B74612C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B746134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B74613CLL);
  return result;
}

uint64_t sub_23B746148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B746150);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23B746154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B74615C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_23B746168()
{
  unint64_t result;

  result = qword_256A48CC0;
  if (!qword_256A48CC0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for MotionActivityState, &type metadata for MotionActivityState);
    atomic_store(result, (unint64_t *)&qword_256A48CC0);
  }
  return result;
}

Swift::String __swiftcall Account.dsidBase64EncodedString()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v0 = sub_23B796A10();
  v2 = v1;
  sub_23B796800();
  sub_23B6FDDF8(v0, v2);
  sub_23B6F8270();
  v3 = sub_23B796C8C();
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = v3;
  v7 = v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

FindMyLocate::DefaultCustomLabel_optional __swiftcall DefaultCustomLabel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FindMyLocate::DefaultCustomLabel_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23B796DB8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void DefaultCustomLabel.localizedLabel.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_23B7462F8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for BundleHelper();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_23B796788();

  return v2;
}

uint64_t DefaultCustomLabel.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B74653C + 4 * byte_23B79AA90[*v0]))(0x656D6F683C21245FLL, 0xEC0000005F24213ELL);
}

uint64_t sub_23B74653C()
{
  return 0x6B726F773C21245FLL;
}

uint64_t sub_23B746550()
{
  return 0x6F6863733C21245FLL;
}

uint64_t sub_23B746574()
{
  return 0x3E6D79673C21245FLL;
}

uint64_t sub_23B746594()
{
  return 0x6568746F3C21245FLL;
}

void sub_23B7465B8(char *a1)
{
  sub_23B73EC28(*a1);
}

unint64_t sub_23B7465C8()
{
  unint64_t result;

  result = qword_256A48CC8;
  if (!qword_256A48CC8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for DefaultCustomLabel, &type metadata for DefaultCustomLabel);
    atomic_store(result, &qword_256A48CC8);
  }
  return result;
}

void sub_23B74660C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23B796F44();
  __asm { BR              X9 }
}

uint64_t sub_23B746660()
{
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

void sub_23B746704()
{
  __asm { BR              X10 }
}

uint64_t sub_23B746748()
{
  sub_23B796A64();
  return swift_bridgeObjectRelease();
}

void sub_23B7467D8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23B796F44();
  __asm { BR              X9 }
}

uint64_t sub_23B746828()
{
  sub_23B796A64();
  swift_bridgeObjectRelease();
  return sub_23B796F74();
}

FindMyLocate::DefaultCustomLabel_optional sub_23B7468CC(Swift::String *a1)
{
  return DefaultCustomLabel.init(rawValue:)(*a1);
}

uint64_t sub_23B7468D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23B746910 + 4 * byte_23B79AAA4[*v0]))();
}

void sub_23B746910(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6B726F773C21245FLL;
  a1[1] = v1;
}

void sub_23B746928(char *a1@<X8>)
{
  strcpy(a1, "_$!<school>!$_");
  a1[15] = -18;
}

void sub_23B746950(_QWORD *a1@<X8>)
{
  *a1 = 0x3E6D79673C21245FLL;
  a1[1] = 0xEB000000005F2421;
}

void sub_23B746974(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "_$!<other>!$_");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t storeEnumTagSinglePayload for DefaultCustomLabel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23B7469E8 + 4 * byte_23B79AAAE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23B746A1C + 4 * byte_23B79AAA9[v4]))();
}

uint64_t sub_23B746A1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B746A24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B746A2CLL);
  return result;
}

uint64_t sub_23B746A38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B746A40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23B746A44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B746A4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultCustomLabel()
{
  return &type metadata for DefaultCustomLabel;
}

uint64_t destroy for DeviceStreamChange(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DeviceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    v5 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for DeviceStreamChange(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
      *(_BYTE *)(a1 + 50) = *((_BYTE *)a2 + 50);
      *(_BYTE *)(a1 + 51) = *((_BYTE *)a2 + 51);
    }
    else
    {
      sub_23B746C8C(a1);
      v6 = a2[1];
      v5 = a2[2];
      v7 = *a2;
      *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = v5;
      *(_OWORD *)a1 = v7;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
    *(_BYTE *)(a1 + 50) = *((_BYTE *)a2 + 50);
    *(_BYTE *)(a1 + 51) = *((_BYTE *)a2 + 51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *a2;
    v9 = a2[1];
    v10 = a2[2];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v8;
  }
  return a1;
}

uint64_t sub_23B746C8C(uint64_t a1)
{
  destroy for Device();
  return a1;
}

uint64_t assignWithTake for DeviceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_23B746C8C(a1);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceStreamChange(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 52))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceStreamChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 52) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_23B746E24@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  Swift::String v37;
  int v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93[3];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;

  v5 = v4;
  v79 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F60);
  MEMORY[0x24BDAC7A8](v9);
  v77 = (uint64_t)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Friend();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (__int128 *)((char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)v73 - v16;
  v17 = a1[9];
  v102 = a1[8];
  v103 = v17;
  v104 = a1[10];
  v18 = a1[5];
  v98 = a1[4];
  v99 = v18;
  v19 = a1[7];
  v100 = a1[6];
  v101 = v19;
  v20 = a1[1];
  v94 = *a1;
  v95 = v20;
  v21 = a1[3];
  v96 = a1[2];
  v97 = v21;
  if (qword_254303288 != -1)
    swift_once();
  v22 = sub_23B7969BC();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_254309170);
  sub_23B6F4E8C((uint64_t)&v94);
  swift_bridgeObjectRetain();
  sub_23B6F4E8C((uint64_t)&v94);
  swift_bridgeObjectRetain();
  v75 = v23;
  v24 = sub_23B7969A4();
  v25 = sub_23B796C38();
  v26 = os_log_type_enabled(v24, v25);
  v76 = v11;
  v80 = v12;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v81 = v5;
    v28 = v27;
    v29 = swift_slowAlloc();
    v93[0] = v29;
    *(_DWORD *)v28 = 136315394;
    v90 = v102;
    v91 = v103;
    v92 = v104;
    v86 = v98;
    v87 = v99;
    v88 = v100;
    v89 = v101;
    v82 = v94;
    v83 = v95;
    v84 = v96;
    v85 = v97;
    v30 = Handle.description.getter();
    *(_QWORD *)&v82 = sub_23B6FB388(v30, v31, v93);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744((uint64_t)&v94);
    sub_23B6F5744((uint64_t)&v94);
    *(_WORD *)(v28 + 12) = 2080;
    *(_QWORD *)&v82 = a2;
    *((_QWORD *)&v82 + 1) = a3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD0);
    v32 = sub_23B796A4C();
    *(_QWORD *)&v82 = sub_23B6FB388(v32, v33, v93);
    sub_23B796C68();
    swift_bridgeObjectRelease_n();
    v12 = v80;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B6EB000, v24, v25, "Getting cached offer expiration for %s groupId: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v29, -1, -1);
    v34 = v28;
    v5 = v81;
    MEMORY[0x23B86C754](v34, -1, -1);

  }
  else
  {
    sub_23B6F5744((uint64_t)&v94);
    sub_23B6F5744((uint64_t)&v94);

    swift_bridgeObjectRelease_n();
  }
  if (a3)
    v35 = a2;
  else
    v35 = 0xD000000000000013;
  if (a3)
    v36 = a3;
  else
    v36 = (void *)0x800000023B79F720;
  swift_bridgeObjectRetain();
  v37._countAndFlagsBits = v35;
  v37._object = v36;
  GroupID.init(rawValue:)(v37);
  v38 = v82;
  if (v82 == 3)
    v38 = 0;
  v74 = v38;
  v39 = (uint64_t *)(v5 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_followers);
  swift_beginAccess();
  v40 = *v39;
  v41 = *(_QWORD *)(*v39 + 16);
  if (v41)
  {
    v42 = v40 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v73[1] = v40;
    swift_bridgeObjectRetain_n();
    v81 = *(_QWORD *)(v12 + 72);
    for (i = v41 - 1; ; --i)
    {
      sub_23B725660(v42, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      v44 = v15[9];
      v90 = v15[8];
      v91 = v44;
      v92 = v15[10];
      v45 = v15[5];
      v86 = v15[4];
      v87 = v45;
      v46 = v15[7];
      v88 = v15[6];
      v89 = v46;
      v47 = v15[1];
      v82 = *v15;
      v83 = v47;
      v48 = v15[3];
      v84 = v15[2];
      v85 = v48;
      v49 = sub_23B796A58();
      v51 = v50;
      if (v49 == sub_23B796A58() && v51 == v52)
      {
        sub_23B6F4E8C((uint64_t)&v82);
        swift_bridgeObjectRelease_n();
        sub_23B6F5744((uint64_t)&v82);
LABEL_23:
        swift_bridgeObjectRelease();
        v54 = v77;
        sub_23B743904((uint64_t)v15, v77);
        v12 = v80;
        v55 = v76;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v54, 0, 1, v76);
        goto LABEL_26;
      }
      v53 = sub_23B796ECC();
      sub_23B6F4E8C((uint64_t)&v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B6F5744((uint64_t)&v82);
      if ((v53 & 1) != 0)
        goto LABEL_23;
      sub_23B700B04((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      if (!i)
        break;
      v42 += v81;
    }
    swift_bridgeObjectRelease();
    v12 = v80;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v55 = v76;
  v54 = v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v77, 1, 1, v76);
LABEL_26:
  swift_bridgeObjectRelease();
  v56 = (uint64_t)v78;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v54, 1, v55) == 1)
  {
    sub_23B6F7190(v54, &qword_254302F60);
    v57 = sub_23B7969A4();
    v58 = sub_23B796C38();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v59 = 0;
      _os_log_impl(&dword_23B6EB000, v57, v58, "Trying to get cached offer expiration for handle that is not a follower, returning nil", v59, 2u);
      MEMORY[0x23B86C754](v59, -1, -1);
    }

    v60 = sub_23B7968A8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v79, 1, 1, v60);
  }
  else
  {
    sub_23B743904(v54, v56);
    v62 = *(_QWORD *)(v56 + 56);
    if (*(_QWORD *)(v62 + 16))
    {
      swift_bridgeObjectRetain();
      v63 = sub_23B6F8300(v74);
      if ((v64 & 1) != 0)
      {
        v65 = v63;
        v66 = *(_QWORD *)(v62 + 56);
        v67 = sub_23B7968A8();
        v68 = *(_QWORD *)(v67 - 8);
        v69 = v66 + *(_QWORD *)(v68 + 72) * v65;
        v70 = v79;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v79, v69, v67);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v70, 0, 1, v67);
      }
      else
      {
        v72 = sub_23B7968A8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v79, 1, 1, v72);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v71 = sub_23B7968A8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v79, 1, 1, v71);
    }
    return sub_23B700B04(v56, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  }
}

uint64_t sub_23B747540()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = v0;
  return swift_task_switch();
}

uint64_t sub_23B747558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 152) + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_23B74FA40(v3, v0 + 56);
      sub_23B74FA40(v0 + 56, v0 + 96);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254302560);
      _s14descr250C98A29C20FriendshipConnectionCMa();
      if (swift_dynamicCast() && *(_QWORD *)(v0 + 144))
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_23B74FA84((__int128 *)(v0 + 56), v0 + 16);
        goto LABEL_10;
      }
      __swift_destroy_boxed_opaque_existential_1(v0 + 56);
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
LABEL_10:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302568);
  _s14descr250C98A29C20FriendshipConnectionCMa();
  if (swift_dynamicCast())
    v4 = *(_QWORD *)(v0 + 136);
  else
    v4 = 0;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_23B7476C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = v0;
  return swift_task_switch();
}

uint64_t sub_23B7476E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 152) + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_23B74FA40(v3, v0 + 56);
      sub_23B74FA40(v0 + 56, v0 + 96);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254302560);
      _s14descr250C98631C18LocationConnectionCMa();
      if (swift_dynamicCast() && *(_QWORD *)(v0 + 144))
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_23B74FA84((__int128 *)(v0 + 56), v0 + 16);
        goto LABEL_10;
      }
      __swift_destroy_boxed_opaque_existential_1(v0 + 56);
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
LABEL_10:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302568);
  _s14descr250C98631C18LocationConnectionCMa();
  if (swift_dynamicCast())
    v4 = *(_QWORD *)(v0 + 136);
  else
    v4 = 0;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_23B747850(uint64_t a1, _OWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v2;
  *(_QWORD *)(v3 + 208) = *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D38);
  *(_QWORD *)(v3 + 216) = v5;
  *(_QWORD *)(v3 + 224) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 232) = swift_task_alloc();
  v6 = a2[9];
  *(_OWORD *)(v3 + 144) = a2[8];
  *(_OWORD *)(v3 + 160) = v6;
  *(_OWORD *)(v3 + 176) = a2[10];
  v7 = a2[5];
  *(_OWORD *)(v3 + 80) = a2[4];
  *(_OWORD *)(v3 + 96) = v7;
  v8 = a2[7];
  *(_OWORD *)(v3 + 112) = a2[6];
  *(_OWORD *)(v3 + 128) = v8;
  v9 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v9;
  v10 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v10;
  return swift_task_switch();
}

uint64_t sub_23B7478F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[26];
  v2 = v0[25];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[28] + 104))(v0[29], *MEMORY[0x24BEE6A10], v0[27]);
  sub_23B796BC0();
  v3 = (_QWORD *)swift_task_alloc();
  v0[30] = v3;
  v3[2] = v2;
  v3[3] = v0 + 2;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[31] = v4;
  *v4 = v0;
  v4[1] = sub_23B7479DC;
  return sub_23B796704();
}

uint64_t sub_23B7479DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B747A50()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B747A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B747AE4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D38);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B747B50()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 104))(*(_QWORD *)(v0 + 56), *MEMORY[0x24BEE6A10], *(_QWORD *)(v0 + 40));
  sub_23B796BC0();
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *(_OWORD *)(v1 + 16) = v4;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_23B747C3C;
  return sub_23B796704();
}

uint64_t sub_23B747C3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B747CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B747D10()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B747D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v2, v1, &qword_2543032B8);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48);
  v5 = v4(v1, 1, v3);
  sub_23B6F7190(v1, &qword_2543032B8);
  if (v5 == 1
    && (v6 = *(_QWORD *)(v0 + 80),
        v7 = *(_QWORD *)(v0 + 64)
           + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_internalFollowingContinuation,
        swift_beginAccess(),
        sub_23B6FDE3C(v7, v6, &qword_2543032B8),
        v8 = v4(v6, 1, v3),
        sub_23B6F7190(v6, &qword_2543032B8),
        v8 == 1))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_254303288 != -1)
      swift_once();
    v10 = sub_23B7969BC();
    __swift_project_value_buffer(v10, (uint64_t)qword_254309170);
    v11 = sub_23B7969A4();
    v12 = sub_23B796C38();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23B6EB000, v11, v12, "Retry updating Friends", v13, 2u);
      MEMORY[0x23B86C754](v13, -1, -1);
    }
    v16 = *(_OWORD *)(v0 + 64);

    v14 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v14;
    *(_OWORD *)(v14 + 16) = v16;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v15;
    *v15 = v0;
    v15[1] = sub_23B7286F0;
    return sub_23B796704();
  }
}

uint64_t sub_23B747FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302510);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B748058(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 + 72) = a5;
  *(_QWORD *)(v6 + 80) = a6;
  *(_BYTE *)(v6 + 200) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B8);
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 96) = swift_task_alloc();
  *(_QWORD *)(v6 + 104) = type metadata accessor for FriendStreamChange();
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302EE8);
  *(_QWORD *)(v6 + 120) = v7;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 136) = swift_task_alloc();
  v8 = type metadata accessor for Friend();
  *(_QWORD *)(v6 + 144) = v8;
  *(_QWORD *)(v6 + 152) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 160) = swift_task_alloc();
  *(_QWORD *)(v6 + 168) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B748154()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_BYTE *)(v0 + 200) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v1;
    *v1 = v0;
    v1[1] = sub_23B7482D8;
    return sub_23B748AD0((uint64_t)&unk_250C92E38);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v6, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
    sub_23B6FC8F4(v3, v4, &qword_2543032B8);
    v9 = v5 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
    swift_beginAccess();
    sub_23B6FBDF4(v4, v9, &qword_2543032B8);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B7482D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B748344()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (qword_254303288 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309170);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 144);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v38 = v6;
    *(_DWORD *)v5 = 141558275;
    *(_QWORD *)(v0 + 56) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v5 + 12) = 2081;
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x23B86BE78](v7, v4);
    v10 = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 64) = sub_23B6FB388(v8, v10, &v38);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v2, v3, "receiveInitialUpdates: %{private,mask.hash}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v6, -1, -1);
    MEMORY[0x23B86C754](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(v0 + 152);
    v14 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v36 = *(_QWORD *)(v13 + 72);
    v37 = *(_QWORD *)(v0 + 128);
    do
    {
      v19 = *(_QWORD *)(v0 + 160);
      v18 = *(_QWORD *)(v0 + 168);
      sub_23B725660(v14, v18, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      sub_23B725660(v18, v19, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      v20 = sub_23B7969A4();
      v21 = sub_23B796C38();
      v22 = os_log_type_enabled(v20, v21);
      v23 = *(_QWORD *)(v0 + 160);
      if (v22)
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v38 = v25;
        *(_DWORD *)v24 = 136315138;
        Friend.description.getter();
        *(_QWORD *)(v24 + 4) = sub_23B6FB388(v26, v27, &v38);
        swift_bridgeObjectRelease();
        sub_23B700B04(v23, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        _os_log_impl(&dword_23B6EB000, v20, v21, "Sending initial friend update: %s", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B86C754](v25, -1, -1);
        MEMORY[0x23B86C754](v24, -1, -1);
      }
      else
      {
        sub_23B700B04(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      }

      v15 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 136);
      v17 = *(_QWORD *)(v0 + 120);
      sub_23B725660(v15, *(_QWORD *)(v0 + 112), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
      sub_23B796B90();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v16, v17);
      sub_23B700B04(v15, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      v14 += v36;
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 96);
  v30 = *(_QWORD *)(v0 + 72);
  v31 = *(_QWORD *)(v0 + 80);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v33 = *(_QWORD *)(v32 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v28, v31, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
  sub_23B6FC8F4(v28, v29, &qword_2543032B8);
  v34 = v30 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
  swift_beginAccess();
  sub_23B6FBDF4(v29, v34, &qword_2543032B8);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B748800()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  if (qword_254303288 != -1)
    swift_once();
  v1 = *(void **)(v0 + 192);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309170);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 192);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v22 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 40) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    v12 = sub_23B796A4C();
    *(_QWORD *)(v0 + 48) = sub_23B6FB388(v12, v13, &v22);
    sub_23B796C68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B6EB000, v5, v6, "Failed to send inital friends update %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);

  }
  else
  {

  }
  v15 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 80);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v14, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  sub_23B6FC8F4(v14, v15, &qword_2543032B8);
  v20 = v16 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
  swift_beginAccess();
  sub_23B6FBDF4(v15, v20, &qword_2543032B8);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B748AD0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[25] = a1;
  v2[26] = v1;
  v2[27] = *v1;
  v2[28] = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B748BA4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int8x16_t *v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  if (qword_254303288 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  *(_QWORD *)(v0 + 312) = __swift_project_value_buffer(v1, (uint64_t)qword_254309170);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v4 = 136446466;
    *(_QWORD *)(v0 + 184) = sub_23B6FB388(0xD000000000000022, 0x800000023B7A0E60, &v14);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2080;
    v5 = swift_bridgeObjectRetain();
    v6 = MEMORY[0x23B86BE78](v5, &type metadata for HandleType);
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 192) = sub_23B6FB388(v6, v8, &v14);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s of types: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v13, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(_QWORD *)(v0 + 216);
  v10 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v10;
  v10[1] = vextq_s8(*(int8x16_t *)(v0 + 200), *(int8x16_t *)(v0 + 200), 8uLL);
  v10[2].i64[0] = v9;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302E38);
  *v11 = v0;
  v11[1] = sub_23B748E48;
  return sub_23B796704();
}

uint64_t sub_23B748E48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B748EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 136);
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    __asm { BR              X9 }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_23B749A48()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B749B04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[8] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v1[9] = v2;
  v1[10] = *(_QWORD *)(v2 - 8);
  v1[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B749B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v4, v1, &qword_2543032B8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 104);
  if (v5)
  {
    sub_23B6F7190(*(_QWORD *)(v0 + 104), &qword_2543032B8);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v7, *(_QWORD *)(v0 + 104), v9);
    sub_23B6F7190(v6, &qword_2543032B8);
    sub_23B796B9C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v10 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(v10, 1, 1, *(_QWORD *)(v0 + 72));
  swift_beginAccess();
  sub_23B6FBDF4(v10, v4, &qword_2543032B8);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B749D00(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[13] = a1;
  v2[14] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48CF8);
  v2[18] = swift_task_alloc();
  v2[19] = type metadata accessor for FriendStreamChange();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D00);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B749E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  _DWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
  *(_QWORD *)(v0 + 248) = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation;
  v6 = v4 + v5;
  swift_beginAccess();
  sub_23B6FDE3C(v6, v1, &qword_2543032B8);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 256) = v7;
  LODWORD(v2) = v7(v1, 1, v2);
  sub_23B6F7190(v1, &qword_2543032B8);
  if ((_DWORD)v2 == 1)
  {
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 112)
        + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_internalFollowingContinuation;
    swift_beginAccess();
    sub_23B6FDE3C(v10, v8, &qword_2543032B8);
    LODWORD(v9) = v7(v8, 1, v9);
    sub_23B6F7190(v8, &qword_2543032B8);
    if ((_DWORD)v9 == 1)
      goto LABEL_16;
  }
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_BYTE *)(v11 + 32);
  *(_BYTE *)(v0 + 312) = v13;
  v14 = -1;
  v15 = -1 << v13;
  if (-(-1 << v13) < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & *(_QWORD *)(v11 + 64);
  swift_bridgeObjectRetain();
  if (v16)
  {
    v17 = 0;
    v18 = __clz(__rbit64(v16));
    v19 = (v16 - 1) & v16;
LABEL_7:
    v20 = *(_QWORD *)(v0 + 208);
    sub_23B725660(*(_QWORD *)(v11 + 48) + *(_QWORD *)(v12 + 72) * v18, v20, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v21 = *(_QWORD *)(v11 + 56);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
    *(_BYTE *)(v20 + *(int *)(v22 + 48)) = *(_BYTE *)(v21 + v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 0, 1, v22);
    goto LABEL_14;
  }
  v23 = 63 - v15;
  if ((unint64_t)(63 - v15) <= 0x7F)
  {
    v17 = 0;
  }
  else
  {
    v24 = *(_QWORD *)(v11 + 72);
    if (v24)
    {
      v17 = 1;
LABEL_11:
      v19 = (v24 - 1) & v24;
      v18 = __clz(__rbit64(v24)) + (v17 << 6);
      goto LABEL_7;
    }
    if (v23 < 0xC0)
    {
      v17 = 1;
    }
    else
    {
      v24 = *(_QWORD *)(v11 + 80);
      if (v24)
      {
        v17 = 2;
        goto LABEL_11;
      }
      if (v23 < 0x100)
      {
        v17 = 2;
      }
      else
      {
        v24 = *(_QWORD *)(v11 + 88);
        if (v24)
        {
          v17 = 3;
          goto LABEL_11;
        }
        if (v23 < 0x140)
        {
          v17 = 3;
        }
        else
        {
          v24 = *(_QWORD *)(v11 + 96);
          if (v24)
          {
            v17 = 4;
            goto LABEL_11;
          }
          v41 = 0;
          v42 = v23 >> 6;
          v43 = 5;
          if (v42 > 5)
            v43 = v42;
          v44 = v43 - 5;
          while (v44 != v41)
          {
            v24 = *(_QWORD *)(v11 + 104 + 8 * v41++);
            if (v24)
            {
              v17 = v41 + 4;
              goto LABEL_11;
            }
          }
          v17 = v42 - 1;
        }
      }
    }
  }
  v25 = *(_QWORD *)(v0 + 208);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v19 = 0;
LABEL_14:
  *(_QWORD *)(v0 + 264) = v17;
  *(_QWORD *)(v0 + 272) = v19;
  v27 = *(_QWORD *)(v0 + 216);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 208), v27, &qword_256A48D00);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28) == 1)
  {
    swift_release();
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v30 = *(_QWORD *)(v0 + 216);
  v31 = *(_QWORD *)(v0 + 200);
  v32 = *(unsigned __int8 *)(v30 + *(int *)(v28 + 48));
  *(_BYTE *)(v0 + 313) = v32;
  sub_23B743904(v30, v31);
  if (qword_254303288 != -1)
    swift_once();
  v34 = *(_QWORD *)(v0 + 192);
  v33 = *(_QWORD *)(v0 + 200);
  v35 = *(_QWORD *)(v0 + 184);
  v36 = sub_23B7969BC();
  *(_QWORD *)(v0 + 280) = __swift_project_value_buffer(v36, (uint64_t)qword_254309170);
  sub_23B725660(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  sub_23B725660(v33, v35, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  v37 = sub_23B7969A4();
  LOBYTE(v34) = sub_23B796C38();
  if (os_log_type_enabled(v37, (os_log_type_t)v34))
  {
    v38 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v0 + 64) = swift_slowAlloc();
    *v38 = 136446979;
    __asm { BR              X9 }
  }
  v39 = *(_QWORD *)(v0 + 184);
  sub_23B700B04(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  sub_23B700B04(v39, (uint64_t (*)(_QWORD))type metadata accessor for Friend);

  v40 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v40;
  *v40 = v0;
  v40[1] = sub_23B74A620;
  return sub_23B74BA5C(*(_QWORD *)(v0 + 104));
}

uint64_t sub_23B74A620()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23B74A678()
{
  __asm { BR              X9 }
}

uint64_t sub_23B74A6E0()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _DWORD *v50;
  uint64_t v51;
  _QWORD *v52;

  v2 = sub_23B796ECC();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    __asm { BR              X10 }
  v3 = *(_QWORD *)(v0 + 200);
  sub_23B725660(v3, *(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  swift_storeEnumTagMultiPayload();
  if (*(_BYTE *)(v3 + 176) == 1)
  {
    v4 = sub_23B7969A4();
    v5 = sub_23B796C38();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_23B6EB000, v4, v5, "Internal FriendStream with following updates", v6, 2u);
      MEMORY[0x23B86C754](v6, -1, -1);
    }

    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v7;
    *v7 = v0;
    v7[1] = sub_23B74B0E8;
    return sub_23B743420(*(_QWORD *)(v0 + 168));
  }
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v10 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 120);
  sub_23B6FDE3C(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 248), v10, &qword_2543032B8);
  v12 = v9(v10, 1, v11);
  v13 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 200);
  v15 = *(_QWORD *)(v0 + 168);
  if (v12)
  {
    v16 = *(_QWORD *)(v0 + 144);
    sub_23B700B04(*(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    sub_23B700B04(v14, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    sub_23B6F7190(v13, &qword_2543032B8);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302EE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 144);
    v22 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v13, v22);
    sub_23B6F7190(v13, &qword_2543032B8);
    sub_23B725660(v15, v18, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    sub_23B796B90();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    sub_23B700B04(v15, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    sub_23B700B04(v14, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302EE8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 0, 1, v23);
  }
  sub_23B6F7190(*(_QWORD *)(v0 + 144), &qword_256A48CF8);
  v25 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 272);
  if (v24)
  {
    v26 = (v24 - 1) & v24;
    v27 = __clz(__rbit64(v24)) | (v25 << 6);
    v28 = *(_QWORD *)(v0 + 104);
LABEL_12:
    v29 = *(_QWORD *)(v0 + 208);
    sub_23B725660(*(_QWORD *)(v28 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 176) + 72) * v27, v29, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v30 = *(_QWORD *)(v28 + 56);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
    *(_BYTE *)(v29 + *(int *)(v31 + 48)) = *(_BYTE *)(v30 + v27);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 0, 1, v31);
    goto LABEL_31;
  }
  v32 = v25 + 1;
  if (__OFADD__(v25, 1))
  {
    __break(1u);
LABEL_39:
    __break(1u);
    JUMPOUT(0x23B74B09CLL);
  }
  v33 = (unint64_t)((1 << *(_BYTE *)(v0 + 312)) + 63) >> 6;
  if (v32 < v33)
  {
    v28 = *(_QWORD *)(v0 + 104);
    v34 = v28 + 64;
    v35 = *(_QWORD *)(v28 + 64 + 8 * v32);
    if (v35)
    {
LABEL_16:
      v26 = (v35 - 1) & v35;
      v27 = __clz(__rbit64(v35)) + (v32 << 6);
      v25 = v32;
      goto LABEL_12;
    }
    v36 = v25 + 2;
    ++v25;
    if (v32 + 1 < v33)
    {
      v35 = *(_QWORD *)(v34 + 8 * v36);
      if (v35)
      {
LABEL_19:
        v32 = v36;
        goto LABEL_16;
      }
      v25 = v32 + 1;
      if (v32 + 2 < v33)
      {
        v35 = *(_QWORD *)(v34 + 8 * (v32 + 2));
        if (v35)
        {
          v32 += 2;
          goto LABEL_16;
        }
        v36 = v32 + 3;
        v25 = v32 + 2;
        if (v32 + 3 < v33)
        {
          v35 = *(_QWORD *)(v34 + 8 * v36);
          if (v35)
            goto LABEL_19;
          while (1)
          {
            v32 = v36 + 1;
            if (__OFADD__(v36, 1))
              goto LABEL_39;
            if (v32 >= v33)
              break;
            v35 = *(_QWORD *)(v34 + 8 * v32);
            ++v36;
            if (v35)
              goto LABEL_16;
          }
          v25 = v33 - 1;
        }
      }
    }
  }
  v37 = *(_QWORD *)(v0 + 208);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  v26 = 0;
LABEL_31:
  *(_QWORD *)(v0 + 264) = v25;
  *(_QWORD *)(v0 + 272) = v26;
  v39 = *(_QWORD *)(v0 + 216);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 208), v39, &qword_256A48D00);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40) == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v41 = *(_QWORD *)(v0 + 216);
    v42 = *(_QWORD *)(v0 + 200);
    v43 = *(unsigned __int8 *)(v41 + *(int *)(v40 + 48));
    *(_BYTE *)(v0 + 313) = v43;
    sub_23B743904(v41, v42);
    if (qword_254303288 != -1)
      swift_once();
    v45 = *(_QWORD *)(v0 + 192);
    v44 = *(_QWORD *)(v0 + 200);
    v46 = *(_QWORD *)(v0 + 184);
    v47 = sub_23B7969BC();
    *(_QWORD *)(v0 + 280) = __swift_project_value_buffer(v47, (uint64_t)qword_254309170);
    sub_23B725660(v44, v45, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    sub_23B725660(v44, v46, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v48 = sub_23B7969A4();
    v49 = sub_23B796C38();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (_DWORD *)swift_slowAlloc();
      *v1 = swift_slowAlloc();
      *v50 = 136446979;
      __asm { BR              X9 }
    }
    v51 = *(_QWORD *)(v0 + 184);
    sub_23B700B04(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    sub_23B700B04(v51, (uint64_t (*)(_QWORD))type metadata accessor for Friend);

    v52 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v52;
    *v52 = v0;
    v52[1] = sub_23B74A620;
    return sub_23B74BA5C(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_23B74B0E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B74B14C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  _DWORD *v42;
  uint64_t v43;
  _QWORD *v44;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 120);
  sub_23B6FDE3C(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 248), v2, &qword_2543032B8);
  v4 = v1(v2, 1, v3);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 168);
  if (v4)
  {
    v8 = *(_QWORD *)(v0 + 144);
    sub_23B700B04(*(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    sub_23B700B04(v6, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    sub_23B6F7190(v5, &qword_2543032B8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302EE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 16))(v12, *(_QWORD *)(v0 + 224), v13);
    sub_23B6F7190(v5, &qword_2543032B8);
    sub_23B725660(v7, v10, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    sub_23B796B90();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    sub_23B700B04(v7, (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
    sub_23B700B04(v6, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302EE8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 0, 1, v15);
  }
  sub_23B6F7190(*(_QWORD *)(v0 + 144), &qword_256A48CF8);
  v17 = *(_QWORD *)(v0 + 264);
  v16 = *(_QWORD *)(v0 + 272);
  if (v16)
  {
    v18 = (v16 - 1) & v16;
    v19 = __clz(__rbit64(v16)) | (v17 << 6);
    v20 = *(_QWORD *)(v0 + 104);
LABEL_6:
    v21 = *(_QWORD *)(v0 + 208);
    sub_23B725660(*(_QWORD *)(v20 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 176) + 72) * v19, v21, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v22 = *(_QWORD *)(v20 + 56);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
    *(_BYTE *)(v21 + *(int *)(v23 + 48)) = *(_BYTE *)(v22 + v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 0, 1, v23);
    goto LABEL_25;
  }
  v24 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    JUMPOUT(0x23B74B938);
  }
  v25 = (unint64_t)((1 << *(_BYTE *)(v0 + 312)) + 63) >> 6;
  if (v24 < v25)
  {
    v20 = *(_QWORD *)(v0 + 104);
    v26 = v20 + 64;
    v27 = *(_QWORD *)(v20 + 64 + 8 * v24);
    if (v27)
    {
LABEL_10:
      v18 = (v27 - 1) & v27;
      v19 = __clz(__rbit64(v27)) + (v24 << 6);
      v17 = v24;
      goto LABEL_6;
    }
    v28 = v17 + 2;
    ++v17;
    if (v24 + 1 < v25)
    {
      v27 = *(_QWORD *)(v26 + 8 * v28);
      if (v27)
      {
LABEL_13:
        v24 = v28;
        goto LABEL_10;
      }
      v17 = v24 + 1;
      if (v24 + 2 < v25)
      {
        v27 = *(_QWORD *)(v26 + 8 * (v24 + 2));
        if (v27)
        {
          v24 += 2;
          goto LABEL_10;
        }
        v28 = v24 + 3;
        v17 = v24 + 2;
        if (v24 + 3 < v25)
        {
          v27 = *(_QWORD *)(v26 + 8 * v28);
          if (v27)
            goto LABEL_13;
          while (1)
          {
            v24 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_33;
            if (v24 >= v25)
              break;
            v27 = *(_QWORD *)(v26 + 8 * v24);
            ++v28;
            if (v27)
              goto LABEL_10;
          }
          v17 = v25 - 1;
        }
      }
    }
  }
  v29 = *(_QWORD *)(v0 + 208);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v18 = 0;
LABEL_25:
  *(_QWORD *)(v0 + 264) = v17;
  *(_QWORD *)(v0 + 272) = v18;
  v31 = *(_QWORD *)(v0 + 216);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 208), v31, &qword_256A48D00);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32) == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 216);
    v35 = *(_QWORD *)(v0 + 200);
    v36 = *(unsigned __int8 *)(v34 + *(int *)(v32 + 48));
    *(_BYTE *)(v0 + 313) = v36;
    sub_23B743904(v34, v35);
    if (qword_254303288 != -1)
      swift_once();
    v37 = *(_QWORD *)(v0 + 192);
    v38 = *(_QWORD *)(v0 + 200);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = sub_23B7969BC();
    *(_QWORD *)(v0 + 280) = __swift_project_value_buffer(v40, (uint64_t)qword_254309170);
    sub_23B725660(v38, v37, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    sub_23B725660(v38, v39, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v41 = sub_23B7969A4();
    LOBYTE(v37) = sub_23B796C38();
    if (os_log_type_enabled(v41, (os_log_type_t)v37))
    {
      v42 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)(v0 + 64) = swift_slowAlloc();
      *v42 = 136446979;
      __asm { BR              X9 }
    }
    v43 = *(_QWORD *)(v0 + 184);
    sub_23B700B04(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    sub_23B700B04(v43, (uint64_t (*)(_QWORD))type metadata accessor for Friend);

    v44 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v44;
    *v44 = v0;
    v44[1] = sub_23B74A620;
    return sub_23B74BA5C(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_23B74B960()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  sub_23B700B04(*(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for FriendStreamChange);
  sub_23B700B04(v1, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74BA5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[81] = v1;
  v2[80] = a1;
  v2[82] = *(_QWORD *)(type metadata accessor for Friend() - 8);
  v2[83] = swift_task_alloc();
  v2[84] = swift_task_alloc();
  v2[85] = swift_task_alloc();
  v2[86] = swift_task_alloc();
  v2[87] = swift_task_alloc();
  v2[88] = swift_task_alloc();
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D00);
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B74BB48()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _DWORD *v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 640);
  v2 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 856) = v2;
  v3 = 1 << v2;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 744) = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_pendingOffers;
  *(_QWORD *)(v0 + 752) = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowings;
  *(_QWORD *)(v0 + 760) = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_futureFollowers;
  *(_QWORD *)(v0 + 768) = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_followings;
  *(_QWORD *)(v0 + 776) = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_owningSession;
  *(_QWORD *)(v0 + 784) = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_followers;
  swift_bridgeObjectRetain();
  v6 = 0;
  if (v5)
  {
    v7 = (v5 - 1) & v5;
    v8 = __clz(__rbit64(v5));
    v9 = *(_QWORD **)(v0 + 640);
LABEL_6:
    v10 = *(_QWORD *)(v0 + 728);
    sub_23B725660(v9[6] + *(_QWORD *)(*(_QWORD *)(v0 + 656) + 72) * v8, v10, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v11 = v9[7];
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
    *(_BYTE *)(v10 + *(int *)(v12 + 48)) = *(_BYTE *)(v11 + v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
    goto LABEL_15;
  }
  v13 = 1;
  v14 = (unint64_t)((1 << *(_BYTE *)(v0 + 856)) + 63) >> 6;
  if (v14 > 1)
  {
    v9 = *(_QWORD **)(v0 + 640);
    v15 = v9[9];
    if (v15)
    {
LABEL_9:
      v7 = (v15 - 1) & v15;
      v8 = __clz(__rbit64(v15)) + (v13 << 6);
      v6 = v13;
      goto LABEL_6;
    }
    v6 = 2;
    if ((unint64_t)((1 << *(_BYTE *)(v0 + 856)) + 63) >> 6 <= 2)
    {
      v6 = 1;
    }
    else
    {
      v15 = v9[10];
      if (v15)
      {
        v13 = 2;
        goto LABEL_9;
      }
      if ((unint64_t)((1 << *(_BYTE *)(v0 + 856)) + 63) >> 6 > 3)
      {
        v15 = v9[11];
        if (v15)
        {
          v13 = 3;
          goto LABEL_9;
        }
        v28 = 4;
        if ((unint64_t)((1 << *(_BYTE *)(v0 + 856)) + 63) >> 6 <= 4)
        {
          v6 = 3;
        }
        else
        {
          v15 = v9[12];
          if (v15)
          {
            v13 = 4;
            goto LABEL_9;
          }
          while (1)
          {
            v13 = v28 + 1;
            if (__OFADD__(v28, 1))
            {
              __break(1u);
              JUMPOUT(0x23B74CC38);
            }
            if (v13 >= (uint64_t)v14)
              break;
            v15 = v9[v13 + 8];
            ++v28;
            if (v15)
              goto LABEL_9;
          }
          v6 = v14 - 1;
        }
      }
    }
  }
  v16 = *(_QWORD *)(v0 + 728);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v7 = 0;
LABEL_15:
  *(_QWORD *)(v0 + 800) = v7;
  *(_QWORD *)(v0 + 792) = v6;
  v18 = *(_QWORD *)(v0 + 736);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 728), v18, &qword_256A48D00);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19) != 1)
  {
    v20 = *(_QWORD *)(v0 + 736);
    v21 = *(unsigned __int8 *)(v20 + *(int *)(v19 + 48));
    sub_23B743904(v20, *(_QWORD *)(v0 + 720));
    if (qword_254303288 != -1)
      swift_once();
    v22 = *(_QWORD *)(v0 + 720);
    v23 = *(_QWORD *)(v0 + 712);
    v24 = sub_23B7969BC();
    *(_QWORD *)(v0 + 808) = __swift_project_value_buffer(v24, (uint64_t)qword_254309170);
    sub_23B725660(v22, v23, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v25 = sub_23B7969A4();
    v26 = sub_23B796C38();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)(v0 + 632) = swift_slowAlloc();
      *v27 = 136446466;
      __asm { BR              X8 }
    }
    sub_23B700B04(*(_QWORD *)(v0 + 712), (uint64_t (*)(_QWORD))type metadata accessor for Friend);

    __asm { BR              X9 }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74CC78(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 840) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B74CCE4()
{
  uint64_t v0;
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _QWORD *v16;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;

  if (*(_QWORD *)(v0 + 840))
  {
    v1 = *(__int128 **)(v0 + 720);
    v2 = *v1;
    v3 = v1[2];
    *(_OWORD *)(v0 + 32) = v1[1];
    *(_OWORD *)(v0 + 48) = v3;
    *(_OWORD *)(v0 + 16) = v2;
    v4 = v1[3];
    v5 = v1[4];
    v6 = v1[6];
    *(_OWORD *)(v0 + 96) = v1[5];
    *(_OWORD *)(v0 + 112) = v6;
    *(_OWORD *)(v0 + 64) = v4;
    *(_OWORD *)(v0 + 80) = v5;
    v7 = v1[7];
    v8 = v1[8];
    v9 = v1[10];
    *(_OWORD *)(v0 + 160) = v1[9];
    *(_OWORD *)(v0 + 176) = v9;
    *(_OWORD *)(v0 + 128) = v7;
    *(_OWORD *)(v0 + 144) = v8;
    v10 = *(_OWORD *)(v0 + 176);
    v11 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 352) = v10;
    v12 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 320) = v11;
    v13 = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 288) = v12;
    v14 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 256) = v13;
    v15 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 224) = v14;
    *(_OWORD *)(v0 + 192) = v15;
    sub_23B6F4E8C(v0 + 16);
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 848) = v16;
    *v16 = v0;
    v16[1] = sub_23B74CF74;
    return sub_23B75FB7C((_OWORD *)(v0 + 192));
  }
  else
  {
    v18 = sub_23B7969A4();
    v19 = sub_23B796C20();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v22 = v21;
      *(_DWORD *)v20 = 136446210;
      *(_QWORD *)(v0 + 624) = sub_23B6FB388(0xD000000000000015, 0x800000023B7A0E00, &v22);
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, v18, v19, "%{public}s missing LocationConnection.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v21, -1, -1);
      MEMORY[0x23B86C754](v20, -1, -1);
    }

    swift_release();
    sub_23B700B04(*(_QWORD *)(v0 + 720), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B74CF74()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 16;
  swift_task_dealloc();
  sub_23B6F5744(v1);
  return swift_task_switch();
}

uint64_t sub_23B74CFD8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _DWORD *v25;
  int64_t v26;

  v1 = *(_QWORD *)(v0 + 720);
  swift_release();
  sub_23B700B04(v1, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  v2 = *(_QWORD *)(v0 + 800);
  v3 = *(_QWORD *)(v0 + 792);
  if (v2)
  {
    v4 = (v2 - 1) & v2;
    v5 = __clz(__rbit64(v2)) | (v3 << 6);
    v6 = *(_QWORD *)(v0 + 640);
LABEL_3:
    v7 = *(_QWORD *)(v0 + 728);
    sub_23B725660(*(_QWORD *)(v6 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 656) + 72) * v5, v7, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v8 = *(_QWORD *)(v6 + 56);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
    *(_BYTE *)(v7 + *(int *)(v9 + 48)) = *(_BYTE *)(v8 + v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
    goto LABEL_13;
  }
  v10 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x23B74E050);
  }
  v11 = (unint64_t)((1 << *(_BYTE *)(v0 + 856)) + 63) >> 6;
  if (v10 < v11)
  {
    v6 = *(_QWORD *)(v0 + 640);
    v12 = v6 + 64;
    v13 = *(_QWORD *)(v6 + 64 + 8 * v10);
    if (v13)
    {
LABEL_7:
      v4 = (v13 - 1) & v13;
      v5 = __clz(__rbit64(v13)) + (v10 << 6);
      v3 = v10;
      goto LABEL_3;
    }
    v3 += 2;
    if (v10 + 1 >= v11)
    {
      v3 = v10;
    }
    else
    {
      v13 = *(_QWORD *)(v12 + 8 * v3);
      if (v13)
      {
        ++v10;
        goto LABEL_7;
      }
      if (v10 + 2 < v11)
      {
        v13 = *(_QWORD *)(v12 + 8 * (v10 + 2));
        if (v13)
        {
          v10 += 2;
          goto LABEL_7;
        }
        v26 = v10 + 3;
        if (v10 + 3 >= v11)
        {
          v3 = v10 + 2;
        }
        else
        {
          v13 = *(_QWORD *)(v12 + 8 * v26);
          if (v13)
          {
            v10 += 3;
            goto LABEL_7;
          }
          while (1)
          {
            v10 = v26 + 1;
            if (__OFADD__(v26, 1))
            {
              __break(1u);
              JUMPOUT(0x23B74E064);
            }
            if (v10 >= v11)
              break;
            v13 = *(_QWORD *)(v12 + 8 * v10);
            ++v26;
            if (v13)
              goto LABEL_7;
          }
          v3 = v11 - 1;
        }
      }
    }
  }
  v14 = *(_QWORD *)(v0 + 728);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v4 = 0;
LABEL_13:
  *(_QWORD *)(v0 + 800) = v4;
  *(_QWORD *)(v0 + 792) = v3;
  v16 = *(_QWORD *)(v0 + 736);
  sub_23B6FC8F4(*(_QWORD *)(v0 + 728), v16, &qword_256A48D00);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48D08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17) != 1)
  {
    v18 = *(_QWORD *)(v0 + 736);
    v19 = *(unsigned __int8 *)(v18 + *(int *)(v17 + 48));
    sub_23B743904(v18, *(_QWORD *)(v0 + 720));
    if (qword_254303288 != -1)
      swift_once();
    v20 = *(_QWORD *)(v0 + 720);
    v21 = *(_QWORD *)(v0 + 712);
    v22 = sub_23B7969BC();
    *(_QWORD *)(v0 + 808) = __swift_project_value_buffer(v22, (uint64_t)qword_254309170);
    sub_23B725660(v20, v21, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v23 = sub_23B7969A4();
    v24 = sub_23B796C38();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)(v0 + 632) = swift_slowAlloc();
      *v25 = 136446466;
      __asm { BR              X8 }
    }
    sub_23B700B04(*(_QWORD *)(v0 + 712), (uint64_t (*)(_QWORD))type metadata accessor for Friend);

    __asm { BR              X9 }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74E0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302F60);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v4 = type metadata accessor for Friend();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B74E188()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 136) = sub_23B743EA8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_23B74E218;
  return sub_23B796EC0();
}

uint64_t sub_23B74E218()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B74E270()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;

  v1 = v0[7];
  v2 = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection__friendsWithPrettyName;
  v0[19] = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection__friendsWithPrettyName;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  v4 = *v3;
  v0[20] = *v3;
  if (v4)
  {
    v5 = (_QWORD *)swift_task_alloc();
    v0[23] = v5;
    *v5 = v0;
    v5[1] = sub_23B74E55C;
    return sub_23B796EC0();
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc();
    v0[21] = v7;
    *v7 = v0;
    v7[1] = sub_23B74E370;
    return sub_23B748AD0((uint64_t)&unk_250C92E60);
  }
}

uint64_t sub_23B74E370(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 176) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_23B74E448()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[7];
  *(_QWORD *)(v3 + v0[19]) = v0[22];
  swift_bridgeObjectRelease();
  v4 = sub_23B796B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v3;
  swift_retain_n();
  sub_23B742B50(v1, (uint64_t)&unk_256A48D88, (uint64_t)v5);
  swift_release();
  v6 = (_QWORD *)swift_task_alloc();
  v0[23] = v6;
  *v6 = v0;
  v6[1] = sub_23B74E55C;
  return sub_23B796EC0();
}

uint64_t sub_23B74E55C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B74E5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 152));
  v1 = swift_bridgeObjectRetain();
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v0 + 200) = v2;
    v3 = MEMORY[0x24BEE4AF8];
    if (v2)
    {
      v4 = *(_QWORD *)(v0 + 88);
      v5 = *(_DWORD *)(v4 + 80);
      *(_DWORD *)(v0 + 248) = v5;
      v6 = *(_QWORD *)(v4 + 72);
      *(_QWORD *)(v0 + 216) = 0;
      *(_QWORD *)(v0 + 224) = v3;
      *(_QWORD *)(v0 + 208) = v6;
      sub_23B725660(v1 + ((v5 + 32) & ~(unint64_t)v5), *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      if ((sub_23B6EF35C() & 1) != 0)
      {
LABEL_4:
        v7 = *(_QWORD *)(v0 + 160);
        v8 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 232) = v8;
        *v8 = v0;
        v8[1] = sub_23B74E940;
        return sub_23B740A08(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 120), v7 != 0);
      }
      while (1)
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 72), 1, 1, *(_QWORD *)(v0 + 80));
        v10 = *(_QWORD *)(v0 + 72);
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 48))(v10, 1, *(_QWORD *)(v0 + 80)) == 1)
        {
          sub_23B6F7190(v10, &qword_254302F60);
        }
        else
        {
          v11 = *(_QWORD *)(v0 + 112);
          v12 = *(uint64_t (**)(uint64_t))(v0 + 40);
          sub_23B743904(v10, v11);
          if ((v12(v11) & 1) != 0)
          {
            sub_23B725660(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v3 = *(_QWORD *)(v0 + 224);
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v3 = sub_23B705640(0, *(_QWORD *)(v3 + 16) + 1, 1, *(_QWORD *)(v0 + 224));
            v15 = *(_QWORD *)(v3 + 16);
            v14 = *(_QWORD *)(v3 + 24);
            if (v15 >= v14 >> 1)
              v3 = sub_23B705640(v14 > 1, v15 + 1, 1, v3);
            v16 = *(_QWORD *)(v0 + 208);
            v17 = *(unsigned __int8 *)(v0 + 248);
            v18 = *(_QWORD *)(v0 + 104);
            v19 = *(_QWORD *)(v0 + 112);
            *(_QWORD *)(v3 + 16) = v15 + 1;
            sub_23B743904(v18, v3 + ((v17 + 32) & ~v17) + v16 * v15);
            sub_23B700B04(v19, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
            goto LABEL_21;
          }
          sub_23B700B04(*(_QWORD *)(v0 + 112), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        }
        v20 = (*(uint64_t (**)(_QWORD))(v0 + 40))(*(_QWORD *)(v0 + 120));
        v3 = *(_QWORD *)(v0 + 224);
        if ((v20 & 1) != 0)
        {
          sub_23B725660(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
          v21 = swift_isUniquelyReferenced_nonNull_native();
          v3 = *(_QWORD *)(v0 + 224);
          if ((v21 & 1) == 0)
            v3 = sub_23B705640(0, *(_QWORD *)(v3 + 16) + 1, 1, *(_QWORD *)(v0 + 224));
          v23 = *(_QWORD *)(v3 + 16);
          v22 = *(_QWORD *)(v3 + 24);
          if (v23 >= v22 >> 1)
            v3 = sub_23B705640(v22 > 1, v23 + 1, 1, v3);
          v24 = *(_QWORD *)(v0 + 208);
          v25 = *(unsigned __int8 *)(v0 + 248);
          v26 = *(_QWORD *)(v0 + 96);
          *(_QWORD *)(v3 + 16) = v23 + 1;
          sub_23B743904(v26, v3 + ((v25 + 32) & ~v25) + v24 * v23);
        }
LABEL_21:
        v27 = *(_QWORD *)(v0 + 200);
        v28 = *(_QWORD *)(v0 + 216) + 1;
        sub_23B700B04(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        if (v28 == v27)
          break;
        v29 = *(_QWORD *)(v0 + 208);
        v30 = *(_QWORD *)(v0 + 216) + 1;
        *(_QWORD *)(v0 + 216) = v30;
        *(_QWORD *)(v0 + 224) = v3;
        sub_23B725660(*(_QWORD *)(v0 + 192)+ ((*(unsigned __int8 *)(v0 + 248) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 248))+ v29 * v30, *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        if ((sub_23B6EF35C() & 1) != 0)
          goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v3);
}

uint64_t sub_23B74E940()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B74E9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;

  sub_23B6FC8F4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), &qword_254302F60);
  while (1)
  {
    v1 = *(_QWORD *)(v0 + 72);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 48))(v1, 1, *(_QWORD *)(v0 + 80)) == 1)
    {
      sub_23B6F7190(v1, &qword_254302F60);
      goto LABEL_11;
    }
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(uint64_t (**)(uint64_t))(v0 + 40);
    sub_23B743904(v1, v2);
    if ((v3(v2) & 1) == 0)
    {
      sub_23B700B04(*(_QWORD *)(v0 + 112), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
LABEL_11:
      v12 = (*(uint64_t (**)(_QWORD))(v0 + 40))(*(_QWORD *)(v0 + 120));
      v5 = *(_QWORD *)(v0 + 224);
      if ((v12 & 1) != 0)
      {
        sub_23B725660(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v5 = *(_QWORD *)(v0 + 224);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v5 = sub_23B705640(0, *(_QWORD *)(v5 + 16) + 1, 1, *(_QWORD *)(v0 + 224));
        v15 = *(_QWORD *)(v5 + 16);
        v14 = *(_QWORD *)(v5 + 24);
        if (v15 >= v14 >> 1)
          v5 = sub_23B705640(v14 > 1, v15 + 1, 1, v5);
        v16 = *(_QWORD *)(v0 + 208);
        v17 = *(unsigned __int8 *)(v0 + 248);
        v18 = *(_QWORD *)(v0 + 96);
        *(_QWORD *)(v5 + 16) = v15 + 1;
        sub_23B743904(v18, v5 + ((v17 + 32) & ~v17) + v16 * v15);
      }
      goto LABEL_17;
    }
    sub_23B725660(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    v4 = swift_isUniquelyReferenced_nonNull_native();
    v5 = *(_QWORD *)(v0 + 224);
    if ((v4 & 1) == 0)
      v5 = sub_23B705640(0, *(_QWORD *)(v5 + 16) + 1, 1, *(_QWORD *)(v0 + 224));
    v7 = *(_QWORD *)(v5 + 16);
    v6 = *(_QWORD *)(v5 + 24);
    if (v7 >= v6 >> 1)
      v5 = sub_23B705640(v6 > 1, v7 + 1, 1, v5);
    v8 = *(_QWORD *)(v0 + 208);
    v9 = *(unsigned __int8 *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v5 + 16) = v7 + 1;
    sub_23B743904(v10, v5 + ((v9 + 32) & ~v9) + v8 * v7);
    sub_23B700B04(v11, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
LABEL_17:
    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 216) + 1;
    sub_23B700B04(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    if (v20 == v19)
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v5);
    }
    v21 = *(_QWORD *)(v0 + 208);
    v22 = *(_QWORD *)(v0 + 216) + 1;
    *(_QWORD *)(v0 + 216) = v22;
    *(_QWORD *)(v0 + 224) = v5;
    sub_23B725660(*(_QWORD *)(v0 + 192)+ ((*(unsigned __int8 *)(v0 + 248) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 248))+ v21 * v22, *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for Friend);
    if ((sub_23B6EF35C() & 1) != 0)
      break;
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 72), 1, 1, *(_QWORD *)(v0 + 80));
  }
  v24 = *(_QWORD *)(v0 + 160);
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v25;
  *v25 = v0;
  v25[1] = sub_23B74E940;
  return sub_23B740A08(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 120), v24 != 0);
}

uint64_t sub_23B74ECC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B700B04(v1, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74ED74()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B6FD1B0;
  return sub_23B742C84();
}

uint64_t sub_23B74EDBC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for Friend();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x24BEE4AF8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_23B725660(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      v17 = a1(v12);
      if (v3)
      {
        sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_23B743904((uint64_t)v12, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23B72C7F0(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_23B72C7F0(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_23B743904(v23, v15 + v16 + v19 * v13);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_23B700B04((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Friend);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23B74EFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302D60);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B74F034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F90);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  sub_23B6FC8F4(v1, v2, &qword_254302D60);
  v7 = v4 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_rangingContinuation;
  swift_beginAccess();
  sub_23B6FBDF4(v2, v7, &qword_254302D60);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74F124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F90);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v14 = sub_23B743EA8();
  v15 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a2;
  *((_QWORD *)v16 + 3) = v14;
  *((_QWORD *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v16[v15], (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain_n();
  sub_23B77520C((uint64_t)v12, a4, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_23B74F280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302D60);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B74F2F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F90);
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302D60);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48CD8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B74F39C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v24;

  if (qword_254303288 != -1)
    swift_once();
  v1 = *(void **)(v0 + 64);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309170);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C38();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 64);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    *(_QWORD *)(v0 + 56) = v7;
    v9 = v7;
    sub_23B796C68();
    *v24 = v7;

    _os_log_impl(&dword_23B6EB000, v4, v5, "discovered: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v24, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_rangingContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v13, v10, &qword_254302D60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_23B6F7190(*(_QWORD *)(v0 + 104), &qword_254302D60);
    v14 = 1;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 80);
    v19 = *(void **)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
    sub_23B6F7190(v15, &qword_254302D60);
    *(_QWORD *)(v0 + 40) = v19;
    *(_BYTE *)(v0 + 48) = 0;
    v20 = v19;
    sub_23B796B90();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    v14 = 0;
  }
  v21 = *(_QWORD *)(v0 + 112);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, v14, 1, v22);
  sub_23B6F7190(v21, &qword_256A48CD8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74F680(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F90);
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302D60);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48CD8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B74F72C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v24;

  if (qword_254303288 != -1)
    swift_once();
  v1 = *(void **)(v0 + 64);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309170);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C38();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 64);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    *(_QWORD *)(v0 + 56) = v7;
    v9 = v7;
    sub_23B796C68();
    *v24 = v7;

    _os_log_impl(&dword_23B6EB000, v4, v5, "updated: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v24, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_rangingContinuation;
  swift_beginAccess();
  sub_23B6FDE3C(v13, v10, &qword_254302D60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_23B6F7190(*(_QWORD *)(v0 + 104), &qword_254302D60);
    v14 = 1;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 80);
    v19 = *(void **)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
    sub_23B6F7190(v15, &qword_254302D60);
    *(_QWORD *)(v0 + 40) = v19;
    *(_BYTE *)(v0 + 48) = 1;
    v20 = v19;
    sub_23B796B90();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    v14 = 0;
  }
  v21 = *(_QWORD *)(v0 + 112);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, v14, 1, v22);
  sub_23B6F7190(v21, &qword_256A48CD8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74FA14(_OWORD *a1)
{
  uint64_t v1;

  return _s12FindMyLocate6FriendV2eeoiySbAC_ACtFZ_0(a1, *(_OWORD **)(v1 + 16)) & 1;
}

uint64_t sub_23B74FA40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23B74FA84(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23B74FA9C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B74F124(a1, v1, (uint64_t)&unk_250C97B38, (uint64_t)&unk_256A48D50);
}

uint64_t sub_23B74FAC4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B78619C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B74FAD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302F90) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B6FD140;
  return sub_23B74F280(a1, v5, v6, v7, v8);
}

uint64_t sub_23B74FB68(uint64_t a1)
{
  uint64_t v1;

  return sub_23B74F124(a1, v1, (uint64_t)&unk_250C97B60, (uint64_t)&unk_256A48D68);
}

uint64_t sub_23B74FB90(uint64_t a1)
{
  uint64_t v1;

  return sub_23B785AA0(a1, *(_QWORD *)(v1 + 16), *(_OWORD **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B74FBA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254302F90) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B6FD1B0;
  return sub_23B74EFC4(a1, v5, v6, v7, v8);
}

uint64_t sub_23B74FC38(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B78A8E4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B74FC44()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B74FC70()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B6FD1B0;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23B6FD1B0;
  return sub_23B742C84();
}

uint64_t sub_23B74FCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B74FD64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543032B0) - 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B6FD140;
  return sub_23B748058(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_23B74FE24(_OWORD *a1)
{
  return sub_23B74FA14(a1) & 1;
}

uint64_t sub_23B74FE44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return swift_task_switch();
}

uint64_t sub_23B74FE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_23B74FF14;
  return sub_23B796704();
}

uint64_t sub_23B74FF14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B74FF88()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74FF94()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B74FFC8(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B74FFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 56);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750090;
  return sub_23B796704();
}

uint64_t sub_23B750090()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B750104()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B750138(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B75015C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 56);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750200;
  return sub_23B796704();
}

uint64_t sub_23B750200()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B750274(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *v2;
  return swift_task_switch();
}

uint64_t sub_23B750298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 64);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_23B750340;
  return sub_23B796704();
}

uint64_t sub_23B750340()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B7503B4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7503E8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B750408()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_23B750340;
  return sub_23B796704();
}

uint64_t sub_23B75049C(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 57) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B7504C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 57);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750574;
  return sub_23B796704();
}

uint64_t sub_23B750574()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7505E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_23B7505F8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23B750630(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 57) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B750654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 57);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750708;
  return sub_23B796704();
}

uint64_t sub_23B750708()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B75077C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = *v0;
  return swift_task_switch();
}

uint64_t sub_23B75079C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_23B750090;
  return sub_23B796704();
}

uint64_t sub_23B75082C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a2;
  v14[5] = a1;
  v14[6] = a3;
  v14[7] = a4;
  v14[8] = a5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23B77520C((uint64_t)v12, (uint64_t)&unk_256A48EA0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_23B750928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[15] = a7;
  v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[12] = a4;
  return swift_task_switch();
}

uint64_t sub_23B750948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[16];
  v2 = v0[13];
  v3 = swift_allocObject();
  v0[17] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v4 = v0;
  v4[1] = sub_23B750A08;
  return sub_23B79671C();
}

uint64_t sub_23B750A08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B750A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  __int128 v8;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(void **)(v0 + 64);
  v8 = *(_OWORD *)(v0 + 120);
  v4 = (void *)sub_23B796A1C();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  *(_OWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v0 + 48) = sub_23B757400;
  *(_QWORD *)(v0 + 56) = v5;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B6EE8E4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_139;
  v6 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v3, sel_setActiveLocationSharingDevice_completion_, v4, v6);
  _Block_release(v6);

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B750B84()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 152);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 152);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000022, 0x800000023B7A1020, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B750DBC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v5;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;

  if (a1)
  {
    v13 = (uint64_t)a1;
    v5 = a1;
    sub_23B7966BC();

  }
  else
  {
    sub_23B7966D4();
    if (qword_2543031C8 != -1)
      swift_once();
    v8 = sub_23B7969BC();
    __swift_project_value_buffer(v8, (uint64_t)qword_254309108);
    swift_bridgeObjectRetain_n();
    v9 = sub_23B7969A4();
    v10 = sub_23B796C38();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v13 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_23B6FB388(a3, a4, &v13);
      sub_23B796C68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23B6EB000, v9, v10, "setActiveLocationSharingDevice succeeded: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v12, -1, -1);
      MEMORY[0x23B86C754](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_23B750F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 112) = a7;
  *(_BYTE *)(v7 + 144) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  return swift_task_switch();
}

uint64_t sub_23B750FA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B751060;
  return sub_23B79671C();
}

uint64_t sub_23B751060()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B7510CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = *(unsigned __int8 *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void **)(v0 + 64);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_BYTE *)(v5 + 24) = v1;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v0 + 48) = sub_23B7572D8;
  *(_QWORD *)(v0 + 56) = v5;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B6EE8E4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_123;
  v6 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_setHideMyLocationWithHidden_completion_, v1, v6);
  _Block_release(v6);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7511B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000017, 0x800000023B7A1000, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7513E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 112) = a7;
  *(_BYTE *)(v7 + 144) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  return swift_task_switch();
}

uint64_t sub_23B751408()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B7514C4;
  return sub_23B79671C();
}

uint64_t sub_23B7514C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B751530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = *(unsigned __int8 *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void **)(v0 + 64);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_BYTE *)(v5 + 24) = v1;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v0 + 48) = sub_23B7571D0;
  *(_QWORD *)(v0 + 56) = v5;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B6EE8E4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_107;
  v6 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_allowFriendshipRequestsWithAllowed_completion_, v1, v6);
  _Block_release(v6);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B751614()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000021, 0x800000023B7A0FD0, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B75184C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  id v6;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *oslog;

  if (a1)
  {
    v6 = a1;
    sub_23B7966BC();

  }
  else
  {
    sub_23B7966D4();
    if (qword_2543031C8 != -1)
      swift_once();
    v8 = sub_23B7969BC();
    __swift_project_value_buffer(v8, (uint64_t)qword_254309108);
    oslog = sub_23B7969A4();
    v9 = sub_23B796C38();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 67109120;
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, oslog, v9, a5, v10, 8u);
      MEMORY[0x23B86C754](v10, -1, -1);
    }

  }
}

uint64_t sub_23B7519A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 112) = a7;
  *(_BYTE *)(v7 + 144) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  return swift_task_switch();
}

uint64_t sub_23B7519C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B751A80;
  return sub_23B79671C();
}

uint64_t sub_23B751A80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B751AEC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = *(unsigned __int8 *)(v0 + 144);
  v2 = *(void **)(v0 + 64);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 48) = sub_23B7570C4;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B7521DC;
  *(_QWORD *)(v0 + 40) = &block_descriptor_91;
  v4 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_activeLocationSharingDeviceWithCached_completion_, v1, v4);
  _Block_release(v4);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B751BD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000024, 0x800000023B7A0FA0, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B751E08(uint64_t a1, unint64_t a2, id a3)
{
  id v3;
  id v4;
  _BYTE *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  NSObject *log;
  os_log_type_t type;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;

  if (a3)
  {
    v3 = a3;
    v31 = (uint64_t)a3;
    v4 = a3;
LABEL_5:
    sub_23B7966BC();

    return;
  }
  if (a2 >> 60 == 15)
  {
    sub_23B7090F8();
    v3 = (id)swift_allocError();
    *v6 = 1;
    v31 = (uint64_t)v3;
    goto LABEL_5;
  }
  sub_23B7967AC();
  swift_allocObject();
  sub_23B756B14(a1, a2);
  sub_23B7967A0();
  sub_23B756BBC();
  sub_23B796794();
  swift_release();
  v8 = v32;
  v9 = v34;
  v24 = v33;
  v25 = v31;
  v11 = v35;
  v10 = v36;
  v26 = v37;
  v27 = v38;
  v28 = v39;
  v29 = v40;
  if (qword_2543031C8 != -1)
    swift_once();
  v12 = sub_23B7969BC();
  __swift_project_value_buffer(v12, (uint64_t)qword_254309108);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = sub_23B7969A4();
  type = sub_23B796C38();
  if (os_log_type_enabled(v13, type))
  {
    log = v13;
    v14 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    v30 = v21;
    v31 = v25;
    v32 = v8;
    v33 = v24;
    v34 = v9;
    v35 = v11;
    v36 = v10;
    v37 = v26;
    v38 = v27;
    v39 = v28;
    v40 = v29;
    v15 = Device.description.getter();
    v31 = sub_23B6FB388(v15, v16, &v30);
    sub_23B796C68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B6EB000, log, type, "activeLocationSharingDevice succeeded: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v21, -1, -1);
    MEMORY[0x23B86C754](v14, -1, -1);

    v18 = v26;
    v17 = v27;
    v20 = v28;
    v19 = v29;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v20 = v39;
    v19 = v40;
    v18 = v37;
    v17 = v38;
  }
  v31 = v25;
  v32 = v8;
  v33 = v24;
  v34 = v9;
  v35 = v11;
  v36 = v10;
  v37 = v18;
  v38 = v17;
  v39 = v20;
  v40 = v19;
  sub_23B7966C8();
  sub_23B756B00(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_23B7521DC(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_23B79680C();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_23B756B00((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_23B752270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  return swift_task_switch();
}

uint64_t sub_23B75228C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B752348;
  return sub_23B79671C();
}

uint64_t sub_23B752348()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B7523B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 64);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 48) = sub_23B756F98;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B7521DC;
  *(_QWORD *)(v0 + 40) = &block_descriptor_75;
  v3 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_thisDeviceWithCompanionWithCompletion_, v3);
  _Block_release(v3);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B752488()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000019, 0x800000023B7A0F80, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B7526C0(uint64_t a1, unint64_t a2, id a3)
{
  id v3;
  id v4;
  _BYTE *v6;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  NSObject *log;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;

  if (a3)
  {
    v3 = a3;
    v42 = a3;
    v4 = a3;
LABEL_5:
    sub_23B7966BC();

    return;
  }
  if (a2 >> 60 == 15)
  {
    sub_23B7090F8();
    v3 = (id)swift_allocError();
    *v6 = 1;
    v42 = v3;
    goto LABEL_5;
  }
  sub_23B7967AC();
  swift_allocObject();
  sub_23B756B14(a1, a2);
  sub_23B7967A0();
  sub_23B756FA0();
  sub_23B796794();
  swift_release();
  v9 = v42;
  v8 = v43;
  v10 = v44;
  v11 = v45;
  v12 = v46;
  v13 = v47;
  v34 = v48;
  v39 = v51;
  v40 = v50;
  v35 = v49;
  v36 = v52;
  v37 = v54;
  v38 = v53;
  v30 = v55;
  if (qword_2543031C8 != -1)
    swift_once();
  v14 = sub_23B7969BC();
  __swift_project_value_buffer(v14, (uint64_t)qword_254309108);
  sub_23B70B5A0((uint64_t)v42, v43);
  sub_23B70B5A0(v49, v50);
  v32 = v43;
  v33 = (uint64_t)v42;
  v31 = v47;
  sub_23B70B5A0((uint64_t)v42, v43);
  sub_23B70B5A0(v49, v50);
  v15 = sub_23B7969A4();
  v16 = sub_23B796C38();
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v41 = v28;
    *(_DWORD *)v17 = 136315138;
    v42 = v9;
    v43 = v8;
    v44 = v10;
    v45 = v11;
    v46 = v12;
    v47 = v13;
    v48 = v34;
    v49 = v35;
    v50 = v40;
    v51 = v39;
    v52 = v36;
    v53 = v38;
    v54 = v37;
    v55 = v30;
    v18 = DeviceWithCompanion.description.getter();
    v42 = (id)sub_23B6FB388(v18, v19, &v41);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    v20 = v12;
    v21 = v31;
    sub_23B729600((uint64_t)v9, v8);
    sub_23B729600(v35, v40);
    sub_23B729600((uint64_t)v9, v8);
    sub_23B729600(v35, v40);
    _os_log_impl(&dword_23B6EB000, log, v16, "thisDeviceWithCompanion succeeded: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v28, -1, -1);
    MEMORY[0x23B86C754](v17, -1, -1);

    v22 = v30;
    v24 = v8;
    v23 = v9;
    v25 = v10;
    v26 = v11;
    v27 = v34;
  }
  else
  {
    v27 = v48;
    sub_23B729600((uint64_t)v42, v43);
    sub_23B729600(v49, v50);
    v26 = v45;
    sub_23B729600((uint64_t)v42, v43);
    sub_23B729600(v49, v50);

    v22 = v55;
    v24 = v43;
    v23 = v42;
    v25 = v44;
    v20 = v46;
    v21 = v47;
  }
  v42 = v23;
  v43 = v24;
  v44 = v25;
  v45 = v26;
  v46 = v20;
  v47 = v21;
  v48 = v27;
  v49 = v35;
  v50 = v40;
  v51 = v39;
  v52 = v36;
  v53 = v38;
  v54 = v37;
  v55 = v22;
  sub_23B7966C8();
  sub_23B756B00(a1, a2);
  sub_23B729600(v33, v32);
  sub_23B729600(v35, v40);
}

uint64_t sub_23B752C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 112) = a7;
  *(_BYTE *)(v7 + 144) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  return swift_task_switch();
}

uint64_t sub_23B752C60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B752D1C;
  return sub_23B79671C();
}

uint64_t sub_23B752D1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B752D88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = *(unsigned __int8 *)(v0 + 144);
  v2 = *(void **)(v0 + 64);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 48) = sub_23B756EB0;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B7530A4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_59;
  v4 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_isMyLocationEnabledWithCached_completion_, v1, v4);
  _Block_release(v4);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B752E6C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD00000000000001CLL, 0x800000023B7A0F60, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B7530A4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23B753104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 112) = a7;
  *(_BYTE *)(v7 + 144) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  return swift_task_switch();
}

uint64_t sub_23B753124()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B7531E0;
  return sub_23B79671C();
}

uint64_t sub_23B7531E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B75324C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = *(unsigned __int8 *)(v0 + 144);
  v2 = *(void **)(v0 + 64);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 48) = sub_23B756DB0;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B7530A4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_43;
  v4 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_areFriendshipRequestsAllowedWithCached_completion_, v1, v4);
  _Block_release(v4);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B753330()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000025, 0x800000023B7A0F10, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B753568(int a1, id a2, uint64_t a3, uint64_t a4, const char *a5)
{
  id v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  if (a2)
  {
    v6 = a2;
    sub_23B7966BC();

  }
  else
  {
    if (qword_2543031C8 != -1)
      swift_once();
    v8 = sub_23B7969BC();
    __swift_project_value_buffer(v8, (uint64_t)qword_254309108);
    v9 = sub_23B7969A4();
    v10 = sub_23B796C38();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v11 = 67109120;
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, v9, v10, a5, v11, 8u);
      MEMORY[0x23B86C754](v11, -1, -1);
    }

    sub_23B7966C8();
  }
}

uint64_t sub_23B7536C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B6EFB08(a1, a2, a3, (uint64_t)&unk_250C97C50, (uint64_t)&unk_256A48E20);
}

uint64_t sub_23B7536D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  return swift_task_switch();
}

uint64_t sub_23B7536F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B7537AC;
  return sub_23B79671C();
}

uint64_t sub_23B7537AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B753818()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = v0[13];
  v2 = (void *)v0[8];
  v0[6] = sub_23B756CC8;
  v0[7] = v1;
  v0[2] = MEMORY[0x24BDAC760];
  v0[3] = 1107296256;
  v0[4] = sub_23B6EE8E4;
  v0[5] = &block_descriptor_24;
  v3 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_startMonitoringPreferencesChangeForClientWithCompletion_, v3);
  _Block_release(v3);
  swift_unknownObjectRelease();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_23B7538CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD00000000000002BLL, 0x800000023B7A0650, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B753B04(void *a1)
{
  id v2;

  if (a1)
  {
    v2 = a1;
    sub_23B7966BC();

  }
  else
  {
    sub_23B7966D4();
  }
}

uint64_t sub_23B753B50(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = v1;
  *(_BYTE *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 32) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B753B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 64);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48DF8);
  *v5 = v0;
  v5[1] = sub_23B753C30;
  return sub_23B796704();
}

uint64_t sub_23B753C30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B753CA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23B753CB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a1;
  *(_BYTE *)(v15 + 48) = a3;
  *(_QWORD *)(v15 + 56) = a4;
  swift_retain();
  swift_retain();
  sub_23B77520C((uint64_t)v13, a6, v15);
  return swift_release();
}

uint64_t sub_23B753DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 112) = a7;
  *(_BYTE *)(v7 + 144) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  return swift_task_switch();
}

uint64_t sub_23B753DC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C985C9C18SettingsConnectionCMa();
  sub_23B756A8C();
  *v2 = v0;
  v2[1] = sub_23B753E7C;
  return sub_23B79671C();
}

uint64_t sub_23B753E7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B753EE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = *(unsigned __int8 *)(v0 + 144);
  v2 = *(void **)(v0 + 64);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 48) = sub_23B756AF8;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B7521DC;
  *(_QWORD *)(v0 + 40) = &block_descriptor_2;
  v4 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_allDevicesWithCached_completion_, v1, v4);
  _Block_release(v4);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B753FCC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_2543031C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309108);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000013, 0x800000023B7A0ED0, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B754204(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  if (qword_2543031C8 != -1)
    swift_once();
  v8 = sub_23B7969BC();
  __swift_project_value_buffer(v8, (uint64_t)qword_254309108);
  v9 = a1;
  v10 = sub_23B7969A4();
  v11 = sub_23B796C20();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v17 = v14;
    *(_DWORD *)v12 = 136446466;
    sub_23B6FB388(a4, a5, &v17);
    sub_23B796C68();
    *(_WORD *)(v12 + 12) = 2114;
    v16 = sub_23B7967DC();
    sub_23B796C68();
    *v13 = v16;

    _os_log_impl(&dword_23B6EB000, v10, v11, "Proxy error in %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v14, -1, -1);
    MEMORY[0x23B86C754](v12, -1, -1);
  }
  else
  {

  }
  v17 = (uint64_t)a1;
  return sub_23B7966BC();
}

void sub_23B754414(uint64_t a1, unint64_t a2, id a3)
{
  id v3;
  id v4;
  _BYTE *v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a3)
  {
    v3 = a3;
    v18 = (uint64_t)a3;
    v4 = a3;
LABEL_5:
    sub_23B7966BC();

    return;
  }
  if (a2 >> 60 == 15)
  {
    sub_23B7090F8();
    v3 = (id)swift_allocError();
    *v6 = 1;
    v18 = (uint64_t)v3;
    goto LABEL_5;
  }
  sub_23B7967AC();
  swift_allocObject();
  sub_23B756B14(a1, a2);
  sub_23B7967A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48DF8);
  sub_23B756B58();
  sub_23B796794();
  swift_release();
  v8 = v18;
  if (qword_2543031C8 != -1)
    swift_once();
  v9 = sub_23B7969BC();
  __swift_project_value_buffer(v9, (uint64_t)qword_254309108);
  swift_bridgeObjectRetain_n();
  v10 = sub_23B7969A4();
  v11 = sub_23B796C38();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v12 = 136315138;
    v13 = swift_bridgeObjectRetain();
    v14 = MEMORY[0x23B86BE78](v13, &type metadata for Device);
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_23B6FB388(v14, v16, &v18);
    sub_23B796C68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B6EB000, v10, v11, "allDevices succeeded: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v17, -1, -1);
    MEMORY[0x23B86C754](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v18 = v8;
  sub_23B7966C8();
  sub_23B756B00(a1, a2);
  swift_bridgeObjectRelease();
}

uint64_t sub_23B754704(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return swift_task_switch();
}

uint64_t sub_23B754728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_23B7547D4;
  return sub_23B796704();
}

uint64_t sub_23B7547D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B754848(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B75486C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 56);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750090;
  return sub_23B796704();
}

uint64_t sub_23B754910(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B754934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 56);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750200;
  return sub_23B796704();
}

uint64_t sub_23B7549D8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *v2;
  return swift_task_switch();
}

uint64_t sub_23B7549FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 64);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_23B754AA4;
  return sub_23B796704();
}

uint64_t sub_23B754AA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B754B18(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B754B38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_23B750340;
  return sub_23B796704();
}

uint64_t sub_23B754BCC(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 57) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B754BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 57);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750574;
  return sub_23B796704();
}

uint64_t sub_23B754CA4(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 57) = a1;
  *(_QWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B754CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 57);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_23B750708;
  return sub_23B796704();
}

uint64_t sub_23B754D7C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = *v0;
  return swift_task_switch();
}

uint64_t sub_23B754D9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_23B750200;
  return sub_23B796704();
}

uint64_t sub_23B754E2C(char a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = v1;
  *(_BYTE *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 32) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B754E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 64);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A48DF8);
  *v5 = v0;
  v5[1] = sub_23B753C30;
  return sub_23B796704();
}

void sub_23B754F0C()
{
  JUMPOUT(0x23B86C7E4);
}

uint64_t sub_23B754F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  swift_retain();
  sub_23B77520C((uint64_t)v3, (uint64_t)&unk_256A48F10, (uint64_t)v6);
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23B754FF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((int)*MEMORY[0x24BE31840] + MEMORY[0x24BE31840]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B6FD140;
  return v3();
}

uint64_t sub_23B755050()
{
  sub_23B754F14();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B755068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B755BE8(a1, a2, a3, a4, (uint64_t)&unk_250C98060, (void (*)(uint64_t, uint64_t))sub_23B757748, (uint64_t)&unk_256A48EE0);
}

uint64_t sub_23B755084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  sub_23B7968D8();
  v8[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B7550E4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  if (qword_254302B38 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254308FC8);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v14 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_QWORD *)(v0 + 16) = sub_23B6FB388(0xD000000000000025, 0x800000023B7A1080, &v14);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 32);
  sub_23B796650();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = v9;
  v11[4] = v7;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v6;
  sub_23B757748(v10, v9);
  swift_retain();
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75531C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  v4 = *MEMORY[0x24BEE4EA0];
  v3[19] = *a3;
  v3[20] = v4;
  return swift_task_switch();
}

uint64_t sub_23B75534C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  if (*(_QWORD *)(v0 + 136) >> 60 == 15)
  {
    v1 = 0;
    v2 = 0;
    v3 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
  }
  else
  {
    sub_23B7967AC();
    swift_allocObject();
    sub_23B7967A0();
    sub_23B756BBC();
    sub_23B796794();
    swift_release();
    v1 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    if (*(_BYTE *)(v0 + 121))
      v8 = 256;
    else
      v8 = 0;
    v9 = v8 | *(unsigned __int8 *)(v0 + 120);
    if (*(_BYTE *)(v0 + 122))
      v10 = 0x10000;
    else
      v10 = 0;
    if (*(_BYTE *)(v0 + 123))
      v11 = 0x1000000;
    else
      v11 = 0;
    v7 = v9 | v10 | v11;
  }
  *(_DWORD *)(v0 + 68) = v7;
  *(_QWORD *)(v0 + 200) = v5;
  *(_QWORD *)(v0 + 208) = v6;
  *(_QWORD *)(v0 + 184) = v3;
  *(_QWORD *)(v0 + 192) = v4;
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 176) = v2;
  return swift_task_switch();
}

uint64_t sub_23B755498()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = MEMORY[0x23B86C7E4](*(_QWORD *)(v0 + 144) + 112);
  return swift_task_switch();
}

uint64_t sub_23B7554DC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  if (*(_QWORD *)(v0 + 216))
  {
    v1 = *(_DWORD *)(v0 + 68);
    v3 = *(_QWORD *)(v0 + 152);
    v2 = *(_QWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 168);
    v4 = v3 & v2;
    v5 = *(_OWORD *)(v0 + 200);
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 184);
    *(_OWORD *)(v0 + 48) = v5;
    *(_DWORD *)(v0 + 64) = v1;
    v7 = *(_QWORD *)(v4 + 80);
    v6 = *(_QWORD *)(v4 + 88);
    v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v8;
    *v8 = v0;
    v8[1] = sub_23B7555B4;
    return v10(v0 + 16, v7, v6);
  }
  else
  {
    sub_23B729600(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B7555B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_unknownObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 176);
    v5 = *(_QWORD *)(v2 + 168);
    swift_unknownObjectRelease();
    sub_23B729600(v5, v4);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_23B755688()
{
  uint64_t v0;

  sub_23B729600(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7556C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = a4;
  *(_BYTE *)(v4 + 88) = a2;
  *(_QWORD *)(v4 + 40) = a1;
  v5 = sub_23B796B6C();
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 72) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B755730()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void (*v5)(_QWORD);
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  id v16;
  os_log_type_t v17;
  _BOOL4 v18;
  void *v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(void *);
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;

  if ((*(_BYTE *)(v0 + 88) & 1) != 0)
  {
    v6 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 16) = v6;
    v7 = v6;
    v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    if ((swift_dynamicCast() & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
      if (qword_254302B38 != -1)
        swift_once();
      v9 = sub_23B7969BC();
      __swift_project_value_buffer(v9, (uint64_t)qword_254308FC8);
      v10 = sub_23B7969A4();
      v11 = sub_23B796C38();
      if (!os_log_type_enabled(v10, v11))
        goto LABEL_18;
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23B6EB000, v10, v11, "meDeviceUpdated workItem cancelled", v12, 2u);
      v13 = v12;
    }
    else
    {
      if (qword_254302B38 != -1)
        swift_once();
      v14 = sub_23B7969BC();
      __swift_project_value_buffer(v14, (uint64_t)qword_254308FC8);
      v15 = v6;
      v16 = v6;
      v10 = sub_23B7969A4();
      v17 = sub_23B796C20();
      v18 = os_log_type_enabled(v10, v17);
      v19 = *(void **)(v0 + 40);
      if (!v18)
      {
        sub_23B757618(*(id *)(v0 + 40), 1);
        sub_23B757618(v19, 1);
        goto LABEL_18;
      }
      v20 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v29 = v28;
      *(_DWORD *)v20 = 136446210;
      *(_QWORD *)(v0 + 24) = v6;
      v21 = v6;
      v22 = sub_23B796A4C();
      *(_QWORD *)(v0 + 32) = sub_23B6FB388(v22, v23, &v29);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B757618(v19, 1);
      sub_23B757618(v19, 1);
      _os_log_impl(&dword_23B6EB000, v10, v17, "meDeviceUpdated workItem failure. Error %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v28, -1, -1);
      v13 = v20;
    }
    MEMORY[0x23B86C754](v13, -1, -1);
LABEL_18:

    v24 = *(void (**)(void *))(v0 + 48);
    v25 = *(void **)(v0 + 40);
    v26 = v6;
    v24(v25);
    sub_23B757618(v25, 1);
    sub_23B757618(v25, 1);
    goto LABEL_19;
  }
  if (qword_254302B38 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254308FC8);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B6EB000, v2, v3, "meDeviceUpdated workItem success", v4, 2u);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  v5 = *(void (**)(_QWORD))(v0 + 48);

  v5(0);
LABEL_19:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B755B10(int a1, int a2, void *a3, void *aBlock)
{
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = _Block_copy(aBlock);
  swift_retain();
  if (a3)
  {
    v6 = a3;
    a3 = (void *)sub_23B79680C();
    v8 = v7;

  }
  else
  {
    v8 = 0xF000000000000000;
  }
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v5;
  sub_23B755068((uint64_t)a3, v8, (uint64_t)sub_23B75799C, v9);
  swift_release();
  sub_23B756B00((uint64_t)a3, v8);
  return swift_release();
}

uint64_t sub_23B755BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B755BE8(a1, a2, a3, a4, (uint64_t)&unk_250C97FE8, (void (*)(uint64_t, uint64_t))sub_23B756B14, (uint64_t)&unk_256A48EB0);
}

uint64_t sub_23B755BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v10 = v7;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = v10;
  v19[7] = a3;
  v19[8] = a4;
  a6(a1, a2);
  swift_retain();
  swift_retain();
  sub_23B77520C((uint64_t)v17, a7, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_23B755CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  sub_23B7968D8();
  v8[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B755D54()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  if (qword_254302B38 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254308FC8);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v14 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_QWORD *)(v0 + 16) = sub_23B6FB388(0xD000000000000026, 0x800000023B7A1050, &v14);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 32);
  sub_23B796650();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = v9;
  v11[4] = v7;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v6;
  sub_23B756B14(v10, v9);
  swift_retain();
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B755F8C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  v4 = *MEMORY[0x24BEE4EA0];
  v3[19] = *a3;
  v3[20] = v4;
  return swift_task_switch();
}

uint64_t sub_23B755FBC()
{
  uint64_t v0;
  __int128 v1;

  sub_23B7967AC();
  swift_allocObject();
  sub_23B7967A0();
  sub_23B757624();
  sub_23B796794();
  swift_release();
  v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 184) = v1;
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v0 + 48);
  *(_DWORD *)(v0 + 240) = *(_DWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 69) = *(_BYTE *)(v0 + 68);
  return swift_task_switch();
}

uint64_t sub_23B7560AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = MEMORY[0x23B86C7E4](*(_QWORD *)(v0 + 144) + 112);
  return swift_task_switch();
}

uint64_t sub_23B7560F0()
{
  uint64_t v0;
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  if (*(_QWORD *)(v0 + 216))
  {
    v1 = *(_BYTE *)(v0 + 69);
    v2 = *(_DWORD *)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 152) & *(_QWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 168);
    *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 184);
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 200);
    *(_DWORD *)(v0 + 120) = v2;
    *(_BYTE *)(v0 + 124) = v1;
    v5 = *(_QWORD *)(v3 + 80);
    v4 = *(_QWORD *)(v3 + 88);
    v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v6;
    *v6 = v0;
    v6[1] = sub_23B7561D8;
    return v8(v0 + 72, v5, v4);
  }
  else
  {
    sub_23B7295F0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(unsigned int *)(v0 + 240), *(_BYTE *)(v0 + 69));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B7561D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = *v1;
  *(_QWORD *)(v2 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_unknownObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 208);
    v5 = *(unsigned int *)(v2 + 240);
    v7 = *(_QWORD *)(v2 + 192);
    v6 = *(_QWORD *)(v2 + 200);
    v9 = *(_QWORD *)(v2 + 176);
    v8 = *(_QWORD *)(v2 + 184);
    v10 = *(_QWORD *)(v2 + 168);
    v11 = *(_BYTE *)(v2 + 69);
    swift_unknownObjectRelease();
    sub_23B7295F0(v10, v9, v8, v7, v6, v4, v5, v11);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_23B7562B4()
{
  uint64_t v0;

  sub_23B7295F0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(unsigned int *)(v0 + 240), *(_BYTE *)(v0 + 69));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7562F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 80) = a4;
  *(_BYTE *)(v4 + 112) = a2;
  *(_QWORD *)(v4 + 64) = a1;
  v5 = sub_23B796B6C();
  *(_QWORD *)(v4 + 88) = v5;
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B756360()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  os_log_type_t v18;
  _BOOL4 v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(void *);
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;

  if ((*(_BYTE *)(v0 + 112) & 1) != 0)
  {
    v6 = *(void **)(v0 + 64);
    *(_QWORD *)(v0 + 16) = v6;
    v7 = v6;
    v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    if ((swift_dynamicCast() & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
      if (qword_254302B38 != -1)
        swift_once();
      v9 = sub_23B7969BC();
      __swift_project_value_buffer(v9, (uint64_t)qword_254308FC8);
      v10 = sub_23B7969A4();
      v11 = sub_23B796C38();
      if (!os_log_type_enabled(v10, v11))
        goto LABEL_18;
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v30 = v13;
      *(_DWORD *)v12 = 136446210;
      *(_QWORD *)(v0 + 48) = sub_23B6FB388(0xD000000000000026, 0x800000023B7A1050, &v30);
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, v10, v11, "%{public}s workItem cancelled", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v13, -1, -1);
      v14 = (uint64_t)v12;
    }
    else
    {
      if (qword_254302B38 != -1)
        swift_once();
      v15 = sub_23B7969BC();
      __swift_project_value_buffer(v15, (uint64_t)qword_254308FC8);
      v16 = v6;
      v17 = v6;
      v10 = sub_23B7969A4();
      v18 = sub_23B796C20();
      v19 = os_log_type_enabled(v10, v18);
      v20 = *(void **)(v0 + 64);
      if (!v19)
      {
        sub_23B757618(*(id *)(v0 + 64), 1);
        sub_23B757618(v20, 1);
        goto LABEL_18;
      }
      v21 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v30 = v29;
      *(_DWORD *)v21 = 136446466;
      *(_QWORD *)(v0 + 24) = sub_23B6FB388(0xD000000000000026, 0x800000023B7A1050, &v30);
      sub_23B796C68();
      *(_WORD *)(v21 + 12) = 2082;
      *(_QWORD *)(v0 + 32) = v6;
      v22 = v6;
      v23 = sub_23B796A4C();
      *(_QWORD *)(v0 + 40) = sub_23B6FB388(v23, v24, &v30);
      sub_23B796C68();
      swift_bridgeObjectRelease();
      sub_23B757618(v20, 1);
      sub_23B757618(v20, 1);
      _os_log_impl(&dword_23B6EB000, v10, v18, "%{public}s workItem failure. Error %{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v29, -1, -1);
      v14 = v21;
    }
    MEMORY[0x23B86C754](v14, -1, -1);
LABEL_18:

    v25 = *(void (**)(void *))(v0 + 72);
    v26 = *(void **)(v0 + 64);
    v27 = v6;
    v25(v26);
    sub_23B757618(v26, 1);
    sub_23B757618(v26, 1);
    goto LABEL_19;
  }
  if (qword_254302B38 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254308FC8);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v30 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_QWORD *)(v0 + 56) = sub_23B6FB388(0xD000000000000026, 0x800000023B7A1050, &v30);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s workItem success", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  (*(void (**)(_QWORD))(v0 + 72))(0);
LABEL_19:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B756894(int a1, int a2, void *a3, void *aBlock)
{
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v5 = _Block_copy(aBlock);
  v6 = a3;
  swift_retain();
  v7 = sub_23B79680C();
  v9 = v8;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v5;
  sub_23B755BCC(v7, v9, (uint64_t)sub_23B7578A8, v10);
  swift_release();
  sub_23B6FDDF8(v7, v9);
  return swift_release();
}

void sub_23B756940()
{
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23B756974()
{
  sub_23B756940();
}

uint64_t sub_23B756988()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B756994()
{
  return sub_23B756988();
}

uint64_t sub_23B7569AC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B753CB0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_250C97BD8, (uint64_t)&unk_256A48E08);
}

uint64_t sub_23B7569DC()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B7569E4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B6FD140;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 144) = v2;
  *(_OWORD *)(v4 + 96) = v5;
  return swift_task_switch();
}

uint64_t sub_23B756A5C(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000013, 0x800000023B7A0ED0);
}

unint64_t sub_23B756A8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254302CC0;
  if (!qword_254302CC0)
  {
    v1 = _s14descr250C985C9C18SettingsConnectionCMa();
    result = MEMORY[0x23B86C6B8](&unk_23B79AF60, v1);
    atomic_store(result, (unint64_t *)&qword_254302CC0);
  }
  return result;
}

uint64_t sub_23B756AD4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23B756AF8(uint64_t a1, unint64_t a2, id a3)
{
  sub_23B754414(a1, a2, a3);
}

uint64_t sub_23B756B00(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23B6FDDF8(a1, a2);
  return a1;
}

uint64_t sub_23B756B14(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_23B756B58()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256A48E10;
  if (!qword_256A48E10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A48DF8);
    v2 = sub_23B756BBC();
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, &qword_256A48E10);
  }
  return result;
}

unint64_t sub_23B756BBC()
{
  unint64_t result;

  result = qword_254302D30;
  if (!qword_254302D30)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Device, &type metadata for Device);
    atomic_store(result, (unint64_t *)&qword_254302D30);
  }
  return result;
}

uint64_t sub_23B756C00(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6EFB08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_250C97C50, (uint64_t)&unk_256A48E20);
}

uint64_t sub_23B756C28()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B756C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B6FD140;
  *(_QWORD *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v4;
  return swift_task_switch();
}

uint64_t sub_23B756C98(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD00000000000002BLL, 0x800000023B7A0650);
}

void sub_23B756CC8(void *a1)
{
  sub_23B753B04(a1);
}

uint64_t sub_23B756CD0(uint64_t a1)
{
  uint64_t v1;

  return sub_23B753CB0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_250C97CA0, (uint64_t)&unk_256A48E38);
}

uint64_t sub_23B756D00()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B756D08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B6FD140;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 144) = v2;
  *(_OWORD *)(v4 + 96) = v5;
  return swift_task_switch();
}

uint64_t sub_23B756D80(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000025, 0x800000023B7A0F10);
}

void sub_23B756DB0(int a1, void *a2)
{
  uint64_t v2;

  sub_23B753568(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), "areFriendshipRequestsAllowed succeeded: %{BOOL}d");
}

uint64_t sub_23B756DD0(uint64_t a1)
{
  uint64_t v1;

  return sub_23B753CB0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_250C97D18, (uint64_t)&unk_256A48E48);
}

uint64_t sub_23B756E00()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B756E08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B6FD1B0;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 144) = v2;
  *(_OWORD *)(v4 + 96) = v5;
  return swift_task_switch();
}

uint64_t sub_23B756E80(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD00000000000001CLL, 0x800000023B7A0F60);
}

void sub_23B756EB0(int a1, void *a2)
{
  uint64_t v2;

  sub_23B753568(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), "isMyLocationEnabled succeeded: %{BOOL}d");
}

uint64_t sub_23B756ED0(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6EFB08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_250C97D90, (uint64_t)&unk_256A48E58);
}

uint64_t sub_23B756EF8()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B756F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B6FD140;
  *(_QWORD *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v4;
  return swift_task_switch();
}

uint64_t sub_23B756F68(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000019, 0x800000023B7A0F80);
}

void sub_23B756F98(uint64_t a1, unint64_t a2, id a3)
{
  sub_23B7526C0(a1, a2, a3);
}

unint64_t sub_23B756FA0()
{
  unint64_t result;

  result = qword_256A48E60;
  if (!qword_256A48E60)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for DeviceWithCompanion, &type metadata for DeviceWithCompanion);
    atomic_store(result, &qword_256A48E60);
  }
  return result;
}

uint64_t sub_23B756FE4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B753CB0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_250C97E08, (uint64_t)&unk_256A48E70);
}

uint64_t sub_23B757014()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B75701C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B6FD140;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 144) = v2;
  *(_OWORD *)(v4 + 96) = v5;
  return swift_task_switch();
}

uint64_t sub_23B757094(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000024, 0x800000023B7A0FA0);
}

void sub_23B7570C4(uint64_t a1, unint64_t a2, id a3)
{
  sub_23B751E08(a1, a2, a3);
}

uint64_t sub_23B7570CC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B753CB0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_250C97E80, (uint64_t)&unk_256A48E80);
}

uint64_t sub_23B7570FC()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B757104()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B6FD140;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 144) = v2;
  *(_OWORD *)(v4 + 96) = v5;
  return swift_task_switch();
}

uint64_t sub_23B75717C(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000021, 0x800000023B7A0FD0);
}

uint64_t sub_23B7571AC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23B7571D0(void *a1)
{
  uint64_t v1;

  sub_23B75184C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), "allowFriendshipRequests succeeded: %{BOOL}d");
}

uint64_t sub_23B7571F8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B753CB0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_250C97EF8, (uint64_t)&unk_256A48E90);
}

uint64_t sub_23B757228()
{
  return objectdestroyTm_1();
}

uint64_t sub_23B757230()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B6FD140;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 144) = v2;
  *(_OWORD *)(v4 + 96) = v5;
  return swift_task_switch();
}

uint64_t sub_23B7572A8(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000017, 0x800000023B7A1000);
}

void sub_23B7572D8(void *a1)
{
  uint64_t v1;

  sub_23B75184C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), "hideMyLocation succeeded: %{BOOL}d");
}

uint64_t sub_23B757300(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B75082C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23B75730C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B757348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B6FD140;
  *(_OWORD *)(v3 + 120) = v5;
  *(_QWORD *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v4;
  return swift_task_switch();
}

uint64_t sub_23B7573B8(void *a1)
{
  uint64_t v1;

  return sub_23B754204(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000022, 0x800000023B7A1020);
}

uint64_t sub_23B7573E8()
{
  return objectdestroy_135Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_23B757400(void *a1)
{
  uint64_t v1;

  sub_23B750DBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B75740C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23B6FDDF8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B757448(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B6FD140;
  return sub_23B755CF4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23B7574DC()
{
  uint64_t v0;

  sub_23B6FDDF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B757508()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (_QWORD *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23B6FD140;
  v5[17] = v3;
  v5[18] = v4;
  v5[16] = v2;
  v6 = *MEMORY[0x24BEE4EA0];
  v5[19] = *v4;
  v5[20] = v6;
  return swift_task_switch();
}

uint64_t sub_23B75758C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B7575B0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = a2 & 1;
  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23B6FD140;
  return sub_23B7562F8(a1, v5, v7, v6);
}

void sub_23B757618(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

unint64_t sub_23B757624()
{
  unint64_t result;

  result = qword_254302CA0;
  if (!qword_254302CA0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for PreferenceStreamChange, &type metadata for PreferenceStreamChange);
    atomic_store(result, (unint64_t *)&qword_254302CA0);
  }
  return result;
}

uint64_t sub_23B757668()
{
  uint64_t v0;
  unint64_t v1;

  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_23B6FDDF8(*(_QWORD *)(v0 + 32), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B7576B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B6FD140;
  return sub_23B755084(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23B757748(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23B756B14(a1, a2);
  return a1;
}

uint64_t sub_23B75775C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_23B6FDDF8(*(_QWORD *)(v0 + 16), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B757798()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (_QWORD *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23B6FD1B0;
  v5[17] = v3;
  v5[18] = v4;
  v5[16] = v2;
  v6 = *MEMORY[0x24BEE4EA0];
  v5[19] = *v4;
  v5[20] = v6;
  return swift_task_switch();
}

uint64_t sub_23B75781C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = a2 & 1;
  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23B6FD140;
  return sub_23B7556C8(a1, v5, v7, v6);
}

uint64_t sub_23B757884()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23B7578A8(uint64_t a1)
{
  uint64_t v1;

  sub_23B7854A8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23B7578B0()
{
  return objectdestroy_135Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_135Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject();
}

uint64_t sub_23B757910()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B6FD140;
  v4 = (uint64_t (*)(void))((int)*MEMORY[0x24BE31840] + MEMORY[0x24BE31840]);
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23B6FD140;
  return v4();
}

uint64_t sub_23B757A4C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 40) = *v0;
  return swift_task_switch();
}

uint64_t sub_23B757A6C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_QWORD *)(v0 + 24) = sub_23B6FB388(0xD000000000000029, 0x800000023B7A10D0, &v9);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v6;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 32);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v7 = v0;
  v7[1] = sub_23B757C5C;
  return sub_23B796704();
}

uint64_t sub_23B757C5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B757CD0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B757CF0()
{
  int8x16_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t *v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[1].i64[1] = sub_23B6FB388(0xD000000000000015, 0x800000023B7A11C0, &v10);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = v0[3].i64[0];
  v7 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v7;
  v7[1] = vextq_s8(v0[2], v0[2], 8uLL);
  v7[2].i64[0] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  v0[4].i64[0] = (uint64_t)v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v8 = v0;
  v8[1] = sub_23B757EEC;
  return sub_23B796704();
}

uint64_t sub_23B757EEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B757F60()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B757F94(uint64_t a1, _BYTE *a2)
{
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *v2;
  *(_BYTE *)(v3 + 64) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B757FBC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(_BYTE *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_23B758064;
  return sub_23B796704();
}

uint64_t sub_23B758064()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7580D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23B758154()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_23B758164()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7581A0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B7581C0()
{
  int8x16_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t *v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136446210;
    v0[1].i64[1] = sub_23B6FB388(0x6E6F697461636F6CLL, 0xEF293A726F662873, &v10);
    sub_23B796C68();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  v6 = v0[3].i64[0];
  v7 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v7;
  v7[1] = vextq_s8(v0[2], v0[2], 8uLL);
  v7[2].i64[0] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  v0[4].i64[0] = (uint64_t)v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v8 = v0;
  v8[1] = sub_23B7583CC;
  return sub_23B796704();
}

uint64_t sub_23B7583CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B758440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return swift_task_switch();
}

uint64_t sub_23B75845C()
{
  uint64_t v0;
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(__int128 **)(v0 + 152);
  sub_23B7967D0();
  swift_allocObject();
  sub_23B7967C4();
  v3 = v1[1];
  v2 = v1[2];
  v4 = *v1;
  *(_QWORD *)(v0 + 61) = *(_QWORD *)((char *)v1 + 45);
  *(_OWORD *)(v0 + 32) = v3;
  *(_OWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v0 + 16) = v4;
  sub_23B6FD428();
  *(_QWORD *)(v0 + 184) = sub_23B7967B8();
  *(_QWORD *)(v0 + 192) = v5;
  v9 = *(_OWORD *)(v0 + 168);
  swift_release();
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 200) = v6;
  *(_OWORD *)(v6 + 16) = v9;
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v7;
  _s14descr250C98631C18LocationConnectionCMa();
  sub_23B6EE138(&qword_2543025A0, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B068);
  *v7 = v0;
  v7[1] = sub_23B7587B8;
  return sub_23B79671C();
}

uint64_t sub_23B7587B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B758824()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 144);
  v8 = *(_OWORD *)(v0 + 168);
  v4 = (void *)sub_23B7967F4();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = v8;
  *(_QWORD *)(v0 + 104) = sub_23B75DDC4;
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 72) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 80) = 1107296256;
  *(_QWORD *)(v0 + 88) = sub_23B7521DC;
  *(_QWORD *)(v0 + 96) = &block_descriptor_87;
  v6 = _Block_copy((const void *)(v0 + 72));
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_startRefreshingLocation_completion_, v4, v6);
  _Block_release(v6);

  swift_unknownObjectRelease();
  sub_23B6FDDF8(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B758934()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_23B6FDDF8(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  swift_release();
  v1 = *(void **)(v0 + 216);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 128) = sub_23B6FB388(0xD00000000000001BLL, 0x800000023B7A0020, &v11);
    sub_23B796C68();
    *(_WORD *)(v6 + 12) = 2114;
    v9 = sub_23B7967DC();
    *(_QWORD *)(v0 + 136) = v9;
    sub_23B796C68();
    *v7 = v9;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);
  }
  else
  {

  }
  *(_QWORD *)(v0 + 120) = v1;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B758B74(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  uint64_t v37;

  if (qword_254303110 != -1)
    swift_once();
  v6 = sub_23B7969BC();
  __swift_project_value_buffer(v6, (uint64_t)qword_2543090D0);
  sub_23B757748(a1, a2);
  sub_23B757748(a1, a2);
  v7 = sub_23B7969A4();
  v8 = sub_23B796C14();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v36[1] = a2;
    v37 = v10;
    *(_DWORD *)v9 = 136315138;
    sub_23B757748(a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A49028);
    v11 = sub_23B796A4C();
    v36[0] = sub_23B6FB388(v11, v12, &v37);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B756B00(a1, a2);
    sub_23B756B00(a1, a2);
    _os_log_impl(&dword_23B6EB000, v7, v8, "startRefreshingLocation response: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v9, -1, -1);

    if (a3)
    {
LABEL_5:
      v13 = a3;
      v14 = a3;
      v15 = a3;
      v16 = sub_23B7969A4();
      v17 = sub_23B796C20();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v36[0] = v19;
        *(_DWORD *)v18 = 136446210;
        v37 = (uint64_t)a3;
        v20 = a3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
        v21 = sub_23B796A4C();
        v37 = sub_23B6FB388(v21, v22, v36);
        sub_23B796C68();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23B6EB000, v16, v17, "startRefreshingLocation failed with %{public}s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B86C754](v19, -1, -1);
        MEMORY[0x23B86C754](v18, -1, -1);
      }
      else
      {

      }
      v36[0] = (uint64_t)a3;
      sub_23B7966BC();
      v25 = a3;
      goto LABEL_12;
    }
  }
  else
  {
    sub_23B756B00(a1, a2);
    sub_23B756B00(a1, a2);

    if (a3)
      goto LABEL_5;
  }
  if (a2 >> 60 == 15)
  {
    sub_23B7090F8();
    v23 = swift_allocError();
    *v24 = 1;
    v36[0] = v23;
    sub_23B7966BC();
    v25 = (void *)v23;
LABEL_12:

    return;
  }
  sub_23B7967AC();
  swift_allocObject();
  sub_23B756B14(a1, a2);
  sub_23B7967A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  sub_23B75D8DC();
  sub_23B796794();
  swift_release();
  v26 = v36[0];
  swift_bridgeObjectRetain_n();
  v27 = sub_23B7969A4();
  v28 = sub_23B796C38();
  if (os_log_type_enabled(v27, v28))
  {
    v35 = a1;
    v29 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v36[0] = v34;
    *(_DWORD *)v29 = 136446723;
    v37 = sub_23B6FB388(0xD00000000000001BLL, 0x800000023B7A0020, v36);
    sub_23B796C68();
    *(_WORD *)(v29 + 12) = 2160;
    v37 = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v29 + 22) = 2081;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v30 = sub_23B7969D4();
    v32 = v31;
    swift_bridgeObjectRelease();
    v37 = sub_23B6FB388(v30, v32, v36);
    sub_23B796C68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B6EB000, v27, v28, "%{public}s with locations:%{private,mask.hash}s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v34, -1, -1);
    v33 = v29;
    a1 = v35;
    MEMORY[0x23B86C754](v33, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v36[0] = v26;
  sub_23B7966C8();
  sub_23B756B00(a1, a2);
  swift_bridgeObjectRelease();
}

uint64_t sub_23B759330(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  *(_QWORD *)(v14 + 48) = a1;
  *(_BYTE *)(v14 + 56) = a4;
  *(_QWORD *)(v14 + 64) = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23B77520C((uint64_t)v12, (uint64_t)&unk_256A48FE8, v14);
  return swift_release();
}

uint64_t sub_23B759430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;

  *(_BYTE *)(v8 + 176) = a7;
  *(_QWORD *)(v8 + 120) = a6;
  *(_QWORD *)(v8 + 128) = a8;
  *(_QWORD *)(v8 + 104) = a4;
  *(_QWORD *)(v8 + 112) = a5;
  return swift_task_switch();
}

uint64_t sub_23B759450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 104);
  sub_23B7967D0();
  swift_allocObject();
  sub_23B7967C4();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD8);
  sub_23B6FBE38(&qword_2543025C0, (uint64_t (*)(void))sub_23B6FC8B0, MEMORY[0x24BEE12A0]);
  *(_QWORD *)(v0 + 136) = sub_23B7967B8();
  *(_QWORD *)(v0 + 144) = v2;
  v6 = *(_OWORD *)(v0 + 120);
  swift_release();
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 152) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v4;
  _s14descr250C98631C18LocationConnectionCMa();
  sub_23B6EE138(&qword_2543025A0, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B068);
  *v4 = v0;
  v4[1] = sub_23B7597BC;
  return sub_23B79671C();
}

uint64_t sub_23B7597BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B759828()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(unsigned __int8 *)(v0 + 176);
  v4 = *(void **)(v0 + 96);
  v9 = *(_OWORD *)(v0 + 120);
  v5 = (void *)sub_23B7967F4();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v9;
  *(_QWORD *)(v0 + 48) = sub_23B75DB20;
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B6EE8E4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_50;
  v7 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_stopRefreshingLocationFor_priority_completion_, v5, v3, v7);
  _Block_release(v7);

  swift_unknownObjectRelease();
  sub_23B6FDDF8(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B759940()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_23B6FDDF8(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  swift_release();
  v1 = *(void **)(v0 + 168);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000025, 0x800000023B7A02F0, &v11);
    sub_23B796C68();
    *(_WORD *)(v6 + 12) = 2114;
    v9 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v9;
    sub_23B796C68();
    *v7 = v9;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);
  }
  else
  {

  }
  *(_QWORD *)(v0 + 72) = v1;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B759B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B6EFB08(a1, a2, a3, (uint64_t)&unk_250C981C8, (uint64_t)&unk_256A48FD8);
}

uint64_t sub_23B759B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  return swift_task_switch();
}

uint64_t sub_23B759BB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 104);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  _s14descr250C98631C18LocationConnectionCMa();
  sub_23B6EE138(&qword_2543025A0, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B068);
  *v2 = v0;
  v2[1] = sub_23B759C84;
  return sub_23B79671C();
}

uint64_t sub_23B759C84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B759CF0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 64);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 48) = sub_23B75DA24;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B6EE8E4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_34;
  v3 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_stopRefreshingAllLocationsWithCompletion_, v3);
  _Block_release(v3);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B759DC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_254303110 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD00000000000001CLL, 0x800000023B7A02B0, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B759FFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  if (qword_254303110 != -1)
    swift_once();
  v8 = sub_23B7969BC();
  __swift_project_value_buffer(v8, (uint64_t)qword_2543090D0);
  v9 = a1;
  v10 = sub_23B7969A4();
  v11 = sub_23B796C20();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v17 = v14;
    *(_DWORD *)v12 = 136446466;
    sub_23B6FB388(a4, a5, &v17);
    sub_23B796C68();
    *(_WORD *)(v12 + 12) = 2114;
    v16 = sub_23B7967DC();
    sub_23B796C68();
    *v13 = v16;

    _os_log_impl(&dword_23B6EB000, v10, v11, "Proxy error in %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v14, -1, -1);
    MEMORY[0x23B86C754](v12, -1, -1);
  }
  else
  {

  }
  v17 = (uint64_t)a1;
  return sub_23B7966BC();
}

void sub_23B75A20C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, unint64_t a6)
{
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;

  if (a1)
  {
    v8 = a1;
    if (qword_254303110 != -1)
      swift_once();
    v9 = sub_23B7969BC();
    __swift_project_value_buffer(v9, (uint64_t)qword_2543090D0);
    v10 = a1;
    v11 = a1;
    v12 = sub_23B7969A4();
    v13 = sub_23B796C20();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v26 = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
      v17 = sub_23B796A4C();
      sub_23B6FB388(v17, v18, &v26);
      sub_23B796C68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23B6EB000, v12, v13, a4, v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v15, -1, -1);
      MEMORY[0x23B86C754](v14, -1, -1);
    }
    else
    {

    }
    v26 = (uint64_t)a1;
    sub_23B7966BC();

  }
  else
  {
    if (qword_254303110 != -1)
      swift_once();
    v21 = sub_23B7969BC();
    __swift_project_value_buffer(v21, (uint64_t)qword_2543090D0);
    v22 = sub_23B7969A4();
    v23 = sub_23B796C38();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v26 = v25;
      *(_DWORD *)v24 = 136446210;
      sub_23B6FB388(a5, a6, &v26);
      sub_23B796C68();
      _os_log_impl(&dword_23B6EB000, v22, v23, "%{public}s succeeded", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v25, -1, -1);
      MEMORY[0x23B86C754](v24, -1, -1);
    }

    sub_23B7966D4();
  }
}

uint64_t sub_23B75A538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  return swift_task_switch();
}

uint64_t sub_23B75A554()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  _s14descr250C98631C18LocationConnectionCMa();
  sub_23B6EE138(&qword_2543025A0, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B068);
  *v1 = v0;
  v1[1] = sub_23B75A5F8;
  return sub_23B79671C();
}

uint64_t sub_23B75A5F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B75A664()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 64);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 48) = sub_23B75D8AC;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23B7521DC;
  *(_QWORD *)(v0 + 40) = &block_descriptor_3;
  v3 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_subscribeToBackgroundProactiveLocationsWithCompletion_, v3);
  _Block_release(v3);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75A738()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  swift_release();
  if (qword_254303110 != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 128);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000029, 0x800000023B7A10D0, &v14);
    sub_23B796C68();
    *(_WORD *)(v8 + 12) = 2114;
    v11 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23B796C68();
    *v9 = v11;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(void **)(v0 + 128);
  *(_QWORD *)(v0 + 72) = v12;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75A970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  return swift_task_switch();
}

uint64_t sub_23B75A98C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  _s14descr250C98631C18LocationConnectionCMa();
  sub_23B6EE138(&qword_2543025A0, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B068);
  *v1 = v0;
  v1[1] = sub_23B75AA30;
  return sub_23B79671C();
}

uint64_t sub_23B75AA30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B75AA9C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;

  v1 = (void *)v0[18];
  v2 = v0[15];
  v3 = (void *)v0[8];
  sub_23B7967D0();
  swift_allocObject();
  sub_23B7967C4();
  v0[12] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD8);
  sub_23B6FBE38(&qword_2543025C0, (uint64_t (*)(void))sub_23B6FC8B0, MEMORY[0x24BEE12A0]);
  v4 = sub_23B7967B8();
  if (v1)
  {
    swift_release();
    swift_unknownObjectRelease();
    if (qword_254303110 != -1)
      swift_once();
    v6 = sub_23B7969BC();
    __swift_project_value_buffer(v6, (uint64_t)qword_2543090D0);
    v7 = v1;
    v8 = sub_23B7969A4();
    v9 = sub_23B796C20();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v22 = v21;
      *(_DWORD *)v10 = 136446466;
      v0[10] = sub_23B6FB388(0x6E6F697461636F6CLL, 0xEF293A726F662873, &v22);
      sub_23B796C68();
      *(_WORD *)(v10 + 12) = 2114;
      v12 = sub_23B7967DC();
      v0[11] = v12;
      sub_23B796C68();
      *v11 = v12;

      _os_log_impl(&dword_23B6EB000, v8, v9, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v11, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v21, -1, -1);
      MEMORY[0x23B86C754](v10, -1, -1);
    }
    else
    {

    }
    v0[9] = v1;
    sub_23B7966BC();

  }
  else
  {
    v13 = v4;
    v14 = v5;
    v15 = v0[16];
    v16 = v0[14];
    swift_release();
    v17 = (void *)sub_23B7967F4();
    v18 = swift_allocObject();
    v0[2] = MEMORY[0x24BDAC760];
    *(_QWORD *)(v18 + 16) = v16;
    *(_QWORD *)(v18 + 24) = v15;
    v0[6] = sub_23B75DFEC;
    v0[7] = v18;
    v0[3] = 1107296256;
    v0[4] = sub_23B7521DC;
    v0[5] = &block_descriptor_113;
    v19 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_locationsFor_completion_, v17, v19);
    _Block_release(v19);

    sub_23B6FDDF8(v13, v14);
    swift_unknownObjectRelease();
  }
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_23B75AE34()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  swift_release();
  v1 = *(void **)(v0 + 144);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0x6E6F697461636F6CLL, 0xEF293A726F662873, &v11);
    sub_23B796C68();
    *(_WORD *)(v6 + 12) = 2114;
    v9 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v9;
    sub_23B796C68();
    *v7 = v9;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);
  }
  else
  {

  }
  *(_QWORD *)(v0 + 72) = v1;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75B068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a2;
  v15[5] = a1;
  v15[6] = a3;
  v15[7] = a4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23B77520C((uint64_t)v13, a6, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_23B75B15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  return swift_task_switch();
}

uint64_t sub_23B75B178()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  _s14descr250C98631C18LocationConnectionCMa();
  sub_23B6EE138(&qword_2543025A0, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B068);
  *v1 = v0;
  v1[1] = sub_23B75B21C;
  return sub_23B79671C();
}

uint64_t sub_23B75B21C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B75B288()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;

  v1 = (void *)v0[18];
  v2 = v0[15];
  v3 = (void *)v0[8];
  sub_23B7967D0();
  swift_allocObject();
  sub_23B7967C4();
  v0[12] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD8);
  sub_23B6FBE38(&qword_2543025C0, (uint64_t (*)(void))sub_23B6FC8B0, MEMORY[0x24BEE12A0]);
  v4 = sub_23B7967B8();
  if (v1)
  {
    swift_release();
    swift_unknownObjectRelease();
    if (qword_254303110 != -1)
      swift_once();
    v6 = sub_23B7969BC();
    __swift_project_value_buffer(v6, (uint64_t)qword_2543090D0);
    v7 = v1;
    v8 = sub_23B7969A4();
    v9 = sub_23B796C20();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v22 = v21;
      *(_DWORD *)v10 = 136446466;
      v0[10] = sub_23B6FB388(0xD000000000000015, 0x800000023B7A11C0, &v22);
      sub_23B796C68();
      *(_WORD *)(v10 + 12) = 2114;
      v12 = sub_23B7967DC();
      v0[11] = v12;
      sub_23B796C68();
      *v11 = v12;

      _os_log_impl(&dword_23B6EB000, v8, v9, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v11, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v21, -1, -1);
      MEMORY[0x23B86C754](v10, -1, -1);
    }
    else
    {

    }
    v0[9] = v1;
    sub_23B7966BC();

  }
  else
  {
    v13 = v4;
    v14 = v5;
    v15 = v0[16];
    v16 = v0[14];
    swift_release();
    v17 = (void *)sub_23B7967F4();
    v18 = swift_allocObject();
    v0[2] = MEMORY[0x24BDAC760];
    *(_QWORD *)(v18 + 16) = v16;
    *(_QWORD *)(v18 + 24) = v15;
    v0[6] = sub_23B75DE98;
    v0[7] = v18;
    v0[3] = 1107296256;
    v0[4] = sub_23B7521DC;
    v0[5] = &block_descriptor_100;
    v19 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_latestLocationsFor_completion_, v17, v19);
    _Block_release(v19);

    sub_23B6FDDF8(v13, v14);
    swift_unknownObjectRelease();
  }
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_23B75B618()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  swift_release();
  v1 = *(void **)(v0 + 144);
  if (qword_254303110 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543090D0);
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_23B6FB388(0xD000000000000015, 0x800000023B7A11C0, &v11);
    sub_23B796C68();
    *(_WORD *)(v6 + 12) = 2114;
    v9 = sub_23B7967DC();
    *(_QWORD *)(v0 + 88) = v9;
    sub_23B796C68();
    *v7 = v9;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Failed to create proxy in %{public}s: %{public}@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);
  }
  else
  {

  }
  *(_QWORD *)(v0 + 72) = v1;
  sub_23B7966BC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B75B844(uint64_t a1, unint64_t a2, id a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE *v22;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a3)
  {
    v9 = a3;
    v10 = a3;
    if (qword_254303110 != -1)
      swift_once();
    v11 = sub_23B7969BC();
    __swift_project_value_buffer(v11, (uint64_t)qword_2543090D0);
    v12 = v9;
    v13 = v9;
    v14 = sub_23B7969A4();
    v15 = sub_23B796C20();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v33 = v17;
      *(_DWORD *)v16 = 136446466;
      sub_23B6FB388(a6, a7, &v33);
      sub_23B796C68();
      *(_WORD *)(v16 + 12) = 2082;
      v18 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
      v19 = sub_23B796A4C();
      sub_23B6FB388(v19, v20, &v33);
      sub_23B796C68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23B6EB000, v14, v15, "%{public}s error %{public}s!", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B86C754](v17, -1, -1);
      MEMORY[0x23B86C754](v16, -1, -1);
    }
    else
    {

    }
    v33 = (uint64_t)v9;
    goto LABEL_10;
  }
  if (a2 >> 60 == 15)
  {
    sub_23B7090F8();
    v9 = (id)swift_allocError();
    *v22 = 1;
    v33 = (uint64_t)v9;
LABEL_10:
    sub_23B7966BC();

    return;
  }
  sub_23B7967AC();
  swift_allocObject();
  sub_23B756B14(a1, a2);
  sub_23B7967A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  sub_23B75D8DC();
  sub_23B796794();
  swift_release();
  v24 = v33;
  if (qword_254303110 != -1)
    swift_once();
  v25 = sub_23B7969BC();
  __swift_project_value_buffer(v25, (uint64_t)qword_2543090D0);
  swift_bridgeObjectRetain_n();
  v26 = sub_23B7969A4();
  v27 = sub_23B796C38();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v33 = v32;
    *(_DWORD *)v28 = 136446723;
    sub_23B6FB388(a6, a7, &v33);
    sub_23B796C68();
    *(_WORD *)(v28 + 12) = 2160;
    sub_23B796C68();
    *(_WORD *)(v28 + 22) = 2081;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v29 = sub_23B7969D4();
    v31 = v30;
    swift_bridgeObjectRelease();
    sub_23B6FB388(v29, v31, &v33);
    sub_23B796C68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B6EB000, v26, v27, "%{public}s decodedLocations: %{private,mask.hash}s", (uint8_t *)v28, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v32, -1, -1);
    MEMORY[0x23B86C754](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v33 = v24;
  sub_23B7966C8();
  sub_23B756B00(a1, a2);
  swift_bridgeObjectRelease();
}

uint64_t sub_23B75BF20(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B7086EC;
  *(_QWORD *)(v4 + 80) = v1;
  *(_QWORD *)(v4 + 88) = *v1;
  *(_QWORD *)(v4 + 61) = *(_QWORD *)((char *)a1 + 45);
  v5 = a1[2];
  v6 = *a1;
  *(_OWORD *)(v4 + 32) = a1[1];
  *(_OWORD *)(v4 + 48) = v5;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch();
}

uint64_t sub_23B75BFA0(uint64_t a1, _BYTE *a2)
{
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *v2;
  *(_BYTE *)(v3 + 64) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B75BFC8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(_BYTE *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_23B758064;
  return sub_23B796704();
}

uint64_t sub_23B75C070()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = *v0;
  return swift_task_switch();
}

uint64_t sub_23B75C090()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_23B75C120;
  return sub_23B796704();
}

uint64_t sub_23B75C120()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B75C194(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B709290;
  v4[4] = a1;
  v4[5] = v1;
  v4[6] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B75C1FC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B709290;
  v2[4] = v0;
  v2[5] = *v0;
  return swift_task_switch();
}

uint64_t sub_23B75C260(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B709290;
  v4[4] = a1;
  v4[5] = v1;
  v4[6] = *v1;
  return swift_task_switch();
}

uint64_t Session.locationsForHandles(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B75C2E0()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[3];
  v4 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[4] = *(_QWORD *)(v1 + 40);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B6EE938;
  return sub_23B715648(v0[2]);
}

uint64_t Session.locationsUnavailable(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B75C370()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[3];
  v4 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[4] = *(_QWORD *)(v1 + 40);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B70B498;
  return sub_23B71C17C(v0[2]);
}

uint64_t sub_23B75C3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B75C400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B75C418(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B75CD7C(a1, a2, a3, a4, (uint64_t)&unk_250C98308, (uint64_t)"location(for handle:completion:)", 32, (uint64_t)&unk_256A49010);
}

uint64_t sub_23B75C438(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = *MEMORY[0x24BEE4EA0];
  v5[12] = *a3;
  v5[13] = v6;
  return swift_task_switch();
}

uint64_t sub_23B75C46C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10[2];

  sub_23B7967AC();
  swift_allocObject();
  sub_23B7967A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  sub_23B75D8DC();
  sub_23B796794();
  swift_release();
  v0[14] = v0[2];
  if (qword_256A47F18 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A548C8);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10[0] = v5;
    *(_DWORD *)v4 = 136446466;
    v0[5] = sub_23B6FB388(0xD000000000000022, 0x800000023B7A1190, v10);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2080;
    type metadata accessor for Location();
    sub_23B72318C();
    swift_bridgeObjectRetain();
    v6 = sub_23B7969D4();
    v8 = v7;
    swift_bridgeObjectRelease();
    v0[6] = sub_23B6FB388(v6, v8, v10);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s decodedLocations: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return swift_task_switch();
}

uint64_t sub_23B75C93C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = MEMORY[0x23B86C7E4](*(_QWORD *)(v0 + 72) + 112);
  return swift_task_switch();
}

uint64_t sub_23B75C980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t);

  if (*(_QWORD *)(v0 + 120))
  {
    v2 = *(_QWORD *)((*(_QWORD *)(v0 + 96) & *(_QWORD *)(v0 + 104)) + 0x50);
    v1 = *(_QWORD *)((*(_QWORD *)(v0 + 96) & *(_QWORD *)(v0 + 104)) + 0x58);
    v5 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v1 + 8) + *(_QWORD *)(v1 + 8));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v3;
    *v3 = v0;
    v3[1] = sub_23B75CA2C;
    return v5(*(_QWORD *)(v0 + 112), v2, v1);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD))(v0 + 80))(0);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B75CA2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B75CABC()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 80))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75CAF0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void (*v12)(void *);
  id v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 136);
  if (qword_256A47F18 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A548C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v7 = 136446466;
    *(_QWORD *)(v0 + 24) = sub_23B6FB388(0xD000000000000022, 0x800000023B7A1190, &v15);
    sub_23B796C68();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v11;
    sub_23B796C68();
    *v8 = v11;

    _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s failed with: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);
  }
  else
  {

  }
  v12 = *(void (**)(void *))(v0 + 80);
  v13 = v1;
  v12(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75CD40(int a1, int a2, void *a3, void *a4)
{
  return sub_23B75D724(a1, a2, a3, a4, (uint64_t)&unk_250C98358, (uint64_t)sub_23B75799C, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_23B75C418);
}

uint64_t sub_23B75CD5C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B75CD7C(a1, a2, a3, a4, (uint64_t)&unk_250C982E0, (uint64_t)"locationsUnavailable(for handles:completion:)", 45, (uint64_t)&unk_256A49000);
}

uint64_t sub_23B75CD7C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;

  sub_23B79662C();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v8;
  v16[5] = a3;
  v16[6] = a4;
  sub_23B756B14(a1, a2);
  swift_retain();
  swift_retain();
  MEMORY[0x23B86B980](a6, a7, 2, a8, v16);
  return swift_release();
}

uint64_t sub_23B75CE3C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = *MEMORY[0x24BEE4EA0];
  v5[12] = *a3;
  v5[13] = v6;
  return swift_task_switch();
}

uint64_t sub_23B75CE70()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11[2];

  sub_23B7967AC();
  swift_allocObject();
  sub_23B7967A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD8);
  sub_23B6FBE38(&qword_2543026C0, (uint64_t (*)(void))sub_23B70C8EC, MEMORY[0x24BEE12D0]);
  sub_23B796794();
  swift_release();
  v0[14] = v0[2];
  if (qword_256A47F18 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A548C8);
  swift_bridgeObjectRetain_n();
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11[0] = v10;
    *(_DWORD *)v4 = 136446466;
    v0[5] = sub_23B6FB388(0xD000000000000025, 0x800000023B7A1130, v11);
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2080;
    v5 = swift_bridgeObjectRetain();
    v6 = MEMORY[0x23B86BE78](v5, &type metadata for Handle);
    v8 = v7;
    swift_bridgeObjectRelease();
    v0[6] = sub_23B6FB388(v6, v8, v11);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B6EB000, v2, v3, "%{public}s decodedHandles: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v10, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return swift_task_switch();
}

uint64_t sub_23B75D338()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = MEMORY[0x23B86C7E4](*(_QWORD *)(v0 + 72) + 112);
  return swift_task_switch();
}

uint64_t sub_23B75D37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t);

  if (*(_QWORD *)(v0 + 120))
  {
    v2 = *(_QWORD *)((*(_QWORD *)(v0 + 96) & *(_QWORD *)(v0 + 104)) + 0x50);
    v1 = *(_QWORD *)((*(_QWORD *)(v0 + 96) & *(_QWORD *)(v0 + 104)) + 0x58);
    v5 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v3;
    *v3 = v0;
    v3[1] = sub_23B75D428;
    return v5(*(_QWORD *)(v0 + 112), v2, v1);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD))(v0 + 80))(0);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B75D428()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B75D4B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void (*v12)(void *);
  id v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 136);
  if (qword_256A47F18 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A548C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_23B7969A4();
  v6 = sub_23B796C20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v7 = 136446466;
    *(_QWORD *)(v0 + 24) = sub_23B6FB388(0xD000000000000025, 0x800000023B7A1130, &v15);
    sub_23B796C68();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v11;
    sub_23B796C68();
    *v8 = v11;

    _os_log_impl(&dword_23B6EB000, v5, v6, "%{public}s failed with: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v9, -1, -1);
    MEMORY[0x23B86C754](v7, -1, -1);
  }
  else
  {

  }
  v12 = *(void (**)(void *))(v0 + 80);
  v13 = v1;
  v12(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75D708(int a1, int a2, void *a3, void *a4)
{
  return sub_23B75D724(a1, a2, a3, a4, (uint64_t)&unk_250C98330, (uint64_t)sub_23B7578A8, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_23B75CD5C);
}

uint64_t sub_23B75D724(int a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v10 = _Block_copy(aBlock);
  v11 = a3;
  swift_retain();
  v12 = sub_23B79680C();
  v14 = v13;

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v10;
  a7(v12, v14, a6, v15);
  swift_release();
  sub_23B6FDDF8(v12, v14);
  return swift_release();
}

void sub_23B75D7E0()
{
  sub_23B756940();
}

uint64_t sub_23B75D7F4()
{
  swift_unknownObjectWeakDestroy();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B75D818(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6EFB08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_250C98178, (uint64_t)&unk_256A48FC0);
}

uint64_t sub_23B75D844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B6FD140;
  *(_QWORD *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v4;
  return swift_task_switch();
}

void sub_23B75D8AC(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_23B75B844(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), 0xD000000000000029, 0x800000023B7A10D0);
}

unint64_t sub_23B75D8DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2543025B8;
  if (!qword_2543025B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543025B0);
    v2[0] = sub_23B70C8EC();
    v2[1] = sub_23B6EE138(&qword_2543025A8, (uint64_t (*)(uint64_t))type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2543025B8);
  }
  return result;
}

uint64_t sub_23B75D960(uint64_t a1)
{
  uint64_t v1;

  return sub_23B6EFB08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_250C981C8, (uint64_t)&unk_256A48FD8);
}

uint64_t sub_23B75D98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B6FD140;
  *(_QWORD *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v4;
  return swift_task_switch();
}

uint64_t sub_23B75D9F4(void *a1)
{
  uint64_t v1;

  return sub_23B759FFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD00000000000001CLL, 0x800000023B7A02B0);
}

void sub_23B75DA24(void *a1)
{
  uint64_t v1;

  sub_23B75A20C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "stopRefreshingAllLocations failed with %{public}s", 0xD00000000000001CLL, 0x800000023B7A02B0);
}

uint64_t sub_23B75DA5C()
{
  return objectdestroy_38Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23B75DA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_BYTE *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_23B6FD1B0;
  *(_BYTE *)(v5 + 176) = v3;
  *(_QWORD *)(v5 + 120) = v2;
  *(_QWORD *)(v5 + 128) = v4;
  *(_OWORD *)(v5 + 104) = v6;
  return swift_task_switch();
}

uint64_t sub_23B75DAF0(void *a1)
{
  uint64_t v1;

  return sub_23B759FFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD000000000000025, 0x800000023B7A02F0);
}

void sub_23B75DB20(void *a1)
{
  uint64_t v1;

  sub_23B75A20C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "stopRefreshingLocation failed with %{public}s", 0xD000000000000025, 0x800000023B7A02F0);
}

uint64_t sub_23B75DB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_23B6FD140;
  *(_QWORD *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 56) = v2;
  *(_QWORD *)(v5 + 64) = v3;
  v7 = *MEMORY[0x24BEE4EA0];
  *(_QWORD *)(v5 + 96) = *(_QWORD *)v6;
  *(_QWORD *)(v5 + 104) = v7;
  return swift_task_switch();
}

uint64_t objectdestroy_54Tm()
{
  uint64_t v0;

  sub_23B6FDDF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B75DC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_23B6FD140;
  *(_QWORD *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 56) = v2;
  *(_QWORD *)(v5 + 64) = v3;
  v7 = *MEMORY[0x24BEE4EA0];
  *(_QWORD *)(v5 + 96) = *(_QWORD *)v6;
  *(_QWORD *)(v5 + 104) = v7;
  return swift_task_switch();
}

uint64_t sub_23B75DCB4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23B75DCD8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B75DD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 104);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 88);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B6FD140;
  *(_QWORD *)(v3 + 176) = v2;
  *(_OWORD *)(v3 + 160) = v4;
  *(_QWORD *)(v3 + 152) = v0 + 32;
  return swift_task_switch();
}

uint64_t sub_23B75DD94(void *a1)
{
  uint64_t v1;

  return sub_23B759FFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 0xD00000000000001BLL, 0x800000023B7A0020);
}

void sub_23B75DDC4(uint64_t a1, unint64_t a2, void *a3)
{
  sub_23B758B74(a1, a2, a3);
}

uint64_t sub_23B75DDCC(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B75B068(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_250C98420, (uint64_t)&unk_256A49038);
}

uint64_t sub_23B75DDF8()
{
  return objectdestroy_38Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23B75DE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23B6FD140;
  *(_OWORD *)(v2 + 120) = v4;
  *(_OWORD *)(v2 + 104) = v3;
  return swift_task_switch();
}

uint64_t sub_23B75DE74()
{
  return sub_23B7966BC();
}

void sub_23B75DE98(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_23B75B844(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), 0xD000000000000015, 0x800000023B7A11C0);
}

uint64_t sub_23B75DEC8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B75B068(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_250C98498, (uint64_t)&unk_256A49048);
}

uint64_t sub_23B75DEF4()
{
  return objectdestroy_38Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_38Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  swift_unknownObjectRelease();
  a1(*(_QWORD *)(v2 + 32));
  swift_release();
  a2(*(_QWORD *)(v2 + 48));
  return swift_deallocObject();
}

uint64_t sub_23B75DF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23B6FD140;
  *(_OWORD *)(v2 + 120) = v4;
  *(_OWORD *)(v2 + 104) = v3;
  return swift_task_switch();
}

uint64_t sub_23B75DFC8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23B75DFEC(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_23B75B844(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), 0x6E6F697461636F6CLL, 0xEF293A726F662873);
}

uint64_t sub_23B75E024()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void Friend.description.getter()
{
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  sub_23B796CD4();
  sub_23B796A7C();
  sub_23B796A7C();
  sub_23B796A7C();
  Handle.debugDescription.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  __asm { BR              X10 }
}

uint64_t sub_23B75E224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  v5 = (int *)type metadata accessor for Friend();
  sub_23B6F7090(v1 + v5[10], v3);
  v6 = sub_23B7968A8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v8(v3, 1, v6) == 1)
  {
    sub_23B6F7190(v3, &qword_254302B18);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    v9 = sub_23B796818();
    v10 = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  }
  *(_QWORD *)(v0 + 176) = v9;
  *(_QWORD *)(v0 + 184) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B6F7090(v1 + v5[12], v2);
  if (v8(v2, 1, v6) == 1)
  {
    sub_23B6F7190(v2, &qword_254302B18);
  }
  else
  {
    sub_23B796818();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  }
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B6FC8F4(v1 + v5[13], v0, (uint64_t *)&unk_254302520);
  sub_23B6FC8F4(v0, v0 + 176, (uint64_t *)&unk_254302520);
  if (sub_23B7251E4(v0 + 176) != 1)
    swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return *(_QWORD *)(v4 - 104);
}

uint64_t Friend.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Friend() + 48);
  return sub_23B6F7090(v3, a1);
}

uint64_t FriendshipServiceEntitlement.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23B796DB8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t FriendshipServiceEntitlement.rawValue.getter()
{
  return 0xD000000000000041;
}

uint64_t sub_23B75E580()
{
  sub_23B796F44();
  sub_23B796A64();
  return sub_23B796F74();
}

uint64_t sub_23B75E5D4()
{
  return sub_23B796A64();
}

uint64_t sub_23B75E5F0()
{
  sub_23B796F44();
  sub_23B796A64();
  return sub_23B796F74();
}

uint64_t sub_23B75E640@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23B796DB8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_23B75E690(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000041;
  a1[1] = 0x800000023B79F860;
}

_QWORD *Friend.ownerHandle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[22];

  v3 = type metadata accessor for Friend();
  sub_23B6FC8F4(v1 + *(int *)(v3 + 52), (uint64_t)v5, (uint64_t *)&unk_254302520);
  sub_23B6FC8F4((uint64_t)v5, a1, (uint64_t *)&unk_254302520);
  return sub_23B75F4F8(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F70D8);
}

uint64_t Friend.friendshipOrigin.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Friend();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t Friend.originatedFromTheSameClient.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    v3 = sub_23B796A28();
    v5 = v4;

    if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Friend() + 56)) == 1)
      v6 = sub_23B6EDFE0(v3, v5, qword_250C92CA0);
    else
      v6 = 0;
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t Friend.expireDate(_:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(v2 + 56);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_23B6F8300(*a1);
    if ((v6 & 1) != 0)
    {
      v7 = v5;
      v8 = *(_QWORD *)(v4 + 56);
      v9 = sub_23B7968A8();
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a2, v8 + *(_QWORD *)(v10 + 72) * v7, v9);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
    }
    else
    {
      v13 = sub_23B7968A8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
    }
  }
  else
  {
    sub_23B796824();
    v12 = sub_23B7968A8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
}

_QWORD *Friend.updatedFriend(with:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  int *v10;
  char v11;
  char v12;
  char v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[22];

  v4 = a1[9];
  v29 = a1[8];
  v30 = v4;
  v31 = a1[10];
  v5 = a1[5];
  v25 = a1[4];
  v26 = v5;
  v6 = a1[7];
  v27 = a1[6];
  v28 = v6;
  v7 = a1[1];
  v21 = *a1;
  v22 = v7;
  v8 = a1[3];
  v23 = a1[2];
  v24 = v8;
  v9 = v2[176];
  v10 = (int *)type metadata accessor for Friend();
  sub_23B6F7090((uint64_t)&v2[v10[10]], a2 + v10[10]);
  sub_23B6F7090((uint64_t)&v2[v10[12]], a2 + v10[12]);
  v11 = v2[v10[14]];
  v12 = v2[177];
  v13 = v2[178];
  v14 = v2[179];
  sub_23B6FC8F4((uint64_t)&v2[v10[13]], (uint64_t)v32, (uint64_t *)&unk_254302520);
  v15 = v30;
  *(_OWORD *)(a2 + 128) = v29;
  *(_OWORD *)(a2 + 144) = v15;
  *(_OWORD *)(a2 + 160) = v31;
  v16 = v26;
  *(_OWORD *)(a2 + 64) = v25;
  *(_OWORD *)(a2 + 80) = v16;
  v17 = v28;
  *(_OWORD *)(a2 + 96) = v27;
  *(_OWORD *)(a2 + 112) = v17;
  v18 = v22;
  *(_OWORD *)a2 = v21;
  *(_OWORD *)(a2 + 16) = v18;
  v19 = v24;
  *(_OWORD *)(a2 + 32) = v23;
  *(_OWORD *)(a2 + 48) = v19;
  *(_BYTE *)(a2 + 176) = v9;
  *(_BYTE *)(a2 + v10[14]) = v11;
  *(_BYTE *)(a2 + 177) = v12;
  *(_BYTE *)(a2 + 178) = v13;
  *(_BYTE *)(a2 + 179) = v14;
  *(_BYTE *)(a2 + 180) = 0;
  *(_BYTE *)(a2 + v10[11]) = 2;
  sub_23B6FC8F4((uint64_t)v32, a2 + v10[13], (uint64_t *)&unk_254302520);
  sub_23B6F4E8C((uint64_t)&v21);
  return sub_23B75F4F8(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B6F70D8);
}

void Friend.debugDescription.getter()
{
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  sub_23B796CD4();
  sub_23B796A7C();
  sub_23B796A7C();
  sub_23B796A7C();
  Handle.debugDescription.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  __asm { BR              X10 }
}

uint64_t sub_23B75EBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  v5 = (int *)type metadata accessor for Friend();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B6F7090(v1 + v5[10], v3);
  v6 = sub_23B7968A8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v8(v3, 1, v6) == 1)
  {
    sub_23B6F7190(v3, &qword_254302B18);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    v9 = sub_23B796818();
    v10 = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  }
  *(_QWORD *)(v0 + 176) = v9;
  *(_QWORD *)(v0 + 184) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302CD0);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B6F7090(v1 + v5[12], v2);
  if (v8(v2, 1, v6) == 1)
  {
    sub_23B6F7190(v2, &qword_254302B18);
  }
  else
  {
    sub_23B796818();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  }
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  Friend.originatedFromTheSameClient.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B6FC8F4(v1 + v5[13], v0, (uint64_t *)&unk_254302520);
  sub_23B6FC8F4(v0, v0 + 176, (uint64_t *)&unk_254302520);
  if (sub_23B7251E4(v0 + 176) != 1)
    swift_bridgeObjectRetain();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return *(_QWORD *)(v4 - 104);
}

uint64_t Handle.isPhoneNumber.getter()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  id v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15[2];

  v15[1] = *(id *)MEMORY[0x24BDAC8D0];
  v15[0] = 0;
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14E8]), sel_initWithTypes_error_, 2048, v15);
  if (v0)
  {
    v1 = v0;
    v2 = v15[0];
    v3 = (void *)sub_23B796A1C();
    v4 = objc_msgSend(v1, sel_matchesInString_options_range_, v3, 0, 0, sub_23B796A70());

    sub_23B75F55C();
    v5 = sub_23B796B0C();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_23B796D7C();

      swift_bridgeObjectRelease_n();
      if (v14)
        return 1;
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

      if (v6)
        return 1;
    }
  }
  else
  {
    v8 = v15[0];
    v9 = (void *)sub_23B7967E8();

    swift_willThrow();
    if (qword_256A47F30 != -1)
      swift_once();
    v10 = sub_23B7969BC();
    __swift_project_value_buffer(v10, (uint64_t)qword_256A548F0);
    v11 = sub_23B7969A4();
    v12 = sub_23B796C20();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23B6EB000, v11, v12, "Failed to create PhoneNumbersDetector", v13, 2u);
      MEMORY[0x23B86C754](v13, -1, -1);
    }

  }
  return 0;
}

uint64_t Handle.peerID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (*(_QWORD *)(v1 + 168))
  {
    swift_bridgeObjectRetain();
    v3 = sub_23B796A10();
    v5 = v4;
    swift_bridgeObjectRelease();
    sub_23B75F598();
    sub_23B79674C();
    sub_23B6FDDF8(v3, v5);
    v6 = sub_23B7968D8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    v8 = sub_23B7968D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t Handle.updateWithdifferentExpiresByGroupID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23[9];

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(_QWORD *)(v2 + 48);
  v20 = *(_QWORD *)(v2 + 40);
  v21 = *(_QWORD *)(v2 + 16);
  v5 = *(double *)(v2 + 64);
  v6 = *(_QWORD *)(v2 + 80);
  v7 = *(_QWORD *)(v2 + 96);
  v17 = *(_QWORD *)(v2 + 88);
  v18 = *(_QWORD *)(v2 + 72);
  v16 = *(_BYTE *)(v2 + 104);
  v8 = *(_QWORD *)(v2 + 112);
  v9 = *(_QWORD *)(v2 + 128);
  v14 = *(_QWORD *)(v2 + 136);
  v15 = *(_QWORD *)(v2 + 120);
  v10 = *(_QWORD *)(v2 + 144);
  v11 = *(_QWORD *)(v2 + 168);
  v19 = *(_QWORD *)(v2 + 160);
  v23[0] = *(_BYTE *)(v2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return Handle.init(withID:qualifiedIdentifier:serverID:idsStatus:dsid:expiresByGroupId:trackingTimestamp:hashedDSID:favoriteOrder:reachable:pushIdentifiers:prettyName:contactIdentifier:siblingIdentifiers:)(v21, v3, v19, v11, v23, v20, a2, v5, v4, a1, v18, v6, v17, v7, v16, v8, v15, v9, v14,
           v10,
           MEMORY[0x24BEE4AF8]);
}

uint64_t *sub_23B75F3E4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = a1[23];
  v4 = a1[22];
  sub_23B6F71CC(*a1, a1[1]);
  sub_23B6F71CC(v4, v2);
  return a1;
}

_QWORD *sub_23B75F4F8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

unint64_t sub_23B75F55C()
{
  unint64_t result;

  result = qword_254302D58;
  if (!qword_254302D58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254302D58);
  }
  return result;
}

unint64_t sub_23B75F598()
{
  unint64_t result;

  result = qword_256A49068;
  if (!qword_256A49068)
  {
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256A49068);
  }
  return result;
}

unint64_t sub_23B75F5E0()
{
  unint64_t result;

  result = qword_256A49070;
  if (!qword_256A49070)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipServiceEntitlement, &type metadata for FriendshipServiceEntitlement);
    atomic_store(result, (unint64_t *)&qword_256A49070);
  }
  return result;
}

unint64_t sub_23B75F628()
{
  unint64_t result;

  result = qword_256A49078;
  if (!qword_256A49078)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipServiceEntitlement, &type metadata for FriendshipServiceEntitlement);
    atomic_store(result, (unint64_t *)&qword_256A49078);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FriendshipServiceEntitlement(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23B75F6AC + 4 * byte_23B79AD4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23B75F6CC + 4 * byte_23B79AD4F[v4]))();
}

_BYTE *sub_23B75F6AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23B75F6CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B75F6D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B75F6DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B75F6E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B75F6EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipServiceEntitlement()
{
  return &type metadata for FriendshipServiceEntitlement;
}

uint64_t sub_23B75F708()
{
  uint64_t v0;

  sub_23B75F828(v0 + 112);
  sub_23B6F7190(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_serviceDescription, &qword_254302FE8);
  swift_release();
  sub_23B6FBEB0(*(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_disconnectionHandler));
  sub_23B729600(*(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDevice), *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDevice + 8));
  sub_23B6F7190(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_meDeviceContinuation, &qword_2543032A0);
  sub_23B6F7190(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18SettingsConnection_preferenceContinuation, &qword_2543032E0);
  swift_weakDestroy();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B75F7C8()
{
  return _s14descr250C985C9C18SettingsConnectionCMa();
}

uint64_t sub_23B75F7D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B75F7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  v1 = swift_retain();
  return v3(v1);
}

uint64_t sub_23B75F828(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t Session.includeDeviceInHomeKitAutomations()()
{
  uint64_t v0;

  return sub_23B70913C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_23B75F860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection____lazy_storage___locationShifter;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection____lazy_storage___locationShifter))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection____lazy_storage___locationShifter);
  }
  else
  {
    type metadata accessor for LocationShifter();
    v2 = swift_allocObject();
    v3 = v2 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_logger;
    if (qword_256A47EF0 != -1)
      swift_once();
    v4 = sub_23B7969BC();
    v5 = __swift_project_value_buffer(v4, (uint64_t)qword_256A54890);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v3, v5, v4);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CC28]), sel_init);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyLocate15LocationShifter_shifter) = v6;
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t (*sub_23B75F964())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23B75F9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationRefreshWorkQueue);
  v5 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  swift_retain();
  sub_23B77520C((uint64_t)v3, (uint64_t)&unk_256A490C8, (uint64_t)v6);
  swift_release();
  sub_23B6F7190(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_serviceDescription, &qword_254302FE8);
  swift_release();
  sub_23B6FBEB0(*(_QWORD *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_disconnectionHandler));
  sub_23B6F7190(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session18LocationConnection_locationContinuation, &qword_254302EF0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23B75FB5C()
{
  sub_23B75F9AC();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B75FB74()
{
  return _s14descr250C98631C18LocationConnectionCMa();
}

uint64_t sub_23B75FB7C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)(v2 + 232) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254302530);
  *(_QWORD *)(v2 + 240) = swift_task_alloc();
  v4 = a1[9];
  *(_OWORD *)(v2 + 144) = a1[8];
  *(_OWORD *)(v2 + 160) = v4;
  *(_OWORD *)(v2 + 176) = a1[10];
  v5 = a1[5];
  *(_OWORD *)(v2 + 80) = a1[4];
  *(_OWORD *)(v2 + 96) = v5;
  v6 = a1[7];
  *(_OWORD *)(v2 + 112) = a1[6];
  *(_OWORD *)(v2 + 128) = v6;
  v7 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v7;
  v8 = a1[3];
  *(_OWORD *)(v2 + 48) = a1[2];
  *(_OWORD *)(v2 + 64) = v8;
  return swift_task_switch();
}

uint64_t sub_23B75FC0C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  if (qword_254303110 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543090D0);
  sub_23B6F4E8C(v0 + 16);
  sub_23B6F4E8C(v0 + 16);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v15 = v5;
    *(_DWORD *)v4 = 141558275;
    *(_QWORD *)(v0 + 216) = 1752392040;
    sub_23B796C68();
    *(_WORD *)(v4 + 12) = 2081;
    v6 = *(_OWORD *)(v0 + 160);
    v24 = *(_OWORD *)(v0 + 144);
    v25 = v6;
    v26 = *(_OWORD *)(v0 + 176);
    v7 = *(_OWORD *)(v0 + 96);
    v20 = *(_OWORD *)(v0 + 80);
    v21 = v7;
    v8 = *(_OWORD *)(v0 + 128);
    v22 = *(_OWORD *)(v0 + 112);
    v23 = v8;
    v9 = *(_OWORD *)(v0 + 32);
    v16 = *(_OWORD *)(v0 + 16);
    v17 = v9;
    v10 = *(_OWORD *)(v0 + 64);
    v18 = *(_OWORD *)(v0 + 48);
    v19 = v10;
    v11 = Handle.description.getter();
    *(_QWORD *)(v0 + 224) = sub_23B6FB388(v11, v12, &v15);
    sub_23B796C68();
    swift_bridgeObjectRelease();
    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);
    _os_log_impl(&dword_23B6EB000, v2, v3, "Removing cached location for handle: %{private,mask.hash}s.", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v5, -1, -1);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  else
  {
    sub_23B6F5744(v0 + 16);
    sub_23B6F5744(v0 + 16);
  }

  v13 = *(_QWORD *)(v0 + 240);
  swift_beginAccess();
  sub_23B75FE84(v0 + 16, v13);
  sub_23B6F7190(v13, (uint64_t *)&unk_254302530);
  swift_endAccess();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B75FE6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B75FE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v24[11];
  uint64_t v25;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23B780558(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v25 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B781DE8();
      v9 = v25;
    }
    v10 = (_OWORD *)(*(_QWORD *)(v9 + 48) + 176 * v6);
    v12 = v10[1];
    v11 = v10[2];
    v24[0] = *v10;
    v24[1] = v12;
    v24[2] = v11;
    v13 = v10[3];
    v14 = v10[4];
    v15 = v10[6];
    v24[5] = v10[5];
    v24[6] = v15;
    v24[3] = v13;
    v24[4] = v14;
    v16 = v10[7];
    v17 = v10[8];
    v18 = v10[10];
    v24[9] = v10[9];
    v24[10] = v18;
    v24[7] = v16;
    v24[8] = v17;
    sub_23B6F5744((uint64_t)v24);
    v19 = *(_QWORD *)(v9 + 56);
    v20 = type metadata accessor for Location();
    v21 = *(_QWORD *)(v20 - 8);
    sub_23B6FF360(v19 + *(_QWORD *)(v21 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B782500(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a2, 0, 1, v20);
  }
  else
  {
    v23 = type metadata accessor for Location();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
  }
}

uint64_t sub_23B75FFFC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B760028()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B6FD1B0;
  v4 = (uint64_t (*)(void))((int)*MEMORY[0x24BE31840] + MEMORY[0x24BE31840]);
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23B6FD140;
  return v4();
}

uint64_t sub_23B7600A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23B72D814(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B7822B0();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_23B6FF360(v12 + *(_QWORD *)(v14 + 72) * v8, a3, type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext);
    sub_23B782B70(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for ReverseGeocoder.ReverseGeocodingCacheContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

void destroy for SessionData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v14;
  void *v15;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  v9 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  v14 = *(void **)(a2 + 176);
  v15 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v14;
  *(_QWORD *)(a1 + 184) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v14;
  v12 = v15;
  return a1;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 176);
  v5 = *(void **)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 184);
  v8 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);

  v10 = *(void **)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);

  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 192))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData()
{
  return &type metadata for SessionData;
}

uint64_t Session.refreshLocation(for:priority:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = v2;
  *(_BYTE *)(v3 + 96) = *a2;
  return swift_task_switch();
}

uint64_t sub_23B760724()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 32);
  v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(v0 + 97) = *(_BYTE *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23B7607A8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 64);
  v9 = *(_OWORD *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 97);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_BYTE *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 24);
  sub_23B72C80C();
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v2;
  *(_OWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 48) = v1;
  *(_QWORD *)(v6 + 56) = v5;
  *(_BYTE *)(v6 + 64) = v4;
  *(_WORD *)(v6 + 65) = 768;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v7 = v0;
  v7[1] = sub_23B7608AC;
  return sub_23B796ED8();
}

uint64_t sub_23B7608AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B760920()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23B760960()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.forceRefreshLocation(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_23B7609C0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 32);
  v3 = 0;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v3);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(v0 + 96) = *(_BYTE *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23B760A44()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 64);
  v8 = *(_OWORD *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  sub_23B72C80C();
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = v2;
  *(_OWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 48) = v1;
  *(_QWORD *)(v5 + 56) = v4;
  *(_WORD *)(v5 + 64) = 1;
  *(_BYTE *)(v5 + 66) = 1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543025B0);
  *v6 = v0;
  v6[1] = sub_23B760B3C;
  return sub_23B796ED8();
}

uint64_t sub_23B760B3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B760BB0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B760BFC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B712DD8(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_BYTE *)(v1 + 65), *(_BYTE *)(v1 + 66));
}

BOOL static FollowerState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FollowerState.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t sub_23B760C78()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6572616853746F6ELL;
  if (*v0 != 1)
    v1 = 0x6967696C45746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x646572616873;
}

uint64_t sub_23B760CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B762D14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B760D00()
{
  sub_23B7610A4();
  return sub_23B796FA4();
}

uint64_t sub_23B760D28()
{
  sub_23B7610A4();
  return sub_23B796FB0();
}

uint64_t sub_23B760D50()
{
  sub_23B7610E8();
  return sub_23B796FA4();
}

uint64_t sub_23B760D78()
{
  sub_23B7610E8();
  return sub_23B796FB0();
}

uint64_t sub_23B760DA0()
{
  sub_23B76112C();
  return sub_23B796FA4();
}

uint64_t sub_23B760DC8()
{
  sub_23B76112C();
  return sub_23B796FB0();
}

uint64_t sub_23B760DF0()
{
  sub_23B761170();
  return sub_23B796FA4();
}

uint64_t sub_23B760E18()
{
  sub_23B761170();
  return sub_23B796FB0();
}

uint64_t FollowerState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302648);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302640);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302638);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302630);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7610A4();
  sub_23B796F8C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23B76112C();
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23B7610E8();
      v16 = v21;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23B761170();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23B7610A4()
{
  unint64_t result;

  result = qword_254302B40;
  if (!qword_254302B40)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B960, &type metadata for FollowerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B40);
  }
  return result;
}

unint64_t sub_23B7610E8()
{
  unint64_t result;

  result = qword_256A490E0;
  if (!qword_256A490E0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B910, &type metadata for FollowerState.NotEligibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A490E0);
  }
  return result;
}

unint64_t sub_23B76112C()
{
  unint64_t result;

  result = qword_254302B68;
  if (!qword_254302B68)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B8C0, &type metadata for FollowerState.NotSharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B68);
  }
  return result;
}

unint64_t sub_23B761170()
{
  unint64_t result;

  result = qword_256A490E8;
  if (!qword_256A490E8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B870, &type metadata for FollowerState.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A490E8);
  }
  return result;
}

uint64_t FollowerState.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t FollowerState.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024D8);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024D0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024C8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024C0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7610A4();
  v13 = v41;
  sub_23B796F80();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23B796E3C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23B796D04();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v25 = &type metadata for FollowerState;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23B76112C();
      v20 = v9;
      sub_23B796DC4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23B7610E8();
      v28 = v15;
      sub_23B796DC4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23B761170();
    sub_23B796DC4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_23B76163C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FollowerState.init(from:)(a1, a2);
}

uint64_t sub_23B761650(_QWORD *a1)
{
  return FollowerState.encode(to:)(a1);
}

BOOL static FollowingState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FollowingState.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t sub_23B7616A4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6572616853746F6ELL;
  else
    return 0x646572616873;
}

uint64_t sub_23B7616E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B762E84(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B761704(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23B761710()
{
  sub_23B7619D4();
  return sub_23B796FA4();
}

uint64_t sub_23B761738()
{
  sub_23B7619D4();
  return sub_23B796FB0();
}

uint64_t sub_23B761760()
{
  sub_23B761A18();
  return sub_23B796FA4();
}

uint64_t sub_23B761788()
{
  sub_23B761A18();
  return sub_23B796FB0();
}

uint64_t sub_23B7617B0()
{
  sub_23B761A5C();
  return sub_23B796FA4();
}

uint64_t sub_23B7617D8()
{
  sub_23B761A5C();
  return sub_23B796FB0();
}

uint64_t FollowingState.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302660);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302658);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302650);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7619D4();
  sub_23B796F8C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23B761A18();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23B761A5C();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_23B7619D4()
{
  unint64_t result;

  result = qword_254302B90;
  if (!qword_254302B90)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B820, &type metadata for FollowingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B90);
  }
  return result;
}

unint64_t sub_23B761A18()
{
  unint64_t result;

  result = qword_254302BB8;
  if (!qword_254302BB8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B7D0, &type metadata for FollowingState.NotSharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BB8);
  }
  return result;
}

unint64_t sub_23B761A5C()
{
  unint64_t result;

  result = qword_256A490F0;
  if (!qword_256A490F0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B780, &type metadata for FollowingState.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A490F0);
  }
  return result;
}

uint64_t FollowingState.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t FollowingState.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024F0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024E8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7619D4();
  v11 = v33;
  sub_23B796F80();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23B796E3C();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23B796D04();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v21 = &type metadata for FollowingState;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23B761A18();
    sub_23B796DC4();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23B761A5C();
    v22 = v6;
    sub_23B796DC4();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23B761E3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FollowingState.init(from:)(a1, a2);
}

uint64_t sub_23B761E50(_QWORD *a1)
{
  return FollowingState.encode(to:)(a1);
}

FindMyLocate::FriendshipState __swiftcall FriendshipState.init(followerState:followingState:)(FindMyLocate::FollowerState followerState, FindMyLocate::FollowingState followingState)
{
  _BYTE *v2;
  char v3;
  FindMyLocate::FriendshipState result;

  v3 = *(_BYTE *)followerState;
  *v2 = *(_BYTE *)followingState;
  v2[1] = v3;
  result.following = followerState;
  return result;
}

uint64_t sub_23B761E78()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265776F6C6C6F66;
  else
    return 0x6E69776F6C6C6F66;
}

uint64_t sub_23B761EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B762F78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B761EDC()
{
  sub_23B762078();
  return sub_23B796FA4();
}

uint64_t sub_23B761F04()
{
  sub_23B762078();
  return sub_23B796FB0();
}

uint64_t FriendshipState.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302668);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B762078();
  sub_23B796F8C();
  v15 = v8;
  v14 = 0;
  sub_23B7620BC();
  sub_23B796EA8();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_23B762100();
    sub_23B796EA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23B762078()
{
  unint64_t result;

  result = qword_254302BD0;
  if (!qword_254302BD0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B730, &type metadata for FriendshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BD0);
  }
  return result;
}

unint64_t sub_23B7620BC()
{
  unint64_t result;

  result = qword_254302610;
  if (!qword_254302610)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FollowingState, &type metadata for FollowingState);
    atomic_store(result, (unint64_t *)&qword_254302610);
  }
  return result;
}

unint64_t sub_23B762100()
{
  unint64_t result;

  result = qword_254302608;
  if (!qword_254302608)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FollowerState, &type metadata for FollowerState);
    atomic_store(result, (unint64_t *)&qword_254302608);
  }
  return result;
}

uint64_t FriendshipState.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543024F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B762078();
  sub_23B796F80();
  if (!v2)
  {
    v15 = 0;
    sub_23B7622C0();
    sub_23B796E30();
    v9 = v16;
    v13 = 1;
    sub_23B762304();
    sub_23B796E30();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_23B7622C0()
{
  unint64_t result;

  result = qword_2543024A8;
  if (!qword_2543024A8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FollowingState, &type metadata for FollowingState);
    atomic_store(result, (unint64_t *)&qword_2543024A8);
  }
  return result;
}

unint64_t sub_23B762304()
{
  unint64_t result;

  result = qword_2543024A0;
  if (!qword_2543024A0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FollowerState, &type metadata for FollowerState);
    atomic_store(result, (unint64_t *)&qword_2543024A0);
  }
  return result;
}

uint64_t sub_23B762348@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FriendshipState.init(from:)(a1, a2);
}

uint64_t sub_23B76235C(_QWORD *a1)
{
  return FriendshipState.encode(to:)(a1);
}

BOOL FriendshipState.isFriendSharingLocationWithMe.getter()
{
  _BYTE *v0;

  return (*v0 & 1) == 0;
}

BOOL FriendshipState.amISharingLocationToFriend.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 1) == 0;
}

BOOL FriendshipState.amIEligibleToOfferToFriend.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1) < 2u;
}

unint64_t sub_23B7623A4()
{
  unint64_t result;

  result = qword_256A490F8;
  if (!qword_256A490F8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FollowerState, &type metadata for FollowerState);
    atomic_store(result, (unint64_t *)&qword_256A490F8);
  }
  return result;
}

unint64_t sub_23B7623EC()
{
  unint64_t result;

  result = qword_256A49100;
  if (!qword_256A49100)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FollowingState, &type metadata for FollowingState);
    atomic_store(result, (unint64_t *)&qword_256A49100);
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowerState()
{
  return &type metadata for FollowerState;
}

ValueMetadata *type metadata accessor for FollowingState()
{
  return &type metadata for FollowingState;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FriendshipState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FriendshipState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B762544 + 4 * byte_23B79B0E5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_23B762578 + 4 * asc_23B79B0E0[v4]))();
}

uint64_t sub_23B762578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23B762580(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23B762588);
  return result;
}

uint64_t sub_23B762594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23B76259CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B7625A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23B7625A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipState()
{
  return &type metadata for FriendshipState;
}

ValueMetadata *type metadata accessor for FriendshipState.CodingKeys()
{
  return &type metadata for FriendshipState.CodingKeys;
}

uint64_t _s12FindMyLocate14FollowingStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B762620 + 4 * byte_23B79B0EF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B762654 + 4 * byte_23B79B0EA[v4]))();
}

uint64_t sub_23B762654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76265C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B762664);
  return result;
}

uint64_t sub_23B762670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B762678);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B76267C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B762684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowingState.CodingKeys()
{
  return &type metadata for FollowingState.CodingKeys;
}

ValueMetadata *type metadata accessor for FollowingState.SharedCodingKeys()
{
  return &type metadata for FollowingState.SharedCodingKeys;
}

ValueMetadata *type metadata accessor for FollowingState.NotSharedCodingKeys()
{
  return &type metadata for FollowingState.NotSharedCodingKeys;
}

uint64_t _s12FindMyLocate13FollowerStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B76270C + 4 * byte_23B79B0F9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B762740 + 4 * byte_23B79B0F4[v4]))();
}

uint64_t sub_23B762740(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B762748(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B762750);
  return result;
}

uint64_t sub_23B76275C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B762764);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B762768(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B762770(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowerState.CodingKeys()
{
  return &type metadata for FollowerState.CodingKeys;
}

ValueMetadata *type metadata accessor for FollowerState.SharedCodingKeys()
{
  return &type metadata for FollowerState.SharedCodingKeys;
}

ValueMetadata *type metadata accessor for FollowerState.NotSharedCodingKeys()
{
  return &type metadata for FollowerState.NotSharedCodingKeys;
}

ValueMetadata *type metadata accessor for FollowerState.NotEligibleCodingKeys()
{
  return &type metadata for FollowerState.NotEligibleCodingKeys;
}

unint64_t sub_23B7627C0()
{
  unint64_t result;

  result = qword_256A49108;
  if (!qword_256A49108)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B4F8, &type metadata for FollowerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49108);
  }
  return result;
}

unint64_t sub_23B762808()
{
  unint64_t result;

  result = qword_256A49110;
  if (!qword_256A49110)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B650, &type metadata for FollowingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49110);
  }
  return result;
}

unint64_t sub_23B762850()
{
  unint64_t result;

  result = qword_256A49118;
  if (!qword_256A49118)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B708, &type metadata for FriendshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49118);
  }
  return result;
}

unint64_t sub_23B762898()
{
  unint64_t result;

  result = qword_254302BE0;
  if (!qword_254302BE0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B678, &type metadata for FriendshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BE0);
  }
  return result;
}

unint64_t sub_23B7628E0()
{
  unint64_t result;

  result = qword_254302BD8;
  if (!qword_254302BD8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B6A0, &type metadata for FriendshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BD8);
  }
  return result;
}

unint64_t sub_23B762928()
{
  unint64_t result;

  result = qword_254302BB0;
  if (!qword_254302BB0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B570, &type metadata for FollowingState.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BB0);
  }
  return result;
}

unint64_t sub_23B762970()
{
  unint64_t result;

  result = qword_254302BA8;
  if (!qword_254302BA8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B598, &type metadata for FollowingState.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BA8);
  }
  return result;
}

unint64_t sub_23B7629B8()
{
  unint64_t result;

  result = qword_254302BC8;
  if (!qword_254302BC8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B520, &type metadata for FollowingState.NotSharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BC8);
  }
  return result;
}

unint64_t sub_23B762A00()
{
  unint64_t result;

  result = qword_254302BC0;
  if (!qword_254302BC0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B548, &type metadata for FollowingState.NotSharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BC0);
  }
  return result;
}

unint64_t sub_23B762A48()
{
  unint64_t result;

  result = qword_254302BA0;
  if (!qword_254302BA0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B5C0, &type metadata for FollowingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302BA0);
  }
  return result;
}

unint64_t sub_23B762A90()
{
  unint64_t result;

  result = qword_254302B98;
  if (!qword_254302B98)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B5E8, &type metadata for FollowingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B98);
  }
  return result;
}

unint64_t sub_23B762AD8()
{
  unint64_t result;

  result = qword_254302B60;
  if (!qword_254302B60)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B418, &type metadata for FollowerState.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B60);
  }
  return result;
}

unint64_t sub_23B762B20()
{
  unint64_t result;

  result = qword_254302B58;
  if (!qword_254302B58)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B440, &type metadata for FollowerState.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B58);
  }
  return result;
}

unint64_t sub_23B762B68()
{
  unint64_t result;

  result = qword_254302B78;
  if (!qword_254302B78)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B3C8, &type metadata for FollowerState.NotSharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B78);
  }
  return result;
}

unint64_t sub_23B762BB0()
{
  unint64_t result;

  result = qword_254302B70;
  if (!qword_254302B70)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B3F0, &type metadata for FollowerState.NotSharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B70);
  }
  return result;
}

unint64_t sub_23B762BF8()
{
  unint64_t result;

  result = qword_254302B88;
  if (!qword_254302B88)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B378, &type metadata for FollowerState.NotEligibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B88);
  }
  return result;
}

unint64_t sub_23B762C40()
{
  unint64_t result;

  result = qword_254302B80;
  if (!qword_254302B80)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B3A0, &type metadata for FollowerState.NotEligibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B80);
  }
  return result;
}

unint64_t sub_23B762C88()
{
  unint64_t result;

  result = qword_254302B50;
  if (!qword_254302B50)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B468, &type metadata for FollowerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B50);
  }
  return result;
}

unint64_t sub_23B762CD0()
{
  unint64_t result;

  result = qword_254302B48;
  if (!qword_254302B48)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79B490, &type metadata for FollowerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302B48);
  }
  return result;
}

uint64_t sub_23B762D14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646572616873 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572616853746F6ELL && a2 == 0xE900000000000064 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6967696C45746F6ELL && a2 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23B762E84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646572616873 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572616853746F6ELL && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23B762F78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69776F6C6C6F66 && a2 == 0xE900000000000067;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265776F6C6C6F66 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t DeviceWithCompanion.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[8];
  v5 = v0[7];
  sub_23B796CD4();
  swift_bridgeObjectRelease();
  strcpy((char *)v6, "thisDevice: ");
  sub_23B70B5A0(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302D38);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  sub_23B70B5A0(v5, v4);
  sub_23B796A4C();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  return v6[0];
}

uint64_t DeviceWithCompanion.thisDevice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_DWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = v8;
  return sub_23B70B5A0(v2, v3);
}

uint64_t DeviceWithCompanion.companion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_DWORD *)(v1 + 104);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = v8;
  return sub_23B70B5A0(v2, v3);
}

void __swiftcall DeviceWithCompanion.init(thisDevice:companion:)(FindMyLocate::DeviceWithCompanion *__return_ptr retstr, FindMyLocate::Device_optional *thisDevice, FindMyLocate::Device_optional *companion)
{
  Swift::String deviceName;
  Swift::String v4;
  int v5;

  deviceName = thisDevice->value.deviceName;
  retstr->thisDevice.value.identifier = thisDevice->value.identifier;
  retstr->thisDevice.value.deviceName = deviceName;
  retstr->thisDevice.value.idsDeviceId = thisDevice->value.idsDeviceId;
  v4 = companion->value.deviceName;
  retstr->companion.value.identifier = companion->value.identifier;
  v5 = *(_DWORD *)&companion->value.isActive;
  *(_DWORD *)&retstr->thisDevice.value.isActive = *(_DWORD *)&thisDevice->value.isActive;
  retstr->companion.value.deviceName = v4;
  retstr->companion.value.idsDeviceId = companion->value.idsDeviceId;
  *(_DWORD *)&retstr->companion.value.isActive = v5;
}

uint64_t sub_23B763278()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F696E61706D6F63;
  else
    return 0x6976654473696874;
}

uint64_t sub_23B7632BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B764074(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B7632E0()
{
  sub_23B7634F0();
  return sub_23B796FA4();
}

uint64_t sub_23B763308()
{
  sub_23B7634F0();
  return sub_23B796FB0();
}

uint64_t DeviceWithCompanion.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49120);
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v21 = v1[1];
  v22 = v6;
  v8 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v9 = *((_DWORD *)v1 + 12);
  v10 = *((_QWORD *)v1 + 7);
  v19 = *((_QWORD *)v1 + 8);
  v20 = v10;
  v11 = *((_QWORD *)v1 + 9);
  v17 = *((_QWORD *)v1 + 10);
  v18 = v11;
  v12 = *((_QWORD *)v1 + 11);
  v15 = *((_QWORD *)v1 + 12);
  v16 = v12;
  v30 = *((_DWORD *)v1 + 26);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7634F0();
  sub_23B796F8C();
  v25 = v22;
  v26 = v21;
  v27 = v8;
  v28 = v7;
  v29 = v9;
  v31 = 0;
  sub_23B763534();
  v13 = v23;
  sub_23B796E6C();
  if (!v13)
  {
    *(_QWORD *)&v25 = v20;
    *((_QWORD *)&v25 + 1) = v19;
    *(_QWORD *)&v26 = v18;
    *((_QWORD *)&v26 + 1) = v17;
    v27 = v16;
    v28 = v15;
    v29 = v30;
    v31 = 1;
    sub_23B796E6C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v5, v3);
}

unint64_t sub_23B7634F0()
{
  unint64_t result;

  result = qword_256A49128;
  if (!qword_256A49128)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BAF8, &type metadata for DeviceWithCompanion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49128);
  }
  return result;
}

unint64_t sub_23B763534()
{
  unint64_t result;

  result = qword_254302618;
  if (!qword_254302618)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for Device, &type metadata for Device);
    atomic_store(result, (unint64_t *)&qword_254302618);
  }
  return result;
}

uint64_t DeviceWithCompanion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  char v45;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49130);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B7634F0();
  sub_23B796F80();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v45 = 0;
  sub_23B756BBC();
  sub_23B796DF4();
  v9 = v39;
  v45 = 1;
  v32 = v38;
  v33 = v37;
  v35 = v41;
  v36 = v40;
  v34 = v42;
  v44 = v43;
  sub_23B70B5A0(v37, v38);
  sub_23B796DF4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v38;
  v30 = v39;
  v31 = v37;
  v27 = v40;
  v28 = v38;
  v29 = v41;
  v26 = v42;
  v11 = v43;
  v12 = v9;
  v13 = v32;
  v24 = v12;
  sub_23B70B5A0(v33, v32);
  v25 = v11;
  sub_23B70B5A0(v31, v10);
  v14 = v33;
  v16 = v35;
  v15 = v36;
  v17 = v34;
  v18 = v44;
  sub_23B729600(v33, v13);
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v17;
  *(_DWORD *)(a2 + 48) = v18;
  v20 = v27;
  v19 = v28;
  *(_QWORD *)(a2 + 56) = v31;
  *(_QWORD *)(a2 + 64) = v19;
  *(_QWORD *)(a2 + 72) = v30;
  *(_QWORD *)(a2 + 80) = v20;
  v21 = v26;
  *(_QWORD *)(a2 + 88) = v29;
  *(_QWORD *)(a2 + 96) = v21;
  *(_DWORD *)(a2 + 104) = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_23B729600(v14, v32);
  return sub_23B729600(v31, v19);
}

uint64_t sub_23B76387C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceWithCompanion.init(from:)(a1, a2);
}

uint64_t sub_23B763890(_QWORD *a1)
{
  return DeviceWithCompanion.encode(to:)(a1);
}

uint64_t destroy for DeviceWithCompanion(uint64_t a1)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + 64);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DeviceWithCompanion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    v7 = *(_QWORD *)(a2 + 64);
    if (v7)
      goto LABEL_3;
LABEL_5:
    v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = *(_QWORD *)(a2 + 64);
  if (!v7)
    goto LABEL_5;
LABEL_3:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceWithCompanion(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
      *(_BYTE *)(a1 + 50) = *((_BYTE *)a2 + 50);
      *(_BYTE *)(a1 + 51) = *((_BYTE *)a2 + 51);
    }
    else
    {
      sub_23B746C8C(a1);
      v6 = a2[1];
      v5 = a2[2];
      v7 = *a2;
      *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = v5;
      *(_OWORD *)a1 = v7;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_BYTE *)(a1 + 49) = *((_BYTE *)a2 + 49);
    *(_BYTE *)(a1 + 50) = *((_BYTE *)a2 + 50);
    *(_BYTE *)(a1 + 51) = *((_BYTE *)a2 + 51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *a2;
    v9 = a2[1];
    v10 = a2[2];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v8;
  }
  v11 = (_OWORD *)(a1 + 56);
  v12 = (__int128 *)((char *)a2 + 56);
  v13 = *((_QWORD *)a2 + 8);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
      *(_BYTE *)(a1 + 105) = *((_BYTE *)a2 + 105);
      *(_BYTE *)(a1 + 106) = *((_BYTE *)a2 + 106);
      *(_BYTE *)(a1 + 107) = *((_BYTE *)a2 + 107);
    }
    else
    {
      sub_23B746C8C(a1 + 56);
      v15 = *(__int128 *)((char *)a2 + 72);
      v14 = *(__int128 *)((char *)a2 + 88);
      v16 = *v12;
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      *(_OWORD *)(a1 + 72) = v15;
      *(_OWORD *)(a1 + 88) = v14;
      *v11 = v16;
    }
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    *(_BYTE *)(a1 + 105) = *((_BYTE *)a2 + 105);
    *(_BYTE *)(a1 + 106) = *((_BYTE *)a2 + 106);
    *(_BYTE *)(a1 + 107) = *((_BYTE *)a2 + 107);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *v12;
    v18 = *(__int128 *)((char *)a2 + 72);
    v19 = *(__int128 *)((char *)a2 + 88);
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(_OWORD *)(a1 + 72) = v18;
    *(_OWORD *)(a1 + 88) = v19;
    *v11 = v17;
  }
  return a1;
}

__n128 __swift_memcpy108_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 92) = *(__int128 *)((char *)a2 + 92);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for DeviceWithCompanion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
      *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
      *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
      goto LABEL_6;
    }
    sub_23B746C8C(a1);
  }
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
LABEL_6:
  if (!*(_QWORD *)(a1 + 64))
  {
LABEL_10:
    v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    return a1;
  }
  v8 = *(_QWORD *)(a2 + 64);
  if (!v8)
  {
    sub_23B746C8C(a1 + 56);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  *(_BYTE *)(a1 + 107) = *(_BYTE *)(a2 + 107);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceWithCompanion(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 108))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceWithCompanion(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 108) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 108) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceWithCompanion()
{
  return &type metadata for DeviceWithCompanion;
}

uint64_t storeEnumTagSinglePayload for DeviceWithCompanion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B763F1C + 4 * byte_23B79B9B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B763F50 + 4 * byte_23B79B9B0[v4]))();
}

uint64_t sub_23B763F50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B763F58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B763F60);
  return result;
}

uint64_t sub_23B763F6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B763F74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B763F78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B763F80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceWithCompanion.CodingKeys()
{
  return &type metadata for DeviceWithCompanion.CodingKeys;
}

unint64_t sub_23B763FA0()
{
  unint64_t result;

  result = qword_256A49138;
  if (!qword_256A49138)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BAD0, &type metadata for DeviceWithCompanion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49138);
  }
  return result;
}

unint64_t sub_23B763FE8()
{
  unint64_t result;

  result = qword_256A49140;
  if (!qword_256A49140)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BA40, &type metadata for DeviceWithCompanion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49140);
  }
  return result;
}

unint64_t sub_23B764030()
{
  unint64_t result;

  result = qword_256A49148;
  if (!qword_256A49148)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BA68, &type metadata for DeviceWithCompanion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49148);
  }
  return result;
}

uint64_t sub_23B764074(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6976654473696874 && a2 == 0xEA00000000006563;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F696E61706D6F63 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

BOOL static FriendshipRequestStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  switch(v2)
  {
    case 5:
      return v3 == 5;
    case 4:
      return v3 == 4;
    case 3:
      return v3 == 3;
  }
  if ((v3 - 3) < 3)
    return 0;
  return v2 == v3;
}

BOOL static FriendshipRequestError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23B764200()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B764230 + 4 * byte_23B79BB50[*v0]))(0x73736563637573, 0xE700000000000000);
}

unint64_t sub_23B764230()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_23B76424C()
{
  return 0x6572756C696166;
}

uint64_t sub_23B764260()
{
  return 0x676E69646E6570;
}

uint64_t sub_23B764274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B768220(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B764298(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23B7642A4()
{
  sub_23B764838();
  return sub_23B796FA4();
}

uint64_t sub_23B7642CC()
{
  sub_23B764838();
  return sub_23B796FB0();
}

uint64_t sub_23B7642F4()
{
  return 0x726F727265;
}

uint64_t sub_23B764308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23B796ECC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23B764394()
{
  sub_23B7648C0();
  return sub_23B796FA4();
}

uint64_t sub_23B7643BC()
{
  sub_23B7648C0();
  return sub_23B796FB0();
}

uint64_t sub_23B7643E4()
{
  sub_23B764948();
  return sub_23B796FA4();
}

uint64_t sub_23B76440C()
{
  sub_23B764948();
  return sub_23B796FB0();
}

uint64_t sub_23B764434()
{
  sub_23B76487C();
  return sub_23B796FA4();
}

uint64_t sub_23B76445C()
{
  sub_23B76487C();
  return sub_23B796FB0();
}

uint64_t sub_23B764484()
{
  sub_23B76498C();
  return sub_23B796FA4();
}

uint64_t sub_23B7644AC()
{
  sub_23B76498C();
  return sub_23B796FB0();
}

uint64_t FriendshipRequestStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49150);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49158);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49160);
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49168);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49170);
  v35 = *(_QWORD *)(v15 - 8);
  v36 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B764838();
  sub_23B796F8C();
  switch(v18)
  {
    case 5:
      v41 = 3;
      sub_23B76487C();
      v20 = v29;
      v19 = v36;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v17, v19);
    case 4:
      v38 = 1;
      sub_23B764948();
      v22 = v36;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v17, v22);
    case 3:
      v37 = 0;
      sub_23B76498C();
      v19 = v36;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v17, v19);
    default:
      v40 = 2;
      sub_23B7648C0();
      v23 = v32;
      v24 = v36;
      sub_23B796E48();
      v39 = v18;
      sub_23B764904();
      v25 = v34;
      sub_23B796EA8();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v17, v24);
  }
}

unint64_t sub_23B764838()
{
  unint64_t result;

  result = qword_256A49178;
  if (!qword_256A49178)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C684, &type metadata for FriendshipRequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49178);
  }
  return result;
}

unint64_t sub_23B76487C()
{
  unint64_t result;

  result = qword_256A49180;
  if (!qword_256A49180)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C634, &type metadata for FriendshipRequestStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49180);
  }
  return result;
}

unint64_t sub_23B7648C0()
{
  unint64_t result;

  result = qword_256A49188;
  if (!qword_256A49188)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C5E4, &type metadata for FriendshipRequestStatus.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49188);
  }
  return result;
}

unint64_t sub_23B764904()
{
  unint64_t result;

  result = qword_256A49190;
  if (!qword_256A49190)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipRequestError, &type metadata for FriendshipRequestError);
    atomic_store(result, (unint64_t *)&qword_256A49190);
  }
  return result;
}

unint64_t sub_23B764948()
{
  unint64_t result;

  result = qword_256A49198;
  if (!qword_256A49198)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C594, &type metadata for FriendshipRequestStatus.OfferLocationWithPendingOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49198);
  }
  return result;
}

unint64_t sub_23B76498C()
{
  unint64_t result;

  result = qword_256A491A0;
  if (!qword_256A491A0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C544, &type metadata for FriendshipRequestStatus.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A491A0);
  }
  return result;
}

uint64_t FriendshipRequestStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;

  v26 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491A8);
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491B0);
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v29 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491B8);
  v28 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v27 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491C0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23B764838();
  v13 = v31;
  sub_23B796F80();
  if (!v13)
  {
    v19[0] = v7;
    v19[1] = v6;
    v31 = v9;
    v14 = sub_23B796E3C();
    if (*(_QWORD *)(v14 + 16) == 1)
      __asm { BR              X10 }
    v15 = sub_23B796D04();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v17 = &type metadata for FriendshipRequestStatus;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x24BEE26D0], v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

unint64_t sub_23B764EFC()
{
  unint64_t result;

  result = qword_256A491D0;
  if (!qword_256A491D0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipRequestError, &type metadata for FriendshipRequestError);
    atomic_store(result, (unint64_t *)&qword_256A491D0);
  }
  return result;
}

uint64_t sub_23B764F40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FriendshipRequestStatus.init(from:)(a1, a2);
}

uint64_t sub_23B764F54(_QWORD *a1)
{
  return FriendshipRequestStatus.encode(to:)(a1);
}

BOOL sub_23B764F68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  switch(v2)
  {
    case 5:
      return v3 == 5;
    case 4:
      return v3 == 4;
    case 3:
      return v3 == 3;
  }
  if ((v3 - 3) < 3)
    return 0;
  return v2 == v3;
}

uint64_t FriendshipRequestError.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t sub_23B764FF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x5264696C61766E69;
  if (*v0 != 1)
    v1 = 0x46646E616D6D6F63;
  if (*v0)
    return v1;
  else
    return 0x53676E697373696DLL;
}

uint64_t sub_23B765078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B7683D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B76509C()
{
  sub_23B765440();
  return sub_23B796FA4();
}

uint64_t sub_23B7650C4()
{
  sub_23B765440();
  return sub_23B796FB0();
}

uint64_t sub_23B7650EC()
{
  sub_23B765484();
  return sub_23B796FA4();
}

uint64_t sub_23B765114()
{
  sub_23B765484();
  return sub_23B796FB0();
}

uint64_t sub_23B76513C()
{
  sub_23B7654C8();
  return sub_23B796FA4();
}

uint64_t sub_23B765164()
{
  sub_23B7654C8();
  return sub_23B796FB0();
}

uint64_t sub_23B76518C()
{
  sub_23B76550C();
  return sub_23B796FA4();
}

uint64_t sub_23B7651B4()
{
  sub_23B76550C();
  return sub_23B796FB0();
}

uint64_t FriendshipRequestError.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491D8);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491E0);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491E8);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A491F0);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B765440();
  sub_23B796F8C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23B7654C8();
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23B765484();
      v16 = v21;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23B76550C();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23B765440()
{
  unint64_t result;

  result = qword_256A491F8;
  if (!qword_256A491F8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C4F4, &type metadata for FriendshipRequestError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A491F8);
  }
  return result;
}

unint64_t sub_23B765484()
{
  unint64_t result;

  result = qword_256A49200;
  if (!qword_256A49200)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C4A4, &type metadata for FriendshipRequestError.CommandFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49200);
  }
  return result;
}

unint64_t sub_23B7654C8()
{
  unint64_t result;

  result = qword_256A49208;
  if (!qword_256A49208)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C454, &type metadata for FriendshipRequestError.InvalidResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49208);
  }
  return result;
}

unint64_t sub_23B76550C()
{
  unint64_t result;

  result = qword_256A49210;
  if (!qword_256A49210)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C404, &type metadata for FriendshipRequestError.MissingServerIdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49210);
  }
  return result;
}

uint64_t FriendshipRequestError.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t FriendshipRequestError.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49218);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49220);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49228);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49230);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B765440();
  v13 = v41;
  sub_23B796F80();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23B796E3C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23B796D04();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v25 = &type metadata for FriendshipRequestError;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23B7654C8();
      v20 = v9;
      sub_23B796DC4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23B765484();
      v28 = v15;
      sub_23B796DC4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23B76550C();
    sub_23B796DC4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_23B7659D8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FriendshipRequestError.init(from:)(a1, a2);
}

uint64_t sub_23B7659EC(_QWORD *a1)
{
  return FriendshipRequestError.encode(to:)(a1);
}

uint64_t FriendshipRequestResult.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B725660(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FriendshipRequest);
}

uint64_t FriendshipRequestResult.result.getter()
{
  type metadata accessor for FriendshipRequestResult();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FriendshipRequestResult()
{
  uint64_t result;

  result = qword_256A492A8;
  if (!qword_256A492A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FriendshipRequestResult.requestIds.getter()
{
  type metadata accessor for FriendshipRequestResult();
  return swift_bridgeObjectRetain();
}

uint64_t FriendshipRequestResult.init(request:result:requestIds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  sub_23B765AEC(a1, a4);
  result = type metadata accessor for FriendshipRequestResult();
  *(_QWORD *)(a4 + *(int *)(result + 24)) = a3;
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_23B765AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FriendshipRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FriendshipRequestResult.description.getter()
{
  sub_23B796CD4();
  sub_23B796A7C();
  sub_23B796A7C();
  sub_23B796A7C();
  FriendshipRequest.description.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  type metadata accessor for FriendshipRequestResult();
  sub_23B72318C();
  swift_bridgeObjectRetain();
  sub_23B7969D4();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  swift_bridgeObjectRetain();
  sub_23B7969D4();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return 0;
}

uint64_t sub_23B765CF4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746C75736572;
  if (*v0 != 1)
    v1 = 0x4974736575716572;
  if (*v0)
    return v1;
  else
    return 0x74736575716572;
}

uint64_t sub_23B765D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B768590(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B765D74()
{
  sub_23B766324();
  return sub_23B796FA4();
}

uint64_t sub_23B765D9C()
{
  sub_23B766324();
  return sub_23B796FB0();
}

uint64_t FriendshipRequestResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49238);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B766324();
  sub_23B796F8C();
  LOBYTE(v12) = 0;
  type metadata accessor for FriendshipRequest();
  sub_23B7663AC(&qword_256A49248, (uint64_t)&protocol conformance descriptor for FriendshipRequest);
  sub_23B796EA8();
  if (!v2)
  {
    v9 = type metadata accessor for FriendshipRequestResult();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 20));
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A49250);
    sub_23B7663EC(&qword_256A49258, (uint64_t (*)(void))sub_23B6FC8B0, (uint64_t (*)(void))sub_23B766368, MEMORY[0x24BEE04C0]);
    sub_23B796EA8();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A49268);
    sub_23B7664AC(&qword_256A49270, (uint64_t (*)(void))sub_23B6FC8B0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_23B796EA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FriendshipRequestResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  uint64_t v25;

  v19 = a2;
  v4 = type metadata accessor for FriendshipRequest();
  MEMORY[0x24BDAC7A8](v4);
  v20 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49278);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FriendshipRequestResult();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23B766324();
  v21 = v8;
  sub_23B796F80();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  v13 = v6;
  v14 = (uint64_t)v11;
  LOBYTE(v25) = 0;
  sub_23B7663AC(&qword_256A49280, (uint64_t)&protocol conformance descriptor for FriendshipRequest);
  v16 = (uint64_t)v20;
  v15 = v21;
  v17 = v22;
  sub_23B796E30();
  sub_23B765AEC(v16, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A49250);
  v24 = 1;
  sub_23B7663EC(&qword_256A49288, (uint64_t (*)(void))sub_23B70C8EC, (uint64_t (*)(void))sub_23B766468, MEMORY[0x24BEE04E0]);
  sub_23B796E30();
  *(_QWORD *)(v14 + *(int *)(v9 + 20)) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A49268);
  v24 = 2;
  sub_23B7664AC(&qword_256A49298, (uint64_t (*)(void))sub_23B70C8EC, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  sub_23B796E30();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v17);
  *(_QWORD *)(v14 + *(int *)(v9 + 24)) = v25;
  sub_23B725660(v14, v19, (uint64_t (*)(_QWORD))type metadata accessor for FriendshipRequestResult);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_23B700B04(v14, (uint64_t (*)(_QWORD))type metadata accessor for FriendshipRequestResult);
}

uint64_t sub_23B7662F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FriendshipRequestResult.init(from:)(a1, a2);
}

uint64_t sub_23B76630C(_QWORD *a1)
{
  return FriendshipRequestResult.encode(to:)(a1);
}

unint64_t sub_23B766324()
{
  unint64_t result;

  result = qword_256A49240;
  if (!qword_256A49240)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C3B4, &type metadata for FriendshipRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49240);
  }
  return result;
}

unint64_t sub_23B766368()
{
  unint64_t result;

  result = qword_256A49260;
  if (!qword_256A49260)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipRequestStatus, &type metadata for FriendshipRequestStatus);
    atomic_store(result, (unint64_t *)&qword_256A49260);
  }
  return result;
}

uint64_t sub_23B7663AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FriendshipRequest();
    result = MEMORY[0x23B86C6B8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B7663EC(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A49250);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x23B86C6B8](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B766468()
{
  unint64_t result;

  result = qword_256A49290;
  if (!qword_256A49290)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipRequestStatus, &type metadata for FriendshipRequestStatus);
    atomic_store(result, (unint64_t *)&qword_256A49290);
  }
  return result;
}

uint64_t sub_23B7664AC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A49268);
    v10[0] = a2();
    v10[1] = a3;
    result = MEMORY[0x23B86C6B8](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B766524()
{
  unint64_t result;

  result = qword_256A492A0;
  if (!qword_256A492A0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipRequestError, &type metadata for FriendshipRequestError);
    atomic_store(result, (unint64_t *)&qword_256A492A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FriendshipRequestStatus(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 4)
      return v7 - 3;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23B7665B8 + 4 * byte_23B79BB58[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FriendshipRequestStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23B766664 + 4 * byte_23B79BB62[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23B766698 + 4 * byte_23B79BB5D[v5]))();
}

uint64_t sub_23B766698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7666A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B7666A8);
  return result;
}

uint64_t sub_23B7666B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B7666BCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23B7666C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7666C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7666D4(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_23B7666E8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipRequestStatus()
{
  return &type metadata for FriendshipRequestStatus;
}

ValueMetadata *type metadata accessor for FriendshipRequestError()
{
  return &type metadata for FriendshipRequestError;
}

_QWORD *initializeBufferWithCopyOfBuffer for FriendshipRequestResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for FriendshipRequest();
    *(_QWORD *)((char *)a1 + v8[5]) = *(_QWORD *)((char *)a2 + v8[5]);
    v9 = v8[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v12)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v12;
      v13 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v13;
      v10[32] = v11[32];
      v14 = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 6) = v14;
      *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
      *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
      v15 = *((_QWORD *)v11 + 11);
      *((_QWORD *)v10 + 10) = *((_QWORD *)v11 + 10);
      *((_QWORD *)v10 + 11) = v15;
      *((_QWORD *)v10 + 12) = *((_QWORD *)v11 + 12);
      v10[104] = v11[104];
      v16 = *((_QWORD *)v11 + 15);
      *((_QWORD *)v10 + 14) = *((_QWORD *)v11 + 14);
      *((_QWORD *)v10 + 15) = v16;
      v17 = *((_QWORD *)v11 + 17);
      *((_QWORD *)v10 + 16) = *((_QWORD *)v11 + 16);
      *((_QWORD *)v10 + 17) = v17;
      v37 = *((_QWORD *)v11 + 19);
      *((_QWORD *)v10 + 18) = *((_QWORD *)v11 + 18);
      *((_QWORD *)v10 + 19) = v37;
      v18 = *((_QWORD *)v11 + 20);
      v19 = *((_QWORD *)v11 + 21);
      *((_QWORD *)v10 + 20) = v18;
      *((_QWORD *)v10 + 21) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *((_OWORD *)v11 + 9);
      *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
      *((_OWORD *)v10 + 9) = v21;
      *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
      v22 = *((_OWORD *)v11 + 5);
      *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
      *((_OWORD *)v10 + 5) = v22;
      v23 = *((_OWORD *)v11 + 7);
      *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
      *((_OWORD *)v10 + 7) = v23;
      v24 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v24;
      v25 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v25;
    }
    v26 = v8[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_23B7968A8();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v32 = v8[10];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    *v33 = *v34;
    *(_OWORD *)(v33 + 8) = *(_OWORD *)(v34 + 8);
    *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
    *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
    v35 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FriendshipRequestResult(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for FriendshipRequest();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(v3 + 24) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(v3 + 28);
  v5 = sub_23B7968A8();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FriendshipRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = (int *)type metadata accessor for FriendshipRequest();
  *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v12 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = v12;
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    v13 = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
    *(_QWORD *)(v8 + 88) = v13;
    *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
    *(_BYTE *)(v8 + 104) = *(_BYTE *)(v9 + 104);
    v14 = *(_QWORD *)(v9 + 120);
    *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
    *(_QWORD *)(v8 + 120) = v14;
    v15 = *(_QWORD *)(v9 + 136);
    *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
    *(_QWORD *)(v8 + 136) = v15;
    v34 = *(_QWORD *)(v9 + 152);
    *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
    *(_QWORD *)(v8 + 152) = v34;
    v16 = *(_QWORD *)(v9 + 160);
    v17 = *(_QWORD *)(v9 + 168);
    *(_QWORD *)(v8 + 160) = v16;
    *(_QWORD *)(v8 + 168) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *(_OWORD *)(v9 + 144);
    *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
    *(_OWORD *)(v8 + 144) = v18;
    *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
    v19 = *(_OWORD *)(v9 + 80);
    *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 80) = v19;
    v20 = *(_OWORD *)(v9 + 112);
    *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
    *(_OWORD *)(v8 + 112) = v20;
    v21 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v21;
    v22 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v22;
  }
  v23 = v6[7];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  v26 = sub_23B7968A8();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_BYTE *)(a1 + v6[8]) = *(_BYTE *)(a2 + v6[8]);
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  v29 = v6[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)v30 = *(_BYTE *)v31;
  *(_OWORD *)(v30 + 8) = *(_OWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(v31 + 24);
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v32 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FriendshipRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FriendshipRequest();
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = v7[6];
  v9 = a1 + v8;
  v10 = (__int128 *)(a2 + v8);
  v11 = *(_QWORD *)(a1 + v8 + 8);
  v12 = *(_QWORD *)(a2 + v8 + 8);
  if (v11)
  {
    if (v12)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *(_QWORD *)(v9 + 8) = *((_QWORD *)v10 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
      *(_QWORD *)(v9 + 24) = *((_QWORD *)v10 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v9 + 32) = *((_BYTE *)v10 + 32);
      *(_QWORD *)(v9 + 40) = *((_QWORD *)v10 + 5);
      *(_QWORD *)(v9 + 48) = *((_QWORD *)v10 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 64) = *((_QWORD *)v10 + 8);
      *(_QWORD *)(v9 + 72) = *((_QWORD *)v10 + 9);
      *(_QWORD *)(v9 + 80) = *((_QWORD *)v10 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 88) = *((_QWORD *)v10 + 11);
      *(_QWORD *)(v9 + 96) = *((_QWORD *)v10 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v9 + 104) = *((_BYTE *)v10 + 104);
      *(_QWORD *)(v9 + 112) = *((_QWORD *)v10 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 120) = *((_QWORD *)v10 + 15);
      *(_QWORD *)(v9 + 128) = *((_QWORD *)v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 136) = *((_QWORD *)v10 + 17);
      *(_QWORD *)(v9 + 144) = *((_QWORD *)v10 + 18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 152) = *((_QWORD *)v10 + 19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 160) = *((_QWORD *)v10 + 20);
      *(_QWORD *)(v9 + 168) = *((_QWORD *)v10 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B70D39C(v9);
      v14 = v10[1];
      v13 = v10[2];
      *(_OWORD *)v9 = *v10;
      *(_OWORD *)(v9 + 16) = v14;
      *(_OWORD *)(v9 + 32) = v13;
      v15 = v10[6];
      v17 = v10[3];
      v16 = v10[4];
      *(_OWORD *)(v9 + 80) = v10[5];
      *(_OWORD *)(v9 + 96) = v15;
      *(_OWORD *)(v9 + 48) = v17;
      *(_OWORD *)(v9 + 64) = v16;
      v18 = v10[10];
      v20 = v10[7];
      v19 = v10[8];
      *(_OWORD *)(v9 + 144) = v10[9];
      *(_OWORD *)(v9 + 160) = v18;
      *(_OWORD *)(v9 + 112) = v20;
      *(_OWORD *)(v9 + 128) = v19;
    }
  }
  else if (v12)
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = *((_QWORD *)v10 + 1);
    *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);
    *(_QWORD *)(v9 + 24) = *((_QWORD *)v10 + 3);
    *(_BYTE *)(v9 + 32) = *((_BYTE *)v10 + 32);
    *(_QWORD *)(v9 + 40) = *((_QWORD *)v10 + 5);
    *(_QWORD *)(v9 + 48) = *((_QWORD *)v10 + 6);
    *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);
    *(_QWORD *)(v9 + 64) = *((_QWORD *)v10 + 8);
    *(_QWORD *)(v9 + 72) = *((_QWORD *)v10 + 9);
    *(_QWORD *)(v9 + 80) = *((_QWORD *)v10 + 10);
    *(_QWORD *)(v9 + 88) = *((_QWORD *)v10 + 11);
    *(_QWORD *)(v9 + 96) = *((_QWORD *)v10 + 12);
    *(_BYTE *)(v9 + 104) = *((_BYTE *)v10 + 104);
    *(_QWORD *)(v9 + 112) = *((_QWORD *)v10 + 14);
    *(_QWORD *)(v9 + 120) = *((_QWORD *)v10 + 15);
    *(_QWORD *)(v9 + 128) = *((_QWORD *)v10 + 16);
    *(_QWORD *)(v9 + 136) = *((_QWORD *)v10 + 17);
    *(_QWORD *)(v9 + 144) = *((_QWORD *)v10 + 18);
    *(_QWORD *)(v9 + 152) = *((_QWORD *)v10 + 19);
    *(_QWORD *)(v9 + 160) = *((_QWORD *)v10 + 20);
    *(_QWORD *)(v9 + 168) = *((_QWORD *)v10 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v10;
    v22 = v10[2];
    *(_OWORD *)(v9 + 16) = v10[1];
    *(_OWORD *)(v9 + 32) = v22;
    *(_OWORD *)v9 = v21;
    v23 = v10[3];
    v24 = v10[4];
    v25 = v10[6];
    *(_OWORD *)(v9 + 80) = v10[5];
    *(_OWORD *)(v9 + 96) = v25;
    *(_OWORD *)(v9 + 48) = v23;
    *(_OWORD *)(v9 + 64) = v24;
    v26 = v10[7];
    v27 = v10[8];
    v28 = v10[10];
    *(_OWORD *)(v9 + 144) = v10[9];
    *(_OWORD *)(v9 + 160) = v28;
    *(_OWORD *)(v9 + 112) = v26;
    *(_OWORD *)(v9 + 128) = v27;
  }
  v29 = v7[7];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = sub_23B7968A8();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v30, v31, v32);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_13;
  }
  if (v36)
  {
LABEL_13:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_14:
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v38 = v7[10];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FriendshipRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FriendshipRequest();
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[5];
  v9[4] = v10[4];
  v9[5] = v12;
  v13 = v10[3];
  v9[2] = v10[2];
  v9[3] = v13;
  v14 = v10[10];
  v15 = v10[8];
  v9[9] = v10[9];
  v9[10] = v14;
  v16 = v10[7];
  v9[6] = v10[6];
  v9[7] = v16;
  v9[8] = v15;
  v17 = v7[7];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_23B7968A8();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v23 = v7[10];
  v24 = (_OWORD *)(a1 + v23);
  v25 = (_OWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v27 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  return a1;
}

uint64_t assignWithTake for FriendshipRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FriendshipRequest();
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  swift_bridgeObjectRelease();
  v8 = v7[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  if (*(_QWORD *)(a1 + v8 + 8))
  {
    v11 = *(_QWORD *)(v10 + 8);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *(_QWORD *)(v9 + 8) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v10 + 24);
      *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
      *(_QWORD *)(v9 + 24) = v12;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
      v13 = *(_QWORD *)(v10 + 48);
      *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
      *(_QWORD *)(v9 + 48) = v13;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
      v14 = *(_QWORD *)(v10 + 80);
      *(_QWORD *)(v9 + 72) = *(_QWORD *)(v10 + 72);
      *(_QWORD *)(v9 + 80) = v14;
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v10 + 96);
      *(_QWORD *)(v9 + 88) = *(_QWORD *)(v10 + 88);
      *(_QWORD *)(v9 + 96) = v15;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v9 + 104) = *(_BYTE *)(v10 + 104);
      *(_QWORD *)(v9 + 112) = *(_QWORD *)(v10 + 112);
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v10 + 128);
      *(_QWORD *)(v9 + 120) = *(_QWORD *)(v10 + 120);
      *(_QWORD *)(v9 + 128) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v10 + 144);
      *(_QWORD *)(v9 + 136) = *(_QWORD *)(v10 + 136);
      *(_QWORD *)(v9 + 144) = v17;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 152) = *(_QWORD *)(v10 + 152);
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v10 + 168);
      *(_QWORD *)(v9 + 160) = *(_QWORD *)(v10 + 160);
      *(_QWORD *)(v9 + 168) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23B70D39C(v9);
  }
  v19 = *(_OWORD *)(v10 + 144);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(v10 + 128);
  *(_OWORD *)(v9 + 144) = v19;
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(v10 + 160);
  v20 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v20;
  v21 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v21;
  v22 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v22;
  v23 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v23;
LABEL_6:
  v24 = v7[7];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = sub_23B7968A8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_11;
  }
  if (v31)
  {
LABEL_11:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_12:
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v33 = v7[10];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_BYTE *)v34 = *(_BYTE *)v35;
  *(_OWORD *)(v34 + 8) = *(_OWORD *)(v35 + 8);
  *(_QWORD *)(v34 + 24) = *(_QWORD *)(v35 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FriendshipRequestResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B767744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FriendshipRequest();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FriendshipRequestResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B7677CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FriendshipRequest();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23B767844()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FriendshipRequest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendshipRequestResult.CodingKeys()
{
  return &type metadata for FriendshipRequestResult.CodingKeys;
}

uint64_t _s12FindMyLocate22FriendshipRequestErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B767918 + 4 * byte_23B79BB6C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B76794C + 4 * byte_23B79BB67[v4]))();
}

uint64_t sub_23B76794C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B767954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B76795CLL);
  return result;
}

uint64_t sub_23B767968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B767970);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B767974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76797C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipRequestError.CodingKeys()
{
  return &type metadata for FriendshipRequestError.CodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestError.MissingServerIdCodingKeys()
{
  return &type metadata for FriendshipRequestError.MissingServerIdCodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestError.InvalidResponseCodingKeys()
{
  return &type metadata for FriendshipRequestError.InvalidResponseCodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestError.CommandFailedCodingKeys()
{
  return &type metadata for FriendshipRequestError.CommandFailedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for FriendshipRequestStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B767A14 + 4 * byte_23B79BB76[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B767A48 + 4 * byte_23B79BB71[v4]))();
}

uint64_t sub_23B767A48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B767A50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B767A58);
  return result;
}

uint64_t sub_23B767A64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B767A6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B767A70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B767A78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipRequestStatus.CodingKeys()
{
  return &type metadata for FriendshipRequestStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestStatus.SuccessCodingKeys()
{
  return &type metadata for FriendshipRequestStatus.SuccessCodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestStatus.OfferLocationWithPendingOffersCodingKeys()
{
  return &type metadata for FriendshipRequestStatus.OfferLocationWithPendingOffersCodingKeys;
}

uint64_t storeEnumTagSinglePayload for FriendshipRequestStatus.FailureCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23B767AF4 + 4 * byte_23B79BB7B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23B767B14 + 4 * byte_23B79BB80[v4]))();
}

_BYTE *sub_23B767AF4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23B767B14(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B767B1C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B767B24(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B767B2C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B767B34(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipRequestStatus.FailureCodingKeys()
{
  return &type metadata for FriendshipRequestStatus.FailureCodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestStatus.PendingCodingKeys()
{
  return &type metadata for FriendshipRequestStatus.PendingCodingKeys;
}

unint64_t sub_23B767B64()
{
  unint64_t result;

  result = qword_256A492B8;
  if (!qword_256A492B8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BFD4, &type metadata for FriendshipRequestStatus.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492B8);
  }
  return result;
}

unint64_t sub_23B767BAC()
{
  unint64_t result;

  result = qword_256A492C0;
  if (!qword_256A492C0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C12C, &type metadata for FriendshipRequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492C0);
  }
  return result;
}

unint64_t sub_23B767BF4()
{
  unint64_t result;

  result = qword_256A492C8;
  if (!qword_256A492C8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C2D4, &type metadata for FriendshipRequestError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492C8);
  }
  return result;
}

unint64_t sub_23B767C3C()
{
  unint64_t result;

  result = qword_256A492D0;
  if (!qword_256A492D0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C38C, &type metadata for FriendshipRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492D0);
  }
  return result;
}

unint64_t sub_23B767C84()
{
  unint64_t result;

  result = qword_256A492D8;
  if (!qword_256A492D8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C2FC, &type metadata for FriendshipRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492D8);
  }
  return result;
}

unint64_t sub_23B767CCC()
{
  unint64_t result;

  result = qword_256A492E0;
  if (!qword_256A492E0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C324, &type metadata for FriendshipRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492E0);
  }
  return result;
}

unint64_t sub_23B767D14()
{
  unint64_t result;

  result = qword_256A492E8;
  if (!qword_256A492E8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C1F4, &type metadata for FriendshipRequestError.MissingServerIdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492E8);
  }
  return result;
}

unint64_t sub_23B767D5C()
{
  unint64_t result;

  result = qword_256A492F0;
  if (!qword_256A492F0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C21C, &type metadata for FriendshipRequestError.MissingServerIdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492F0);
  }
  return result;
}

unint64_t sub_23B767DA4()
{
  unint64_t result;

  result = qword_256A492F8;
  if (!qword_256A492F8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C1A4, &type metadata for FriendshipRequestError.InvalidResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A492F8);
  }
  return result;
}

unint64_t sub_23B767DEC()
{
  unint64_t result;

  result = qword_256A49300;
  if (!qword_256A49300)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C1CC, &type metadata for FriendshipRequestError.InvalidResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49300);
  }
  return result;
}

unint64_t sub_23B767E34()
{
  unint64_t result;

  result = qword_256A49308;
  if (!qword_256A49308)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C154, &type metadata for FriendshipRequestError.CommandFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49308);
  }
  return result;
}

unint64_t sub_23B767E7C()
{
  unint64_t result;

  result = qword_256A49310;
  if (!qword_256A49310)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C17C, &type metadata for FriendshipRequestError.CommandFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49310);
  }
  return result;
}

unint64_t sub_23B767EC4()
{
  unint64_t result;

  result = qword_256A49318;
  if (!qword_256A49318)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C244, &type metadata for FriendshipRequestError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49318);
  }
  return result;
}

unint64_t sub_23B767F0C()
{
  unint64_t result;

  result = qword_256A49320;
  if (!qword_256A49320)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C26C, &type metadata for FriendshipRequestError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49320);
  }
  return result;
}

unint64_t sub_23B767F54()
{
  unint64_t result;

  result = qword_256A49328;
  if (!qword_256A49328)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C04C, &type metadata for FriendshipRequestStatus.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49328);
  }
  return result;
}

unint64_t sub_23B767F9C()
{
  unint64_t result;

  result = qword_256A49330;
  if (!qword_256A49330)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C074, &type metadata for FriendshipRequestStatus.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49330);
  }
  return result;
}

unint64_t sub_23B767FE4()
{
  unint64_t result;

  result = qword_256A49338;
  if (!qword_256A49338)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BFFC, &type metadata for FriendshipRequestStatus.OfferLocationWithPendingOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49338);
  }
  return result;
}

unint64_t sub_23B76802C()
{
  unint64_t result;

  result = qword_256A49340;
  if (!qword_256A49340)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C024, &type metadata for FriendshipRequestStatus.OfferLocationWithPendingOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49340);
  }
  return result;
}

unint64_t sub_23B768074()
{
  unint64_t result;

  result = qword_256A49348;
  if (!qword_256A49348)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BF44, &type metadata for FriendshipRequestStatus.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49348);
  }
  return result;
}

unint64_t sub_23B7680BC()
{
  unint64_t result;

  result = qword_256A49350;
  if (!qword_256A49350)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BF6C, &type metadata for FriendshipRequestStatus.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49350);
  }
  return result;
}

unint64_t sub_23B768104()
{
  unint64_t result;

  result = qword_256A49358;
  if (!qword_256A49358)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BEF4, &type metadata for FriendshipRequestStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49358);
  }
  return result;
}

unint64_t sub_23B76814C()
{
  unint64_t result;

  result = qword_256A49360;
  if (!qword_256A49360)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79BF1C, &type metadata for FriendshipRequestStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49360);
  }
  return result;
}

unint64_t sub_23B768194()
{
  unint64_t result;

  result = qword_256A49368;
  if (!qword_256A49368)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C09C, &type metadata for FriendshipRequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49368);
  }
  return result;
}

unint64_t sub_23B7681DC()
{
  unint64_t result;

  result = qword_256A49370;
  if (!qword_256A49370)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79C0C4, &type metadata for FriendshipRequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49370);
  }
  return result;
}

uint64_t sub_23B768220(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023B7A1540 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E69646E6570 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23B7683D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53676E697373696DLL && a2 == 0xEF64497265767265;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5264696C61766E69 && a2 == 0xEF65736E6F707365 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x46646E616D6D6F63 && a2 == 0xED000064656C6961)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23B768590(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4974736575716572 && a2 == 0xEA00000000007364)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t Session.sendFriendshipOffer(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B768704()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[4];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[5] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B768780;
  return sub_23B7856A0(v0[2], v0[3]);
}

uint64_t sub_23B768780()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Session.sendFriendshipInvite(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B768810()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[4];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[5] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B768780;
  return sub_23B7857DC(v0[2], v0[3]);
}

uint64_t Session.stopSharingMyLocation(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B7688A8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[4];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[5] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B70AC14;
  return sub_23B785968(v0[2], v0[3]);
}

uint64_t Session.respondToInviteRequest(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B768940()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[4];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[5] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B768780;
  return sub_23B7858A4(v0[2], v0[3]);
}

uint64_t sub_23B7689BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B7689D4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B768A54;
  return sub_23B748AD0((uint64_t)&unk_250C92E88);
}

uint64_t sub_23B768A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B768ADC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B768AF4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B768B74;
  return sub_23B748AD0((uint64_t)&unk_250C92DC0);
}

uint64_t sub_23B768B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B768BFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B768C14()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B768A54;
  return sub_23B748AD0((uint64_t)&unk_250C92DE8);
}

uint64_t sub_23B768C94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B768CAC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B768A54;
  return sub_23B748AD0((uint64_t)&unk_250C92ED8);
}

uint64_t sub_23B768D2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B768D44()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v4;

  v1 = v0[2];
  v4 = 1;
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v4);
  v0[3] = *(_QWORD *)(v1 + 24);
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B768A54;
  return sub_23B748AD0((uint64_t)&unk_250C92EB0);
}

uint64_t Session.friendshipState(with:isFromGroup:)(uint64_t a1, _OWORD *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)(v4 + 640) = v3;
  *(_BYTE *)(v4 + 225) = a3;
  *(_QWORD *)(v4 + 632) = a2;
  *(_QWORD *)(v4 + 624) = a1;
  v5 = a2[9];
  *(_OWORD *)(v4 + 576) = a2[8];
  *(_OWORD *)(v4 + 592) = v5;
  *(_OWORD *)(v4 + 608) = a2[10];
  v6 = a2[5];
  *(_OWORD *)(v4 + 512) = a2[4];
  *(_OWORD *)(v4 + 528) = v6;
  v7 = a2[7];
  *(_OWORD *)(v4 + 544) = a2[6];
  *(_OWORD *)(v4 + 560) = v7;
  v8 = a2[1];
  *(_OWORD *)(v4 + 448) = *a2;
  *(_OWORD *)(v4 + 464) = v8;
  v9 = a2[3];
  *(_OWORD *)(v4 + 480) = a2[2];
  *(_OWORD *)(v4 + 496) = v9;
  return swift_task_switch();
}

uint64_t sub_23B768E18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 *v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD *v22;
  unsigned __int8 v24;

  v1 = *(_QWORD *)(v0 + 640);
  v2 = *(_BYTE *)(v0 + 225);
  v3 = *(__int128 **)(v0 + 632);
  v4 = *(_BYTE *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_OWORD *)(v1 + 64);
  v7 = *v3;
  v8 = v3[2];
  *(_OWORD *)(v0 + 32) = v3[1];
  *(_OWORD *)(v0 + 48) = v8;
  *(_OWORD *)(v0 + 16) = v7;
  v9 = v3[3];
  v10 = v3[4];
  v11 = v3[6];
  *(_OWORD *)(v0 + 96) = v3[5];
  *(_OWORD *)(v0 + 112) = v11;
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 80) = v10;
  v12 = v3[7];
  v13 = v3[8];
  v14 = v3[10];
  *(_OWORD *)(v0 + 160) = v3[9];
  *(_OWORD *)(v0 + 176) = v14;
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 144) = v13;
  *(_BYTE *)(v0 + 192) = v4;
  *(_OWORD *)(v0 + 200) = v6;
  *(_QWORD *)(v0 + 216) = v5;
  *(_BYTE *)(v0 + 224) = v2;
  v24 = 1;
  sub_23B6F4E8C(v0 + 448);
  swift_bridgeObjectRetain();
  _s12FindMyLocate7SessionC17ensureEntitlementyyAA19ServiceEntitlementsOF_0(&v24);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 408) = v16;
  *(_OWORD *)(v0 + 424) = *(_OWORD *)(v0 + 208);
  v17 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 344) = v17;
  v18 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 360) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 376) = v18;
  v19 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 280) = v19;
  v20 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 312) = v20;
  v21 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 648) = v15;
  *(_BYTE *)(v0 + 440) = *(_BYTE *)(v0 + 224);
  *(_OWORD *)(v0 + 248) = v21;
  swift_retain();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 656) = v22;
  *v22 = v0;
  v22[1] = sub_23B768F48;
  return sub_23B7854F4(*(_QWORD *)(v0 + 624), v0 + 232);
}

uint64_t sub_23B768F48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 664) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
    return swift_task_switch();
  sub_23B769074(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B768FD4()
{
  uint64_t v0;

  sub_23B769074(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.offerExpiration(for:fromHandle:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B769020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_23B7968A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B769074(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B769144(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LocationType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B7691B8 + 4 * byte_23B79C6D4[*v0]))(0x79636167656C2ELL, 0xE700000000000000);
}

unint64_t sub_23B7691B8()
{
  return 0xD000000000000013;
}

uint64_t sub_23B7691D4()
{
  return 0x6576696C2ELL;
}

uint64_t sub_23B7691E8()
{
  return 0x696C6C657461732ELL;
}

FindMyLocate::LocationType_optional __swiftcall LocationType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (FindMyLocate::LocationType_optional)rawValue;
}

void *static LocationType.allCases.getter()
{
  return &unk_250C91B38;
}

uint64_t LocationType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_23B769230()
{
  unint64_t result;

  result = qword_256A493D0;
  if (!qword_256A493D0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocationType, &type metadata for LocationType);
    atomic_store(result, (unint64_t *)&qword_256A493D0);
  }
  return result;
}

FindMyLocate::LocationType_optional sub_23B769274(Swift::Int *a1)
{
  return LocationType.init(rawValue:)(*a1);
}

uint64_t sub_23B76927C()
{
  sub_23B7694BC();
  return sub_23B796ADC();
}

uint64_t sub_23B7692D8()
{
  sub_23B7694BC();
  return sub_23B796AC4();
}

unint64_t sub_23B769328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A493D8;
  if (!qword_256A493D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A493E0);
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256A493D8);
  }
  return result;
}

void sub_23B769374(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C91B60;
}

uint64_t sub_23B769384()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B7693B4 + 4 * byte_23B79C6D8[*v0]))(0x79636167656C2ELL, 0xE700000000000000);
}

unint64_t sub_23B7693B4()
{
  return 0xD000000000000013;
}

uint64_t sub_23B7693D0()
{
  return 0x6576696C2ELL;
}

uint64_t sub_23B7693E4()
{
  return 0x696C6C657461732ELL;
}

uint64_t storeEnumTagSinglePayload for LocationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B76944C + 4 * byte_23B79C6E1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B769480 + 4 * byte_23B79C6DC[v4]))();
}

uint64_t sub_23B769480(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B769488(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B769490);
  return result;
}

uint64_t sub_23B76949C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B7694A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B7694A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7694B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_23B7694BC()
{
  unint64_t result;

  result = qword_256A493E8;
  if (!qword_256A493E8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocationType, &type metadata for LocationType);
    atomic_store(result, (unint64_t *)&qword_256A493E8);
  }
  return result;
}

BOOL static FriendshipRequestType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FriendshipRequestType.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t sub_23B769540()
{
  sub_23B76989C();
  return sub_23B796FA4();
}

uint64_t sub_23B769568()
{
  sub_23B76989C();
  return sub_23B796FB0();
}

uint64_t sub_23B769590()
{
  _BYTE *v0;

  if (*v0)
    return 7041889;
  else
    return 0x726566666FLL;
}

uint64_t sub_23B7695C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B76AE20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B7695E4()
{
  sub_23B769858();
  return sub_23B796FA4();
}

uint64_t sub_23B76960C()
{
  sub_23B769858();
  return sub_23B796FB0();
}

uint64_t sub_23B769634()
{
  sub_23B7698E0();
  return sub_23B796FA4();
}

uint64_t sub_23B76965C()
{
  sub_23B7698E0();
  return sub_23B796FB0();
}

uint64_t FriendshipRequestType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A493F0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A493F8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49400);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B769858();
  sub_23B796F8C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23B76989C();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23B7698E0();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_23B769858()
{
  unint64_t result;

  result = qword_256A49408;
  if (!qword_256A49408)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CFA0, &type metadata for FriendshipRequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49408);
  }
  return result;
}

unint64_t sub_23B76989C()
{
  unint64_t result;

  result = qword_256A49410;
  if (!qword_256A49410)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CF50, &type metadata for FriendshipRequestType.AskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49410);
  }
  return result;
}

unint64_t sub_23B7698E0()
{
  unint64_t result;

  result = qword_256A49418;
  if (!qword_256A49418)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CF00, &type metadata for FriendshipRequestType.OfferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49418);
  }
  return result;
}

uint64_t FriendshipRequestType.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t FriendshipRequestType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49420);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49428);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49430);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B769858();
  v11 = v33;
  sub_23B796F80();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23B796E3C();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23B796D04();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v21 = &type metadata for FriendshipRequestType;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23B76989C();
    sub_23B796DC4();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23B7698E0();
    v22 = v6;
    sub_23B796DC4();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23B769CC0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FriendshipRequestType.init(from:)(a1, a2);
}

uint64_t sub_23B769CD4(_QWORD *a1)
{
  return FriendshipRequestType.encode(to:)(a1);
}

BOOL static FriendshipResponseToInviteType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FriendshipResponseToInviteType.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t sub_23B769D24()
{
  sub_23B76A20C();
  return sub_23B796FA4();
}

uint64_t sub_23B769D4C()
{
  sub_23B76A20C();
  return sub_23B796FB0();
}

uint64_t sub_23B769D74()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656E696C636564;
  if (*v0 != 1)
    v1 = 0x776F4E746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x747065636361;
}

uint64_t sub_23B769DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B76AEF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B769DEC()
{
  sub_23B76A140();
  return sub_23B796FA4();
}

uint64_t sub_23B769E14()
{
  sub_23B76A140();
  return sub_23B796FB0();
}

uint64_t sub_23B769E3C()
{
  sub_23B76A1C8();
  return sub_23B796FA4();
}

uint64_t sub_23B769E64()
{
  sub_23B76A1C8();
  return sub_23B796FB0();
}

uint64_t sub_23B769E8C()
{
  sub_23B76A184();
  return sub_23B796FA4();
}

uint64_t sub_23B769EB4()
{
  sub_23B76A184();
  return sub_23B796FB0();
}

uint64_t FriendshipResponseToInviteType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49438);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49440);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49448);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49450);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B76A140();
  sub_23B796F8C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23B76A1C8();
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23B76A184();
      v16 = v21;
      sub_23B796E48();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23B76A20C();
    sub_23B796E48();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23B76A140()
{
  unint64_t result;

  result = qword_256A49458;
  if (!qword_256A49458)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CEB0, &type metadata for FriendshipResponseToInviteType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49458);
  }
  return result;
}

unint64_t sub_23B76A184()
{
  unint64_t result;

  result = qword_256A49460;
  if (!qword_256A49460)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CE60, &type metadata for FriendshipResponseToInviteType.NotNowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49460);
  }
  return result;
}

unint64_t sub_23B76A1C8()
{
  unint64_t result;

  result = qword_256A49468;
  if (!qword_256A49468)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CE10, &type metadata for FriendshipResponseToInviteType.DeclineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49468);
  }
  return result;
}

unint64_t sub_23B76A20C()
{
  unint64_t result;

  result = qword_256A49470;
  if (!qword_256A49470)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CDC0, &type metadata for FriendshipResponseToInviteType.AcceptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49470);
  }
  return result;
}

uint64_t FriendshipResponseToInviteType.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t FriendshipResponseToInviteType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49478);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49480);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49488);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49490);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B76A140();
  v13 = v41;
  sub_23B796F80();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23B796E3C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23B796D04();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v25 = &type metadata for FriendshipResponseToInviteType;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23B76A1C8();
      v20 = v9;
      sub_23B796DC4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23B76A184();
      v28 = v15;
      sub_23B796DC4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23B76A20C();
    sub_23B796DC4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

unint64_t sub_23B76A6DC()
{
  unint64_t result;

  result = qword_256A49498;
  if (!qword_256A49498)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipRequestType, &type metadata for FriendshipRequestType);
    atomic_store(result, (unint64_t *)&qword_256A49498);
  }
  return result;
}

unint64_t sub_23B76A724()
{
  unint64_t result;

  result = qword_256A494A0;
  if (!qword_256A494A0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for FriendshipResponseToInviteType, &type metadata for FriendshipResponseToInviteType);
    atomic_store(result, (unint64_t *)&qword_256A494A0);
  }
  return result;
}

uint64_t sub_23B76A768@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FriendshipResponseToInviteType.init(from:)(a1, a2);
}

uint64_t sub_23B76A77C(_QWORD *a1)
{
  return FriendshipResponseToInviteType.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FriendshipRequestType()
{
  return &type metadata for FriendshipRequestType;
}

ValueMetadata *type metadata accessor for FriendshipResponseToInviteType()
{
  return &type metadata for FriendshipResponseToInviteType;
}

uint64_t _s12FindMyLocate30FriendshipResponseToInviteTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B76A804 + 4 * byte_23B79C865[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B76A838 + 4 * byte_23B79C860[v4]))();
}

uint64_t sub_23B76A838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76A840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B76A848);
  return result;
}

uint64_t sub_23B76A854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B76A85CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B76A860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76A868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipResponseToInviteType.CodingKeys()
{
  return &type metadata for FriendshipResponseToInviteType.CodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipResponseToInviteType.AcceptCodingKeys()
{
  return &type metadata for FriendshipResponseToInviteType.AcceptCodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipResponseToInviteType.DeclineCodingKeys()
{
  return &type metadata for FriendshipResponseToInviteType.DeclineCodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipResponseToInviteType.NotNowCodingKeys()
{
  return &type metadata for FriendshipResponseToInviteType.NotNowCodingKeys;
}

uint64_t _s12FindMyLocate21FriendshipRequestTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B76A900 + 4 * byte_23B79C86F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B76A934 + 4 * byte_23B79C86A[v4]))();
}

uint64_t sub_23B76A934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76A93C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B76A944);
  return result;
}

uint64_t sub_23B76A950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B76A958);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B76A95C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76A964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FriendshipRequestType.CodingKeys()
{
  return &type metadata for FriendshipRequestType.CodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestType.OfferCodingKeys()
{
  return &type metadata for FriendshipRequestType.OfferCodingKeys;
}

ValueMetadata *type metadata accessor for FriendshipRequestType.AskCodingKeys()
{
  return &type metadata for FriendshipRequestType.AskCodingKeys;
}

unint64_t sub_23B76A9A4()
{
  unint64_t result;

  result = qword_256A494A8;
  if (!qword_256A494A8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CBF0, &type metadata for FriendshipRequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494A8);
  }
  return result;
}

unint64_t sub_23B76A9EC()
{
  unint64_t result;

  result = qword_256A494B0;
  if (!qword_256A494B0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CD98, &type metadata for FriendshipResponseToInviteType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494B0);
  }
  return result;
}

unint64_t sub_23B76AA34()
{
  unint64_t result;

  result = qword_256A494B8;
  if (!qword_256A494B8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CCB8, &type metadata for FriendshipResponseToInviteType.AcceptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494B8);
  }
  return result;
}

unint64_t sub_23B76AA7C()
{
  unint64_t result;

  result = qword_256A494C0;
  if (!qword_256A494C0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CCE0, &type metadata for FriendshipResponseToInviteType.AcceptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494C0);
  }
  return result;
}

unint64_t sub_23B76AAC4()
{
  unint64_t result;

  result = qword_256A494C8;
  if (!qword_256A494C8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CC68, &type metadata for FriendshipResponseToInviteType.DeclineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494C8);
  }
  return result;
}

unint64_t sub_23B76AB0C()
{
  unint64_t result;

  result = qword_256A494D0;
  if (!qword_256A494D0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CC90, &type metadata for FriendshipResponseToInviteType.DeclineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494D0);
  }
  return result;
}

unint64_t sub_23B76AB54()
{
  unint64_t result;

  result = qword_256A494D8;
  if (!qword_256A494D8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CC18, &type metadata for FriendshipResponseToInviteType.NotNowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494D8);
  }
  return result;
}

unint64_t sub_23B76AB9C()
{
  unint64_t result;

  result = qword_256A494E0;
  if (!qword_256A494E0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CC40, &type metadata for FriendshipResponseToInviteType.NotNowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494E0);
  }
  return result;
}

unint64_t sub_23B76ABE4()
{
  unint64_t result;

  result = qword_256A494E8;
  if (!qword_256A494E8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CD08, &type metadata for FriendshipResponseToInviteType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494E8);
  }
  return result;
}

unint64_t sub_23B76AC2C()
{
  unint64_t result;

  result = qword_256A494F0;
  if (!qword_256A494F0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CD30, &type metadata for FriendshipResponseToInviteType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494F0);
  }
  return result;
}

unint64_t sub_23B76AC74()
{
  unint64_t result;

  result = qword_256A494F8;
  if (!qword_256A494F8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CB10, &type metadata for FriendshipRequestType.OfferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A494F8);
  }
  return result;
}

unint64_t sub_23B76ACBC()
{
  unint64_t result;

  result = qword_256A49500;
  if (!qword_256A49500)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CB38, &type metadata for FriendshipRequestType.OfferCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49500);
  }
  return result;
}

unint64_t sub_23B76AD04()
{
  unint64_t result;

  result = qword_256A49508;
  if (!qword_256A49508)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CAC0, &type metadata for FriendshipRequestType.AskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49508);
  }
  return result;
}

unint64_t sub_23B76AD4C()
{
  unint64_t result;

  result = qword_256A49510;
  if (!qword_256A49510)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CAE8, &type metadata for FriendshipRequestType.AskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49510);
  }
  return result;
}

unint64_t sub_23B76AD94()
{
  unint64_t result;

  result = qword_256A49518;
  if (!qword_256A49518)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CB60, &type metadata for FriendshipRequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A49518);
  }
  return result;
}

unint64_t sub_23B76ADDC()
{
  unint64_t result;

  result = qword_256A49520;
  if (!qword_256A49520)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79CB88, &type metadata for FriendshipRequestType.CodingKeys);
    atomic_store(result, &qword_256A49520);
  }
  return result;
}

uint64_t sub_23B76AE20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726566666FLL && a2 == 0xE500000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7041889 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23B76AEF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x747065636361 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E696C636564 && a2 == 0xE700000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F4E746F6ELL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id sub_23B76B03C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection____lazy_storage___sharedContactStore;
  v2 = *(void **)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection____lazy_storage___sharedContactStore);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection____lazy_storage___sharedContactStore);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t (*sub_23B76B0AC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23B76B0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_254303288 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309170);
  v3 = sub_23B7969A4();
  v4 = sub_23B796C38();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23B6EB000, v3, v4, "Session FriendshipConnection deinit", v5, 2u);
    MEMORY[0x23B86C754](v5, -1, -1);
  }

  sub_23B6F7190(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_serviceDescription, &qword_254302FE8);
  swift_release();
  sub_23B6FBEB0(*(_QWORD *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_disconnectionHandler));
  sub_23B6F7190(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_friendshipContinuation, &qword_2543032B8);
  sub_23B6F7190(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_rangingContinuation, &qword_254302D60);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection____lazy_storage___sharedContactStore));
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  sub_23B6F7190(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_internalFollowingContinuation, &qword_2543032B8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_23B76B2E0()
{
  sub_23B76B0F0();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B76B2F8()
{
  return _s14descr250C98A29C20FriendshipConnectionCMa();
}

uint64_t sub_23B76B300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t *v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F70);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_isSyncingContact) != 1)
    return sub_23B796B60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = (unint64_t *)(a2 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_syncContinuations);
  swift_beginAccess();
  v9 = *v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_23B70577C(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
    *v8 = v9;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    v9 = sub_23B70577C(v11 > 1, v12 + 1, 1, v9);
    *v8 = v9;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, v7, v4);
  return swift_endAccess();
}

uint64_t sub_23B76B474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, unint64_t, uint64_t);
  uint64_t result;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302F70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_syncContinuations;
  swift_beginAccess();
  v7 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v10(v5, v8, v2);
      sub_23B796B60();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v6 = MEMORY[0x24BEE4AF8];
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + OBJC_IVAR____TtCC12FindMyLocate7Session20FriendshipConnection_isSyncingContact) = 0;
  return result;
}

uint64_t sub_23B76B5A0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[5];
  uint64_t v95;
  _OWORD v96[11];
  _OWORD v97[12];

  v71 = *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for Friend();
  v93 = *(_QWORD *)(v77 - 8);
  v7 = MEMORY[0x24BDAC7A8](v77);
  v82 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)&v66 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)&v66 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v80 = (char *)&v66 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v92 = (uint64_t)&v66 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v66 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (_OWORD *)((char *)&v66 - v21);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (_OWORD *)((char *)&v66 - v23);
  v25 = sub_23B7968A8();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = *a2;
  static Date.trustedNow.getter((uint64_t)v28);
  v94[2] = v28;
  swift_bridgeObjectRetain();
  v29 = sub_23B74EDBC((uint64_t (*)(char *))sub_23B76C56C, (uint64_t)v94, a1);
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v88 = v29;
    v78 = v28;
    v67 = v26;
    v68 = v25;
    v86 = *(_QWORD *)(a1 + 16);
    if (v86)
    {
      v87 = 0;
      v31 = v30;
      v79 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
      v84 = v88 + v79;
      v85 = a1 + v79;
      v93 = *(_QWORD *)(v93 + 72);
      v75 = &v95;
      v66 = a1;
      swift_bridgeObjectRetain();
      v32 = 0;
      v83 = v31 - 1;
      *(_QWORD *)&v33 = 141558275;
      v74 = v33;
      v73 = MEMORY[0x24BEE4AD8] + 8;
      v90 = MEMORY[0x24BEE4AF8];
      v91 = "te24SettingsServiceClientXPC_";
      do
      {
        v89 = v32 + 1;
        sub_23B6FA5FC(v85 + v32 * v93, (uint64_t)v24);
        swift_bridgeObjectRetain();
        v35 = v83;
        v34 = v84;
        while (1)
        {
          sub_23B6FA5FC(v34, (uint64_t)v22);
          v36 = v22[9];
          v96[8] = v22[8];
          v96[9] = v36;
          v96[10] = v22[10];
          v37 = v22[5];
          v96[4] = v22[4];
          v96[5] = v37;
          v38 = v22[7];
          v96[6] = v22[6];
          v96[7] = v38;
          v39 = v22[1];
          v96[0] = *v22;
          v96[1] = v39;
          v40 = v22[3];
          v96[2] = v22[2];
          v96[3] = v40;
          v41 = v24[9];
          v97[8] = v24[8];
          v97[9] = v41;
          v97[10] = v24[10];
          v42 = v24[5];
          v97[4] = v24[4];
          v97[5] = v42;
          v43 = v24[7];
          v97[6] = v24[6];
          v97[7] = v43;
          v44 = v24[1];
          v97[0] = *v24;
          v97[1] = v44;
          v45 = v24[3];
          v97[2] = v24[2];
          v97[3] = v45;
          v46 = sub_23B796A58();
          v48 = v47;
          if (v46 == sub_23B796A58() && v48 == v49)
          {
            sub_23B6F4E8C((uint64_t)v96);
            sub_23B6F4E8C((uint64_t)v97);
            swift_bridgeObjectRelease_n();
            sub_23B6F5744((uint64_t)v97);
            sub_23B6F5744((uint64_t)v96);
            sub_23B6FA5FC((uint64_t)v22, (uint64_t)v19);
            sub_23B6FA5FC((uint64_t)v24, v92);
LABEL_10:
            __asm { BR              X9 }
          }
          v50 = sub_23B796ECC();
          sub_23B6F4E8C((uint64_t)v96);
          sub_23B6F4E8C((uint64_t)v97);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23B6F5744((uint64_t)v97);
          sub_23B6F5744((uint64_t)v96);
          sub_23B6FA5FC((uint64_t)v22, (uint64_t)v19);
          v51 = v92;
          sub_23B6FA5FC((uint64_t)v24, v92);
          if ((v50 & 1) != 0)
            goto LABEL_10;
          sub_23B6F9D50(v51);
          sub_23B6F9D50((uint64_t)v19);
          sub_23B6F9D50((uint64_t)v22);
          if (!v35)
            break;
          v34 += v93;
          --v35;
        }
        swift_bridgeObjectRelease();
        sub_23B6FA5FC((uint64_t)v24, v82);
        v52 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v52 = sub_23B705640(0, *(_QWORD *)(v52 + 16) + 1, 1, v52);
        v32 = v89;
        v54 = *(_QWORD *)(v52 + 16);
        v53 = *(_QWORD *)(v52 + 24);
        if (v54 >= v53 >> 1)
          v52 = sub_23B705640(v53 > 1, v54 + 1, 1, v52);
        *(_QWORD *)(v52 + 16) = v54 + 1;
        sub_23B743904(v82, v52 + v79 + v54 * v93);
        sub_23B6F9D50((uint64_t)v24);
        v90 = v52;
      }
      while (v32 != v86);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v90 = MEMORY[0x24BEE4AF8];
    }
    v57 = v71;
    v56 = v72;
    v58 = (uint64_t)v70;
    v60 = v67;
    v59 = v68;
    v61 = v78;
    v62 = v69;
    v63 = sub_23B796B84();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v58, 1, 1, v63);
    v64 = sub_23B6EE138((unint64_t *)&qword_254302F80, (uint64_t (*)(uint64_t))_s14descr250C98A29C20FriendshipConnectionCMa, (uint64_t)&unk_23B79D0C8);
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v56;
    *(_QWORD *)(v65 + 24) = v64;
    *(_QWORD *)(v65 + 32) = v56;
    *(_BYTE *)(v65 + 40) = v62;
    *(_QWORD *)(v65 + 48) = v57;
    swift_retain_n();
    sub_23B742B50(v58, (uint64_t)&unk_256A49540, v65);
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
    return v90;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
}

uint64_t sub_23B76C26C()
{
  uint64_t v0;
  char v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23B76C9FC(v0, (uint64_t (*)(_BYTE *, _BYTE *))sub_23B76C9F4);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

BOOL sub_23B76C2CC()
{
  sub_23B7968A8();
  sub_23B6EE138((unint64_t *)&qword_256A49548, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  return (sub_23B7969F8() & 1) == 0;
}

uint64_t sub_23B76C33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 48) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23B76C358()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_254303288 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  __swift_project_value_buffer(v1, (uint64_t)qword_254309170);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B6EB000, v2, v3, "Framework trigger refreshClient since there's friendship expired", v4, 2u);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  v5 = *(_BYTE *)(v0 + 48);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254302D88);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = v6;
  *(_OWORD *)(v6 + 16) = xmmword_23B798110;
  *(_BYTE *)(v6 + 32) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  *v7 = v0;
  v7[1] = sub_23B76C48C;
  return sub_23B748AD0(v6);
}

uint64_t sub_23B76C48C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B76C520()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B76C554()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B76C56C()
{
  return sub_23B76C26C() & 1;
}

uint64_t sub_23B76C588()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B76C5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B6FD1B0;
  *(_BYTE *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 16) = v2;
  return swift_task_switch();
}

uint64_t sub_23B76C61C()
{
  return sub_23B79683C();
}

uint64_t sub_23B76C628(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(char *, char *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(char *, char *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_23B76C798((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_23B76C798((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x23B86C754](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_23B76C798(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t (*v30)(char *, char *);
  _QWORD *v31;
  char v32;

  v30 = a4;
  v25 = a2;
  v26 = a1;
  v6 = sub_23B7968A8();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v31 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v27 = 0;
  v28 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v29 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v17 = v16 | (v11 << 6);
LABEL_17:
    v21 = v31[7];
    v32 = *(_BYTE *)(v31[6] + v17);
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, v21 + *(_QWORD *)(v7 + 72) * v17, v6);
    v22 = v30(&v32, v10);
    if (v4)
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v23 = v22;
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v23 & 1) != 0)
    {
      *(unint64_t *)((char *)v26 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = __OFADD__(v27++, 1);
      if (v18)
        goto LABEL_30;
    }
  }
  v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v29)
    return sub_23B72186C(v26, v25, v27, v31);
  v19 = *(_QWORD *)(v28 + 8 * v11);
  if (v19)
  {
LABEL_16:
    v15 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_17;
  }
  v20 = v11 + 1;
  if (v11 + 1 >= v29)
    return sub_23B72186C(v26, v25, v27, v31);
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 2;
  if (v11 + 2 >= v29)
    return sub_23B72186C(v26, v25, v27, v31);
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 3;
  if (v11 + 3 >= v29)
    return sub_23B72186C(v26, v25, v27, v31);
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
  {
LABEL_15:
    v11 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v29)
      return sub_23B72186C(v26, v25, v27, v31);
    v19 = *(_QWORD *)(v28 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_23B76C9F4()
{
  return sub_23B76C2CC();
}

uint64_t sub_23B76C9FC(uint64_t a1, uint64_t (*a2)(_BYTE *, _BYTE *))
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t (*v27)(_BYTE *, _BYTE *);

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A49088);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v26 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v20 >= v26)
      goto LABEL_24;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_24;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
      {
        v11 = v20 + 2;
        if (v20 + 2 >= v26)
          goto LABEL_24;
        v21 = *(_QWORD *)(v25 + 8 * v11);
        if (!v21)
        {
          v11 = v20 + 3;
          if (v20 + 3 >= v26)
            goto LABEL_24;
          v21 = *(_QWORD *)(v25 + 8 * v11);
          if (!v21)
          {
            v22 = v20 + 4;
            if (v22 >= v26)
            {
LABEL_24:
              v23 = 0;
              goto LABEL_25;
            }
            v21 = *(_QWORD *)(v25 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_27;
                if (v11 >= v26)
                  goto LABEL_24;
                v21 = *(_QWORD *)(v25 + 8 * v11);
                ++v22;
                if (v21)
                  goto LABEL_22;
              }
            }
            v11 = v22;
          }
        }
      }
    }
LABEL_22:
    v9 = (v21 - 1) & v21;
    v13 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a1 + 56);
    v15 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v13);
    v16 = sub_23B7968A8();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = v14 + *(_QWORD *)(v17 + 72) * v13;
    v19 = &v5[*(int *)(v3 + 48)];
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(v19, v18, v16);
    *v5 = v15;
    LOBYTE(v19) = v27(v5, v19);
    result = sub_23B6F7190((uint64_t)v5, &qword_256A49088);
    if ((v19 & 1) != 0)
    {
      v23 = 1;
LABEL_25:
      swift_release();
      return v23;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t Session.addFence(_:)()
{
  return swift_task_switch();
}

unint64_t sub_23B76CC5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A49558;
  if (!qword_256A49558)
  {
    v1 = sub_23B796638();
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BE31810], v1);
    atomic_store(result, (unint64_t *)&qword_256A49558);
  }
  return result;
}

uint64_t Session.updateFence(_:)()
{
  return swift_task_switch();
}

uint64_t Session.deleteFence(id:)()
{
  return swift_task_switch();
}

uint64_t Session.fences()()
{
  return swift_task_switch();
}

uint64_t sub_23B76CCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23B796638();
  sub_23B76CC5C();
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v2, *MEMORY[0x24BE317F8], v1);
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.acceptFence(id:)()
{
  return swift_task_switch();
}

uint64_t Session.muteFences(for:untilDate:)()
{
  return swift_task_switch();
}

uint64_t Session.unmuteFences(for:)()
{
  return swift_task_switch();
}

uint64_t Session.triggerFence(id:position:)()
{
  return swift_task_switch();
}

uint64_t Session.fenceUpdateStream()()
{
  type metadata accessor for Fence.UpdateStream();
  return swift_allocObject();
}

uint64_t static LocalizationUtility.localizedString(key:table:)()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for BundleHelper();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_23B796788();

  swift_bridgeObjectRelease();
  return v2;
}

uint64_t type metadata accessor for BundleHelper()
{
  return objc_opt_self();
}

uint64_t sub_23B76CED8()
{
  return swift_deallocClassInstance();
}

BOOL static LocalizationUtility.Table.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LocalizationUtility.Table.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t LocalizationUtility.Table.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

unint64_t sub_23B76CF70()
{
  unint64_t result;

  result = qword_256A49598;
  if (!qword_256A49598)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocalizationUtility.Table, &type metadata for LocalizationUtility.Table);
    atomic_store(result, (unint64_t *)&qword_256A49598);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationUtility()
{
  return &type metadata for LocalizationUtility;
}

uint64_t storeEnumTagSinglePayload for LocalizationUtility.Table(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B76D010 + 4 * byte_23B79D105[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B76D044 + 4 * byte_23B79D100[v4]))();
}

uint64_t sub_23B76D044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76D04C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B76D054);
  return result;
}

uint64_t sub_23B76D060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B76D068);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B76D06C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B76D074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizationUtility.Table()
{
  return &type metadata for LocalizationUtility.Table;
}

uint64_t Fence.Schedule.Matcher.schedule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B76D09C(v1, a1);
}

uint64_t sub_23B76D09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Fence.Schedule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Fence.Schedule.Matcher.init(schedule:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v18 = a2;
  v19 = sub_23B79698C();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B796914();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B796974();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B76D09C(a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCEF70], v7);
  sub_23B796920();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15 = type metadata accessor for Fence.Schedule(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1 + *(int *)(v15 + 28), v19);
  sub_23B796968();
  sub_23B76D270(a1);
  v16 = type metadata accessor for Fence.Schedule.Matcher();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v18 + *(int *)(v16 + 20), v14, v11);
}

uint64_t sub_23B76D270(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Fence.Schedule(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Fence.Schedule.Matcher()
{
  uint64_t result;

  result = qword_256A495A0;
  if (!qword_256A495A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Fence.Schedule.Matcher.doesMatchSchedule(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v2 = sub_23B796938();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v34 - v10;
  v12 = sub_23B7968A8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v36 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v35 = (char *)&v34 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v34 = (char *)&v34 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v34 - v20;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCF070], v2);
  v37 = a1;
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v5, v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v22(v11, 1, v12) == 1)
  {
    v23 = (uint64_t)v11;
LABEL_5:
    sub_23B70C8AC(v23);
    v25 = 0;
    return v25 & 1;
  }
  v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v24(v21, v11, v12);
  sub_23B76D74C((uint64_t)v21, (uint64_t)v9);
  if (v22(v9, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
    v23 = (uint64_t)v9;
    goto LABEL_5;
  }
  v26 = v34;
  v24(v34, v9, v12);
  sub_23B76DB20();
  v27 = v37;
  v28 = sub_23B7969F8();
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v30 = v35;
  v29(v35, v27, v12);
  v31 = v36;
  v29(v36, (uint64_t)v26, v12);
  if ((v28 & 1) != 0)
    v25 = 0;
  else
    v25 = sub_23B7969F8() ^ 1;
  v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32(v31, v12);
  v32(v30, v12);
  v32(v26, v12);
  v32(v21, v12);
  return v25 & 1;
}

uint64_t Fence.Schedule.Matcher.nextStartDate(from:direction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v7 = sub_23B796938();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = *(_BYTE *)(v3 + 32);
  v11 = Fence.DaysOfWeek.gregorianCalendarWeekdays.getter();
  v17 = v3;
  v18 = a1;
  v19 = a2;
  v12 = sub_23B76E404((void (*)(_QWORD))sub_23B76E06C, (uint64_t)v16, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 88))(v10, v7);
  if (v13 == *MEMORY[0x24BDCF068])
  {
    sub_23B76E798(v12, a3);
    return swift_bridgeObjectRelease();
  }
  if (v13 == *MEMORY[0x24BDCF070])
  {
    sub_23B76EA60(v12, a3);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v15 = sub_23B7968A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23B76D74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = v2;
  v42 = a2;
  v43 = a1;
  v4 = sub_23B796944();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B796938();
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23B79692C();
  v46 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A495B8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A495C0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23B79677C();
  v38 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23B796974();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
  sub_23B76D09C(v3, (uint64_t)v13);
  v24 = &v13[*(int *)(v11 + 28)];
  v25 = sub_23B79698C();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v16, v24, v25);
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v16, 0, 1, v25);
  if ((*(_QWORD *)(v3 + 16) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((*(_QWORD *)(v3 + 24) & 0x8000000000000000) == 0)
  {
    sub_23B796770();
    type metadata accessor for Fence.Schedule.Matcher();
    v28 = *MEMORY[0x24BDCF020];
    v29 = v37;
    v36 = v20;
    v30 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 104))(v10, v28, v39);
    v32 = v40;
    v31 = v41;
    (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v8, *MEMORY[0x24BDCF068], v41);
    v34 = v44;
    v33 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v29, *MEMORY[0x24BDCF0B0], v45);
    sub_23B79695C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v33);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v31);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v22, v36);
  }
  __break(1u);
  return result;
}

unint64_t sub_23B76DB20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A49548;
  if (!qword_256A49548)
  {
    v1 = sub_23B7968A8();
    result = MEMORY[0x23B86C6B8](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_256A49548);
  }
  return result;
}

uint64_t Fence.Schedule.Matcher.nextStartOrEndDate(from:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;

  v35 = a2;
  v3 = sub_23B796938();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  v13 = sub_23B7968A8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v32 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - v17;
  v19 = *MEMORY[0x24BDCF070];
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v33(v6, v19, v3);
  v34 = a1;
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v6, v12);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v6, v3);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v21(v12, 1, v13) == 1)
  {
    sub_23B70C8AC((uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v35, 1, 1, v13);
  }
  v23 = v12;
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v24(v18, v23, v13);
  sub_23B76D74C((uint64_t)v18, (uint64_t)v10);
  if (v21(v10, 1, v13) == 1)
  {
    sub_23B70C8AC((uint64_t)v10);
    v26 = v34;
    v25 = v35;
LABEL_9:
    v33(v6, *MEMORY[0x24BDCF068], v3);
    Fence.Schedule.Matcher.nextStartDate(from:direction:)(v26, (uint64_t)v6, v25);
    v20(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }
  v31 = v20;
  v27 = v32;
  v24(v32, v10, v13);
  v26 = v34;
  v28 = sub_23B796848();
  v29 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25 = v35;
  if ((v28 & 1) == 0)
  {
    v29(v27, v13);
    v20 = v31;
    goto LABEL_9;
  }
  v29(v18, v13);
  v24(v25, v27, v13);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v13);
}

uint64_t Fence.Schedule.Matcher.previousStartDate(from:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_23B796938();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCF070], v4);
  Fence.Schedule.Matcher.nextStartDate(from:direction:)(a1, (uint64_t)v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Fence.DaysOfWeek.gregorianCalendarWeekdays.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *v0;
  v2 = sub_23B72DA58((uint64_t)&unk_250C926B0);
  v3 = v2;
  v17 = MEMORY[0x24BEE4B08];
  v4 = v2 + 64;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v10 << 6);
LABEL_24:
    if ((*(_BYTE *)(*(_QWORD *)(v3 + 48) + v12) & v1) != 0)
      result = sub_23B76EF18(&v16, *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v12));
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v13 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_23;
  v10 = v13 + 1;
  if (v13 + 1 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 2;
  if (v13 + 2 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 3;
  if (v13 + 3 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 4;
  if (v13 + 4 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_23:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_24;
  }
  v15 = v13 + 5;
  if (v15 >= v8)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return v17;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_26;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23B76E06C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B76E0A0(*a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23B76E0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = v4;
  v40 = a3;
  v38 = a2;
  v34 = a1;
  v36 = a4;
  v39 = sub_23B796944();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23B79692C();
  v8 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Fence.Schedule(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A495B8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A495C0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23B79677C();
  v32 = *(_QWORD *)(v20 - 8);
  v33 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23B796974();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
  sub_23B76D09C((uint64_t)v5, (uint64_t)v13);
  v24 = &v13[*(int *)(v11 + 28)];
  v25 = sub_23B79698C();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v16, v24, v25);
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v16, 0, 1, v25);
  if ((*v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((v5[1] & 0x8000000000000000) == 0)
  {
    sub_23B796770();
    type metadata accessor for Fence.Schedule.Matcher();
    v28 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCF020], v35);
    v29 = v37;
    v30 = v39;
    (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v7, *MEMORY[0x24BDCF0B0], v39);
    sub_23B79695C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v22, v33);
  }
  __break(1u);
  return result;
}

uint64_t sub_23B76E404(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t i;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD);
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = v3;
  v42 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B7968A8();
  v43 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v41 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v34 - v13;
  v14 = *(_QWORD *)(a3 + 56);
  v39 = a3 + 56;
  v15 = 1 << *(_BYTE *)(a3 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v40 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = MEMORY[0x24BEE4AF8];
  v37 = a1;
  v38 = a3;
  v36 = v10;
  if (v17)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v19++, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v19 >= v40)
    goto LABEL_33;
  v24 = *(_QWORD *)(v39 + 8 * v19);
  if (v24)
    goto LABEL_19;
  v25 = v19 + 1;
  if (v19 + 1 >= v40)
    goto LABEL_33;
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
  {
LABEL_18:
    v19 = v25;
LABEL_19:
    v17 = (v24 - 1) & v24;
    for (i = __clz(__rbit64(v24)) + (v19 << 6); ; i = v21 | (v19 << 6))
    {
      v44 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * i);
      a1(&v44);
      if (v4)
        break;
      v26 = a3;
      v27 = a1;
      v28 = v43;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v9, 1, v10) == 1)
      {
        result = sub_23B70C8AC((uint64_t)v9);
        a1 = v27;
        a3 = v26;
        v4 = 0;
        if (!v17)
          goto LABEL_7;
      }
      else
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
        v30 = v35;
        v29(v35, v9, v10);
        v29(v41, v30, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_23B70598C(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
        v4 = 0;
        v32 = *(_QWORD *)(v20 + 16);
        v31 = *(_QWORD *)(v20 + 24);
        if (v32 >= v31 >> 1)
          v20 = sub_23B70598C(v31 > 1, v32 + 1, 1, v20);
        *(_QWORD *)(v20 + 16) = v32 + 1;
        v33 = v20
            + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))
            + *(_QWORD *)(v43 + 72) * v32;
        v10 = v36;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(v33, v41, v36);
        a1 = v37;
        a3 = v38;
        if (!v17)
          goto LABEL_7;
      }
LABEL_6:
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v25 = v19 + 2;
  if (v19 + 2 >= v40)
  {
LABEL_33:
    swift_release();
    return v20;
  }
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v19 + 3;
  if (v19 + 3 >= v40)
    goto LABEL_33;
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v19 + 4;
  if (v19 + 4 >= v40)
    goto LABEL_33;
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
    goto LABEL_18;
  while (1)
  {
    v19 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v19 >= v40)
      goto LABEL_33;
    v24 = *(_QWORD *)(v39 + 8 * v19);
    ++v25;
    if (v24)
      goto LABEL_19;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23B76E798@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_23B7968A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v32 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v32(v9, a1 + v30, v10);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v34(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_23B70C8AC((uint64_t)v9);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v31 = a1;
  swift_bridgeObjectRetain();
  v20 = v17 - 1;
  v21 = v32;
  if (v20)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v31 + v33 + v30;
    while (1)
    {
      v21(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1)
        break;
      v19(v14, v7, v10);
      sub_23B76DB20();
      v27 = sub_23B7969F8();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v19(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_23B70C8AC((uint64_t)v7);
  v22 = v29;
  v19(v29, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_23B76EA60@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_23B7968A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v32 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v32(v9, a1 + v30, v10);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v34(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_23B70C8AC((uint64_t)v9);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v31 = a1;
  swift_bridgeObjectRetain();
  v20 = v17 - 1;
  v21 = v32;
  if (v20)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v31 + v33 + v30;
    while (1)
    {
      v21(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1)
        break;
      v19(v14, v7, v10);
      sub_23B76DB20();
      v27 = sub_23B7969F8();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v19(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_23B70C8AC((uint64_t)v7);
  v22 = v29;
  v19(v29, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t static Fence.Schedule.Matcher.matchingPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BDCF020];
  v3 = sub_23B79692C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23B76ED6C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_23B796F44();
  swift_bridgeObjectRetain();
  sub_23B796A64();
  v8 = sub_23B796F74();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23B796ECC() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23B796ECC() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23B76FDBC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23B76EF18(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_23B796F38();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_23B76FF54(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void *sub_23B76F010()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A495C8);
  v2 = *v0;
  v3 = sub_23B796CBC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B76F1C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A495B0);
  v2 = *v0;
  v3 = sub_23B796CBC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23B76F354()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A495C8);
  v3 = sub_23B796CC8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_23B796F44();
    swift_bridgeObjectRetain();
    sub_23B796A64();
    result = sub_23B796F74();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23B76F600()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A495B0);
  result = sub_23B796CC8();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_23B796F38();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23B76F860()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A495C8);
  v3 = sub_23B796CC8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_23B796F44();
      sub_23B796A64();
      result = sub_23B796F74();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23B76FB3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A495B0);
  result = sub_23B796CC8();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_23B796F38();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23B76FDBC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23B76F860();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23B76F010();
      goto LABEL_22;
    }
    sub_23B76F354();
  }
  v11 = *v4;
  sub_23B796F44();
  sub_23B796A64();
  result = sub_23B796F74();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_23B796ECC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_23B796EE4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_23B796ECC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_23B76FF54(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23B76FB3C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23B76F1C0();
      goto LABEL_14;
    }
    sub_23B76F600();
  }
  v8 = *v3;
  result = sub_23B796F38();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_23B796EE4();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

_QWORD *_s7MatcherVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23B79698C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 20);
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_23B796974();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t _s7MatcherVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  v5 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23B796974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t _s7MatcherVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23B796974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t _s7MatcherVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23B796974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t _s7MatcherVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23B796974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t _s7MatcherVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(type metadata accessor for Fence.Schedule(0) + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B79698C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23B796974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t _s7MatcherVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B770480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Fence.Schedule(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_23B796974();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s7MatcherVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B770500(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Fence.Schedule(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_23B796974();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23B77057C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Fence.Schedule(319);
  if (v1 <= 0x3F)
  {
    result = sub_23B796974();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

FindMyLocate::ClientSessionError __swiftcall ClientSessionError.init(type:)(FindMyLocate::ClientSessionError type)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)type.type;
  return type;
}

uint64_t Session.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = swift_allocObject();
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B770698;
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 80) = *(_BYTE *)a1;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v4 + 40) = *(_QWORD *)(a1 + 24);
  return swift_task_switch();
}

uint64_t sub_23B770698(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B7706E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v1 + 16));
}

uint64_t sub_23B770730()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B770794()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23B7707E8;
  return sub_23B6EF14C(0, 0);
}

uint64_t sub_23B7707E8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B77083C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_23B770890;
  return sub_23B6EEF1C(0, 0);
}

uint64_t sub_23B770890()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7708E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_23B770938;
  return sub_23B6EFF74(0, 0);
}

uint64_t sub_23B770938()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B77098C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = sub_23B796B84();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  v6[5] = v2;
  *(_QWORD *)(v3 + 48) = sub_23B742B50(v1, (uint64_t)&unk_256A49600, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Session.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (*(_QWORD *)(v0 + 48))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254303F80);
    sub_23B796BCC();
    swift_release();
  }
  if (qword_254302FC0 != -1)
    swift_once();
  v2 = sub_23B7969BC();
  __swift_project_value_buffer(v2, (uint64_t)qword_254309198);
  v3 = sub_23B7969A4();
  v4 = sub_23B796C38();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23B6EB000, v3, v4, "deinit", v5, 2u);
    MEMORY[0x23B86C754](v5, -1, -1);
  }

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Session.__deallocating_deinit()
{
  Session.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23B770BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a4;
  v5 = sub_23B796698();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254303F88);
  v4[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303F98);
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303F90);
  v4[14] = v7;
  v4[15] = *(_QWORD *)(v7 - 8);
  v4[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B770CAC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  sub_23B796BD8();
  v0[17] = 0;
  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B6EB000, v2, v3, "Registering listener for daemon ready Darwin notification", v4, 2u);
    MEMORY[0x23B86C754](v4, -1, -1);
  }

  sub_23B7966EC();
  v5 = (_QWORD *)swift_task_alloc();
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_23B770E44;
  return sub_23B7966E0();
}

uint64_t sub_23B770E44()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B770E98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  sub_23B796BA8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[20] = v0[17];
  v4 = (_QWORD *)swift_task_alloc();
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_23B770F54;
  return sub_23B796BB4();
}

uint64_t sub_23B770F54()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B770FA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  _QWORD *v23;
  uint64_t v24;

  v1 = v0[10];
  v2 = v0[6];
  v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
    goto LABEL_2;
  v5 = v0[20];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2);
  sub_23B796BD8();
  v0[22] = v5;
  if (v5)
  {
    v7 = v0[15];
    v6 = v0[16];
    v8 = v0[14];
    (*(void (**)(_QWORD, _QWORD))(v0[7] + 8))(v0[9], v0[6]);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  Strong = swift_weakLoadStrong();
  v0[23] = Strong;
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[7] + 8))(v0[9], v0[6]);
LABEL_2:
    (*(void (**)(_QWORD, _QWORD))(v0[15] + 8))(v0[16], v0[14]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  v11 = Strong;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[7] + 16))(v0[8], v0[9], v0[6]);
  v12 = sub_23B7969A4();
  v13 = sub_23B796C14();
  v14 = os_log_type_enabled(v12, v13);
  v16 = v0[7];
  v15 = v0[8];
  v17 = v0[6];
  if (v14)
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_23B6EE138(&qword_256A49610, (uint64_t (*)(uint64_t))MEMORY[0x24BE31900], MEMORY[0x24BE31910]);
    v20 = sub_23B796EB4();
    *(_QWORD *)(v18 + 4) = sub_23B6FB388(v20, v21, &v24);
    swift_bridgeObjectRelease();
    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
    _os_log_impl(&dword_23B6EB000, v12, v13, "Process daemon ready notification: %s", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v19, -1, -1);
    MEMORY[0x23B86C754](v18, -1, -1);
  }
  else
  {
    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v0[8], v0[6]);
  }

  v0[24] = v22;
  v23 = (_QWORD *)swift_task_alloc();
  v0[25] = v23;
  *v23 = v0;
  v23[1] = sub_23B7712A0;
  v23[3] = v11;
  return swift_task_switch();
}

uint64_t sub_23B7712A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7712F4()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void (*)(uint64_t, uint64_t))v0[24];
  v2 = v0[9];
  v3 = v0[6];
  swift_release();
  v1(v2, v3);
  v0[20] = v0[22];
  v4 = (_QWORD *)swift_task_alloc();
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_23B770F54;
  return sub_23B796BB4();
}

uint64_t sub_23B771380()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_23B771398()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (qword_254302FC0 != -1)
    swift_once();
  v1 = sub_23B7969BC();
  *(_QWORD *)(v0 + 32) = __swift_project_value_buffer(v1, (uint64_t)qword_254309198);
  v2 = sub_23B7969A4();
  v3 = sub_23B796C38();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B6EB000, v2, v3, "Received daemon ready notification, re-establishing connection...", v4, 2u);
    MEMORY[0x23B86C754](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 24);

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v5 + 40);
  *(_BYTE *)(v0 + 128) = *(_BYTE *)(v5 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v5 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v5 + 80);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23B7714B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 64);
  v7 = *(_OWORD *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 40);
  sub_23B6EE138((unint64_t *)&qword_254303FB8, (uint64_t (*)(uint64_t))_s14descr250C98631C18LocationConnectionCMa, (uint64_t)&unk_23B79B0A8);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = v2;
  *(_OWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 48) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_23B77159C;
  return sub_23B796ED8();
}

uint64_t sub_23B77159C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B771610()
{
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23B77164C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_23B771698;
  return sub_23B747D10();
}

uint64_t sub_23B771698()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7716FC()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B771740()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 88);
  v2 = v1;
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v8 = v1;
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v9;
    sub_23B796C68();
    *v7 = v9;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Error re-establishing service: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B7718BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_23B771908;
  return sub_23B7284A4();
}

uint64_t sub_23B771908()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B771974()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 104);
  v2 = v1;
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v8 = v1;
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v9;
    sub_23B796C68();
    *v7 = v9;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Error re-establishing service: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B771AF0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 120);
  v2 = v1;
  v3 = v1;
  v4 = sub_23B7969A4();
  v5 = sub_23B796C20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v8 = v1;
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v9;
    sub_23B796C68();
    *v7 = v9;

    _os_log_impl(&dword_23B6EB000, v4, v5, "Error re-establishing service: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(qword_254302770);
    swift_arrayDestroy();
    MEMORY[0x23B86C754](v7, -1, -1);
    MEMORY[0x23B86C754](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL static ClientSessionError.Category.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ClientSessionError.Category.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t ClientSessionError.Category.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t ClientSessionError.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23B771D24
                                                                     + 4 * asc_23B79D1E0[*v0]))(0xD00000000000001DLL, 0x800000023B7A19B0);
}

uint64_t sub_23B771D24@<X0>(uint64_t a1@<X8>)
{
  return a1 - 37;
}

uint64_t sub_23B771DD8(uint64_t a1)
{
  return sub_23B6FAE50(a1, qword_256A548B0);
}

uint64_t sub_23B771DFC(uint64_t a1)
{
  return sub_23B6FAE50(a1, qword_254308FC8);
}

uint64_t sub_23B771E20(uint64_t a1)
{
  return sub_23B6FAE50(a1, qword_256A548C8);
}

unint64_t sub_23B771E48()
{
  unint64_t result;

  result = qword_256A495E8;
  if (!qword_256A495E8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ClientSessionError.Category, &type metadata for ClientSessionError.Category);
    atomic_store(result, (unint64_t *)&qword_256A495E8);
  }
  return result;
}

uint64_t method lookup function for Session()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Session.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 128) + *(_QWORD *)(v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B772128;
  return v6(a1);
}

uint64_t _s12FindMyLocate18ClientSessionErrorV8CategoryOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12FindMyLocate18ClientSessionErrorV8CategoryOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23B771FDC + 4 * byte_23B79D1EF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23B772010 + 4 * byte_23B79D1EA[v4]))();
}

uint64_t sub_23B772010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B772018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B772020);
  return result;
}

uint64_t sub_23B77202C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B772034);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23B772038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B772040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B77204C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B772070()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B77209C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B6FD1B0;
  return sub_23B770BC0(a1, v4, v5, v6);
}

uint64_t sub_23B772114(uint64_t a1)
{
  uint64_t v1;

  return sub_23B713850(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t dispatch thunk of FriendshipProtocol.respondToInviteRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD140;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.friends(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A3D8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.friendshipState(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD140;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.offerExpiration(for:fromHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 40) + *(_QWORD *)(a5 + 40));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23B6FD140;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of FriendshipProtocol.offerExpiration(for:groupId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 48)
                                                                                     + *(_QWORD *)(a6 + 48));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23B6FD140;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of FriendshipProtocol.sendFriendshipOffer(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 56) + *(_QWORD *)(a4 + 56));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD140;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.sendFriendshipInvite(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 64) + *(_QWORD *)(a4 + 64));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD140;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.stopSharingMyLocation(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 72) + *(_QWORD *)(a4 + 72));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B6FD1B0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FriendshipProtocol.peerToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 80) + *(_QWORD *)(a3 + 80));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B70A3D8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.ownerToken()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 88) + *(_QWORD *)(a2 + 88));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B70A13C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipProtocol.startRanging(handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 96) + *(_QWORD *)(a3 + 96));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.startOwnerRanging()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 104) + *(_QWORD *)(a2 + 104));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipProtocol.stopRanging()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 112) + *(_QWORD *)(a2 + 112));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipProtocol.resetTokenDatabase()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 120) + *(_QWORD *)(a2 + 120));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipProtocol.removePeerToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 128) + *(_QWORD *)(a3 + 128));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.requestOwnerToken(force:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 136) + *(_QWORD *)(a3 + 136));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipProtocol.stopConfigRangingSession()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 144) + *(_QWORD *)(a2 + 144));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B6FD140;
  return v7(a1, a2);
}

uint64_t dispatch thunk of FriendshipServiceClientProtocol.updateFriends(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipServiceClientProtocol.didDiscover(nearbyObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FriendshipServiceClientProtocol.didUpdate(nearbyObject:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B6FD140;
  return v9(a1, a2, a3);
}

uint64_t LocationShiftingRequest.__allocating_init(location:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v12;

  v2 = sub_23B7968D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  v7 = sub_23B7968B4();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10 = (uint64_t *)(v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *v10 = v7;
  v10[1] = v9;
  sub_23B7274D0(a1, v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  return v6;
}

uint64_t LocationShiftingRequest.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B709DC4(v1 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location, a1);
}

uint64_t LocationShiftingRequest.__allocating_init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;

  v6 = swift_allocObject();
  sub_23B7274D0(a3, v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  v7 = (_QWORD *)(v6 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *v7 = a1;
  v7[1] = a2;
  return v6;
}

uint64_t LocationShiftingRequest.init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  sub_23B7274D0(a3, v3 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  v6 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *v6 = a1;
  v6[1] = a2;
  return v3;
}

uint64_t LocationShiftingRequest.init(location:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;

  v2 = v1;
  v4 = sub_23B7968D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  v8 = sub_23B7968B4();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_identifier);
  *v11 = v8;
  v11[1] = v10;
  sub_23B7274D0(a1, v2 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  return v2;
}

uint64_t LocationShiftingRequest.deinit()
{
  uint64_t v0;

  sub_23B709E08(v0 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LocationShiftingRequest.__deallocating_deinit()
{
  uint64_t v0;

  sub_23B709E08(v0 + OBJC_IVAR____TtC12FindMyLocate23LocationShiftingRequest_location);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23B772DC0()
{
  return type metadata accessor for LocationShiftingRequest();
}

uint64_t type metadata accessor for LocationShiftingRequest()
{
  uint64_t result;

  result = qword_256A496C0;
  if (!qword_256A496C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B772E04()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for LocationShiftingRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocationShiftingRequest.__allocating_init(identifier:location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of LocationShiftingRequest.__allocating_init(location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

FindMyLocate::LocalUserNotificationCategory_optional __swiftcall LocalUserNotificationCategory.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FindMyLocate::LocalUserNotificationCategory_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23B796DB8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

unint64_t LocalUserNotificationCategory.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000002DLL;
  else
    return 0xD000000000000016;
}

uint64_t sub_23B772F34(char *a1, char *a2)
{
  return sub_23B73E81C(*a1, *a2);
}

unint64_t sub_23B772F44()
{
  unint64_t result;

  result = qword_256A496D0;
  if (!qword_256A496D0)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocalUserNotificationCategory, &type metadata for LocalUserNotificationCategory);
    atomic_store(result, (unint64_t *)&qword_256A496D0);
  }
  return result;
}

uint64_t sub_23B772F88()
{
  return sub_23B77E7F4();
}

uint64_t sub_23B772F90()
{
  sub_23B796A64();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B772FF0()
{
  return sub_23B77EBA4();
}

FindMyLocate::LocalUserNotificationCategory_optional sub_23B772FF8(Swift::String *a1)
{
  return LocalUserNotificationCategory.init(rawValue:)(*a1);
}

void sub_23B773004(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000002DLL;
  else
    v2 = 0xD000000000000016;
  v3 = 0x800000023B79F910;
  if (*v1)
    v3 = 0x800000023B79F930;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23B773048()
{
  sub_23B7731BC();
  return sub_23B796AD0();
}

uint64_t sub_23B7730A4()
{
  sub_23B7731BC();
  return sub_23B796AB8();
}

uint64_t storeEnumTagSinglePayload for LocalUserNotificationCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B77313C + 4 * byte_23B79D3F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B773170 + 4 * byte_23B79D3F0[v4]))();
}

uint64_t sub_23B773170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B773178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B773180);
  return result;
}

uint64_t sub_23B77318C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B773194);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B773198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7731A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalUserNotificationCategory()
{
  return &type metadata for LocalUserNotificationCategory;
}

unint64_t sub_23B7731BC()
{
  unint64_t result;

  result = qword_256A496D8;
  if (!qword_256A496D8)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for LocalUserNotificationCategory, &type metadata for LocalUserNotificationCategory);
    atomic_store(result, (unint64_t *)&qword_256A496D8);
  }
  return result;
}

void PreferenceStreamChange.description.getter()
{
  __asm { BR              X16 }
}

uint64_t sub_23B773258()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 32) = 0x6369766544656D2ELL;
  *(_QWORD *)(v1 - 24) = 0xEA00000000002865;
  if (v0)
    Device.description.getter();
  sub_23B796A7C();
  swift_bridgeObjectRelease();
  sub_23B796A7C();
  return *(_QWORD *)(v1 - 32);
}

uint64_t sub_23B7733A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B7733DC + 4 * byte_23B79D524[*v0]))(0x696C616974696E69, 0xEB0000000064657ALL);
}

uint64_t sub_23B7733DC()
{
  return 0x656369766544656DLL;
}

uint64_t sub_23B7733F4()
{
  return 0x697461636F4C796DLL;
}

uint64_t sub_23B773410()
{
  return 0x6552646E65697266;
}

uint64_t sub_23B773434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B774C04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B773458()
{
  sub_23B773BEC();
  return sub_23B796FA4();
}

uint64_t sub_23B773480()
{
  sub_23B773BEC();
  return sub_23B796FB0();
}

uint64_t sub_23B7734A8()
{
  return 0x6465776F6C6C61;
}

uint64_t sub_23B7734C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6465776F6C6C61 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23B796ECC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23B773554()
{
  sub_23B773C30();
  return sub_23B796FA4();
}

uint64_t sub_23B77357C()
{
  sub_23B773C30();
  return sub_23B796FB0();
}

uint64_t sub_23B7735A4()
{
  sub_23B773CFC();
  return sub_23B796FA4();
}

uint64_t sub_23B7735CC()
{
  sub_23B773CFC();
  return sub_23B796FB0();
}

uint64_t sub_23B7735F4()
{
  return 0x656369766564;
}

uint64_t sub_23B773608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656369766564 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23B796ECC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23B773694()
{
  sub_23B773CB8();
  return sub_23B796FA4();
}

uint64_t sub_23B7736BC()
{
  sub_23B773CB8();
  return sub_23B796FB0();
}

uint64_t sub_23B7736E4()
{
  return 0x64656C62616E65;
}

uint64_t sub_23B7736FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23B796ECC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23B773790()
{
  sub_23B773C74();
  return sub_23B796FA4();
}

uint64_t sub_23B7737B8()
{
  sub_23B773C74();
  return sub_23B796FB0();
}

void PreferenceStreamChange.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302750);
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302730);
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v20 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302740);
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v18 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302748);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302738);
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v27 = *v1;
  v10 = v1[1];
  v16 = v1[2];
  v17 = v10;
  v15 = v1[3];
  v14 = v1[4];
  v13 = v1[5];
  v12[1] = *((_DWORD *)v1 + 12);
  v11 = *((unsigned __int8 *)v1 + 52);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B773BEC();
  sub_23B796F8C();
  __asm { BR              X9 }
}

uint64_t sub_23B7739DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 - 144) = 1;
  sub_23B773CB8();
  v2 = *(_QWORD *)(v1 - 240);
  v3 = *(_QWORD *)(v1 - 152);
  sub_23B796E48();
  v4 = *(_QWORD *)(v1 - 248);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v1 - 168);
  *(_QWORD *)(v1 - 136) = v4;
  v5 = *(_QWORD *)(v1 - 264);
  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v1 - 256);
  *(_QWORD *)(v1 - 120) = v5;
  v6 = *(_QWORD *)(v1 - 280);
  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v1 - 272);
  *(_QWORD *)(v1 - 104) = v6;
  *(_DWORD *)(v1 - 96) = *(_DWORD *)(v1 - 284);
  sub_23B763534();
  v7 = *(_QWORD *)(v1 - 216);
  sub_23B796E6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 232) + 8))(v2, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 160) + 8))(v0, v3);
}

unint64_t sub_23B773BEC()
{
  unint64_t result;

  result = qword_254302E80;
  if (!qword_254302E80)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79DAEC, &type metadata for PreferenceStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302E80);
  }
  return result;
}

unint64_t sub_23B773C30()
{
  unint64_t result;

  result = qword_254302D28;
  if (!qword_254302D28)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79DA9C, &type metadata for PreferenceStreamChange.FriendRequestsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302D28);
  }
  return result;
}

unint64_t sub_23B773C74()
{
  unint64_t result;

  result = qword_254302D18;
  if (!qword_254302D18)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79DA4C, &type metadata for PreferenceStreamChange.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302D18);
  }
  return result;
}

unint64_t sub_23B773CB8()
{
  unint64_t result;

  result = qword_254302D20;
  if (!qword_254302D20)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D9FC, &type metadata for PreferenceStreamChange.MeDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302D20);
  }
  return result;
}

unint64_t sub_23B773CFC()
{
  unint64_t result;

  result = qword_254302EA8;
  if (!qword_254302EA8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D9AC, &type metadata for PreferenceStreamChange.InitializedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EA8);
  }
  return result;
}

uint64_t PreferenceStreamChange.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v30 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302D10);
  v25 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v29 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302CF0);
  v26 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v28 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302D00);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302D08);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302CF8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23B773BEC();
  v14 = v32;
  sub_23B796F80();
  if (!v14)
  {
    v20[0] = v8;
    v20[1] = v7;
    v20[2] = 0;
    v32 = v10;
    v15 = sub_23B796E3C();
    if (*(_QWORD *)(v15 + 16) == 1)
      __asm { BR              X10 }
    v16 = sub_23B796D04();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A47FA0);
    *v18 = &type metadata for PreferenceStreamChange;
    sub_23B796DD0();
    sub_23B796CF8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_23B7743C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PreferenceStreamChange.init(from:)(a1, a2);
}

void sub_23B7743D4(_QWORD *a1)
{
  PreferenceStreamChange.encode(to:)(a1);
}

uint64_t destroy for PreferenceStreamChange(uint64_t a1)
{
  return sub_23B7295F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 48), *(_BYTE *)(a1 + 52));
}

uint64_t initializeWithCopy for PreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned int *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 52);
  sub_23B7295E0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 52) = v10;
  return a1;
}

uint64_t assignWithCopy for PreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned int *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 52);
  sub_23B7295E0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(unsigned int *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 48) = v9;
  v18 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v10;
  sub_23B7295F0(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for PreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  v3 = *(_DWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 52);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(unsigned int *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = v3;
  v13 = *(_BYTE *)(a1 + 52);
  *(_BYTE *)(a1 + 52) = v4;
  sub_23B7295F0(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreferenceStreamChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 53))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 52);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PreferenceStreamChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 53) = 0;
    if (a2)
      *(_BYTE *)(result + 52) = -(char)a2;
  }
  return result;
}

uint64_t sub_23B774638(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 52) <= 2u)
    return *(unsigned __int8 *)(a1 + 52);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23B774650(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 36) = 0u;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 52) = a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for PreferenceStreamChange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B7746C4 + 4 * byte_23B79D535[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B7746F8 + 4 * byte_23B79D530[v4]))();
}

uint64_t sub_23B7746F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B774700(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B774708);
  return result;
}

uint64_t sub_23B774714(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B77471CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B774720(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B774728(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.CodingKeys()
{
  return &type metadata for PreferenceStreamChange.CodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.InitializedCodingKeys()
{
  return &type metadata for PreferenceStreamChange.InitializedCodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.MeDeviceCodingKeys()
{
  return &type metadata for PreferenceStreamChange.MeDeviceCodingKeys;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.MyLocationCodingKeys()
{
  return &type metadata for PreferenceStreamChange.MyLocationCodingKeys;
}

uint64_t _s12FindMyLocate22PreferenceStreamChangeO18MeDeviceCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23B7747B8 + 4 * byte_23B79D53A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23B7747D8 + 4 * byte_23B79D53F[v4]))();
}

_BYTE *sub_23B7747B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23B7747D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B7747E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B7747E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B7747F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B7747F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PreferenceStreamChange.FriendRequestsCodingKeys()
{
  return &type metadata for PreferenceStreamChange.FriendRequestsCodingKeys;
}

unint64_t sub_23B774818()
{
  unint64_t result;

  result = qword_256A496E0;
  if (!qword_256A496E0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D70C, &type metadata for PreferenceStreamChange.FriendRequestsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A496E0);
  }
  return result;
}

unint64_t sub_23B774860()
{
  unint64_t result;

  result = qword_256A496E8;
  if (!qword_256A496E8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D7C4, &type metadata for PreferenceStreamChange.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A496E8);
  }
  return result;
}

unint64_t sub_23B7748A8()
{
  unint64_t result;

  result = qword_256A496F0;
  if (!qword_256A496F0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D87C, &type metadata for PreferenceStreamChange.MeDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A496F0);
  }
  return result;
}

unint64_t sub_23B7748F0()
{
  unint64_t result;

  result = qword_256A496F8;
  if (!qword_256A496F8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D984, &type metadata for PreferenceStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A496F8);
  }
  return result;
}

unint64_t sub_23B774938()
{
  unint64_t result;

  result = qword_254302EB8;
  if (!qword_254302EB8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D8A4, &type metadata for PreferenceStreamChange.InitializedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EB8);
  }
  return result;
}

unint64_t sub_23B774980()
{
  unint64_t result;

  result = qword_254302EB0;
  if (!qword_254302EB0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D8CC, &type metadata for PreferenceStreamChange.InitializedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EB0);
  }
  return result;
}

unint64_t sub_23B7749C8()
{
  unint64_t result;

  result = qword_254302EA0;
  if (!qword_254302EA0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D7EC, &type metadata for PreferenceStreamChange.MeDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EA0);
  }
  return result;
}

unint64_t sub_23B774A10()
{
  unint64_t result;

  result = qword_254302E98;
  if (!qword_254302E98)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D814, &type metadata for PreferenceStreamChange.MeDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302E98);
  }
  return result;
}

unint64_t sub_23B774A58()
{
  unint64_t result;

  result = qword_254302E78;
  if (!qword_254302E78)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D734, &type metadata for PreferenceStreamChange.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302E78);
  }
  return result;
}

unint64_t sub_23B774AA0()
{
  unint64_t result;

  result = qword_254302E70;
  if (!qword_254302E70)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D75C, &type metadata for PreferenceStreamChange.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302E70);
  }
  return result;
}

unint64_t sub_23B774AE8()
{
  unint64_t result;

  result = qword_254302EC8;
  if (!qword_254302EC8)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D67C, &type metadata for PreferenceStreamChange.FriendRequestsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EC8);
  }
  return result;
}

unint64_t sub_23B774B30()
{
  unint64_t result;

  result = qword_254302EC0;
  if (!qword_254302EC0)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D6A4, &type metadata for PreferenceStreamChange.FriendRequestsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302EC0);
  }
  return result;
}

unint64_t sub_23B774B78()
{
  unint64_t result;

  result = qword_254302E90;
  if (!qword_254302E90)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D8F4, &type metadata for PreferenceStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302E90);
  }
  return result;
}

unint64_t sub_23B774BC0()
{
  unint64_t result;

  result = qword_254302E88;
  if (!qword_254302E88)
  {
    result = MEMORY[0x23B86C6B8](&unk_23B79D91C, &type metadata for PreferenceStreamChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254302E88);
  }
  return result;
}

uint64_t sub_23B774C04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696C616974696E69 && a2 == 0xEB0000000064657ALL;
  if (v2 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656369766544656DLL && a2 == 0xE800000000000000 || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697461636F4C796DLL && a2 == 0xEA00000000006E6FLL || (sub_23B796ECC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6552646E65697266 && a2 == 0xEE00737473657571)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B796ECC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t static Date.trustedNow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _BYTE v14[16];
  _BYTE v15[24];
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((MEMORY[0x23B86B974](v3) & 1) != 0)
  {
    if (qword_256A47F20 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v2, (uint64_t)qword_256A49700);
    swift_beginAccess();
    sub_23B6F7090(v6, (uint64_t)v5);
    v7 = sub_23B7968A8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
      return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(a1, v5, v7);
    sub_23B6F7190((uint64_t)v5, &qword_254302B18);
  }
  else
  {
    sub_23B796710();
    if (v16)
    {
      if ((swift_dynamicCast() & 1) != 0 && v14[15] == 1)
        return sub_23B796998();
    }
    else
    {
      sub_23B6F7190((uint64_t)v15, &qword_254302C70);
    }
    if (qword_254302488 != -1)
      swift_once();
    v10 = sub_23B7969BC();
    __swift_project_value_buffer(v10, (uint64_t)qword_254308FB0);
    v11 = sub_23B7969A4();
    v12 = sub_23B796C14();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23B6EB000, v11, v12, "Queried trustedNow but falling back to normal Date()", v13, 2u);
      MEMORY[0x23B86C754](v13, -1, -1);
    }

  }
  return sub_23B79689C();
}

uint64_t sub_23B775058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
  __swift_allocate_value_buffer(v0, qword_256A49700);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256A49700);
  v2 = sub_23B7968A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static Date.testSetNow(date:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((MEMORY[0x23B86B974]() & 1) != 0)
  {
    if (qword_256A47F20 != -1)
      swift_once();
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302B18);
    v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256A49700);
    swift_beginAccess();
    sub_23B735A1C(a1, v3);
    return swift_endAccess();
  }
  else
  {
    result = sub_23B796D70();
    __break(1u);
  }
  return result;
}

uint64_t sub_23B7751A0()
{
  uint64_t v0;

  v0 = sub_23B7969BC();
  __swift_allocate_value_buffer(v0, qword_254308FB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_254308FB0);
  return sub_23B7969B0();
}

uint64_t sub_23B77520C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23B796B84();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23B796B78();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23B6F7190(a1, &qword_254302FD8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B796B48();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23B775358()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254303000);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B7968F0();
  v3 = sub_23B796908();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  type metadata accessor for ReverseGeocoder(0);
  v4 = swift_allocObject();
  result = ReverseGeocoder.init(preferredLocale:)((uint64_t)v2);
  qword_254303FA8 = v4;
  return result;
}

uint64_t ReverseGeocoder.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ReverseGeocoder.init(preferredLocale:)(a1);
  return v2;
}

uint64_t static ReverseGeocoder.shared.getter()
{
  if (qword_254303FB0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static ReverseGeocoder.shared.setter(uint64_t a1)
{
  if (qword_254303FB0 != -1)
    swift_once();
  swift_beginAccess();
  qword_254303FA8 = a1;
  return swift_release();
}

uint64_t (*static ReverseGeocoder.shared.modify())()
{
  if (qword_254303FB0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL static ReverseGeocoder.ReverseGeocodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ReverseGeocoder.ReverseGeocodingError.hash(into:)()
{
  return sub_23B796F50();
}

uint64_t ReverseGeocoder.ReverseGeocodingError.hashValue.getter()
{
  sub_23B796F44();
  sub_23B796F50();
  return sub_23B796F74();
}

uint64_t ReverseGeocoder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_workItemQueue);
  v5 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  swift_retain();
  sub_23B77520C((uint64_t)v3, (uint64_t)&unk_256A49720, (uint64_t)v6);
  swift_release();
  v7 = v0 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_startDate;
  v8 = sub_23B7968A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B6F7190(v0 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_locale, &qword_254303000);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ReverseGeocoder.__deallocating_deinit()
{
  ReverseGeocoder.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B775768(uint64_t a1, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 40) = type metadata accessor for ReverseGeocodingRequest();
  *(_QWORD *)(v5 + 48) = swift_task_alloc();
  *(_QWORD *)(v5 + 56) = type metadata accessor for Location();
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  v7 = swift_task_alloc();
  v8 = *a2;
  v9 = a2[1];
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = v8;
  *(_QWORD *)(v5 + 88) = v9;
  return swift_task_switch();
}

uint64_t sub_23B775814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  BOOL v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(double *)(v2 + *(int *)(v1 + 32));
  v4 = v3 >= 200.0 || v3 < 0.0;
  v5 = *(unsigned __int8 *)(v2 + *(int *)(v1 + 60));
  sub_23B725660(v2, *(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for Location);
  v6 = *(_QWORD *)(v0 + 72);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(unsigned __int8 *)(v6 + *(int *)(v7 + 64));
    sub_23B725660(v6, *(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v9 = *(_QWORD *)(v0 + 64);
    v10 = v8 != 1 && *(_BYTE *)(v9 + *(int *)(v7 + 64)) != 2;
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_BYTE *)(v0 + 120);
    sub_23B700B04(v9, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    sub_23B700B04(v13, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    v12 = 1;
    if ((v14 & 1) == 0 && !v10)
      goto LABEL_12;
  }
  else
  {
    v11 = *(_BYTE *)(v0 + 120);
    sub_23B700B04(v6, (uint64_t (*)(_QWORD))type metadata accessor for Location);
    if ((v11 & 1) == 0)
    {
LABEL_12:
      v12 = v4;
      goto LABEL_13;
    }
    v12 = 1;
  }
LABEL_13:
  v16 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 88);
  v18 = *(int **)(v0 + 40);
  v17 = *(_QWORD **)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 32);
  sub_23B725660(*(_QWORD *)(v0 + 24), (uint64_t)v17 + v18[5], (uint64_t (*)(_QWORD))type metadata accessor for Location);
  sub_23B6F1360(v19 + OBJC_IVAR____TtC12FindMyLocate15ReverseGeocoder_locale, (uint64_t)v17 + v18[6]);
  *v17 = v16;
  v17[1] = v15;
  *((_BYTE *)v17 + v18[7]) = v12;
  sub_23B73BD14();
  v20 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v20;
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = v17;
  swift_bridgeObjectRetain();
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v21;
  *v21 = v0;
  v21[1] = sub_23B7759EC;
  return sub_23B796ED8();
}

uint64_t sub_23B7759EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B775A60()
{
  uint64_t v0;

  sub_23B700B04(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B775AC4()
{
  uint64_t v0;

  sub_23B700B04(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B775B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReverseGeocodingRequest();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254302FD8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B796B84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_23B725660(a3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v23, v5);
  v17 = sub_23B73BD14();
  v18 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = (v11 + *(unsigned __int8 *)(v6 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = a2;
  *((_QWORD *)v20 + 3) = v17;
  *((_QWORD *)v20 + 4) = a2;
  sub_23B777FFC((uint64_t)v12, (uint64_t)&v20[v18]);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v20[v19], v8, v5);
  swift_retain_n();
  sub_23B77520C((uint64_t)v15, (uint64_t)&unk_256A49768, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_23B775CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_23B7968D8();
  v6[5] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
  v6[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[7] = v8;
  v6[8] = *(_QWORD *)(v8 + 64);
  v6[9] = swift_task_alloc();
  v9 = *(_QWORD *)(type metadata accessor for ReverseGeocodingRequest() - 8);
  v6[10] = v9;
  v6[11] = *(_QWORD *)(v9 + 64);
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B775DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 16);
  sub_23B796650();
  sub_23B725660(v8, v1, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodingRequest);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = (v2 + *(unsigned __int8 *)(v5 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v9;
  sub_23B777FFC(v1, v12 + v10);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v4, v6);
  swift_retain();
  _s12FindMyLocate5FenceV2IDVAEycfC_0();
  sub_23B796644();
  sub_23B796668();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B775F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[209] = a3;
  v3[208] = a2;
  v3[207] = a1;
  return swift_task_switch();
}

uint64_t sub_23B775F38()
{
  uint64_t v0;

  sub_23B73A3F4(*(uint64_t **)(v0 + 1664), v0 + 560);
  return swift_task_switch();
}

uint64_t sub_23B775F7C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23B6FC8F4(v0 + 560, v0 + 288, &qword_256A48B28);
  sub_23B6FC8F4(v0 + 288, v0 + 16, &qword_256A48B28);
  if (sub_23B73C57C(v0 + 16) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1680) = v1;
    *v1 = v0;
    v1[1] = sub_23B776068;
    return sub_23B738A94(v0 + 832, *(_QWORD *)(v0 + 1664));
  }
  else
  {
    memcpy((void *)(v0 + 1104), (const void *)(v0 + 16), 0x110uLL);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
    sub_23B796B60();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B776068()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1688) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B7760CC()
{
  uint64_t (**v0)(void);

  memcpy(v0 + 172, v0 + 104, 0x110uLL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
  sub_23B796B60();
  return v0[1]();
}

uint64_t sub_23B776128()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1648) = *(_QWORD *)(v0 + 1688);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A48AB0);
  sub_23B796B54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B77617C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  *(_QWORD *)(v4 + 192) = v3;
  v7 = a2[9];
  *(_OWORD *)(v4 + 144) = a2[8];
  *(_OWORD *)(v4 + 160) = v7;
  *(_OWORD *)(v4 + 176) = a2[10];
  v8 = a2[5];
  *(_OWORD *)(v4 + 80) = a2[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a2[7];
  *(_OWORD *)(v4 + 112) = a2[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a2[1];
  *(_OWORD *)(v4 + 16) = *a2;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a2[3];
  *(_OWORD *)(v4 + 48) = a2[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 200) = v12;
  *v12 = v4;
  v12[1] = sub_23B77621C;
  return sub_23B775768(a1, (uint64_t *)(v4 + 16), a3, 0);
}

uint64_t sub_23B77621C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 208) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B776288()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ReverseGeocoder.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B7762A0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B776304;
  return v6(a1);
}

uint64_t sub_23B776304()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B776350()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B77637C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B6FD140;
  v4 = (uint64_t (*)(void))((int)*MEMORY[0x24BE31840] + MEMORY[0x24BE31840]);
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23B6FD140;
  return v4();
}

uint64_t sub_23B7763FC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B775B28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_23B776408()
{
  unint64_t result;

  result = qword_256A49738;
  if (!qword_256A49738)
  {
    result = MEMORY[0x23B86C6B8](&protocol conformance descriptor for ReverseGeocoder.ReverseGeocodingError, &type metadata for ReverseGeocoder.ReverseGeocodingError);
    atomic_store(result, (unint64_t *)&qword_256A49738);
  }
  return result;
}

uint64_t sub_23B77644C()
{
  return type metadata accessor for ReverseGeocoder(0);
}

uint64_t method lookup function for ReverseGeocoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReverseGeocoder.__allocating_init(preferredLocale:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ReverseGeocoder.reverseGeocode(for:location:onlyNeedCoarseAddress:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 256)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 256));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23B6FD1B0;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ReverseGeocoder.reverseGeocode(for:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 264)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 264));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23B6FD140;
  return v10(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ReverseGeocoder.ReverseGeocodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B7765C0 + 4 * byte_23B79DB65[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B7765F4 + 4 * byte_23B79DB60[v4]))();
}

uint64_t sub_23B7765F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B7765FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B776604);
  return result;
}

uint64_t sub_23B776610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B776618);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B77661C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B776624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReverseGeocoder.ReverseGeocodingError()
{
  return &type metadata for ReverseGeocoder.ReverseGeocodingError;
}

uint64_t *sub_23B776640(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    v25 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A48358);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = (int *)type metadata accessor for Location();
    v14 = v13[5];
    v15 = &v10[v14];
    v16 = &v11[v14];
    v17 = *((_QWORD *)v16 + 1);
    v63 = a1;
    if (v17 == 1)
    {
      v18 = *((_OWORD *)v16 + 9);
      *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
      *((_OWORD *)v15 + 9) = v18;
      v19 = *((_OWORD *)v16 + 11);
      *((_OWORD *)v15 + 10) = *((_OWORD *)v16 + 10);
      *((_OWORD *)v15 + 11) = v19;
      v20 = *((_OWORD *)v16 + 5);
      *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
      *((_OWORD *)v15 + 5) = v20;
      v21 = *((_OWORD *)v16 + 7);
      *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
      *((_OWORD *)v15 + 7) = v21;
      v22 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v22;
      v23 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v23;
    }
    else
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v17;
      v26 = *((_QWORD *)v16 + 3);
      *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
      *((_QWORD *)v15 + 3) = v26;
      v27 = *((_QWORD *)v16 + 5);
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      *((_QWORD *)v15 + 5) = v27;
      v28 = *((_QWORD *)v16 + 7);
      *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
      *((_QWORD *)v15 + 7) = v28;
      v29 = *((_QWORD *)v16 + 9);
      *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
      *((_QWORD *)v15 + 9) = v29;
      v30 = *((_QWORD *)v16 + 11);
      *((_QWORD *)v15 + 10) = *((_QWORD *)v16 + 10);
      *((_QWORD *)v15 + 11) = v30;
      v62 = *((_QWORD *)v16 + 13);
      *((_QWORD *)v15 + 12) = *((_QWORD *)v16 + 12);
      *((_QWORD *)v15 + 13) = v62;
      v31 = *((_QWORD *)v16 + 15);
      *((_QWORD *)v15 + 14) = *((_QWORD *)v16 + 14);
      *((_QWORD *)v15 + 15) = v31;
      v32 = *((_QWORD *)v16 + 17);
      *((_QWORD *)v15 + 16) = *((_QWORD *)v16 + 16);
      *((_QWORD *)v15 + 17) = v32;
      v33 = *((_QWORD *)v16 + 19);
      *((_QWORD *)v15 + 18) = *((_QWORD *)v16 + 18);
      *((_QWORD *)v15 + 19) = v33;
      v34 = *((_QWORD *)v16 + 21);
      *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
      *((_QWORD *)v15 + 21) = v34;
      v61 = *((_QWORD *)v16 + 23);
      *((_QWORD *)v15 + 22) = *((_QWORD *)v16 + 22);
      *((_QWORD *)v15 + 23) = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)&v10[v13[6]] = *(_QWORD *)&v11[v13[6]];
    *(_QWORD *)&v10[v13[7]] = *(_QWORD *)&v11[v13[7]];
    *(_QWORD *)&v10[v13[8]] = *(_QWORD *)&v11[v13[8]];
    *(_QWORD *)&v10[v13[9]] = *(_QWORD *)&v11[v13[9]];
    *(_QWORD *)&v10[v13[10]] = *(_QWORD *)&v11[v13[10]];
    *(_QWORD *)&v10[v13[11]] = *(_QWORD *)&v11[v13[11]];
    *(_QWORD *)&v10[v13[12]] = *(_QWORD *)&v11[v13[12]];
    *(_QWORD *)&v10[v13[13]] = *(_QWORD *)&v11[v13[13]];
    *(_QWORD *)&v10[v13[14]] = *(_QWORD *)&v11[v13[14]];
    v10[v13[15]] = v11[v13[15]];
    v10[v13[16]] = v11[v13[16]];
    v35 = a3[7];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = sub_23B7968A8();
    v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
    swift_bridgeObjectRetain();
    v39(v36, v37, v38);
    v40 = a3[8];
    v41 = (uint64_t *)((char *)a1 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = v42[3];
    v41[2] = v42[2];
    v41[3] = v44;
    v45 = v42[5];
    v41[4] = v42[4];
    v41[5] = v45;
    v46 = v42[7];
    v41[6] = v42[6];
    v41[7] = v46;
    v47 = v42[9];
    v41[8] = v42[8];
    v41[9] = v47;
    v48 = v42[11];
    v41[10] = v42[10];
    v41[11] = v48;
    v49 = v42[13];
    v41[12] = v42[12];
    v41[13] = v49;
    v50 = v42[15];
    v41[14] = v42[14];
    v41[15] = v50;
    v51 = v42[17];
    v41[16] = v42[16];
    v41[17] = v51;
    v52 = v42[19];
    v41[18] = v42[18];
    v41[19] = v52;
    v53 = v42[21];
    v41[20] = v42[20];
    v41[21] = v53;
    v54 = v42[23];
    v41[22] = v42[22];
    v41[23] = v54;
    v55 = v42[25];
    v41[24] = v42[24];
    v41[25] = v55;
    v56 = v42[27];
    v41[26] = v42[26];
    v41[27] = v56;
    v57 = v42[29];
    v41[28] = v42[28];
    v41[29] = v57;
    v58 = v42[31];
    v41[30] = v42[30];
    v41[31] = v58;
    v60 = v42[33];
    v41[32] = v42[32];
    v41[33] = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v25;
}

