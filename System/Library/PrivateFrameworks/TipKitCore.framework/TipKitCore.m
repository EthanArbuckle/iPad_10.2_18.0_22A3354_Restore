uint64_t _s8SubrulesVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489B482C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_2489BFEF4();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2489BFEF4() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2489B48D8()
{
  uint64_t v0;

  v0 = type metadata accessor for logger();
  sub_2489C93CC(v0, qword_254464210);
  *(_BYTE *)sub_2489C401C(v0, (uint64_t)qword_254464210) = 5;
  if (qword_2544649A0 != -1)
    swift_once();
  return sub_248A45018();
}

void sub_2489B49C4()
{
  if (qword_254464B20 != -1)
    swift_once();
  sub_2489C33B0();
  sub_2489BBC94();
  sub_2489C0870();
  swift_bridgeObjectRelease();
  sub_2489B6B20();
  sub_2489BA428();
}

uint64_t sub_2489B4A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  void *v11;
  void *v12;
  _BYTE v14[56];

  v0 = sub_248A44F58();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_254464E68 != -1)
    swift_once();
  if (byte_254464E60 != 1)
    return 2;
  if (qword_2544641F8 != -1)
    swift_once();
  v5 = sub_2489C330C(&qword_254464200);
  v6 = sub_2489C401C(v5, (uint64_t)qword_25446C698);
  sub_2489BD8B0();
  v7 = type metadata accessor for DeviceProfile();
  if (sub_2489C06F0(v7))
    return 2;
  if (*(_BYTE *)(v6 + 2) != 2)
    return 2;
  sub_2489C190C();
  v8 = v14[50];
  swift_bridgeObjectRelease();
  if (v8 != 1)
    return 2;
  sub_2489C190C();
  v9 = v14[51];
  swift_bridgeObjectRelease();
  if (v9 != 1)
    return 2;
  sub_248A09238();
  if (v10 == 1)
  {
    CoreTip.constellationContent.getter();
    v12 = v11;

    if (v12)
    {
      _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
      sub_248A10E2C();
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
    }
  }
  return 1;
}

uint64_t sub_2489B4BE0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_systemLanguages);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_248A4569C();

  return v3;
}

_QWORD *_s8SubrulesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489B4C74(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

void static URL.defaultDatastore.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;

  v83 = a1;
  v1 = sub_248A44DFC();
  v80 = *(_QWORD *)(v1 - 8);
  v81 = v1;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489BBC7C();
  v79 = v5 - v4;
  v85 = sub_248A44EB0();
  v82 = *(_QWORD *)(v85 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489BFA18();
  v77 = v8;
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v9, v10);
  v73 = (char *)&v73 - v11;
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v12, v13);
  v75 = (uint64_t)&v73 - v14;
  v84 = sub_2489C330C(&qword_254463FF0);
  sub_2489BA7E0();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v76 = (uint64_t)&v73 - v21;
  sub_2489C330C(&qword_254464D40);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_2489BFA18();
  v78 = v24;
  sub_2489C0634();
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v29 = (char *)&v73 - v28;
  v31 = MEMORY[0x24BDAC7A8](v27, v30);
  v33 = (char *)&v73 - v32;
  MEMORY[0x24BDAC7A8](v31, v34);
  v74 = (uint64_t)&v73 - v35;
  sub_2489C0634();
  v38 = MEMORY[0x24BDAC7A8](v36, v37);
  v40 = (char *)&v73 - v39;
  MEMORY[0x24BDAC7A8](v38, v41);
  v43 = (char *)&v73 - v42;
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  v44 = qword_254464F18;
  v45 = qword_2544649A0;
  sub_2489BA7EC();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  if (v45 != -1)
    swift_once();
  if (word_254464998 == 3)
  {
    if (qword_254464E68 != -1)
      swift_once();
    v46 = byte_254464E60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v46 & 1) == 0)
    {
      sub_248A44E20();
      sub_2489BFF90((uint64_t)v43);
      static URL.cachesDirectoryForCurrentUser.getter((uint64_t)v40);
      v47 = v76;
      v48 = v76 + *(int *)(v84 + 48);
      sub_2489BE840((uint64_t)v43, v76);
      sub_2489BE840((uint64_t)v40, v48);
      sub_2489C3978(v47);
      if (v59)
      {
        sub_2489C14A8((uint64_t)v40);
        sub_2489C14A8((uint64_t)v43);
        sub_2489C3978(v48);
        if (v59)
        {
          sub_2489C32D0(v47, &qword_254464D40);
LABEL_37:
          v55 = (uint64_t)v73;
          sub_248A44E20();
          if (qword_254464F38)
          {
            v63 = qword_254464F30;
            v64 = qword_254464F38;
          }
          else
          {
            if (qword_254464F80 != -1)
              swift_once();
            v44 = qword_25446C6D8;
            if (qword_25446C6D8)
            {
              v63 = qword_25446C6D0;
              v64 = qword_25446C6D8;
            }
            else
            {
              type metadata accessor for CFBundle(0);
              v69 = sub_2489D7B5C();
              if (v70)
              {
                v63 = v69;
                v64 = v70;
              }
              else
              {
                v63 = 0;
                v64 = 0xE000000000000000;
              }
            }
            sub_2489BA7EC();
          }
          v86 = v63;
          v87 = v64;
          v72 = v79;
          v71 = v80;
          sub_2489C0998(v79, *MEMORY[0x24BDCD790], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v80 + 104));
          sub_2489C9788();
          sub_2489C6C84();
          sub_2489C0348();
          (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v72, v44);
LABEL_54:
          swift_bridgeObjectRelease();
          sub_2489C07C4(v55, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
          goto LABEL_55;
        }
      }
      else
      {
        v58 = v74;
        sub_2489BE840(v47, v74);
        sub_2489C3978(v48);
        if (!v59)
        {
          v60 = v82;
          v61 = v75;
          sub_2489BF77C(v75, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 32));
          sub_2489CB720();
          v62 = sub_2489BF5B8();
          v44 = *(_QWORD *)(v60 + 8);
          sub_2489C1A6C(v61);
          sub_2489C14A8((uint64_t)v40);
          sub_2489C14A8((uint64_t)v43);
          sub_2489C1A6C(v58);
          sub_2489C14A8(v47);
          if ((v62 & 1) != 0)
            goto LABEL_37;
          goto LABEL_39;
        }
        sub_2489C267C((uint64_t)v40);
        sub_2489C267C((uint64_t)v43);
        sub_2489C07C4(v58, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
      }
      sub_2489C32D0(v47, &qword_254463FF0);
LABEL_39:
      sub_248A44E20();
      goto LABEL_55;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_248A44E50();
  sub_2489BFF90((uint64_t)v33);
  static URL.applicationSupportDirectoryForCurrentUser.getter((uint64_t)v29);
  v49 = (uint64_t)&v19[*(int *)(v84 + 48)];
  sub_2489BE840((uint64_t)v33, (uint64_t)v19);
  sub_2489BE840((uint64_t)v29, v49);
  sub_2489C3978((uint64_t)v19);
  if (v59)
  {
    sub_2489C14A8((uint64_t)v29);
    sub_2489C14A8((uint64_t)v33);
    sub_2489C3978(v49);
    if (v59)
    {
      sub_2489C32D0((uint64_t)v19, &qword_254464D40);
LABEL_25:
      v55 = v77;
      sub_248A44E50();
      if (qword_254464F38)
      {
        v56 = qword_254464F30;
        v57 = qword_254464F38;
      }
      else
      {
        if (qword_254464F80 != -1)
          swift_once();
        v44 = qword_25446C6D8;
        if (qword_25446C6D8)
        {
          v56 = qword_25446C6D0;
          v57 = qword_25446C6D8;
        }
        else
        {
          type metadata accessor for CFBundle(0);
          v65 = sub_2489D7B5C();
          if (v66)
          {
            v56 = v65;
            v57 = v66;
          }
          else
          {
            v56 = 0;
            v57 = 0xE000000000000000;
          }
        }
        sub_2489BA7EC();
      }
      v86 = v56;
      v87 = v57;
      v68 = v79;
      v67 = v80;
      sub_2489C0998(v79, *MEMORY[0x24BDCD790], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v80 + 104));
      sub_2489C9788();
      sub_2489C6C84();
      sub_2489C0348();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v44);
      goto LABEL_54;
    }
    goto LABEL_23;
  }
  v50 = v78;
  sub_2489BE840((uint64_t)v19, v78);
  sub_2489C3978(v49);
  if (v51)
  {
    sub_2489C267C((uint64_t)v29);
    sub_2489C267C((uint64_t)v33);
    sub_2489C07C4(v50, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
LABEL_23:
    sub_2489C32D0((uint64_t)v19, &qword_254463FF0);
    goto LABEL_27;
  }
  v52 = v82;
  v53 = v75;
  sub_2489BF77C(v75, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 32));
  sub_2489CB720();
  v54 = sub_2489BF5B8();
  v44 = *(_QWORD *)(v52 + 8);
  sub_2489C1A6C(v53);
  sub_2489C14A8((uint64_t)v29);
  sub_2489C14A8((uint64_t)v33);
  sub_2489C1A6C(v50);
  sub_2489C14A8((uint64_t)v19);
  if ((v54 & 1) != 0)
    goto LABEL_25;
LABEL_27:
  sub_248A44E50();
LABEL_55:
  sub_2489B71E4();
}

uint64_t sub_2489B5430()
{
  uint64_t v0;

  v0 = type metadata accessor for logger();
  sub_2489C93CC(v0, qword_254463880);
  *(_BYTE *)sub_2489C401C(v0, (uint64_t)qword_254463880) = 7;
  if (qword_2544649A0 != -1)
    swift_once();
  return sub_248A45018();
}

void sub_2489B5508()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254463B38)
  {
    sub_248A44EB0();
    v0 = sub_248A45924();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254463B38);
  }
}

uint64_t static Bool.isAppleBundle.getter()
{
  return sub_2489B4C74(&qword_254464E68, (unsigned __int8 *)&byte_254464E60);
}

uint64_t sub_2489B5578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v9;
  char v10;

  sub_2489BE100((_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56));
  sub_2489C6FF8();
  swift_bridgeObjectRelease();
  if (v10 != 1)
    return 2;
  if (qword_2544641F8 != -1)
    swift_once();
  v1 = sub_2489C330C(&qword_254464200);
  v2 = sub_2489C401C(v1, (uint64_t)qword_25446C698);
  sub_2489BD8B0();
  v3 = type metadata accessor for DeviceProfile();
  if (sub_2489C06F0(v3))
    return 2;
  v4 = *(_QWORD *)(v2 + 16);
  if (!v4)
    return 2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = qword_254462F90;
  sub_2489BA7EC();
  if (v6 != -1)
    swift_once();
  if (!qword_25446C650
    || (v5 == qword_25446C648 ? (v7 = v4 == qword_25446C650) : (v7 = 0), v7 || (sub_248A45DBC() & 1) != 0))
  {
    sub_2489BEC70();
    return 2;
  }
  if (qword_254464240 != -1)
    swift_once();
  v9 = type metadata accessor for logger();
  sub_2489C401C(v9, (uint64_t)&unk_254464228);
  sub_248A45A74();
  sub_248A4557C();
  sub_248A453F0();
  sub_248A4557C();
  sub_2489BDA70();
  sub_248A4557C();
  sub_248A4557C();
  sub_2489C0C10();
  sub_248A4557C();
  sub_2489C0C10();
  sub_2489BE9AC();
  sub_2489BEC70();
  sub_2489BDA70();
  return 1;
}

uint64_t sub_2489B57DC()
{
  uint64_t v0;

  sub_2489C00F0();
  v0 = sub_248A08858();
  sub_2489BF7F0();
  return v0;
}

void Configuration.usesCoreAnalytics.setter(char a1)
{
  uint64_t v1;
  char v3;

  if (qword_254464E68 != -1)
    swift_once();
  sub_2489C3948();
  if (v3)
    *(_BYTE *)(v1 + 49) = a1 & 1;
  sub_2489BA7D0();
}

id CoreRule.Predicate.init(compoundOperation:)(char *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  objc_class *ObjectType;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  _OWORD *v10;
  objc_super v12;
  char v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = *a1;
  v5 = v13;
  v6 = CoreRule.Predicate.Operator.rawValue.getter();
  v7 = (uint64_t *)&v2[OBJC_IVAR___Predicate_id];
  *v7 = v6;
  v7[1] = v8;
  v9 = &v2[OBJC_IVAR___Predicate_argument];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 2;
  *(_OWORD *)&v2[OBJC_IVAR___Predicate_rawdata] = xmmword_248A4A2E0;
  v2[OBJC_IVAR___Predicate_operation] = v5;
  v10 = &v2[OBJC_IVAR___Predicate_value];
  *v10 = 0u;
  v10[1] = 0u;
  *(_QWORD *)&v2[OBJC_IVAR___Predicate_queries] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___Predicate_subpredicates] = 0;
  v12.receiver = v2;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

void sub_2489B5940()
{
  uint64_t v0;

  v0 = sub_2489BEE68();
  sub_248A2C90C(v0);
  *(_BYTE *)sub_2489C5198() = 6;
  if (qword_2544649A0 != -1)
    swift_once();
  if ((byte_25446499B & 1) != 0)
    sub_248A2C92C();
  sub_2489C1CC8();
  sub_2489BA7D0();
}

void Configuration.usesAppleDisplayFrequency.setter(char a1)
{
  uint64_t v1;
  char v3;

  if (qword_254464E68 != -1)
    swift_once();
  sub_2489C3948();
  if (v3)
    *(_BYTE *)(v1 + 48) = a1 & 1;
  sub_2489BA7D0();
}

uint64_t CoreParameter.setValue<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;
  __int128 v15[2];

  v9 = *(_QWORD *)(a2 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  sub_2489C4880(v4 + 16, (uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = a3;
  *((_QWORD *)v12 + 4) = a4;
  sub_2489B8F74(v15, (uint64_t)(v12 + 40));
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v12[v11], (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_248A3742C((uint64_t)&unk_2577A52E8, (uint64_t)v12);
  swift_release();
  return swift_release();
}

void sub_2489B5B7C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2489B5C5C(319, &qword_254464578, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
  {
    sub_2489B5C5C(319, &qword_2544646B8, (void (*)(uint64_t))_s12DisplayEventVMa);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2489B5C5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_248A45924();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2489B5CA8(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_2489C330C(a2);
    v4 = sub_248A45C3C();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v6 = v4;
  v5 = sub_248A453F0();
  a3(v5, 1, &v6);
  sub_2489BDA70();
  sub_2489BA428();
}

uint64_t sub_2489B5D40(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2489B5D78()
{
  return swift_initClassMetadata2();
}

void sub_2489B5DAC()
{
  unint64_t v0;

  sub_248A2EAA4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_2489B5E44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *);
  uint64_t v9;

  v2 = sub_248A44EB0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *))(a1 + 32);
  sub_248A44E68();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_2489B5ED8()
{
  uint64_t result;

  result = os_variant_allows_internal_security_policies();
  word_254464998 = 0;
  byte_25446499A = 0;
  byte_25446499B = result;
  byte_25446499C = 0;
  return result;
}

void sub_2489B5F08()
{
  uint64_t v0;

  if (!sub_248A03DDC())
  {
    sub_248A03EE8();
    if (v0)
    {
      sub_2489B5F08();
      swift_release();
    }
  }
  sub_2489BA7D0();
}

void sub_2489B5F44()
{
  uint64_t v0;
  char v1;

  v0 = sub_2489BEE68();
  sub_248A2C90C(v0);
  *(_BYTE *)sub_2489C5198() = 1;
  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C33DC();
  if ((v1 & 1) != 0)
    sub_248A2C92C();
  sub_2489C50B8();
  sub_2489C1CC8();
  sub_2489BA7D0();
}

uint64_t sub_2489B5FDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44F58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2489B6050()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A45024();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2489B60C4()
{
  char v0;

  if (qword_254464F80 != -1)
    swift_once();
  if (qword_25446C6D8)
  {
    sub_248A453F0();
    v0 = sub_2489BAD64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v0 = 0;
  }
  byte_254464E60 = v0 & 1;
}

uint64_t static String.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_254464F38)
  {
    v0 = qword_254464F30;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v0 = qword_25446C6D0;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v1 = sub_2489D7B5C();
      if (v2)
        v0 = v1;
      else
        v0 = 0;
    }
    sub_248A453F0();
  }
  sub_248A453F0();
  return v0;
}

uint64_t sub_2489B6264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v16;
  double v17;
  long double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v26[24];

  v4 = sub_2489C330C(&qword_254463FF8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = _s12DisplayEventVMa();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2544641F8 != -1)
    swift_once();
  v12 = sub_2489C330C(&qword_254464200);
  v13 = sub_2489C401C(v12, (uint64_t)qword_25446C698);
  swift_beginAccess();
  v14 = type metadata accessor for DeviceProfile();
  if (sub_2489BE834(v13, 1, v14))
  {
    sub_2489BE7E0((uint64_t)v7, 1, 1, v8);
LABEL_6:
    sub_2489C32D0((uint64_t)v7, &qword_254463FF8);
    return 2;
  }
  sub_2489C7F24(v13 + *(int *)(v14 + 40), (uint64_t)v7, &qword_254463FF8);
  if (sub_2489BE834((uint64_t)v7, 1, v8) == 1)
    goto LABEL_6;
  sub_248A18A00((uint64_t)v7, (uint64_t)v11);
  v16 = *v11 == a1 && v11[1] == a2;
  if (v16 || (sub_248A45DBC() & 1) != 0)
  {
    sub_248A12F14((uint64_t)v11);
    return 2;
  }
  sub_248A44F10();
  v18 = -v17;
  v19 = Double.seconds.getter(-v17);
  v20 = sub_2489D9080(v19);
  v22 = v21;
  fmod(v18, 1.0);
  v23 = sub_248A4602C();
  MEMORY[0x2495A27B8](v20, v22, v23, v24);
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  v25 = sub_248A46038();
  sub_248A12F14((uint64_t)v11);
  if ((v25 & 1) != 0)
    return 2;
  else
    return 1;
}

void sub_2489B64F4()
{
  sub_248A453F0();
  sub_2489C6CC8();
  sub_2489B6AF4();
}

uint64_t sub_2489B6524()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v0 = (void *)objc_opt_self();
  sub_2489C7FB4();
  v1 = (void *)sub_248A45690();
  swift_bridgeObjectRelease();
  sub_248A44F64();
  v2 = (void *)sub_248A45690();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_preferredLocalizationsFromArray_forPreferences_, v1, v2);

  v4 = sub_248A4569C();
  return v4;
}

uint64_t sub_2489B65E0()
{
  uint64_t *v0;
  char v1;
  uint64_t result;
  uint64_t v3;
  char v4;
  char v5;
  char v7;

  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BD8B0();
  if ((byte_254464F40 & 1) == 0)
  {
    sub_248A453F0();
    sub_2489BA7EC();
    sub_2489BD894();
    sub_248A453F0();
    sub_248A4605C();
    v1 = sub_248A46050();
    swift_bridgeObjectRelease();
    sub_2489BEC70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v1 & 1) != 0)
      return 2;
  }
  if ((word_254464F60 & 1) != 0)
    return 2;
  sub_2489BE100(v0 + 4, v0[7]);
  sub_2489C6FF8();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    return 2;
  v3 = sub_2489B57DC();
  result = 2;
  if ((v4 & 1) == 0 && !v3)
  {
    if (byte_254464F40 != 1)
      goto LABEL_15;
    if (qword_2544649A0 != -1)
      swift_once();
    if ((byte_25446499C & 1) == 0)
    {
      return sub_2489B6264(v0[2], v0[3]);
    }
    else
    {
LABEL_15:
      v5 = sub_248A17994();
      if ((v5 & 1) != 0 || v5 == 2)
        return 1;
      else
        return 2;
    }
  }
  return result;
}

uint64_t sub_2489B6798@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreRule.Predicate.Operator.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2489B67BC()
{
  sub_2489B6808();
  return sub_248A45654();
}

unint64_t sub_2489B6808()
{
  unint64_t result;

  result = qword_2544641B8;
  if (!qword_2544641B8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Operator, &type metadata for CoreRule.Predicate.Operator);
    atomic_store(result, (unint64_t *)&qword_2544641B8);
  }
  return result;
}

uint64_t sub_2489B6844@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_2489BE8C0(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_2489B687C(_QWORD *a1)
{
  return CoreRule.Predicate.encode(to:)(a1);
}

uint64_t sub_2489B689C()
{
  sub_2489B68F8();
  return sub_248A4566C();
}

unint64_t sub_2489B68F8()
{
  unint64_t result;

  result = qword_254463BA0;
  if (!qword_254463BA0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.ContentType, &type metadata for CoreTip.ConstellationText.ContentType);
    atomic_store(result, (unint64_t *)&qword_254463BA0);
  }
  return result;
}

uint64_t _s17ConstellationTextVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_2489B698C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16[2];
  void *v17;
  __int128 v18;
  char v19;
  uint64_t v20;

  v0 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (!v0)
    goto LABEL_10;
  v4 = v0;
  v5 = objc_msgSend(v0, sel_entitlements);

  if (!v5)
    goto LABEL_10;
  v6 = (void *)sub_248A454BC();
  sub_2489C0320((uint64_t)v6, (unint64_t *)&qword_254463D70);
  v7 = objc_msgSend(v5, sel_objectForKey_ofClass_, v6, swift_getObjCClassFromMetadata());

  if (v7)
  {
    sub_248A459C0();
    v8 = swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)v16 = 0u;
    v18 = 0u;
  }
  v0 = (id)sub_2489C1744(v8, v9, v10, v11, v12, v13, v14, v15, (uint64_t)v16[0], (uint64_t)v16[1], v18, *((uint64_t *)&v18 + 1), v19);
  if (v20)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      objc_msgSend(v17, sel_BOOLValue);

    }
  }
  else
  {
LABEL_10:
    sub_2489C1998((uint64_t)v0, v1, v2, v3);
  }
  sub_2489BFB64();
}

uint64_t sub_2489B6AE8()
{
  return sub_248A45AA4();
}

uint64_t sub_2489B6B00()
{
  return sub_248A45CB4();
}

uint64_t sub_2489B6B08()
{
  return swift_allocObject();
}

uint64_t sub_2489B6B18()
{
  return swift_release();
}

uint64_t sub_2489B6B20()
{
  return swift_release();
}

uint64_t sub_2489B6B28()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248A3BE48(v0, *(_QWORD *)(v1 - 200));
}

uint64_t sub_2489B6B4C()
{
  return swift_getKeyPath();
}

void sub_2489B6B54()
{
  uint64_t v0;

  sub_248A098C0(*(_QWORD *)(v0 + 96));
}

void sub_2489B6B60()
{
  sub_248A1A360();
}

uint64_t sub_2489B6B6C()
{
  uint64_t v0;

  return v0 - 88;
}

uint64_t sub_2489B6B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void sub_2489B6B88()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = 91;
  *(_QWORD *)(v1 - 120) = 0xE100000000000000;
  sub_248A2A918(*v0);
}

uint64_t sub_2489B6BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void sub_2489B6BC8(uint64_t a1)
{
  sub_2489C6B40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_2489C0688();
  sub_2489B6AF4();
}

uint64_t Array.asDictionary<A, B>()()
{
  uint64_t v0;

  sub_248A453F0();
  swift_getTupleTypeMetadata2();
  v0 = sub_248A45708();
  MEMORY[0x2495A2D34](MEMORY[0x24BEE12C8], v0);
  return sub_248A453CC();
}

void sub_2489B6C88()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, _QWORD *);
  void (*v2)(uint64_t, uint64_t, _QWORD *);
  char v3;
  int64_t v4;
  uint64_t *v5;
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;
  uint64_t v14;

  sub_2489C18F8();
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 24);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < v4)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= v4)
        v8 = v4;
    }
  }
  else
  {
    v8 = v4;
  }
  v9 = *(_QWORD *)(v0 + 16);
  if (v8 <= v9)
    v10 = *(_QWORD *)(v0 + 16);
  else
    v10 = v8;
  if (v10)
  {
    sub_2489C330C(v5);
    v11 = (_QWORD *)sub_2489BFE1C();
    v12 = j__malloc_size(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 32);
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 4;
  v14 = v0 + 32;
  if ((v3 & 1) != 0)
  {
    v2(v14, v9, v13);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14, v9, v13);
  }
  swift_release();
  sub_2489BA828();
}

uint64_t type metadata accessor for CoreTip.ConstellationContent()
{
  return objc_opt_self();
}

void sub_2489B6D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v0 = sub_248A4605C();
  v2 = v1;
  if (qword_254464E68 != -1)
    swift_once();
  sub_2489BF5AC();
  qword_254464F10 = 0x74696B7069742ELL;
  qword_254464F18 = 0xE700000000000000;
  *(_QWORD *)&xmmword_254464F20 = v0;
  *((_QWORD *)&xmmword_254464F20 + 1) = v2;
  qword_254464F30 = 0;
  qword_254464F38 = 0;
  byte_254464F40 = 0;
  byte_254464F41 = v3;
  byte_254464F42 = 0;
  off_254464F48 = (_UNKNOWN *)MEMORY[0x24BEE4B08];
  byte_254464F50 = 0;
  off_254464F58 = (_UNKNOWN *)MEMORY[0x24BEE4B08];
  word_254464F60 = 0;
  *(_OWORD *)&qword_254464F68 = xmmword_248A476F0;
  byte_254464F78 = 0;
  sub_2489BA7D0();
}

uint64_t sub_2489B6E1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_248A44EBC();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_2489B6E44(uint64_t a1, uint64_t (*a2)(void))
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v3 = sub_2489C256C(a1, a2);
  v2(v3);
  return sub_2489BFC74();
}

uint64_t AtomicProperty.subscript.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  sub_2489BD868();
  v10 = v1;
  v11 = *(_OWORD *)(v3 + 24);
  v12 = v5;
  v13 = v4;
  sub_2489C38F4((void (*)(uint64_t))sub_2489BC02C, (uint64_t)v9, v6, v3, MEMORY[0x24BEE4AE0] + 8);
  sub_2489C1464();
  v7 = sub_2489BF9F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
}

void sub_2489B6EF8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CoreTipRecord.content.getter();
  *a1 = v2;
}

uint64_t sub_2489B6F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  _QWORD v20[2];

  v20[0] = a5;
  v20[1] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v7);
  v9 = *(_QWORD *)(a2 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)v20 - v15;
  swift_getAssociatedConformanceWitness();
  sub_248A45F0C();
  sub_248A45DA4();
  sub_248A4584C();
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v13, a2);
  v18 = sub_248A46068();
  v17(v16, a2);
  return v18;
}

id CoreRule.Predicate.init(id:predicateData:)()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *ObjectType;
  _QWORD *v6;
  char *v7;
  _QWORD *v8;
  _OWORD *v9;
  objc_super v11;

  sub_2489C18E0();
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v1[OBJC_IVAR___Predicate_id];
  *v6 = v4;
  v6[1] = v3;
  v7 = &v1[OBJC_IVAR___Predicate_argument];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 2;
  v1[OBJC_IVAR___Predicate_operation] = 11;
  v8 = &v1[OBJC_IVAR___Predicate_rawdata];
  *v8 = v2;
  v8[1] = v0;
  v9 = &v1[OBJC_IVAR___Predicate_value];
  *v9 = 0u;
  v9[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR___Predicate_queries] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___Predicate_subpredicates] = 0;
  v11.receiver = v1;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t sub_2489B71D0()
{
  return 0;
}

uint64_t sub_2489B71DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489B71FC()
{
  return sub_248A453F0();
}

uint64_t sub_2489B7214()
{
  return swift_getKeyPath();
}

uint64_t sub_2489B721C()
{
  return swift_getKeyPath();
}

uint64_t sub_2489B7244(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = result;
  return result;
}

uint64_t sub_2489B725C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489B7268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_2489B7270(uint64_t a1, uint64_t a2)
{
  return sub_2489C401C(a1, a2);
}

void sub_2489B7284()
{
  sub_2489BE9AC();
}

uint64_t sub_2489B7290()
{
  return swift_allocObject();
}

uint64_t sub_2489B72A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = result;
  v6[4] = a2;
  return result;
}

void sub_2489B72B8()
{
  sub_2489B72EC();
}

void sub_2489B72EC()
{
  sub_248A04A7C();
}

uint64_t AtomicProperty.__deallocating_deinit()
{
  AtomicProperty.deinit();
  return swift_deallocClassInstance();
}

uint64_t AtomicProperty.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

void sub_2489B7350(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  CoreRule.Predicate.Argument.init(from:)(a1, a2);
}

uint64_t sub_2489B7364(uint64_t a1)
{
  uint64_t v1;

  return sub_2489B7380(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_2489B7380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1, a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  (*(void (**)(char *))(v10 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = swift_dynamicCast();
  if ((_DWORD)v11)
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v11;
}

uint64_t type metadata accessor for CoreRule.Predicate()
{
  return objc_opt_self();
}

uint64_t sub_2489B747C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2489B7494(a1, a2);
}

uint64_t sub_2489B7494@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2);
}

void static Configuration.shared.modify()
{
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BFA10();
  sub_2489BA7D0();
}

uint64_t sub_2489B754C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  *(_QWORD *)(v0 + 24) = 0;
  if (qword_254464E68 != -1)
    swift_once();
  if (byte_254464E60 != 1)
    goto LABEL_11;
  if (qword_2544649A0 != -1)
    swift_once();
  if ((byte_25446499C & 1) == 0
    && (v2 = (_QWORD *)sub_2489B809C(),
        v3 = sub_2489B482C(0x6C7070612E6D6F63, 0xEF64737069742E65, v2),
        swift_bridgeObjectRelease(),
        (v3 & 1) != 0))
  {
    sub_248A43344();
    v4 = sub_248A43288(0x6C7070612E6D6F63, 0xEF64737069742E65, 0);
    *(_QWORD *)(v0 + 16) = v4;
    objc_msgSend(v4, sel_synchronize);
    if (qword_254464240 != -1)
      swift_once();
    v5 = type metadata accessor for logger();
    sub_2489C401C(v5, (uint64_t)&unk_254464228);
    sub_2489BE9AC();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t initializeWithCopy for DeviceProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_248A44F58();
  sub_248A453F0();
  if (sub_2489BE834((uint64_t)v9, 1, v10))
  {
    v11 = sub_2489C330C(&qword_254464A98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    sub_2489BE7E0((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = _s12DisplayEventVMa();
  sub_248A453F0();
  if (sub_2489BE834((uint64_t)v14, 1, v15))
  {
    v16 = sub_2489C330C(&qword_254463FF8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = v14[1];
    *v13 = *v14;
    v13[1] = v17;
    v18 = *(int *)(v15 + 20);
    v19 = (char *)v13 + v18;
    v20 = (char *)v14 + v18;
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    sub_248A453F0();
    v21(v19, v20, v10);
    sub_2489BE7E0((uint64_t)v13, 0, 1, v15);
  }
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  sub_248A453F0();
  return a1;
}

uint64_t static PredicateCoder.encode<A>(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  v4 = sub_248A44DF0();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[3] = a2;
  v8 = sub_248A44FA0();
  MEMORY[0x2495A2D34](MEMORY[0x24BDCF700], v8);
  v9 = sub_2489BE6F0();
  if (!v2)
    return v9;

  static PredicateCodableConfiguration.standardConfigurationWithKeyPaths<A>(for:)((uint64_t)v7);
  MEMORY[0x2495A2D34](MEMORY[0x24BDCF6F8], v8);
  v10 = sub_248A2A3F0();
  sub_2489C0278();
  return v10;
}

void sub_2489B7A34()
{
  _QWORD *v0;
  uint64_t v1;

  sub_248A065E4();
  *v0 = v1;
  sub_2489BA7D0();
}

void AtomicProperty.remove<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_2489BBC68();
  v4[1] = *(_OWORD *)(v1 + 16);
  v5 = v2;
  v3 = sub_2489BF9F0();
  sub_2489C38F4((void (*)(uint64_t))sub_2489BBE14, (uint64_t)v4, v0, v1, v3);
  sub_2489BFF78();
}

void sub_2489B7AAC(uint64_t *a1@<X8>)
{
  *a1 = sub_248A03DDC();
  sub_2489BA7D0();
}

void sub_2489B7AD0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  void *v4;
  void *v5;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  id v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];
  id v53[2];

  v5 = v4;
  v53[1] = *(id *)MEMORY[0x24BDAC8D0];
  v53[0] = 0;
  *(_OWORD *)v52 = xmmword_248A4A2E0;
  v10 = (void *)sub_248A44E2C();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v52;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = v53;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_2489C96A8;
  *(_QWORD *)(v12 + 24) = v11;
  v50 = (uint64_t)sub_2489CB6D8;
  v51 = v12;
  v46 = MEMORY[0x24BDAC760];
  v47 = 1107296256;
  v48 = (uint64_t)sub_2489B5E44;
  v49 = &unk_2519BAA40;
  v13 = _Block_copy(&v46);
  swift_retain();
  swift_release();
  v46 = 0;
  objc_msgSend(v5, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v10, a1, &v46, v13);
  _Block_release(v13);

  v14 = (id)v46;
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  if (v14)
  {
    v15 = v14;
    v16 = swift_willThrow();
    sub_2489BA95C(v16, v17, v18, v19, v20, v21, v22, v23, v46, v47, v48, (uint64_t)v49, v50, v51, v52[0], v52[1], v53[0]);
    sub_2489B6B20();

  }
  else if (v53[0])
  {
    v24 = v53[0];
    v25 = swift_willThrow();
    sub_2489BA95C(v25, v26, v27, v28, v29, v30, v31, v32, v46, v47, v48, (uint64_t)v49, v50, v51, v52[0], v52[1], v53[0]);
    sub_2489B6B20();
  }
  else
  {
    v33 = v52[1];
    if ((unint64_t)v52[1] >> 60 == 15)
    {
      v46 = 0;
      v47 = 0xE000000000000000;
      sub_248A45A74();
      sub_248A4557C();
      sub_248A44E14();
      sub_248A4557C();
      swift_bridgeObjectRelease();
      v34 = v46;
      v35 = v47;
      sub_2489C9824();
      swift_allocError();
      *v36 = v34;
      v36[1] = v35;
      v37 = swift_willThrow();
      sub_2489BA95C(v37, v38, v39, v40, v41, v42, v43, v44, v46, v47, v48, (uint64_t)v49, v50, v51, v52[0], v52[1], v53[0]);
      sub_2489B6B20();
    }
    else
    {
      v45 = v52[0];
      sub_2489B6B20();
      *a4 = v45;
      a4[1] = v33;
    }
  }
}

void CoreTip.ConstellationText.ContentType.init(rawValue:)(char *a1@<X8>)
{
  unint64_t v1;
  char v3;

  sub_248A45C60();
  sub_2489C06C8();
  v3 = 4;
  if (v1 < 4)
    v3 = v1;
  *a1 = v3;
  sub_2489B6AF4();
}

uint64_t type metadata accessor for CoreEvent()
{
  return objc_opt_self();
}

uint64_t sub_2489B7DF0@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_2489C1DC4(a1, a2);
}

uint64_t CoreParameterProtocol.value(from:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  swift_getAssociatedTypeWitness();
  if (a2 >> 60 == 15)
  {
    sub_2489BFD60();
    return sub_2489BE7E0(v6, v7, v8, v9);
  }
  else
  {
    sub_2489C6B54(a1, a2);
    swift_getAssociatedConformanceWitness();
    sub_2489BE31C();
    sub_2489BA8B4(a3, 0);
    sub_2489BFD60();
    return sub_2489BDB94(v11, v12);
  }
}

id sub_2489B8044()
{
  void *v0;
  void *v1;
  id v2;

  sub_248A44E74();
  sub_248A454BC();
  sub_2489BF8B8();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t sub_2489B809C()
{
  return sub_2489C2564();
}

uint64_t sub_2489B80B4(_QWORD *a1)
{
  return sub_2489B80C8(a1);
}

uint64_t sub_2489B80C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];
  uint64_t v37;
  __int128 v38;
  _BYTE v39[32];
  _QWORD v40[3];
  uint64_t v41;

  v34 = sub_248A44EB0();
  v33 = *(_QWORD *)(v34 - 8);
  v4 = MEMORY[0x24BDAC7A8](v34, v3);
  v32 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v32 - v7;
  v35 = sub_248A44F58();
  v9 = *(_QWORD *)(v35 - 8);
  v11 = MEMORY[0x24BDAC7A8](v35, v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v32 - v15;
  sub_2489BE100(a1, a1[3]);
  sub_248A45FFC();
  sub_2489C81EC(v1, (uint64_t)v39);
  sub_2489B5D40(0, qword_254463D98);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
      goto LABEL_4;
    sub_2489C330C(&qword_254463D90);
    if (swift_dynamicCast())
    {
      sub_2489B8F74(&v38, (uint64_t)v36);
      sub_2489BE100(v36, v36[3]);
      sub_248A45474();
      sub_2489BCE44((uint64_t)v36);
    }
    else if (swift_dynamicCast())
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45E40();
    }
    else if (swift_dynamicCast())
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45E64();
    }
    else if (swift_dynamicCast())
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45E88();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45E94();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45EA0();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45EAC();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45E70();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45EB8();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45EC4();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45ED0();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45EDC();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45E58();
    }
    else if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2489D08D4((uint64_t)v40, v41);
      sub_248A45E4C();
    }
    else
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_2489D08D4((uint64_t)v40, v41);
        sub_248A45E34();
      }
      else
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v16, v35);
          sub_2489D08D4((uint64_t)v40, v41);
          sub_2489BA29C(&qword_2544643D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
          sub_248A45E7C();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v35);
          goto LABEL_33;
        }
        if ((swift_dynamicCast() & 1) != 0)
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v8, v34);
          sub_2489D08D4((uint64_t)v40, v41);
          sub_2489BA29C(&qword_2544640D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
          sub_248A45E7C();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
          goto LABEL_33;
        }
        sub_2489B5D40(0, (unint64_t *)&qword_254463D70);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v18 = (void *)v38;
          sub_2489CD114((void *)v38, v40);

          goto LABEL_33;
        }
        sub_2489C330C(&qword_2577A4E68);
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_2489CD618(v38);
          sub_2489B5CA8(v19, &qword_2577A4EA8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_2489D00C8);
          v21 = v20;
          swift_bridgeObjectRelease();
          v36[0] = v21;
          sub_2489D08D4((uint64_t)v40, v41);
          sub_2489C330C(&qword_2577A4E98);
          sub_2489D0938();
        }
        else
        {
          sub_2489C330C(&qword_2577A4E70);
          if ((swift_dynamicCast() & 1) == 0)
          {
            v29 = sub_248A45AC8();
            swift_allocError();
            v31 = v30;
            sub_2489C330C(&qword_2577A4E78);
            sub_2489C81EC(v1, v31);
            sub_2489BE100(v40, v41);
            sub_248A45E28();
            sub_248A45AA4();
            (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE2728], v29);
            swift_willThrow();
            goto LABEL_33;
          }
          v35 = v36[0];
          v22 = *(_QWORD *)(v36[0] + 16);
          if (v22)
          {
            v37 = MEMORY[0x24BEE4AF8];
            sub_248A0290C();
            v23 = v37;
            v24 = v35 + 32;
            do
            {
              v25 = sub_2489C330C(&qword_254464AF0);
              v26 = swift_allocObject();
              sub_2489C55EC(v24, v26 + 16, &qword_254464AF0);
              v37 = v23;
              v27 = *(_QWORD *)(v23 + 16);
              if (v27 >= *(_QWORD *)(v23 + 24) >> 1)
              {
                sub_248A0290C();
                v23 = v37;
              }
              *(_QWORD *)(v23 + 16) = v27 + 1;
              v28 = v23 + 32 * v27;
              *(_QWORD *)(v28 + 32) = v26;
              *(_OWORD *)(v28 + 40) = v38;
              *(_QWORD *)(v28 + 56) = v25;
              v24 += 32;
              --v22;
            }
            while (v22);
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            v23 = MEMORY[0x24BEE4AF8];
          }
          *(_QWORD *)&v38 = v23;
          sub_2489D08D4((uint64_t)v40, v41);
          sub_2489C330C(&qword_2577A4E80);
          sub_2489D12D4(&qword_2577A4E88, &qword_2577A4E80, (uint64_t (*)(void))sub_2489D08FC, MEMORY[0x24BEE12A0]);
        }
        sub_248A45E7C();
      }
      swift_bridgeObjectRelease();
    }
LABEL_33:
    sub_2489BCE44((uint64_t)v39);
    return sub_2489BCE44((uint64_t)v40);
  }

LABEL_4:
  sub_2489BCE44((uint64_t)v39);
  sub_2489D08D4((uint64_t)v40, v41);
  sub_248A45EE8();
  return sub_2489BCE44((uint64_t)v40);
}

uint64_t sub_2489B8C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489B8CA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489B8CA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x697461756C617665 && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701736302 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_248A45DBC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

void sub_2489B8DE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_2489C3390();
  *v0 = v1;
  v0[1] = v2;
  sub_2489BA7D0();
}

void static CoreParameterProtocol.valuesNotEqual(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;

  v10 = sub_2489BFA90(a1, a2, a3, a4, a5, a6, a7, a8, v48[0]);
  if (!v49)
  {
    sub_2489C18C0(v10, &qword_254464AF0, v11, v12, v13, v14, v15, v16, v48[0]);
    v22 = sub_2489C238C();
    goto LABEL_7;
  }
  sub_2489C330C(&qword_254463A80);
  v17 = sub_2489C3A38();
  if ((v17 & 1) == 0)
  {
    v22 = sub_2489C1578();
LABEL_7:
    v25 = sub_2489C00A0(v17, &qword_2577A5210, v18, v19, v20, v21, v22);
    v26 = sub_2489C1B1C(v25, (uint64_t)v48);
    if (v49)
    {
      sub_2489C330C(&qword_254463A80);
      v33 = sub_2489C3A38();
      if ((v33 & 1) != 0)
      {
        if (v51)
        {
          sub_2489B8F74(&v50, (uint64_t)v52);
          sub_2489BE100(v52, v53);
          v23 = default argument 1 of Equatable.isNotEqual(_:checkReverse:)() & 1;
          v24 = v9;
          goto LABEL_11;
        }
      }
      else
      {
        v38 = sub_2489C1578();
      }
    }
    else
    {
      sub_2489C18C0(v26, &qword_254464AF0, v27, v28, v29, v30, v31, v32, v48[0]);
      v38 = sub_2489C238C();
    }
    v47 = sub_2489C00A0(v33, &qword_2577A5210, v34, v35, v36, v37, v38);
    sub_2489C1B1C(v47, (uint64_t)v52);
    sub_2489C32D0((uint64_t)v52, &qword_254464AF0);
    goto LABEL_15;
  }
  if (!v51)
    goto LABEL_7;
  sub_2489B8F74(&v50, (uint64_t)v52);
  sub_2489BE100(v52, v53);
  v23 = default argument 1 of Equatable.isNotEqual(_:checkReverse:)() & 1;
  v24 = v8;
LABEL_11:
  Equatable.isNotEqual(_:checkReverse:)(v24, v23);
  sub_2489C03EC(v39, v40, v41, v42, v43, v44, v45, v46, v48[0]);
LABEL_15:
  sub_2489C26F4();
}

uint64_t sub_2489B8F74(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void Equatable.isNotEqual(_:checkReverse:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[40];

  sub_2489C0AB8();
  sub_2489C0574();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BFB8C();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489C1C8C();
  sub_2489BE648(a1, v8);
  sub_2489C330C(&qword_254464AF0);
  if (sub_2489C01F0())
  {
    sub_2489C16D0();
    sub_2489C0740();
    sub_248A454B0();
    sub_2489C2848();
  }
  else
  {
    sub_2489C251C();
    if ((a2 & 1) != 0)
    {
      sub_2489BE648(a1, (uint64_t)v13);
      if (v14)
      {
        sub_2489C330C(&qword_254463A80);
        v9 = sub_2489C1978();
        if ((v9 & 1) != 0)
        {
          if (*((_QWORD *)&v16 + 1))
          {
            v10 = sub_2489C3C7C();
            sub_2489BA990((uint64_t)v10);
            v11 = sub_2489BF6B4();
            v12 = Equatable.isNotEqual(_:checkReverse:)(v11);
            sub_2489BF844(v12, &qword_254464AF0);
            sub_2489BCE44((uint64_t)v18);
            goto LABEL_11;
          }
        }
        else
        {
          v17 = 0;
          v15 = 0u;
          v16 = 0u;
        }
      }
      else
      {
        v9 = sub_2489C32D0((uint64_t)v13, &qword_254464AF0);
        v15 = 0u;
        v16 = 0u;
        v17 = 0;
      }
      sub_2489BF844(v9, &qword_2577A5210);
    }
  }
LABEL_11:
  sub_2489B71E4();
}

uint64_t destroy for Configuration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2489B9114()
{
  void *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  if ((sub_2489B9270() & 1) != 0)
  {
    v0 = (void *)sub_248A44E2C();
    v7 = sub_2489C2548((int)v0, sel_removeItemAtURL_error_, v1, v2, v3, v4, v5, v6, v11, v12, v13, v14, v15, v16, 0);

    if (v7)
    {
      sub_2489C3CB0(v17);
      return;
    }
    v8 = v17;
    v9 = (void *)sub_2489BFBA8();

    swift_willThrow();
    if (qword_254462F70 != -1)
      swift_once();
    v10 = type metadata accessor for logger();
    sub_2489C401C(v10, (uint64_t)&unk_254462F58);
    sub_2489BF6CC();
    sub_248A45A74();
    sub_248A4557C();
    sub_248A44E74();
    sub_2489C058C();
    sub_2489BEE88();
    sub_2489C1700();
    sub_2489C1CA8();
    sub_2489C198C();
    sub_2489C285C();
    sub_2489BEE88();

  }
  sub_2489BFEE4();
}

uint64_t sub_2489B9270()
{
  void *v0;
  void *v1;
  unsigned __int8 v2;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v4 = 0;
  sub_248A44E74();
  sub_248A454BC();
  sub_2489BF8B8();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v4);

  return (v2 & v4);
}

uint64_t sub_2489B9308()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2489B934C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  unint64_t v46;
  unint64_t v47;

  v1 = v0;
  v2 = sub_2489C330C(&qword_254464DD8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2489C330C(&qword_254464D40);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_248A44EB0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v36 - v17;
  v19 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer);
  if (v19)
  {
    swift_retain();
    sub_248A2CF70((uint64_t)v9);
    if (sub_2489BE834((uint64_t)v9, 1, v10) != 1)
    {
      v44 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v44(v18, v9, v10);
      v22 = sub_248A45780();
      sub_2489BE7E0((uint64_t)v5, 1, 1, v22);
      v23 = v0[2];
      v42 = v0[3];
      v43 = v23;
      v24 = v0[7];
      v37 = v0[6];
      v38 = v24;
      v25 = v0[8];
      v39 = v0[9];
      v40 = v25;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
      v26 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
      v41 = v5;
      v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
      v45 = v18;
      v29 = (char *)swift_allocObject();
      *((_QWORD *)v29 + 2) = 0;
      *((_QWORD *)v29 + 3) = 0;
      v30 = v37;
      *((_QWORD *)v29 + 4) = v19;
      *((_QWORD *)v29 + 5) = v30;
      *((_QWORD *)v29 + 6) = v38;
      v44(&v29[v26], v15, v10);
      v31 = v39;
      *(_QWORD *)&v29[v27] = v40;
      *(_QWORD *)&v29[v28] = v31;
      v32 = &v29[(v28 + 15) & 0xFFFFFFFFFFFFFFF8];
      v33 = v42;
      *(_QWORD *)v32 = v43;
      *((_QWORD *)v32 + 1) = v33;
      swift_retain();
      sub_248A453F0();
      sub_248A453F0();
      swift_retain();
      v34 = (uint64_t)v41;
      v35 = sub_248A2CC90((uint64_t)v41, (uint64_t)&unk_2577A57B0, (uint64_t)v29);
      sub_2489C3298(v34, &qword_254464DD8);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v45, v10);
      *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_datastoreTask) = v35;
      return swift_release();
    }
    swift_release();
    sub_2489C3298((uint64_t)v9, &qword_254464D40);
  }
  if (qword_254462F70 != -1)
    swift_once();
  v20 = type metadata accessor for logger();
  sub_2489C401C(v20, (uint64_t)&unk_254462F58);
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_248A45A74();
  swift_bridgeObjectRelease();
  v46 = 0xD000000000000016;
  v47 = 0x8000000248A51A60;
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  sub_2489BE9AC();
  return swift_bridgeObjectRelease();
}

objc_class *sub_2489B96D4@<X0>(_QWORD *a1@<X0>, objc_class **a2@<X8>)
{
  uint64_t v2;
  objc_class *result;

  result = CoreTip.ConstellationContent.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

objc_class *CoreTip.ConstellationContent.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CoreTip.ConstellationContent.init(from:)(a1);
}

objc_class *CoreTip.ConstellationContent.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  uint64_t v15;
  objc_class *v16;
  _QWORD v17[2];
  uint64_t v18;
  objc_class *ObjectType;
  objc_super v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v18 = sub_2489C330C(&qword_254463C98);
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489BE100(a1, a1[3]);
  sub_2489B9B38();
  v8 = v1;
  sub_248A45FF0();
  if (v2)
  {
    v16 = ObjectType;
    sub_2489C0640();

    swift_deallocPartialClassInstance();
  }
  else
  {
    v9 = v4;
    sub_2489C330C(&qword_254463C58);
    v23 = 0;
    sub_2489B9AD0(&qword_254463C60, (uint64_t (*)(void))sub_2489CAD24, MEMORY[0x24BEE12D0]);
    v10 = v18;
    sub_2489C04B4();
    v17[1] = OBJC_IVAR___ConstellationContent_title;
    *(_QWORD *)&v8[OBJC_IVAR___ConstellationContent_title] = v21;
    v23 = 1;
    sub_2489C04B4();
    *(_QWORD *)&v8[OBJC_IVAR___ConstellationContent_message] = v21;
    sub_2489C330C(&qword_254463C68);
    v23 = 2;
    sub_2489B9A64(&qword_254463C70, &qword_254463BC8, (uint64_t)&protocol conformance descriptor for CoreTip.ConstellationAction, MEMORY[0x24BEE12D0]);
    sub_248A45CA8();
    *(_QWORD *)&v8[OBJC_IVAR___ConstellationContent_actions] = v21;
    v23 = 3;
    sub_2489B9B74();
    sub_248A45CA8();
    v12 = v22;
    v13 = &v8[OBJC_IVAR___ConstellationContent_asset];
    *(_OWORD *)v13 = v21;
    *((_QWORD *)v13 + 2) = v12;

    v20.receiver = v8;
    v20.super_class = ObjectType;
    v14 = (objc_class *)objc_msgSendSuper2(&v20, sel_init);
    v15 = v9;
    v16 = v14;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v10);
    sub_2489C0640();
  }
  return v16;
}

void sub_2489B9A64(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if (!*a1)
  {
    v8 = sub_2489BCD7C(&qword_254463C68);
    v9 = sub_2489CA73C(a2, a3);
    atomic_store(MEMORY[0x2495A2D34](a4, v8, &v9), a1);
  }
  sub_2489BA868();
}

uint64_t sub_2489B9AD0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_2489BCD7C(&qword_254463C58);
    v8 = a2();
    result = MEMORY[0x2495A2D34](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2489B9B38()
{
  unint64_t result;

  result = qword_254463BE8;
  if (!qword_254463BE8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C674, &_s20ConstellationContentC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463BE8);
  }
  return result;
}

unint64_t sub_2489B9B74()
{
  unint64_t result;

  result = qword_254463BC0;
  if (!qword_254463BC0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationAsset, &type metadata for CoreTip.ConstellationAsset);
    atomic_store(result, (unint64_t *)&qword_254463BC0);
  }
  return result;
}

uint64_t sub_2489B9BB0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  id v8;
  uint64_t result;
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_2489B9C8C(v0);
  v2 = v1;
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_10;
  v3 = sub_2489C391C();
  v4 = sub_2489B9C8C(v3);
  if (v5)
  {
    if (v4)
      v6 = 0;
    else
      v6 = v5 == 0xE000000000000000;
    if (v6)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = sub_248A45DBC();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
        goto LABEL_8;
    }
LABEL_10:
    type metadata accessor for CFBundle(0);
    result = sub_2489D7B5C();
    goto LABEL_11;
  }
LABEL_8:
  v8 = sub_2489C391C();
  result = sub_2489B9C8C(v8);
LABEL_11:
  qword_25446C6D0 = result;
  qword_25446C6D8 = v10;
  return result;
}

uint64_t sub_2489B9C8C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2)
    return 0;
  v3 = sub_248A454E0();

  return v3;
}

void sub_2489B9CF8()
{
  uint64_t v0;

  v0 = sub_2489BFE7C();
  sub_2489C06D4(v0);
  sub_2489BDA5C();
  sub_2489C0648();
}

double sub_2489B9D1C()
{
  uint64_t v0;
  _OWORD *v1;
  double v2;
  double v4;

  sub_248A1A360();
  v0 = sub_248A1C0FC();
  sub_2489C6D5C(v0, 0xEF6E6F6974617275, v1);
  sub_2489C330C(&qword_2544643E0);
  if (sub_2489BFB58())
  {
    v2 = v4;
    sub_2489BDA70();
  }
  else
  {
    sub_2489BDA70();
    return 0.0;
  }
  return v2;
}

void DeviceProfile.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_2489C330C(&qword_254463FF8);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489C0054();
  v27 = v6;
  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_2489C0A84(v9, v25);
  v10 = sub_2489C330C(&qword_254463D88);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C0724();
  v12 = (int *)type metadata accessor for DeviceProfile();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489BA474();
  *(_WORD *)v2 = 0;
  *(_BYTE *)(v2 + 2) = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v28 = v2 + *(int *)(v15 + 32);
  v29 = sub_248A44F58();
  sub_2489BE7E0(v28, 1, 1, v29);
  v16 = v12[9];
  *(_QWORD *)(v2 + v16) = sub_248A453C0();
  v17 = v2 + v12[10];
  v18 = sub_2489C611C();
  sub_2489BE7E0(v17, 1, 1, v18);
  v19 = v12[11];
  *(_QWORD *)(v2 + v19) = 0;
  sub_2489BE100(a1, a1[3]);
  sub_2489C9C9C();
  sub_248A45FF0();
  if (v31)
  {
    v22 = (uint64_t)a1;
    v20 = v2;
  }
  else
  {
    v32 = v16;
    sub_2489B6B6C();
    v20 = v2;
    *(_BYTE *)v2 = sub_248A45CC0() & 1;
    sub_248A24B74();
    sub_2489BFB74();
    *(_BYTE *)(v2 + 1) = 0;
    sub_2489C9B84();
    sub_2489C61E0();
    *(_BYTE *)(v2 + 2) = 0;
    sub_2489B6B6C();
    *(_QWORD *)(v2 + 8) = sub_248A45C84();
    *(_QWORD *)(v2 + 16) = v21;
    LOBYTE(v33) = 4;
    sub_2489BA29C(&qword_2544640F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_2489BFB74();
    sub_2489BA270(v30, v28, &qword_254464A98);
    sub_2489BBC8C();
    sub_2489BA220(&qword_254463D48, &qword_254463D40);
    sub_2489C61E0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + v32) = v33;
    LOBYTE(v33) = 6;
    sub_2489BA29C(&qword_254463CF8, (uint64_t (*)(uint64_t))_s12DisplayEventVMa, (uint64_t)&unk_248A4CED8);
    sub_2489BFB74();
    sub_2489BA270(v27, v17, &qword_254463FF8);
    sub_2489BBC8C();
    sub_2489BA220(&qword_254463D58, &qword_254463D50);
    sub_2489BFB74();
    v23 = sub_2489B725C();
    v24(v23);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + v19) = v33;
    sub_248A15774(v2, a2);
    v22 = (uint64_t)a1;
  }
  sub_2489BCE44(v22);
  sub_2489C83BC(v20, (uint64_t (*)(_QWORD))type metadata accessor for DeviceProfile);
}

void sub_2489BA220(_QWORD *a1, uint64_t *a2)
{
  void (*v2)(void);

  if (!*a1)
  {
    sub_2489C9464(0, a2);
    v2();
    sub_248A25C58();
  }
  sub_2489BA428();
}

void sub_2489BA270(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_2489C0310(a1, a2, a3);
  sub_2489BDA64(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_2489BA7D0();
}

void sub_2489BA29C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2495A2D34](a3, v5), a1);
  }
  sub_2489BA7D0();
}

uint64_t sub_2489BA2D8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_248A44F58();
    sub_2489BEDA0();
  }
  return result;
}

uint64_t AtomicProperty.projectedValue.getter()
{
  return swift_retain();
}

uint64_t AtomicProperty.insert<A>(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2, v8);
  v10 = &v15[-v9];
  v11 = v2[2];
  v12 = *(_QWORD *)(v5 + 24);
  v16 = v6;
  v17 = v12;
  v18 = a2;
  sub_2489C38F4((void (*)(uint64_t))sub_2489BBE88, (uint64_t)v15, v11, v5, TupleTypeMetadata2);
  v13 = *v10;
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, &v10[*(int *)(TupleTypeMetadata2 + 48)], v6);
  return v13;
}

uint64_t sub_2489BA414()
{
  return sub_248A45E7C();
}

void *sub_2489BA438(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE8uLL);
}

void sub_2489BA440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 88);
  *(_BYTE *)(v0 + 96) = *(_BYTE *)(v1 + 96);
  *(_QWORD *)(v0 + 88) = v2;
  v3 = *(_QWORD *)(v1 + 104);
  *(_BYTE *)(v0 + 112) = *(_BYTE *)(v1 + 112);
  *(_QWORD *)(v0 + 104) = v3;
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + 120);
}

uint64_t sub_2489BA46C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BA4B8()
{
  return swift_release();
}

uint64_t sub_2489BA4C0()
{
  return swift_getObjectType();
}

void sub_2489BA4CC(_QWORD *a1)
{
  void (*v1)(uint64_t);

  sub_2489F6410(a1, v1);
}

uint64_t sub_2489BA4D4()
{
  return swift_beginAccess();
}

uint64_t sub_2489BA4E8@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 72) = v4;
  *(_QWORD *)(v5 - 160) = a3;
  *(_QWORD *)(v5 - 152) = result;
  *(_DWORD *)(v5 - 172) = a2;
  *(_QWORD *)(v5 - 200) = a4;
  return result;
}

uint64_t sub_2489BA500()
{
  return sub_248A44FD0();
}

uint64_t sub_2489BA510()
{
  return sub_248A4557C();
}

uint64_t sub_2489BA518()
{
  return _ss8DurationV10TipKitCoreE7secondsSivg_0();
}

unint64_t sub_2489BA524()
{
  return sub_2489C974C();
}

uint64_t sub_2489BA530()
{
  return swift_retain();
}

uint64_t sub_2489BA538@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

unint64_t sub_2489BA544()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489C28D0(*(_QWORD *)(v1 - 72), v0);
}

uint64_t sub_2489BA550()
{
  return swift_dynamicCast();
}

uint64_t sub_2489BA580(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 72);
}

uint64_t sub_2489BA59C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_248A45804();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_248A453F0();
      sub_2489BA64C(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2489BA64C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;

  v7 = *v3;
  sub_248A45F90();
  sub_248A453F0();
  sub_248A45540();
  v8 = sub_248A45FD8();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  sub_2489BFC1C();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v7 + 48);
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (sub_2489C1D2C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      sub_248A453F0();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      sub_2489BFC1C();
      if ((v19 & 1) == 0)
        break;
      v20 = (_QWORD *)(v12 + 16 * v10);
      v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_2489C1D2C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v3;
  *v3 = 0x8000000000000000;
  sub_248A453F0();
  sub_2489BA9E4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t _s10TipKitCore14AtomicPropertyC9removeAll15keepingCapacityySb_tSDyqd__qd_0_GRszSHRd__s8SendableRd__sAGRd_0_r0_lFfA__0()
{
  return 0;
}

void *sub_2489BA7D8()
{
  size_t v0;

  return malloc(v0);
}

uint64_t sub_2489BA7EC()
{
  return sub_248A453F0();
}

uint64_t sub_2489BA7F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489BA800()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BA820()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BA850()
{
  return swift_task_switch();
}

uint64_t sub_2489BA858()
{
  return sub_248A44F58();
}

uint64_t sub_2489BA860()
{
  return swift_allocObject();
}

uint64_t sub_2489BA87C()
{
  return swift_release();
}

uint64_t sub_2489BA884()
{
  uint64_t v0;

  return sub_2489EE974(v0);
}

uint64_t sub_2489BA88C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t sub_2489BA8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489BE7E0(a1, a2, 1, v2);
}

uint64_t sub_2489BA8C0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_2489BA8D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 32) = a1;
  *(_QWORD *)(v2 - 168) = v1;
  return sub_248A456A8();
}

uint64_t sub_2489BA8FC()
{
  return swift_deallocObject();
}

uint64_t sub_2489BA90C()
{
  return sub_248A453F0();
}

uint64_t sub_2489BA914()
{
  return sub_248A45BAC();
}

uint64_t sub_2489BA934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_2489BA944()
{
  return sub_248A4557C();
}

uint64_t sub_2489BA950(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(a1, 1, v1);
}

void sub_2489BA95C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, id a17)
{
  sub_2489BDB94(a15, a16);

}

uint64_t sub_2489BA974()
{
  return swift_endAccess();
}

uint64_t sub_2489BA97C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1 - 96, a1);
}

uint64_t sub_2489BA990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(a1, v2, v1);
}

uint64_t sub_2489BA9A0()
{
  return sub_248A453F0();
}

uint64_t sub_2489BA9B0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489BA9C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 72), v0);
}

uint64_t sub_2489BA9D8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_2489BA9E4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_248A43BC0();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_248A43E98();
      goto LABEL_22;
    }
    sub_248A44048();
  }
  v11 = *v4;
  sub_248A45F90();
  sub_248A45540();
  result = sub_248A45FD8();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_248A45DBC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_248A45F24();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_248A45DBC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t Array.first<A>(of:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v4 = sub_248A45924();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = sub_248A45708();
  MEMORY[0x2495A2D34](MEMORY[0x24BEE12C8], v6);
  sub_248A45618();
  v7 = swift_dynamicCast();
  return sub_2489BE7E0(a2, v7 ^ 1u, 1, a1);
}

uint64_t static Configuration.shared.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  char v12;
  char v13;

  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BFA10();
  v2 = qword_254464F18;
  v4 = qword_254464F30;
  v3 = qword_254464F38;
  v5 = byte_254464F40;
  v6 = byte_254464F41;
  v7 = byte_254464F42;
  v8 = off_254464F48;
  v9 = byte_254464F50;
  v10 = off_254464F58;
  v11 = word_254464F60;
  v12 = HIBYTE(word_254464F60);
  v13 = byte_254464F78;
  *(_QWORD *)a1 = qword_254464F10;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = xmmword_254464F20;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 49) = v6;
  *(_BYTE *)(a1 + 50) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 81) = v12;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)&qword_254464F68;
  *(_BYTE *)(a1 + 104) = v13;
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return sub_248A453F0();
}

uint64_t sub_2489BAD64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;

  sub_248A453F0();
  sub_248A453F0();
  v0 = sub_248A45588();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    while (1)
    {
      v4 = sub_248A45588();
      if (!v5)
        break;
      if (v2 == v4 && v3 == v5)
      {
        sub_2489BDA70();
        sub_2489BBC58();
      }
      else
      {
        v7 = sub_248A45DBC();
        sub_2489BDA70();
        sub_2489BBC58();
        if ((v7 & 1) == 0)
        {
          sub_2489BF9E8();
          sub_2489C2628();
          return 0;
        }
      }
      v2 = sub_248A45588();
      v3 = v8;
      if (!v8)
        goto LABEL_12;
    }
    sub_2489BDA70();
    sub_2489BF9E8();
    sub_2489C2628();
    return 1;
  }
  else
  {
LABEL_12:
    sub_2489BF9E8();
    sub_248A45588();
    v10 = v9;
    sub_2489C2628();
    v11 = v10 == 0;
    sub_2489BBC58();
  }
  return v11;
}

void sub_2489BAE90(_QWORD *a1)
{
  CoreRule.Predicate.Argument.encode(to:)(a1);
}

void CoreRule.Predicate.Argument.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = sub_2489C330C(&qword_254464388);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489C0054();
  v30 = v7;
  v8 = sub_2489C330C(&qword_254464398);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489BBC7C();
  v13 = v12 - v11;
  v14 = sub_2489C330C(&qword_254464390);
  v29 = *(_QWORD *)(v14 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_2489C0428();
  v17 = sub_2489C330C(&qword_254464380);
  v35 = *(_QWORD *)(v17 - 8);
  v36 = v17;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_2489BBC7C();
  v22 = v21 - v20;
  v23 = *(unsigned __int8 *)(v2 + 16);
  sub_2489BE100(a1, a1[3]);
  sub_2489C3DC4();
  sub_248A46008();
  if (v23)
  {
    if (v23 != 1)
    {
      sub_2489C09F8();
      sub_2489C1B68();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v30, v34);
      v27 = sub_2489C0B80();
      v28(v27);
      goto LABEL_7;
    }
    sub_2489C6BF8();
    sub_2489C1B68();
    sub_248A45D2C();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v13, v32);
    v24 = sub_2489C0B80();
  }
  else
  {
    sub_2489C6B04();
    sub_2489C1B68();
    sub_248A45D2C();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1, v14);
    v26 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v24 = v22;
    v25 = v36;
  }
  v26(v24, v25);
LABEL_7:
  sub_2489BA808();
}

unint64_t sub_2489BB0F8()
{
  unint64_t result;

  result = qword_2544637E0;
  if (!qword_2544637E0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A8DC, &_s14descr2519BBCF9C8ArgumentO20EvaluationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2544637E0);
  }
  return result;
}

void sub_2489BB134(char a1)
{
  uint64_t v2;
  _BYTE v3[40];
  uint64_t v4;

  sub_248A0475C();
  v4 = v2;
  v3[39] = a1;
  sub_2489C330C(&qword_2544642E8);
  sub_2489C330C(&qword_2544643C0);
  swift_dynamicCast();
  sub_248A2F3A0((uint64_t)v3, 0xD000000000000010, 0x8000000248A4FF50);
  sub_248A0480C();
  sub_2489BA8A4();
}

void sub_2489BB1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  CoreTip.ConstellationText.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void CoreTip.ConstellationText.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[18];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  sub_2489BED74();
  v12 = v11;
  v14 = v13;
  v15 = sub_2489C330C(&qword_254463C90);
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_2489BE100(v12, v12[3]);
  sub_2489BB7D4();
  sub_248A45FF0();
  if (v10)
  {
    v19 = 0;
  }
  else
  {
    v17 = v14;
    sub_2489BB798();
    sub_248A45CD8();
    v18 = v43;
    LOBYTE(v43) = 1;
    v31 = sub_248A45C84();
    LOBYTE(v42[0]) = 2;
    v21 = v20;
    v22 = sub_2489BB75C();
    sub_248A453F0();
    sub_2489C5F18();
    if (!v22)
    {
      v25 = v18;
      v26 = v43;
      v27 = v21;
      v40 = v44;
      v41 = v45;
      v32 = v48;
      v29 = v49;
      v30 = v47;
      v28 = v50;
      v38 = v52;
      v39 = v46;
      v36 = v51;
      v37 = v53;
      sub_2489C330C(&qword_254463C48);
      v61 = 3;
      v33 = v56;
      v23 = v51;
      v34 = v55;
      v35 = v54;
      v24 = v43;
      sub_2489BB634(v43, v44);
      sub_2489BB6F4(&qword_254463C50, (uint64_t (*)(void))sub_2489CAD6C, MEMORY[0x24BEE12D0]);
      sub_2489C5F18();
      sub_2489BFE6C();
      LOBYTE(v42[0]) = v25;
      v42[1] = v31;
      v42[2] = v27;
      v42[3] = v24;
      v42[4] = v40;
      v42[5] = v41;
      v42[6] = v39;
      v42[7] = v30;
      v42[8] = v32;
      v42[9] = v29;
      v42[10] = v28;
      v42[11] = v23;
      v42[12] = v38;
      v42[13] = v37;
      v42[14] = v35;
      v42[15] = v34;
      v42[16] = v33;
      v42[17] = a10;
      sub_2489E9F48((uint64_t)v42);
      sub_2489BB694(v26, v40);
      sub_2489BF654();
      memcpy(v17, v42, 0x90uLL);
      sub_2489C0884();
      LOBYTE(v43) = v25;
      v44 = v31;
      v45 = v33;
      v46 = v26;
      v47 = v40;
      v48 = v41;
      v49 = v39;
      v50 = v30;
      v51 = v32;
      v52 = v29;
      v53 = v28;
      v54 = v36;
      v55 = v38;
      v56 = v37;
      v57 = v35;
      v58 = v34;
      v59 = v33;
      v60 = a10;
      sub_248A0E4AC((uint64_t)&v43);
      goto LABEL_6;
    }
    sub_2489BFE6C();
    swift_bridgeObjectRelease();
    v19 = 1;
  }
  sub_2489C0884();
  if (v19)
    swift_bridgeObjectRelease();
LABEL_6:
  sub_2489BA808();
}

uint64_t sub_2489BB634(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    return sub_248A453F0();
  }
  return result;
}

uint64_t sub_2489BB694(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2489BB6F4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_2489BCD7C(&qword_254463C48);
    v8 = a2();
    result = MEMORY[0x2495A2D34](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2489BB75C()
{
  unint64_t result;

  result = qword_254463BE0;
  if (!qword_254463BE0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationContent.Attributes, &type metadata for CoreTip.ConstellationContent.Attributes);
    atomic_store(result, (unint64_t *)&qword_254463BE0);
  }
  return result;
}

unint64_t sub_2489BB798()
{
  unint64_t result;

  result = qword_254463BA8;
  if (!qword_254463BA8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.ContentType, &type metadata for CoreTip.ConstellationText.ContentType);
    atomic_store(result, (unint64_t *)&qword_254463BA8);
  }
  return result;
}

unint64_t sub_2489BB7D4()
{
  unint64_t result;

  result = qword_254463B88;
  if (!qword_254463B88)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CBA4, &_s17ConstellationTextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463B88);
  }
  return result;
}

uint64_t sub_2489BB810@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return CoreRule.Predicate.Operator.init(from:)(a1, a2);
}

uint64_t CoreRule.Predicate.Operator.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char v5;
  char v7;
  _QWORD v8[4];

  sub_2489BE100(a1, a1[3]);
  sub_2489C6CE8();
  sub_248A45FE4();
  if (!v2)
  {
    sub_2489BE100(v8, v8[3]);
    sub_2489C6CE8();
    sub_248A45DD4();
    sub_248A45504();
    CoreRule.Predicate.Operator.init(rawValue:)(&v7);
    v5 = v7;
    if (v7 == 13)
    {
      sub_248A45A74();
      sub_248A4557C();
      sub_248A4557C();
      swift_bridgeObjectRelease();
      sub_248A45AB0();
      sub_2489BF740();
      sub_248A45A98();
      swift_bridgeObjectRelease();
      swift_willThrow();
      sub_2489BCE44((uint64_t)v8);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2489BCE44((uint64_t)v8);
      *a2 = v5;
    }
  }
  return sub_2489BCE44((uint64_t)a1);
}

void CoreRule.Predicate.Operator.init(rawValue:)(char *a1@<X8>)
{
  unint64_t v2;
  char v3;

  v2 = sub_248A45C60();
  sub_2489BDA70();
  v3 = 13;
  if (v2 < 0xD)
    v3 = v2;
  *a1 = v3;
  sub_2489B6AF4();
}

void AtomicProperty.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[2];
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = a1;
  sub_2489C38F4((void (*)(uint64_t))sub_2489BBDB8, (uint64_t)&v3, v2, v4, MEMORY[0x24BEE4AE0] + 8);
  sub_2489C1464();
  sub_2489BFF78();
}

void AtomicProperty.wrappedValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v2[4];

  sub_2489C6BA0();
  v2[2] = v0;
  sub_2489C38F4((void (*)(uint64_t))sub_2489BBD84, (uint64_t)v2, v1, v0, v0);
}

void static CoreRuleProtocol.makeIdentifier(tipIdentifier:predicate:subject:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;

  sub_248A453F0();
  sub_2489BFFCC();
  v5 = a4[3];
  v6 = a4[4];
  sub_2489BE100(a4, v5);
  sub_2489BBC08(v5, v6);
  __asm { BR              X10 }
}

uint64_t sub_2489BBAF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_2489BFFCC();
  v1 = v0[3];
  v2 = v0[4];
  sub_2489BE100(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_2489BFFCC();
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2489BBC08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void static CoreParameterProtocol.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void static CoreEventProtocol.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2489BBC44@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2489D00AC(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_2489BBC58()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BBC60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BBC8C()
{
  uint64_t *v0;

  return sub_2489C330C(v0);
}

uint64_t sub_2489BBC94()
{
  return sub_248A453F0();
}

uint64_t sub_2489BBCA8()
{
  return swift_release();
}

uint64_t sub_2489BBCB0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_2489BBCBC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489BE7E0(v1, 0, 1, v0);
}

uint64_t sub_2489BBCD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2489BE7E0(v1, 0, 1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
}

uint64_t sub_2489BBD04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_248A45924();
}

uint64_t sub_2489BBD14()
{
  return sub_248A45F84();
}

uint64_t sub_2489BBD28()
{
  return swift_task_dealloc();
}

uint64_t sub_2489BBD30()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489BE834(v1, 1, v0);
}

uint64_t sub_2489BBD40()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = *(_QWORD *)(v0 - 264);
  *(_BYTE *)(v0 - 96) = *(_DWORD *)(v0 - 252) & 1;
  return swift_setAtWritableKeyPath();
}

void sub_2489BBD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 208) = (char *)&a9 - v9;
}

void sub_2489BBD84(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 16))(a2, a1);
  sub_2489C50E8();
}

uint64_t sub_2489BBDB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
}

uint64_t sub_2489BBE14()
{
  return sub_2489BBE30();
}

uint64_t sub_2489BBE30()
{
  sub_248A45828();
  return sub_248A4581C();
}

uint64_t sub_2489BBE88@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_2489BBEA4(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2489BBEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, a3);
  sub_248A45828();
  result = sub_248A45810();
  *a4 = result & 1;
  return result;
}

uint64_t sub_2489BBF8C(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BBFA4(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_2489BBFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_248A45708();
  return sub_248A456FC();
}

uint64_t sub_2489BC02C()
{
  return sub_2489D4640();
}

uint64_t sub_2489BC040()
{
  void *v0;
  void *v1;
  id v2;

  if (!sub_2489BC0A8())
    return 2;
  v1 = (void *)sub_248A454BC();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return (uint64_t)v2;
}

BOOL sub_2489BC0A8()
{
  void *v0;
  void *v1;
  id v2;
  _OWORD v4[2];

  v1 = (void *)sub_248A454BC();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_248A459C0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_2489BE124((uint64_t)v4);
  return v2 != 0;
}

uint64_t sub_2489BC134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489BC17C()
{
  void *v0;
  void *v1;
  double v2;
  long double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!sub_2489BC0A8())
    return 0;
  v1 = (void *)sub_248A454BC();
  objc_msgSend(v0, sel_doubleForKey_, v1);
  v3 = v2;

  v4 = Double.seconds.getter(v3);
  v5 = sub_2489D9080(v4);
  v7 = v6;
  fmod(v3, 1.0);
  v8 = sub_248A4602C();
  return MEMORY[0x2495A27B8](v5, v7, v8, v9);
}

uint64_t sub_2489BC23C()
{
  uint64_t result;

  result = sub_2489BC258();
  if (result)
    return sub_2489BA59C(result);
  return result;
}

uint64_t sub_2489BC258()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;

  v1 = (void *)sub_248A454BC();
  v2 = objc_msgSend(v0, sel_arrayForKey_, v1);

  if (v2)
  {
    v3 = sub_248A4569C();

    v4 = sub_248A4307C(v3);
    swift_bridgeObjectRelease();
    if (v4)
      return v4;
  }
  v5 = (void *)sub_248A454BC();
  v6 = objc_msgSend(v0, sel_stringForKey_, v5);

  if (!v6)
    return 0;
  sub_248A454E0();

  sub_2489C9788();
  v7 = sub_248A4596C();
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
    v11 = MEMORY[0x24BEE4AF8];
LABEL_18:
    swift_bridgeObjectRelease();
    sub_2489D8BB0(1, v11);
    v24 = v23;
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = (uint64_t *)(v24 + 40);
      v27 = MEMORY[0x24BEE4AF8];
      do
      {
        v28 = *(v26 - 1);
        v29 = *v26;
        v30 = v28 == 44 && v29 == 0xE100000000000000;
        if (!v30 && (sub_248A45DBC() & 1) == 0)
        {
          sub_248A453F0();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_2489C74D8();
          v31 = *(_QWORD *)(v27 + 16);
          if (v31 >= *(_QWORD *)(v27 + 24) >> 1)
            sub_2489C74D8();
          *(_QWORD *)(v27 + 16) = v31 + 1;
          v32 = v27 + 16 * v31;
          *(_QWORD *)(v32 + 32) = v28;
          *(_QWORD *)(v32 + 40) = v29;
        }
        v26 += 2;
        --v25;
      }
      while (v25);
    }
    else
    {
      v27 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    v4 = sub_248A431AC(v27);
    swift_release();
    return v4;
  }
  result = sub_248A453F0();
  v10 = (uint64_t *)(v7 + 40);
  v11 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v12 = *(_QWORD *)(v11 + 16);
    if (__OFADD__(v12, 2))
      break;
    v14 = *(v10 - 1);
    v13 = *v10;
    sub_248A453F0();
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + 2 > *(_QWORD *)(v11 + 24) >> 1)
    {
      sub_2489C3420();
      v11 = v15;
    }
    v16 = *(_QWORD *)(v11 + 16);
    v17 = *(_QWORD *)(v11 + 24) >> 1;
    v18 = v16 + 1;
    sub_248A453F0();
    if (v17 <= v16)
    {
      sub_2489C3420();
      v11 = v21;
      v17 = *(_QWORD *)(v21 + 24) >> 1;
    }
    *(_QWORD *)(v11 + 16) = v18;
    v19 = v11 + 16 * v16;
    *(_QWORD *)(v19 + 32) = v14;
    *(_QWORD *)(v19 + 40) = v13;
    if ((uint64_t)v17 < (uint64_t)(v16 + 2))
    {
      sub_2489C3420();
      v11 = v22;
    }
    v10 += 2;
    *(_QWORD *)(v11 + 16) = v16 + 2;
    v20 = v11 + 16 * v18;
    *(_QWORD *)(v20 + 32) = 44;
    *(_QWORD *)(v20 + 40) = 0xE100000000000000;
    result = swift_bridgeObjectRelease();
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

id sub_2489BC5D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = CoreRule.Predicate.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

id CoreRule.Predicate.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CoreRule.Predicate.init(from:)(a1);
}

uint64_t CoreRule.Predicate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = sub_2489C330C(&qword_254464378);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489BE100(a1, a1[3]);
  sub_2489BCE08();
  sub_248A46008();
  LOBYTE(v14) = 0;
  sub_248A45D2C();
  if (!v2)
  {
    v10 = *(_BYTE *)(v3 + OBJC_IVAR___Predicate_argument + 16);
    v14 = *(_OWORD *)(v3 + OBJC_IVAR___Predicate_argument);
    v15 = v10;
    v13 = 1;
    sub_2489BCFCC();
    sub_2489BFAB0();
    LOBYTE(v14) = *(_BYTE *)(v3 + OBJC_IVAR___Predicate_operation);
    v13 = 2;
    sub_2489BCF90();
    sub_2489BFAB0();
    v14 = *(_OWORD *)(v3 + OBJC_IVAR___Predicate_rawdata);
    v13 = 3;
    sub_2489BD008();
    sub_2489C18D4();
    LOBYTE(v14) = 4;
    sub_2489BCF54();
    sub_2489C18D4();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + OBJC_IVAR___Predicate_queries);
    v13 = 5;
    sub_2489C330C(&qword_2544642D0);
    sub_2489BCD18(&qword_2544642D8, &qword_2544642D0, (uint64_t (*)(void))sub_2489CB4D0, MEMORY[0x24BEE12A0]);
    sub_2489C6CD4();
    sub_2489C18D4();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + OBJC_IVAR___Predicate_subpredicates);
    v13 = 6;
    sub_2489C330C(&qword_2544642B8);
    sub_2489BCD18(&qword_2544642C0, &qword_2544642B8, (uint64_t (*)(void))sub_2489CB558, MEMORY[0x24BEE12A0]);
    sub_2489C6CD4();
    sub_2489C18D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id CoreRule.Predicate.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char *v12;
  objc_class *ObjectType;
  objc_super v15;
  __int128 v16;
  char v17;
  char v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_2489C330C(&qword_254464350);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BE100(a1, a1[3]);
  sub_2489BCE08();
  v6 = v1;
  sub_248A45FF0();
  if (v2)
  {
    v7 = 0;
    sub_2489C0694();

    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v16) = 0;
    v8 = sub_248A45CB4();
    v9 = (uint64_t *)&v6[OBJC_IVAR___Predicate_id];
    *v9 = v8;
    v9[1] = v10;
    v18 = 1;
    sub_2489BCEDC();
    sub_2489BFD98();
    v11 = v17;
    v12 = &v6[OBJC_IVAR___Predicate_argument];
    *(_OWORD *)v12 = v16;
    v12[16] = v11;
    v18 = 2;
    sub_2489BCEA0();
    sub_2489BFD98();
    v6[OBJC_IVAR___Predicate_operation] = v16;
    v18 = 3;
    sub_2489BCF18();
    sub_2489C00D4();
    *(_OWORD *)&v6[OBJC_IVAR___Predicate_rawdata] = v16;
    v18 = 4;
    sub_2489BCE64();
    sub_2489C00D4();
    sub_2489BCDC0((uint64_t)&v16, (uint64_t)&v6[OBJC_IVAR___Predicate_value]);
    sub_2489C330C(&qword_2544642D0);
    v18 = 5;
    sub_2489BCD18(&qword_2544642E0, &qword_2544642D0, (uint64_t (*)(void))sub_2489CB494, MEMORY[0x24BEE12D0]);
    sub_2489C23BC();
    *(_QWORD *)&v6[OBJC_IVAR___Predicate_queries] = v16;
    sub_2489C330C(&qword_2544642B8);
    v18 = 6;
    sub_2489BCD18(&qword_2544642C8, &qword_2544642B8, (uint64_t (*)(void))sub_2489CB51C, MEMORY[0x24BEE12D0]);
    sub_2489C23BC();
    *(_QWORD *)&v6[OBJC_IVAR___Predicate_subpredicates] = v16;

    v15.receiver = v6;
    v15.super_class = ObjectType;
    v7 = objc_msgSendSuper2(&v15, sel_init);
    sub_2489C3A70();
    sub_2489C0694();
  }
  return v7;
}

uint64_t sub_2489BCD18(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_2489BCD7C(a2);
    v9 = a3();
    result = MEMORY[0x2495A2D34](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2489BCD7C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2495A2D28](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2489BCDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2489BCE08()
{
  unint64_t result;

  result = qword_254464120;
  if (!qword_254464120)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A46C, &_s9PredicateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464120);
  }
  return result;
}

uint64_t sub_2489BCE44(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_2489BCE64()
{
  unint64_t result;

  result = qword_2544641E0;
  if (!qword_2544641E0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46CF8, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2544641E0);
  }
  return result;
}

unint64_t sub_2489BCEA0()
{
  unint64_t result;

  result = qword_2544641C0;
  if (!qword_2544641C0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Operator, &type metadata for CoreRule.Predicate.Operator);
    atomic_store(result, (unint64_t *)&qword_2544641C0);
  }
  return result;
}

unint64_t sub_2489BCEDC()
{
  unint64_t result;

  result = qword_2544641A8;
  if (!qword_2544641A8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Argument, &type metadata for CoreRule.Predicate.Argument);
    atomic_store(result, (unint64_t *)&qword_2544641A8);
  }
  return result;
}

unint64_t sub_2489BCF18()
{
  unint64_t result;

  result = qword_2544640E8;
  if (!qword_2544640E8)
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2544640E8);
  }
  return result;
}

unint64_t sub_2489BCF54()
{
  unint64_t result;

  result = qword_2544641D8;
  if (!qword_2544641D8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46D20, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2544641D8);
  }
  return result;
}

unint64_t sub_2489BCF90()
{
  unint64_t result;

  result = qword_2544641B0;
  if (!qword_2544641B0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Operator, &type metadata for CoreRule.Predicate.Operator);
    atomic_store(result, (unint64_t *)&qword_2544641B0);
  }
  return result;
}

unint64_t sub_2489BCFCC()
{
  unint64_t result;

  result = qword_2544641A0;
  if (!qword_2544641A0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Argument, &type metadata for CoreRule.Predicate.Argument);
    atomic_store(result, (unint64_t *)&qword_2544641A0);
  }
  return result;
}

unint64_t sub_2489BD008()
{
  unint64_t result;

  result = qword_2544640E0;
  if (!qword_2544640E0)
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2544640E0);
  }
  return result;
}

uint64_t sub_2489BD044()
{
  uint64_t v0;

  sub_2489C330C(&qword_2544647D8);
  sub_248A454F8();
  v0 = sub_248A454BC();
  swift_bridgeObjectRelease();
  return v0;
}

void type metadata accessor for NSValueTransformerName(uint64_t a1)
{
  sub_2489BD38C(a1, &qword_2544647E0);
}

uint64_t sub_2489BD0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 0;
  sub_248A454E0();
  if (v3 == sub_2489C1CB8() && v2 == v5)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v7 = sub_2489C3CD8();
  sub_248A453F0();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_7:
    sub_2489BDA70();
    return 1;
  }
  if (v4 == 1)
  {
LABEL_17:
    sub_2489BDA70();
    return 0;
  }
  v9 = 5;
  while (1)
  {
    v10 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
      break;
    sub_248A454E0();
    if (v7 == sub_2489C1CB8() && v2 == v11)
    {
      sub_2489BDA70();
      goto LABEL_20;
    }
    v7 = sub_2489C3CD8();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      goto LABEL_7;
    ++v9;
    if (v10 == v4)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

id sub_2489BD1AC()
{
  return sub_2489BD1CC();
}

id sub_2489BD1CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_2489BD200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2495A2CB0](a1, v6, a5);
}

uint64_t type metadata accessor for AtomicProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489BD200(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AtomicProperty);
}

uint64_t AtomicProperty.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  AtomicProperty.init(wrappedValue:)(a1);
  return v2;
}

uint64_t sub_2489BD278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  v7 = sub_2489BD308((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

uint64_t sub_2489BD308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for os_unfair_lock_s(255);
  sub_248A45AE0();
  v4 = sub_248A45AD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

void sub_2489BD38C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2489BD38C(a1, &qword_254464FB0);
}

void sub_2489BD3E4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v2 = sub_248A44DFC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  sub_2489BBC7C();
  v7 = v6 - v5;
  v8 = sub_248A44EB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  sub_2489BBC7C();
  v13 = v12 - v11;
  if (qword_254464E68 != -1)
    swift_once();
  if (byte_254464E60 == 1)
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    URL.init(groupIdentifier:fileManager:)(v14, v13);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v7, *MEMORY[0x24BDCD798], v2);
    sub_2489C9788();
    sub_248A44E98();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
    sub_2489BE7E0(a1, 0, 1, v8);
    sub_2489B71E4();
  }
  else
  {
    sub_2489BE7E0(a1, 1, 1, v8);
  }
}

void URL.init(groupIdentifier:fileManager:)(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  _QWORD *v17;
  void *v19;

  v3 = sub_248A44EB0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_2489BBC7C();
  v8 = v7 - v6;
  sub_2489C330C(&qword_254464D40);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489BBC7C();
  v13 = v12 - v11;
  v14 = (void *)sub_248A454BC();
  v19 = a1;
  v15 = objc_msgSend(a1, sel_containerURLForSecurityApplicationGroupIdentifier_, v14);

  if (v15)
  {
    sub_248A44E68();

    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v16(v13, v8, v3);
    sub_2489C02C4(v13, 0);
    if (sub_2489BE834(v13, 1, v3) != 1)
    {

      swift_bridgeObjectRelease();
      v16(a2, v13, v3);
      return;
    }
  }
  else
  {
    sub_2489C02C4(v13, 1);
  }
  sub_2489C3FDC(v13);
  sub_248A45A74();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_2489C9824();
  swift_allocError();
  *v17 = 0xD000000000000021;
  v17[1] = 0x8000000248A52410;
  swift_willThrow();

}

uint64_t sub_2489BD888()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1, 0);
}

uint64_t sub_2489BD894()
{
  return sub_248A453F0();
}

uint64_t sub_2489BD89C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2489BD8A8()
{
  return swift_getKeyPath();
}

uint64_t sub_2489BD8B0()
{
  return swift_beginAccess();
}

__n128 sub_2489BD8BC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void sub_2489BD8C8()
{
  JUMPOUT(0x2495A2200);
}

uint64_t sub_2489BD8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 176));
}

uint64_t sub_2489BD8E4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_2489BD8EC@<X0>(void (*a1)(_QWORD)@<X4>, _QWORD *a2@<X5>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_248A04098(v3, a1, a2, a3);
}

uint64_t sub_2489BD8FC()
{
  return swift_task_dealloc();
}

uint64_t sub_2489BD920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489BE7E0(a1, a2, 1, v2);
}

uint64_t sub_2489BD92C()
{
  return sub_248A45468();
}

uint64_t sub_2489BD93C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return sub_248A45954();
}

uint64_t sub_2489BD958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2489C401C(a1, a2);
  *(_QWORD *)(v2 - 104) = 0;
  *(_QWORD *)(v2 - 96) = 0xE000000000000000;
  return result;
}

uint64_t sub_2489BD978()
{
  return swift_task_dealloc();
}

uint64_t sub_2489BD980()
{
  uint64_t v0;

  return sub_2489D08D4(v0, *(_QWORD *)(v0 + 24));
}

_QWORD *sub_2489BD990()
{
  _QWORD *v0;

  return sub_2489DAF04(v0);
}

uint64_t sub_2489BD998(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v3;

  return sub_2489E3C6C(a1, v3, a3);
}

void sub_2489BD9A0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_2489BA29C(a1, v3, a3);
}

uint64_t sub_2489BD9A8()
{
  return sub_248A44FE8();
}

uint64_t sub_2489BD9B4()
{
  return swift_allocObject();
}

uint64_t sub_2489BD9C0()
{
  return CoreEventRecord.id.setter();
}

void sub_2489BD9CC(uint64_t a1)
{
  uint64_t *v1;

  sub_2489C4AD4(a1, v1);
}

uint64_t sub_2489BD9D4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_2489BD9E4()
{
  return swift_endAccess();
}

uint64_t sub_2489BD9EC()
{
  return sub_248A45924();
}

uint64_t sub_2489BD9F8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2489BDA04()
{
  uint64_t v0;

  return v0;
}

void sub_2489BDA2C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 80);
}

uint64_t sub_2489BDA40()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489BDA54()
{
  return swift_task_dealloc();
}

uint64_t sub_2489BDA5C()
{
  return sub_248A45FD8();
}

uint64_t sub_2489BDA64@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_2489BDA70()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BDA78()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 168) + 8))(v0, *(_QWORD *)(v1 - 160));
}

uint64_t sub_2489BDA88()
{
  uint64_t v0;

  return sub_2489EE974(v0);
}

uint64_t sub_2489BDA90()
{
  return sub_248A4557C();
}

uint64_t sub_2489BDAA0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2 - 104, v1);
}

uint64_t sub_2489BDAAC()
{
  return swift_allocObject();
}

uint64_t sub_2489BDAB8()
{
  char v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 272);
  *(_BYTE *)(v1 - 96) = v0 & 1;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489BDAE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_2489BDB7C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2489BDB94(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2489BE604(a1, a2);
  return a1;
}

uint64_t sub_2489BDBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_2489BE648(a1, (uint64_t)&v8);
  if (v9)
  {
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v4 = static DictionaryCoder.encode<A>(_:)();
      sub_2489B5D40(0, &qword_254464318);
      v9 = sub_2489C330C(&qword_2544643D8);
      v8 = v4;
      v5 = sub_2489BDDF4(&v8, 1);
      v7 = v6;
      sub_2489BCE44((uint64_t)&v8);
      if (v7 >> 60 != 15)
      {
        *(_QWORD *)(a2 + 24) = MEMORY[0x24BDCDDE8];
        result = sub_2489C15C4();
        *(_QWORD *)a2 = v5;
        *(_QWORD *)(a2 + 8) = v7;
        return result;
      }
      result = sub_2489C15C4();
    }
  }
  else
  {
    result = sub_2489BE124((uint64_t)&v8);
  }
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_2489BDDF4(_QWORD *a1, char a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v12[4];

  v12[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)objc_opt_self();
  sub_2489BE100(a1, a1[3]);
  v12[0] = 0;
  v5 = objc_msgSend(v4, sel_archivedDataWithRootObject_requiringSecureCoding_error_, sub_248A45DB0(), a2 & 1, v12);
  swift_unknownObjectRelease();
  v6 = v12[0];
  if (v5)
  {
    v7 = sub_248A44ED4();

  }
  else
  {
    v8 = v6;
    v9 = (void *)sub_248A44DCC();

    swift_willThrow();
    if (qword_2577A4DD0 != -1)
      swift_once();
    v10 = type metadata accessor for logger();
    sub_2489C401C(v10, (uint64_t)&unk_2577A5758);
    v12[0] = 0;
    v12[1] = (id)0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    sub_2489BE100(a1, a1[3]);
    sub_248A45D8C();
    sub_248A4557C();
    swift_getErrorValue();
    sub_248A45D8C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();

    return 0;
  }
  return v7;
}

id sub_2489BDFEC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, _OWORD *))
{
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _OWORD v15[2];
  _QWORD v16[3];
  uint64_t v17;

  if (a3)
  {
    v6 = a1;
    swift_unknownObjectRetain();
    sub_248A459C0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
    v7 = a1;
  }
  a4(v16, v15);

  sub_2489BE124((uint64_t)v15);
  v8 = v17;
  if (!v17)
    return 0;
  v9 = sub_2489BE100(v16, v17);
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v9, v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v12);
  v13 = (void *)sub_248A45DB0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  sub_2489BCE44((uint64_t)v16);
  return v13;
}

_QWORD *sub_2489BE100(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2489BE124(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2489C330C(&qword_254464AF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static DictionaryCoder.decode<A>(from:class:)(uint64_t a1)
{
  sub_2489C2EE8(a1);
  static DictionaryDecoder.decode<A>(from:class:)();
  return swift_bridgeObjectRelease();
}

uint64_t static DictionaryDecoder.decode<A>(from:class:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_248A453B4();
  v9[0] = 0;
  v2 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v1, 0, v9);

  v3 = v9[0];
  if (v2)
  {
    v4 = sub_248A44ED4();
    v6 = v5;

    sub_2489BE31C();
    return sub_2489BE604(v4, v6);
  }
  else
  {
    v8 = v3;
    sub_248A44DCC();

    return swift_willThrow();
  }
}

uint64_t sub_2489BE31C()
{
  sub_248A44BB0();
  sub_2489BED94();
  sub_248A44BA4();
  sub_248A44B98();
  return sub_2489C2558();
}

uint64_t sub_2489BE3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD v10[4];

  v4 = *v2;
  v5 = *MEMORY[0x24BEE4EA0];
  sub_2489BE648(a1, (uint64_t)v10);
  if (!v10[3])
  {
    result = sub_2489BE124((uint64_t)v10);
    goto LABEL_7;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_7:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v7 = v5 & v4;
  v8 = objc_msgSend((id)objc_opt_self(), sel_allowedTopLevelClasses);
  sub_2489C330C(&qword_2544643C8);
  sub_248A4569C();

  v9 = sub_248A2953C();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_2489C330C(&qword_2544643C0);
    v9 = sub_248A453C0();
  }
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(v7 + 80);
  static DictionaryCoder.decode<A>(from:class:)(v9);
  sub_2489C2510();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BE604(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2489BE648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2489BE690(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t static DictionaryCoder.encode<A>(_:)()
{
  return static DictionaryEncoder.encode<A>(_:)();
}

uint64_t sub_2489BE6F0()
{
  uint64_t v0;

  sub_248A44BE0();
  sub_2489BED94();
  sub_248A44BD4();
  sub_248A44BC8();
  sub_2489C1710();
  return v0;
}

uint64_t type metadata accessor for CoreDonationRecord()
{
  uint64_t result;

  result = qword_254464658;
  if (!qword_254464658)
    return swift_getSingletonMetadata();
  return result;
}

_BYTE *_s3KeyOwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t type metadata accessor for CoreParameterRecord()
{
  uint64_t result;

  result = qword_254464698;
  if (!qword_254464698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2489BE7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2489BE7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489BE834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_2489BE840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CoreRuleRecord()
{
  uint64_t result;

  result = qword_2544645D8;
  if (!qword_2544645D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2489BE8C0@<X0>(_BYTE *a1@<X8>)
{
  __int16 v2;
  __int16 v3;
  uint64_t result;
  char v5;
  _WORD v6[12];
  uint64_t v7;
  unint64_t v8;
  char v9;

  sub_248A04914();
  v3 = v2;
  v7 = MEMORY[0x24BEE3F30];
  v8 = sub_2489BE970();
  v6[0] = v3;
  result = sub_2489BEF24((uint64_t)v6, &v9);
  v5 = v9;
  if (v9 == 6)
    v5 = 0;
  *a1 = v5;
  return result;
}

void CoreRuleRecord.status.getter()
{
  __int16 v0;
  __int16 v1;
  _WORD v2[12];
  uint64_t v3;
  unint64_t v4;

  CoreRuleRecord.statusValue.getter();
  v1 = v0;
  v3 = MEMORY[0x24BEE3F30];
  v4 = sub_2489BE970();
  v2[0] = v1;
  sub_2489C0DFC((uint64_t)v2);
  sub_2489C4F7C();
}

unint64_t sub_2489BE970()
{
  unint64_t result;

  result = qword_2544643B8;
  if (!qword_2544643B8)
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE3F58], MEMORY[0x24BEE3F30]);
    atomic_store(result, (unint64_t *)&qword_2544643B8);
  }
  return result;
}

void sub_2489BE9AC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v2 = sub_248A2C914();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  sub_2489BEC94();
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BA4D4();
  if (byte_254464F78 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    sub_2489BEEE8();
    if (v5)
    {
      sub_248A2C938();
      if (v5)
      {
        sub_2489C330C(&qword_254464820);
        v6 = sub_2489BDAAC();
        *(_OWORD *)(v6 + 16) = xmmword_248A47480;
        sub_248A2A918(*v0);
        sub_248A4557C();
        swift_bridgeObjectRelease();
        sub_248A4557C();
        sub_248A2C9B0();
        *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v6 + 32) = 91;
        *(_QWORD *)(v6 + 40) = 0xE100000000000000;
        sub_2489BBD14();
        swift_bridgeObjectRelease();
      }
    }
  }
  v7 = sub_2489BEE68();
  sub_248A2C984((uint64_t)&v0[*(int *)(v7 + 20)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_2489BEE04();
  v8 = sub_248A2C97C();
  v9 = _s10TipKitCore3logyyAA6loggerV_So03os_D7_type_tanSSyXKtFfA0__0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)sub_2489C4FAC();
    sub_2489C4FAC();
    *(_DWORD *)v10 = 136315138;
    sub_248A453F0();
    sub_248A2C91C();
    sub_248A45954();
    sub_2489C61F8();
    _os_log_impl(&dword_2489B3000, v8, v9, "%s", v10, 0xCu);
    swift_arrayDestroy();
    sub_2489C0754();
  }

  sub_2489BD9F8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_2489B71E4();
}

uint64_t type metadata accessor for logger()
{
  uint64_t result;

  result = qword_254464F00;
  if (!qword_254464F00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2489BEC4C()
{
  return swift_release();
}

uint64_t sub_2489BEC54()
{
  return sub_248A45E10();
}

uint64_t sub_2489BEC70()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BEC8C()
{
  return sub_248A453F0();
}

uint64_t sub_2489BECAC()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BE7E0(v0, 0, 1, v1);
  return 0;
}

uint64_t sub_2489BECD4()
{
  return swift_retain();
}

uint64_t sub_2489BECE0@<X0>(void (*a1)(_QWORD)@<X4>, _QWORD *a2@<X5>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_248A04098(v3, a1, a2, a3);
}

uint64_t sub_2489BECF0()
{
  return sub_248A45D8C();
}

uint64_t sub_2489BED14(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_2489BED1C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 96) + 8))(*(_QWORD *)(v1 - 88), v0);
}

void sub_2489BED2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t sub_2489BED44()
{
  return sub_248A456D8();
}

uint64_t sub_2489BED54()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489BED6C(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  return sub_2489DAC50(a1, a2, a3, a4);
}

uint64_t sub_2489BED8C()
{
  return sub_248A453F0();
}

uint64_t sub_2489BED94()
{
  return swift_allocObject();
}

void sub_2489BEDA0()
{
  JUMPOUT(0x2495A2D34);
}

uint64_t sub_2489BEDAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return sub_248A453F0();
}

uint64_t sub_2489BEDB8(uint64_t a1, uint64_t *a2)
{
  return sub_2489C330C(a2);
}

void sub_2489BEDC4()
{
  sub_248A2FCF0();
}

uint64_t sub_2489BEDD4()
{
  return swift_release();
}

uint64_t sub_2489BEDE0()
{
  return swift_allocObject();
}

uint64_t sub_2489BEDF0()
{
  return type metadata accessor for DeviceProfile();
}

uint64_t sub_2489BEDF8()
{
  return sub_248A45924();
}

uint64_t sub_2489BEE04()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_2489BEE10()
{
  return swift_beginAccess();
}

void sub_2489BEE20(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2489BEE3C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 184) = result;
  *(_QWORD *)(v4 - 176) = a4;
  *(_QWORD *)(v4 - 192) = a3;
  *(_DWORD *)(v4 - 196) = a2;
  return result;
}

uint64_t sub_2489BEE50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_2489BEE5C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_2489BEE68()
{
  return type metadata accessor for logger();
}

uint64_t sub_2489BEE70()
{
  uint64_t v0;

  return sub_2489BCE44(v0);
}

uint64_t sub_2489BEE88()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BEE90()
{
  return swift_dynamicCastClass();
}

uint64_t sub_2489BEE9C()
{
  return sub_248A45324();
}

uint64_t sub_2489BEEA8()
{
  return 1970037110;
}

uint64_t sub_2489BEEC0()
{
  return sub_248A4557C();
}

void sub_2489BEED0(uint64_t a1)
{
  uint64_t *v1;

  sub_2489C4AF4(a1, v1);
}

uint64_t sub_2489BEED8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2489BEEF8()
{
  return swift_task_alloc();
}

uint64_t sub_2489BEF00()
{
  return swift_task_alloc();
}

uint64_t sub_2489BEF0C()
{
  return swift_release();
}

uint64_t sub_2489BEF1C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_2489BEF24@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t AssociatedTypeWitness;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  uint64_t v98[2];
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  _QWORD v110[3];
  uint64_t v111;
  uint64_t v112;

  sub_2489C1D3C(a1, (uint64_t)&v108);
  if (!v109)
  {
    sub_2489C1D84(a1);
    result = sub_2489C1D84((uint64_t)&v108);
    goto LABEL_36;
  }
  v105 = a1;
  v106 = a2;
  sub_2489B8F74(&v108, (uint64_t)v110);
  v4 = v111;
  v5 = v112;
  v6 = sub_2489BE100(v110, v111);
  v104 = v98;
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6, v6);
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = (char *)v98 - v9;
  (*(void (**)(char *))(v7 + 16))((char *)v98 - v9);
  v11 = sub_2489C1588();
  v12 = v11;
  v103 = v98;
  MEMORY[0x24BDAC7A8](v11, v13);
  sub_2489C18C8((uint64_t)v98 - v9);
  if ((v12 & 1) == 0)
  {
    sub_2489C3A68((uint64_t)v98 - v9);
    goto LABEL_24;
  }
  v14 = sub_2489C23B0();
  v15 = sub_2489C3A68((uint64_t)v98 - v9);
  if (v14 <= 64)
    goto LABEL_24;
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  sub_2489C1B34(v17, v18, v19, v20, v21, v22, v23, v24, v98[0]);
  *(_QWORD *)&v108 = 0x8000000000000000;
  if ((sub_2489C1588() & 1) == 0)
  {
    v102 = v98;
    v35 = sub_2489C1588();
    v36 = sub_2489C23B0();
    if ((v35 & 1) != 0)
    {
      if (v36 > 64)
      {
        sub_2489C0410(v36, v37, v38, v39, v40, v41, v42, v43, v98[0]);
        MEMORY[0x24BDAC7A8](v44, v45);
        sub_2489BFAA0();
        sub_2489BF620();
        sub_2489BFD7C();
        v46 = sub_2489C00A8();
        sub_2489C3A68(v35);
        result = sub_2489C3A68(v14);
        goto LABEL_14;
      }
      v101 = *(uint64_t **)(*(_QWORD *)(v5 + 24) + 16);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v100 = v98;
      MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v52);
      v98[0] = (uint64_t)v98 - v53;
      swift_getAssociatedConformanceWitness();
      v54 = sub_248A45F0C();
      v98[1] = (uint64_t)v98;
      MEMORY[0x24BDAC7A8](v54, v55);
      sub_2489BFAA0();
      v99 = v56;
      v58 = v57 - v56;
      sub_248A45DA4();
      LODWORD(v98[0]) = sub_2489C00A8();
      v59 = sub_2489C3A68(v58);
      sub_2489C0410(v59, v60, v61, v62, v63, v64, v65, v66, v98[0]);
      MEMORY[0x24BDAC7A8](v67, v68);
      v69 = (uint64_t)v98 - v99;
      sub_2489BF81C((uint64_t)v98 - v99, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      if ((v98[0] & 1) != 0)
        goto LABEL_39;
      v70 = v108;
      v71 = sub_2489C2704();
      result = sub_2489C3A68(v69);
      v50 = v71 < v70;
    }
    else
    {
      if (v36 >= 64)
      {
        sub_2489C3A68(v14);
        goto LABEL_24;
      }
      v49 = sub_2489C2704();
      result = sub_2489C3A68(v14);
      v50 = v49 < (uint64_t)v108;
    }
    if (v50)
      goto LABEL_40;
    goto LABEL_24;
  }
  v25 = sub_2489C23B0();
  if (v25 >= 64)
  {
    sub_2489C0410(v25, v26, v27, v28, v29, v30, v31, v32, v98[0]);
    MEMORY[0x24BDAC7A8](v47, v48);
    sub_2489BFAA0();
    v102 = v98;
    sub_2489BF620();
    sub_2489BFD7C();
    v46 = sub_2489C00A8();
    sub_2489C3A68((uint64_t)v98);
    result = sub_2489C3A68(v14);
LABEL_14:
    if ((v46 & 1) != 0)
      goto LABEL_40;
    goto LABEL_24;
  }
  v33 = sub_2489C2704();
  result = sub_2489C3A68(v14);
  if (v33 < (uint64_t)v108)
    goto LABEL_40;
LABEL_24:
  v72 = sub_2489C23B0();
  MEMORY[0x24BDAC7A8](v72, v73);
  sub_2489BFAA0();
  v76 = v74 - v75;
  sub_2489C18C8(v74 - v75);
  if (v72 < 65)
  {
    v72 = sub_2489C23B0();
    sub_2489C3A68(v76);
    if (v72 != 64 || (v77 = sub_2489C1588(), (v77 & 1) != 0))
    {
LABEL_35:
      v96 = sub_2489C2704();
      sub_2489C3A68((uint64_t)v10);
      sub_2489C1D84(v105);
      CoreRule.Category.init(rawValue:)(v96, (char *)&v108);
      v97 = v108;
      result = sub_2489BCE44((uint64_t)v110);
      a2 = v106;
      if (v97 != 6)
      {
LABEL_37:
        *a2 = v97;
        return result;
      }
LABEL_36:
      LOBYTE(v97) = 6;
      goto LABEL_37;
    }
  }
  else
  {
    v77 = sub_2489C3A68(v76);
  }
  v101 = v98;
  v102 = v98;
  v79 = MEMORY[0x24BDAC7A8](v77, v78);
  sub_2489C1B34(v79, v80, v81, v82, v83, v84, v85, v86, v98[0]);
  *(_QWORD *)&v108 = 0x7FFFFFFFFFFFFFFFLL;
  v87 = sub_2489C1588();
  v88 = sub_2489C23B0();
  if ((v87 & 1) == 0)
  {
    if (v88 > 63)
    {
      v107 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x24BDAC7A8](v88, v89);
      v93 = (char *)v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      v94 = sub_2489BF81C((uint64_t)v93, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      MEMORY[0x24BDAC7A8](v94, v95);
      sub_2489C974C();
      sub_2489BFD7C();
      v69 = sub_248A45498();
      sub_2489C3A68((uint64_t)v93);
      sub_2489C3A68((uint64_t)v93);
      goto LABEL_34;
    }
LABEL_32:
    sub_2489C2704();
    sub_2489C3A68(v72);
    goto LABEL_35;
  }
  if (v88 <= 64)
    goto LABEL_32;
  MEMORY[0x24BDAC7A8](v88, v89);
  sub_2489BFAA0();
  v92 = v90 - v91;
  sub_2489C974C();
  sub_2489BFD7C();
  v69 = sub_248A45498();
  sub_2489C3A68(v92);
  sub_2489C3A68(v72);
LABEL_34:
  if ((v69 & 1) == 0)
    goto LABEL_35;
  __break(1u);
LABEL_39:
  result = sub_2489C3A68(v69);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2489BF580()
{
  uint64_t v0;

  return v0;
}

void *sub_2489BF59C()
{
  return malloc(0x30uLL);
}

uint64_t sub_2489BF5B8()
{
  return sub_248A454B0();
}

uint64_t sub_2489BF5C4()
{
  return sub_248A453F0();
}

uint64_t sub_2489BF5CC()
{
  return sub_248A44FD0();
}

uint64_t sub_2489BF5DC()
{
  return sub_248A453F0();
}

uint64_t sub_2489BF5F0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489BF604()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = v0;
  return sub_248A456A8();
}

uint64_t sub_2489BF610()
{
  return swift_allocObject();
}

unint64_t sub_2489BF620()
{
  return sub_2489C974C();
}

uint64_t sub_2489BF62C()
{
  return swift_unknownObjectRelease();
}

uint64_t *sub_2489BF634@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  a6 = *(_QWORD *)(v6 + a1 + 8);
  return sub_2489BE690(&a3);
}

uint64_t sub_2489BF648(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_2489BF654()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BF664()
{
  return sub_248A45F9C();
}

uint64_t sub_2489BF670(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489BF684()
{
  return swift_setAtReferenceWritableKeyPath();
}

void sub_2489BF68C()
{
  type metadata accessor for CFBundle(0);
}

uint64_t sub_2489BF694()
{
  return sub_248A4557C();
}

uint64_t sub_2489BF6A8(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(a1, 1, v1);
}

uint64_t sub_2489BF6B4()
{
  uint64_t v0;

  return v0 - 160;
}

uint64_t sub_2489BF6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_2489BF6EC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248A1D7C4(v1, v0);
}

uint64_t sub_2489BF70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t sub_2489BF71C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_2489BF724(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_2489BF740()
{
  return swift_allocError();
}

_QWORD *sub_2489BF74C(_QWORD *a1, uint64_t a2)
{
  return sub_2489BE100(a1, a2);
}

void sub_2489BF760()
{
  sub_2489BF93C();
}

void sub_2489BF76C()
{
  void *v0;

  free(v0);
}

unint64_t sub_2489BF774()
{
  return sub_2489D6818();
}

uint64_t sub_2489BF77C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_2489BF788()
{
  return swift_task_switch();
}

uint64_t sub_2489BF794(uint64_t a1)
{
  _QWORD *v1;

  v1[54] = a1;
  v1[37] = 0;
  v1[38] = 0xE000000000000000;
  return sub_248A45A74();
}

uint64_t sub_2489BF7AC()
{
  return swift_dynamicCast();
}

uint64_t sub_2489BF7BC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_2489BF7D0()
{
  return sub_248A450C0();
}

uint64_t sub_2489BF7E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489BF7F0()
{
  return swift_release();
}

uint64_t sub_2489BF7F8()
{
  return sub_248A450A8();
}

uint64_t sub_2489BF810()
{
  return sub_248A4557C();
}

uint64_t sub_2489BF81C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_2489BF828()
{
  return sub_248A4557C();
}

uint64_t sub_2489BF838()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2489FD76C(v1, v0);
}

uint64_t sub_2489BF844(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_2489C32D0(v2 - 160, a2);
}

uint64_t sub_2489BF84C()
{
  return sub_248A453F0();
}

uint64_t sub_2489BF87C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_2489BF88C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489BF898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2489BE834(a1, a2, a3);
}

uint64_t sub_2489BF8AC()
{
  return sub_248A45924();
}

uint64_t sub_2489BF8B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BF8C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BF8D4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_248A1D7C4(v1, v0);
}

uint64_t sub_2489BF8F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_2489BF918()
{
  return sub_248A450C0();
}

uint64_t sub_2489BF930(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_2489BF93C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_2489BBC9C();
  if ((v2 & 1) != 0)
  {
    sub_2489C2684();
    if (v3 != v4)
    {
      sub_2489C09B4();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  sub_2489C037C();
  if (v1)
  {
    sub_2489C330C(&qword_254464B98);
    v5 = (const void *)sub_2489BA860();
    v6 = j__malloc_size(v5);
    sub_2489C629C(v6 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_2489C5038();
    sub_2489C0C84(v7, v8, v9);
    sub_2489BFFE0();
  }
  else
  {
    v10 = sub_2489C186C();
    sub_2489C0D08(v10, v11, v12, v13);
  }
  sub_2489B6AF4();
}

uint64_t sub_2489BF9E0()
{
  return swift_dynamicCast();
}

uint64_t sub_2489BF9E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BF9F0()
{
  return sub_248A45924();
}

void sub_2489BF9F8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2489D6100(a1, v1, v2);
}

uint64_t sub_2489BFA04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BFA10()
{
  return swift_beginAccess();
}

uint64_t sub_2489BFA2C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_2489BFA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489BFA4C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 232), *(_QWORD *)(v1 - 224));
}

uint64_t sub_2489BFA58()
{
  return swift_task_switch();
}

uint64_t sub_2489BFA64()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = *(_DWORD *)(v0 - 172);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489BFA80()
{
  return swift_beginAccess();
}

uint64_t sub_2489BFA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_2489BE648(a1, (uint64_t)&a9);
}

uint64_t sub_2489BFAB0()
{
  return sub_248A45D50();
}

uint64_t sub_2489BFAC8(uint64_t a1, ...)
{
  _OWORD *v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_2489FEE64(0, (char *)(v2 - 33), (uint64_t)va, v1);
}

uint64_t *sub_2489BFAE0(uint64_t a1)
{
  uint64_t *v1;

  v1[4] = a1;
  return sub_2489BE690(v1);
}

uint64_t sub_2489BFAEC()
{
  return sub_248A4599C();
}

uint64_t sub_2489BFAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return v9((char *)&a9 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v10);
}

uint64_t sub_2489BFB2C()
{
  return sub_248A45540();
}

uint64_t sub_2489BFB44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_2489BFB4C(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(a1, 1, v1);
}

uint64_t sub_2489BFB58()
{
  return swift_dynamicCast();
}

uint64_t sub_2489BFB74()
{
  return sub_248A45CA8();
}

uint64_t sub_2489BFB80()
{
  return sub_248A45924();
}

uint64_t sub_2489BFBA8()
{
  return sub_248A44DCC();
}

uint64_t sub_2489BFBB4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_2489BFBBC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2489BFBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_2489BFBF0()
{
  return sub_248A44FA0();
}

uint64_t sub_2489BFC00@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_2489BFC0C()
{
  return sub_248A459B4();
}

uint64_t sub_2489BFC30()
{
  return sub_248A455DC();
}

uint64_t sub_2489BFC3C()
{
  return swift_allocObject();
}

void sub_2489BFC48(void *a1)
{
  free(a1);
}

uint64_t sub_2489BFC58()
{
  return sub_248A4557C();
}

void sub_2489BFC64(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u8[0] = 7;
  sub_2489C47EC();
}

uint64_t sub_2489BFC74()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BFC80@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v4[49] = a2;
  v4[50] = v3;
  v5 = (_QWORD *)(*(_QWORD *)(result + 48) + 16 * v2);
  v4[51] = *v5;
  v4[52] = v5[1];
  return result;
}

uint64_t sub_2489BFCE0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2489E65F8(a1, a2, v2);
}

uint64_t sub_2489BFCF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BFD04()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BE7E0(v1, 0, 1, v0);
  return 0;
}

uint64_t sub_2489BFD2C()
{
  return sub_248A44FC4();
}

uint64_t sub_2489BFD44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  *(_BYTE *)(v1 - 88) = 0;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489BFD7C()
{
  return sub_248A45978();
}

uint64_t sub_2489BFD8C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2489BFD98()
{
  return sub_248A45CD8();
}

uint64_t sub_2489BFDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v0, v1);
}

uint64_t sub_2489BFDC8()
{
  return swift_dynamicCast();
}

uint64_t sub_2489BFDD4()
{
  return sub_248A45CD8();
}

uint64_t sub_2489BFE1C()
{
  return swift_allocObject();
}

uint64_t sub_2489BFE28()
{
  return sub_248A459A8();
}

uint64_t sub_2489BFE34()
{
  return sub_248A45498();
}

uint64_t sub_2489BFE4C()
{
  return sub_248A45978();
}

uint64_t sub_2489BFE5C()
{
  return swift_release();
}

uint64_t sub_2489BFE64()
{
  return sub_248A453F0();
}

uint64_t sub_2489BFE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_2489BFE7C()
{
  return sub_248A45F90();
}

uint64_t sub_2489BFE9C()
{
  return _ss8DurationV10TipKitCoreE7secondsSivg_0();
}

uint64_t sub_2489BFEAC()
{
  return sub_248A45D20();
}

uint64_t sub_2489BFECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_2489BFEDC()
{
  return sub_248A44EB0();
}

uint64_t sub_2489BFEF4()
{
  return sub_248A45DBC();
}

uint64_t sub_2489BFF04()
{
  return sub_248A454EC();
}

uint64_t sub_2489BFF14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_2489BFF34()
{
  return sub_248A45948();
}

uint64_t sub_2489BFF44()
{
  return sub_248A4599C();
}

void sub_2489BFF58()
{
  sub_2489C74D8();
}

uint64_t sub_2489BFF68()
{
  uint64_t v0;

  return sub_2489D08D4(v0, *(_QWORD *)(v0 + 24));
}

uint64_t sub_2489BFF90(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE7E0(a1, 0, 1, *(_QWORD *)(v1 - 128));
}

uint64_t sub_2489BFFA4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489BFFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_2489BFFC0()
{
  sub_2489EC740();
}

uint64_t sub_2489BFFCC()
{
  return sub_248A4557C();
}

uint64_t sub_2489BFFD8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2489BFFE0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489BFFEC()
{
  return sub_248A45384();
}

uint64_t sub_2489C0000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_2489C0024()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  *(_BYTE *)(v1 - 88) = 0;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C0040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_2489C0080()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_2489C00A0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_2489C32D0((uint64_t)va, a2);
}

uint64_t sub_2489C00A8()
{
  return sub_248A45498();
}

uint64_t sub_2489C00D4()
{
  return sub_248A45CA8();
}

uint64_t sub_2489C00F0()
{
  return swift_retain();
}

uint64_t sub_2489C00F8()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C0138()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C0144()
{
  uint64_t v0;

  return sub_2489BCE44(v0);
}

uint64_t sub_2489C014C()
{
  return sub_248A45CFC();
}

uint64_t sub_2489C015C()
{
  return sub_248A45D20();
}

uint64_t sub_2489C0174@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2489C0180@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_2489C019C()
{
  return sub_248A15670();
}

uint64_t sub_2489C01AC()
{
  return sub_248A453F0();
}

uint64_t sub_2489C01B4()
{
  return _ss8DurationV10TipKitCoreE7secondsSivg_0();
}

void sub_2489C01C4(uint64_t a1)
{
  uint64_t *v1;

  sub_2489C4AF4(a1, v1);
}

uint64_t sub_2489C01CC()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C01E0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 - 112))(v1 - 96, v0);
}

uint64_t sub_2489C01F0()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C0208@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2489C0214()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C0228()
{
  return sub_248A453F0();
}

uint64_t sub_2489C0238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_2489C0248(uint64_t a1, ...)
{
  uint64_t *v1;
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v3 = va_arg(va1, _QWORD);
  return sub_2489C7F24((uint64_t)va1, (uint64_t)va, v1);
}

uint64_t sub_2489C0258()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 1;
  *(_BYTE *)(v0 - 88) = 0;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C0278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489C0288()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489BE834(v0, 1, v1);
}

uint64_t sub_2489C02C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489BE7E0(a1, a2, 1, v2);
}

uint64_t sub_2489C02D0()
{
  return sub_2489D7268();
}

uint64_t sub_2489C02F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C0310(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2489C330C(a3);
}

uint64_t sub_2489C0320(uint64_t a1, unint64_t *a2)
{
  return sub_2489B5D40(0, a2);
}

__n128 sub_2489C0328(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2489C033C()
{
  return sub_248A453C0();
}

uint64_t sub_2489C0348()
{
  return sub_248A44EA4();
}

void sub_2489C0354()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_2489C0374()
{
  return swift_task_alloc();
}

uint64_t sub_2489C038C()
{
  return sub_248A45168();
}

uint64_t sub_2489C03A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  return swift_task_dealloc();
}

uint64_t sub_2489C03C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_2489C03CC(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[1] = a2;
  return (*(uint64_t (**)(char *, _QWORD, uint64_t))(v4 + 16))((char *)a1 + v2, *(_QWORD *)(v5 - 160), v3);
}

uint64_t sub_2489C03E4()
{
  return sub_248A452AC();
}

uint64_t sub_2489C03EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return sub_2489BCE44((uint64_t)va);
}

uint64_t sub_2489C03F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD *, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  *v0 = *(_QWORD *)(v4 - 152);
  return v2(v0, v3, v1);
}

void sub_2489C0410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 - 224) = &a9;
}

id sub_2489C0420()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

id sub_2489C0440(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_2489C044C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v1, v2);
}

uint64_t sub_2489C0460()
{
  return sub_248A45CF0();
}

void sub_2489C0470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 - 216) = &a9;
}

uint64_t sub_2489C0480()
{
  return swift_allocObject();
}

uint64_t sub_2489C04B4()
{
  return sub_248A45CA8();
}

_QWORD *sub_2489C04CC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489BE100(*(_QWORD **)(v1 + 56), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2489C0504()
{
  uint64_t (*v0)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *v2 = *(_QWORD *)(v4 - 168);
  return v0(v2, v3, v1);
}

uint64_t sub_2489C051C()
{
  return sub_248A44FAC();
}

void sub_2489C0530()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0xE000000000000000;
}

uint64_t sub_2489C0540()
{
  return sub_248A453F0();
}

uint64_t sub_2489C0548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489BE7E0(a1, 1, 1, a4);
}

uint64_t sub_2489C058C()
{
  return sub_248A4557C();
}

uint64_t sub_2489C05C0()
{
  return swift_asyncLet_finish();
}

uint64_t sub_2489C05D0()
{
  return sub_248A44FAC();
}

uint64_t sub_2489C05E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  return swift_task_dealloc();
}

uint64_t sub_2489C0614(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

double sub_2489C0620(double a1)
{
  return a1 * 60.0 * 60.0;
}

uint64_t sub_2489C0640()
{
  uint64_t v0;

  return sub_2489BCE44(v0);
}

size_t sub_2489C0654(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_2489C0678()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 184);
  return sub_248A453F0();
}

void sub_2489C0688()
{
  uint64_t v0;
  unint64_t v1;

  CoreParameterRecord.valueData.setter(v0, v1);
}

uint64_t sub_2489C0694()
{
  uint64_t v0;

  return sub_2489BCE44(*(_QWORD *)(v0 - 144));
}

uint64_t sub_2489C069C()
{
  return swift_release();
}

uint64_t sub_2489C06AC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_2489C06B8()
{
  return sub_248A45C9C();
}

uint64_t sub_2489C06C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C06D4(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return v1(va, v2);
}

void sub_2489C06E0()
{
  sub_2489BE9AC();
}

uint64_t sub_2489C06F0(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(v1, 1, a1);
}

uint64_t sub_2489C0700()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C0708(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

void sub_2489C0714()
{
  CoreTipRecord.status.getter();
}

uint64_t sub_2489C0724()
{
  return 0;
}

uint64_t sub_2489C0740()
{
  uint64_t v0;

  return v0;
}

void sub_2489C0754()
{
  JUMPOUT(0x2495A2E00);
}

uint64_t sub_2489C0760()
{
  return sub_248A452AC();
}

uint64_t sub_2489C077C()
{
  return swift_task_dealloc();
}

uint64_t sub_2489C0784()
{
  return swift_task_switch();
}

uint64_t sub_2489C0790()
{
  return swift_allocObject();
}

id sub_2489C07A4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_2489C07C4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

unint64_t sub_2489C07CC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489C28D0(v1, v0);
}

uint64_t sub_2489C07D8()
{
  return sub_248A45FF0();
}

uint64_t sub_2489C07E4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 192);
  return sub_248A453F0();
}

void sub_2489C07F4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
}

uint64_t sub_2489C0810()
{
  return sub_248A45168();
}

uint64_t sub_2489C0824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return sub_2489C81EC((uint64_t)&a9, (uint64_t)&a13);
}

uint64_t sub_2489C0830()
{
  return sub_248A45CB4();
}

uint64_t sub_2489C083C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489C084C()
{
  return sub_248A45D50();
}

void sub_2489C0870()
{
  sub_2489F74C0();
}

uint64_t sub_2489C0884()
{
  uint64_t v0;

  return sub_2489BCE44(*(_QWORD *)(v0 + 152));
}

uint64_t sub_2489C088C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_2489C0898()
{
  return sub_248A45738();
}

uint64_t sub_2489C08A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

double sub_2489C08CC()
{
  return sub_2489B9D1C();
}

uint64_t sub_2489C08D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(a1, v2, v1);
}

void sub_2489C08E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  sub_248A2B668(a1, a2, a3, a4, a5 & 0xFFFF0000FFFFLL | 0xAC000000205D0000, a6);
}

uint64_t sub_2489C08F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489C08FC()
{
  return swift_task_dealloc();
}

uint64_t sub_2489C0904()
{
  return sub_248A452AC();
}

uint64_t sub_2489C0920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 8) = *v0;
  v2 = *v0;
  *(_QWORD *)(v1 - 8) = v2;
  return *(_QWORD *)(v2 + 8);
}

uint64_t sub_2489C0940()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BE7E0(v0, 0, 1, v1);
  return 0;
}

uint64_t sub_2489C0964(_QWORD *a1)
{
  uint64_t v1;

  sub_2489BE100(a1, v1);
  return v1;
}

uint64_t sub_2489C0988@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_2489C0998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 160));
}

void sub_2489C09A4(void *a1)
{
  free(a1);
}

uint64_t sub_2489C09AC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_2489C09C0()
{
  return swift_beginAccess();
}

uint64_t sub_2489C09CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return sub_2489F3580(a1, v7, v9, v8, 85, a6, a7);
}

uint64_t sub_2489C09E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  *(_QWORD *)(v4 - 192) = v3;
  return v5(v1, v0, v3);
}

unint64_t sub_2489C09F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_2489C3E00();
}

uint64_t sub_2489C0A04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2489BDB94(v2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v3, v0);
}

uint64_t sub_2489C0A2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2489C7F24(a1, a2, v2);
}

uint64_t sub_2489C0A34()
{
  return swift_release();
}

uint64_t sub_2489C0A40()
{
  return swift_getErrorValue();
}

uint64_t sub_2489C0A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_2489C0A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 232));
}

uint64_t sub_2489C0A70()
{
  return sub_2489D7B5C();
}

void sub_2489C0A78()
{
  sub_2489BE9AC();
}

void sub_2489C0A84(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2489C0AA0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2489BE604(v0, v1);
}

uint64_t sub_2489C0AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489BE7E0(a1, a2, 1, v2);
}

uint64_t sub_2489C0AB8()
{
  return sub_248A45924();
}

uint64_t sub_2489C0AC4()
{
  return sub_248A454EC();
}

uint64_t sub_2489C0AD4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_2489C0AE0()
{
  return swift_continuation_await();
}

uint64_t sub_2489C0AF0()
{
  return swift_task_dealloc();
}

uint64_t _sSQ10TipKitCoreE10isNotEqual_12checkReverseSbypSg_SbtFfA0__0()
{
  return 1;
}

void sub_2489C0B00()
{
  void *v0;

  free(v0);
}

uint64_t sub_2489C0B24()
{
  return sub_248A45FF0();
}

uint64_t sub_2489C0B3C()
{
  return sub_248A45F9C();
}

uint64_t sub_2489C0B48()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C0B58()
{
  return swift_allocObject();
}

void sub_2489C0B60()
{
  uint64_t v0;

  sub_2489F93C0(0, 0xE000000000000000, v0);
}

uint64_t sub_2489C0B74()
{
  return sub_248A4557C();
}

uint64_t sub_2489C0B80()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C0B94()
{
  return sub_248A45384();
}

uint64_t sub_2489C0BD0()
{
  return sub_248A45D14();
}

uint64_t sub_2489C0BF4()
{
  return sub_248A4557C();
}

uint64_t sub_2489C0C04()
{
  return sub_248A45738();
}

uint64_t sub_2489C0C10()
{
  return sub_248A4557C();
}

void sub_2489C0C20()
{
  sub_248A1A410();
}

uint64_t sub_2489C0C34()
{
  return swift_deallocObject();
}

void sub_2489C0C3C(uint64_t a1)
{
  uint64_t *v1;

  sub_2489C4AF4(a1, v1);
}

void sub_2489C0C44(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *))
{
  sub_248A2BF0C(a1, a2, 20, 0x69726320A280E220, 0xAF205D6C61636974, a6);
}

uint64_t sub_2489C0C6C()
{
  return sub_248A45168();
}

char *sub_2489C0C84(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

uint64_t sub_2489C0D08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489C0DFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t AssociatedTypeWitness;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;

  sub_2489C1D3C(a1, (uint64_t)&v106);
  if (!v107)
  {
    sub_2489C1D84(a1);
    sub_2489C1D84((uint64_t)&v106);
    return 3;
  }
  v104 = a1;
  sub_2489B8F74(&v106, (uint64_t)v108);
  v2 = v109;
  v3 = v110;
  v4 = sub_2489BE100(v108, v109);
  v103 = &v95;
  v5 = *(_QWORD *)(v2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v4);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v95 - v7;
  (*(void (**)(char *))(v5 + 16))((char *)&v95 - v7);
  v9 = sub_2489C15D4();
  v10 = v9;
  v102 = &v95;
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_2489BF648((uint64_t)&v95 - v7);
  if ((v10 & 1) == 0)
  {
    sub_2489C3ADC((uint64_t)&v95 - v7);
    goto LABEL_24;
  }
  v12 = sub_2489BFE28();
  v13 = sub_2489C3ADC((uint64_t)&v95 - v7);
  if (v12 <= 64)
    goto LABEL_24;
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489BFAF8(v15, v16, v17, v18, v19, v20, v21, v22, v95);
  *(_QWORD *)&v106 = 0x8000000000000000;
  if ((sub_2489C15D4() & 1) == 0)
  {
    v101 = &v95;
    v33 = sub_2489C15D4();
    v34 = sub_2489BFE28();
    if ((v33 & 1) != 0)
    {
      if (v34 > 64)
      {
        sub_2489C0470(v34, v35, v36, v37, v38, v39, v40, v41, v95);
        MEMORY[0x24BDAC7A8](v42, v43);
        sub_2489BFB1C();
        sub_2489BA524();
        sub_2489BFE4C();
        v44 = sub_2489BFE34();
        sub_2489C3ADC(v33);
        result = sub_2489C3ADC(v12);
        goto LABEL_14;
      }
      v100 = *(uint64_t **)(*(_QWORD *)(v3 + 24) + 16);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v99 = &v95;
      MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v50);
      v96 = (char *)&v95 - v51;
      swift_getAssociatedConformanceWitness();
      v52 = sub_248A45F0C();
      v97 = &v95;
      MEMORY[0x24BDAC7A8](v52, v53);
      sub_2489BFB1C();
      v98 = v54;
      v56 = v55 - v54;
      sub_248A45DA4();
      LODWORD(v96) = sub_2489BFE34();
      v57 = sub_2489C3ADC(v56);
      sub_2489C0470(v57, v58, v59, v60, v61, v62, v63, v64, v95);
      MEMORY[0x24BDAC7A8](v65, v66);
      v67 = (uint64_t)&v95 - v98;
      sub_2489BBCB0((uint64_t)&v95 - v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
      if ((v96 & 1) != 0)
        goto LABEL_41;
      v68 = v106;
      v69 = sub_2489BFAEC();
      result = sub_2489C3ADC(v67);
      v48 = v69 < v68;
    }
    else
    {
      if (v34 >= 64)
      {
        sub_2489C3ADC(v12);
        goto LABEL_24;
      }
      v47 = sub_2489BFAEC();
      result = sub_2489C3ADC(v12);
      v48 = v47 < (uint64_t)v106;
    }
    if (v48)
      goto LABEL_42;
    goto LABEL_24;
  }
  v23 = sub_2489BFE28();
  if (v23 >= 64)
  {
    sub_2489C0470(v23, v24, v25, v26, v27, v28, v29, v30, v95);
    MEMORY[0x24BDAC7A8](v45, v46);
    sub_2489BFB1C();
    v101 = &v95;
    sub_2489BA524();
    sub_2489BFE4C();
    v44 = sub_2489BFE34();
    sub_2489C3ADC((uint64_t)&v95);
    result = sub_2489C3ADC(v12);
LABEL_14:
    if ((v44 & 1) != 0)
      goto LABEL_42;
    goto LABEL_24;
  }
  v31 = sub_2489BFAEC();
  result = sub_2489C3ADC(v12);
  if (v31 < (uint64_t)v106)
    goto LABEL_42;
LABEL_24:
  v70 = sub_2489BFE28();
  MEMORY[0x24BDAC7A8](v70, v71);
  sub_2489BFB1C();
  v74 = v72 - v73;
  sub_2489BF648(v72 - v73);
  if (v70 < 65)
  {
    v70 = sub_2489BFE28();
    sub_2489C3ADC(v74);
    if (v70 != 64)
      goto LABEL_35;
    v75 = sub_2489C15D4();
    if ((v75 & 1) != 0)
      goto LABEL_35;
  }
  else
  {
    v75 = sub_2489C3ADC(v74);
  }
  v100 = &v95;
  v101 = &v95;
  v77 = MEMORY[0x24BDAC7A8](v75, v76);
  sub_2489BFAF8(v77, v78, v79, v80, v81, v82, v83, v84, v95);
  *(_QWORD *)&v106 = 0x7FFFFFFFFFFFFFFFLL;
  v85 = sub_2489C15D4();
  v86 = sub_2489BFE28();
  if ((v85 & 1) == 0)
  {
    if (v86 > 63)
    {
      v105 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x24BDAC7A8](v86, v87);
      v91 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      v92 = sub_2489BBCB0((uint64_t)v91, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
      MEMORY[0x24BDAC7A8](v92, v93);
      sub_2489C974C();
      sub_2489BFE4C();
      v67 = sub_248A45498();
      sub_2489C3ADC((uint64_t)v91);
      sub_2489C3ADC((uint64_t)v91);
      goto LABEL_34;
    }
LABEL_32:
    sub_2489BFAEC();
    sub_2489C3ADC(v70);
LABEL_35:
    v94 = sub_2489BFAEC();
    sub_2489C3ADC((uint64_t)v8);
    sub_2489C1D84(v104);
    if (v94 < 3)
    {
      sub_2489BCE44((uint64_t)v108);
      return v94;
    }
    sub_2489BCE44((uint64_t)v108);
    return 3;
  }
  if (v86 <= 64)
    goto LABEL_32;
  MEMORY[0x24BDAC7A8](v86, v87);
  sub_2489BFB1C();
  v90 = v88 - v89;
  sub_2489C974C();
  sub_2489BFE4C();
  v67 = sub_248A45498();
  sub_2489C3ADC(v90);
  sub_2489C3ADC(v70);
LABEL_34:
  if ((v67 & 1) == 0)
    goto LABEL_35;
  __break(1u);
LABEL_41:
  result = sub_2489C3ADC(v67);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2489C1444()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C1458()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489C81EC(v0, v1 - 64);
}

uint64_t sub_2489C1464()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_2489C1478()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C149C()
{
  return sub_2489BC040();
}

uint64_t sub_2489C14A8(uint64_t a1)
{
  uint64_t *v1;

  return sub_2489C32D0(a1, v1);
}

uint64_t sub_2489C14B0()
{
  return swift_task_switch();
}

void *sub_2489C14BC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t sub_2489C14C4()
{
  return sub_248A453F0();
}

void *sub_2489C14D0@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t sub_2489C14F0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_2489C1508()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = *(_DWORD *)(v0 - 204);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C1524()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C1540()
{
  return swift_task_switch();
}

uint64_t sub_2489C154C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_2489C155C()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v0 + 16) + 24));
}

double sub_2489C1578()
{
  return 0.0;
}

uint64_t sub_2489C1588()
{
  return sub_248A459B4();
}

uint64_t sub_2489C1598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489C15A8()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C15B8()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C15C4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_2489C15CC()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_2489C15D4()
{
  return sub_248A459B4();
}

uint64_t sub_2489C15E4()
{
  return sub_248A4530C();
}

uint64_t sub_2489C1608()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
}

uint64_t sub_2489C161C()
{
  return sub_248A45D2C();
}

uint64_t sub_2489C1630()
{
  return sub_248A45C84();
}

uint64_t sub_2489C1640(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489C1658()
{
  return sub_248A45D38();
}

uint64_t sub_2489C1664()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_2489C169C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *(*v6)(uint64_t *__return_ptr, uint64_t, uint64_t);
  va_list va;

  va_start(va, a4);
  return v6((uint64_t *)va, v5, v4);
}

void sub_2489C16B0()
{
  JUMPOUT(0x2495A27B8);
}

uint64_t sub_2489C16BC()
{
  uint64_t v0;

  return sub_2489BE124(v0);
}

uint64_t sub_2489C16D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2489BE7E0(v1, 0, 1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
}

uint64_t sub_2489C1700()
{
  return sub_248A4557C();
}

uint64_t sub_2489C1710()
{
  return swift_release();
}

uint64_t sub_2489C1744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return sub_2489BC134((uint64_t)&a9, (uint64_t)&a13);
}

uint64_t sub_2489C1750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

_QWORD *sub_2489C1760(uint64_t a1, uint64_t a2, ...)
{
  _QWORD *v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a2);
  return v3((uint64_t *)va, v5, v4, *v2);
}

uint64_t sub_2489C1774(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_2489C1780()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
  return sub_248A45A74();
}

uint64_t sub_2489C1794()
{
  return swift_task_switch();
}

uint64_t sub_2489C17A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_2489C17B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2489C7E2C(v2, v1, a1);
}

void sub_2489C17CC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_2489C17EC()
{
  uint64_t v0;

  return sub_2489D08D4(v0 - 128, *(_QWORD *)(v0 - 104));
}

__n128 sub_2489C17FC()
{
  uint64_t v0;

  return *(__n128 *)(*(_QWORD *)(*(_QWORD *)v0 + 80) + 16);
}

uint64_t sub_2489C1818()
{
  return sub_248A453C0();
}

uint64_t sub_2489C1820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489BE7E0(a1, a2, 1, v2);
}

uint64_t sub_2489C1838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 280) = a1;
  *(_QWORD *)(v2 + 288) = (v1 - 32) | 0x8000000000000000;
  return sub_248A4557C();
}

uint64_t sub_2489C1854()
{
  return sub_248A45F90();
}

_OWORD *sub_2489C1860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,__int128 a44)
{
  return sub_2489C3288(&a44, &a17);
}

uint64_t sub_2489C186C()
{
  return 0;
}

uint64_t sub_2489C1898()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t, _QWORD);
  uint64_t v2;

  return v1(*(_QWORD *)(v2 - 168), v0, *(_QWORD *)(v2 - 192));
}

uint64_t sub_2489C18B0(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(v1, 1, a1);
}

uint64_t sub_2489C18C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_2489C32D0((uint64_t)&a9, a2);
}

uint64_t sub_2489C18C8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_2489C18D4()
{
  return sub_248A45D20();
}

uint64_t sub_2489C18E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C190C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  sub_2489BE100(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
}

uint64_t sub_2489C193C()
{
  return sub_248A4557C();
}

uint64_t sub_2489C1948()
{
  return sub_248A45BAC();
}

uint64_t sub_2489C1960(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_2489C1978()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C198C()
{
  return sub_248A45D8C();
}

uint64_t sub_2489C1998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_2489BE124((uint64_t)va);
}

uint64_t sub_2489C19C8(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(a1, 1, v1);
}

uint64_t sub_2489C19E4(uint64_t a1, ...)
{
  uint64_t *v1;
  va_list va;

  va_start(va, a1);
  return sub_2489C32D0((uint64_t)va, v1);
}

uint64_t sub_2489C19F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_2489C1A0C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[17] + 8))(v0[18], v0[16]);
}

unint64_t sub_2489C1A28()
{
  return sub_248A427E4();
}

uint64_t sub_2489C1A30()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489D08D4(v1 - 128, v0);
}

void sub_2489C1A60(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2489D6100(a1, v2, v1);
}

uint64_t sub_2489C1A6C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

_QWORD *sub_2489C1A74()
{
  _QWORD *v0;

  return sub_2489BE100(v0, v0[3]);
}

BOOL sub_2489C1A94@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_2489C1AA0()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_2489C1AAC()
{
  return sub_248A45078();
}

uint64_t sub_2489C1AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_2489C1AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

uint64_t sub_2489C1B0C()
{
  return swift_task_dealloc();
}

uint64_t sub_2489C1B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489BE648(v2, a2);
}

uint64_t sub_2489C1B24()
{
  return swift_allocObject();
}

uint64_t sub_2489C1B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return v9((char *)&a9 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v10);
}

uint64_t sub_2489C1B58()
{
  return sub_248A4557C();
}

uint64_t sub_2489C1B68()
{
  return sub_248A45CF0();
}

uint64_t sub_2489C1B74@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_2489C1B80()
{
  return sub_248A45C6C();
}

uint64_t sub_2489C1B98()
{
  return sub_248A45CD8();
}

uint64_t sub_2489C1BAC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 192) = a1;
  return v1 - 192;
}

uint64_t sub_2489C1BC0()
{
  return sub_248A45D20();
}

uint64_t sub_2489C1BCC()
{
  return sub_248A45CA8();
}

uint64_t sub_2489C1BE8()
{
  return sub_248A4557C();
}

uint64_t sub_2489C1C00()
{
  return swift_release();
}

uint64_t sub_2489C1C18()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C1C30()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 224) + 8))(v0, *(_QWORD *)(v1 - 208));
}

uint64_t sub_2489C1C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v1, v0);
}

void sub_2489C1C70()
{
  JUMPOUT(0x2495A1BD0);
}

uint64_t sub_2489C1CA8()
{
  return swift_getErrorValue();
}

uint64_t sub_2489C1CB8()
{
  return sub_248A454E0();
}

uint64_t sub_2489C1CC8()
{
  return sub_248A45018();
}

uint64_t sub_2489C1CDC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2489C1CEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 16) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v2, v4);
}

uint64_t sub_2489C1D08()
{
  return sub_248A459A8();
}

uint64_t sub_2489C1D18()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C1D2C()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C1D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489C1D84(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2489C330C(&qword_254464330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2489C1DC4@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  unint64_t v13;

  sub_2489BE100(a1, a1[3]);
  sub_248A45FE4();
  if (!v2)
  {
    v5 = v13;
    sub_2489BE100(v11, v12);
    if ((sub_248A45E1C() & 1) != 0)
    {
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      if (v6)
      {
        v7 = (unint64_t)v6;
        v8 = sub_2489B5D40(0, qword_254463D98);
        v9 = v7 & 0xFFFFFFFFFFFFFF00;
      }
      else
      {
        v9 = 0x3E6C6C756E00;
        v5 = 0xE600000000000000;
        v8 = MEMORY[0x24BEE0D00];
        LOBYTE(v7) = 60;
      }
    }
    else
    {
      v5 = v13;
      sub_2489BE100(v11, v12);
      v9 = 0;
      LOBYTE(v7) = sub_248A45DE0() & 1;
      v8 = MEMORY[0x24BEE1328];
    }
    sub_2489BCE44((uint64_t)v11);
    *a2 = v9 | v7;
    a2[1] = v5;
    a2[3] = v8;
  }
  return sub_2489BCE44((uint64_t)a1);
}

uint64_t sub_2489C2298()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C22AC()
{
  return sub_248A4557C();
}

void sub_2489C22C4()
{
  sub_2489BE9AC();
}

uint64_t sub_2489C22D4()
{
  return swift_initStackObject();
}

uint64_t sub_2489C22DC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_2489C22E4()
{
  sub_2489EA824();
}

void sub_2489C22F0()
{
  sub_2489EC740();
}

uint64_t sub_2489C22FC()
{
  return 0;
}

uint64_t sub_2489C230C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 200) + 8))(v0, *(_QWORD *)(v1 - 192));
}

uint64_t sub_2489C231C()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C2328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v1, v0);
}

uint64_t sub_2489C2344()
{
  return swift_retain();
}

uint64_t sub_2489C2350()
{
  return swift_allocObject();
}

uint64_t sub_2489C2378()
{
  uint64_t v0;

  return v0;
}

double sub_2489C238C()
{
  return 0.0;
}

uint64_t sub_2489C23B0()
{
  return sub_248A459A8();
}

uint64_t sub_2489C23BC()
{
  return sub_248A45CA8();
}

uint64_t sub_2489C23E0()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C23F8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 176);
}

uint64_t sub_2489C2410@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_2489C2420()
{
  return sub_248A45C48();
}

_QWORD *sub_2489C242C(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  va_list va;

  va_start(va, a3);
  return (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 40))((uint64_t *)va, v3, v4);
}

uint64_t sub_2489C2448()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C245C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_2489C246C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = v9;
  a9[9] = v10;
  a9[10] = v11;
  a9[11] = v12;
  a9[12] = v13;
  a9[13] = v14;
  return sub_2489BB634(a1, a2);
}

uint64_t sub_2489C2498()
{
  return sub_248A45540();
}

uint64_t sub_2489C24A0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2489C24AC()
{
  return swift_deallocObject();
}

uint64_t sub_2489C24BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_2489C24CC()
{
  return sub_248A450B4();
}

uint64_t sub_2489C24D8()
{
  return CoreTipRecord.id.getter();
}

double sub_2489C24E0()
{
  long double v0;

  return fmod(v0, 1.0);
}

uint64_t sub_2489C24F4()
{
  return swift_task_dealloc();
}

uint64_t sub_2489C2508(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_2489BCE44((uint64_t)va);
}

uint64_t sub_2489C2510()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2489BE604(v1, v0);
}

uint64_t sub_2489C251C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2489BE7E0(v1, 1, 1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
}

id sub_2489C2548(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  void *v15;
  uint64_t v16;

  return objc_msgSend(v15, a2, v16, &a15);
}

uint64_t sub_2489C2558()
{
  return swift_release();
}

uint64_t sub_2489C2564()
{
  return sub_248A2A7D8();
}

uint64_t sub_2489C256C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_2489C257C()
{
  return sub_248A450E4();
}

uint64_t sub_2489C2598()
{
  return swift_task_alloc();
}

uint64_t sub_2489C25AC()
{
  return swift_task_dealloc();
}

uint64_t sub_2489C25B8(uint64_t a1, uint64_t *a2)
{
  return sub_2489BCD7C(a2);
}

uint64_t sub_2489C25C0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t sub_2489C25D0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_2489C25E4()
{
  return sub_248A453A8();
}

uint64_t sub_2489C2600()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C2610()
{
  return sub_248A453F0();
}

uint64_t sub_2489C2628()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C2654@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 40) = result;
  *(_BYTE *)(v3 + 80) = 8;
  return result;
}

uint64_t sub_2489C2668()
{
  return sub_2489BC23C();
}

uint64_t sub_2489C267C(uint64_t a1)
{
  uint64_t *v1;

  return sub_2489C32D0(a1, v1);
}

uint64_t sub_2489C2694()
{
  return sub_248A450B4();
}

uint64_t sub_2489C26A0()
{
  return swift_continuation_await();
}

uint64_t sub_2489C26B0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = result;
  return result;
}

uint64_t sub_2489C26C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_2489C26E0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 16) + 16))(v0);
}

uint64_t sub_2489C2704()
{
  return sub_248A4599C();
}

uint64_t sub_2489C2710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v0, v1);
}

double sub_2489C2724()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 128) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  return result;
}

uint64_t sub_2489C2744()
{
  return sub_248A45CA8();
}

uint64_t sub_2489C2750()
{
  return sub_248A45D20();
}

uint64_t sub_2489C279C()
{
  return sub_248A45F90();
}

uint64_t sub_2489C27A4()
{
  return sub_248A453F0();
}

uint64_t sub_2489C27C8()
{
  return swift_beginAccess();
}

uint64_t sub_2489C27D8()
{
  return swift_dynamicCast();
}

void sub_2489C27F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 120) = 0x203A646928706954;
  *(_QWORD *)(v0 - 112) = 0xE800000000000000;
}

uint64_t sub_2489C280C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C2820@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t sub_2489C2828@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(char *))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t sub_2489C2848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_2489C285C()
{
  sub_2489BE9AC();
}

uint64_t sub_2489C286C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C287C()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C288C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[22] + 8))(v0[23], v0[21]);
}

void sub_2489C28AC()
{
  sub_2489C74D8();
}

unint64_t sub_2489C28D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2489C6FAC();
  sub_248A45540();
  v4 = sub_2489BDA5C();
  return sub_2489C2928(a1, a2, v4);
}

unint64_t sub_2489C2928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_248A45DBC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_248A45DBC() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_2489C2A08(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
  {
    sub_2489C1A3C();
    goto LABEL_40;
  }
  v10 = sub_2489BFC3C();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v42 = v10 + 16;
  v47 = sub_2489BFC3C();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_2489D2348(v30 | (v11 << 16), v47, a2 & 1, v10);
    sub_2489BBC60();
    v13 = *(_QWORD *)(v10 + 16);
    sub_248A453F0();
    swift_release();
LABEL_36:
    swift_release();
    return v13;
  }
  v41 = a1;
  v48 = 4 * v12;
  v13 = MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_248A455B8();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_2489BBC60();
      return v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v14 = sub_2489C38E4();
      goto LABEL_21;
    }
    v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14)
        goto LABEL_38;
      v21 = sub_2489BFC30();
      v43 = v23;
      v44 = v22;
      v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489BF760();
        v13 = v28;
      }
      v25 = *(_QWORD *)(v13 + 16);
      if (v25 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_2489BF760();
        v13 = v29;
      }
      *(_QWORD *)(v13 + 16) = v25 + 1;
      v26 = (_QWORD *)(v13 + 32 * v25);
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(_QWORD *)v42 = v13;
    }
    v27 = sub_2489C38E4();
    v14 = v27;
    *(_QWORD *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && *(_QWORD *)(v13 + 16) == v41)
      break;
    v15 = v27;
    v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14)
      goto LABEL_30;
  }
  v16 = v27;
  v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    sub_2489BBC60();
LABEL_35:
    sub_248A453F0();
    swift_release();
    goto LABEL_36;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_2489BFC30();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    sub_2489BBC60();
    sub_2489C2EA0();
    v38 = *(_QWORD *)(*(_QWORD *)v42 + 16);
    sub_2489C2E64(v38);
    v13 = *(_QWORD *)v42;
    *(_QWORD *)(v13 + 16) = v38 + 1;
    v39 = (_QWORD *)(v13 + 32 * v38);
    v39[4] = v31;
    v39[5] = v33;
    v39[6] = v35;
    v39[7] = v37;
    *(_QWORD *)v42 = v13;
    goto LABEL_35;
  }
LABEL_38:
  sub_2489C1A3C();
LABEL_40:
  result = sub_248A45BF4();
  __break(1u);
  return result;
}

uint64_t sub_2489C2DE0(uint64_t *a1)
{
  uint64_t v1;

  return sub_2489C2DFC(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_2489C2DFC(uint64_t *a1, uint64_t *a2)
{
  return sub_2489C2E24(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_2489C2E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_248A45DBC() & 1;
}

void sub_2489C2E64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 + 1 > *(_QWORD *)(*(_QWORD *)v1 + 24) >> 1)
  {
    sub_2489BF93C();
    *(_QWORD *)v1 = v2;
  }
}

void sub_2489C2EA0()
{
  uint64_t *v0;
  uint64_t v1;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v3;

  v1 = *v0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2489BF93C();
    *v0 = v3;
  }
}

unint64_t sub_2489C2EE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t result;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t *v28;
  _OWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  _OWORD v45[2];
  __int128 v46;
  _OWORD v47[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_2489C330C(&qword_254464348);
    v2 = (_QWORD *)sub_248A45C3C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = v47;
  v7 = v45;
  v8 = &v41;
  v9 = &v43;
  result = sub_248A453F0();
  v36 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v37 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v36 << 6);
      }
      else
      {
        v12 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_34;
        if (v12 >= v34)
        {
LABEL_31:
          sub_2489D7268();
          return (unint64_t)v2;
        }
        v13 = *(_QWORD *)(v35 + 8 * v12);
        v14 = v36 + 1;
        if (!v13)
        {
          v14 = v36 + 2;
          if (v36 + 2 >= v34)
            goto LABEL_31;
          v13 = *(_QWORD *)(v35 + 8 * v14);
          if (!v13)
          {
            v14 = v36 + 3;
            if (v36 + 3 >= v34)
              goto LABEL_31;
            v13 = *(_QWORD *)(v35 + 8 * v14);
            if (!v13)
            {
              v14 = v36 + 4;
              if (v36 + 4 >= v34)
                goto LABEL_31;
              v13 = *(_QWORD *)(v35 + 8 * v14);
              if (!v13)
              {
                v15 = v36 + 5;
                if (v36 + 5 >= v34)
                  goto LABEL_31;
                v13 = *(_QWORD *)(v35 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_35;
                    if (v14 >= v34)
                      goto LABEL_31;
                    v13 = *(_QWORD *)(v35 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_25;
                  }
                }
                v14 = v36 + 5;
              }
            }
          }
        }
LABEL_25:
        v36 = v14;
        v37 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_2489C81EC(*(_QWORD *)(v1 + 56) + 32 * v11, (uint64_t)v6);
      *(_QWORD *)&v46 = v18;
      *((_QWORD *)&v46 + 1) = v17;
      v44[2] = v46;
      v45[0] = v47[0];
      v45[1] = v47[1];
      v39 = v18;
      v40 = v17;
      sub_2489C3288(v7, &v38);
      sub_248A453F0();
      sub_2489C330C(&qword_2544643C0);
      swift_dynamicCast();
      v20 = v39;
      v19 = v40;
      sub_2489C3288(v8, v9);
      sub_2489C3288(v9, v44);
      sub_2489C3288(v44, &v42);
      result = sub_2489C28D0(v20, v19);
      v21 = result;
      if ((v22 & 1) == 0)
        break;
      v23 = v9;
      v24 = v8;
      v25 = v1;
      v26 = v7;
      v27 = v6;
      v28 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v28 = v20;
      v28[1] = v19;
      v6 = v27;
      v7 = v26;
      v1 = v25;
      v8 = v24;
      v9 = v23;
      v29 = (_OWORD *)(v2[7] + 32 * v21);
      sub_2489BCE44((uint64_t)v29);
      result = (unint64_t)sub_2489C3288(&v42, v29);
      v5 = v37;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v20;
    v30[1] = v19;
    result = (unint64_t)sub_2489C3288(&v42, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_33;
    v2[2] = v33;
    v5 = v37;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

_OWORD *sub_2489C3288(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_2489C3298(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2489C330C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_2489BA7D0();
}

uint64_t sub_2489C32D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2489C330C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2489C330C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2495A2D1C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2489C3364()
{
  return type metadata accessor for MiniTipsDatastore();
}

void *sub_2489C336C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t sub_2489C3374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t sub_2489C3384()
{
  return swift_retain();
}

void sub_2489C3390()
{
  CoreParameterRecord.valueData.getter();
}

uint64_t sub_2489C339C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t sub_2489C33B0()
{
  return swift_retain();
}

uint64_t sub_2489C33BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_2489C33D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_2489C33EC()
{
  return swift_task_dealloc();
}

uint64_t sub_2489C33F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_2489C33FC()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 192);
  return sub_248A453F0();
}

unint64_t CoreRule.Category.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 6;
  if (result < 6)
    v2 = result;
  *a2 = v2;
  return result;
}

void sub_2489C3420()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_2489BBC9C();
  if ((v2 & 1) != 0)
  {
    sub_2489C2684();
    if (v3 != v4)
    {
      sub_2489C09B4();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  sub_2489C037C();
  if (v1)
  {
    sub_2489C330C(&qword_254464808);
    v5 = (const void *)sub_2489BA860();
    v6 = j__malloc_size(v5);
    sub_2489C629C(v6 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_2489C5038();
    sub_2489C40B0(v7, v8, v9);
    sub_2489BFFE0();
  }
  else
  {
    v10 = sub_2489C186C();
    sub_2489C3EC8(v10, v11, v12, v13);
  }
  sub_2489B6AF4();
}

void CoreRule.Predicate.Argument.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v35 = sub_2489C330C(&qword_254464360);
  v36 = *(_QWORD *)(v35 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489C0054();
  v38 = v5;
  sub_2489C330C(&qword_254464370);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489C0054();
  v39 = sub_2489C330C(&qword_254464368);
  MEMORY[0x24BDAC7A8](v39, v8);
  sub_2489C0428();
  v9 = sub_2489C330C(&qword_254464358);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_2489BBC7C();
  v14 = v13 - v12;
  sub_2489BE100(a1, a1[3]);
  sub_2489C3DC4();
  sub_248A45FF0();
  if (!v40)
  {
    v41 = a1;
    v15 = v14;
    v16 = sub_248A45CE4();
    v17 = *(_QWORD *)(v16 + 16);
    v18 = v9;
    if (v17)
    {
      v19 = v9;
      v20 = *(unsigned __int8 *)(v16 + 32);
      sub_2489C3E3C(1, v17, v16, v16 + 32, 0, (2 * v17) | 1);
      v22 = v21;
      v24 = v23;
      swift_bridgeObjectRelease();
      if (v22 == v24 >> 1)
      {
        if (v20)
        {
          if (v20 != 1)
          {
            sub_2489C09F8();
            sub_2489C3A80();
            v34 = v20;
            (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v35);
            sub_2489BF62C();
            sub_2489BA8C0(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
            v29 = 0;
            v31 = 0;
LABEL_15:
            *(_QWORD *)a2 = v29;
            *(_QWORD *)(a2 + 8) = v31;
            *(_BYTE *)(a2 + 16) = v34;
            v28 = (uint64_t)v41;
            goto LABEL_13;
          }
          sub_2489C6BF8();
          sub_2489C3A80();
          v34 = 1;
          v29 = sub_2489C0830();
          v31 = v30;
          sub_2489C2710();
          swift_unknownObjectRelease();
          v32 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
        }
        else
        {
          sub_2489C6B04();
          sub_2489C3A80();
          v34 = 0;
          v29 = sub_2489C0830();
          v31 = v33;
          sub_2489BFDB4();
          sub_2489BF62C();
          v32 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
        }
        sub_2489BA8C0(v32);
        goto LABEL_15;
      }
      v18 = v19;
      v15 = v14;
    }
    v25 = sub_248A45AB0();
    swift_allocError();
    v27 = v26;
    sub_2489C330C(&qword_2577A5370);
    *v27 = &type metadata for CoreRule.Predicate.Argument;
    sub_248A45C78();
    sub_248A45AA4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v18);
    a1 = v41;
  }
  v28 = (uint64_t)a1;
LABEL_13:
  sub_2489BCE44(v28);
  sub_2489BA808();
}

uint64_t sub_2489C38C0()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C38D4()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C38E4()
{
  return sub_248A45558();
}

void sub_2489C38F4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2489D47D4(a1, a2, a3, a4, a5);
}

uint64_t sub_2489C38FC()
{
  return CoreTipRecord.id.getter();
}

id sub_2489C391C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 1751));
}

void sub_2489C3928()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = 0x6E69487070416E69;
  *(_QWORD *)(v0 + 96) = 0xE900000000000074;
}

unint64_t sub_2489C3964()
{
  return 0xD000000000000010;
}

uint64_t sub_2489C3978(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(a1, 1, v1);
}

uint64_t sub_2489C3994()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_2489C39AC()
{
  return sub_248A45C48();
}

uint64_t sub_2489C39C4()
{
  return 0x7461636964657270;
}

uint64_t sub_2489C39E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_2489C39FC()
{
  return swift_beginAccess();
}

void sub_2489C3A28(os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
}

uint64_t sub_2489C3A38()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C3A50()
{
  return sub_248A45384();
}

uint64_t sub_2489C3A68(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_2489C3A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489C3A80()
{
  return sub_248A45C6C();
}

uint64_t sub_2489C3A94()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489B8F74((__int128 *)(v0 - 160), v0 - 120);
  v1 = *(_QWORD *)(v0 - 96);
  sub_2489BE100((_QWORD *)(v0 - 120), v1);
  return v1;
}

uint64_t sub_2489C3AC8()
{
  return swift_dynamicCast();
}

uint64_t sub_2489C3ADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_2489C3AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_2489C3B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 208), v1);
}

uint64_t sub_2489C3B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_2489C3B30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[1];
  *(_QWORD *)(v1 - 216) = v0[2];
  *(_QWORD *)(v1 - 208) = v2;
  v3 = v0[3];
  *(_QWORD *)(v1 - 232) = v0[4];
  *(_QWORD *)(v1 - 224) = v3;
  v4 = v0[5];
  *(_QWORD *)(v1 - 248) = v0[6];
  *(_QWORD *)(v1 - 240) = v4;
  *(_QWORD *)(v1 - 256) = v0[7];
  *(_QWORD *)(v1 - 264) = v0[8];
  *(_QWORD *)(v1 - 272) = v0[9];
  *(_QWORD *)(v1 - 280) = v0[10];
  *(_QWORD *)(v1 - 288) = v0[11];
  *(_QWORD *)(v1 - 296) = v0[12];
  *(_QWORD *)(v1 - 304) = v0[13];
  *(_QWORD *)(v1 - 312) = v0[14];
}

uint64_t sub_2489C3BB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C3BBC()
{
  return sub_248A45CC0();
}

uint64_t sub_2489C3BCC(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE834(a1, 1, v1);
}

uint64_t sub_2489C3BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489C3BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_2489C3BF8()
{
  return sub_248A45DBC();
}

void sub_2489C3C28(__int16 a1)
{
  sub_248A1F470(a1);
}

uint64_t sub_2489C3C38()
{
  return sub_248A44EEC();
}

uint64_t sub_2489C3C48()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C3C64()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2489BE604(v1, v0);
}

uint64_t sub_2489C3C70()
{
  return sub_248A4557C();
}

uint64_t *sub_2489C3C7C()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489B8F74((__int128 *)(v1 - 160), v1 - 120);
  sub_2489BE100((_QWORD *)(v1 - 120), *(_QWORD *)(v1 - 96));
  *(_QWORD *)(v1 - 136) = v0;
  return sub_2489BE690((uint64_t *)(v1 - 160));
}

id sub_2489C3CB0(id a1)
{
  return a1;
}

uint64_t sub_2489C3CC0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(char *))(a1 + 16))((char *)&a2 - v2);
}

uint64_t sub_2489C3CD8()
{
  return sub_248A45DBC();
}

uint64_t sub_2489C3CF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C3D04(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE7E0(v1, 1, 1, a1);
}

uint64_t sub_2489C3D18@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_2489C3D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489C3D34(uint64_t a1, uint64_t a2, ...)
{
  uint64_t *v2;
  va_list va;

  va_start(va, a2);
  return sub_2489C32D0((uint64_t)va, v2);
}

uint64_t sub_2489C3D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_2489C3D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489BE7E0(a1, a2, 1, v2);
}

uint64_t sub_2489C3D5C()
{
  return swift_task_alloc();
}

uint64_t sub_2489C3D6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
}

uint64_t sub_2489C3D90()
{
  return sub_248A453F0();
}

uint64_t sub_2489C3DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for WeakReference(0, v4, a3, a4);
}

unint64_t sub_2489C3DC4()
{
  unint64_t result;

  result = qword_254464158;
  if (!qword_254464158)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A97C, &_s14descr2519BBCF9C8ArgumentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464158);
  }
  return result;
}

unint64_t sub_2489C3E00()
{
  unint64_t result;

  result = qword_254463B80;
  if (!qword_254463B80)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A92C, &_s14descr2519BBCF9C8ArgumentO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463B80);
  }
  return result;
}

uint64_t sub_2489C3E3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t destroy for AnyCodable(uint64_t a1)
{
  return sub_2489BCE44(a1);
}

uint64_t sub_2489C3EC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CoreParameter()
{
  return objc_opt_self();
}

uint64_t sub_2489C3FDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2489C330C(&qword_254464D40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2489C401C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t destroy for logger(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_248A45024();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t CoreParameterProtocol.valueType.getter()
{
  swift_getAssociatedTypeWitness();
  swift_getMetatypeMetadata();
  return sub_248A454F8();
}

char *sub_2489C40B0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_2489C1A3C();
    result = (char *)sub_2489C39AC();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_2489C14D0(a3, result);
  }
  return result;
}

uint64_t _s14descr2519BBCF9C8ArgumentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2489C4150(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_2489C4150(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return sub_248A453F0();
  return result;
}

uint64_t type metadata accessor for CoreRule()
{
  return objc_opt_self();
}

uint64_t sub_2489C4188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_2544641F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2489C41D0(char a1)
{
  int v1;
  char v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;
  char v9;

  v1 = a1 & 1;
  CoreRuleRecord.status.getter();
  if ((v2 != 2) == v1 || (CoreRuleRecord.status.getter(), !v3))
  {
    CoreRuleRecord.status.setter();
    if (qword_254464240 != -1)
      swift_once();
    v4 = type metadata accessor for logger();
    sub_2489C401C(v4, (uint64_t)&unk_254464228);
    *(_QWORD *)&v7[0] = 0;
    *((_QWORD *)&v7[0] + 1) = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    CoreRuleRecord.id.getter();
    sub_248A4557C();
    sub_2489BBC60();
    sub_248A4557C();
    CoreRuleRecord.status.getter();
    v9 = v5;
    sub_248A45BAC();
    sub_2489BE9AC();
    sub_2489BBC60();
    sub_248A03EE8();
    if (v6)
    {
      v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_248A079B8();
      sub_248A07CDC((uint64_t)v7);
      swift_release();
    }
  }
}

void CoreRule.Predicate.Operator.evaluate<A>(value:predicateData:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  char **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;

  v8 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v11;
  v12 = sub_248A44FA0();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v20 - v14;
  if (a3 >> 60 == 15)
  {
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    sub_248A46098();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    v16 = v22;
    v17 = v23;
    sub_2489C9824();
    sub_2489BF740();
    *v18 = v16;
    v18[1] = (char *)v17;
    swift_willThrow();
  }
  else
  {
    v20 = a1;
    sub_2489C6B54(a2, a3);
    v19 = v21;
    static PredicateCoder.decode<A>(_:from:)(a4, (uint64_t)v15);
    if (v19)
    {
      sub_2489BDB94(a2, a3);
    }
    else
    {
      v21 = v8;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, a4);
      v22 = v10;
      sub_248A44F94();
      sub_2489C083C();
      sub_2489C0A04();
    }
  }
  sub_2489BA808();
}

uint64_t static PredicateCoder.decode<A>(_:from:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[8];

  v19[0] = a2;
  v4 = sub_248A44DF0();
  v19[1] = *(_QWORD *)(v4 - 8);
  v19[2] = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = a1;
  v19[7] = a1;
  v8 = sub_248A44FA0();
  v9 = sub_248A45924();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)v19 - v16;
  MEMORY[0x2495A2D34](MEMORY[0x24BDCF708], v8);
  sub_2489BE31C();
  if (v2)
  {

    sub_2489BD920((uint64_t)v17, 1);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    static PredicateCodableConfiguration.standardConfigurationWithKeyPaths<A>(for:)((uint64_t)v7);
    MEMORY[0x2495A2D34](MEMORY[0x24BDCF6F0], v8);
    sub_248A2A46C();
    sub_2489C25C0();
  }
  else
  {
    v14 = v17;
  }
  sub_2489BD920((uint64_t)v14, 0);
  return (*(uint64_t (**)(_QWORD, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v19[0], v14, v8);
}

void sub_2489C47EC()
{
  __int128 v0;

  sub_248A1A360();
  sub_2489C6D5C(0x4379616C70736964, 0xEC000000746E756FLL, &v0);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BFB58();
  sub_2489BDA70();
  sub_2489C4F7C();
}

uint64_t sub_2489C4880(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2489C48C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = *(void **)(v0 + 16);
    if (!v2
      || (v3 = (void *)sub_248A454BC(),
          v4 = objc_msgSend(v2, sel_arrayForKey_, v3),
          v3,
          !v4)
      || (v5 = sub_248A4569C(), v4, v6 = sub_248A4307C(v5), swift_bridgeObjectRelease(), !v6))
    {
      swift_bridgeObjectRelease();
      v6 = MEMORY[0x24BEE4AF8];
    }
    v1 = sub_2489BA59C(v6);
    *(_QWORD *)(v0 + 24) = v1;
    sub_248A453F0();
    swift_bridgeObjectRelease();
  }
  sub_248A453F0();
  return v1;
}

void sub_2489C49B4()
{
  uint64_t v0;
  _OWORD *v1;

  sub_248A1A360();
  sub_248A1C134();
  sub_2489C6D5C(0xD000000000000010, v0, v1);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BFB58();
  sub_2489BDA70();
  sub_2489BA928();
}

void sub_2489C4A3C()
{
  __int128 v0;

  sub_248A1A360();
  sub_2489C6D5C(0x6C7073694478616DLL, 0xEF746E756F437961, &v0);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BFB58();
  sub_2489BDA70();
  sub_2489C4F7C();
}

void sub_2489C4AD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_2489BEDB8(a1, a2);
  sub_2489BF7BC(v2);
  sub_2489BA7D0();
}

void sub_2489C4AF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_2489C330C(a2);
  sub_2489BF7BC(v2);
  sub_2489BA7D0();
}

void sub_2489C4B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_2489C62D8();
  sub_2489C4C6C(0x696C457473726966, 0xED0000656C626967, v2, &v3);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BA858();
  if (sub_2489BF7AC())
    sub_2489BBCD0();
  else
    sub_248A1C07C();
  sub_248A1C0D8();
  sub_2489BA828();
}

void sub_2489C4BD8()
{
  uint64_t v0;
  __int128 v1;

  sub_248A0475C();
  sub_2489C4C6C(0xD000000000000010, 0x8000000248A4FF50, v0, &v1);
  sub_2489C330C(&qword_2544643E0);
  swift_dynamicCast();
  sub_2489BDA70();
  sub_2489C4F7C();
}

double sub_2489C4C6C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  return sub_2489D93A0(a1, a2, a3, (void (*)(unint64_t, _OWORD *))sub_2489C81EC, a4);
}

uint64_t _s7OptionsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)(a2 + 41);
  sub_248A453F0();
  return a1;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnyKeyPath.toString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  Swift::String result;
  _QWORD v23[6];
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v2 = sub_248A459CC();
  if (!v3)
  {
    v4 = sub_248A459D8();
    swift_retain();
    v6 = sub_248A454F8();
    v8 = v7;
    v24 = 46;
    v25 = 0xE100000000000000;
    MEMORY[0x24BDAC7A8](v6, v7);
    v23[2] = &v24;
    sub_248A453F0();
    v9 = sub_2489C2A08(1, 1u, sub_2489C2DE0, (uint64_t)v23, v6, v8);
    sub_2489BBC58();
    v5 = sub_2489D2160(v9);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    swift_bridgeObjectRelease();
    if (v15)
    {
      if ((v5 ^ v11) >= 0x4000)
      {
        if (!sub_2489D21C0(0x657475706D6F633CLL, 0xE900000000000064, v5, v11))
        {
          v4 = MEMORY[0x2495A1C9C](v5, v11, v13, v15);
          v5 = v21;
          sub_2489BBC58();
          goto LABEL_8;
        }
        sub_2489BBC58();
        v24 = 0;
        v25 = 0xE000000000000000;
        sub_248A45A74();
        sub_248A4557C();
        v23[5] = v1;
        sub_248A45BAC();
        v20 = v24;
        v17 = v25;
        sub_2489C9824();
        sub_2489BF740();
        *v16 = v20;
        goto LABEL_7;
      }
      sub_2489BBC58();
    }
    sub_2489C9824();
    sub_2489BF740();
    *v16 = 0xD000000000000019;
    v17 = 0x8000000248A4F1A0;
LABEL_7:
    v16[1] = v17;
    swift_willThrow();
    goto LABEL_8;
  }
  v4 = v2;
  v5 = v3;
LABEL_8:
  v18 = v4;
  v19 = (void *)v5;
  result._object = v19;
  result._countAndFlagsBits = v18;
  return result;
}

void sub_2489C4F10(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2489D47D4(a1, (uint64_t)&a9, v9, a4, a5);
}

id sub_2489C4F1C(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, 0, v3);
}

uint64_t sub_2489C4F28()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 1;
  return sub_248A453F0();
}

uint64_t sub_2489C4F40()
{
  return 16;
}

uint64_t sub_2489C4F4C()
{
  return CoreEventRecord.id.getter();
}

uint64_t sub_2489C4F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v0, v1);
}

void sub_2489C4F84()
{
  sub_2489F7468();
}

uint64_t sub_2489C4F98()
{
  return sub_248A45D50();
}

void *sub_2489C4FA4()
{
  size_t v0;

  return malloc(v0);
}

uint64_t sub_2489C4FAC()
{
  return swift_slowAlloc();
}

uint64_t sub_2489C4FB4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[17] + 8))(v0[18], v0[16]);
}

uint64_t sub_2489C4FC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 200) = v8;
  *(_QWORD *)(v9 - 224) = a7;
  *(_QWORD *)(v9 - 216) = a8;
  *(_DWORD *)(v9 - 228) = a6;
  *(_DWORD *)(v9 - 252) = a5;
  *(_QWORD *)(v9 - 264) = a4;
  *(_QWORD *)(v9 - 272) = a2;
  *(_QWORD *)(v9 - 208) = result;
  return result;
}

uint64_t sub_2489C5008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_2489C5018@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_2489C5024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2489C5038()
{
  uint64_t v0;

  return v0 + 32;
}

unint64_t sub_2489C5058()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_248A00540();
}

uint64_t sub_2489C5064()
{
  return swift_allocObject();
}

uint64_t sub_2489C5074()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C5090()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489BE7E0(v1, 0, 1, v0);
}

uint64_t sub_2489C50CC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_248A3849C(a1, 255, a3, a4);
}

uint64_t sub_2489C50D4()
{
  return sub_248A455E8();
}

uint64_t sub_2489C5118()
{
  return swift_task_alloc();
}

uint64_t sub_2489C5120()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C5134()
{
  return sub_248A4530C();
}

uint64_t sub_2489C5154()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C5160()
{
  return sub_248A4557C();
}

uint64_t sub_2489C5168()
{
  return sub_248A3A52C();
}

uint64_t sub_2489C5174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2489ECC18(a1, a2, 1, v2);
}

uint64_t sub_2489C5180()
{
  return sub_248A4557C();
}

uint64_t sub_2489C5198()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2489C401C(v0, v1);
}

uint64_t sub_2489C51B4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C51CC()
{
  return swift_task_alloc();
}

_OWORD *sub_2489C51E0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v4;
  _QWORD v6[4];
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_2489C5618(a1, (uint64_t)&v9, &qword_254464AF0);
  if (v10)
  {
    sub_2489C3288(&v9, &v7);
    v6[3] = MEMORY[0x24BEE4AD8] + 8;
    v6[0] = swift_allocObject();
    sub_2489C3288(&v7, (_OWORD *)(v6[0] + 16));
    sub_2489C3298(a1, &qword_254464AF0);
    v4 = (__int128 *)v6;
  }
  else
  {
    v8 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v7 = 0x3E6C6C756E3CLL;
    *((_QWORD *)&v7 + 1) = 0xE600000000000000;
    sub_2489C3298(a1, &qword_254464AF0);
    v4 = &v7;
  }
  return sub_2489C3288(v4, a2);
}

id CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t ObjectType;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  id v28;
  objc_class *v30;
  char v31;
  uint64_t v32;
  _QWORD v33[4];
  objc_super v34;
  _OWORD v35[2];

  v6 = v5;
  ObjectType = swift_getObjectType();
  v13 = a1[1];
  v14 = *((unsigned __int8 *)a1 + 16);
  v15 = *a2;
  v30 = (objc_class *)ObjectType;
  v32 = *a1;
  if (*((_BYTE *)a1 + 16))
  {
    if (v14 != 1)
    {
      v21 = v6;
      v19 = 0;
      v20 = 0xE000000000000000;
      goto LABEL_7;
    }
    v16 = 0x286C617665;
    v17 = 0xE500000000000000;
  }
  else
  {
    v16 = 0x28746E756F63;
    v17 = 0xE600000000000000;
  }
  *(_QWORD *)&v35[0] = v16;
  *((_QWORD *)&v35[0] + 1) = v17;
  v18 = v6;
  sub_248A4557C();
  sub_2489C1B58();
  v20 = *((_QWORD *)&v35[0] + 1);
  v19 = *(_QWORD *)&v35[0];
LABEL_7:
  v33[0] = v19;
  v33[1] = v20;
  sub_2489BF828();
  LOBYTE(v35[0]) = v15;
  CoreRule.Predicate.Operator.rawValue.getter();
  sub_2489C0B74();
  sub_2489B71DC();
  sub_2489BF828();
  sub_2489C5618(a3, (uint64_t)v35, &qword_254464AF0);
  sub_2489C330C(&qword_254464AF0);
  sub_248A454F8();
  sub_2489C0B74();
  sub_2489B71DC();
  v31 = v15;
  v22 = v13;
  if (a4 && *(_QWORD *)(a4 + 16))
  {
    *(_QWORD *)&v35[0] = 0x736569726575712ELL;
    *((_QWORD *)&v35[0] + 1) = 0xE900000000000028;
    sub_2489FEB90(a4);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489C1B58();
  }
  sub_2489C5658();
  sub_2489B71DC();
  swift_bridgeObjectRelease();
  if (a5 && *(_QWORD *)(a5 + 16))
  {
    *(_QWORD *)&v35[0] = 0;
    *((_QWORD *)&v35[0] + 1) = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v35[0] = 0x646572706275732ELL;
    *((_QWORD *)&v35[0] + 1) = 0xEF28736574616369;
    sub_248A00878(a5);
    sub_248A4557C();
    sub_2489B71DC();
    sub_2489C1B58();
  }
  v23 = sub_2489C5658();
  v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = (uint64_t *)&v6[OBJC_IVAR___Predicate_id];
  *v26 = v23;
  v26[1] = v25;
  v27 = &v6[OBJC_IVAR___Predicate_argument];
  *(_QWORD *)v27 = v32;
  *((_QWORD *)v27 + 1) = v22;
  v27[16] = v14;
  *(_OWORD *)&v6[OBJC_IVAR___Predicate_rawdata] = xmmword_248A4A2E0;
  v6[OBJC_IVAR___Predicate_operation] = v31;
  if (*(_QWORD *)(a3 + 24))
  {
    sub_2489C5618(a3, (uint64_t)v33, &qword_254464AF0);
    sub_2489C51E0((uint64_t)v33, v35);
  }
  else
  {
    memset(v35, 0, sizeof(v35));
  }
  sub_2489BCDC0((uint64_t)v35, (uint64_t)&v6[OBJC_IVAR___Predicate_value]);
  *(_QWORD *)&v6[OBJC_IVAR___Predicate_queries] = a4;
  *(_QWORD *)&v6[OBJC_IVAR___Predicate_subpredicates] = a5;

  v34.receiver = v6;
  v34.super_class = v30;
  v28 = objc_msgSendSuper2(&v34, sel_init);
  sub_2489C3298(a3, &qword_254464AF0);
  return v28;
}

void sub_2489C55EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_2489C0310(a1, a2, a3);
  sub_2489BDA64(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_2489BA7D0();
}

void sub_2489C5618(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_2489C330C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_2489BA7D0();
}

uint64_t sub_2489C5658()
{
  uint64_t v1;

  sub_248A453F0();
  v1 = sub_248A455D0();
  sub_248A45570();
  return v1;
}

uint64_t CoreRule.Predicate.Operator.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489C56F8 + 4 * byte_248A4AA2C[*v0]))(15677, 0xE200000000000000);
}

uint64_t sub_2489C56F8()
{
  return 15649;
}

uint64_t sub_2489C5700()
{
  return 60;
}

uint64_t sub_2489C570C()
{
  return 15676;
}

uint64_t sub_2489C5714()
{
  return 62;
}

uint64_t sub_2489C5720()
{
  return 15678;
}

uint64_t sub_2489C5728()
{
  return 28265;
}

uint64_t sub_2489C5730()
{
  return 6581857;
}

uint64_t sub_2489C5740()
{
  return 29295;
}

uint64_t sub_2489C5748()
{
  return 7889261;
}

uint64_t sub_2489C5758()
{
  return 7235949;
}

uint64_t sub_2489C5768()
{
  return 0x7461636964657270;
}

uint64_t sub_2489C5784()
{
  return 0x6E776F6E6B6E75;
}

void sub_2489C579C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v5[32];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_248A1A360();
  v8 = v4;
  v6 = a1;
  v7 = a2;
  sub_2489BA7EC();
  sub_2489C330C(&qword_254464278);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C27D8();
  sub_248A2F3A0((uint64_t)v5, 0x4449656C646E7562, 0xE800000000000000);
  swift_bridgeObjectRelease();
  sub_2489C0C20();
  sub_2489BFB64();
}

void sub_2489C5824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  sub_2489B6B60();
  sub_248A1C144();
  sub_2489C330C(&qword_2544642E8);
  sub_2489C330C(&qword_2544643C0);
  v0 = sub_2489C1C18();
  v8 = sub_248A1C1F4(v0, v1, v2, v3, v4, v5, v6, v7, v10);
  sub_248A1C074((uint64_t)v8, 23, v9);
  sub_2489C6C2C();
  sub_2489BA8A4();
}

void sub_2489C5880()
{
  uint64_t v0;

  sub_2489B6B60();
  sub_248A1C144();
  sub_2489C330C(&qword_2544642E8);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C1C18();
  sub_2489C61C4((uint64_t)"usesConstellation", v0);
  sub_2489C6C2C();
  sub_2489BA8A4();
}

void sub_2489C58D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  sub_2489B6B60();
  sub_248A1C144();
  sub_2489C330C(&qword_2544642E8);
  sub_2489C330C(&qword_2544643C0);
  v0 = sub_2489C1C18();
  v8 = sub_248A1C1F4(v0, v1, v2, v3, v4, v5, v6, v7, v10);
  sub_248A1C074((uint64_t)v8, 16, v9);
  sub_2489C6C2C();
  sub_2489BA8A4();
}

uint64_t sub_2489C593C()
{
  return sub_248A45C9C();
}

uint64_t sub_2489C5964()
{
  return _ss8DurationV10TipKitCoreE7secondsSivg_0();
}

uint64_t sub_2489C5970()
{
  return swift_retain();
}

uint64_t sub_2489C597C()
{
  return sub_248A4557C();
}

uint64_t sub_2489C5984()
{
  uint64_t v0;

  return v0;
}

void sub_2489C59A0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_2489BA29C(a1, v3, a3);
}

uint64_t sub_2489C59C0()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C59C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 88);
}

void sub_2489C59E4()
{
  __int128 v0;

  sub_248A1A360();
  sub_2489C6D5C(0x7669686372417369, 0xEA00000000006465, &v0);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BFB58();
  sub_2489BDA70();
  sub_2489BA928();
}

void sub_2489C5A68()
{
  uint64_t v0;

  sub_2489B6B60();
  sub_248A1C144();
  sub_2489C330C(&qword_2544642E8);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C1C18();
  sub_248A2F3A0((uint64_t)&v0, 0x7669686372417369, 0xEA00000000006465);
  sub_2489C6C2C();
  sub_2489BA8A4();
}

void sub_2489C5AD4()
{
  uint64_t v0;

  sub_2489B6B60();
  sub_248A1C144();
  sub_2489C330C(&qword_2544642E8);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C1C18();
  sub_2489C61C4((uint64_t)"usesCoreAnalytics", v0);
  sub_2489C6C2C();
  sub_2489BA8A4();
}

uint64_t String.init(type:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_2489C330C(&qword_2577A5958);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = a1;
  swift_getMetatypeMetadata();
  v7 = sub_248A45510();
  v9 = v8;
  v24 = 46;
  v25 = 0xE100000000000000;
  v19 = &v24;
  sub_248A453F0();
  v10 = sub_2489C2A08(0x7FFFFFFFFFFFFFFFLL, 1u, sub_2489C2DE0, (uint64_t)v18, v7, v9);
  swift_bridgeObjectRelease();
  v24 = sub_2489C5D7C(1, v10);
  v25 = v11;
  v26 = v12;
  v27 = v13;
  sub_2489C330C(&qword_254464B90);
  sub_2489C5D3C(&qword_254464B88, &qword_254464B90, MEMORY[0x24BEE2180]);
  sub_2489C5E30();
  v14 = sub_248A45630();
  v16 = v15;
  swift_unknownObjectRelease();
  v22 = v14;
  v23 = v16;
  sub_248A44FF4();
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_248A42168();
  sub_248A421A4();
  sub_2489C5D3C(&qword_2577A5970, &qword_2577A5958, MEMORY[0x24BEE7460]);
  sub_248A45894();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_2489C5D3C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_2489BCD7C(a2);
    result = MEMORY[0x2495A2D34](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2489C5D7C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_2489C5DE4(0, result, v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if (v3 < v5)
    goto LABEL_9;
  if ((v5 & 0x8000000000000000) == 0)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2489C5DE4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

unint64_t sub_2489C5E30()
{
  unint64_t result;

  result = qword_254464B80;
  if (!qword_254464B80)
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_254464B80);
  }
  return result;
}

uint64_t sub_2489C5E6C()
{
  uint64_t v0;

  return v0;
}

void sub_2489C5E88()
{
  sub_2489BE9AC();
}

uint64_t sub_2489C5E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_2489C5EA8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 176) = result;
  *(_QWORD *)(v5 - 168) = v4;
  *(_QWORD *)(v5 - 192) = a3;
  *(_QWORD *)(v5 - 184) = a4;
  *(_DWORD *)(v5 - 204) = a2;
  return result;
}

uint64_t sub_2489C5EBC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t sub_2489C5EC8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = *(_QWORD *)(result - 8);
  return result;
}

void sub_2489C5EE4()
{
  uint64_t v0;

  sub_2489F93C0(0, 0xE000000000000000, v0);
}

uint64_t sub_2489C5EF8()
{
  return sub_248A45CF0();
}

void sub_2489C5F08(uint64_t a1)
{
  uint64_t *v1;

  sub_2489C4AD4(a1, v1);
}

uint64_t sub_2489C5F10()
{
  uint64_t v0;

  return sub_2489BCE44(v0);
}

uint64_t sub_2489C5F18()
{
  return sub_248A45CA8();
}

uint64_t sub_2489C5F24()
{
  return swift_allocObject();
}

uint64_t sub_2489C5F30()
{
  return CoreTipRecord.id.getter();
}

void sub_2489C5F38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_2489C55EC(a1, a2, v2);
}

uint64_t sub_2489C5F40()
{
  uint64_t v0;

  return v0;
}

void sub_2489C5F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  sub_248A2B668(a1, a2, 18, 0x746F6E20A280E220, 0xAD0000205D656369, a6);
}

id sub_2489C5F74()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 695));
}

uint64_t sub_2489C5F80()
{
  return swift_task_alloc();
}

uint64_t sub_2489C5F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v1, v0);
}

uint64_t sub_2489C5FA8(double a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_2489C330C(&qword_254464AE0);
  v3 = sub_2489BA860();
  *(_DWORD *)(v3 + 24) = 0;
  *(double *)(v3 + 16) = a1;
  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

void sub_2489C5FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_2489C330C(&qword_254464AD0);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_2489C5618(a1, v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16), &qword_254464A98);
  sub_2489C4AD4(a1, &qword_254464A98);
  *(_QWORD *)(v1 + 16) = v3;
  sub_2489B6AF4();
}

unint64_t sub_2489C6088()
{
  unint64_t result;

  result = qword_254464268;
  if (!qword_254464268)
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254464268);
  }
  return result;
}

void sub_2489C60C4()
{
  sub_2489EC5FC();
}

uint64_t sub_2489C60D0()
{
  return sub_248A453F0();
}

uint64_t sub_2489C60D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C60E8()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C60F8()
{
  return CoreParameterRecord.rules.getter();
}

uint64_t sub_2489C6104()
{
  return sub_248A44FC4();
}

uint64_t sub_2489C610C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t sub_2489C611C()
{
  return _s12DisplayEventVMa();
}

uint64_t sub_2489C6124()
{
  return swift_retain();
}

uint64_t sub_2489C612C()
{
  return sub_248A45924();
}

uint64_t sub_2489C6138()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C6164()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 176);
  return sub_248A453F0();
}

void sub_2489C6174()
{
  sub_2489EC5E0();
}

uint64_t sub_2489C6180()
{
  return sub_248A45540();
}

uint64_t sub_2489C618C()
{
  return swift_getKeyPath();
}

uint64_t sub_2489C6194()
{
  return sub_248A451F8();
}

uint64_t sub_2489C61A0()
{
  return sub_248A451A4();
}

uint64_t sub_2489C61B4()
{
  return swift_task_isCurrentExecutor();
}

void sub_2489C61C4(uint64_t a1@<X8>, uint64_t a2)
{
  sub_248A2F3A0((uint64_t)&a2, 0xD000000000000011, (a1 - 32) | 0x8000000000000000);
}

uint64_t sub_2489C61E0()
{
  return sub_248A45CD8();
}

uint64_t *sub_2489C61EC()
{
  uint64_t *v0;
  uint64_t v1;

  v0[3] = v1;
  return sub_2489BE690(v0);
}

uint64_t sub_2489C61F8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2489C6204()
{
  return sub_248A44E38();
}

uint64_t sub_2489C6210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_2489C6218()
{
  return swift_dynamicCast();
}

uint64_t type metadata accessor for CoreTipRecord()
{
  uint64_t result;

  result = qword_2544646F0;
  if (!qword_2544646F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2489C625C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_2489C0310(a1, a2, a3);
  sub_2489BDA64(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_2489BA7D0();
}

uint64_t sub_2489C6288()
{
  return sub_248A45CB4();
}

void sub_2489C629C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

void sub_2489C62AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 168) = (char *)&a9 - v9;
}

void sub_2489C62D8()
{
  sub_248A1A360();
}

void sub_2489C62F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_2489C55EC(a1, a2, v2);
}

uint64_t sub_2489C62F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_2489C6304(uint64_t a1)
{
  uint64_t v1;

  return sub_2489BE7E0(v1, 0, 1, a1);
}

uint64_t sub_2489C6318()
{
  return sub_248A45924();
}

double CoreTip.displayDuration.getter()
{
  double v0;

  sub_2489C00F0();
  v0 = sub_248A088B8();
  sub_2489BF7F0();
  return v0;
}

void sub_2489C635C(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  double v4;

  v4 = sub_2489C6384(a1);
  if (!v2)
    *a2 = v4;
}

double sub_2489C6384(uint64_t a1)
{
  return *(double *)a1;
}

void sub_2489C638C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489BBC7C();
  v6 = v5 - v4;
  sub_2489C5618(a1, v5 - v4, &qword_254464A98);
  sub_2489C00F0();
  sub_248A08B74(v6, sub_2489C6418);
  sub_2489BF7F0();
  v7 = sub_2489C0138();
  sub_2489C4AD4(v7, v8);
}

void sub_2489C6418(uint64_t a1, uint64_t a2)
{
  sub_2489C4AD4(a1, &qword_254464A98);
  sub_2489C5618(a2, a1, &qword_254464A98);
}

uint64_t sub_2489C6468@<X0>(uint64_t a1@<X8>)
{
  sub_2489C00F0();
  sub_248A08920(&qword_254464A98, a1);
  return sub_2489BFE5C();
}

void sub_2489C649C(_BYTE *a1@<X8>)
{
  char v2;
  char v3;

  if (qword_254463E68 != -1)
    swift_once();
  sub_2489BA530();
  sub_248A453F0();
  sub_2489F74EC();
  sub_2489B71DC();
  sub_2489BEC4C();
  v2 = v3;
  if (v3 == 3)
    v2 = 0;
  *a1 = v2;
  sub_2489BA868();
}

uint64_t type metadata accessor for CoreTip()
{
  uint64_t result;

  result = qword_254464B08;
  if (!qword_254464B08)
    return swift_getSingletonMetadata();
  return result;
}

void CoreRule.Predicate.Operator.evaluate<A>(lhs:rhs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  void *v88;
  Swift::OpaquePointer_optional v89;

  v83 = a2;
  v5 = *(_QWORD *)(a3 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1, a2);
  v82 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v80 = (char *)&v79 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v81 = (uint64_t)&v79 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v79 - v16;
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v79 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v79 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v29 = (char *)&v79 - v28;
  v31 = MEMORY[0x24BDAC7A8](v27, v30);
  v33 = (char *)&v79 - v32;
  v34 = *v3;
  v35 = v31;
  if ((sub_2489FE108(v34, 0, CoreRule.Predicate.Operator.rawValue.getter) & 1) != 0)
  {
    sub_2489C1B74((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_2489C330C(&qword_254463A80);
    if ((sub_2489BFDC8() & 1) != 0)
    {
      v36 = sub_2489C3A94();
      default argument 1 of Equatable.isEqual(_:checkReverse:)(v36, v37);
      v38 = sub_2489C23F8();
      Equatable.isEqual(_:checkReverse:)(v38, v39);
LABEL_31:
      sub_2489BCE44((uint64_t)v86);
      goto LABEL_32;
    }
    sub_2489C2724();
    sub_2489BF844(v40, &qword_2577A5210);
  }
  if ((sub_2489FE108(v34, 1, CoreRule.Predicate.Operator.rawValue.getter) & 1) != 0)
  {
    sub_2489C1B74((uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_2489C330C(&qword_254463A80);
    if ((sub_2489BFDC8() & 1) != 0)
    {
      sub_2489C3A94();
      default argument 1 of Equatable.isNotEqual(_:checkReverse:)();
      v41 = sub_2489C23F8();
      Equatable.isNotEqual(_:checkReverse:)(v41, v42);
      goto LABEL_31;
    }
    sub_2489C2724();
    sub_2489BF844(v43, &qword_2577A5210);
  }
  if ((sub_2489FE108(v34, 6, CoreRule.Predicate.Operator.rawValue.getter) & 1) != 0)
  {
    sub_2489C1B74((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_2489C330C(&qword_254463A80);
    if ((sub_2489BFDC8() & 1) != 0)
    {
      sub_2489B8F74(&v84, (uint64_t)v86);
      v44 = v87;
      sub_2489BE100(v86, v87);
      v45 = sub_2489BE648(v83, (uint64_t)&v84);
      if (v85)
      {
        sub_2489C330C(&qword_2544647C8);
        if (sub_2489BF7AC())
          v46 = v88;
        else
          v46 = 0;
      }
      else
      {
        sub_2489BF844(v45, &qword_254464AF0);
        v46 = 0;
      }
      v89.value._rawValue = v46;
      v89.is_nil = v44;
      Equatable.exists(in:)(v89);
      swift_bridgeObjectRelease();
      sub_2489BCE44((uint64_t)v86);
      goto LABEL_32;
    }
    sub_2489C2724();
    sub_2489BF844(v47, &qword_2577A5210);
  }
  if ((sub_2489FE108(v34, 2, CoreRule.Predicate.Operator.rawValue.getter) & 1) != 0)
  {
    sub_2489C1B74((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_2489C330C(&qword_2544624E8);
    if ((sub_2489BFDC8() & 1) != 0)
    {
      v48 = sub_2489C3A94();
      default argument 1 of Comparable.isLessThan(_:checkReverse:)(v48, v49);
      v50 = sub_2489C23F8();
      Comparable.isLessThan(_:checkReverse:)(v50, v51, v52, v53);
      goto LABEL_31;
    }
    sub_2489C2724();
    sub_2489BF844(v54, &qword_2577A50C0);
  }
  if ((sub_2489FE108(v34, 3, CoreRule.Predicate.Operator.rawValue.getter) & 1) != 0)
  {
    sub_2489C1B74((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_2489C330C(&qword_2544624E8);
    if ((sub_2489BFDC8() & 1) != 0)
    {
      v55 = sub_2489C3A94();
      default argument 1 of Comparable.isLessThanOrEqual(_:checkReverse:)(v55, v56);
      v57 = sub_2489C23F8();
      Comparable.isLessThanOrEqual(_:checkReverse:)(v57, v58, v59, v60);
      goto LABEL_31;
    }
    sub_2489C2724();
    sub_2489BF844(v61, &qword_2577A50C0);
  }
  if ((sub_2489FE108(v34, 4, CoreRule.Predicate.Operator.rawValue.getter) & 1) != 0)
  {
    sub_2489C1B74(v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_2489C330C(&qword_2544624E8);
    if ((sub_2489BFDC8() & 1) != 0)
    {
      v62 = sub_2489C3A94();
      default argument 1 of Comparable.isGreaterThan(_:checkReverse:)(v62, v63);
      v64 = sub_2489C23F8();
      Comparable.isGreaterThan(_:checkReverse:)(v64, v65, v66, v67);
      goto LABEL_31;
    }
    sub_2489C2724();
    sub_2489BF844(v68, &qword_2577A50C0);
  }
  if ((sub_2489FE108(v34, 5, CoreRule.Predicate.Operator.rawValue.getter) & 1) != 0)
  {
    v69 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v69(v80, v35, a3);
    sub_2489C330C(&qword_2544624E8);
    if ((sub_2489BFDC8() & 1) != 0)
    {
      v70 = sub_2489C3A94();
      default argument 1 of Comparable.isGreaterThanOrEqual(_:checkReverse:)(v70, v71);
      v72 = sub_2489C23F8();
      Comparable.isGreaterThanOrEqual(_:checkReverse:)(v72, v73, v74, v75);
      goto LABEL_31;
    }
    sub_2489C2724();
    sub_2489BF844(v76, &qword_2577A50C0);
    v69(v82, v35, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v82, v35, a3);
  }
  sub_2489C966C();
  if ((sub_2489BF7AC() & 1) != 0)
  {
    v77 = (void *)v86[0];
    sub_2489BE648(v83, (uint64_t)v86);
    if (v87)
    {
      if ((sub_2489BF7AC() & 1) != 0)
      {
        v78 = (void *)v84;
        LOBYTE(v86[0]) = v34;
        sub_2489FE19C((uint64_t)v77);

      }
      else
      {

      }
    }
    else
    {

      sub_2489C32D0((uint64_t)v86, &qword_254464AF0);
    }
  }
LABEL_32:
  sub_2489BA808();
}

unint64_t sub_2489C6B04()
{
  unint64_t result;

  result = qword_254463870;
  if (!qword_254463870)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A88C, &_s14descr2519BBCF9C8ArgumentO15CountCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463870);
  }
  return result;
}

uint64_t sub_2489C6B40(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2489C6B54(a1, a2);
  return a1;
}

uint64_t sub_2489C6B54(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_2489C6B98()
{
  void *v0;

}

uint64_t sub_2489C6BB0()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_2489C6BC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = a1;
  return swift_continuation_init();
}

uint64_t sub_2489C6BD0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X4>, uint64_t (*a3)(_QWORD)@<X5>, void (*a4)(uint64_t)@<X6>, _BYTE *a5@<X8>)
{
  return sub_2489F4DAC(a1, a2, a3, a4, a5);
}

uint64_t sub_2489C6BD8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 168) + 8))(v0, *(_QWORD *)(v1 - 152));
}

uint64_t sub_2489C6BEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = v0;
  return sub_248A456A8();
}

unint64_t sub_2489C6BF8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_2489BB0F8();
}

unint64_t sub_2489C6C04()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 1;
  return sub_248A01730();
}

uint64_t sub_2489C6C24()
{
  return swift_bridgeObjectRelease();
}

void sub_2489C6C2C()
{
  sub_248A1A410();
}

uint64_t sub_2489C6C38()
{
  return swift_endAccess();
}

uint64_t sub_2489C6C40()
{
  return swift_getObjectType();
}

void sub_2489C6C4C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *))
{
  sub_248A2BF0C(a1, a2, 19, 0x72617720A280E220, 0xAE00205D676E696ELL, a6);
}

uint64_t sub_2489C6C84()
{
  return sub_248A453F0();
}

uint64_t sub_2489C6C90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C6C98()
{
  return sub_248A45CD8();
}

uint64_t sub_2489C6CA4()
{
  return sub_248A453F0();
}

uint64_t sub_2489C6CB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_2489C6CC8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_2489C6CD4()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t sub_2489C6CE8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C6CFC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489C6D10(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

void sub_2489C6D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_248A1DACC(v2, v1, v0, v3);
}

uint64_t sub_2489C6D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

double sub_2489C6D5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_2489C4C6C(a1, a2, v3, a3);
}

uint64_t sub_2489C6D64()
{
  return sub_248A44C7C();
}

void sub_2489C6D6C(__int16 a1)
{
  sub_248A1F470(a1);
}

uint64_t sub_2489C6D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_2489C6D88()
{
  return sub_248A4557C();
}

uint64_t sub_2489C6DA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

void *sub_2489C6DC4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x139uLL);
}

void Dictionary.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_2489BECFC();
  v35 = v1;
  v36 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v33 = v8;
  v10 = sub_2489BBD04(v9);
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v30 - v13;
  v34 = v5;
  sub_248A45924();
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_2489C701C();
  v17 = sub_248A45924();
  v18 = *(_QWORD *)(v17 - 8);
  sub_2489C16C4();
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v30 - v22;
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v21, v25);
  v27 = (char *)&v30 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v23, v36, v17);
  if (sub_2489BE834((uint64_t)v23, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    v28 = 1;
LABEL_6:
    v29 = v37;
    goto LABEL_7;
  }
  sub_2489B7268((uint64_t)v27, (uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
  MEMORY[0x2495A1BD0](v27, v33, v7, v34, v35);
  sub_2489BEE5C(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  if ((sub_2489BF7AC() & 1) == 0)
  {
    v28 = 1;
    sub_2489C0AAC((uint64_t)v14, 1);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
    goto LABEL_6;
  }
  sub_2489C0AAC((uint64_t)v14, 0);
  v29 = v37;
  sub_2489C33D4(v37, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  v28 = 0;
LABEL_7:
  sub_2489C0AAC(v29, v28);
  sub_2489B71E4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD v18[2];

  sub_2489BECFC();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(sub_2489BD9EC() - 8);
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v18 - v11;
  sub_2489BEDF8();
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v13, v14);
  if (v5)
  {
    v18[0] = AnyKeyPath.stringValue.getter();
    v18[1] = v15;
    MEMORY[0x2495A1BD0](v18, v3, MEMORY[0x24BEE0D00], v1, MEMORY[0x24BEE0D10]);
    swift_bridgeObjectRelease();
    if ((sub_2489BF7AC() & 1) != 0)
    {
      sub_2489C5090();
      sub_2489BFB44(v7, (uint64_t)v12, v16);
      v17 = 0;
    }
    else
    {
      v17 = 1;
      sub_2489C1820((uint64_t)v12, 1);
      sub_2489BEE5C(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    }
  }
  else
  {
    v17 = 1;
  }
  sub_2489C1820(v7, v17);
  sub_2489B71E4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_2489BECFC();
  v27 = v2;
  v28 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_2489BD9EC();
  v25 = *(_QWORD *)(v12 - 8);
  v26 = v12;
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v25 - v15;
  v17 = sub_2489C612C();
  v18 = *(_QWORD *)(v17 - 8);
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_2489C701C();
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_2489BA48C();
  sub_2489C33D4(v1, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  if (sub_2489BE834(v1, 1, v7) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v17);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v0, v1, v7);
    MEMORY[0x2495A1BD0](v0, v27, v7, v5, v28);
    if (sub_2489BE834((uint64_t)v16, 1, v5) != 1)
    {
      v24 = sub_2489C61EC();
      sub_2489C08D4((uint64_t)v24);
      sub_2489C6D78();
      goto LABEL_7;
    }
    sub_2489C6D78();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v26);
  }
  *v11 = 0u;
  v11[1] = 0u;
LABEL_7:
  sub_2489B71E4();
}

uint64_t sub_2489C6FAC()
{
  return sub_248A45F90();
}

void sub_2489C6FB8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_2489C6FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_2489C6FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 200) = (char *)&a9 - v9;
}

void _s10TipKitCore0cA0C17ConstellationTextV4typeAE11ContentTypeOvg_0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_2489C6FF8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void sub_2489C7014(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_248A277F8(a1, 255, a3, a4);
}

__n128 sub_2489C7048(__n128 *a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  __n128 result;

  *(_QWORD *)(v2 + 56) = a1;
  result = *(__n128 *)(v2 + 24);
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = v1;
  a1[2] = result;
  return result;
}

uint64_t sub_2489C7060()
{
  return sub_248A450FC();
}

uint64_t sub_2489C7074()
{
  return swift_task_alloc();
}

void AtomicProperty.append<A>(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  v2 = v1[2];
  v3 = *(_QWORD *)(*v1 + 80);
  v4[2] = *(_QWORD *)(v3 + 16);
  v4[3] = a1;
  sub_2489C38F4((void (*)(uint64_t))sub_2489BBF8C, (uint64_t)v4, v2, v3, MEMORY[0x24BEE4AE0] + 8);
  sub_2489C5930();
}

void Equatable.isEqual(_:checkReverse:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[40];

  sub_2489C0AB8();
  sub_2489C0574();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BFB8C();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489C1C8C();
  sub_2489BE648(a1, v8);
  sub_2489C330C(&qword_254464AF0);
  if (sub_2489C01F0())
  {
    sub_2489C16D0();
    sub_2489C0740();
    sub_248A454B0();
    sub_2489C2848();
  }
  else
  {
    sub_2489C251C();
    if ((a2 & 1) != 0)
    {
      sub_2489BE648(a1, (uint64_t)v13);
      if (v14)
      {
        sub_2489C330C(&qword_254463A80);
        v9 = sub_2489C1978();
        if ((v9 & 1) != 0)
        {
          if (*((_QWORD *)&v16 + 1))
          {
            v10 = sub_2489C3C7C();
            sub_2489BA990((uint64_t)v10);
            v11 = sub_2489BF6B4();
            v12 = Equatable.isEqual(_:checkReverse:)(v11);
            sub_2489BF844(v12, &qword_254464AF0);
            sub_2489BCE44((uint64_t)v18);
            goto LABEL_11;
          }
        }
        else
        {
          v17 = 0;
          v15 = 0u;
          v16 = 0u;
        }
      }
      else
      {
        v9 = sub_2489C32D0((uint64_t)v13, &qword_254464AF0);
        v15 = 0u;
        v16 = 0u;
        v17 = 0;
      }
      sub_2489BF844(v9, &qword_2577A5210);
    }
  }
LABEL_11:
  sub_2489B71E4();
}

uint64_t sub_2489C7218(uint64_t a1)
{
  sub_2489BCE44(a1);
  return a1;
}

id sub_2489C723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)sub_248A454BC();
  swift_bridgeObjectRelease();
  if (a3)
  {
    v5 = (void *)sub_248A45690();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_predicateWithFormat_argumentArray_, v4, v5);

  return v6;
}

uint64_t type metadata accessor for CoreEventRecord()
{
  uint64_t result;

  result = qword_254464618;
  if (!qword_254464618)
    return swift_getSingletonMetadata();
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static CoreRuleProtocol.makeIdentifier(tipIdentifier:operation:subrules:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *a3;
  v20 = a2;
  sub_248A453F0();
  sub_2489BFFCC();
  LOBYTE(v16[0]) = v5;
  CoreRule.Predicate.Operator.rawValue.getter();
  sub_248A4557C();
  sub_2489BDA70();
  sub_248A4557C();
  v6 = *(_QWORD *)(a4 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_2489C74D8();
    v8 = a4 + 32;
    v7 = v19;
    do
    {
      sub_2489C4880(v8, (uint64_t)v16);
      v9 = v17;
      v10 = v18;
      sub_2489BE100(v16, v17);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      v13 = v12;
      sub_2489BCE44((uint64_t)v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489C74D8();
        v7 = v19;
      }
      v14 = *(_QWORD *)(v7 + 16);
      if (v14 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_2489C74D8();
        v7 = v19;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      v15 = v7 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v13;
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  v16[0] = v7;
  sub_2489C330C(&qword_254463D60);
  sub_2489C7F68();
  sub_248A4548C();
  sub_2489BDA70();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
}

void sub_2489C74D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489C750C();
  *v0 = v1;
}

void sub_2489C750C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, _QWORD *);
  void (*v2)(uint64_t, uint64_t, _QWORD *);
  char v3;
  int64_t v4;
  uint64_t *v5;
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;
  uint64_t v14;

  sub_2489C18F8();
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 24);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < v4)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= v4)
        v8 = v4;
    }
  }
  else
  {
    v8 = v4;
  }
  v9 = *(_QWORD *)(v0 + 16);
  if (v8 <= v9)
    v10 = *(_QWORD *)(v0 + 16);
  else
    v10 = v8;
  if (v10)
  {
    sub_2489C330C(v5);
    v11 = (_QWORD *)sub_2489BFE1C();
    v12 = j__malloc_size(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 4;
  v14 = v0 + 32;
  if ((v3 & 1) != 0)
  {
    v2(v14, v9, v13);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14, v9, v13);
  }
  swift_release();
  sub_2489BA828();
}

uint64_t sub_2489C75D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    sub_2489C1A3C();
    sub_2489BFE0C();
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return sub_2489C15CC();
    sub_2489C1A3C();
    sub_2489C2734();
  }
  result = sub_2489C2420();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for DeviceProfile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void CoreTipRecord.invalidationReason.getter()
{
  __int16 v0;
  _WORD v1[12];
  uint64_t v2;
  unint64_t v3;

  v0 = sub_248A1A058();
  v2 = MEMORY[0x24BEE3F30];
  v3 = sub_2489BE970();
  v1[0] = v0;
  sub_2489C76C8((uint64_t)v1);
  sub_2489BA928();
}

uint64_t sub_2489C76C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t AssociatedTypeWitness;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  _QWORD v109[3];
  uint64_t v110;
  uint64_t v111;

  sub_2489C1D3C(a1, (uint64_t)&v107);
  if (!v108)
  {
    sub_2489C1D84(a1);
    sub_2489C1D84((uint64_t)&v107);
    return 10;
  }
  v105 = a1;
  sub_2489B8F74(&v107, (uint64_t)v109);
  v2 = v110;
  v3 = v111;
  v4 = sub_2489BE100(v109, v110);
  v104 = &v96;
  v5 = *(_QWORD *)(v2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v4);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v96 - v7;
  (*(void (**)(char *))(v5 + 16))((char *)&v96 - v7);
  v9 = sub_2489C15D4();
  v10 = v9;
  v103 = &v96;
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_2489BF648((uint64_t)&v96 - v7);
  if ((v10 & 1) == 0)
  {
    sub_2489C3ADC((uint64_t)&v96 - v7);
    goto LABEL_24;
  }
  v12 = sub_2489BFE28();
  v13 = sub_2489C3ADC((uint64_t)&v96 - v7);
  if (v12 <= 64)
    goto LABEL_24;
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489BFAF8(v15, v16, v17, v18, v19, v20, v21, v22, v96);
  *(_QWORD *)&v107 = 0x8000000000000000;
  if ((sub_2489C15D4() & 1) == 0)
  {
    v102 = &v96;
    v34 = sub_2489C15D4();
    v35 = sub_2489BFE28();
    if ((v34 & 1) != 0)
    {
      if (v35 > 64)
      {
        sub_2489C0470(v35, v36, v37, v38, v39, v40, v41, v42, v96);
        MEMORY[0x24BDAC7A8](v43, v44);
        sub_2489BFB1C();
        sub_2489BA524();
        sub_2489BFE4C();
        v45 = sub_2489BFE34();
        sub_2489C3ADC(v34);
        result = sub_2489C3ADC(v12);
        goto LABEL_14;
      }
      v101 = *(uint64_t **)(*(_QWORD *)(v3 + 24) + 16);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v100 = &v96;
      MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v51);
      v97 = (char *)&v96 - v52;
      swift_getAssociatedConformanceWitness();
      v53 = sub_248A45F0C();
      v98 = &v96;
      MEMORY[0x24BDAC7A8](v53, v54);
      sub_2489BFB1C();
      v99 = v55;
      v57 = v56 - v55;
      sub_248A45DA4();
      LODWORD(v97) = sub_2489BFE34();
      v58 = sub_2489C3ADC(v57);
      sub_2489C0470(v58, v59, v60, v61, v62, v63, v64, v65, v96);
      MEMORY[0x24BDAC7A8](v66, v67);
      v68 = (uint64_t)&v96 - v99;
      sub_2489BBCB0((uint64_t)&v96 - v99, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
      if ((v97 & 1) != 0)
        goto LABEL_38;
      v69 = v107;
      v70 = sub_2489BFAEC();
      result = sub_2489C3ADC(v68);
      v49 = v70 < v69;
    }
    else
    {
      if (v35 >= 64)
      {
        sub_2489C3ADC(v12);
        goto LABEL_24;
      }
      v48 = sub_2489BFAEC();
      result = sub_2489C3ADC(v12);
      v49 = v48 < (uint64_t)v107;
    }
    if (v49)
      goto LABEL_39;
    goto LABEL_24;
  }
  v23 = sub_2489BFE28();
  if (v23 >= 64)
  {
    sub_2489C0470(v23, v24, v25, v26, v27, v28, v29, v30, v96);
    MEMORY[0x24BDAC7A8](v46, v47);
    sub_2489BFB1C();
    v102 = &v96;
    sub_2489BA524();
    sub_2489BFE4C();
    v45 = sub_2489BFE34();
    sub_2489C3ADC((uint64_t)&v96);
    result = sub_2489C3ADC(v12);
LABEL_14:
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_24;
  }
  v31 = sub_2489BFAEC();
  result = sub_2489C3ADC(v12);
  if (v31 < (uint64_t)v107)
    goto LABEL_39;
LABEL_24:
  v71 = sub_2489BFE28();
  MEMORY[0x24BDAC7A8](v71, v72);
  sub_2489BFB1C();
  v75 = v73 - v74;
  sub_2489BF648(v73 - v74);
  if (v71 < 65)
  {
    v71 = sub_2489BFE28();
    sub_2489C3ADC(v75);
    if (v71 != 64)
      goto LABEL_35;
    v76 = sub_2489C15D4();
    if ((v76 & 1) != 0)
      goto LABEL_35;
  }
  else
  {
    v76 = sub_2489C3ADC(v75);
  }
  v101 = &v96;
  v102 = &v96;
  v78 = MEMORY[0x24BDAC7A8](v76, v77);
  sub_2489BFAF8(v78, v79, v80, v81, v82, v83, v84, v85, v96);
  *(_QWORD *)&v107 = 0x7FFFFFFFFFFFFFFFLL;
  v86 = sub_2489C15D4();
  v87 = sub_2489BFE28();
  if ((v86 & 1) == 0)
  {
    if (v87 > 63)
    {
      v106 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x24BDAC7A8](v87, v88);
      v92 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      v93 = sub_2489BBCB0((uint64_t)v92, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
      MEMORY[0x24BDAC7A8](v93, v94);
      sub_2489C974C();
      sub_2489BFE4C();
      v68 = sub_248A45498();
      sub_2489C3ADC((uint64_t)v92);
      sub_2489C3ADC((uint64_t)v92);
      goto LABEL_34;
    }
LABEL_32:
    sub_2489BFAEC();
    sub_2489C3ADC(v71);
LABEL_35:
    v95 = sub_2489BFAEC();
    sub_2489C3ADC((uint64_t)v8);
    sub_2489C1D84(v105);
    v33 = CoreTip.InvalidationReason.init(rawValue:)(v95);
    sub_2489BCE44((uint64_t)v109);
    return v33;
  }
  if (v87 <= 64)
    goto LABEL_32;
  MEMORY[0x24BDAC7A8](v87, v88);
  sub_2489BFB1C();
  v91 = v89 - v90;
  sub_2489C974C();
  sub_2489BFE4C();
  v68 = sub_248A45498();
  sub_2489C3ADC(v91);
  sub_2489C3ADC(v71);
LABEL_34:
  if ((v68 & 1) == 0)
    goto LABEL_35;
  __break(1u);
LABEL_38:
  result = sub_2489C3ADC(v68);
LABEL_39:
  __break(1u);
  return result;
}

unint64_t CoreTip.InvalidationReason.init(rawValue:)(unint64_t result)
{
  if (result >= 0xA)
    return 10;
  return result;
}

void sub_2489C7D1C()
{
  char v0;
  __int128 v1;

  sub_248A1A360();
  sub_2489C6D5C(0xD000000000000011, 0x8000000248A50C20, &v1);
  sub_2489C330C(&qword_2544643E0);
  if (sub_2489BFB58())
  {
    sub_2489BDA70();
    if (v0 != 2)
      goto LABEL_8;
  }
  else
  {
    sub_2489BDA70();
  }
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BFA10();
LABEL_8:
  sub_2489BA928();
}

void sub_2489C7DE8()
{
  uint64_t v0;

  sub_248A03EE8();
  if (v0)
  {
    sub_2489C7DE8();
    sub_2489B6B20();
    sub_2489BA7D0();
  }
  else
  {
    swift_retain();
  }
}

void sub_2489C7E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_248A45F90();
    sub_248A45540();
    v6 = sub_248A45FD8();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_2489BFC1C();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_2489C2600() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_2489BFC1C();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((sub_2489C2600() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_2489BFC1C();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_2489C7F24(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_2489C330C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2489C7F68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544629F8;
  if (!qword_2544629F8)
  {
    v1 = sub_2489BCD7C(&qword_254463D60);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2544629F8);
  }
  return result;
}

void CoreRuleRecord.status.setter()
{
  CoreRuleRecord.statusValue.setter();
}

uint64_t sub_2489C7FB4()
{
  void *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[32];

  v0 = (void *)objc_opt_self();
  result = sub_2489B4BE0(v0);
  if (result)
  {
    v2 = *(_QWORD *)(result + 16);
    if (v2)
    {
      v3 = MEMORY[0x24BEE4AF8];
      v4 = result + 32;
      do
      {
        sub_2489C81EC(v4, (uint64_t)v14);
        sub_2489C81EC((uint64_t)v14, (uint64_t)&v11);
        if ((swift_dynamicCast() & 1) == 0)
        {
          v12 = 0;
          v13 = 0;
        }
        sub_2489BCE44((uint64_t)v14);
        v5 = v13;
        if (v13)
        {
          v6 = v12;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2489C3420();
            v3 = v9;
          }
          v7 = *(_QWORD *)(v3 + 16);
          if (v7 >= *(_QWORD *)(v3 + 24) >> 1)
          {
            sub_2489C3420();
            v3 = v10;
          }
          *(_QWORD *)(v3 + 16) = v7 + 1;
          v8 = v3 + 16 * v7;
          *(_QWORD *)(v8 + 32) = v6;
          *(_QWORD *)(v8 + 40) = v5;
        }
        v4 += 32;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2489C811C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_2489C8228(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2489C81EC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2489C81EC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_248A453F0();
  }
  sub_2489BCE44((uint64_t)v12);
  return v7;
}

uint64_t sub_2489C81EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2489C8228(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_248A2C43C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_248A45960();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_248A2C500(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_248A45AEC();
    if (!v8)
    {
      result = sub_248A45BF4();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

unint64_t sub_2489C837C()
{
  unint64_t result;

  result = qword_254464328;
  if (!qword_254464328)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254464328);
  }
  return result;
}

void sub_2489C83BC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_2489BF7BC(v2);
  sub_2489BA7D0();
}

uint64_t destroy for DeviceProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_248A44F58();
  if (!sub_2489BE834(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 40);
  v7 = _s12DisplayEventVMa();
  if (!sub_2489BE834(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v6 + *(int *)(v7 + 20), v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489C84B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for DeviceProfile()
{
  uint64_t result;

  result = qword_254464708;
  if (!qword_254464708)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s12DisplayEventVMa()
{
  uint64_t result;

  result = qword_2544646A8;
  if (!qword_2544646A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2489C8530()
{
  unsigned __int8 *v0;

  return sub_2489C8538(*v0);
}

uint64_t sub_2489C8538(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489C8560 + 4 * byte_248A4A2F0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2489C8560()
{
  return 0x746E656D75677261;
}

uint64_t sub_2489C8578()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_2489C8594()
{
  return 0x61746164776172;
}

uint64_t sub_2489C85AC()
{
  return 0x65756C6176;
}

uint64_t sub_2489C85C0()
{
  return 0x73656972657571;
}

uint64_t sub_2489C85D8()
{
  return 0x6964657270627573;
}

__n128 initializeWithTake for AnyCodable(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Category()
{
  return &type metadata for CoreRule.Category;
}

uint64_t _s9PredicateC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2489C8664 + 4 * byte_248A4A2FC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2489C8698 + 4 * byte_248A4A2F7[v4]))();
}

uint64_t sub_2489C8698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C86A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489C86A8);
  return result;
}

uint64_t sub_2489C86B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489C86BCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2489C86C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C86C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for ConstellationDeliveryInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2489C87E0()
{
  unsigned __int8 *v0;

  return sub_2489C87E8(*v0);
}

uint64_t sub_2489C87E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489C8814 + 4 * byte_248A4C6D0[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_2489C8814()
{
  return 1954047348;
}

uint64_t sub_2489C8820()
{
  return 0x7372747461;
}

uint64_t sub_2489C8834()
{
  return 0x736B72616DLL;
}

uint64_t getEnumTagSinglePayload for ConstellationDocument.Action.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2489C88D0()
{
  return swift_release();
}

uint64_t sub_2489C88D8()
{
  return swift_release();
}

uint64_t sub_2489C88E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2489C88F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

ValueMetadata *type metadata accessor for CoreTip.Options()
{
  return &type metadata for CoreTip.Options;
}

uint64_t sub_2489C8910()
{
  unsigned __int8 *v0;

  return sub_2489C8918(*v0);
}

uint64_t sub_2489C8918(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489C8948 + 4 * byte_248A4C290[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_2489C8948()
{
  return 0x6567617373656DLL;
}

uint64_t sub_2489C8960()
{
  return 0x736E6F69746361;
}

uint64_t sub_2489C8978()
{
  return 0x7465737361;
}

uint64_t type metadata accessor for MiniTipsDatastore()
{
  uint64_t result;

  result = qword_254464E50;
  if (!qword_254464E50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2489C89C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489C89EC + 4 * byte_248A4D988[a1]))(3487349, 0xE300000000000000);
}

uint64_t sub_2489C89EC()
{
  return 0x6570795472657375;
}

uint64_t sub_2489C8A04()
{
  return 0x656D697265707865;
}

unint64_t sub_2489C8A28()
{
  return 0xD00000000000001ALL;
}

_BYTE *sub_2489C8ABC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t sub_2489C8AC4()
{
  unsigned __int8 *v0;

  return sub_2489C89C0(*v0);
}

uint64_t _s14descr2519BBCF9C8ArgumentO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2489C8B18 + 4 * byte_248A4A4C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2489C8B4C + 4 * byte_248A4A4C0[v4]))();
}

uint64_t sub_2489C8B4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C8B54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489C8B5CLL);
  return result;
}

uint64_t sub_2489C8B68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489C8B70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2489C8B74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C8B7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C8B88()
{
  char *v0;

  return sub_2489C8B90(*v0);
}

uint64_t sub_2489C8B90(char a1)
{
  if (!a1)
    return 0x746E756F63;
  if (a1 == 1)
    return 0x697461756C617665;
  return 1701736302;
}

ValueMetadata *type metadata accessor for Configuration()
{
  return &type metadata for Configuration;
}

uint64_t Configuration.usesCoreAnalytics.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

ValueMetadata *type metadata accessor for CoreTip.InvalidationReason()
{
  return &type metadata for CoreTip.InvalidationReason;
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Argument()
{
  return &type metadata for CoreRule.Predicate.Argument;
}

id sub_2489C8C18(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2489BDFEC(a1, a2, a3, (void (*)(_QWORD *__return_ptr, _OWORD *))sub_2489BE3A4);
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Operator()
{
  return &type metadata for CoreRule.Predicate.Operator;
}

ValueMetadata *type metadata accessor for CoreRule.Options()
{
  return &type metadata for CoreRule.Options;
}

void *_s17ConstellationTextVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t _s17ConstellationTextV11ContentTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2489C8C98 + 4 * byte_248A4C6E7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2489C8CCC + 4 * byte_248A4C6E2[v4]))();
}

uint64_t sub_2489C8CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C8CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489C8CDCLL);
  return result;
}

uint64_t sub_2489C8CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489C8CF0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2489C8CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C8CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s14descr2519BBE51C5QueryV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t CoreRule.Options.init(updatesFromTipsd:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_2489C8DA0(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_2489C8DB0(char *a1, char *a2)
{
  return sub_2489C8DA0(*a1, *a2);
}

uint64_t _s20ConstellationContentC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2489C8E0C + 4 * byte_248A4C2C3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2489C8E40 + 4 * byte_248A4C2BE[v4]))();
}

uint64_t sub_2489C8E40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C8E48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489C8E50);
  return result;
}

uint64_t sub_2489C8E5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489C8E64);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2489C8E68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C8E70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s20ConstellationContentC10AttributesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void sub_2489C8EF0(char *a1@<X8>)
{
  CoreTip.ConstellationText.ContentType.init(rawValue:)(a1);
}

id sub_2489C8EFC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2489BDFEC(a1, a2, a3, (void (*)(_QWORD *__return_ptr, _OWORD *))sub_2489BDBA8);
}

void sub_2489C8F08()
{
  uint64_t v0;

  v0 = sub_2489C5970();
  sub_248A03F84(v0, (uint64_t)&unk_248A4B738, (uint64_t)sub_248A064F8, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
  sub_2489BA7D0();
}

uint64_t _s14descr2519BBCF9C8ArgumentOwxx(uint64_t a1)
{
  return sub_2489BDB7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2489C8F4C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t sub_2489C8F64()
{
  return 1701667182;
}

void sub_2489C8F74()
{
  uint64_t v0;

  v0 = sub_2489C5970();
  sub_248A03F84(v0, (uint64_t)&unk_248A4B760, (uint64_t)sub_248A06530, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
  sub_2489BA7D0();
}

uint64_t initializeWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t sub_2489C8FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CoreRule.Category.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t CoreRule.Category.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t type metadata accessor for DictionaryTransformer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489BD200(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DictionaryTransformer);
}

ValueMetadata *type metadata accessor for AnyCodable()
{
  return &type metadata for AnyCodable;
}

ValueMetadata *type metadata accessor for CoreTip.DisplayState()
{
  return &type metadata for CoreTip.DisplayState;
}

ValueMetadata *_s14descr2519BBCF9C8ArgumentO20EvaluationCodingKeysOMa()
{
  return &_s14descr2519BBCF9C8ArgumentO20EvaluationCodingKeysON;
}

uint64_t _s14descr2519BBCF9C8ArgumentO15CountCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2489C9084 + 4 * byte_248A4A4CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2489C90A4 + 4 * byte_248A4A4CF[v4]))();
}

_BYTE *sub_2489C9084(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2489C90A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2489C90AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2489C90B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2489C90BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2489C90C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14descr2519BBCF9C8ArgumentO15CountCodingKeysOMa()
{
  return &_s14descr2519BBCF9C8ArgumentO15CountCodingKeysON;
}

ValueMetadata *_s14descr2519BBCF9C8ArgumentO14NoneCodingKeysOMa()
{
  return &_s14descr2519BBCF9C8ArgumentO14NoneCodingKeysON;
}

ValueMetadata *_s14descr2519BBCF9C8ArgumentO10CodingKeysOMa()
{
  return &_s14descr2519BBCF9C8ArgumentO10CodingKeysON;
}

ValueMetadata *_s9PredicateC10CodingKeysOMa()
{
  return &_s9PredicateC10CodingKeysON;
}

uint64_t sub_2489C9118()
{
  uint64_t result;

  result = sub_248A454BC();
  qword_25446C680 = result;
  return result;
}

uint64_t _s18ConstellationAssetVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

__n128 _s14descr2519BBCF9C8ArgumentOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t static Bool.isSimulator.getter()
{
  return sub_2489B4C74(&qword_2544649A0, (unsigned __int8 *)&byte_25446499C);
}

uint64_t _s18InvalidationReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2489C9208 + 4 * byte_248A4D08F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2489C923C + 4 * byte_248A4D08A[v4]))();
}

uint64_t sub_2489C923C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C9244(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489C924CLL);
  return result;
}

uint64_t sub_2489C9258(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489C9260);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2489C9264(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C926C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s18InvalidationReasonOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2489C9304(unsigned __int8 *a1)
{
  return *a1;
}

void sub_2489C930C()
{
  sub_2489B64F4();
}

void sub_2489C9318(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CoreParameterRecord.valueType.getter();
  *a1 = v2;
  a1[1] = v3;
  sub_2489BA7D0();
}

__n128 _s18ConstellationAssetVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void CoreRule.Predicate.operation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___Predicate_operation);
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Query()
{
  return &type metadata for CoreRule.Predicate.Query;
}

ValueMetadata *type metadata accessor for CoreRule.Subrules()
{
  return &type metadata for CoreRule.Subrules;
}

uint64_t CoreRule.Subrules.init(id:subrules:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_2489C9394(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

__n128 initializeWithTake for ConstellationEvent(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *sub_2489C93CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2489C940C()
{
  return sub_248A45CB4();
}

uint64_t sub_2489C9414()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t sub_2489C9420()
{
  return swift_getKeyPath();
}

uint64_t sub_2489C9428()
{
  return sub_248A45C18();
}

void sub_2489C943C()
{
  sub_2489BE9AC();
}

uint64_t sub_2489C944C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return sub_2489E9DA0(v10, (uint64_t)&a9 - v9);
}

uint64_t sub_2489C9464(uint64_t a1, uint64_t *a2)
{
  return sub_2489BCD7C(a2);
}

uint64_t sub_2489C9470()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 104))();
}

void sub_2489C947C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_2489C9490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v3, v0);
}

uint64_t static Duration.days<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2489B6F7C(a1, a2, a3, (uint64_t)&unk_248A4DFA0, 4608);
}

uint64_t sub_2489C94B4()
{
  uint64_t v0;

  v0 = sub_2489C330C(&qword_2544647D8);
  if (sub_2489C9394(v0))
    return sub_2489C330C(&qword_254464818);
  else
    return sub_2489C330C(&qword_254464810);
}

uint64_t sub_2489C94F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_2489C9528()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489B6C88();
  *v0 = v1;
}

uint64_t sub_2489C955C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489C962C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2495A2D34](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2489C966C()
{
  unint64_t result;

  result = qword_254463D70;
  if (!qword_254463D70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254463D70);
  }
  return result;
}

uint64_t sub_2489C96A8(uint64_t a1)
{
  uint64_t v1;

  return sub_2489C96B4(a1, *(uint64_t **)(v1 + 16), *(void (**)(__int128 *__return_ptr))(v1 + 24));
}

uint64_t sub_2489C96B4(uint64_t a1, uint64_t *a2, void (*a3)(__int128 *__return_ptr))
{
  uint64_t v4;
  unint64_t v5;
  __int128 v7;

  a3(&v7);
  v4 = *a2;
  v5 = a2[1];
  *(_OWORD *)a2 = v7;
  return sub_2489BDB94(v4, v5);
}

uint64_t static String.empty.getter()
{
  return 0;
}

unint64_t static String.tipsNextGroupIdentifier.getter()
{
  return 0xD000000000000018;
}

unint64_t sub_2489C974C()
{
  unint64_t result;

  result = qword_254464E78;
  if (!qword_254464E78)
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254464E78);
  }
  return result;
}

unint64_t sub_2489C9788()
{
  unint64_t result;

  result = qword_254464568;
  if (!qword_254464568)
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254464568);
  }
  return result;
}

TipKitCore::TipsError __swiftcall TipsError.init(_:)(TipKitCore::TipsError result)
{
  TipKitCore::TipsError *v1;

  *v1 = result;
  return result;
}

uint64_t destroy for ConstellationEvent()
{
  return swift_bridgeObjectRelease();
}

_QWORD *initializeBufferWithCopyOfBuffer for ConstellationEvent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_248A453F0();
  return a1;
}

ValueMetadata *type metadata accessor for TipsError()
{
  return &type metadata for TipsError;
}

unint64_t sub_2489C9824()
{
  unint64_t result;

  result = qword_254462F88;
  if (!qword_254462F88)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for TipsError, &type metadata for TipsError);
    atomic_store(result, (unint64_t *)&qword_254462F88);
  }
  return result;
}

uint64_t TipsError.errorDescription.getter()
{
  uint64_t v0;

  sub_2489C3D90();
  return v0;
}

void sub_2489C988C()
{
  uint64_t v0;
  char v1;

  v0 = sub_2489BEE68();
  sub_248A2C90C(v0);
  *(_BYTE *)sub_2489C5198() = 4;
  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C33DC();
  if ((v1 & 1) != 0)
    sub_248A2C92C();
  sub_2489C50B8();
  sub_2489C1CC8();
  sub_2489BA7D0();
}

uint64_t static logger.log(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_2489B6E44(a1, a2);
}

uint64_t type metadata accessor for TipsdUbiquitousStore()
{
  return objc_opt_self();
}

uint64_t sub_2489C9950()
{
  uint64_t result;

  type metadata accessor for TipsdUbiquitousStore();
  swift_allocObject();
  result = sub_2489B754C();
  qword_25446C678 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for DeviceProfile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2489C9994(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  DeviceProfile.init(from:)(a1, a2);
}

void sub_2489C99A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2489C330C(&qword_254464D40);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2489C330C(&qword_254464200);
  sub_2489C93CC(v4, qword_25446C698);
  v5 = sub_2489C401C(v4, (uint64_t)qword_25446C698);
  sub_2489BD3E4((uint64_t)v3);
  sub_248A23F90((uint64_t)v3, v5);
  sub_2489BEED0((uint64_t)v3);
  sub_2489B6AF4();
}

uint64_t _s14ExperimentCampOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2489C9A90 + 4 * byte_248A4DCBD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2489C9AC4 + 4 * byte_248A4DCB8[v4]))();
}

uint64_t sub_2489C9AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C9ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489C9AD4);
  return result;
}

uint64_t sub_2489C9AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489C9AE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2489C9AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C9AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489C9B00()
{
  sub_2489C9BC0();
  return sub_248A45678();
}

unint64_t sub_2489C9B5C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_2489C9BFC(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_2489C9B84()
{
  unint64_t result;

  result = qword_254463D28;
  if (!qword_254463D28)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DD74, &_s14ExperimentCampON);
    atomic_store(result, (unint64_t *)&qword_254463D28);
  }
  return result;
}

unint64_t sub_2489C9BC0()
{
  unint64_t result;

  result = qword_254463D20;
  if (!qword_254463D20)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DCFC, &_s14ExperimentCampON);
    atomic_store(result, (unint64_t *)&qword_254463D20);
  }
  return result;
}

unint64_t sub_2489C9BFC(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

ValueMetadata *type metadata accessor for DeviceProfile.CodingKeys()
{
  return &type metadata for DeviceProfile.CodingKeys;
}

unint64_t sub_2489C9C24()
{
  unint64_t result;

  result = qword_254463D18;
  if (!qword_254463D18)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DAAC, &type metadata for DeviceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254463D18);
  }
  return result;
}

unint64_t sub_2489C9C60()
{
  unint64_t result;

  result = qword_254463D10;
  if (!qword_254463D10)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DAD4, &type metadata for DeviceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254463D10);
  }
  return result;
}

unint64_t sub_2489C9C9C()
{
  unint64_t result;

  result = qword_254463D08;
  if (!qword_254463D08)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DB64, &type metadata for DeviceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254463D08);
  }
  return result;
}

uint64_t Configuration.displayFrequencyDuration.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t Configuration.hideAllTips.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 50) = result;
  return result;
}

void sub_2489C9CE8()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_2489B6B60();
  sub_248A1C180(v0);
  sub_2489C330C(&qword_254463A78);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C27D8();
  sub_248A2F3A0((uint64_t)v1, 0x6C7073694478616DLL, 0xEF746E756F437961);
  sub_2489C0C20();
  sub_2489BFB64();
}

uint64_t CoreTip.Options.usesConstellation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t CoreTip.ConstellationContent.title.getter()
{
  return sub_2489BFE64();
}

ValueMetadata *_s20ConstellationContentC10CodingKeysOMa()
{
  return &_s20ConstellationContentC10CodingKeysON;
}

unint64_t sub_2489C9D8C()
{
  unint64_t result;

  result = qword_254463BF8;
  if (!qword_254463BF8)
  {
    result = MEMORY[0x2495A2D34]("5", &_s20ConstellationContentC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463BF8);
  }
  return result;
}

unint64_t sub_2489C9DC8()
{
  unint64_t result;

  result = qword_254463BF0;
  if (!qword_254463BF0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C4DC, &_s20ConstellationContentC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463BF0);
  }
  return result;
}

void sub_2489C9E04(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  CoreTip.ConstellationContent.Attributes.init(from:)(a1, a2);
}

void CoreTip.ConstellationContent.Attributes.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v5 = sub_2489C330C(&qword_254463808);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489BE100(a1, a1[3]);
  sub_2489CA294();
  sub_248A45FF0();
  if (v2)
  {
    sub_2489C5F10();
  }
  else
  {
    v41 = 0;
    v10 = sub_2489C1630();
    v12 = v11;
    v40 = 1;
    sub_248A453F0();
    v31 = sub_2489C1630();
    v32 = v10;
    v39 = 2;
    sub_2489BF84C();
    v13 = sub_2489C1630();
    v34 = v10;
    v30 = v13;
    v38 = 3;
    sub_2489BF84C();
    v14 = sub_2489C06B8();
    v33 = v10;
    v28 = v15;
    v29 = v14;
    v37 = 4;
    v16 = sub_2489C06B8();
    v27 = v17;
    v36 = 5;
    v25 = sub_2489C1630();
    v26 = v16;
    v35 = 6;
    sub_2489BF84C();
    v18 = sub_2489C1630();
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24 = v18;
    v21(v9, v5);
    sub_2489BD894();
    v22 = v33;
    *(_QWORD *)a2 = v32;
    *(_QWORD *)(a2 + 8) = v12;
    v23 = v34;
    *(_QWORD *)(a2 + 16) = v31;
    *(_QWORD *)(a2 + 24) = v23;
    *(_QWORD *)(a2 + 32) = v30;
    *(_QWORD *)(a2 + 40) = v22;
    *(_QWORD *)(a2 + 48) = v29;
    *(_BYTE *)(a2 + 56) = v28 & 1;
    *(_QWORD *)(a2 + 64) = v26;
    *(_BYTE *)(a2 + 72) = v27 & 1;
    *(_QWORD *)(a2 + 80) = v25;
    *(_QWORD *)(a2 + 88) = v16;
    *(_QWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 104) = v20;
    sub_2489C5F10();
    swift_bridgeObjectRelease();
    sub_2489B71DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_2489BA808();
}

uint64_t _s20ConstellationContentC10AttributesV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2489CA18C + 4 * byte_248A4C2B9[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2489CA1C0 + 4 * byte_248A4C2B4[v4]))();
}

uint64_t sub_2489CA1C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489CA1C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489CA1D0);
  return result;
}

uint64_t sub_2489CA1DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489CA1E4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2489CA1E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489CA1F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489CA1FC()
{
  unsigned __int8 *v0;

  return sub_2489CA2D0(*v0);
}

ValueMetadata *_s20ConstellationContentC10AttributesV10CodingKeysOMa()
{
  return &_s20ConstellationContentC10AttributesV10CodingKeysON;
}

unint64_t sub_2489CA21C()
{
  unint64_t result;

  result = qword_254463800;
  if (!qword_254463800)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C56C, &_s20ConstellationContentC10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463800);
  }
  return result;
}

unint64_t sub_2489CA258()
{
  unint64_t result;

  result = qword_2544637F8;
  if (!qword_2544637F8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C594, &_s20ConstellationContentC10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2544637F8);
  }
  return result;
}

unint64_t sub_2489CA294()
{
  unint64_t result;

  result = qword_2544637F0;
  if (!qword_2544637F0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C624, &_s20ConstellationContentC10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2544637F0);
  }
  return result;
}

uint64_t sub_2489CA2D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489CA300 + 4 * byte_248A4C294[a1]))(0x6870796C67, 0xE500000000000000);
}

uint64_t sub_2489CA300()
{
  return 7629921;
}

uint64_t sub_2489CA310()
{
  return 0x6449676E69727473;
}

uint64_t sub_2489CA328()
{
  return 0x72656469766F7270;
}

unint64_t sub_2489CA344()
{
  return 0xD000000000000011;
}

uint64_t sub_2489CA360()
{
  return 1717924456;
}

uint64_t sub_2489CA370()
{
  return 0x726F6C6F63;
}

ValueMetadata *_s19IneligibilityReasonOMa()
{
  return &_s19IneligibilityReasonON;
}

unint64_t sub_2489CA390()
{
  unint64_t result;

  result = qword_254463D00;
  if (!qword_254463D00)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CCF4, &_s19IneligibilityReasonON);
    atomic_store(result, (unint64_t *)&qword_254463D00);
  }
  return result;
}

uint64_t _s19ConstellationActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_248A44EB0();
  result = sub_2489BE834(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

uint64_t _s19ConstellationActionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  if (v9 == 1)
  {
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0x70uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v9;
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v10;
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v11;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v12 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v12;
    v13 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v13;
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
  }
  v14 = *(int *)(a3 + 32);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_248A44EB0();
  if (sub_2489BE834((uint64_t)v16, 1, v17))
  {
    v18 = sub_2489C330C(&qword_254464D40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    sub_2489BE7E0((uint64_t)v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_2489CA5F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CoreTip.ConstellationAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2489CA62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CoreTip.ConstellationAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489CA670@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreTip.ConstellationAction.init(from:)(a1, a2);
}

void sub_2489CA684()
{
  unint64_t v0;

  sub_2489B5508();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for CoreTip.ConstellationAction()
{
  uint64_t result;

  result = qword_254463BD0;
  if (!qword_254463BD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2489CA73C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CoreTip.ConstellationAction();
    result = MEMORY[0x2495A2D34](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CoreTip.ConstellationAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v18 = a2;
  v4 = sub_2489C330C(&qword_254464D40);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489B6B34();
  v19 = sub_2489C330C(&qword_254463750);
  MEMORY[0x24BDAC7A8](v19, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CoreTip.ConstellationAction();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2489BE100(a1, a1[3]);
  sub_2489CAC70();
  v20 = v8;
  v13 = v21;
  sub_248A45FF0();
  if (v13)
    return sub_2489C0144();
  LOBYTE(v22) = 0;
  *v12 = sub_248A45CB4();
  v12[1] = v14;
  sub_2489C1BAC(1);
  v12[2] = sub_248A45CB4();
  v12[3] = v15;
  sub_2489C1BAC(2);
  v12[4] = sub_248A45CB4();
  v12[5] = v16;
  v29 = 3;
  sub_2489BB75C();
  sub_2489C2744();
  MEMORY[0x30] = v22;
  MEMORY[0x40] = v23;
  MEMORY[0x50] = v24;
  MEMORY[0x60] = v25;
  MEMORY[0x70] = v26;
  MEMORY[0x80] = v27;
  MEMORY[0x90] = v28;
  sub_248A44EB0();
  LOBYTE(v22) = 4;
  sub_2489CB760(&qword_254464570, MEMORY[0x24BDCDB10]);
  sub_2489C2744();
  sub_2489C3B10();
  sub_2489BE7EC(v2, (uint64_t)v12 + *(int *)(v9 + 32));
  sub_2489CA62C((uint64_t)v12, v18);
  sub_2489C0144();
  return sub_2489CA5F0((uint64_t)v12);
}

uint64_t _s19ConstellationActionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2489CAAE0 + 4 * byte_248A4BE1A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2489CAB14 + 4 * byte_248A4BE15[v4]))();
}

uint64_t sub_2489CAB14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489CAB1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489CAB24);
  return result;
}

uint64_t sub_2489CAB30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489CAB38);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2489CAB3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489CAB44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for ConstellationDocument.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2489CABD8()
{
  unsigned __int8 *v0;

  return sub_2489CACAC(*v0);
}

ValueMetadata *_s19ConstellationActionV10CodingKeysOMa()
{
  return &_s19ConstellationActionV10CodingKeysON;
}

unint64_t sub_2489CABF8()
{
  unint64_t result;

  result = qword_254463748;
  if (!qword_254463748)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4BEE4, &_s19ConstellationActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463748);
  }
  return result;
}

unint64_t sub_2489CAC34()
{
  unint64_t result;

  result = qword_254463740;
  if (!qword_254463740)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4BF0C, &_s19ConstellationActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463740);
  }
  return result;
}

unint64_t sub_2489CAC70()
{
  unint64_t result;

  result = qword_254463738;
  if (!qword_254463738)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4BF9C, &_s19ConstellationActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463738);
  }
  return result;
}

uint64_t sub_2489CACAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489CACD4 + 4 * byte_248A4BE10[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2489CACD4()
{
  return 1701869940;
}

uint64_t sub_2489CACE4()
{
  return 1954047348;
}

uint64_t sub_2489CACF4()
{
  return 0x7372747461;
}

uint64_t sub_2489CAD08()
{
  return 7107189;
}

void type metadata accessor for CoreTip.ConstellationText()
{
  sub_2489BF7B4();
}

unint64_t sub_2489CAD24()
{
  unint64_t result;

  result = qword_254463BB8;
  if (!qword_254463BB8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText, &type metadata for CoreTip.ConstellationText);
    atomic_store(result, (unint64_t *)&qword_254463BB8);
  }
  return result;
}

void type metadata accessor for CoreTip.ConstellationText.Mark()
{
  sub_2489BF7B4();
}

unint64_t sub_2489CAD6C()
{
  unint64_t result;

  result = qword_254463BB0;
  if (!qword_254463BB0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.Mark, &type metadata for CoreTip.ConstellationText.Mark);
    atomic_store(result, (unint64_t *)&qword_254463BB0);
  }
  return result;
}

ValueMetadata *_s17ConstellationTextV10CodingKeysOMa()
{
  return &_s17ConstellationTextV10CodingKeysON;
}

unint64_t sub_2489CADC0()
{
  unint64_t result;

  result = qword_254463B98;
  if (!qword_254463B98)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C9E4, &_s17ConstellationTextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463B98);
  }
  return result;
}

unint64_t sub_2489CADFC()
{
  unint64_t result;

  result = qword_254463B90;
  if (!qword_254463B90)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CA0C, &_s17ConstellationTextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463B90);
  }
  return result;
}

uint64_t sub_2489CAE38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t CoreEvent.__deallocating_deinit()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  swift_unownedRelease();
  return swift_deallocClassInstance();
}

void CoreRule.Predicate.Operator.init(_:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;

  v4 = sub_248A44D60();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if (v6 == *MEMORY[0x24BDCCF60])
  {
    v7 = 2;
  }
  else if (v6 == *MEMORY[0x24BDCCF50])
  {
    v7 = 3;
  }
  else if (v6 == *MEMORY[0x24BDCCF48])
  {
    v7 = 4;
  }
  else if (v6 == *MEMORY[0x24BDCCF58])
  {
    v7 = 5;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = 12;
  }
  *a2 = v7;
  sub_2489B6AF4();
}

uint64_t _s14descr2519BBDF9C8OperatorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_2489CAF84 + 4 * byte_248A4AA44[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_2489CAFB8 + 4 * byte_248A4AA3F[v4]))();
}

uint64_t sub_2489CAFB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489CAFC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489CAFC8);
  return result;
}

uint64_t sub_2489CAFD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489CAFDCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_2489CAFE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489CAFE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s14descr2519BBDF9C8OperatorOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

unint64_t sub_2489CB084()
{
  unint64_t result;

  result = qword_254464198;
  if (!qword_254464198)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A664, &_s14descr2519BBCF9C8ArgumentO20EvaluationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464198);
  }
  return result;
}

unint64_t sub_2489CB0C0()
{
  unint64_t result;

  result = qword_254464190;
  if (!qword_254464190)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A68C, &_s14descr2519BBCF9C8ArgumentO20EvaluationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464190);
  }
  return result;
}

uint64_t CoreRule.Predicate.Argument.init(commonKeyPathKind:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(result + 8);
  if (v3 >= 4)
  {
    v7 = qword_254462F70;
    sub_248A453F0();
    if (v7 != -1)
      swift_once();
    v8 = type metadata accessor for logger();
    sub_2489C401C(v8, (uint64_t)&unk_254462F58);
    sub_248A45A74();
    sub_248A4557C();
    sub_248A4557C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
    sub_2489BF838();
    result = sub_2489BF838();
    v4 = 0;
    v5 = 0;
    LOBYTE(v6) = 2;
  }
  else
  {
    v4 = *(_QWORD *)&aLast[8 * v3];
    v5 = qword_248A4A9F0[v3];
    v6 = 0x1010001u >> (8 * v3);
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6;
  return result;
}

_QWORD *sub_2489CB234(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

uint64_t _s14descr2519BBCF9C8ArgumentO17CommonKeyPathKindOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

uint64_t _s14descr2519BBCF9C8ArgumentO17CommonKeyPathKindOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Argument.CommonKeyPathKind()
{
  return &type metadata for CoreRule.Predicate.Argument.CommonKeyPathKind;
}

unint64_t sub_2489CB31C()
{
  unint64_t result;

  result = qword_254464188;
  if (!qword_254464188)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A71C, &_s14descr2519BBCF9C8ArgumentO15CountCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464188);
  }
  return result;
}

unint64_t sub_2489CB358()
{
  unint64_t result;

  result = qword_254464180;
  if (!qword_254464180)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A744, &_s14descr2519BBCF9C8ArgumentO15CountCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464180);
  }
  return result;
}

unint64_t sub_2489CB39C()
{
  unint64_t result;

  result = qword_254464178;
  if (!qword_254464178)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A614, &_s14descr2519BBCF9C8ArgumentO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464178);
  }
  return result;
}

unint64_t sub_2489CB3D8()
{
  unint64_t result;

  result = qword_254464170;
  if (!qword_254464170)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A63C, &_s14descr2519BBCF9C8ArgumentO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464170);
  }
  return result;
}

unint64_t sub_2489CB41C()
{
  unint64_t result;

  result = qword_254464168;
  if (!qword_254464168)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A7D4, &_s14descr2519BBCF9C8ArgumentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464168);
  }
  return result;
}

unint64_t sub_2489CB458()
{
  unint64_t result;

  result = qword_254464160;
  if (!qword_254464160)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A7FC, &_s14descr2519BBCF9C8ArgumentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464160);
  }
  return result;
}

unint64_t sub_2489CB494()
{
  unint64_t result;

  result = qword_254464150;
  if (!qword_254464150)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Query, &type metadata for CoreRule.Predicate.Query);
    atomic_store(result, (unint64_t *)&qword_254464150);
  }
  return result;
}

unint64_t sub_2489CB4D0()
{
  unint64_t result;

  result = qword_254464148;
  if (!qword_254464148)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Query, &type metadata for CoreRule.Predicate.Query);
    atomic_store(result, (unint64_t *)&qword_254464148);
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Subpredicate()
{
  return &type metadata for CoreRule.Predicate.Subpredicate;
}

unint64_t sub_2489CB51C()
{
  unint64_t result;

  result = qword_254464140;
  if (!qword_254464140)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Subpredicate, &type metadata for CoreRule.Predicate.Subpredicate);
    atomic_store(result, (unint64_t *)&qword_254464140);
  }
  return result;
}

unint64_t sub_2489CB558()
{
  unint64_t result;

  result = qword_254464138;
  if (!qword_254464138)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Subpredicate, &type metadata for CoreRule.Predicate.Subpredicate);
    atomic_store(result, (unint64_t *)&qword_254464138);
  }
  return result;
}

unint64_t sub_2489CB59C()
{
  unint64_t result;

  result = qword_254464130;
  if (!qword_254464130)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A3B4, &_s9PredicateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464130);
  }
  return result;
}

unint64_t sub_2489CB5D8()
{
  unint64_t result;

  result = qword_254464128;
  if (!qword_254464128)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A3DC, &_s9PredicateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254464128);
  }
  return result;
}

unint64_t sub_2489CB614()
{
  unint64_t result;

  result = qword_254462EE8;
  if (!qword_254462EE8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Subrules, &type metadata for CoreRule.Subrules);
    atomic_store(result, (unint64_t *)&qword_254462EE8);
  }
  return result;
}

unint64_t sub_2489CB650(uint64_t a1)
{
  unint64_t result;

  result = sub_2489CB614();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2489CB674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2489B6524();
  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 32);
    v2 = sub_248A453F0();
  }
  else
  {
    v1 = 0;
    v2 = 0;
  }
  qword_25446C648 = v1;
  qword_25446C650 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489CB6C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2489B6E1C(a1);
}

uint64_t sub_2489CB6D8(uint64_t a1)
{
  uint64_t v1;

  return sub_2489CB700(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_2489CB6E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2489CB700(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

unint64_t sub_2489CB720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544643E8;
  if (!qword_2544643E8)
  {
    v1 = sub_248A44EB0();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCDB00], v1);
    atomic_store(result, (unint64_t *)&qword_2544643E8);
  }
  return result;
}

uint64_t sub_2489CB760(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_248A44EB0();
    result = MEMORY[0x2495A2D34](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static URL.applicationSupportDirectoryForCurrentUser.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2489CB7AC(a1);
}

uint64_t sub_2489CB7AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_248A44DFC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  sub_2489BBC7C();
  v7 = v6 - v5;
  sub_2489C330C(&qword_254464D40);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489BBC7C();
  v12 = v11 - v10;
  static URL.homeDirectoryForCurrentUser.getter(v11 - v10);
  v13 = sub_2489BFEDC();
  if (sub_2489BE834(v12, 1, v13) == 1)
  {
    sub_2489C3FDC(v12);
    v14 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v7, *MEMORY[0x24BDCD790], v2);
    sub_2489C9788();
    sub_248A44E8C();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = 0;
  }
  return sub_2489BD920(a1, v14);
}

uint64_t static URL.homeDirectoryForCurrentUser.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uid_t v7;
  passwd *v8;
  uint64_t v10;

  sub_2489C330C(&qword_254464D40);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489BBC7C();
  v6 = v5 - v4;
  v7 = getuid();
  v8 = getpwuid(v7);
  if (v8 && v8->pw_dir)
  {
    sub_2489BFEDC();
    sub_2489BD920(v6, 1);
    sub_248A44E5C();
    sub_2489C3FDC(v6);
    return sub_2489BD920(a1, 0);
  }
  else
  {
    v10 = sub_2489BFEDC();
    return sub_2489BE7E0(a1, 1, 1, v10);
  }
}

Swift::Bool __swiftcall URL.createDirectory(using:)(NSFileManager using)
{
  void *v2;
  unsigned int v3;
  id v4;
  id v6;
  void *v7;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  if ((sub_2489B9270() & 1) != 0)
    return 1;
  v2 = (void *)sub_248A44E2C();
  v8[0] = 0;
  v3 = -[objc_class createDirectoryAtURL:withIntermediateDirectories:attributes:error:](using.super.isa, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v2, 1, 0, v8);

  if (v3)
  {
    v4 = v8[0];
    return 1;
  }
  v6 = v8[0];
  v7 = (void *)sub_248A44DCC();

  swift_willThrow();
  return 0;
}

void sub_2489CBA94(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t *v15;
  __int128 v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_248A45924();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - v12, a1, v9);
  if (sub_2489BE834((uint64_t)v13, 1, a2) == 1)
  {
    v17 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v16 = 0x3E6C6C756E3CLL;
    *((_QWORD *)&v16 + 1) = 0xE600000000000000;
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v8, v13, a2);
    v17 = a2;
    v15 = sub_2489BE690((uint64_t *)&v16);
    v14((char *)v15, v8, a2);
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  sub_2489C3288(&v16, a3);
  sub_2489BA400();
}

uint64_t sub_2489CBBC0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v7[4];
  __int128 v8[3];
  _BYTE v9[32];

  sub_2489C1458();
  if (sub_2489BF9E0())
  {
    memset(v8, 0, 32);
    sub_2489C330C(&qword_254464AF0);
    v1 = sub_248A454F8();
  }
  else
  {
    sub_2489C330C(&qword_2577A4EF8);
    if (sub_2489BF9E0())
    {
      sub_2489B8F74(v8, (uint64_t)v7);
      sub_2489BE100(v7, v7[3]);
      v1 = sub_248A45D68();
      sub_2489BCE44((uint64_t)v7);
    }
    else
    {
      v2 = sub_2489BE100(v0, v0[3]);
      MEMORY[0x24BDAC7A8](v2, v2);
      (*(void (**)(char *))(v4 + 16))((char *)&v7[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
      v1 = sub_248A454F8();
    }
  }
  sub_2489BCE44((uint64_t)v9);
  return v1;
}

uint64_t sub_2489CBD20()
{
  _QWORD v1[4];
  __int128 v2;
  _BYTE v3[32];

  sub_2489C1458();
  sub_2489C330C(&qword_2577A4ED8);
  if (sub_2489BF9E0())
  {
    sub_2489B8F74(&v2, (uint64_t)v1);
    sub_2489BE100(v1, v1[3]);
    sub_248A45D68();
    sub_248A4557C();
    sub_2489BDA70();
    sub_2489C22AC();
    sub_2489BCE44((uint64_t)v1);
  }
  else
  {
    *(_QWORD *)&v2 = 0x6261646F43796E41;
    *((_QWORD *)&v2 + 1) = 0xEB0000000028656CLL;
    sub_2489CBBC0();
    sub_248A4557C();
    sub_2489BDA70();
    sub_2489C22AC();
  }
  sub_2489BCE44((uint64_t)v3);
  return 0x6261646F43796E41;
}

uint64_t sub_2489CBE20()
{
  _BYTE v1[72];

  sub_248A45F90();
  sub_2489CCBF4((uint64_t)v1, &qword_254463D50, (void (*)(uint64_t))sub_2489D0F9C, &qword_254462978, (void (*)(uint64_t))sub_2489D0AD0);
  return sub_2489BDA5C();
}

uint64_t sub_2489CBE78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_2489BE100(a1, a1[3]);
  sub_248A45FE4();
  if (!v2)
  {
    v5 = v12;
    sub_2489BF74C(v10, v11);
    if ((sub_248A45E1C() & 1) != 0)
    {
      v6 = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v7 = sub_2489C330C(&qword_2577A4F28);
      v8 = v6 & 0xFFFFFFFFFFFFFF00;
    }
    else
    {
      v5 = v12;
      sub_2489BF74C(v10, v11);
      LOBYTE(v6) = sub_248A45DE0() & 1;
      v7 = sub_2489C330C(&qword_2544642E8);
      v8 = 0;
    }
    sub_2489BCE44((uint64_t)v10);
    *(_QWORD *)a2 = v8 | v6;
    *(_BYTE *)(a2 + 8) = v13;
    *(_BYTE *)(a2 + 15) = BYTE6(v5);
    *(_WORD *)(a2 + 13) = WORD2(v5);
    *(_DWORD *)(a2 + 9) = v5;
    *(_QWORD *)(a2 + 24) = v7;
  }
  return sub_2489BCE44((uint64_t)a1);
}

uint64_t sub_2489CC2AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];
  uint64_t v39;
  __int128 v40;
  _BYTE v41[32];
  _QWORD v42[3];
  uint64_t v43;

  v36 = sub_248A44EB0();
  v35 = *(_QWORD *)(v36 - 8);
  v4 = MEMORY[0x24BDAC7A8](v36, v3);
  v34 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v34 - v7;
  v37 = sub_248A44F58();
  v9 = *(_QWORD *)(v37 - 8);
  v11 = MEMORY[0x24BDAC7A8](v37, v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v34 - v15;
  sub_2489BE100(a1, a1[3]);
  sub_248A45FFC();
  v17 = sub_2489C81EC(v1, (uint64_t)v41);
  sub_2489C0320(v17, qword_254463D98);
  if (!sub_2489BF9E0())
  {
    if (sub_2489BF9E0())
      goto LABEL_4;
    sub_2489C330C(&qword_254463D90);
    if (sub_2489BF9E0())
    {
      sub_2489B8F74(&v40, (uint64_t)v38);
      sub_2489BE100(v38, v38[3]);
      sub_2489C02F8();
      sub_248A45474();
      sub_2489BCE44((uint64_t)v38);
    }
    else if (sub_2489BF9E0())
    {
      sub_2489C17EC();
      sub_2489BF730();
      sub_248A45E40();
    }
    else if (sub_2489C38C0())
    {
      sub_2489C17EC();
      sub_2489C02F8();
      sub_248A45E64();
    }
    else if (sub_2489C38C0())
    {
      sub_2489C1A30();
      sub_2489BF580();
      sub_248A45E88();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C1A30();
      sub_2489BF580();
      sub_248A45E94();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C17EC();
      sub_2489BF730();
      sub_248A45EA0();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C17EC();
      sub_2489C02F8();
      sub_248A45EAC();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C17EC();
      sub_2489C02F8();
      sub_248A45E70();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C1A30();
      sub_2489BF580();
      sub_248A45EB8();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C1A30();
      sub_2489BF580();
      sub_248A45EC4();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C17EC();
      sub_2489BF730();
      sub_248A45ED0();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C17EC();
      sub_2489C02F8();
      sub_248A45EDC();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C1A30();
      sub_2489C5E6C();
      sub_248A45E58();
    }
    else if ((sub_2489C38C0() & 1) != 0)
    {
      sub_2489C1A30();
      sub_2489C5E6C();
      sub_248A45E4C();
    }
    else
    {
      if ((sub_2489C38C0() & 1) != 0)
      {
        sub_2489D08D4((uint64_t)v42, v43);
        sub_248A45E34();
      }
      else
      {
        if ((sub_2489BF9E0() & 1) != 0)
        {
          sub_2489D1530((uint64_t)v13, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v9 + 32));
          sub_2489C1A30();
          sub_2489BA29C(&qword_2544643D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
          sub_2489BA414();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v37);
          goto LABEL_33;
        }
        v19 = sub_2489BF9E0();
        if ((v19 & 1) != 0)
        {
          sub_2489D1530(v34, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v35 + 32));
          sub_2489C1A30();
          sub_2489BA29C(&qword_2544640D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
          sub_2489BA414();
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
          goto LABEL_33;
        }
        sub_2489C0320(v19, (unint64_t *)&qword_254463D70);
        if ((sub_2489C38C0() & 1) != 0)
        {
          v20 = (void *)v40;
          sub_2489CD114((void *)v40, v42);

          goto LABEL_33;
        }
        sub_2489C330C(&qword_2577A4E68);
        if ((sub_2489C38C0() & 1) != 0)
        {
          sub_2489CD618(v40);
          sub_2489B5CA8(v21, &qword_2577A4EA8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_2489D00C8);
          v23 = v22;
          swift_bridgeObjectRelease();
          v38[0] = v23;
          sub_2489C1A30();
          sub_2489C330C(&qword_2577A4E98);
          sub_2489D0938();
        }
        else
        {
          sub_2489C330C(&qword_2577A4E70);
          if ((sub_2489BF9E0() & 1) == 0)
          {
            v31 = sub_248A45AC8();
            sub_2489BF740();
            v33 = v32;
            sub_2489C330C(&qword_2577A4E78);
            sub_2489C81EC(v1, v33);
            sub_2489BF74C(v42, v43);
            sub_248A45E28();
            sub_2489B6AE8();
            (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x24BEE2728], v31);
            swift_willThrow();
            goto LABEL_33;
          }
          v37 = v38[0];
          v24 = *(_QWORD *)(v38[0] + 16);
          if (v24)
          {
            v39 = MEMORY[0x24BEE4AF8];
            sub_248A0290C();
            v25 = v39;
            v26 = v37 + 32;
            do
            {
              v27 = sub_2489C330C(&qword_254464AF0);
              v28 = swift_allocObject();
              sub_2489C55EC(v26, v28 + 16, &qword_254464AF0);
              v39 = v25;
              v29 = *(_QWORD *)(v25 + 16);
              if (v29 >= *(_QWORD *)(v25 + 24) >> 1)
              {
                sub_248A0290C();
                v25 = v39;
              }
              *(_QWORD *)(v25 + 16) = v29 + 1;
              v30 = v25 + 32 * v29;
              *(_QWORD *)(v30 + 32) = v28;
              *(_OWORD *)(v30 + 40) = v40;
              *(_QWORD *)(v30 + 56) = v27;
              v26 += 32;
              --v24;
            }
            while (v24);
            sub_2489D1524();
          }
          else
          {
            sub_2489D1524();
            v25 = MEMORY[0x24BEE4AF8];
          }
          *(_QWORD *)&v40 = v25;
          sub_2489C1A30();
          sub_2489C330C(&qword_2577A4E80);
          sub_2489D12D4(&qword_2577A4E88, &qword_2577A4E80, (uint64_t (*)(void))sub_2489D08FC, MEMORY[0x24BEE12A0]);
        }
        sub_248A45E7C();
      }
      swift_bridgeObjectRelease();
    }
LABEL_33:
    sub_2489BCE44((uint64_t)v41);
    return sub_2489BCE44((uint64_t)v42);
  }

LABEL_4:
  sub_2489BCE44((uint64_t)v41);
  sub_2489C1A30();
  sub_2489C5E6C();
  sub_248A45EE8();
  return sub_2489BCE44((uint64_t)v42);
}

uint64_t sub_2489CCB78(uint64_t a1)
{
  return sub_2489CCBF4(a1, &qword_254463D50, (void (*)(uint64_t))sub_2489D0F9C, &qword_254462978, (void (*)(uint64_t))sub_2489D0AD0);
}

uint64_t sub_2489CCBAC(uint64_t a1)
{
  return sub_2489CCBF4(a1, &qword_2577A4E98, (void (*)(uint64_t))sub_2489D0AF4, &qword_2577A4E80, (void (*)(uint64_t))sub_2489D0A14);
}

uint64_t sub_2489CCBD0(uint64_t a1)
{
  return sub_2489CCBF4(a1, &qword_254462948, (void (*)(uint64_t))sub_2489D0D48, &qword_254462E80, (void (*)(uint64_t))sub_2489D0A38);
}

uint64_t sub_2489CCBF4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  _BYTE v13[32];

  v10 = v5;
  sub_2489C81EC(v10, (uint64_t)v13);
  if (sub_2489C1444())
    goto LABEL_5;
  if ((sub_2489C1444() & 1) != 0)
  {
LABEL_3:
    sub_248A45F9C();
    return sub_2489BCE44((uint64_t)v13);
  }
  if (sub_2489C1444())
  {
LABEL_5:
    sub_248A45FA8();
    return sub_2489BCE44((uint64_t)v13);
  }
  if (sub_2489C1444())
  {
LABEL_8:
    sub_248A45FB4();
    return sub_2489BCE44((uint64_t)v13);
  }
  if (sub_2489C1444())
  {
LABEL_10:
    sub_248A45FC0();
    return sub_2489BCE44((uint64_t)v13);
  }
  if (sub_2489C1444())
    goto LABEL_12;
  if (sub_2489C1444())
    goto LABEL_3;
  if (sub_2489C1444())
    goto LABEL_5;
  if (sub_2489C1444())
    goto LABEL_8;
  if (sub_2489C1444())
    goto LABEL_10;
  if (sub_2489C1444())
    goto LABEL_12;
  if (sub_2489C1444())
    goto LABEL_10;
  if (sub_2489C1444())
  {
LABEL_12:
    sub_248A45FCC();
    return sub_2489BCE44((uint64_t)v13);
  }
  if (sub_2489C1444())
  {
    sub_248A45540();
  }
  else
  {
    sub_2489C330C(a2);
    if (sub_2489BF9E0())
    {
      a3(a1);
    }
    else
    {
      sub_2489C330C(a4);
      if (!sub_2489BF9E0())
        return sub_2489BCE44((uint64_t)v13);
      a5(a1);
    }
  }
  swift_bridgeObjectRelease();
  return sub_2489BCE44((uint64_t)v13);
}

uint64_t sub_2489CCE40()
{
  _BYTE v1[72];

  sub_248A45F90();
  sub_2489CCBF4((uint64_t)v1, &qword_254463D50, (void (*)(uint64_t))sub_2489D0F9C, &qword_254462978, (void (*)(uint64_t))sub_2489D0AD0);
  return sub_248A45FD8();
}

uint64_t sub_2489CCE9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  result = sub_2489C330C(&qword_2544647C8);
  a2[3] = result;
  *a2 = a1;
  return result;
}

void sub_2489CCED0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = sub_2489C330C(&qword_2577A4F18);
  *a2 = a1;
  sub_2489BA7D0();
}

uint64_t sub_2489CCF00@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2489CCF08(*a1, a2);
}

uint64_t sub_2489CCF08@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)a2 = result;
  return result;
}

void sub_2489CCF1C(char a1@<W0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 24) = sub_2489C330C(&qword_2544642E8);
  *(_BYTE *)a2 = a1;
  sub_2489BA7D0();
}

uint64_t sub_2489CCF50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_2489CD94C(a1);
  result = sub_2489C330C(&qword_2544647C0);
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_2489CCF9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_2489CD94C(a1);
  result = sub_2489C330C(&qword_2577A4F50);
  a2[3] = result;
  *a2 = v3;
  return result;
}

void sub_2489CCFE8(double *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2489CCFF0(a2, *a1);
}

void sub_2489CCFF0(uint64_t a1@<X8>, double a2@<D0>)
{
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE13C8];
  *(double *)a1 = a2;
}

uint64_t sub_2489CD004@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t result;

  result = sub_2489C330C(&qword_254462E58);
  *(_QWORD *)(a1 + 24) = result;
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_2489CD044@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2489CD04C(*a1, a2);
}

uint64_t sub_2489CD04C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = MEMORY[0x24BEE1768];
  *a2 = result;
  return result;
}

void sub_2489CD060(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 24) = sub_2489C330C(&qword_254463A78);
  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 8) = 0;
  sub_2489BA7D0();
}

uint64_t sub_2489CD094()
{
  return sub_248A45F00();
}

uint64_t sub_2489CD0B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2489CD0C0(*a1, a1[1], a2);
}

uint64_t sub_2489CD0C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  a3[3] = MEMORY[0x24BEE0D00];
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_2489CD0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  result = sub_2489C330C(&qword_254464278);
  a3[3] = result;
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_2489CD114(void *a1, _QWORD *a2)
{
  id v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  BOOL v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;

  v3 = objc_retainAutorelease(a1);
  v4 = *(char *)objc_msgSend(v3, sel_objCType);
  if (v4 < 0)
  {
    result = sub_248A45BF4();
    __break(1u);
  }
  else
  {
    v36 = v4;
    v5 = MEMORY[0x2495A1CA8](&v36, 1);
    v7 = v5 == 66 && v6 == 0xE100000000000000;
    if (v7 || (v8 = v5, v9 = v6, (sub_2489C2298() & 1) != 0))
    {
      v10 = swift_bridgeObjectRelease();
      sub_2489C07A4(v10, sel_BOOLValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45E40();
    }
    v12 = v8 == 99 && v9 == 0xE100000000000000;
    if (v12 || (sub_2489C2298() & 1) != 0)
    {
      v13 = swift_bridgeObjectRelease();
      sub_2489C07A4(v13, sel_charValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45E88();
    }
    v14 = v8 == 115 && v9 == 0xE100000000000000;
    if (v14 || (sub_2489C2298() & 1) != 0)
    {
      v15 = swift_bridgeObjectRelease();
      sub_2489C07A4(v15, sel_shortValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45E94();
    }
    v16 = v8 == 105 && v9 == 0xE100000000000000;
    if (v16
      || (sub_2489C2298() & 1) != 0
      || (v8 == 108 ? (v17 = v9 == 0xE100000000000000) : (v17 = 0), v17 || (sub_2489C2298() & 1) != 0))
    {
      v19 = swift_bridgeObjectRelease();
      sub_2489C07A4(v19, sel_intValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45EA0();
    }
    v18 = v8 == 113 && v9 == 0xE100000000000000;
    if (v18 || (sub_2489C2298() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_longLongValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45EAC();
    }
    v20 = v8 == 67 && v9 == 0xE100000000000000;
    if (v20 || (sub_2489C2298() & 1) != 0)
    {
      v21 = swift_bridgeObjectRelease();
      sub_2489C07A4(v21, sel_unsignedCharValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45EB8();
    }
    v22 = v8 == 83 && v9 == 0xE100000000000000;
    if (v22 || (sub_2489C2298() & 1) != 0)
    {
      v23 = swift_bridgeObjectRelease();
      sub_2489C07A4(v23, sel_unsignedShortValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45EC4();
    }
    v24 = v8 == 73 && v9 == 0xE100000000000000;
    if (v24
      || (sub_2489C2298() & 1) != 0
      || (v8 == 76 ? (v25 = v9 == 0xE100000000000000) : (v25 = 0), v25 || (sub_2489C2298() & 1) != 0))
    {
      v27 = swift_bridgeObjectRelease();
      sub_2489C07A4(v27, sel_unsignedIntValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45ED0();
    }
    v26 = v8 == 81 && v9 == 0xE100000000000000;
    if (v26 || (sub_2489C2298() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_unsignedLongLongValue);
      sub_2489BFF68();
      sub_2489BED54();
      return sub_248A45EDC();
    }
    v28 = v8 == 102 && v9 == 0xE100000000000000;
    if (v28 || (sub_2489C2298() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_floatValue);
      sub_2489BD980();
      sub_2489D1564();
      return sub_248A45E58();
    }
    if (v8 == 100 && v9 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = sub_2489C2298();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
        v31 = sub_248A45AC8();
        sub_2489BF740();
        v33 = v32;
        v34 = sub_2489C330C(&qword_2577A4E78);
        v33[3] = sub_2489C0320(v34, (unint64_t *)&qword_254463D70);
        *v33 = v3;
        sub_2489BF74C(a2, a2[3]);
        v35 = v3;
        sub_248A45E28();
        sub_2489B6AE8();
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x24BEE2728], v31);
        return swift_willThrow();
      }
    }
    objc_msgSend(v3, sel_doubleValue);
    sub_2489BD980();
    sub_2489D1564();
    return sub_248A45E4C();
  }
  return result;
}

void sub_2489CD604(uint64_t a1)
{
  sub_2489B5CA8(a1, &qword_2544638D8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_2489D05D8);
}

void sub_2489CD618(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE __dst[72];
  _BYTE __src[72];
  _QWORD v31[6];
  _BYTE *v32;

  sub_2489C94F0(a1, v31);
  v1 = v31[0];
  v2 = v31[3];
  v3 = v31[4];
  v19 = v31[1];
  v20 = (unint64_t)(v31[2] + 64) >> 6;
  v32 = &__src[40];
  sub_248A453F0();
  v4 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v3)
    {
      v5 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v6 = v5 | (v2 << 6);
      goto LABEL_20;
    }
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    if (v7 >= v20)
      goto LABEL_29;
    v8 = *(_QWORD *)(v19 + 8 * v7);
    v9 = v2 + 1;
    if (!v8)
    {
      v9 = v2 + 2;
      if (v2 + 2 >= v20)
        goto LABEL_29;
      v8 = *(_QWORD *)(v19 + 8 * v9);
      if (!v8)
      {
        v9 = v2 + 3;
        if (v2 + 3 >= v20)
          goto LABEL_29;
        v8 = *(_QWORD *)(v19 + 8 * v9);
        if (!v8)
        {
          v9 = v2 + 4;
          if (v2 + 4 >= v20)
            goto LABEL_29;
          v8 = *(_QWORD *)(v19 + 8 * v9);
          if (!v8)
          {
            v9 = v2 + 5;
            if (v2 + 5 >= v20)
              goto LABEL_29;
            v8 = *(_QWORD *)(v19 + 8 * v9);
            if (!v8)
            {
              v10 = v2 + 6;
              while (v10 < v20)
              {
                v8 = *(_QWORD *)(v19 + 8 * v10++);
                if (v8)
                {
                  v9 = v10 - 1;
                  goto LABEL_19;
                }
              }
LABEL_29:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v3 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
    v2 = v9;
LABEL_20:
    sub_2489D11F0(*(_QWORD *)(v1 + 48) + 40 * v6, (uint64_t)__src);
    sub_2489C55EC(*(_QWORD *)(v1 + 56) + 32 * v6, (uint64_t)v32, &qword_254464AF0);
    memcpy(__dst, __src, sizeof(__dst));
    sub_248A45A2C();
    if (!swift_dynamicCast())
    {
      v24 = 0;
      v25 = 0xE000000000000000;
      sub_248A45A2C();
      sub_2489BE100(&v21, *((uint64_t *)&v22 + 1));
      sub_248A45D8C();
      sub_2489BCE44((uint64_t)&v21);
    }
    v11 = v24;
    v12 = v25;
    *((_QWORD *)&v28 + 1) = sub_2489C330C(&qword_254464AF0);
    *(_QWORD *)&v27 = swift_allocObject();
    sub_2489C55EC((uint64_t)&__dst[40], v27 + 16, &qword_254464AF0);
    *(_QWORD *)&v26 = v11;
    *((_QWORD *)&v26 + 1) = v12;
    sub_2489C3298((uint64_t)__dst, &qword_2577A4EC0);
    if (*((_QWORD *)&v26 + 1))
    {
      v21 = v26;
      v22 = v27;
      v23 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489EC528();
        v4 = v17;
      }
      v13 = *(_QWORD *)(v4 + 16);
      if (v13 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_2489EC528();
        v4 = v18;
      }
      *(_QWORD *)(v4 + 16) = v13 + 1;
      v14 = (_OWORD *)(v4 + 48 * v13);
      v15 = v21;
      v16 = v23;
      v14[3] = v22;
      v14[4] = v16;
      v14[2] = v15;
    }
    else
    {
      sub_2489C3298((uint64_t)&v26, &qword_2577A4EC8);
    }
  }
  __break(1u);
}

uint64_t sub_2489CD94C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_2489C330C(&qword_254463728);
    v3 = sub_248A45C3C();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_2489D03B8(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

id default argument 0 of Configuration.setup(userDefaults:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
}

uint64_t default argument 2 of static PersistentModel.getOrCreate(in:includePendingChanges:relationshipPaths:sortBy:_:_:)()
{
  sub_2489B71D0();
  sub_248A45AF8();
  sub_2489B71D0();
  return sub_248A456D8();
}

uint64_t _ss17FixedWidthIntegerP10TipKitCoreE9increment2byyx_tFfA__0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v1);
  swift_getAssociatedConformanceWitness();
  sub_248A45F0C();
  return sub_248A45DA4();
}

uint64_t default argument 1 of MiniTipsDatastore.init(id:bundleID:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_254464F38)
  {
    v0 = qword_254464F30;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v0 = qword_25446C6D0;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v1 = sub_2489D7B5C();
      if (v2)
        v0 = v1;
      else
        v0 = 0;
    }
    sub_248A453F0();
  }
  sub_248A453F0();
  return v0;
}

id default argument 0 of URL.removeFile(fileManager:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_defaultManager);
}

uint64_t default argument 3 of static PersistentModel.get(in:includePendingChanges:relationshipPaths:sortBy:_:)()
{
  sub_2489B71D0();
  sub_248A44C70();
  sub_2489B71D0();
  return sub_248A456D8();
}

uint64_t sub_2489CDCAC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_248A454C8();
  *a2 = 0;
  return result;
}

uint64_t sub_2489CDD20(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_248A454D4();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2489CDD9C()
{
  uint64_t v0;

  sub_248A454E0();
  v0 = sub_248A454BC();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_2489CDDD0()
{
  uint64_t *v0;

  sub_2489CDF10(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2489CDDF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2489CDD9C();
  *a1 = result;
  return result;
}

void sub_2489CDE18()
{
  sub_2489FDAE0();
}

uint64_t sub_2489CDE24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_248A454BC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_2489CDE68(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_248A2A914();
  a1[1] = v2;
  sub_2489BA7D0();
}

uint64_t sub_2489CDE8C()
{
  sub_2489BA29C(&qword_2577A4F30, (uint64_t (*)(uint64_t))type metadata accessor for NSValueTransformerName, (uint64_t)&unk_248A46E54);
  sub_2489BA29C(&qword_2577A4F38, (uint64_t (*)(uint64_t))type metadata accessor for NSValueTransformerName, (uint64_t)&unk_248A46DF4);
  return sub_248A45C54();
}

void sub_2489CDF10(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_248A454E0();
  a2(v3);
  sub_2489BBC58();
  sub_2489BA7D0();
}

uint64_t sub_2489CDF40()
{
  sub_248A454E0();
  sub_248A45540();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489CDF80()
{
  uint64_t v0;

  sub_248A454E0();
  sub_248A45F90();
  sub_248A45540();
  v0 = sub_248A45FD8();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_2489CDFF0()
{
  uint64_t *v0;

  sub_2489CDF10(*v0, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2489CE010()
{
  return sub_2489CDF40();
}

uint64_t sub_2489CE018()
{
  return sub_2489CDF80();
}

unint64_t sub_2489CE020(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_248A45A14();
  return sub_2489CE0F8(a1, v2);
}

uint64_t sub_2489CE050(uint64_t a1)
{
  uint64_t v2;

  sub_2489C6FAC();
  sub_2489D72C8(a1);
  sub_2489C6180();
  sub_2489BBC58();
  v2 = sub_2489BDA5C();
  return sub_2489CE1BC(a1, v2);
}

unint64_t sub_2489CE0AC(uint64_t a1)
{
  uint64_t v2;

  sub_2489C6FAC();
  sub_2489D13D4();
  v2 = sub_2489BDA5C();
  return sub_2489CE7DC(a1, v2);
}

unint64_t sub_2489CE0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_2489D11F0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2495A2194](v9, a1);
      sub_2489D139C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_2489CE1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X1 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_2489CE7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _OWORD v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _BYTE v12[24];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _BYTE v17[48];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_2489C55EC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v17, &qword_254463A60);
      sub_2489C55EC((uint64_t)v17, (uint64_t)v12, &qword_254463A60);
      sub_2489C55EC(a1, (uint64_t)&v14, &qword_254463A60);
      if (v13)
      {
        sub_2489C55EC((uint64_t)v12, (uint64_t)v11, &qword_254463A60);
        if (*((_QWORD *)&v15 + 1))
        {
          v9[0] = v14;
          v9[1] = v15;
          v10 = v16;
          v7 = MEMORY[0x2495A2194](v11, v9);
          sub_2489D139C((uint64_t)v9);
          sub_2489D139C((uint64_t)v11);
          sub_2489C3298((uint64_t)v12, &qword_254463A60);
          sub_2489C3298((uint64_t)v17, &qword_254463A60);
          if ((v7 & 1) != 0)
            return v4;
          goto LABEL_11;
        }
        sub_2489D139C((uint64_t)v11);
      }
      else if (!*((_QWORD *)&v15 + 1))
      {
        sub_2489C3298((uint64_t)v12, &qword_254463A60);
        sub_2489C3298((uint64_t)v17, &qword_254463A60);
        return v4;
      }
      sub_2489C3298((uint64_t)v12, &qword_2577A4EF0);
      sub_2489C3298((uint64_t)v17, &qword_254463A60);
LABEL_11:
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void type metadata accessor for CFBundle(uint64_t a1)
{
  sub_2489BD38C(a1, &qword_2577A4DF8);
}

uint64_t initializeBufferWithCopyOfBuffer for AnyCodable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t *assignWithCopy for AnyCodable(uint64_t *a1, uint64_t *a2)
{
  sub_2489CE9EC(a1, a2);
  return a1;
}

uint64_t *sub_2489CE9EC(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_OWORD *assignWithTake for AnyCodable(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  sub_2489BCE44((uint64_t)a1);
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t sub_2489CEB7C()
{
  return MEMORY[0x24BEE0D88];
}

unint64_t sub_2489CEB8C()
{
  unint64_t result;

  result = qword_2577A4E00;
  if (!qword_2577A4E00)
  {
    result = MEMORY[0x2495A2D34](&unk_248A469AC, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E00);
  }
  return result;
}

uint64_t sub_2489CEBC8()
{
  return MEMORY[0x24BEE0D90];
}

unint64_t sub_2489CEBD8()
{
  unint64_t result;

  result = qword_2577A4E08;
  if (!qword_2577A4E08)
  {
    result = MEMORY[0x2495A2D34](&unk_248A469E4, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E08);
  }
  return result;
}

uint64_t sub_2489CEC14()
{
  return MEMORY[0x24BEE0D80];
}

unint64_t sub_2489CEC24()
{
  unint64_t result;

  result = qword_2577A4E10;
  if (!qword_2577A4E10)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46A24, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E10);
  }
  return result;
}

uint64_t sub_2489CEC60()
{
  return MEMORY[0x24BEE3968];
}

uint64_t sub_2489CEC6C()
{
  return MEMORY[0x24BEE17E8];
}

uint64_t sub_2489CEC78()
{
  return MEMORY[0x24BEE1440];
}

uint64_t sub_2489CEC84()
{
  return MEMORY[0x24BEE1358];
}

unint64_t sub_2489CEC94()
{
  unint64_t result;

  result = qword_2577A4E18;
  if (!qword_2577A4E18)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46C44, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E18);
  }
  return result;
}

void sub_2489CECD0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_2489CED60(a1, a2, a3, (uint64_t (*)(void))sub_2489BCE64);
}

unint64_t sub_2489CECDC()
{
  unint64_t result;

  result = qword_2577A4E20;
  if (!qword_2577A4E20)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46A64, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E20);
  }
  return result;
}

unint64_t sub_2489CED18()
{
  unint64_t result;

  result = qword_2577A4E28;
  if (!qword_2577A4E28)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46A8C, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E28);
  }
  return result;
}

void sub_2489CED54(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_2489CED60(a1, a2, a3, (uint64_t (*)(void))sub_2489BCF54);
}

void sub_2489CED60(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  a1[1] = sub_2489CECDC();
  a1[2] = sub_2489CED18();
  a1[3] = a4();
  sub_2489BA7D0();
}

unint64_t sub_2489CED94(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2489CEDE0();
  a1[2] = sub_2489CEE1C();
  a1[3] = sub_2489CEE58();
  a1[4] = sub_2489CEE94();
  a1[5] = sub_2489CEED0();
  result = sub_2489CEF0C();
  a1[6] = result;
  return result;
}

unint64_t sub_2489CEDE0()
{
  unint64_t result;

  result = qword_2577A4E30;
  if (!qword_2577A4E30)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46BD4, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E30);
  }
  return result;
}

unint64_t sub_2489CEE1C()
{
  unint64_t result;

  result = qword_2577A4E38;
  if (!qword_2577A4E38)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46B9C, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E38);
  }
  return result;
}

unint64_t sub_2489CEE58()
{
  unint64_t result;

  result = qword_2577A4E40;
  if (!qword_2577A4E40)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46B64, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E40);
  }
  return result;
}

unint64_t sub_2489CEE94()
{
  unint64_t result;

  result = qword_2577A4E48;
  if (!qword_2577A4E48)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46B2C, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E48);
  }
  return result;
}

unint64_t sub_2489CEED0()
{
  unint64_t result;

  result = qword_2577A4E50;
  if (!qword_2577A4E50)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46AF4, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E50);
  }
  return result;
}

unint64_t sub_2489CEF0C()
{
  unint64_t result;

  result = qword_2577A4E58;
  if (!qword_2577A4E58)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46AB4, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E58);
  }
  return result;
}

unint64_t sub_2489CEF48(uint64_t a1)
{
  unint64_t result;

  result = sub_2489CEF6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2489CEF6C()
{
  unint64_t result;

  result = qword_2577A4E60;
  if (!qword_2577A4E60)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46C04, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E60);
  }
  return result;
}

unint64_t sub_2489CEFA8(uint64_t a1)
{
  unint64_t result;

  result = sub_2489CEC94();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2489CEFCC(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _OWORD v23[2];
  _BYTE v24[32];
  uint64_t v25;

  sub_2489C330C(&qword_254464348);
  result = sub_248A45C24();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    sub_2489D132C(*(_QWORD *)(a1 + 56) + 32 * i, (uint64_t)v24);
    sub_2489C81EC((uint64_t)v24, (uint64_t)v23);
    sub_248A453F0();
    sub_2489D1368((uint64_t)v24);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v18;
    v19[1] = v17;
    result = (uint64_t)sub_2489C3288(v23, (_OWORD *)(v3[7] + 32 * i));
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v25 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v25 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v25 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2489CF1C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  sub_2489C330C(&qword_2577A4EA8);
  v6 = sub_248A45C30();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
      v21 = *v19;
      v20 = v19[1];
      v22 = (__int128 *)(*(_QWORD *)(v5 + 56) + 32 * i);
      if ((a2 & 1) != 0)
      {
        v23 = v22[1];
        v38 = *v22;
        v39 = v23;
      }
      else
      {
        sub_2489D09D8((uint64_t)v22, (uint64_t)&v38);
        sub_248A453F0();
      }
      sub_248A45F90();
      sub_248A45540();
      result = sub_248A45FD8();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
      *v32 = v21;
      v32[1] = v20;
      v33 = (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v27);
      v34 = v39;
      *v33 = v38;
      v33[1] = v34;
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v16 >= v36)
        goto LABEL_33;
      v17 = v37[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v36)
          goto LABEL_33;
        v17 = v37[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v36)
          {
LABEL_33:
            swift_release();
            v3 = v2;
            if ((a2 & 1) != 0)
            {
              v35 = 1 << *(_BYTE *)(v5 + 32);
              if (v35 >= 64)
                sub_2489D00AC(0, (unint64_t)(v35 + 63) >> 6, v37);
              else
                *v37 = -1 << v35;
              *(_QWORD *)(v5 + 16) = 0;
            }
            break;
          }
          v17 = v37[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_41;
              if (v13 >= v36)
                goto LABEL_33;
              v17 = v37[v13];
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v13 = v18;
        }
      }
LABEL_18:
      v10 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2489CF4C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  sub_2489C330C(&qword_254463728);
  v6 = sub_248A45C30();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = v5 + 64;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 64;
    result = swift_retain();
    v14 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
    {
      v21 = *(_QWORD *)(v5 + 48) + 40 * i;
      if ((a2 & 1) != 0)
      {
        v22 = *(_OWORD *)v21;
        v23 = *(_OWORD *)(v21 + 16);
        v40 = *(_QWORD *)(v21 + 32);
        v38 = v22;
        v39 = v23;
        sub_2489C3288((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * i), v37);
      }
      else
      {
        sub_2489D11F0(v21, (uint64_t)&v38);
        sub_2489C81EC(*(_QWORD *)(v5 + 56) + 32 * i, (uint64_t)v37);
      }
      result = sub_248A45A14();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      v32 = *(_QWORD *)(v7 + 48) + 40 * v27;
      v33 = v38;
      v34 = v39;
      *(_QWORD *)(v32 + 32) = v40;
      *(_OWORD *)v32 = v33;
      *(_OWORD *)(v32 + 16) = v34;
      result = (uint64_t)sub_2489C3288(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v27));
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_42;
      if (v17 >= v11)
        break;
      v18 = (_QWORD *)(v5 + 64);
      v19 = *(_QWORD *)(v36 + 8 * v17);
      ++v14;
      if (!v19)
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v36 + 8 * v14);
        if (!v19)
        {
          v20 = v17 + 2;
          if (v20 >= v11)
          {
LABEL_33:
            swift_release();
            if ((a2 & 1) == 0)
              goto LABEL_40;
            goto LABEL_36;
          }
          v19 = *(_QWORD *)(v36 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              v14 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_43;
              if (v14 >= v11)
                goto LABEL_33;
              v19 = *(_QWORD *)(v36 + 8 * v14);
              ++v20;
              if (v19)
                goto LABEL_18;
            }
          }
          v14 = v20;
        }
      }
LABEL_18:
      v10 = (v19 - 1) & v19;
    }
    swift_release();
    v18 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_40;
LABEL_36:
    v35 = 1 << *(_BYTE *)(v5 + 32);
    if (v35 >= 64)
      sub_2489D00AC(0, (unint64_t)(v35 + 63) >> 6, v18);
    else
      *v18 = -1 << v35;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2489CF7D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_2489C330C(&qword_2544638D8);
  v38 = a2;
  v6 = sub_248A45C30();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v38 & 1) == 0)
    {
      sub_248A453F0();
      v24 = v23;
    }
    sub_248A45F90();
    sub_248A45540();
    result = sub_248A45FD8();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) == 0)
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v27);
        if (v32 != -1)
        {
          v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v28);
    *v33 = v22;
    v33[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v28) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v36)
    {
      swift_release();
      v3 = v35;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v37 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v36)
        goto LABEL_32;
      v18 = *(_QWORD *)(v37 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v36)
  {
    v18 = *(_QWORD *)(v37 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v36)
          goto LABEL_32;
        v18 = *(_QWORD *)(v37 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v35;
LABEL_34:
  if ((v38 & 1) != 0)
  {
    v34 = 1 << *(_BYTE *)(v5 + 32);
    if (v34 >= 64)
      sub_2489D00AC(0, (unint64_t)(v34 + 63) >> 6, v17);
    else
      *v17 = -1 << v34;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_2489CFACC(uint64_t a1, char a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  unsigned __int8 v20;
  __int128 *v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  __int128 v35[2];

  v4 = v2;
  sub_2489D1550();
  sub_2489C330C(&qword_2544638D0);
  v6 = sub_248A45C30();
  if (v3[2])
  {
    sub_2489C334C();
    v34 = v9;
    if (v7 < 64)
      v10 = ~(-1 << v7);
    else
      v10 = -1;
    v11 = v10 & v8;
    v32 = v2;
    v33 = (unint64_t)(v7 + 63) >> 6;
    v12 = v6 + 64;
    swift_retain();
    v13 = 0;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
    {
      v20 = *(_BYTE *)(v3[6] + i);
      v21 = (__int128 *)(v3[7] + 40 * i);
      if ((a2 & 1) != 0)
        sub_2489B8F74(v21, (uint64_t)v35);
      else
        sub_2489C4880((uint64_t)v21, (uint64_t)v35);
      sub_248A45F90();
      sub_2489D72C8(v20);
      sub_2489C6180();
      sub_2489BBC58();
      v22 = sub_248A45FD8() & ~(-1 << *(_BYTE *)(v6 + 32));
      if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) == 0)
      {
        sub_2489D1510();
        while (++v25 != v26 || (v24 & 1) == 0)
        {
          v27 = v25 == v26;
          if (v25 == v26)
            v25 = 0;
          v24 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v25);
          if (v28 != -1)
          {
            v23 = __clz(__rbit64(~v28)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      v23 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v23) = v20;
      sub_2489B8F74(v35, *(_QWORD *)(v6 + 56) + 40 * v23);
      ++*(_QWORD *)(v6 + 16);
      if (v11)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_42;
      if (v16 >= v33)
        break;
      v17 = v34;
      v18 = v34[v16];
      ++v13;
      if (!v18)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v33)
          goto LABEL_33;
        v18 = v34[v13];
        if (!v18)
        {
          v19 = v16 + 2;
          if (v19 >= v33)
          {
LABEL_33:
            sub_2489BEC4C();
            v4 = v32;
            if ((a2 & 1) == 0)
              goto LABEL_40;
            goto LABEL_36;
          }
          v18 = v34[v19];
          if (!v18)
          {
            while (1)
            {
              v13 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_43;
              if (v13 >= v33)
                goto LABEL_33;
              v18 = v34[v13];
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          v13 = v19;
        }
      }
LABEL_18:
      v11 = (v18 - 1) & v18;
    }
    sub_2489BEC4C();
    v4 = v32;
    v17 = v34;
    if ((a2 & 1) == 0)
      goto LABEL_40;
LABEL_36:
    sub_2489D153C();
    if (v30 != v31)
      *v17 = -1 << v29;
    else
      sub_2489BBC44(v29);
    v3[2] = 0;
  }
LABEL_40:
  sub_2489BEC4C();
  *v4 = v6;
}

void sub_2489CFD84(uint64_t a1, char a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  char v35;
  _OWORD v36[2];
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _BYTE v41[48];

  v4 = v2;
  sub_2489D1550();
  sub_2489C330C(&qword_2577A4EE8);
  v35 = a2;
  v6 = sub_248A45C30();
  if (!v3[2])
    goto LABEL_43;
  sub_2489C334C();
  v34 = v9;
  if (v7 < 64)
    v10 = ~(-1 << v7);
  else
    v10 = -1;
  v11 = v10 & v8;
  v32 = v2;
  v33 = (unint64_t)(v7 + 63) >> 6;
  v12 = v6 + 64;
  swift_retain();
  v13 = 0;
  if (!v11)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = v3[6] + 40 * i;
    if ((v35 & 1) != 0)
    {
      sub_2489C625C(v20, (uint64_t)v41, &qword_254463A60);
      v21 = *(_QWORD *)(v3[7] + 8 * i);
    }
    else
    {
      sub_2489C55EC(v20, (uint64_t)v41, &qword_254463A60);
      v21 = *(_QWORD *)(v3[7] + 8 * i);
      sub_248A453F0();
    }
    sub_248A45F90();
    sub_2489C55EC((uint64_t)v41, (uint64_t)&v38, &qword_254463A60);
    if (*((_QWORD *)&v39 + 1))
    {
      v36[0] = v38;
      v36[1] = v39;
      v37 = v40;
      sub_248A45FA8();
      sub_248A45A38();
      sub_2489D139C((uint64_t)v36);
    }
    else
    {
      sub_248A45FA8();
    }
    v22 = sub_248A45FD8() & ~(-1 << *(_BYTE *)(v6 + 32));
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      sub_2489D1510();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        v27 = v25 == v26;
        if (v25 == v26)
          v25 = 0;
        v24 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v25);
        if (v28 != -1)
        {
          v23 = __clz(__rbit64(~v28)) + (v25 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    v23 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    sub_2489C625C((uint64_t)v41, *(_QWORD *)(v6 + 48) + 40 * v23, &qword_254463A60);
    *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v23) = v21;
    ++*(_QWORD *)(v6 + 16);
    if (v11)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_45;
    if (v16 >= v33)
    {
      sub_2489BEC4C();
      v4 = v32;
      v17 = v34;
      goto LABEL_38;
    }
    v17 = v34;
    v18 = v34[v16];
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v33)
        goto LABEL_36;
      v18 = v34[v13];
      if (!v18)
        break;
    }
LABEL_18:
    v11 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v33)
  {
    v18 = v34[v19];
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_46;
        if (v13 >= v33)
          goto LABEL_36;
        v18 = v34[v13];
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_36:
  sub_2489BEC4C();
  v4 = v32;
LABEL_38:
  if ((v35 & 1) != 0)
  {
    sub_2489D153C();
    if (v30 != v31)
      *v17 = -1 << v29;
    else
      sub_2489BBC44(v29);
    v3[2] = 0;
  }
LABEL_43:
  sub_2489BEC4C();
  *v4 = v6;
}

uint64_t sub_2489D00AC(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_2489D00C8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  id v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  id v35;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v6 = a1 + 32;
  sub_248A453F0();
  while (1)
  {
    sub_2489C55EC(v6, (uint64_t)&v31, &qword_2577A4EB0);
    v7 = v31;
    v8 = v32;
    v29 = v31;
    v30 = v32;
    v27 = v33;
    v28 = v34;
    v9 = (_QWORD *)*a3;
    v11 = sub_2489C28D0(v31, v32);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_248A45F30();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_2489C330C(&qword_2577A4EB8);
      sub_248A45BDC();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (uint64_t *)(v18[6] + 16 * v11);
    *v19 = v7;
    v19[1] = v8;
    v20 = (_OWORD *)(v18[7] + 32 * v11);
    v21 = v28;
    *v20 = v27;
    v20[1] = v21;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_18;
    v18[2] = v24;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_2489CF1C4(v14, a2 & 1);
  v16 = sub_2489C28D0(v7, v8);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v25 = (void *)swift_allocError();
  swift_willThrow();
  v35 = v25;
  v26 = v25;
  sub_2489C330C(&qword_254464C00);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_2489D09A4((uint64_t)&v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_248A45A74();
  sub_248A4557C();
  sub_248A45BAC();
  sub_248A4557C();
  sub_248A45C00();
  __break(1u);
}

uint64_t sub_2489D03B8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _OWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  _BYTE v25[32];
  _OWORD v26[2];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[3];

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return swift_bridgeObjectRelease();
  v6 = a1 + 32;
  sub_248A453F0();
  while (1)
  {
    sub_2489C55EC(v6, (uint64_t)v31, &qword_254463720);
    v28 = v31[0];
    v29 = v31[1];
    v30 = v32;
    sub_2489C3288(v33, v27);
    v7 = *a3;
    v9 = sub_2489CE020((uint64_t)&v28);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = (v8 & 1) == 0;
    v12 = v10 + v11;
    if (__OFADD__(v10, v11))
      break;
    v13 = v8;
    if (*(_QWORD *)(v7 + 24) >= v12)
    {
      if ((a2 & 1) != 0)
      {
        if ((v8 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_2489C330C(&qword_2577A4ED0);
        sub_248A45BDC();
        if ((v13 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_2489CF4C0(v12, a2 & 1);
      v14 = sub_2489CE020((uint64_t)&v28);
      if ((v13 & 1) != (v15 & 1))
        goto LABEL_20;
      v9 = v14;
      if ((v13 & 1) != 0)
      {
LABEL_10:
        sub_2489C81EC(*(_QWORD *)(*a3 + 56) + 32 * v9, (uint64_t)v25);
        sub_2489C81EC((uint64_t)v25, (uint64_t)v26);
        sub_2489BCE44((uint64_t)v25);
        sub_2489BCE44((uint64_t)v27);
        sub_2489D139C((uint64_t)&v28);
        v16 = (_OWORD *)(*(_QWORD *)(*a3 + 56) + 32 * v9);
        sub_2489BCE44((uint64_t)v16);
        sub_2489C3288(v26, v16);
        goto LABEL_14;
      }
    }
    v17 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v9 >> 6) + 64) |= 1 << v9;
    v18 = v17[6] + 40 * v9;
    v19 = v28;
    v20 = v29;
    *(_QWORD *)(v18 + 32) = v30;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_2489C3288(v27, (_OWORD *)(v17[7] + 32 * v9));
    v21 = v17[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_19;
    v17[2] = v23;
LABEL_14:
    v6 += 72;
    a2 = 1;
    if (!--v3)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_248A45F30();
  __break(1u);
  return result;
}

void sub_2489D05D8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  void **i;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  id v25;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (void **)(sub_248A453F0() + 48); ; i += 3)
  {
    v7 = (uint64_t)*(i - 2);
    v6 = (uint64_t)*(i - 1);
    v8 = *i;
    v9 = (_QWORD *)*a3;
    sub_248A453F0();
    v10 = v8;
    v12 = sub_2489C28D0(v7, v6);
    v13 = v9[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_248A45F30();
      __break(1u);
      goto LABEL_20;
    }
    v16 = v11;
    if (v9[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_2489C330C(&qword_2577A4EE0);
      sub_248A45BDC();
      if ((v16 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v20 = (uint64_t *)(v19[6] + 16 * v12);
    *v20 = v7;
    v20[1] = v6;
    *(_QWORD *)(v19[7] + 8 * v12) = v10;
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_18;
    v19[2] = v23;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_2489CF7D0(v15, a2 & 1);
  v17 = sub_2489C28D0(v7, v6);
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_19;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v24 = (void *)swift_allocError();
  swift_willThrow();
  v25 = v24;
  sub_2489C330C(&qword_254464C00);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_20:
  sub_248A45A74();
  sub_248A4557C();
  sub_248A45BAC();
  sub_248A4557C();
  sub_248A45C00();
  __break(1u);
}

uint64_t sub_2489D08A8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_2489BCE44(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2489D08D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_2489D08FC()
{
  unint64_t result;

  result = qword_2577A4E90;
  if (!qword_2577A4E90)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47390, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4E90);
  }
  return result;
}

unint64_t sub_2489D0938()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2577A4EA0;
  if (!qword_2577A4EA0)
  {
    v1 = sub_2489BCD7C(&qword_2577A4E98);
    v2 = sub_2489D08FC();
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2577A4EA0);
  }
  return result;
}

uint64_t sub_2489D09A4(uint64_t a1)
{
  destroy for AnyCodable(a1);
  return a1;
}

uint64_t sub_2489D09D8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyCodable(a2, a1);
  return a2;
}

void sub_2489D0A14(uint64_t a1, uint64_t a2)
{
  sub_2489D0A5C(a1, a2, &qword_2577A4E98, (void (*)(uint64_t))sub_2489D0AF4, &qword_2577A4E80, (void (*)(uint64_t))sub_2489D0A14);
}

void sub_2489D0A38(uint64_t a1, uint64_t a2)
{
  sub_2489D0A5C(a1, a2, &qword_254462948, (void (*)(uint64_t))sub_2489D0D48, &qword_254462E80, (void (*)(uint64_t))sub_2489D0A38);
}

void sub_2489D0A5C(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t), uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(a2 + 16);
  sub_248A45F9C();
  if (v12)
  {
    v13 = a2 + 32;
    do
    {
      sub_2489CCBF4(a1, a3, a4, a5, a6);
      v13 += 32;
      --v12;
    }
    while (v12);
  }
  sub_2489BA400();
}

void sub_2489D0AD0(uint64_t a1, uint64_t a2)
{
  sub_2489D0A5C(a1, a2, &qword_254463D50, (void (*)(uint64_t))sub_2489D0F9C, &qword_254462978, (void (*)(uint64_t))sub_2489D0AD0);
}

uint64_t sub_2489D0AF4(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  _QWORD v30[2];
  __int128 v31;
  __int128 v32;

  v23 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = sub_248A453F0();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_4:
  v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v12 = v11 | (v10 << 6);
LABEL_5:
  v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v12);
  v15 = *v13;
  v14 = v13[1];
  sub_2489D09D8(*(_QWORD *)(a2 + 56) + 32 * v12, (uint64_t)&v25);
  *(_QWORD *)&v24 = v15;
  *((_QWORD *)&v24 + 1) = v14;
  sub_248A453F0();
  while (1)
  {
    sub_2489C625C((uint64_t)&v24, (uint64_t)v30, &qword_2577A4F48);
    if (!v30[1])
    {
      swift_release();
      return sub_248A45F9C();
    }
    v29[0] = v31;
    v29[1] = v32;
    v20 = *((_QWORD *)a1 + 8);
    v21 = a1[1];
    v24 = *a1;
    v25 = v21;
    v22 = a1[3];
    v26 = a1[2];
    v27 = v22;
    v28 = v20;
    sub_248A45540();
    swift_bridgeObjectRelease();
    sub_2489CCBF4((uint64_t)&v24, &qword_2577A4E98, (void (*)(uint64_t))sub_2489D0AF4, &qword_2577A4E80, (void (*)(uint64_t))sub_2489D0A14);
    sub_2489D09A4((uint64_t)v29);
    result = sub_248A45FD8();
    v9 ^= result;
    if (v6)
      goto LABEL_4;
LABEL_6:
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 < v7)
    {
      v17 = *(_QWORD *)(v23 + 8 * v16);
      if (v17)
        goto LABEL_9;
      v18 = v10 + 2;
      ++v10;
      if (v16 + 1 < v7)
      {
        v17 = *(_QWORD *)(v23 + 8 * v18);
        if (v17)
        {
          ++v16;
LABEL_9:
          v6 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v16 << 6);
          v10 = v16;
          goto LABEL_5;
        }
        v19 = v16 + 2;
        v10 = v16 + 1;
        if (v16 + 2 < v7)
          break;
      }
    }
LABEL_21:
    v6 = 0;
    v25 = 0u;
    v26 = 0u;
    v24 = 0u;
  }
  v17 = *(_QWORD *)(v23 + 8 * v19);
  if (v17)
  {
    v16 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v16 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v16 >= v7)
    {
      v10 = v7 - 1;
      goto LABEL_21;
    }
    v17 = *(_QWORD *)(v23 + 8 * v16);
    ++v19;
    if (v17)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2489D0D48(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  _QWORD v30[2];
  __int128 v31;
  __int128 v32;

  v23 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = sub_248A453F0();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_4:
  v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v12 = v11 | (v10 << 6);
LABEL_5:
  v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v12);
  v15 = *v13;
  v14 = v13[1];
  sub_2489D132C(*(_QWORD *)(a2 + 56) + 32 * v12, (uint64_t)&v25);
  *(_QWORD *)&v24 = v15;
  *((_QWORD *)&v24 + 1) = v14;
  sub_248A453F0();
  while (1)
  {
    sub_2489C625C((uint64_t)&v24, (uint64_t)v30, &qword_2577A4F40);
    if (!v30[1])
    {
      swift_release();
      return sub_248A45F9C();
    }
    v29[0] = v31;
    v29[1] = v32;
    v20 = *((_QWORD *)a1 + 8);
    v21 = a1[1];
    v24 = *a1;
    v25 = v21;
    v22 = a1[3];
    v26 = a1[2];
    v27 = v22;
    v28 = v20;
    sub_248A45540();
    swift_bridgeObjectRelease();
    sub_2489CCBF4((uint64_t)&v24, &qword_254462948, (void (*)(uint64_t))sub_2489D0D48, &qword_254462E80, (void (*)(uint64_t))sub_2489D0A38);
    sub_2489D1368((uint64_t)v29);
    result = sub_248A45FD8();
    v9 ^= result;
    if (v6)
      goto LABEL_4;
LABEL_6:
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 < v7)
    {
      v17 = *(_QWORD *)(v23 + 8 * v16);
      if (v17)
        goto LABEL_9;
      v18 = v10 + 2;
      ++v10;
      if (v16 + 1 < v7)
      {
        v17 = *(_QWORD *)(v23 + 8 * v18);
        if (v17)
        {
          ++v16;
LABEL_9:
          v6 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v16 << 6);
          v10 = v16;
          goto LABEL_5;
        }
        v19 = v16 + 2;
        v10 = v16 + 1;
        if (v16 + 2 < v7)
          break;
      }
    }
LABEL_21:
    v6 = 0;
    v25 = 0u;
    v26 = 0u;
    v24 = 0u;
  }
  v17 = *(_QWORD *)(v23 + 8 * v19);
  if (v17)
  {
    v16 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v16 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v16 >= v7)
    {
      v10 = v7 - 1;
      goto LABEL_21;
    }
    v17 = *(_QWORD *)(v23 + 8 * v16);
    ++v19;
    if (v17)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2489D0F9C(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  _QWORD v30[2];
  __int128 v31;
  __int128 v32;

  v23 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = sub_248A453F0();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_4:
  v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v12 = v11 | (v10 << 6);
LABEL_5:
  v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v12);
  v15 = *v13;
  v14 = v13[1];
  sub_2489C81EC(*(_QWORD *)(a2 + 56) + 32 * v12, (uint64_t)&v25);
  *(_QWORD *)&v24 = v15;
  *((_QWORD *)&v24 + 1) = v14;
  sub_248A453F0();
  while (1)
  {
    sub_2489C625C((uint64_t)&v24, (uint64_t)v30, &qword_254463940);
    if (!v30[1])
    {
      swift_release();
      return sub_248A45F9C();
    }
    v29[0] = v31;
    v29[1] = v32;
    v20 = *((_QWORD *)a1 + 8);
    v21 = a1[1];
    v24 = *a1;
    v25 = v21;
    v22 = a1[3];
    v26 = a1[2];
    v27 = v22;
    v28 = v20;
    sub_248A45540();
    swift_bridgeObjectRelease();
    sub_2489CCBF4((uint64_t)&v24, &qword_254463D50, (void (*)(uint64_t))sub_2489D0F9C, &qword_254462978, (void (*)(uint64_t))sub_2489D0AD0);
    sub_2489C7218((uint64_t)v29);
    result = sub_248A45FD8();
    v9 ^= result;
    if (v6)
      goto LABEL_4;
LABEL_6:
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 < v7)
    {
      v17 = *(_QWORD *)(v23 + 8 * v16);
      if (v17)
        goto LABEL_9;
      v18 = v10 + 2;
      ++v10;
      if (v16 + 1 < v7)
      {
        v17 = *(_QWORD *)(v23 + 8 * v18);
        if (v17)
        {
          ++v16;
LABEL_9:
          v6 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v16 << 6);
          v10 = v16;
          goto LABEL_5;
        }
        v19 = v16 + 2;
        v10 = v16 + 1;
        if (v16 + 2 < v7)
          break;
      }
    }
LABEL_21:
    v6 = 0;
    v25 = 0u;
    v26 = 0u;
    v24 = 0u;
  }
  v17 = *(_QWORD *)(v23 + 8 * v19);
  if (v17)
  {
    v16 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v16 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v16 >= v7)
    {
      v10 = v7 - 1;
      goto LABEL_21;
    }
    v17 = *(_QWORD *)(v23 + 8 * v16);
    ++v19;
    if (v17)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2489D11F0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

unint64_t sub_2489D122C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_254462950;
  if (!qword_254462950)
  {
    v1 = sub_2489BCD7C(&qword_254462948);
    v2 = sub_2489D1298();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254462950);
  }
  return result;
}

unint64_t sub_2489D1298()
{
  unint64_t result;

  result = qword_254462618;
  if (!qword_254462618)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4700C, &type metadata for AnyDecodable);
    atomic_store(result, (unint64_t *)&qword_254462618);
  }
  return result;
}

void sub_2489D12D4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  if (!*a1)
  {
    v7 = sub_2489BCD7C(a2);
    v8 = a3();
    atomic_store(MEMORY[0x2495A2D34](a4, v7, &v8), a1);
  }
  sub_2489BA428();
}

uint64_t sub_2489D132C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyCodable(a2, a1);
  return a2;
}

uint64_t sub_2489D1368(uint64_t a1)
{
  destroy for AnyCodable(a1);
  return a1;
}

uint64_t sub_2489D139C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_2489D13D4()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  sub_2489C55EC(v0, (uint64_t)&v4, &qword_254463A60);
  if (!*((_QWORD *)&v5 + 1))
    return sub_248A45FA8();
  v2[0] = v4;
  v2[1] = v5;
  v3 = v6;
  sub_248A45FA8();
  sub_248A45A38();
  return sub_2489D139C((uint64_t)v2);
}

void sub_2489D1458()
{
  sub_2489BA29C(&qword_2577A4F00, (uint64_t (*)(uint64_t))type metadata accessor for NSValueTransformerName, (uint64_t)&unk_248A46DB8);
}

void sub_2489D1484()
{
  sub_2489BA29C(&qword_2577A4F08, (uint64_t (*)(uint64_t))type metadata accessor for NSValueTransformerName, (uint64_t)&unk_248A46D8C);
}

void sub_2489D14B0()
{
  sub_2489BA29C(&qword_2577A4F10, (uint64_t (*)(uint64_t))type metadata accessor for NSValueTransformerName, (uint64_t)&unk_248A46E28);
}

uint64_t sub_2489D1524()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489D1530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_2489D1564()
{
  uint64_t v0;

  return v0;
}

ValueMetadata *type metadata accessor for AnyDecodable()
{
  return &type metadata for AnyDecodable;
}

unint64_t sub_2489D158C()
{
  unint64_t result;

  result = qword_2577A4F58;
  if (!qword_2577A4F58)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46F40, &type metadata for AnyDecodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F58);
  }
  return result;
}

uint64_t sub_2489D15C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v7[4];
  __int128 v8[3];
  _BYTE v9[32];

  sub_2489C1458();
  if (sub_2489C38D4())
  {
    memset(v8, 0, 32);
    sub_2489C330C(&qword_254464AF0);
    v1 = sub_248A454F8();
  }
  else
  {
    sub_2489C330C(&qword_2577A4EF8);
    if (sub_2489C38D4())
    {
      sub_2489B8F74(v8, (uint64_t)v7);
      sub_2489BE100(v7, v7[3]);
      v1 = sub_248A45D68();
      sub_2489BCE44((uint64_t)v7);
    }
    else
    {
      v2 = sub_2489BE100(v0, v0[3]);
      MEMORY[0x24BDAC7A8](v2, v2);
      (*(void (**)(char *))(v4 + 16))((char *)&v7[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
      v1 = sub_248A454F8();
    }
  }
  sub_2489BCE44((uint64_t)v9);
  return v1;
}

uint64_t sub_2489D1718()
{
  uint64_t v0;
  _QWORD v2[2];
  _QWORD v3[4];
  __int128 v4[2];
  _BYTE v5[32];

  sub_2489C1458();
  sub_2489C330C(&qword_2577A4ED8);
  if (swift_dynamicCast())
  {
    sub_2489B8F74(v4, (uint64_t)v3);
    sub_248A45A74();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "AnyDecodable(");
    HIWORD(v2[1]) = -4864;
    sub_2489BE100(v3, v3[3]);
    sub_248A45D68();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489C22AC();
    v0 = v2[0];
    sub_2489BCE44((uint64_t)v3);
  }
  else
  {
    sub_248A45A74();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "AnyDecodable(");
    HIWORD(v4[0]) = -4864;
    sub_2489D15C8();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489C22AC();
    v0 = *(_QWORD *)&v4[0];
  }
  sub_2489BCE44((uint64_t)v5);
  return v0;
}

uint64_t sub_2489D1868()
{
  _BYTE v1[72];

  sub_248A45F90();
  sub_2489CCBD0((uint64_t)v1);
  return sub_248A45FD8();
}

uint64_t sub_2489D18A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2489CBE78(a1, a2);
}

uint64_t sub_2489D18CC()
{
  _BYTE v1[72];

  sub_248A45F90();
  sub_2489CCBD0((uint64_t)v1);
  return sub_248A45FD8();
}

unint64_t sub_2489D1904(uint64_t a1)
{
  unint64_t result;

  result = sub_2489D1928();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2489D1928()
{
  unint64_t result;

  result = qword_2577A4F60;
  if (!qword_2577A4F60)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46F00, &type metadata for AnyDecodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F60);
  }
  return result;
}

unint64_t sub_2489D1964(uint64_t a1)
{
  unint64_t result;

  result = sub_2489D158C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2489D1988(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2489D19BC();
  a1[2] = sub_2489D19F8();
  result = sub_2489D1298();
  a1[3] = result;
  return result;
}

unint64_t sub_2489D19BC()
{
  unint64_t result;

  result = qword_2577A4F68;
  if (!qword_2577A4F68)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46F68, &type metadata for AnyDecodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F68);
  }
  return result;
}

unint64_t sub_2489D19F8()
{
  unint64_t result;

  result = qword_2577A4F70;
  if (!qword_2577A4F70)
  {
    result = MEMORY[0x2495A2D34](&unk_248A46F90, &type metadata for AnyDecodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F70);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyEncodable()
{
  return &type metadata for AnyEncodable;
}

uint64_t sub_2489D1A44()
{
  uint64_t v0;
  _QWORD v2[2];
  _QWORD v3[4];
  __int128 v4[2];
  _BYTE v5[32];

  sub_2489C1458();
  sub_2489C330C(&qword_2577A4ED8);
  if (swift_dynamicCast())
  {
    sub_2489B8F74(v4, (uint64_t)v3);
    sub_248A45A74();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "AnyEncodable(");
    HIWORD(v2[1]) = -4864;
    sub_2489BE100(v3, v3[3]);
    sub_248A45D68();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489C22AC();
    v0 = v2[0];
    sub_2489BCE44((uint64_t)v3);
  }
  else
  {
    sub_248A45A74();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "AnyEncodable(");
    HIWORD(v4[0]) = -4864;
    sub_2489D15C8();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489C22AC();
    v0 = *(_QWORD *)&v4[0];
  }
  sub_2489BCE44((uint64_t)v5);
  return v0;
}

uint64_t sub_2489D1B94()
{
  _BYTE v1[72];

  sub_248A45F90();
  sub_2489CCBAC((uint64_t)v1);
  return sub_248A45FD8();
}

uint64_t sub_2489D1BD0(_QWORD *a1)
{
  return sub_2489CC2AC(a1);
}

uint64_t sub_2489D1BF4()
{
  _BYTE v1[72];

  sub_248A45F90();
  sub_2489CCBAC((uint64_t)v1);
  return sub_248A45FD8();
}

void sub_2489D1C30(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2489CCF1C(*a1, a2);
}

uint64_t sub_2489D1C3C@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2489CD004(a2, *a1);
}

void sub_2489D1C44(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2489CD060(*a1, a2);
}

uint64_t sub_2489D1C4C(_QWORD *a1)
{
  return sub_2489CD0BC(*a1, a1[1]);
}

unint64_t sub_2489D1C5C()
{
  unint64_t result;

  result = qword_2577A4F78;
  if (!qword_2577A4F78)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47060, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F78);
  }
  return result;
}

unint64_t sub_2489D1C9C()
{
  unint64_t result;

  result = qword_2577A4F80;
  if (!qword_2577A4F80)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47098, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F80);
  }
  return result;
}

unint64_t sub_2489D1CDC()
{
  unint64_t result;

  result = qword_2577A4F88;
  if (!qword_2577A4F88)
  {
    result = MEMORY[0x2495A2D34](&unk_248A470D8, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F88);
  }
  return result;
}

unint64_t sub_2489D1D1C()
{
  unint64_t result;

  result = qword_2577A4F90;
  if (!qword_2577A4F90)
  {
    result = MEMORY[0x2495A2D34](&unk_248A472A8, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F90);
  }
  return result;
}

unint64_t sub_2489D1D58(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2489D1DA4();
  a1[2] = sub_2489D1DE0();
  a1[3] = sub_2489D1E1C();
  a1[4] = sub_2489D1E58();
  a1[5] = sub_2489D1E94();
  result = sub_2489D1ED0();
  a1[6] = result;
  return result;
}

unint64_t sub_2489D1DA4()
{
  unint64_t result;

  result = qword_2577A4F98;
  if (!qword_2577A4F98)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47238, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4F98);
  }
  return result;
}

unint64_t sub_2489D1DE0()
{
  unint64_t result;

  result = qword_2577A4FA0;
  if (!qword_2577A4FA0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47200, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4FA0);
  }
  return result;
}

unint64_t sub_2489D1E1C()
{
  unint64_t result;

  result = qword_2577A4FA8;
  if (!qword_2577A4FA8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A471C8, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4FA8);
  }
  return result;
}

unint64_t sub_2489D1E58()
{
  unint64_t result;

  result = qword_2577A4FB0;
  if (!qword_2577A4FB0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47190, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4FB0);
  }
  return result;
}

unint64_t sub_2489D1E94()
{
  unint64_t result;

  result = qword_2577A4FB8;
  if (!qword_2577A4FB8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47158, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4FB8);
  }
  return result;
}

unint64_t sub_2489D1ED0()
{
  unint64_t result;

  result = qword_2577A4FC0;
  if (!qword_2577A4FC0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47118, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4FC0);
  }
  return result;
}

unint64_t sub_2489D1F0C(uint64_t a1)
{
  unint64_t result;

  result = sub_2489D1F30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2489D1F30()
{
  unint64_t result;

  result = qword_2577A4FC8;
  if (!qword_2577A4FC8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47268, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4FC8);
  }
  return result;
}

unint64_t sub_2489D1F6C(uint64_t a1)
{
  unint64_t result;

  result = sub_2489D1D1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2489D1F90(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2489D1FC4();
  a1[2] = sub_2489D2000();
  result = sub_2489D08FC();
  a1[3] = result;
  return result;
}

unint64_t sub_2489D1FC4()
{
  unint64_t result;

  result = qword_2577A4FD0;
  if (!qword_2577A4FD0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A472D0, &type metadata for AnyEncodable);
    atomic_store(result, (unint64_t *)&qword_2577A4FD0);
  }
  return result;
}

unint64_t sub_2489D2000()
{
  unint64_t result;

  result = qword_2577A4FD8[0];
  if (!qword_2577A4FD8[0])
  {
    result = MEMORY[0x2495A2D34](&unk_248A472F8, &type metadata for AnyEncodable);
    atomic_store(result, qword_2577A4FD8);
  }
  return result;
}

uint64_t AnyKeyPath.stringValue.getter()
{
  uint64_t result;
  void *v1;
  uint64_t v2;

  result = AnyKeyPath.toString()()._countAndFlagsBits;
  if (v1)
  {
    if (qword_254462F70 != -1)
      swift_once();
    v2 = type metadata accessor for logger();
    sub_2489C401C(v2, (uint64_t)&unk_254462F58);
    sub_248A45A74();
    sub_248A4557C();
    swift_getErrorValue();
    sub_248A45D8C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();

    return 0;
  }
  return result;
}

uint64_t AnyKeyPath.unsafeSendableAnyKeyPath.getter()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  if (v0)
    return swift_retain();
  return result;
}

uint64_t sub_2489D2160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 32 * v1);
  sub_248A453F0();
  return v2;
}

BOOL sub_2489D21C0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL8 v16;

  v5 = a4 >> 14;
  sub_248A453F0();
  if (v5 == a3 >> 14)
  {
LABEL_13:
    sub_248A45588();
    v15 = v14;
    swift_bridgeObjectRelease();
    v16 = v15 == 0;
  }
  else
  {
    sub_248A453F0();
    while (1)
    {
      v6 = sub_248A4593C();
      v8 = v7;
      v9 = sub_248A45930();
      v10 = sub_248A45588();
      if (!v11)
        break;
      if (v6 == v10 && v11 == v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = sub_248A45DBC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v16 = 0;
          goto LABEL_15;
        }
      }
      if (v5 == v9 >> 14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = 1;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_2489D2348(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_248A455DC();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    sub_2489C2EA0();
    v14 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
    sub_2489C2E64(v14);
    v15 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(v15 + 16) = v14 + 1;
    v16 = (_QWORD *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_248A45BF4();
  __break(1u);
  return result;
}

uint64_t sub_2489D244C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2489D2470()
{
  return swift_deallocObject();
}

uint64_t AppleInternal.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*AppleInternal.value.modify())()
{
  return nullsub_1;
}

uint64_t AppleInternal.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_2489D24C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for AppleInternal(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return AppleInternal.wrappedValue.getter(v5, a4);
}

uint64_t sub_2489D2500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a4 + a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a1);
  v6 = (char *)&v12 - v5;
  (*(void (**)(char *))(v7 + 16))((char *)&v12 - v5);
  v10 = type metadata accessor for AppleInternal(0, v4, v8, v9);
  return AppleInternal.wrappedValue.setter((uint64_t)v6, v10);
}

uint64_t AppleInternal.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_2489D25C0(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

uint64_t sub_2489D25C0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = result;
  if (qword_254464E68 != -1)
    result = swift_once();
  if (byte_254464E60 == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 24))(v2, v4);
  return result;
}

void (*AppleInternal.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  void (*v10)(void);

  v5 = malloc(0x38uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v10 = *(void (**)(void))(v7 + 16);
  v5[5] = v9;
  v5[6] = v10;
  v10();
  return sub_2489D26D4;
}

void sub_2489D26D4(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 24);
    v4 = *(void **)(v2 + 32);
    v6 = *(_QWORD *)(v2 + 16);
    v7 = *(_QWORD *)v2;
    (*(void (**)(void *, void *, uint64_t))(v2 + 48))(v4, v3, v6);
    AppleInternal.wrappedValue.setter((uint64_t)v4, v7);
    (*(void (**)(void *, uint64_t))(v5 + 8))(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 32);
    v3 = *(void **)(v2 + 40);
    AppleInternal.wrappedValue.setter((uint64_t)v3, *(_QWORD *)v2);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t AppleInternal.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_2489D2790()
{
  return 8;
}

_QWORD *sub_2489D279C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2489D27A8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2489D27B0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2489D281C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2489D288C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_2489D289C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_2489D28CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_2489D28FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_2489D292C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_2489D295C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return sub_2489BE834(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2489D2A0C + 4 * byte_248A473D8[(v8 - 1)]))();
}

void sub_2489D2A58(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for AppleInternal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489BD200(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppleInternal);
}

void sub_2489D2C10(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1, a1);
  v2 = (char *)&v4 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v4 - v1);
  AtomicProperty.wrappedValue.setter((uint64_t)v2);
}

void AtomicProperty.wrappedValue.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  sub_2489BEC64();
  *(_QWORD *)(v4 + 8) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 16) = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  AtomicProperty.wrappedValue.getter();
  sub_2489B6AF4();
}

void sub_2489D2CF8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = v2[2];
    sub_2489C0988(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    AtomicProperty.wrappedValue.setter(v3);
    sub_2489BEE5C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    AtomicProperty.wrappedValue.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  sub_2489C0B00();
  sub_2489BF76C();
  sub_2489BFC48(v2);
}

_QWORD *_s10TipKitCore14AtomicPropertyC12wrappedValueACyxGx_tcfc_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C5018((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v8 = sub_2489BD278((uint64_t)v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v2[2] = v8;
  return v2;
}

void AtomicProperty.updateWithLock(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v2[2];
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = a1;
  v7 = a2;
  sub_2489D47D4((void (*)(uint64_t))sub_2489D2E40, (uint64_t)&v4, v3, v5, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t sub_2489D2E40()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

void AtomicProperty.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2489C6BA0();
  v4 = *(_QWORD *)(v0 + 16);
  v5 = v1;
  sub_2489C38F4((void (*)(uint64_t))sub_2489D2F8C, (uint64_t)&v3, v2, v0, v4);
  sub_2489C5930();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];
  __int128 v5;
  uint64_t v6;

  sub_2489BBC68();
  v4[2] = *(_QWORD *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 24);
  v6 = v2;
  v3 = sub_2489BF9F0();
  sub_2489C38F4((void (*)(uint64_t))sub_2489D4610, (uint64_t)v4, v0, v1, v3);
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[8];

  sub_2489BEC64();
  v1 = v0[3];
  v11[2] = v0[2];
  v2 = v0[4];
  v11[3] = *(_QWORD *)(v1 + 16);
  v11[4] = v2;
  v11[5] = v3;
  v11[6] = v4;
  AtomicProperty.getOrCreate<A, B>(key:default:)(v5, (uint64_t)sub_2489D46E4, (uint64_t)v11, v6, v7, v8, v9, v10);
}

void sub_2489D2E94()
{
  AtomicProperty.subscript.getter();
}

void sub_2489D2EB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x24BDAC7A8](a1, a1);
  (*(void (**)(char *))(v1 + 16))((char *)&v3 - v2);
  AtomicProperty.subscript.setter();
}

void AtomicProperty.subscript.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_2489BD868();
  v6 = v0;
  v7 = v1;
  v8 = v2;
  sub_2489C38F4((void (*)(uint64_t))sub_2489D3074, (uint64_t)&v5, v3, v4, MEMORY[0x24BEE4AE0] + 8);
  sub_2489C1464();
  sub_2489BFF78();
}

void sub_2489D2F8C()
{
  sub_248A45720();
  sub_2489C50E8();
}

uint64_t sub_2489D2FB8(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char isClassOrObjCExistentialType;
  uint64_t v11;

  v8 = sub_248A45708();
  sub_248A456CC();
  v9 = *a1;
  sub_2489D48BC(a2, *a1);
  isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
  v11 = v9 & 0xFFFFFFFFFFFFFF8;
  if ((isClassOrObjCExistentialType & 1) == 0)
    v11 = v9;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 24))(v11+ ((*(unsigned __int8 *)(*(_QWORD *)(a4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(a4 - 8) + 72) * a2, a3, a4);
  return nullsub_1(v8);
}

uint64_t sub_2489D3074(uint64_t *a1)
{
  uint64_t v1;

  return sub_2489D2FB8(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

void AtomicProperty.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_2489BF59C();
  *v2 = v3;
  *v3 = v0;
  v3[1] = v1;
  sub_2489BEC64();
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(v5 - 8);
  v3[4] = sub_2489BA7D8();
  v3[5] = sub_2489BA7D8();
  AtomicProperty.subscript.getter();
  sub_2489B6AF4();
}

void sub_2489D30FC(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[3];
    sub_2489C0988(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    AtomicProperty.subscript.setter();
    sub_2489BEE5C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  else
  {
    AtomicProperty.subscript.setter();
  }
  sub_2489C0B00();
  sub_2489BF76C();
  free(v2);
}

uint64_t AtomicProperty.compactMap<A, B, C>(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v1 = *v0;
  AtomicProperty.wrappedValue.getter();
  v2 = *(_QWORD **)(v1 + 80);
  v3 = MEMORY[0x2495A1B94](v7[3], v2[2], v2[3], v2[4]);
  if ((v3 & 1) != 0)
  {
    sub_2489B71DC();
    return sub_248A456D8();
  }
  else
  {
    v7[1] = v7;
    MEMORY[0x24BDAC7A8](v3, v4);
    MEMORY[0x2495A2D34](MEMORY[0x24BEE04D8], v2);
    v5 = sub_248A45600();
    sub_2489B71DC();
  }
  return v5;
}

uint64_t sub_2489D329C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_2489D3310(uint64_t a1)
{
  uint64_t v1;

  return sub_2489D329C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48));
}

void AtomicProperty.getOrCreate<A, B>(key:default:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  sub_2489C4F10((void (*)(uint64_t))sub_2489D4590, a2, a3, *(_QWORD *)(*(_QWORD *)v8 + 80), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v8 + 80) + 24), a6, a7, a8, v9);
}

{
  uint64_t v8;
  uint64_t v9;

  sub_2489C4F10((void (*)(uint64_t))sub_2489D469C, a2, a3, *(_QWORD *)(*(_QWORD *)v8 + 80), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v8 + 80) + 24) + 16), a6, a7, a8, v9);
}

void sub_2489D337C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  _QWORD v10[8];

  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a6;
  v10[5] = a2;
  v10[6] = a3;
  v9 = sub_248A45450();
  Dictionary.getOrCreate(key:default:)(a1, (uint64_t)sub_2489D4FC8, (uint64_t)v10, v9, a7);
}

uint64_t sub_2489D33F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = sub_248A08A44();
  if (!*(_QWORD *)(v5 + 16))
    return sub_2489B71DC();
  v6 = sub_2489D490C(v5, a2);
  result = sub_2489B71DC();
  if (!v2)
  {
    if (*(_QWORD *)(v6 + 16))
    {
      swift_retain();
      sub_2489D3768(v6, a1);
    }
    return swift_release();
  }
  return result;
}

uint64_t AtomicProperty.remove<A, B>(where:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  AtomicProperty.wrappedValue.getter();
  sub_2489C2630();
  if ((MEMORY[0x2495A1B94]() & 1) == 0)
  {
    result = sub_248A45408();
    if (v0)
      return result;
    sub_2489C2630();
    sub_248A453F0();
    swift_bridgeObjectRelease();
    sub_2489C2630();
    if ((MEMORY[0x2495A1B4C]() & 1) == 0)
    {
      sub_2489C2630();
      v2 = sub_248A453E4();
      MEMORY[0x2495A2D34](MEMORY[0x24BEE0310], v2);
      sub_248A45624();
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_2489D35C4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD v4[2];
  uint64_t v5;
  uint64_t v6;

  v2 = a2[2];
  v3 = *(_QWORD *)(*a2 + 80);
  v4[1] = *(_OWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 32);
  v6 = a1;
  sub_2489D47D4((void (*)(uint64_t))sub_2489D4FAC, (uint64_t)v4, v2, v3, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t sub_2489D3614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v6;

  sub_248A453F0();
  sub_248A35264(a2, a3, &v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489D3668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = sub_248A45924();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v16 - v10;
  MEMORY[0x24BDAC7A8](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  sub_2489BE7E0((uint64_t)v11, 1, 1, a4);
  sub_248A45450();
  return sub_248A45468();
}

void sub_2489D3768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20[2];
  _QWORD v21[5];
  int64_t v22;

  v4 = v2;
  sub_2489D13D0(a1, v21);
  v6 = v21[0];
  v19 = v21[1];
  v7 = v21[3];
  v8 = v21[4];
  v22 = (unint64_t)(v21[2] + 64) >> 6;
  sub_248A453F0();
  if (!v8)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v10 = v9 | (v7 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v10);
    v15 = v14[1];
    v20[0] = *v14;
    v20[1] = v15;
    v16 = *(os_unfair_lock_s **)(a2 + 16);
    v17 = (uint64_t)&v16[4];
    v3 = v16 + 6;
    sub_248A453F0();
    os_unfair_lock_lock(v3);
    sub_2489D4F70(v17, v20);
    if (v4)
      break;
    v4 = 0;
    os_unfair_lock_unlock(v3);
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_2;
LABEL_3:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      break;
    }
    if (v11 >= v22)
      goto LABEL_23;
    v12 = *(_QWORD *)(v19 + 8 * v11);
    if (!v12)
    {
      v13 = v7 + 2;
      if (v7 + 2 >= v22)
        goto LABEL_23;
      v12 = *(_QWORD *)(v19 + 8 * v13);
      if (v12)
        goto LABEL_12;
      v13 = v7 + 3;
      if (v7 + 3 >= v22)
        goto LABEL_23;
      v12 = *(_QWORD *)(v19 + 8 * v13);
      if (v12)
        goto LABEL_12;
      v13 = v7 + 4;
      if (v7 + 4 >= v22)
        goto LABEL_23;
      v12 = *(_QWORD *)(v19 + 8 * v13);
      if (v12)
      {
LABEL_12:
        v11 = v13;
      }
      else
      {
        v11 = v7 + 5;
        if (v7 + 5 >= v22)
          goto LABEL_23;
        v12 = *(_QWORD *)(v19 + 8 * v11);
        if (!v12)
        {
          v18 = v7 + 6;
          while (v18 < v22)
          {
            v12 = *(_QWORD *)(v19 + 8 * v18++);
            if (v12)
            {
              v11 = v18 - 1;
              goto LABEL_13;
            }
          }
LABEL_23:
          swift_release();
          swift_release();
          return;
        }
      }
    }
LABEL_13:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v11 << 6);
    v7 = v11;
  }
  os_unfair_lock_unlock(v3);
  __break(1u);
}

void AtomicProperty.removeAll<A, B>(keepingCapacity:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[5];
  char v5;

  sub_2489C17FC();
  v4[4] = v0;
  v5 = v1;
  sub_2489C38F4((void (*)(uint64_t))sub_2489D45C0, (uint64_t)v4, v2, v3, MEMORY[0x24BEE4AE0] + 8);
  sub_2489C22B8();
}

uint64_t sub_2489D3998()
{
  sub_248A45450();
  return sub_248A45444();
}

void AtomicProperty.set<A, B>(key:value:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[8];

  sub_2489C17FC();
  v5[4] = v1;
  v5[5] = v0;
  v5[6] = v2;
  sub_2489C38F4((void (*)(uint64_t))sub_2489BC02C, (uint64_t)v5, v3, v4, MEMORY[0x24BEE4AE0] + 8);
  sub_2489C22B8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[8];

  sub_2489C07AC();
  v1 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 32);
  v7[3] = v1;
  v7[4] = v3;
  v7[5] = v4;
  v7[6] = v5;
  sub_2489C38F4((void (*)(uint64_t))sub_2489D46B4, (uint64_t)v7, v6, v2, MEMORY[0x24BEE4AE0] + 8);
  sub_2489C22B8();
}

void AtomicProperty.set<A, B>(key:returning:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  sub_2489C6BA0();
  v4[2] = *(_QWORD *)(v0 + 16);
  v5 = *(_OWORD *)(v0 + 24);
  v6 = v1;
  v7 = v2;
  sub_2489C38F4((void (*)(uint64_t))sub_2489D45E0, (uint64_t)v4, v3, v0, v5);
  sub_2489C22B8();
}

void sub_2489D3A70(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_248A45450();
  Dictionary.set(key:returning:)(a1, v4, a2);
}

void AtomicProperty.setInitialValue<A, B>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3[2];
  v5 = *(_QWORD *)(*v3 + 80);
  v6[1] = *(_OWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 32);
  v8 = a1;
  v9 = a2;
  v10 = a3;
  sub_2489D47D4((void (*)(uint64_t))sub_2489D45F8, (uint64_t)v6, v4, v5, MEMORY[0x24BEE4AE0] + 8);
}

void sub_2489D3B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  _QWORD v9[8];

  v9[2] = a5;
  v9[3] = a6;
  v9[4] = a7;
  v9[5] = a3;
  v9[6] = a4;
  v8 = sub_248A45450();
  Dictionary.setInitialValue(key:value:)(a2, (uint64_t)sub_2489D4FEC, (uint64_t)v9, v8);
}

uint64_t sub_2489D3C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = *(_QWORD *)(a4 + a3 - 24);
  v7 = sub_248A45924();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v17 - v11;
  MEMORY[0x24BDAC7A8](v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v17 - v15, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, a1, v7);
  return AtomicProperty.subscript.setter((uint64_t)v12);
}

uint64_t sub_2489D3CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = a1;
  v7 = sub_248A45924();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)v17 - v11;
  MEMORY[0x24BDAC7A8](v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, a3, v7);
  sub_248A45450();
  return sub_248A45468();
}

void (*AtomicProperty.subscript.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = sub_2489BF9F0();
  v3[1] = v5;
  v3[2] = *(_QWORD *)(v5 - 8);
  v3[3] = sub_2489BA7D8();
  v3[4] = sub_2489BA7D8();
  v6 = *(_QWORD *)(v4 + 16);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[6] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[7] = malloc(v8);
  v3[8] = malloc(v8);
  (*(void (**)(void))(v7 + 16))();
  AtomicProperty.subscript.getter();
  return sub_2489D3ED4;
}

void sub_2489D3ED4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = v2[6];
    v8 = (void *)v2[3];
    v7 = (void *)v2[4];
    v9 = v2[1];
    v10 = v2[2];
    (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v4, v5);
    AtomicProperty.subscript.setter((uint64_t)v8);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    v8 = (void *)v2[3];
    v7 = (void *)v2[4];
    AtomicProperty.subscript.setter((uint64_t)v7);
  }
  sub_2489C0B00();
  sub_2489BF76C();
  free(v7);
  free(v8);
  free(v2);
}

void AtomicProperty.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = *(_QWORD *)(*(_QWORD *)v8 + 80);
  v10[1] = *(_OWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  v12 = a2;
  v13 = a3;
  AtomicProperty.getOrCreate<A, B>(key:default:)(a1, (uint64_t)sub_2489D4658, (uint64_t)v10, a4, a5, a6, a7, a8);
  sub_2489C22B8();
}

uint64_t AtomicProperty.get<A, B>(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[8];

  v2 = v1[2];
  v3 = *(_QWORD **)(*v1 + 80);
  v4 = v3[3];
  v8[2] = v3[2];
  v5 = v3[4];
  v8[3] = *(_QWORD *)(v4 + 16);
  v8[4] = v5;
  v8[5] = a1;
  v6 = sub_2489BF9F0();
  sub_2489C38F4((void (*)(uint64_t))sub_2489D4680, (uint64_t)v8, v2, (uint64_t)v3, v6);
  return v8[7];
}

void sub_2489D405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for WeakReference(255, a4, a3, a4);
  sub_248A45450();
  Dictionary.get<A>(_:)();
}

uint64_t sub_2489D4130@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[8];

  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a2;
  v12[6] = a3;
  type metadata accessor for WeakReference(255, a5, a2, a3);
  v10 = sub_248A45450();
  result = Dictionary.getOrCreate<A>(key:default:)(a1, (uint64_t)sub_2489D4F8C, (uint64_t)v12, v10);
  if (!v7)
    *a7 = result;
  return result;
}

uint64_t sub_2489D4214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for WeakReference(255, a5, a3, a4);
  sub_248A45450();
  return Dictionary.set<A>(key:value:)();
}

uint64_t AtomicProperty.set<A, B>(key:returning:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2489C07AC();
  v2 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = v2;
  v10 = v3;
  v11 = v4;
  sub_2489C38F4((void (*)(uint64_t))sub_2489D46CC, (uint64_t)&v7, v5, v1, v8);
  return v12;
}

uint64_t sub_2489D42D8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t result;

  type metadata accessor for WeakReference(255, a3, a1, a2);
  sub_248A45450();
  result = Dictionary.set<A>(key:returning:)();
  *a4 = result;
  return result;
}

uint64_t sub_2489D4364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1, a2);
  v3 = (char *)&v8 - v2;
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v8 - v2, v5);
  v6 = swift_unknownObjectRetain();
  return AtomicProperty.subscript.setter(v6, (uint64_t)v3);
}

uint64_t AtomicProperty.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  AtomicProperty.set<A, B>(key:value:)();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 80) + 16) - 8) + 8))(a2);
}

void (*AtomicProperty.subscript.modify())(uint64_t **a1, char a2)
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v3 = sub_2489BF59C();
  *v2 = v3;
  v3[1] = v1;
  sub_2489BEC64();
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v6 + 16) = v5;
  v7 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v6 + 24) = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  sub_2489C5018((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  *v3 = AtomicProperty.get<A, B>(_:)(v0);
  return sub_2489D44C4;
}

void sub_2489D44C4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (*a1)[4];
  v4 = (*a1)[5];
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2[3] + 32))((*a1)[4], v4, v2[2]);
    v5 = swift_unknownObjectRetain();
    AtomicProperty.subscript.setter(v5, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    AtomicProperty.subscript.setter(**a1, v4);
  }
  sub_2489C0B00();
  sub_2489BF76C();
  sub_2489BFC48(v2);
}

void sub_2489D4590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2489C6C74();
  sub_2489D337C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_2489D45A8(uint64_t a1)
{
  _QWORD *v1;

  sub_2489D35C4(a1, v1);
}

uint64_t sub_2489D45C0()
{
  return sub_2489D3998();
}

void sub_2489D45E0()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489C1A50();
  sub_2489D3A70(v0, v1);
}

void sub_2489D45F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2489C6C74();
  sub_2489D3B34(v0, v1, v2, v3, v4, v5, v6);
}

void sub_2489D4610(_QWORD *a1)
{
  _QWORD *v1;

  MEMORY[0x2495A1BD0](v1[5], *a1, v1[2], v1[3], v1[4]);
  sub_2489C50E8();
}

uint64_t sub_2489D4640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2489C1A50();
  return sub_2489D3CEC(v0, v1, v2, v3);
}

uint64_t sub_2489D4658()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

void sub_2489D4680(uint64_t a1)
{
  uint64_t *v1;

  sub_2489D405C(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_2489D469C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  sub_2489C6C74();
  return sub_2489D4130(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_2489D46B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2489C1A50();
  return sub_2489D4214(v0, v1, v2, v3, v4);
}

uint64_t sub_2489D46CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_2489C1A50();
  return sub_2489D42D8(v0, v1, v2, v3);
}

uint64_t sub_2489D46E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

void sub_2489D470C()
{
  AtomicProperty.wrappedValue.getter();
  sub_2489BA7D0();
}

void sub_2489D472C()
{
  sub_2489C5E80();
}

_QWORD *sub_2489D4734(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_2489D4748()
{
  sub_2489C5E80();
}

void sub_2489D4750()
{
  AtomicProperty.subscript.getter();
  sub_2489BA7D0();
}

void sub_2489D4774()
{
  sub_2489C5E80();
}

void sub_2489D4780(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  *a2 = AtomicProperty.subscript.getter(a1);
  sub_2489BA7D0();
}

void sub_2489D47AC()
{
  sub_2489C5E80();
}

uint64_t method lookup function for AtomicProperty()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AtomicProperty.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AtomicProperty.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_2489D47D4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_2489D483C(a3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_2489D483C(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t sub_2489D48BC(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_2489D490C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[2];

  v3 = a2;
  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    v7 = (_QWORD *)((char *)v11 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_2489D00AC(0, v6, v7);
    v8 = sub_2489D4A74((uint64_t)v7, v6, v4);
    if (v2)
      swift_willThrow();
    else
      return v8;
  }
  else
  {
    v9 = (_QWORD *)swift_slowAlloc();
    sub_2489D00AC(0, v6, v9);
    v3 = sub_2489D4A74((uint64_t)v9, v6, v4);
    MEMORY[0x2495A2E00](v9, -1, -1);
  }
  return v3;
}

uint64_t sub_2489D4A74(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v21;
  uint64_t v22;
  int64_t v23;

  v21 = (unint64_t *)result;
  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v23 = (unint64_t)(v7 + 63) >> 6;
  while (2)
  {
    v22 = v4;
    if (v9)
    {
LABEL_5:
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v5 << 6);
      goto LABEL_20;
    }
    while (1)
    {
      v12 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_30:
        __break(1u);
        return result;
      }
      if (v12 >= v23)
        return sub_2489D4CB0(v21, a2, v22, a3);
      v13 = *(_QWORD *)(v6 + 8 * v12);
      ++v5;
      if (!v13)
      {
        v5 = v12 + 1;
        if (v12 + 1 >= v23)
          return sub_2489D4CB0(v21, a2, v22, a3);
        v13 = *(_QWORD *)(v6 + 8 * v5);
        if (!v13)
        {
          v5 = v12 + 2;
          if (v12 + 2 >= v23)
            return sub_2489D4CB0(v21, a2, v22, a3);
          v13 = *(_QWORD *)(v6 + 8 * v5);
          if (!v13)
          {
            v14 = v12 + 3;
            if (v14 >= v23)
              return sub_2489D4CB0(v21, a2, v22, a3);
            v13 = *(_QWORD *)(v6 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                v5 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_30;
                if (v5 >= v23)
                  return sub_2489D4CB0(v21, a2, v22, a3);
                v13 = *(_QWORD *)(v6 + 8 * v5);
                ++v14;
                if (v13)
                  goto LABEL_19;
              }
            }
            v5 = v14;
          }
        }
      }
LABEL_19:
      v9 = (v13 - 1) & v13;
      v11 = __clz(__rbit64(v13)) + (v5 << 6);
LABEL_20:
      v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
      v16 = *v15;
      v17 = v15[1];
      v18 = qword_254464B18;
      sub_248A453F0();
      if (v18 != -1)
        swift_once();
      swift_beginAccess();
      sub_248A453F0();
      swift_retain();
      v19 = sub_248A390F8(v16, v17);
      swift_release();
      result = swift_bridgeObjectRelease_n();
      if (!v19)
        break;
      result = swift_release();
      if (v9)
        goto LABEL_5;
    }
    *(unint64_t *)((char *)v21 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v4 = v22 + 1;
    if (!__OFADD__(v22, 1))
      continue;
    break;
  }
  __break(1u);
  return sub_2489D4CB0(v21, a2, v22, a3);
}

uint64_t sub_2489D4CB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  _BYTE *v34;
  uint64_t v36;
  uint64_t v38;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_2489C330C(&qword_254463020);
  result = sub_248A45C3C();
  v8 = result;
  v36 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v38 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v36)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v36)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v36)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v36)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v36)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v38 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = v4;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v21 = *v19;
    v20 = v19[1];
    v22 = (char *)(*(_QWORD *)(v4 + 56) + 2 * v13);
    v23 = *v22;
    v24 = v22[1];
    sub_248A45F90();
    sub_248A453F0();
    sub_248A45540();
    result = sub_248A45FD8();
    v25 = -1 << *(_BYTE *)(v8 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) == 0)
      break;
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v28);
    *v33 = v21;
    v33[1] = v20;
    v34 = (_BYTE *)(*(_QWORD *)(v8 + 56) + 2 * v28);
    *v34 = v23;
    v34[1] = v24;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_39;
    v4 = v18;
    v10 = v38;
    if (!v5)
      return v8;
  }
  v29 = 0;
  v30 = (unint64_t)(63 - v25) >> 6;
  while (++v27 != v30 || (v29 & 1) == 0)
  {
    v31 = v27 == v30;
    if (v27 == v30)
      v27 = 0;
    v29 |= v31;
    v32 = *(_QWORD *)(v11 + 8 * v27);
    if (v32 != -1)
    {
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2489D4F70(uint64_t a1, uint64_t *a2)
{
  return sub_2489D3614(a1, *a2, a2[1]);
}

uint64_t sub_2489D4F8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_2489D4FAC(uint64_t a1)
{
  uint64_t *v1;

  return sub_2489D3668(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_2489D4FC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_2489D4FEC()
{
  return sub_2489D4FC8();
}

id sub_2489D5004()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)BiomeLibrary(), sel_Discoverability);
  swift_unknownObjectRelease();
  v1 = objc_msgSend(v0, sel_Signals);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_source);

  return v2;
}

id sub_2489D5094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25[7];

  v25[6] = *(id *)MEMORY[0x24BDAC8D0];
  if (qword_254464E68 != -1)
    swift_once();
  if (byte_254464E60 != 1)
    return 0;
  if (qword_2544649A0 != -1)
    swift_once();
  if ((byte_25446499C & 1) != 0)
    return 0;
  sub_2489B698C();
  if ((v4 & 1) == 0)
  {
    sub_248A2A5F8();
    if ((v5 & 1) == 0)
      return 0;
  }
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_254464F38)
  {
    v6 = qword_254464F30;
    v7 = qword_254464F38;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v6 = qword_25446C6D0;
      v7 = qword_25446C6D8;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v9 = sub_2489D7B5C();
      if (v10)
      {
        v6 = v9;
        v7 = v10;
      }
      else
      {
        v6 = 0;
        v7 = 0xE000000000000000;
      }
    }
    sub_248A453F0();
  }
  v11 = qword_2544637B0;
  sub_248A453F0();
  if (v11 != -1)
    swift_once();
  v12 = qword_25446C668;
  v13 = unk_25446C670;
  if (!a3)
  {
    sub_248A453F0();
LABEL_31:
    v18 = 0;
    v20 = 0xF000000000000000;
    goto LABEL_32;
  }
  v14 = (void *)objc_opt_self();
  sub_248A453F0();
  sub_2489C330C(&qword_2544643C0);
  v15 = (void *)sub_248A453B4();
  v25[0] = 0;
  v16 = objc_msgSend(v14, sel_dataWithJSONObject_options_error_, v15, 0, v25);

  v17 = v25[0];
  if (!v16)
  {
    v21 = v17;
    v22 = (void *)sub_248A44DCC();

    swift_willThrow();
    if (qword_254464240 != -1)
      swift_once();
    v23 = type metadata accessor for logger();
    sub_2489C401C(v23, (uint64_t)&unk_254464228);
    v25[0] = 0;
    v25[1] = (id)0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    swift_getErrorValue();
    sub_248A45D8C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();

    goto LABEL_31;
  }
  v18 = sub_248A44ED4();
  v20 = v19;

LABEL_32:
  v24 = objc_allocWithZone(MEMORY[0x24BE0C3A0]);
  return sub_2489D557C(v6, v7, 0, 0, v12, v13, v18, v20);
}

id sub_2489D5444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result;
  void *v4;
  id v5;
  uint64_t v6;

  result = sub_2489D5094(a1, a2, a3);
  if (result)
  {
    v4 = result;
    v5 = sub_2489D5004();
    objc_msgSend(v5, sel_sendEvent_, v4);

    if (qword_254464240 != -1)
      swift_once();
    v6 = type metadata accessor for logger();
    sub_2489C401C(v6, (uint64_t)&unk_254464228);
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_248A4557C();
    sub_2489BE9AC();

    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_2489D557C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  void *v8;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  if (a2)
  {
    v13 = (void *)sub_248A454BC();
    swift_bridgeObjectRelease();
    if (a4)
      goto LABEL_3;
LABEL_6:
    v14 = 0;
    if (a6)
      goto LABEL_4;
    goto LABEL_7;
  }
  v13 = 0;
  if (!a4)
    goto LABEL_6;
LABEL_3:
  v14 = (void *)sub_248A454BC();
  swift_bridgeObjectRelease();
  if (a6)
  {
LABEL_4:
    v15 = (void *)sub_248A454BC();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  v15 = 0;
LABEL_8:
  if (a8 >> 60 == 15)
  {
    v16 = 0;
  }
  else
  {
    v16 = (void *)sub_248A44EC8();
    sub_2489BDB94(a7, a8);
  }
  v17 = objc_msgSend(v8, sel_initWithContentIdentifier_context_osBuild_userInfo_, v13, v14, v15, v16);

  return v17;
}

id sub_2489D569C()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)BiomeLibrary(), sel_Discoverability);
  swift_unknownObjectRelease();
  v1 = objc_msgSend(v0, sel_Usage);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_source);

  return v2;
}

id sub_2489D572C()
{
  id result;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_254464E68 != -1)
    swift_once();
  if (byte_254464E60 != 1)
    return 0;
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  result = 0;
  if (byte_254464F40 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    if ((byte_25446499C & 1) == 0)
    {
      sub_2489B698C();
      if ((v1 & 1) != 0 || (sub_248A2A5F8(), (v2 & 1) != 0))
      {
        v3 = CoreTipRecord.id.getter();
        v5 = v4;
        v6 = sub_248A18BD0();
        v8 = v7;
        v9 = CoreTipRecord.id.getter();
        v11 = v10;
        if (qword_2544637B0 != -1)
          swift_once();
        v13 = qword_25446C668;
        v12 = unk_25446C670;
        objc_allocWithZone(MEMORY[0x24BE0C3A8]);
        sub_248A453F0();
        return sub_2489D5C98(v3, v5, v6, v8, 3, v9, v11, 0, 0xF000000000000000, 1u, v13, v12, 4, 0, 0xF000000000000000);
      }
    }
    return 0;
  }
  return result;
}

void sub_2489D5900()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = sub_2489D572C();
  if (v0)
  {
    v1 = v0;
    v2 = sub_2489D569C();
    objc_msgSend(v2, sel_sendEvent_, v1);

    if (qword_254464240 != -1)
      swift_once();
    v3 = type metadata accessor for logger();
    sub_2489C401C(v3, (uint64_t)&unk_254464228);
    sub_2489C2640();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_2489C38FC();
    sub_2489BFC58();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_2489C22C4();

    sub_2489C1478();
  }
  else
  {
    sub_2489BA428();
  }
}

id sub_2489D59DC(uint64_t a1, char a2)
{
  id result;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_254464E68 != -1)
    swift_once();
  if (byte_254464E60 != 1)
    return 0;
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  result = 0;
  if (byte_254464F40 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    if ((byte_25446499C & 1) == 0)
    {
      sub_2489B698C();
      if ((v4 & 1) != 0 || (sub_248A2A5F8(), (v5 & 1) != 0))
      {
        v6 = CoreTipRecord.id.getter();
        v8 = v7;
        v9 = sub_248A18BD0();
        v11 = v10;
        v12 = CoreTipRecord.id.getter();
        v14 = v13;
        v15 = sub_248A0F910(a2);
        if (qword_2544637B0 != -1)
          swift_once();
        v17 = qword_25446C668;
        v16 = unk_25446C670;
        objc_allocWithZone(MEMORY[0x24BE0C3A8]);
        sub_248A453F0();
        return sub_2489D5C98(v6, v8, v9, v11, 3, v12, v14, 0, 0xF000000000000000, v15, v17, v16, 7, 0, 0xF000000000000000);
      }
    }
    return 0;
  }
  return result;
}

void sub_2489D5BBC(uint64_t a1, char a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = sub_2489D59DC(a1, a2);
  if (v2)
  {
    v3 = v2;
    v4 = sub_2489D569C();
    objc_msgSend(v4, sel_sendEvent_, v3);

    if (qword_254464240 != -1)
      swift_once();
    v5 = type metadata accessor for logger();
    sub_2489C401C(v5, (uint64_t)&unk_254464228);
    sub_2489C2640();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_2489C38FC();
    sub_2489BFC58();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_2489C22C4();

    sub_2489C1478();
  }
  else
  {
    sub_2489BA428();
  }
}

id sub_2489D5C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, unint64_t a15)
{
  void *v15;
  void *v16;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v29;

  v16 = v15;
  if (a2)
  {
    v21 = (void *)sub_248A454BC();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      v22 = (void *)sub_248A454BC();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v21 = 0;
    if (a4)
      goto LABEL_3;
  }
  v22 = 0;
LABEL_6:
  if (a7)
  {
    v23 = (void *)sub_248A454BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  if (a9 >> 60 == 15)
  {
    v24 = 0;
  }
  else
  {
    v24 = (void *)sub_248A44EC8();
    sub_2489BDB94(a8, a9);
  }
  if (a12)
  {
    v25 = (void *)sub_248A454BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  if (a15 >> 60 == 15)
  {
    v26 = 0;
  }
  else
  {
    v26 = (void *)sub_248A44EC8();
    sub_2489BDB94(a14, a15);
  }
  LODWORD(v29) = a13;
  v27 = objc_msgSend(v16, sel_initWithContentIdentifier_bundleID_contentType_context_eligibleContext_ineligibleReason_osBuild_state_analyticsEvent_, v21, v22, a5, v23, v24, a10, v25, v29, v26);

  return v27;
}

void sub_2489D5E64(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _OWORD *, char *))
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  _OWORD v24[3];
  _OWORD v25[3];
  _QWORD v26[6];
  void (*v27)(uint64_t *__return_ptr, _OWORD *, char *);

  v27 = a2;
  sub_2489D13D0(a1, v26);
  v3 = v26[0];
  v4 = v26[3];
  v5 = v26[4];
  v19 = v26[1];
  v20 = (unint64_t)(v26[2] + 64) >> 6;
  sub_248A453F0();
  v6 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v8 = v7 | (v4 << 6);
      goto LABEL_15;
    }
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v9 >= v20)
      goto LABEL_29;
    v10 = *(_QWORD *)(v19 + 8 * v9);
    if (!v10)
    {
      v11 = v4 + 2;
      if (v4 + 2 >= v20)
        goto LABEL_29;
      v10 = *(_QWORD *)(v19 + 8 * v11);
      if (v10)
        goto LABEL_13;
      v11 = v4 + 3;
      if (v4 + 3 >= v20)
        goto LABEL_29;
      v10 = *(_QWORD *)(v19 + 8 * v11);
      if (v10)
        goto LABEL_13;
      v11 = v4 + 4;
      if (v4 + 4 >= v20)
        goto LABEL_29;
      v10 = *(_QWORD *)(v19 + 8 * v11);
      if (v10)
      {
LABEL_13:
        v9 = v11;
      }
      else
      {
        v9 = v4 + 5;
        if (v4 + 5 >= v20)
          goto LABEL_29;
        v10 = *(_QWORD *)(v19 + 8 * v9);
        if (!v10)
        {
          v16 = v4 + 6;
          while (v16 < v20)
          {
            v10 = *(_QWORD *)(v19 + 8 * v16++);
            if (v10)
            {
              v9 = v16 - 1;
              goto LABEL_14;
            }
          }
          goto LABEL_29;
        }
      }
    }
LABEL_14:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v4 = v9;
LABEL_15:
    v12 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v8);
    sub_2489C4880(*(_QWORD *)(v3 + 56) + 40 * v8, (uint64_t)v25 + 8);
    LOBYTE(v25[0]) = v12;
    v24[0] = v25[0];
    v24[1] = v25[1];
    v24[2] = v25[2];
    v27(&v22, v24, (char *)v24 + 8);
    if (v2)
    {
      sub_2489C32D0((uint64_t)v24, &qword_2544638B0);
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return;
    }
    v13 = v22;
    v21 = v23;
    sub_2489C32D0((uint64_t)v24, &qword_2544638B0);
    if ((_QWORD)v21)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489EC5C4();
        v6 = v17;
      }
      v14 = *(_QWORD *)(v6 + 16);
      if (v14 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_2489EC5C4();
        v6 = v18;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = v6 + 24 * v14;
      *(_QWORD *)(v15 + 32) = v13;
      *(_OWORD *)(v15 + 40) = v21;
    }
  }
  __break(1u);
}

void sub_2489D6100(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_254464F41 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    if ((byte_25446499C & 1) == 0)
    {
      sub_2489C7D1C();
      if ((v5 & 1) != 0)
      {
        sub_2489C330C(&qword_254463A68);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_248A47450;
        *(_BYTE *)(inited + 32) = 0;
        v7 = sub_248A18BD0();
        v8 = MEMORY[0x24BEE0D00];
        *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(inited + 72) = &off_254462CC8;
        *(_QWORD *)(inited + 40) = v7;
        *(_QWORD *)(inited + 48) = v9;
        *(_BYTE *)(inited + 80) = 3;
        v10 = CoreTipRecord.id.getter();
        *(_QWORD *)(inited + 112) = v8;
        *(_QWORD *)(inited + 120) = &off_254462CC8;
        *(_QWORD *)(inited + 88) = v10;
        *(_QWORD *)(inited + 96) = v11;
        *(_BYTE *)(inited + 128) = 4;
        v12 = CoreTipRecord.id.getter();
        *(_QWORD *)(inited + 160) = v8;
        *(_QWORD *)(inited + 168) = &off_254462CC8;
        *(_QWORD *)(inited + 136) = v12;
        *(_QWORD *)(inited + 144) = v13;
        *(_BYTE *)(inited + 176) = 11;
        if (qword_2544641F8 != -1)
          swift_once();
        v14 = sub_2489C330C(&qword_254464200);
        v15 = (char *)sub_2489C401C(v14, (uint64_t)qword_25446C698);
        swift_beginAccess();
        v16 = type metadata accessor for DeviceProfile();
        if (sub_2489BE834((uint64_t)v15, 1, v16))
        {
          *(_QWORD *)(inited + 208) = v8;
          *(_QWORD *)(inited + 216) = &off_254462CC8;
          *(_QWORD *)(inited + 184) = 0x6669636570736E75;
          v17 = 0xEB00000000646569;
        }
        else
        {
          v18 = v15[2];
          v19 = *(_QWORD *)&aUnspecifallcon[8 * v18];
          v17 = *(_QWORD *)&aIed[8 * v18];
          *(_QWORD *)(inited + 208) = v8;
          *(_QWORD *)(inited + 216) = &off_254462CC8;
          *(_QWORD *)(inited + 184) = v19;
        }
        *(_QWORD *)(inited + 192) = v17;
        *(_BYTE *)(inited + 224) = 23;
        v31 = sub_248A18BD0();
        v32 = v20;
        sub_248A4557C();
        CoreTipRecord.id.getter();
        sub_248A4557C();
        swift_bridgeObjectRelease();
        *(_QWORD *)(inited + 256) = v8;
        *(_QWORD *)(inited + 264) = &off_254462CC8;
        *(_QWORD *)(inited + 232) = v31;
        *(_QWORD *)(inited + 240) = v32;
        *(_BYTE *)(inited + 272) = 25;
        if (sub_2489BE834((uint64_t)v15, 1, v16))
          v21 = 0;
        else
          v21 = *v15;
        *(_QWORD *)(inited + 304) = MEMORY[0x24BEE1328];
        *(_QWORD *)(inited + 312) = &off_254462D08;
        *(_BYTE *)(inited + 280) = v21;
        *(_BYTE *)(inited + 320) = 27;
        *(_QWORD *)(inited + 352) = v8;
        *(_QWORD *)(inited + 360) = &off_254462CC8;
        *(_QWORD *)(inited + 328) = 12918;
        *(_QWORD *)(inited + 336) = 0xE200000000000000;
        sub_2489C330C(&qword_254463CB0);
        sub_2489D6818();
        v22 = sub_248A453C0();
        sub_248A453F0();
        v23 = sub_2489D6CB4(v22, a3);
        v25 = MEMORY[0x24BDAC7A8](v23, v24);
        sub_2489D5E64(v25, (void (*)(uint64_t *__return_ptr, _OWORD *, char *))sub_2489D7048);
        sub_2489CD604(v26);
        swift_bridgeObjectRelease();
        if (qword_254463818 != -1)
          swift_once();
        v27 = type metadata accessor for logger();
        sub_2489C401C(v27, (uint64_t)&unk_254463898);
        sub_248A45A74();
        sub_248A4557C();
        sub_2489D7828(a1);
        sub_248A4557C();
        swift_bridgeObjectRelease();
        sub_248A4557C();
        sub_2489C837C();
        v30 = (void *)sub_248A453B4();
        sub_248A45BAC();

        sub_2489BE9AC();
        swift_bridgeObjectRelease();
        sub_2489D7828(a1);
        sub_248A4557C();
        swift_bridgeObjectRelease();
        v28 = (void *)sub_248A454BC();
        swift_bridgeObjectRelease();
        v29 = (void *)sub_248A453B4();
        swift_bridgeObjectRelease();
        AnalyticsSendEvent();

      }
    }
  }
}

id sub_2489D6620(uint64_t *a1, _QWORD *a2, unsigned __int8 *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;

  *a1 = sub_2489D72C8(*a3);
  a1[1] = v7;
  v8 = a4[3];
  v9 = a4[4];
  sub_2489BE100(a4, v8);
  result = sub_2489D7968(v8, v9);
  *a2 = result;
  return result;
}

void sub_2489D668C(uint64_t a1)
{
  sub_2489D6760(a1, 6u);
}

void sub_2489D6694(uint64_t a1, unsigned __int8 a2)
{
  __n128 *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_2489C330C(&qword_254463A68);
  v3 = (__n128 *)sub_2489C22D4();
  sub_2489BFC64(v3, (__n128)xmmword_248A47460);
  sub_2489C2654(v4, MEMORY[0x24BEE1768]);
  v5 = MEMORY[0x24BEE0D00];
  v3[7].n128_u64[0] = MEMORY[0x24BEE0D00];
  v3[7].n128_u64[1] = (unint64_t)&off_254462CC8;
  sub_2489C3928();
  v3[8].n128_u8[0] = 18;
  v6 = sub_248A0F924(a2);
  v3[10].n128_u64[0] = v5;
  v3[10].n128_u64[1] = (unint64_t)&off_254462CC8;
  v3[8].n128_u64[1] = v6;
  v3[9].n128_u64[0] = v7;
  sub_2489C330C(&qword_254463CB0);
  sub_2489D6818();
  sub_2489C033C();
  sub_2489C1A60(0);
  swift_bridgeObjectRelease();
  sub_2489C1488();
}

void sub_2489D6758(uint64_t a1)
{
  sub_2489D6760(a1, 1u);
}

void sub_2489D6760(uint64_t a1, unsigned __int8 a2)
{
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;

  sub_2489C330C(&qword_254463A68);
  v4 = (__n128 *)sub_2489C22D4();
  sub_2489BFC64(v4, (__n128)xmmword_248A47470);
  sub_2489C2654(v5, MEMORY[0x24BEE1768]);
  v4[7].n128_u64[0] = MEMORY[0x24BEE0D00];
  v4[7].n128_u64[1] = (unint64_t)&off_254462CC8;
  sub_2489C3928();
  sub_2489C330C(&qword_254463CB0);
  sub_2489D6818();
  v6 = sub_248A453C0();
  sub_2489D6100(a2, a1, v6);
  swift_bridgeObjectRelease();
  sub_2489BFF80();
}

unint64_t sub_2489D6818()
{
  unint64_t result;

  result = qword_254463CB8;
  if (!qword_254463CB8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4755C, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_254463CB8);
  }
  return result;
}

void sub_2489D6854(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2489C330C(&qword_254463A68);
  v3 = sub_2489C22D4();
  *(_OWORD *)(v3 + 16) = xmmword_248A47470;
  *(_BYTE *)(v3 + 32) = 6;
  v4 = sub_248A132FC(a2);
  *(_QWORD *)(v3 + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 72) = &off_254462CC8;
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_BYTE *)(v3 + 80) = 7;
  sub_2489C47EC();
  *(_QWORD *)(v3 + 112) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v3 + 120) = &off_254462D68;
  *(_QWORD *)(v3 + 88) = v6;
  sub_2489C330C(&qword_254463CB0);
  sub_2489D6818();
  sub_2489C033C();
  sub_2489C1A60(7u);
  swift_bridgeObjectRelease();
  sub_2489BFF80();
}

uint64_t sub_2489D691C(uint64_t a1)
{
  return sub_2489D6BF8(a1, 27, 12918, 0xE200000000000000, 2u);
}

uint64_t sub_2489D6930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[128];

  v7 = sub_2489C330C(&qword_254464D40);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2489C330C(&qword_254463A68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_248A47470;
  *(_BYTE *)(inited + 32) = 8;
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = &off_254462CC8;
  *(_QWORD *)(inited + 40) = 0x6E69487070416E69;
  *(_QWORD *)(inited + 48) = 0xE900000000000074;
  *(_BYTE *)(inited + 80) = 15;
  sub_2489BE840(a4, (uint64_t)v10);
  v13 = sub_248A44EB0();
  if (sub_2489BE834((uint64_t)v10, 1, v13) == 1)
  {
    sub_2489C32D0((uint64_t)v10, &qword_254464D40);
    *(_QWORD *)(inited + 112) = v12;
    *(_QWORD *)(inited + 120) = &off_254462CC8;
LABEL_5:
    *(_QWORD *)(inited + 88) = a2;
    *(_QWORD *)(inited + 96) = a3;
    sub_248A453F0();
    goto LABEL_6;
  }
  v14 = sub_248A44E14();
  v16 = v15;
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 120) = &off_254462CC8;
  if (!v16)
    goto LABEL_5;
  *(_QWORD *)(inited + 88) = v14;
  *(_QWORD *)(inited + 96) = v16;
LABEL_6:
  sub_2489C330C(&qword_254463CB0);
  sub_2489BF774();
  sub_2489C1818();
  sub_2489BF9F8(3u);
  return sub_2489BBC58();
}

uint64_t sub_2489D6AD4(uint64_t a1)
{
  return sub_2489D6BF8(a1, 8, 0x6E69487070416E69, 0xE900000000000074, 0xAu);
}

void sub_2489D6AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2489C330C(&qword_254463A68);
  v4 = sub_2489C22D4();
  *(_OWORD *)(v4 + 16) = xmmword_248A47460;
  v5 = MEMORY[0x24BEE1768];
  *(_BYTE *)(v4 + 32) = 5;
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 72) = &off_254462D68;
  *(_QWORD *)(v4 + 40) = a3;
  *(_BYTE *)(v4 + 80) = 13;
  sub_248A44F28();
  *(_QWORD *)(v4 + 112) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v4 + 120) = &off_254462D28;
  *(_QWORD *)(v4 + 88) = v6;
  *(_BYTE *)(v4 + 128) = 17;
  *(_QWORD *)(v4 + 160) = v5;
  *(_QWORD *)(v4 + 168) = &off_254462D68;
  *(_QWORD *)(v4 + 136) = a3 != 0;
  sub_2489C330C(&qword_254463CB0);
  sub_2489BF774();
  sub_2489C1818();
  sub_2489BF9F8(4u);
  sub_2489BBC58();
  sub_2489C1488();
}

uint64_t sub_2489D6BD4(uint64_t a1)
{
  return sub_2489D6BF8(a1, 8, 0x6E69487070416E69, 0xE900000000000074, 9u);
}

uint64_t sub_2489D6BF8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v10;
  uint64_t v11;

  sub_2489C330C(&qword_254463A68);
  v10 = sub_2489C22D4();
  *(_OWORD *)(v10 + 16) = xmmword_248A47480;
  *(_BYTE *)(v10 + 32) = a2;
  *(_QWORD *)(v10 + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 72) = &off_254462CC8;
  *(_QWORD *)(v10 + 40) = a3;
  *(_QWORD *)(v10 + 48) = a4;
  sub_2489C330C(&qword_254463CB0);
  sub_2489BF774();
  v11 = sub_2489C1818();
  sub_2489D6100(a5, a1, v11);
  return sub_2489BBC58();
}

uint64_t sub_2489D6CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_2489D6DB4(a1, (uint64_t)sub_2489D6FE8, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2489D6D30(char a1, uint64_t a2, uint64_t (*a3)(_QWORD *, uint64_t *, char *, uint64_t))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];
  char v7;

  v7 = a1;
  result = a3(v6, &v5, &v7, a2);
  if (!v3)
  {
    if (v6[1])
    {
      if (v5)
      {
        return v6[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2489D6DB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23[2];
  __int128 v24[2];
  __int128 v25[2];
  uint64_t v26;
  uint64_t v27;

  sub_2489D7060(a1, a2, a3, &v27);
  sub_248A453F0();
  swift_retain();
  sub_2489D709C(v25);
  if (!v26)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2489D7268();
    return swift_release();
  }
  while (1)
  {
    v7 = LOBYTE(v25[0]);
    sub_2489B8F74((__int128 *)((char *)v25 + 8), (uint64_t)v24);
    v8 = *a5;
    v10 = sub_2489CE050(v7);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = (v9 & 1) == 0;
    v13 = v11 + v12;
    if (__OFADD__(v11, v12))
      break;
    v14 = v9;
    if (*(_QWORD *)(v8 + 24) >= v13)
    {
      if ((a4 & 1) != 0)
      {
        if ((v9 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        sub_2489C330C(&qword_2544638C8);
        sub_248A45BDC();
        if ((v14 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_2489CFACC(v13, a4 & 1);
      v15 = sub_2489CE050(v7);
      if ((v14 & 1) != (v16 & 1))
        goto LABEL_17;
      v10 = v15;
      if ((v14 & 1) != 0)
      {
LABEL_9:
        sub_2489C4880((uint64_t)v24, (uint64_t)v23);
        sub_2489BCE44((uint64_t)v24);
        v17 = *(_QWORD *)(*a5 + 56) + 40 * v10;
        sub_2489BCE44(v17);
        sub_2489B8F74(v23, v17);
        goto LABEL_13;
      }
    }
    v18 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    *(_BYTE *)(v18[6] + v10) = v7;
    sub_2489B8F74(v24, v18[7] + 40 * v10);
    v19 = v18[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_16;
    v18[2] = v21;
LABEL_13:
    sub_2489D709C(v25);
    a4 = 1;
    if (!v26)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_248A45F30();
  __break(1u);
  return result;
}

uint64_t sub_2489D6FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2489C4880(a3, a1);
  return a2;
}

uint64_t sub_2489D6FE8@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2489D6FBC((uint64_t)(a2 + 8), *a1, (uint64_t)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_2489D7018@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD *, uint64_t *, char *, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_2489D6D30(*a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_2489D7048@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_2489D7018(a1, a2, *(uint64_t (**)(_QWORD *, uint64_t *, char *, uint64_t))(v3 + 16), a3);
}

uint64_t sub_2489D7060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64)
    v8 = ~(-1 << -(char)v4);
  else
    v8 = -1;
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_2489D709C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void (*v17)(_OWORD *);
  uint64_t result;
  _OWORD v19[3];
  _OWORD v20[2];
  __int128 v21;
  _OWORD v22[3];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10);
    sub_2489C4880(*(_QWORD *)(v3 + 56) + 40 * v10, (uint64_t)v22 + 8);
    LOBYTE(v22[0]) = v11;
    goto LABEL_23;
  }
  v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    v14 = *(_QWORD *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v12 << 6);
      v7 = v12;
      goto LABEL_3;
    }
    v15 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        v12 = v15;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        v14 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          v12 = v5 + 3;
          goto LABEL_7;
        }
        v15 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          v14 = *(_QWORD *)(v4 + 8 * v15);
          if (v14)
            goto LABEL_10;
          v12 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            v14 = *(_QWORD *)(v4 + 8 * v12);
            if (v14)
              goto LABEL_7;
            v7 = v13 - 1;
            v16 = v5 + 6;
            while (v16 < v13)
            {
              v14 = *(_QWORD *)(v4 + 8 * v16++);
              if (v14)
              {
                v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v22, 0, sizeof(v22));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v17 = (void (*)(_OWORD *))v1[5];
  result = sub_2489D7270((uint64_t)v22, (uint64_t)v20);
  if ((_QWORD)v21)
  {
    v19[0] = v20[0];
    v19[1] = v20[1];
    v19[2] = v21;
    v17(v19);
    return sub_2489C32D0((uint64_t)v19, &qword_2544638B0);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_2489D7268()
{
  return swift_release();
}

uint64_t sub_2489D7270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_2544638B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CAEvent()
{
  return &type metadata for CAEvent;
}

uint64_t sub_2489D72C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489D7300 + 4 * byte_248A474D0[a1]))(0x495F656C646E7562, 0xE900000000000044);
}

uint64_t sub_2489D7300()
{
  return 0x697463656C6C6F63;
}

unint64_t sub_2489D7324()
{
  return 0xD000000000000012;
}

uint64_t sub_2489D7410()
{
  return 0x656D697265707865;
}

unint64_t sub_2489D7438()
{
  return 0xD000000000000010;
}

unint64_t sub_2489D7450()
{
  return 0xD000000000000015;
}

uint64_t sub_2489D7468()
{
  return 0x6C72755F6B6E696CLL;
}

unint64_t sub_2489D7480()
{
  return 0xD000000000000010;
}

unint64_t sub_2489D7498()
{
  return 0xD000000000000019;
}

uint64_t sub_2489D74B0()
{
  return 0x6E6F73616572;
}

uint64_t sub_2489D74C4()
{
  return 0x44495F656C7572;
}

uint64_t sub_2489D74DC()
{
  return 0x5F65636976726573;
}

unint64_t sub_2489D7500()
{
  return 0xD000000000000017;
}

void sub_2489D751C()
{
  JUMPOUT(0x2489D7530);
}

uint64_t sub_2489D753C()
{
  return 0x44495F706974;
}

uint64_t sub_2489D7550()
{
  return 0x6569765F73706974;
}

uint64_t sub_2489D7570()
{
  return 0x67616C665F353675;
}

uint64_t sub_2489D7588()
{
  return 0x6C665F6567617375;
}

uint64_t sub_2489D75A8()
{
  return 0x65765F73656C7572;
}

uint64_t sub_2489D75CC()
{
  unint64_t v0;

  v0 = sub_248A45EF4();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1C)
    return 28;
  else
    return v0;
}

void sub_2489D761C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_2489FDB44(*a1, *a2);
}

void sub_2489D7628()
{
  unsigned __int8 *v0;

  sub_248A0FBB8(*v0);
}

uint64_t sub_2489D7630(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_248A0FCF4(a1, *v1);
}

void sub_2489D7638()
{
  sub_248A102EC();
}

uint64_t sub_2489D7640@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489D75CC();
  *a1 = result;
  return result;
}

uint64_t sub_2489D766C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2489D72C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s3KeyOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE5)
  {
    if (a2 + 27 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 27) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 28;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1C;
  v5 = v6 - 28;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s3KeyOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 27 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 27) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE4)
    return ((uint64_t (*)(void))((char *)&loc_2489D7768 + 4 * byte_248A474F1[v4]))();
  *a1 = a2 + 27;
  return ((uint64_t (*)(void))((char *)sub_2489D779C + 4 * byte_248A474EC[v4]))();
}

uint64_t sub_2489D779C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489D77A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489D77ACLL);
  return result;
}

uint64_t sub_2489D77B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489D77C0);
  *(_BYTE *)result = a2 + 27;
  return result;
}

uint64_t sub_2489D77C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489D77CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_2489D77EC()
{
  unint64_t result;

  result = qword_254463A70;
  if (!qword_254463A70)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47534, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_254463A70);
  }
  return result;
}

uint64_t sub_2489D7828(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2489D7864 + 4 * byte_248A4759C[a1]))(0xD000000000000012, 0x8000000248A4F430);
}

unint64_t sub_2489D7864()
{
  return 0xD000000000000019;
}

uint64_t sub_2489D7934()
{
  return 0x707061745F706974;
}

void sub_2489D7950()
{
  JUMPOUT(0x2489D795CLL);
}

id sub_2489D7968(uint64_t a1, uint64_t a2)
{
  id result;

  (*(void (**)(void))(a2 + 24))();
  objc_opt_self();
  result = (id)swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  }
  return result;
}

id sub_2489D79D0()
{
  void *v0;

  return v0;
}

uint64_t sub_2489D79D8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2489D79D0();
  return v1;
}

uint64_t sub_2489D79FC(uint64_t a1)
{
  uint64_t result;

  result = sub_2489C962C(&qword_254464320, (uint64_t (*)(uint64_t))sub_2489C837C, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2489D7A40(uint64_t a1)
{
  uint64_t result;

  result = sub_2489C962C(&qword_254462598, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2489D7A80()
{
  double *v0;

  return sub_2489D7A7C(*v0);
}

uint64_t sub_2489D7A8C()
{
  float *v0;

  return sub_2489D7A88(*v0);
}

uint64_t sub_2489D7A94()
{
  _QWORD *v0;

  return sub_2489C9720(*v0);
}

uint64_t sub_2489D7A9C()
{
  unsigned __int8 *v0;

  return sub_2489C83B8(*v0);
}

uint64_t sub_2489D7AA8()
{
  _QWORD *v0;

  return sub_2489D7AA4(*v0, v0[1]);
}

uint64_t sub_2489D7AB4(uint64_t a1)
{
  _QWORD *v1;

  return sub_2489D7AB0(*v1, *(_QWORD *)(a1 + 16));
}

uint64_t sub_2489D7AC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x2495A2D34](MEMORY[0x24BEE12A8], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2489D7B08(_QWORD *a1)
{
  _QWORD *v1;

  return sub_2489D7B04(*v1, a1[2], a1[3], a1[4]);
}

uint64_t sub_2489D7B1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x2495A2D34](MEMORY[0x24BEE04C8], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2489D7B5C()
{
  __CFBundle *v0;
  CFTypeRef v1;
  uint64_t v3;

  v0 = CFBundleGetMainBundle();
  v1 = (id)CFBundleGetValueForInfoDictionaryKey(v0, (CFStringRef)*MEMORY[0x24BDBD288]);

  if (!v1)
    return 0;
  if (swift_dynamicCast())
    return v3;
  return 0;
}

uint64_t Comparable.isLessThan(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_2489D7C1C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BEE07E0], (uint64_t (*)(__int128 *, _QWORD, uint64_t, uint64_t))Comparable.isGreaterThan(_:checkReverse:));
}

uint64_t Comparable.isGreaterThan(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_2489D7C1C(a1, a2, a3, a4, MEMORY[0x24BEE07D8], (uint64_t (*)(__int128 *, _QWORD, uint64_t, uint64_t))Comparable.isLessThan(_:checkReverse:));
}

uint64_t sub_2489D7C1C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, char *, uint64_t, uint64_t), uint64_t (*a6)(__int128 *, _QWORD, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t (*v22)(__int128 *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, char *, uint64_t, uint64_t);
  _BYTE v29[24];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v27 = a4;
  v28 = a5;
  v11 = sub_248A45924();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)&v27 - v15;
  v17 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v14, v18);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489BE648(a1, (uint64_t)v34);
  sub_2489C330C(&qword_254464AF0);
  if (!swift_dynamicCast())
  {
    v22 = a6;
    sub_2489C1820((uint64_t)v16, 1);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    if ((a2 & 1) != 0)
    {
      sub_2489BE648(a1, (uint64_t)v29);
      if (v30)
      {
        sub_2489C330C(&qword_2544624E8);
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (*((_QWORD *)&v32 + 1))
          {
            sub_2489B8F74(&v31, (uint64_t)v34);
            v23 = v35;
            v24 = v36;
            sub_2489BE100(v34, v35);
            *((_QWORD *)&v32 + 1) = a3;
            v25 = sub_2489BE690((uint64_t *)&v31);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16))(v25, v6, a3);
            v21 = v22(&v31, 0, v23, v24);
            sub_2489C32D0((uint64_t)&v31, &qword_254464AF0);
            sub_2489BCE44((uint64_t)v34);
            return v21 & 1;
          }
        }
        else
        {
          v33 = 0;
          v31 = 0u;
          v32 = 0u;
        }
      }
      else
      {
        sub_2489C32D0((uint64_t)v29, &qword_254464AF0);
        v31 = 0u;
        v32 = 0u;
        v33 = 0;
      }
      sub_2489C32D0((uint64_t)&v31, &qword_2577A50C0);
    }
    v21 = 0;
    return v21 & 1;
  }
  sub_2489C1820((uint64_t)v16, 0);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, a3);
  v21 = v28(v6, v20, a3, v27);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, a3);
  return v21 & 1;
}

uint64_t Comparable.isLessThanOrEqual(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_2489D7C1C(a1, a2, a3, a4, MEMORY[0x24BEE07F0], (uint64_t (*)(__int128 *, _QWORD, uint64_t, uint64_t))Comparable.isGreaterThanOrEqual(_:checkReverse:));
}

uint64_t Comparable.isGreaterThanOrEqual(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_2489D7C1C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BEE07E8], (uint64_t (*)(__int128 *, _QWORD, uint64_t, uint64_t))Comparable.isLessThanOrEqual(_:checkReverse:));
}

void Configuration.datastoreDirectory.getter()
{
  sub_248A453F0();
  sub_2489BA7D0();
}

void Configuration.datastoreDirectory.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_2489B6AF4();
}

uint64_t (*Configuration.datastoreDirectory.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.displayFrequencyDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t (*Configuration.displayFrequencyDuration.modify())()
{
  return nullsub_1;
}

void Configuration.bundleIdentifierOverride.getter()
{
  sub_248A453F0();
  sub_2489BA7D0();
}

void sub_2489D7F4C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Configuration.bundleIdentifierOverride.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_2489D7FDC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_248A453F0();
  Configuration.bundleIdentifierOverride.setter(v1, v2);
}

void Configuration.bundleIdentifierOverride.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;

  if (qword_254464E68 != -1)
    swift_once();
  sub_2489C3948();
  if (v5)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 32) = a1;
    *(_QWORD *)(v2 + 40) = a2;
    sub_2489B6AF4();
  }
  else
  {
    sub_2489BFC74();
  }
}

void Configuration.bundleIdentifierOverride.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v3;
  sub_248A453F0();
  sub_2489BA7D0();
}

void sub_2489D80B8(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    v5 = qword_254464E68;
    sub_248A453F0();
    if (v5 != -1)
      swift_once();
    sub_2489C3948();
    if (v6)
    {
      sub_2489BFA04();
      a1[4] = v4;
      a1[5] = v3;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_254464E68 != -1)
      swift_once();
    sub_2489C3948();
    if (v6)
    {
      sub_2489BFA04();
      a1[4] = v4;
      a1[5] = v3;
      sub_2489B6AF4();
      return;
    }
  }
  sub_2489BFC74();
}

uint64_t Configuration.usesAppleDisplayFrequency.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

void (*Configuration.usesAppleDisplayFrequency.modify(uint64_t a1))(_BYTE *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 48);
  return sub_2489D818C;
}

void sub_2489D818C(_BYTE *a1, char a2)
{
  char v3;
  char v4;
  char v5;

  v3 = a1[8];
  if ((a2 & 1) != 0)
  {
    if (qword_254464E68 != -1)
      swift_once();
    sub_2489C3948();
    if (!v4)
      goto LABEL_10;
LABEL_9:
    *(_BYTE *)(*(_QWORD *)a1 + 48) = v3;
    goto LABEL_10;
  }
  if (qword_254464E68 != -1)
    swift_once();
  sub_2489BF5AC();
  if ((v5 & 1) != 0)
    goto LABEL_9;
LABEL_10:
  sub_2489BA7D0();
}

uint64_t sub_2489D820C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _BYTE *a8@<X8>)
{
  uint64_t result;

  result = a3(a1, *(unsigned __int8 *)(a1 + 104), a2, a3, a4, a5, a6, a7, *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  *a8 = result & 1;
  return result;
}

void (*Configuration.usesCoreAnalytics.modify(uint64_t a1))(_BYTE *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 49);
  return sub_2489D82BC;
}

void sub_2489D82BC(_BYTE *a1, char a2)
{
  char v3;
  char v4;
  char v5;

  v3 = a1[8];
  if ((a2 & 1) != 0)
  {
    if (qword_254464E68 != -1)
      swift_once();
    sub_2489C3948();
    if (!v4)
      goto LABEL_10;
LABEL_9:
    *(_BYTE *)(*(_QWORD *)a1 + 49) = v3;
    goto LABEL_10;
  }
  if (qword_254464E68 != -1)
    swift_once();
  sub_2489BF5AC();
  if ((v5 & 1) != 0)
    goto LABEL_9;
LABEL_10:
  sub_2489BA7D0();
}

uint64_t Configuration.hideAllTips.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t (*Configuration.hideAllTips.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.hideTipsSet.getter()
{
  return sub_248A453F0();
}

void Configuration.hideTipsSet.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  sub_2489BA7D0();
}

uint64_t (*Configuration.hideTipsSet.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.showAllTips.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t Configuration.showAllTips.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t (*Configuration.showAllTips.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.showTipsSet.getter()
{
  return sub_248A453F0();
}

void Configuration.showTipsSet.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  sub_2489BA7D0();
}

uint64_t (*Configuration.showTipsSet.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.disableDisplayFrequency.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t Configuration.disableDisplayFrequency.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*Configuration.disableDisplayFrequency.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.shouldResetDatastore.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t Configuration.shouldResetDatastore.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 81) = result;
  return result;
}

uint64_t (*Configuration.shouldResetDatastore.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.usesCachesDirectoryForDatastore.getter()
{
  char v0;
  char v1;

  if (qword_2544649A0 != -1)
    swift_once();
  if (word_254464998 == 3)
  {
    if (qword_254464E68 != -1)
      swift_once();
    sub_2489BF5AC();
    v1 = v0 ^ 1;
  }
  else
  {
    v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_2489D84B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;
  char v16;
  char v17;
  unsigned int v18;

  v9 = *(unsigned __int8 *)(v4 + 50);
  v10 = *(_QWORD *)(v4 + 56);
  v11 = *(unsigned __int8 *)(v4 + 64);
  v12 = *(_QWORD *)(v4 + 72);
  sub_2489C7E2C(a1, a2, v12);
  if ((v13 & 1) != 0)
    return 1;
  sub_2489C7E2C(a3, a4, v12);
  if ((v14 & 1) != 0)
    return 1;
  sub_2489C7E2C(a1, a2, v10);
  if ((v16 & 1) != 0)
    return 0;
  sub_2489C7E2C(a3, a4, v10);
  if (v9)
    v18 = 0;
  else
    v18 = 4;
  if (v11)
    v18 = 1;
  if ((v17 & 1) != 0)
    return 0;
  else
    return v18;
}

Swift::Void __swiftcall Configuration.setup(userDefaults:)(NSUserDefaults userDefaults)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  sub_2489C149C();
  sub_2489C182C();
  if (v3)
    v4 = *(_BYTE *)(v1 + 50);
  else
    v4 = v2 & 1;
  *(_BYTE *)(v1 + 50) = v4;
  v5 = sub_2489C2668();
  if (v5)
    v6 = v5;
  else
    v6 = sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v6;
  sub_2489C149C();
  sub_2489C182C();
  if (v3)
    v8 = *(_BYTE *)(v1 + 64);
  else
    v8 = v7 & 1;
  *(_BYTE *)(v1 + 64) = v8;
  v9 = sub_2489C2668();
  if (v9)
    v10 = v9;
  else
    v10 = sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = v10;
  sub_2489C149C();
  sub_2489C182C();
  if (v3)
    v12 = *(_BYTE *)(v1 + 80);
  else
    v12 = v11 & 1;
  *(_BYTE *)(v1 + 80) = v12;
  v13 = sub_2489C149C();
  if (v13 == 2)
    v14 = *(_BYTE *)(v1 + 81);
  else
    v14 = v13;
  *(_BYTE *)(v1 + 81) = v14 & 1;
  v15 = sub_2489BC17C();
  if ((v17 & 1) != 0)
  {
    v15 = *(_QWORD *)(v1 + 88);
    v16 = *(_QWORD *)(v1 + 96);
  }
  *(_QWORD *)(v1 + 88) = v15;
  *(_QWORD *)(v1 + 96) = v16;
  sub_2489C149C();
  sub_2489C182C();
  if (v3)
    v19 = *(_BYTE *)(v1 + 104);
  else
    v19 = v18 & 1;
  *(_BYTE *)(v1 + 104) = v19;
  sub_2489B6AF4();
}

uint64_t static Configuration.shared.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v17 = *(_BYTE *)(a1 + 49);
  v18 = *(_BYTE *)(a1 + 48);
  v16 = *(_BYTE *)(a1 + 50);
  v15 = *(void **)(a1 + 56);
  v14 = *(_BYTE *)(a1 + 64);
  v13 = *(void **)(a1 + 72);
  v11 = *(_BYTE *)(a1 + 81);
  v12 = *(_BYTE *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 88);
  v8 = *(_BYTE *)(a1 + 104);
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BFA10();
  qword_254464F10 = v1;
  qword_254464F18 = v2;
  *(_QWORD *)&xmmword_254464F20 = v3;
  *((_QWORD *)&xmmword_254464F20 + 1) = v4;
  qword_254464F30 = v5;
  qword_254464F38 = v6;
  byte_254464F40 = v18;
  byte_254464F41 = v17;
  byte_254464F42 = v16;
  off_254464F48 = v15;
  byte_254464F50 = v14;
  off_254464F58 = v13;
  LOBYTE(word_254464F60) = v12;
  HIBYTE(word_254464F60) = v11;
  qword_254464F68 = v10;
  unk_254464F70 = v9;
  byte_254464F78 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489D8858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _BYTE *a7@<X8>)
{
  return sub_2489D820C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))Configuration.usesAppleDisplayFrequency.getter, a3, a4, a5, a6, a7);
}

void sub_2489D8874(char *a1)
{
  Configuration.usesAppleDisplayFrequency.setter(*a1);
  sub_2489BA7D0();
}

uint64_t sub_2489D8894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _BYTE *a7@<X8>)
{
  return sub_2489D820C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))Configuration.usesCoreAnalytics.getter, a3, a4, a5, a6, a7);
}

void sub_2489D88B0(char *a1)
{
  Configuration.usesCoreAnalytics.setter(*a1);
  sub_2489BA7D0();
}

uint64_t initializeWithCopy for Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t assignWithCopy for Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

void *initializeWithTake for Configuration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t assignWithTake for Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 105))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_2489D8BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
    goto LABEL_30;
  if (a1)
  {
    v2 = *(_QWORD *)(a2 + 16);
    if (!v2)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    v3 = 0;
    v4 = 0;
    v5 = (uint64_t *)(a2 + 40);
    v23 = v2 - 1;
    v6 = MEMORY[0x24BEE4AF8];
    v7 = MEMORY[0x24BEE4AF8];
    v22 = a1;
    while (1)
    {
      v9 = *(v5 - 1);
      v8 = *v5;
      v10 = *(_QWORD *)(v6 + 16);
      if ((uint64_t)v10 >= a1)
      {
        if (v4 >= v10)
          goto LABEL_28;
        v21 = *(v5 - 1);
        v14 = v6 + 16 * v4;
        v15 = *(_QWORD *)(v14 + 32);
        v16 = *(_QWORD *)(v14 + 40);
        sub_248A453F0();
        sub_248A453F0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2489C74D8();
        v17 = *(_QWORD *)(v7 + 16);
        if (v17 >= *(_QWORD *)(v7 + 24) >> 1)
          sub_2489C74D8();
        *(_QWORD *)(v7 + 16) = v17 + 1;
        v18 = v7 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v15;
        *(_QWORD *)(v18 + 40) = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2489D8E04();
          v6 = v19;
        }
        v13 = a2;
        if (v4 >= *(_QWORD *)(v6 + 16))
          goto LABEL_29;
        v20 = v6 + 16 * v4;
        swift_bridgeObjectRelease();
        a1 = v22;
        *(_QWORD *)(v20 + 32) = v21;
        *(_QWORD *)(v20 + 40) = v8;
        if ((uint64_t)++v4 >= v22)
        {
          if (v23 == v3)
            goto LABEL_26;
          v4 = 0;
          goto LABEL_24;
        }
      }
      else
      {
        sub_248A453F0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2489C74D8();
        v11 = *(_QWORD *)(v6 + 16);
        if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
          sub_2489C74D8();
        *(_QWORD *)(v6 + 16) = v11 + 1;
        v12 = v6 + 16 * v11;
        *(_QWORD *)(v12 + 32) = v9;
        *(_QWORD *)(v12 + 40) = v8;
        a1 = v22;
        v13 = a2;
      }
      if (v23 == v3)
        goto LABEL_26;
LABEL_24:
      ++v3;
      v5 += 2;
      if (v3 >= *(_QWORD *)(v13 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        return;
      }
    }
  }
}

void sub_2489D8E04()
{
  sub_248A02A28();
}

BOOL static Bool.tvOS.getter()
{
  int v0;

  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C3958();
  return v0 == 3;
}

uint64_t static Bool.isInternalDevice.getter()
{
  return sub_2489B4C74(&qword_2544649A0, (unsigned __int8 *)&byte_25446499B);
}

uint64_t static Bool.isDebugging.getter()
{
  return sub_2489B4C74(&qword_2544649A0, (unsigned __int8 *)&word_254464998 + 1);
}

uint64_t static Bool.isDebuggingInternalDevice.getter()
{
  if (qword_2544649A0 != -1)
    swift_once();
  return byte_25446499B & HIBYTE(word_254464998) & 1;
}

BOOL static Bool.iOS.getter()
{
  int v0;

  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C3958();
  return v0 == 0;
}

BOOL static Bool.macOS.getter()
{
  int v0;

  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C3958();
  return v0 == 1;
}

BOOL static Bool.macCatalyst.getter()
{
  int v0;

  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C3958();
  return v0 == 2;
}

BOOL static Bool.visionOS.getter()
{
  int v0;

  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C3958();
  return v0 == 4;
}

BOOL static Bool.watchOS.getter()
{
  int v0;

  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C3958();
  return v0 == 5;
}

uint64_t sub_2489D9038(uint64_t result)
{
  if ((unsigned __int128)(result * (__int128)86400) >> 64 == (86400 * result) >> 63)
    result *= 0xC0DDD92E56000000;
  else
    __break(1u);
  return result;
}

uint64_t sub_2489D9080(uint64_t a1)
{
  return 1000000000000000000 * a1;
}

unint64_t static Duration.systemDisplayFrequency.getter()
{
  return 0xC0DDD92E56000000;
}

uint64_t static String.tipsBundleIdentifier.getter()
{
  return 0x6C7070612E6D6F63;
}

uint64_t static String.tipsdIdentifier.getter()
{
  return 0x6C7070612E6D6F63;
}

unint64_t static String.tkutilIdentifier.getter()
{
  return sub_2489C3964();
}

unint64_t static String.tipKitIdentifier.getter()
{
  return sub_2489C3964();
}

_QWORD *assignWithCopy for ConstellationEvent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ConstellationEvent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConstellationEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConstellationEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationEvent()
{
  return &type metadata for ConstellationEvent;
}

uint64_t sub_2489D9220()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_2489D922C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_248A453F0();
  return v1;
}

uint64_t sub_2489D9258@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_248A453F0();
}

unint64_t sub_2489D9264(uint64_t a1)
{
  unint64_t result;

  result = sub_2489D9288();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2489D9288()
{
  unint64_t result;

  result = qword_254462658;
  if (!qword_254462658)
  {
    result = MEMORY[0x2495A2D34](&unk_248A477A8, &type metadata for ConstellationEvent);
    atomic_store(result, (unint64_t *)&qword_254462658);
  }
  return result;
}

unint64_t sub_2489D92C4(uint64_t a1)
{
  unint64_t result;

  result = sub_2489D92E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2489D92E8()
{
  unint64_t result;

  result = qword_254462650;
  if (!qword_254462650)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47754, &type metadata for ConstellationEvent);
    atomic_store(result, (unint64_t *)&qword_254462650);
  }
  return result;
}

uint64_t sub_2489D9324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2489D933C(a1, a2, a3, &qword_254464D50, a4);
}

uint64_t sub_2489D9330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2489D933C(a1, a2, a3, &qword_254464AA0, a4);
}

uint64_t sub_2489D933C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  char v9;

  if (*(_QWORD *)(a3 + 16) && (result = sub_2489C28D0(result, a2), (v8 & 1) != 0))
  {
    result = sub_2489C7F24(*(_QWORD *)(a3 + 56) + 8 * result, a5, a4);
    v9 = 0;
  }
  else
  {
    *(_QWORD *)a5 = 0;
    v9 = 1;
  }
  *(_BYTE *)(a5 + 8) = v9;
  return result;
}

double sub_2489D93A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(unint64_t, _OWORD *)@<X3>, _OWORD *a5@<X8>)
{
  unint64_t v7;
  char v8;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v7 = sub_2489C28D0(a1, a2), (v8 & 1) != 0))
  {
    a4(*(_QWORD *)(a3 + 56) + 32 * v7, a5);
  }
  else
  {
    result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

double sub_2489D9404@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_2489CE020(a1), (v6 & 1) != 0))
  {
    sub_2489C81EC(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t static ConstellationIngestor.ingestContent(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 288) = a1;
  *(_QWORD *)(v2 + 296) = v1;
  sub_2489BD87C();
  return sub_2489BF788();
}

uint64_t sub_2489D94AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v36;
  uint64_t v37;

  sub_2489D93A0(0x746E656D75636F64, 0xE900000000000073, *(_QWORD *)(v0 + 288), (void (*)(unint64_t, _OWORD *))sub_2489C81EC, (_OWORD *)(v0 + 16));
  if (!*(_QWORD *)(v0 + 40))
  {
    v10 = v0 + 16;
LABEL_9:
    sub_2489D9B10(v10);
    goto LABEL_10;
  }
  sub_2489C330C(&qword_2544643C0);
  v1 = sub_2489C330C(&qword_2544629F0);
  if ((sub_2489BF7AC() & 1) == 0)
  {
LABEL_10:
    sub_2489C9824();
    swift_allocError();
    *v11 = 0xD000000000000020;
    v11[1] = 0x8000000248A4F650;
    swift_willThrow();
    goto LABEL_11;
  }
  v2 = *(_QWORD *)(v0 + 264);
  sub_2489D93A0(0x79726576696C6564, 0xEC0000006F666E49, *(_QWORD *)(v0 + 288), (void (*)(unint64_t, _OWORD *))sub_2489C81EC, (_OWORD *)(v0 + 80));
  if (!*(_QWORD *)(v0 + 104))
  {
    sub_2489BBC60();
    v10 = v0 + 80;
    goto LABEL_9;
  }
  v3 = sub_2489C330C(&qword_254462968);
  if ((sub_2489BF7AC() & 1) == 0)
  {
    sub_2489BBC60();
    goto LABEL_10;
  }
  v37 = *(_QWORD *)(v0 + 256);
  v4 = v0 + 176;
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 144) = v2;
  sub_2489C81EC(v0 + 144, v0 + 176);
  if (sub_2489BF7AC())
  {
    v5 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 216);
    v7 = sub_2489BED6C(v5, v6, &qword_2544629B0, (void (*)(void))sub_2489DB53C);
    v8 = v5;
    v9 = v6;
  }
  else
  {
    v4 = v0 + 240;
    v13 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 248) = *(_QWORD *)(v0 + 144);
    sub_248A453F0();
    v14 = sub_248A45F18();
    *(_QWORD *)(v0 + 240) = 0;
    v15 = sub_2489C4F1C(v13, sel_dataWithJSONObject_options_error_, v14);
    swift_unknownObjectRelease();
    v16 = *(id *)(v0 + 240);
    if (!v15)
    {
      v24 = v16;
      sub_248A44DCC();

      swift_willThrow();
      goto LABEL_19;
    }
    v17 = sub_248A44ED4();
    v19 = v18;

    v20 = sub_2489BED6C(v17, v19, &qword_2544629B0, (void (*)(void))sub_2489DB53C);
    v8 = v17;
    v9 = v19;
    v7 = v20;
  }
  sub_2489BE604(v8, v9);
  if (v4)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    v25 = v0 + 144;
LABEL_26:
    sub_2489BCE44(v25);
LABEL_11:
    sub_2489BFCAC();
    __asm { BR              X0 }
  }
  v21 = v0 + 224;
  *(_QWORD *)(v0 + 304) = v7;
  sub_2489BCE44(v0 + 144);
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 48) = v37;
  sub_2489C81EC(v0 + 48, v0 + 112);
  if ((sub_2489BF7AC() & 1) != 0)
  {
    v22 = *(_QWORD *)(v0 + 224);
    v23 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    v21 = v0 + 280;
    v26 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 48);
    sub_248A453F0();
    v27 = sub_248A45F18();
    *(_QWORD *)(v0 + 280) = 0;
    v28 = sub_2489C4F1C(v26, sel_dataWithJSONObject_options_error_, v27);
    swift_unknownObjectRelease();
    v29 = *(id *)(v0 + 280);
    if (!v28)
    {
      v36 = v29;
      sub_248A44DCC();

      swift_willThrow();
      goto LABEL_25;
    }
    v22 = sub_248A44ED4();
    v23 = v30;

  }
  v31 = sub_2489BED6C(v22, v23, &qword_254462958, (void (*)(void))sub_2489DB494);
  sub_2489BE604(v22, v23);
  if (v21)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    v25 = v0 + 48;
    goto LABEL_26;
  }
  *(_QWORD *)(v0 + 312) = v31;
  sub_2489BCE44(v0 + 48);
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v32;
  *v32 = v0;
  v32[1] = sub_2489D994C;
  sub_2489BFCAC();
  return sub_2489D9B50(v33, v34);
}

uint64_t sub_2489D994C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  sub_2489C6FB8();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_2489BDA70();
    sub_2489BEC70();
    return sub_2489BFFA4(*(uint64_t (**)(void))(v3 + 8));
  }
  else
  {
    sub_2489BEC70();
    sub_2489BDA70();
    sub_2489BD87C();
    return sub_2489C14B0();
  }
}

uint64_t sub_2489D9A00()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 336) = sub_2489C3364();
  if (qword_254464558 != -1)
    swift_once();
  return sub_2489BF788();
}

uint64_t sub_2489D9A8C()
{
  uint64_t v0;

  static MiniTipsDatastore.resetModelManagers()();
  return sub_2489BFFA4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489D9B10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2489C330C(&qword_2544643E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2489D9B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[45] = a2;
  v3[46] = v2;
  v3[44] = a1;
  return swift_task_switch();
}

uint64_t sub_2489D9B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v57;
  uint64_t v58;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  char *v75;
  _QWORD v76[29];
  _BYTE v77[7];
  _DWORD v78[3];

  v1 = *(_QWORD *)(v0 + 352);
  sub_2489C330C(&qword_2544629A8);
  v2 = sub_248A453C0();
  *(_QWORD *)(v0 + 344) = v2;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = (_QWORD *)(v0 + 16);
    v64 = (_QWORD *)(v0 + 248);
    v68 = (uint64_t *)(v0 + 344);
    v5 = *(_QWORD *)(v0 + 352);
    v6 = *(_QWORD *)(v0 + 360);
    sub_248A453F0();
    sub_2489BA438((void *)(v0 + 16), (const void *)(v5 + 32));
    v7 = (char *)(v5 + 264);
    v8 = v3 - 1;
    v62 = v6;
    v63 = (_QWORD *)(v0 + 16);
    v61 = v0;
    while (1)
    {
      if (!*(_QWORD *)(v6 + 16))
        goto LABEL_11;
      v9 = *(_QWORD *)(v0 + 80);
      v10 = *(_QWORD *)(v0 + 88);
      sub_2489DAD2C(v4);
      sub_248A453F0();
      v11 = sub_2489C28D0(v9, v10);
      if ((v12 & 1) == 0)
        break;
      v75 = v7;
      v13 = *(_QWORD *)(v6 + 56) + 88 * v11;
      v14 = *(_QWORD *)(v13 + 8);
      v15 = *(_QWORD *)(v13 + 24);
      v70 = *(_QWORD *)(v13 + 16);
      v71 = *(_QWORD *)v13;
      v16 = *(_QWORD **)(v13 + 32);
      v69 = *(_BYTE *)(v13 + 40);
      v17 = *(_QWORD *)(v13 + 56);
      v73 = *(_QWORD *)(v13 + 48);
      v72 = *(_BYTE *)(v13 + 64);
      v18 = *(_QWORD *)(v13 + 72);
      v74 = *(_BYTE *)(v13 + 80);
      sub_248A453F0();
      sub_248A453F0();
      sub_2489BF5C4();
      sub_248A453F0();
      sub_248A453F0();
      sub_2489BEC70();
      if (v16[2])
      {
        v65 = v15;
        v66 = v16;
        v67 = v17;
        v20 = v16[4];
        v19 = v16[5];
        v21 = *v68;
        v22 = *(_QWORD *)(*v68 + 16);
        sub_2489BF5C4();
        if (v22)
        {
          sub_2489BF5C4();
          v23 = sub_2489C07CC();
          v0 = MEMORY[0x24BEE4AF8];
          if ((v24 & 1) != 0)
          {
            v0 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
            sub_248A453F0();
          }
          sub_2489BA800();
        }
        else
        {
          v0 = MEMORY[0x24BEE4AF8];
        }
        sub_2489BF5C4();
        swift_isUniquelyReferenced_nonNull_native();
        v76[0] = v21;
        v25 = sub_2489C07CC();
        v27 = *(_QWORD *)(v21 + 16);
        if (__OFADD__(v27, (v26 & 1) == 0))
        {
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          v57 = v27 >> 6;
          v58 = 13;
          while (v58 - 8 < v57)
          {
            if (*(_QWORD *)(v25 + 8 * v58++))
              goto LABEL_45;
          }
LABEL_61:
          swift_release();
          sub_2489C6C90();
          sub_2489C0B08();
          __asm { BR              X0 }
        }
        v28 = v25;
        v29 = v26;
        sub_2489C330C(&qword_254462A20);
        v25 = sub_248A45BD0();
        v30 = (_QWORD *)v76[0];
        if ((v25 & 1) != 0)
        {
          v25 = sub_2489C07CC();
          if ((v29 & 1) != (v31 & 1))
          {
            sub_2489C0B08();
            return sub_248A45F30();
          }
          v28 = v25;
        }
        if ((v29 & 1) != 0)
        {
          v32 = v30[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v32 + 8 * v28) = v0;
        }
        else
        {
          v30[(v28 >> 6) + 8] |= 1 << v28;
          v33 = (uint64_t *)(v30[6] + 16 * v28);
          *v33 = v20;
          v33[1] = v19;
          *(_QWORD *)(v30[7] + 8 * v28) = v0;
          v34 = v30[2];
          v35 = __OFADD__(v34, 1);
          v27 = v34 + 1;
          if (v35)
            goto LABEL_56;
          v30[2] = v27;
          sub_2489BF5C4();
        }
        *v68 = (uint64_t)v30;
        swift_bridgeObjectRelease();
        sub_2489BA800();
        sub_2489DA574(v64, v20, v19);
        v37 = *v36;
        if (*v36)
        {
          v38 = v36;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v38 = v37;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2489C60C4();
            v37 = v44;
            *v38 = v44;
          }
          v40 = *(_QWORD *)(v37 + 16);
          if (v40 >= *(_QWORD *)(v37 + 24) >> 1)
          {
            sub_2489C60C4();
            v37 = v45;
            *v38 = v45;
          }
          v0 = v61;
          v4 = v63;
          sub_2489BA438(v76, v63);
          *(_QWORD *)(v37 + 16) = v40 + 1;
          v41 = v37 + 320 * v40;
          sub_2489BA438((void *)(v41 + 32), v76);
          *(_QWORD *)(v41 + 264) = v71;
          *(_QWORD *)(v41 + 272) = v14;
          *(_QWORD *)(v41 + 280) = v70;
          *(_QWORD *)(v41 + 288) = v65;
          *(_QWORD *)(v41 + 296) = v66;
          *(_BYTE *)(v41 + 304) = v69;
          v42 = *(_DWORD *)&v77[3];
          *(_DWORD *)(v41 + 305) = *(_DWORD *)v77;
          *(_DWORD *)(v41 + 308) = v42;
          *(_QWORD *)(v41 + 312) = v73;
          *(_QWORD *)(v41 + 320) = v67;
          *(_BYTE *)(v41 + 328) = v72;
          v43 = *(_DWORD *)((char *)v78 + 3);
          *(_DWORD *)(v41 + 329) = v78[0];
          *(_DWORD *)(v41 + 332) = v43;
          *(_QWORD *)(v41 + 336) = v18;
          *(_BYTE *)(v41 + 344) = v74;
          sub_2489BD888();
          sub_2489BA800();
        }
        else
        {
          sub_2489BBC60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v4 = v63;
          sub_2489BD990();
          sub_2489BD888();
          sub_2489BA800();
          v0 = v61;
        }
        v6 = v62;
      }
      else
      {
        sub_2489BBC60();
        sub_2489BA800();
        sub_2489BDA70();
        sub_2489BBC58();
        swift_bridgeObjectRelease();
        sub_2489BD990();
      }
      v7 = v75;
      if (!v8)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        v2 = *(_QWORD *)(v0 + 344);
        goto LABEL_34;
      }
LABEL_32:
      sub_2489BA438(v4, v7);
      v7 += 232;
      --v8;
    }
    sub_2489BEC70();
    sub_2489BD990();
LABEL_11:
    if (!v8)
      goto LABEL_33;
    goto LABEL_32;
  }
LABEL_34:
  *(_QWORD *)(v0 + 376) = v2;
  v46 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 472) = v46;
  v47 = -1;
  v48 = -1 << v46;
  if (-(-1 << v46) < 64)
    v47 = ~(-1 << -(char)v48);
  v49 = v47 & *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v0 + 384) = 0;
  v25 = sub_248A453F0();
  if (v49)
  {
    v50 = 0;
  }
  else
  {
    v27 = 63 - v48;
    if ((unint64_t)(63 - v48) <= 0x7F)
      goto LABEL_61;
    if (!*(_QWORD *)(v25 + 72))
    {
      if (v27 < 0xC0)
        goto LABEL_61;
      if (!*(_QWORD *)(v25 + 80))
      {
        if (v27 < 0x100)
          goto LABEL_61;
        if (!*(_QWORD *)(v25 + 88))
        {
          if (v27 < 0x140)
            goto LABEL_61;
          if (!*(_QWORD *)(v25 + 96))
            goto LABEL_57;
        }
      }
    }
LABEL_45:
    sub_2489BEC78();
  }
  sub_2489BFC80(v25, v50);
  *(_QWORD *)(v0 + 424) = *(_QWORD *)(v51 + 8 * v52);
  v53 = qword_254464240;
  sub_248A453F0();
  sub_2489BF5C4();
  if (v53 != -1)
    swift_once();
  v54 = sub_2489BEE68();
  v55 = sub_2489C401C(v54, (uint64_t)&unk_254464228);
  sub_2489BF794(v55);
  swift_bridgeObjectRelease();
  sub_2489C1838(0xD00000000000002CLL);
  sub_2489C5E88();
  sub_2489BDA70();
  *(_QWORD *)(v0 + 440) = sub_2489C3364();
  if (qword_254464558 != -1)
    swift_once();
  sub_2489C0B08();
  return swift_task_switch();
}

uint64_t sub_2489DA1AC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = v0[48];
  static MiniTipsDatastore.resetModelManagers()();
  v0[56] = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_2489BBC58();
    sub_2489BD87C();
    return sub_2489C14B0();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[57] = v3;
    *v3 = v0;
    v3[1] = sub_2489DA240;
    return sub_2489DA610(v0[51], v0[52], v0[53]);
  }
}

uint64_t sub_2489DA240()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_2489C6FB8();
  *v3 = *v2;
  *(_QWORD *)(v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_2489BDA70();
  sub_2489BD87C();
  return sub_2489C14B0();
}

uint64_t sub_2489DA2AC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;

  *(_QWORD *)(v0 + 328) = 0;
  *(_QWORD *)(v0 + 336) = 0xE000000000000000;
  sub_248A45A74();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 312) = 0xD00000000000002BLL;
  *(_QWORD *)(v0 + 320) = 0x8000000248A4F6F0;
  sub_248A4557C();
  sub_2489BE9AC();
  sub_2489BDA70();
  result = swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 400);
  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v0 + 464);
  if (!v3)
  {
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
    }
    else
    {
      v11 = (1 << *(_BYTE *)(v0 + 472)) + 63;
      result = *(_QWORD *)(v0 + 376);
      if (v10 >= (uint64_t)(v11 >> 6))
        goto LABEL_22;
      v12 = result + 64;
      v4 = v2 + 1;
      if (*(_QWORD *)(result + 64 + 8 * v10))
        goto LABEL_3;
      v13 = v11 >> 6;
      v4 = v10 + 1;
      if (v10 + 1 >= v13)
        goto LABEL_22;
      if (*(_QWORD *)(v12 + 8 * v4))
        goto LABEL_3;
      v4 = v10 + 2;
      if (v10 + 2 >= v13)
        goto LABEL_22;
      if (*(_QWORD *)(v12 + 8 * v4))
        goto LABEL_3;
      v14 = v10 + 3;
      if (v14 >= v13)
      {
LABEL_22:
        swift_release();
        sub_2489C6C90();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      if (*(_QWORD *)(v12 + 8 * v14))
      {
        v4 = v14;
        goto LABEL_3;
      }
      while (1)
      {
        v4 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v4 >= v13)
          goto LABEL_22;
        ++v14;
        if (*(_QWORD *)(v12 + 8 * v4))
          goto LABEL_3;
      }
    }
    __break(1u);
    return result;
  }
  sub_2489BEC78();
  result = *(_QWORD *)(v0 + 376);
LABEL_3:
  sub_2489BFC80(result, v4);
  *(_QWORD *)(v0 + 424) = *(_QWORD *)(v5 + 8 * v6);
  v7 = qword_254464240;
  sub_248A453F0();
  sub_248A453F0();
  if (v7 != -1)
    swift_once();
  v8 = sub_2489BEE68();
  v9 = sub_2489C401C(v8, (uint64_t)&unk_254464228);
  sub_2489BF794(v9);
  swift_bridgeObjectRelease();
  sub_2489C1838(0xD00000000000002CLL);
  sub_2489C5E88();
  sub_2489BDA70();
  *(_QWORD *)(v0 + 440) = sub_2489C3364();
  if (qword_254464558 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_2489DA514()
{
  uint64_t v0;

  swift_release();
  sub_2489C6C90();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489DA544()
{
  uint64_t v0;

  swift_release();
  sub_2489C6C90();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

void (*sub_2489DA574(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  sub_248A453F0();
  v6[5] = sub_2489DB0DC(v6, a2, a3);
  return sub_2489DA5E0;
}

void sub_2489DA5E0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  sub_2489BBC58();
  sub_2489C09A4(v1);
}

uint64_t sub_2489DA610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a3;
  type metadata accessor for MiniTipsDatastore();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_2489DA684;
  return static MiniTipsDatastore.datastore(appleBundleID:)(a1, a2);
}

uint64_t sub_2489DA684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  _QWORD *v6;

  sub_2489C6FB8();
  v5 = *v3;
  *v6 = v5;
  swift_task_dealloc();
  if (v1)
    return sub_2489BFFA4(*(uint64_t (**)(void))(v5 + 8));
  *(_QWORD *)(v2 + 32) = a1;
  sub_2489BD87C();
  return sub_2489C14B0();
}

uint64_t sub_2489DA6E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2577A5950 + dword_2577A5950);
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_2489DA750;
  return v3(v0[2], (uint64_t)&unk_2577A50E8, v0[4]);
}

uint64_t sub_2489DA750()
{
  sub_2489C0354();
  sub_2489BFA2C();
  sub_2489BBC58();
  sub_2489BD87C();
  return sub_2489BF788();
}

uint64_t sub_2489DA78C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[6] = *(_QWORD *)(v0[4] + 64);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_2489DA7E8;
  return sub_248A380CC((uint64_t)v1, v2);
}

uint64_t sub_2489DA7E8()
{
  sub_2489C0354();
  sub_2489BFA2C();
  swift_release();
  sub_2489BD87C();
  return sub_2489BF788();
}

uint64_t sub_2489DA824()
{
  uint64_t v0;

  swift_release();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489DA850(uint64_t a1, const void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v4 + 680) = a1;
  memcpy((void *)(v4 + 16), a2, 0xE8uLL);
  v7 = a3[1];
  v8 = a3[3];
  v17 = a3[2];
  v18 = *a3;
  v9 = a3[4];
  v10 = *((_BYTE *)a3 + 40);
  v11 = a3[7];
  v16 = a3[6];
  v15 = *((_BYTE *)a3 + 64);
  v12 = a3[9];
  LOBYTE(a3) = *((_BYTE *)a3 + 80);
  memcpy((void *)(v4 + 248), a2, 0xE8uLL);
  *(_QWORD *)(v4 + 480) = v18;
  *(_QWORD *)(v4 + 488) = v7;
  *(_QWORD *)(v4 + 496) = v17;
  *(_QWORD *)(v4 + 504) = v8;
  *(_QWORD *)(v4 + 512) = v9;
  *(_BYTE *)(v4 + 520) = v10;
  *(_QWORD *)(v4 + 528) = v16;
  *(_QWORD *)(v4 + 536) = v11;
  *(_BYTE *)(v4 + 544) = v15;
  *(_QWORD *)(v4 + 552) = v12;
  *(_BYTE *)(v4 + 560) = (_BYTE)a3;
  sub_2489DAD2C((_QWORD *)(v4 + 16));
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  swift_retain();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 688) = v13;
  *v13 = v4;
  v13[1] = sub_2489DA9A4;
  return sub_2489E8438(v4 + 568, (const void *)(v4 + 248), v4 + 480, a4);
}

uint64_t sub_2489DA9A4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_2489C0354();
  *v2 = *v1;
  *(_QWORD *)(v3 + 696) = v0;
  swift_task_dealloc();
  sub_2489BD87C();
  return sub_2489BF788();
}

uint64_t sub_2489DA9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 640);
  v5 = 256;
  if (*(_BYTE *)(v0 + 609))
    v6 = 256;
  else
    v6 = 0;
  v7 = v6 | *(unsigned __int8 *)(v0 + 608);
  if (!*(_BYTE *)(v0 + 633))
    v5 = 0;
  v8 = v5 | *(unsigned __int8 *)(v0 + 632);
  v9 = 0x10000;
  if (!*(_BYTE *)(v0 + 634))
    v9 = 0;
  v10 = 0x1000000;
  if (!*(_BYTE *)(v0 + 635))
    v10 = 0;
  v11 = v8 | v9 | v10;
  v12 = 0x100000000;
  if (!*(_BYTE *)(v0 + 636))
    v12 = 0;
  v13 = *(_OWORD *)(v0 + 584);
  v14 = *(_OWORD *)(v0 + 616);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 568);
  *(_QWORD *)(v1 + 8) = v2;
  *(_OWORD *)(v1 + 16) = v13;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v7;
  *(_OWORD *)(v1 + 48) = v14;
  *(_QWORD *)(v1 + 64) = v11 | v12;
  *(_QWORD *)(v1 + 72) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2489DAA98()
{
  uint64_t v0;
  void *v1;
  _OWORD *v2;
  uint64_t v3;

  if (qword_2577A4DD0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 696);
  v2 = *(_OWORD **)(v0 + 680);
  v3 = sub_2489BEE68();
  sub_2489C401C(v3, (uint64_t)&unk_2577A5758);
  sub_248A45A74();
  sub_248A4557C();
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  swift_getErrorValue();
  sub_248A45D8C();
  sub_2489BE9AC();
  swift_bridgeObjectRelease();

  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  sub_2489BFCAC();
  __asm { BR              X0 }
}

uint64_t ConstellationIngestor.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t ConstellationIngestor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ConstellationIngestor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489DAC38()
{
  return ConstellationIngestor.unownedExecutor.getter();
}

uint64_t sub_2489DAC50(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;

  sub_248A44BB0();
  swift_allocObject();
  sub_248A44BA4();
  sub_2489C330C(a3);
  a4();
  sub_248A44B98();
  result = swift_release();
  if (!v4)
    return v8;
  return result;
}

uint64_t type metadata accessor for ConstellationIngestor()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConstellationIngestor()
{
  return swift_lookUpClassMethod();
}

_QWORD *sub_2489DAD2C(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = a1[14];
  v6 = a1[13];
  v3 = a1[16];
  v4 = a1[15];
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_2489DAE44(v6, v5, v4, v3);
  return a1;
}

uint64_t sub_2489DAE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    sub_248A453F0();
    return sub_2489BB634(a3, a4);
  }
  return result;
}

_QWORD *sub_2489DAF04(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = a1[14];
  v6 = a1[13];
  v3 = a1[16];
  v4 = a1[15];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2489DB01C(v6, v5, v4, v3);
  return a1;
}

uint64_t sub_2489DB01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_2489BB694(a3, a4);
  }
  return result;
}

void (*sub_2489DB0DC(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_248A453F0();
  v6[9] = sub_2489DB308(v6);
  v6[10] = sub_2489DB1B8(v6 + 4, a2, a3);
  return sub_2489DB16C;
}

void sub_2489DB16C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  sub_2489BBC58();
  v2(v1, 0);
  free(v1);
}

void (*sub_2489DB1B8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[2] = a3;
  v8[3] = v4;
  v8[1] = a2;
  v9 = *v4;
  v10 = sub_2489C28D0(a2, a3);
  *((_BYTE *)v8 + 40) = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  sub_2489C330C(&qword_254462A20);
  if ((sub_248A45BD0() & 1) != 0)
  {
    v14 = sub_2489C28D0(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_248A45F30();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v12;
  if ((v13 & 1) != 0)
    v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v12);
  else
    v16 = 0;
  *v8 = v16;
  return sub_2489DB2D0;
}

void sub_2489DB2D0(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_2489DB334(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  sub_2489C09A4(v1);
}

uint64_t (*sub_2489DB308(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2489DB328;
}

uint64_t sub_2489DB328(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_2489DB334(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v6;
    }
    else
    {
      sub_248A35D48(a4, a5, a6, v6, *a3);
      sub_248A453F0();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_2489C330C(&qword_2544629A8);
    sub_248A45BE8();
  }
  return sub_248A453F0();
}

uint64_t sub_2489DB3F4(uint64_t a1, const void *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_2489DB460;
  return sub_2489DA850(a1, a2, a3, v3);
}

uint64_t sub_2489DB460()
{
  uint64_t v0;

  sub_2489C0354();
  sub_2489BFA2C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2489DB494()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_254462960;
  if (!qword_254462960)
  {
    v1 = sub_2489BCD7C(&qword_254462958);
    v2 = sub_2489DB500();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254462960);
  }
  return result;
}

unint64_t sub_2489DB500()
{
  unint64_t result;

  result = qword_254462878;
  if (!qword_254462878)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47A48, &unk_2519B9C50);
    atomic_store(result, (unint64_t *)&qword_254462878);
  }
  return result;
}

unint64_t sub_2489DB53C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2544629B8;
  if (!qword_2544629B8)
  {
    v1 = sub_2489BCD7C(&qword_2544629B0);
    v2 = sub_2489DB5A0();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2544629B8);
  }
  return result;
}

unint64_t sub_2489DB5A0()
{
  unint64_t result;

  result = qword_254462750;
  if (!qword_254462750)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47A20, &unk_2519B9770);
    atomic_store(result, (unint64_t *)&qword_254462750);
  }
  return result;
}

_QWORD *sub_2489DB5DC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_248A453F0();
  return a1;
}

_QWORD *sub_2489DB608(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2489DB640(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *sub_2489DB64C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2489DB67C(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489DB6D0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for ConstellationEventMetadata()
{
  sub_2489BF7B4();
}

void type metadata accessor for ConstellationEventValue()
{
  sub_2489BF7B4();
}

uint64_t sub_2489DB740(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_2489BCE44(a1 + 24);
}

uint64_t sub_2489DB76C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = a2 + 24;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  sub_248A453F0();
  v6(a1 + 24, v4, v5);
  return a1;
}

uint64_t sub_2489DB7D8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  sub_2489CE9EC((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

__n128 sub_2489DB840(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_2489DB85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  sub_2489BCE44(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_2489DB8B0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489DB8F0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationPreconditionsRuleInfo()
{
  sub_2489BF7B4();
}

uint64_t sub_2489DB948(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2489DB9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  sub_248A453F0();
  if (v5 == 1)
  {
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x70uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v8 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v8;
    v9 = *(_QWORD *)(a2 + 112);
    v10 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = v9;
    *(_QWORD *)(a1 + 120) = v10;
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
  }
  return a1;
}

uint64_t sub_2489DBA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v7;
      v8 = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v8;
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60(a1 + 16);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x70uLL);
    return a1;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489DBC60(uint64_t a1)
{
  _s20ConstellationContentC10AttributesVwxx();
  return a1;
}

void *sub_2489DBC94(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t sub_2489DBC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      v8 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60(a1 + 16);
  }
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x70uLL);
  return a1;
}

uint64_t sub_2489DBD80(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489DBDC0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationDocument.Icon()
{
  sub_2489BF7B4();
}

uint64_t sub_2489DBE2C(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2489DBE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  sub_248A453F0();
  sub_248A453F0();
  if (v6 == 1)
  {
    memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x70uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v9 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v9;
    v10 = *(_QWORD *)(a2 + 128);
    v11 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = v11;
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
  }
  return a1;
}

uint64_t sub_2489DBF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v7;
      v8 = *(_QWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v8;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60(a1 + 32);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x70uLL);
    return a1;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489DC17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) != 1)
  {
    v6 = *(_QWORD *)(a2 + 40);
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      v9 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60(a1 + 32);
  }
  memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x70uLL);
  return a1;
}

uint64_t sub_2489DC270(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 144))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489DC2B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationDocument.Action()
{
  sub_2489BF7B4();
}

uint64_t sub_2489DC320()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489DC360(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489DC3F4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

void *sub_2489DC4C8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t sub_2489DC4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t sub_2489DC55C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489DC59C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationDeliveryInfo()
{
  sub_2489BF7B4();
}

uint64_t sub_2489DC600(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 112);
  if (result)
  {
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 128);
    if (result != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2489DC6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 112);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  if (v10)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v10;
    v11 = *(_QWORD *)(a2 + 128);
    sub_248A453F0();
    if (v11 != 1)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v11;
      v15 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v15;
      v16 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v16;
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      v17 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v17;
      v18 = *(_QWORD *)(a2 + 216);
      v19 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = v18;
      *(_QWORD *)(a1 + 224) = v19;
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      return a1;
    }
    v12 = (void *)(a1 + 120);
    v13 = (const void *)(a2 + 120);
    v14 = 112;
  }
  else
  {
    v12 = (void *)(a1 + 104);
    v13 = (const void *)(a2 + 104);
    v14 = 128;
  }
  memcpy(v12, v13, v14);
  return a1;
}

uint64_t sub_2489DC810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 112);
  if (!*(_QWORD *)(a1 + 112))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      v6 = *(_QWORD *)(a2 + 128);
      sub_248A453F0();
      if (v6 == 1)
      {
        v7 = (void *)(a1 + 120);
        v8 = (const void *)(a2 + 120);
LABEL_15:
        v9 = 112;
        goto LABEL_16;
      }
      goto LABEL_11;
    }
LABEL_10:
    v7 = (void *)(a1 + 104);
    v8 = (const void *)(a2 + 104);
    v9 = 128;
LABEL_16:
    memcpy(v7, v8, v9);
    return a1;
  }
  if (!v4)
  {
    sub_2489DCB44(a1 + 104);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = v13;
      v14 = *(_QWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = v14;
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60(a1 + 120);
    goto LABEL_14;
  }
  if (v5 == 1)
  {
LABEL_14:
    v7 = (void *)(a1 + 120);
    v8 = (const void *)(a2 + 120);
    goto LABEL_15;
  }
LABEL_11:
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v10 = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v10;
  v11 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v11;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489DCB44(uint64_t a1)
{
  sub_2489DB948(a1);
  return a1;
}

void *sub_2489DCB70(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE8uLL);
}

uint64_t sub_2489DCB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  size_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 112))
    goto LABEL_8;
  v9 = *(_QWORD *)(a2 + 112);
  if (!v9)
  {
    sub_2489DCB44(a1 + 104);
LABEL_8:
    v11 = (void *)(a1 + 104);
    v12 = (const void *)(a2 + 104);
    v13 = 128;
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    v10 = *(_QWORD *)(a2 + 128);
    if (v10 != 1)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v10;
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v15;
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v16;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      v17 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v18;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60(a1 + 120);
  }
  v11 = (void *)(a1 + 120);
  v12 = (const void *)(a2 + 120);
  v13 = 112;
LABEL_9:
  memcpy(v11, v12, v13);
  return a1;
}

uint64_t sub_2489DCD08(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 232))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489DCD48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 232) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 232) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationDocument()
{
  sub_2489BF7B4();
}

uint64_t sub_2489DCDCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74616C6572726F63 && a2 == 0xED000064496E6F69;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79726576696C6564 && a2 == 0xEE0064496F666E49)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2489DCF00(char a1)
{
  if ((a1 & 1) != 0)
    return 0x79726576696C6564;
  else
    return 0x74616C6572726F63;
}

uint64_t sub_2489DCF54()
{
  char *v0;

  return sub_2489DCF00(*v0);
}

uint64_t sub_2489DCF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DCDCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DCF80()
{
  sub_2489E2764();
  return sub_248A46074();
}

uint64_t sub_2489DCFA8()
{
  sub_2489E2764();
  return sub_248A46080();
}

uint64_t sub_2489DCFD0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2489BED74();
  v2 = v1;
  sub_2489C330C(&qword_254462A50);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489BA838();
  v5 = v2[4];
  sub_2489BF74C(v2, v2[3]);
  sub_2489E2764();
  sub_248A45FF0();
  if (v0)
  {
    sub_2489C0640();
  }
  else
  {
    v5 = sub_2489C940C();
    sub_2489BED8C();
    sub_2489C940C();
    sub_2489BFFB0();
    sub_248A453F0();
    sub_2489C0640();
    sub_2489BA46C();
    sub_2489BBC60();
  }
  return v5;
}

uint64_t sub_2489DD110()
{
  return sub_248A45F9C();
}

uint64_t sub_2489DD134(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1768843629 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2489DD1A8()
{
  return 0;
}

uint64_t sub_2489DD1B4()
{
  return 1768843629;
}

void sub_2489DD1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2489BED74();
  v2 = v1;
  v4 = v3;
  sub_2489C330C(&qword_254462A58);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489C1A74();
  sub_2489E27A0();
  sub_2489C07D8();
  if (!v0)
  {
    sub_2489E27DC();
    sub_2489E4470();
    sub_2489BFFB0();
    sub_2489C336C(v4, &v7);
  }
  sub_2489BCE44(v2);
  sub_2489BA808();
}

uint64_t sub_2489DD290()
{
  unint64_t v0;

  v0 = sub_248A45C60();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_2489DD2DC()
{
  return 4;
}

uint64_t sub_2489DD2E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489DD314 + 4 * byte_248A47830[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_2489DD314()
{
  return 2036625250;
}

uint64_t sub_2489DD324()
{
  return sub_2489E4544(0x69746361u);
}

uint64_t sub_2489DD334()
{
  return 1852793705;
}

uint64_t sub_2489DD344(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489DD374 + 4 * byte_248A47834[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_2489DD374()
{
  return 2036625250;
}

uint64_t sub_2489DD384()
{
  return 0x736E6F69746361;
}

uint64_t sub_2489DD39C()
{
  return 1852793705;
}

uint64_t sub_2489DD3AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_2489DCFD0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
  return result;
}

void sub_2489DD3DC()
{
  sub_2489E0E48();
}

uint64_t sub_2489DD3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DD134(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2489DD424()
{
  return sub_2489DD1A8();
}

uint64_t sub_2489DD43C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _sSQ10TipKitCoreE10isNotEqual_12checkReverseSbypSg_SbtFfA0__0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2489DD464()
{
  sub_2489E27A0();
  return sub_248A46074();
}

uint64_t sub_2489DD48C()
{
  sub_2489E27A0();
  return sub_248A46080();
}

void sub_2489DD4B4()
{
  sub_2489DD1C4();
}

void sub_2489DD4C8(char *a1)
{
  sub_2489FDD78(*a1);
}

void sub_2489DD4D4()
{
  sub_248A0FBC4();
}

void sub_2489DD4DC(uint64_t a1)
{
  char *v1;

  sub_248A0FDFC(a1, *v1);
}

void sub_2489DD4E4()
{
  sub_248A102D4();
}

uint64_t sub_2489DD4EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DD290();
  *a1 = result;
  return result;
}

void sub_2489DD518(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_2489DD2E4(*v1);
  a1[1] = v3;
  sub_2489BA7D0();
}

uint64_t sub_2489DD53C()
{
  unsigned __int8 *v0;

  return sub_2489DD344(*v0);
}

uint64_t sub_2489DD544@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DD2D8();
  *a1 = result;
  return result;
}

uint64_t sub_2489DD568()
{
  return sub_2489DD1A8();
}

uint64_t sub_2489DD584@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DD2DC();
  *a1 = result;
  return result;
}

uint64_t sub_2489DD5A8()
{
  sub_2489E3280();
  return sub_248A46074();
}

uint64_t sub_2489DD5D0()
{
  sub_2489E3280();
  return sub_248A46080();
}

void sub_2489DD5F8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[19];
  _QWORD v13[19];
  uint64_t v14;
  _QWORD v15[20];

  sub_2489BED74();
  v2 = v1;
  v10 = v3;
  v4 = sub_2489C330C(&qword_254462A38);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BFCC8();
  sub_2489BF74C(v2, v2[3]);
  sub_2489E3280();
  sub_2489C07D8();
  if (v0)
  {
    sub_2489BCE44((uint64_t)v2);
  }
  else
  {
    v9 = (uint64_t)v2;
    sub_2489BBC8C();
    sub_2489BD998(&qword_254463C60, v6, (uint64_t (*)(void))sub_2489CAD24);
    sub_248A45CD8();
    v15[0] = v13[0];
    sub_2489E32BC();
    sub_2489E4524();
    v7 = v13[0];
    v15[1] = v13[0];
    sub_2489C330C(&qword_254462990);
    LOBYTE(v12[0]) = 2;
    sub_2489E3C6C(&qword_254462998, &qword_254462990, (uint64_t (*)(void))sub_2489E32F8);
    sub_2489B71FC();
    sub_2489E4524();
    v8 = v13[0];
    v15[2] = v13[0];
    sub_2489E3334();
    sub_2489BBC94();
    sub_248A45CA8();
    sub_2489C6FC8();
    sub_2489E3370((uint64_t)&v14, (uint64_t)&v11);
    sub_2489E4570((uint64_t)v15);
    v12[0] = v15[0];
    v12[1] = v7;
    v12[2] = v8;
    sub_2489E4570((uint64_t)v12);
    sub_2489BD894();
    sub_2489E33B8(v12);
    sub_2489BBC58();
    sub_2489BA800();
    sub_2489BEE88();
    sub_2489C336C(v10, v12);
    sub_2489BCE44(v9);
    sub_2489C336C(v13, v15);
    sub_2489E3488(v13);
  }
  sub_2489BA808();
}

uint64_t sub_2489DD958(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2489DD9DC()
{
  return 0x746E65746E6F63;
}

void sub_2489DD9F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2489C330C(&qword_254462A60);
  sub_2489BEE78();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489BF74C(a1, a1[3]);
  sub_2489E3C30();
  sub_2489C0B24();
  if (!v1)
  {
    sub_2489BBC8C();
    sub_2489BD998(&qword_254462988, v5, (uint64_t (*)(void))sub_2489E3CD0);
    sub_248A45CD8();
    sub_2489C5024();
  }
  sub_2489BEE70();
  sub_2489E44C8();
}

BOOL sub_2489DDAE8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2489DDAF8()
{
  return sub_248A45F9C();
}

uint64_t sub_2489DDB1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2489DDBF8()
{
  return 2;
}

uint64_t sub_2489DDC00(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746E65746E6F63;
  else
    return 1701869940;
}

void sub_2489DDC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_2489BED74();
  v15 = v14;
  v17 = v16;
  sub_2489C330C(&qword_254462A48);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_2489C1A74();
  sub_2489E41C0();
  sub_2489C07D8();
  if (!v13)
  {
    sub_2489BB798();
    sub_2489E4470();
    sub_2489BBC8C();
    sub_2489BD998(&qword_254463C60, v20, (uint64_t (*)(void))sub_2489CAD24);
    sub_248A45CD8();
    sub_2489BFFB0();
    *(_BYTE *)v17 = a13;
    *(_QWORD *)(v17 + 8) = v21;
  }
  sub_2489BCE44(v15);
  sub_2489BA808();
}

uint64_t sub_2489DDD68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7372747461 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2489DDE3C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7372747461;
  else
    return 1701869940;
}

void sub_2489DDE68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[16];
  _QWORD v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_2489BED74();
  v3 = v2;
  v25 = v4;
  v5 = sub_2489C330C(&qword_2577A50F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_2489E450C();
  sub_2489BF74C(v3, v3[3]);
  sub_2489E1690();
  sub_2489E44B4();
  if (v0)
  {
    sub_2489C0640();
  }
  else
  {
    LOBYTE(v27[0]) = 0;
    v8 = sub_2489B6B00();
    v10 = v9;
    sub_2489BB75C();
    sub_2489B71FC();
    sub_2489E44E4();
    sub_2489E4524();
    sub_2489C22DC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v11 = v28;
    v12 = v29;
    v13 = v30;
    v14 = v31;
    v23 = v33;
    v24 = v32;
    v21 = v35;
    v22 = v34;
    v19 = v37;
    v20 = v36;
    v17 = v39;
    v18 = v38;
    v15 = v41;
    v16 = v40;
    v26[0] = v8;
    v26[1] = v10;
    v26[2] = v28;
    v26[3] = v29;
    v26[4] = v30;
    v26[5] = v31;
    v26[6] = v32;
    v26[7] = v33;
    v26[8] = v34;
    v26[9] = v35;
    v26[10] = v36;
    v26[11] = v37;
    v26[12] = v38;
    v26[13] = v39;
    v26[14] = v40;
    v26[15] = v41;
    sub_2489E16CC((uint64_t)v26);
    sub_2489BA800();
    memcpy(v25, v26, 0x80uLL);
    sub_2489C0640();
    v27[0] = v8;
    v27[1] = v10;
    v27[2] = v11;
    v27[3] = v12;
    v27[4] = v13;
    v27[5] = v14;
    v27[6] = v24;
    v27[7] = v23;
    v27[8] = v22;
    v27[9] = v21;
    v27[10] = v20;
    v27[11] = v19;
    v27[12] = v18;
    v27[13] = v17;
    v27[14] = v16;
    v27[15] = v15;
    sub_2489E1774((uint64_t)v27);
  }
  sub_2489BA808();
}

uint64_t sub_2489DE05C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7372747461 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_248A45DBC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2489DE188()
{
  return 3;
}

uint64_t sub_2489DE190(char a1)
{
  if (!a1)
    return 1701869940;
  if (a1 == 1)
    return 1954047348;
  return 0x7372747461;
}

void sub_2489DE1D4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD v30[18];
  _QWORD v31[18];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_2489BED74();
  v2 = v1;
  v4 = v3;
  sub_2489C330C(&qword_254462A68);
  sub_2489BEE78();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BF74C(v2, v2[3]);
  sub_2489E181C();
  sub_2489E44B4();
  if (v0)
  {
    sub_2489C0640();
  }
  else
  {
    v28 = v4;
    v7 = sub_2489B6B00();
    v9 = v8;
    v26 = v7;
    LOBYTE(v31[0]) = 1;
    sub_2489BED8C();
    v10 = sub_2489B6B00();
    v27 = v11;
    v25 = v10;
    sub_2489E4590();
    sub_2489BB75C();
    sub_248A453F0();
    sub_248A45CA8();
    sub_2489C5E98();
    v29 = v32;
    v12 = v35;
    v23 = v34;
    v24 = v33;
    v13 = v36;
    v21 = v38;
    v22 = v37;
    v19 = v40;
    v20 = v39;
    v17 = v42;
    v18 = v41;
    v15 = v44;
    v16 = v43;
    v14 = v45;
    v30[0] = v26;
    v30[1] = v9;
    v30[2] = v25;
    v30[3] = v27;
    v30[4] = v32;
    v30[5] = v33;
    v30[6] = v34;
    v30[7] = v35;
    v30[8] = v36;
    v30[9] = v37;
    v30[10] = v38;
    v30[11] = v39;
    v30[12] = v40;
    v30[13] = v41;
    v30[14] = v42;
    v30[15] = v43;
    v30[16] = v44;
    v30[17] = v45;
    sub_2489E1858((uint64_t)v30);
    sub_2489BBC60();
    sub_2489BA800();
    memcpy(v28, v30, 0x90uLL);
    sub_2489C0640();
    v31[0] = v26;
    v31[1] = v9;
    v31[2] = v25;
    v31[3] = v27;
    v31[4] = v29;
    v31[5] = v24;
    v31[6] = v23;
    v31[7] = v12;
    v31[8] = v13;
    v31[9] = v22;
    v31[10] = v21;
    v31[11] = v20;
    v31[12] = v19;
    v31[13] = v18;
    v31[14] = v17;
    v31[15] = v16;
    v31[16] = v15;
    v31[17] = v14;
    sub_2489E1908((uint64_t)v31);
  }
  sub_2489BA808();
}

uint64_t sub_2489DE454()
{
  return sub_248A45F9C();
}

uint64_t sub_2489DE478(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x746E656D75636F64 && a2 == 0xEA00000000006449;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746E656D75636F64 && a2 == 0xEC000000656D614ELL;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873;
        if (v8 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_248A45DBC();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_2489DE6BC()
{
  return 5;
}

uint64_t sub_2489DE6C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489DE6FC + 4 * byte_248A47838[a1]))(0x746E656D75636F64, 0xEA00000000006449);
}

uint64_t sub_2489DE70C()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_2489DE720()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_2489DE744()
{
  return 0x746E65746E6F63;
}

void sub_2489DE75C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD v28[29];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[152];
  _BYTE v41[160];

  sub_2489BED74();
  v3 = v2;
  v26 = v4;
  v27 = sub_2489C330C(&qword_254462A40);
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v6);
  sub_2489BA838();
  sub_2489BF74C(v3, v3[3]);
  sub_2489E1420();
  sub_248A45FF0();
  if (v0)
  {
    sub_2489BCE44((uint64_t)v3);
  }
  else
  {
    v7 = v1;
    v8 = sub_2489B6B00();
    v10 = v9;
    sub_2489BED8C();
    v11 = sub_2489B6B00();
    v25 = v12;
    v13 = v11;
    v24 = v8;
    LOBYTE(v29) = 2;
    sub_2489BED8C();
    v23 = sub_2489E45BC();
    LOBYTE(v28[0]) = 3;
    v15 = v14;
    v16 = sub_2489E145C();
    sub_248A453F0();
    sub_2489E4484();
    if (v16)
    {
      sub_2489C22DC(v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      sub_2489BA46C();
      sub_2489E459C();
      swift_bridgeObjectRelease();
      v17 = 0;
    }
    else
    {
      v19 = v29;
      v20 = v31;
      v22 = v32;
      v18 = sub_2489E1498();
      v21 = v30;
      sub_248A453F0();
      sub_248A453F0();
      sub_2489E4484();
      if (!v18)
      {
        sub_2489C22DC(v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        sub_2489C336C(&v28[10], v40);
        sub_2489C336C(v41, v40);
        v28[0] = v24;
        v28[1] = v10;
        v28[2] = v13;
        v28[3] = v25;
        v28[4] = v23;
        v28[5] = v15;
        v28[6] = v19;
        v28[7] = v21;
        v28[8] = v20;
        v28[9] = v22;
        sub_2489DAD2C(v28);
        sub_2489BA46C();
        sub_2489BBC58();
        sub_2489BA800();
        sub_2489BBC60();
        sub_2489BEE88();
        memcpy(v26, v28, 0xE8uLL);
        sub_2489BCE44((uint64_t)v3);
        v29 = v24;
        v30 = v10;
        v31 = v13;
        v32 = v25;
        v33 = v23;
        v34 = v15;
        v35 = v19;
        v36 = v21;
        v37 = v20;
        v38 = v22;
        sub_2489C336C(&v39, v41);
        sub_2489DAF04(&v29);
        goto LABEL_4;
      }
      sub_2489C22DC(v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      sub_2489BA46C();
      sub_2489E459C();
      swift_bridgeObjectRelease();
      sub_2489BA820();
      sub_2489BBC60();
      v17 = 1;
    }
    sub_2489BCE44((uint64_t)v3);
    sub_2489BA46C();
    sub_2489E459C();
    swift_bridgeObjectRelease();
    if (v17)
    {
      sub_2489BA820();
      sub_2489BBC60();
    }
  }
LABEL_4:
  sub_2489BA808();
}

void sub_2489DEAD4()
{
  sub_2489DD5F8();
}

uint64_t sub_2489DEAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DD958(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2489DEB14()
{
  sub_2489E3C30();
  return sub_248A46074();
}

uint64_t sub_2489DEB3C()
{
  sub_2489E3C30();
  return sub_248A46080();
}

void sub_2489DEB64(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_2489DD9F4(a1);
  if (!v2)
    *a2 = v4;
}

BOOL sub_2489DEB8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2489DDAE8(*a1, *a2);
}

void sub_2489DEB98()
{
  sub_2489E02AC();
}

uint64_t sub_2489DEBB0()
{
  return sub_2489DDAF8();
}

uint64_t sub_2489DEBB8()
{
  char *v0;

  return sub_2489DDC00(*v0);
}

uint64_t sub_2489DEBC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DDB1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DEBE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DDBF8();
  *a1 = result;
  return result;
}

uint64_t sub_2489DEC08()
{
  sub_2489E41C0();
  return sub_248A46074();
}

uint64_t sub_2489DEC30()
{
  sub_2489E41C0();
  return sub_248A46080();
}

void sub_2489DEC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_2489DDC30(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_2489DEC6C()
{
  char *v0;

  return sub_2489DDE3C(*v0);
}

uint64_t sub_2489DEC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DDD68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DEC98()
{
  sub_2489E1690();
  return sub_248A46074();
}

uint64_t sub_2489DECC0()
{
  sub_2489E1690();
  return sub_248A46080();
}

void sub_2489DECE8()
{
  sub_2489DDE68();
}

uint64_t sub_2489DECFC()
{
  char *v0;

  return sub_2489DE190(*v0);
}

uint64_t sub_2489DED04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DE05C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DED28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DE188();
  *a1 = result;
  return result;
}

uint64_t sub_2489DED4C()
{
  sub_2489E181C();
  return sub_248A46074();
}

uint64_t sub_2489DED74()
{
  sub_2489E181C();
  return sub_248A46080();
}

void sub_2489DED9C()
{
  sub_2489DE1D4();
}

void sub_2489DEDB0()
{
  sub_2489E07E4();
}

uint64_t sub_2489DEDC8()
{
  return sub_2489DE454();
}

uint64_t sub_2489DEDD0()
{
  unsigned __int8 *v0;

  return sub_2489DE6C4(*v0);
}

uint64_t sub_2489DEDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DE478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DEDFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DE6BC();
  *a1 = result;
  return result;
}

uint64_t sub_2489DEE20()
{
  sub_2489E1420();
  return sub_248A46074();
}

uint64_t sub_2489DEE48()
{
  sub_2489E1420();
  return sub_248A46080();
}

void sub_2489DEE70()
{
  sub_2489DE75C();
}

uint64_t sub_2489DEE84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x746E656D75636F64 && a2 == 0xEA00000000006449;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000248A4F760 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000018 && a2 == 0x8000000248A4F780 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = a1 == 0x4D79616C70736964 && a2 == 0xEF746E756F437861;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x7372656767697274 && a2 == 0xE800000000000000;
        if (v8 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0x69646E6F63657270 && a2 == 0xED0000736E6F6974)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v10 = sub_248A45DBC();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 6;
          else
            return 7;
        }
      }
    }
  }
}

uint64_t sub_2489DF1A0()
{
  return 7;
}

uint64_t sub_2489DF1A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489DF1E0 + 4 * byte_248A4783D[a1]))(0x746E656D75636F64, 0xEA00000000006449);
}

uint64_t sub_2489DF1E0()
{
  return 0x6D726F6674616C70;
}

unint64_t sub_2489DF1F8()
{
  return 0xD000000000000010;
}

unint64_t sub_2489DF214()
{
  return 0xD000000000000018;
}

uint64_t sub_2489DF234()
{
  return 0x4D79616C70736964;
}

uint64_t sub_2489DF258()
{
  return 0x7372656767697274;
}

uint64_t sub_2489DF270()
{
  return 0x69646E6F63657270;
}

void sub_2489DF294()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  sub_2489BED74();
  v3 = v2;
  v5 = v4;
  v6 = sub_2489C330C(&qword_254462A88);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_2489BFCC8();
  v9 = v3[3];
  v10 = v3[4];
  sub_2489BF74C(v3, v9);
  sub_2489E1310();
  sub_2489E44A0();
  if (v0)
  {
    sub_2489C0640();
  }
  else
  {
    LOBYTE(v19) = 0;
    sub_2489C6288();
    sub_2489C4F28();
    v16 = sub_2489C6288();
    v17 = v10;
    v12 = v11;
    sub_2489C330C(&qword_254463D60);
    sub_2489E4590();
    sub_2489E134C();
    sub_2489C60D0();
    sub_2489E452C();
    sub_248A45CD8();
    v18 = v12;
    v13 = v19;
    sub_2489C60D0();
    sub_2489E4550();
    v21 = sub_248A45CC0();
    LOBYTE(v19) = 4;
    sub_2489E4550();
    v15 = sub_248A45CCC();
    sub_2489E13A8();
    sub_2489E45F8();
    sub_2489E4498();
    v14 = sub_2489E13E4();
    sub_2489BD894();
    sub_2489E4498();
    sub_2489C22DC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    if (v14)
    {
      sub_2489B71DC();
      sub_2489E44DC();
      sub_2489BBC60();
      sub_2489BA820();
      sub_2489C0640();
      sub_2489B71DC();
      sub_2489E44DC();
      sub_2489BA800();
    }
    else
    {
      sub_2489BD894();
      *(_QWORD *)v5 = v17;
      *(_QWORD *)(v5 + 8) = v9;
      *(_QWORD *)(v5 + 16) = v16;
      *(_QWORD *)(v5 + 24) = v18;
      *(_QWORD *)(v5 + 32) = v13;
      *(_BYTE *)(v5 + 40) = v21 & 1;
      *(_QWORD *)(v5 + 48) = v15;
      *(_QWORD *)(v5 + 56) = v19;
      *(_BYTE *)(v5 + 64) = v20;
      *(_QWORD *)(v5 + 72) = v19;
      *(_BYTE *)(v5 + 80) = v20;
      sub_2489C0640();
      sub_2489BBC58();
      sub_2489BBC60();
      sub_2489BA800();
      sub_2489BA820();
    }
    swift_bridgeObjectRelease();
  }
  sub_2489BA808();
}

uint64_t sub_2489DF5D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6F697469646E6F63 && a2 == 0xEA0000000000736ELL;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546E696F6ALL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2489DF6D0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x657079546E696F6ALL;
  else
    return 0x6F697469646E6F63;
}

void sub_2489DF70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  sub_2489BED74();
  v2 = v1;
  v4 = v3;
  sub_2489C330C(&qword_254462AA0);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489C1A74();
  sub_2489E26EC();
  sub_2489C07D8();
  if (v0)
  {
    sub_2489BEE70();
  }
  else
  {
    v7 = sub_2489BBC8C();
    sub_2489BD998(&qword_2544629E8, v8, (uint64_t (*)(void))sub_2489E2728);
    sub_2489C6C98();
    sub_2489E44FC();
    sub_2489E4584();
    sub_2489C6C98();
    sub_2489BFA3C();
    *(_QWORD *)v4 = v7;
    *(_BYTE *)(v4 + 8) = v9;
    sub_2489BCE44(v2);
    sub_2489BA820();
  }
  sub_2489E45B0();
  sub_2489BA808();
}

uint64_t sub_2489DF848(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x657079546E696F6ALL && a2 == 0xE800000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_248A45DBC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_2489DF9C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489DF9EC + 4 * byte_248A47844[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2489DF9EC()
{
  return 1701869940;
}

uint64_t sub_2489DF9FC()
{
  return 0x657079546E696F6ALL;
}

uint64_t sub_2489DFA14()
{
  return 0x7365756C6176;
}

void sub_2489DFA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD v8[2];
  char v9;
  char v10;
  __int128 v11;
  __int128 v12;

  sub_2489BED74();
  v2 = v1;
  sub_2489C330C(&qword_254462AA8);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489C1A74();
  sub_2489E15B8();
  sub_2489C07D8();
  if (v0)
  {
    sub_2489BEE70();
  }
  else
  {
    LOBYTE(v6) = 0;
    v8[0] = sub_2489E45BC();
    v8[1] = v5;
    sub_2489E15F4();
    sub_2489C6C98();
    v9 = 0;
    sub_2489E4590();
    sub_2489BCEA0();
    sub_248A45CA8();
    v10 = 0;
    sub_2489BCE64();
    sub_2489C6C98();
    sub_2489BFFB0();
    v11 = v6;
    v12 = v7;
    sub_2489E1630((uint64_t)v8, v2);
    sub_2489BEE70();
    sub_2489E1664((uint64_t)v8);
  }
  sub_2489E45B0();
  sub_2489BA808();
}

uint64_t sub_2489DFBD4()
{
  unint64_t v0;

  v0 = sub_248A45C60();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_2489DFC1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489DFC5C + 4 * byte_248A47848[a1]))(0x65726F7453707061, 0xEF736E6F69676552);
}

uint64_t sub_2489DFC5C()
{
  return 0x53746E65746E6F63;
}

unint64_t sub_2489DFC80()
{
  return 0xD000000000000010;
}

uint64_t sub_2489DFC9C()
{
  return 0x656C6C6174736E69;
}

uint64_t sub_2489DFCC0()
{
  return sub_2489E4544(0x69676572u);
}

uint64_t sub_2489DFCD0()
{
  return 0x6570795472657375;
}

uint64_t sub_2489DFCE8()
{
  unsigned __int8 *v0;

  return sub_2489DF1A8(*v0);
}

uint64_t sub_2489DFCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DEE84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DFD14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DF1A0();
  *a1 = result;
  return result;
}

uint64_t sub_2489DFD38()
{
  sub_2489E1310();
  return sub_248A46074();
}

uint64_t sub_2489DFD60()
{
  sub_2489E1310();
  return sub_248A46080();
}

void sub_2489DFD88()
{
  sub_2489DF294();
}

uint64_t sub_2489DFD9C()
{
  char *v0;

  return sub_2489DF6D0(*v0);
}

uint64_t sub_2489DFDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DF5D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DFDC8()
{
  sub_2489E26EC();
  return sub_248A46074();
}

uint64_t sub_2489DFDF0()
{
  sub_2489E26EC();
  return sub_248A46080();
}

void sub_2489DFE18()
{
  sub_2489DF70C();
}

uint64_t sub_2489DFE2C()
{
  unsigned __int8 *v0;

  return sub_2489DF9C4(*v0);
}

uint64_t sub_2489DFE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DF848(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489DFE58()
{
  sub_2489E15B8();
  return sub_248A46074();
}

uint64_t sub_2489DFE80()
{
  sub_2489E15B8();
  return sub_248A46080();
}

void sub_2489DFEA8()
{
  sub_2489DFA28();
}

void sub_2489DFEBC(char *a1)
{
  sub_2489FDBA8(*a1);
}

void sub_2489DFEC8()
{
  unsigned __int8 *v0;

  sub_248A0FBD0(*v0);
}

void sub_2489DFED0(uint64_t a1)
{
  char *v1;

  sub_248A0FD1C(a1, *v1);
}

void sub_2489DFED8()
{
  sub_248A102E0();
}

uint64_t sub_2489DFEE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489DFBD4();
  *a1 = result;
  return result;
}

void sub_2489DFF0C(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_2489DFC1C(*v1);
  a1[1] = v3;
  sub_2489BA7D0();
}

uint64_t sub_2489DFF30()
{
  sub_2489E2818();
  return sub_248A4566C();
}

uint64_t sub_2489DFF8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546E696F6ALL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2489E0070(char a1)
{
  if ((a1 & 1) != 0)
    return 0x657079546E696F6ALL;
  else
    return 0x73656C7572;
}

void sub_2489E00A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  sub_2489BED74();
  v2 = v1;
  v4 = v3;
  sub_2489C330C(&qword_254462A70);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489C1A74();
  sub_2489E2674();
  sub_2489C07D8();
  if (v0)
  {
    sub_2489BEE70();
  }
  else
  {
    v7 = sub_2489BBC8C();
    sub_2489BD998(&qword_2544629D8, v8, (uint64_t (*)(void))sub_2489E26B0);
    sub_2489C6C98();
    sub_2489E44FC();
    sub_2489E4584();
    sub_2489C6C98();
    sub_2489BFA3C();
    *(_QWORD *)v4 = v7;
    *(_BYTE *)(v4 + 8) = v9;
    sub_2489BCE44(v2);
    sub_2489BA820();
  }
  sub_2489E45B0();
  sub_2489BA808();
}

uint64_t sub_2489E01E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_2489E02AC()
{
  sub_2489C1854();
  sub_248A45F9C();
  sub_2489BDA5C();
  sub_2489C0648();
}

uint64_t sub_2489E02DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73746E657665;
  else
    return 25705;
}

void sub_2489E0304()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v9[80];

  sub_2489BED74();
  v3 = v2;
  sub_2489C330C(&qword_254462A98);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2489BF74C(v3, v3[3]);
  sub_2489E3208();
  sub_248A45FF0();
  if (v0)
  {
    sub_2489BEE70();
  }
  else
  {
    v9[31] = 0;
    sub_2489E45BC();
    sub_2489BBC8C();
    v9[30] = 1;
    sub_2489BD998(&qword_2544629C8, v8, (uint64_t (*)(void))sub_2489E3244);
    sub_2489B71FC();
    sub_248A45CD8();
    sub_2489C09AC((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_2489BD894();
    sub_2489BEE70();
    sub_2489BBC58();
    sub_2489BA800();
  }
  sub_2489E45B0();
}

uint64_t sub_2489E0494(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x726573624F6E696DLL && a2 == 0xEF736E6F69746176;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 1701869940 && a2 == 0xE400000000000000;
        if (v8 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6B6361426B6F6F6CLL && a2 == 0xEC00000073796144;
          if (v9 || (sub_248A45DBC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000018 && a2 == 0x8000000248A4F7A0 || (sub_248A45DBC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x4B794270756F7267 && a2 == 0xEF73687461507965;
            if (v10 || (sub_248A45DBC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 1635018093 && a2 == 0xE400000000000000)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v12 = sub_248A45DBC();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 7;
              else
                return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2489E07DC()
{
  return 8;
}

void sub_2489E07E4()
{
  sub_2489C1854();
  sub_248A45F9C();
  sub_2489BDA5C();
  sub_2489C0648();
}

uint64_t sub_2489E0814(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489E083C + 4 * byte_248A4784E[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2489E083C()
{
  return 0x726573624F6E696DLL;
}

uint64_t sub_2489E0860()
{
  return 0x65756C6176;
}

uint64_t sub_2489E0874()
{
  return 1701869940;
}

uint64_t sub_2489E0884()
{
  return 0x6B6361426B6F6F6CLL;
}

unint64_t sub_2489E08A4()
{
  return 0xD000000000000018;
}

uint64_t sub_2489E08C0()
{
  return 0x4B794270756F7267;
}

uint64_t sub_2489E08E4()
{
  return 1635018093;
}

void sub_2489E08F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_2489BED74();
  v4 = v3;
  v6 = v5;
  sub_2489C330C(&qword_254462A78);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_2489E450C();
  v9 = v4[3];
  v10 = v4[4];
  sub_2489BF74C(v4, v9);
  sub_2489E3B5C();
  sub_2489E44A0();
  if (v0)
  {
    sub_2489C0640();
  }
  else
  {
    LOBYTE(v25) = 0;
    sub_2489C940C();
    sub_2489C4F28();
    v11 = sub_2489C593C();
    v27 = v12;
    v24 = v11;
    sub_2489E4590();
    sub_2489E3B98();
    sub_2489E45F8();
    sub_2489E4498();
    v22 = v25;
    v23 = v10;
    sub_2489C60D0();
    v21 = sub_248A45CCC();
    v13 = sub_2489C593C();
    v20 = v14;
    LOBYTE(v25) = 5;
    v15 = sub_2489C593C();
    v18 = v16;
    v19 = v15;
    sub_2489C330C(&qword_254463D60);
    sub_2489E134C();
    sub_2489E452C();
    sub_2489E4498();
    v17 = sub_2489E3BD4();
    sub_2489C60D0();
    sub_2489E44E4();
    sub_2489E4498();
    if (v17)
    {
      sub_2489C22DC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      sub_2489B71DC();
      sub_2489BA820();
      sub_2489BBC60();
      sub_2489C0640();
      sub_2489B71DC();
      sub_2489BA820();
      sub_2489BBC60();
    }
    else
    {
      sub_2489C22DC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      sub_2489BEC8C();
      sub_248A453F0();
      sub_2489C60D0();
      sub_2489E3C10(v25);
      sub_2489B71DC();
      sub_2489BA820();
      sub_2489BBC60();
      sub_2489BCE44((uint64_t)v4);
      sub_2489BBC60();
      sub_2489BA820();
      sub_2489B71DC();
      sub_2489E3C20(v25);
      *(_QWORD *)v6 = v23;
      *(_QWORD *)(v6 + 8) = v9;
      *(_QWORD *)(v6 + 16) = v24;
      *(_BYTE *)(v6 + 24) = v27 & 1;
      *(_QWORD *)(v6 + 32) = v22;
      *(_QWORD *)(v6 + 40) = v26;
      *(_QWORD *)(v6 + 48) = v21;
      *(_QWORD *)(v6 + 56) = v13;
      *(_BYTE *)(v6 + 64) = v20 & 1;
      *(_QWORD *)(v6 + 72) = v19;
      *(_BYTE *)(v6 + 80) = v18 & 1;
      *(_QWORD *)(v6 + 88) = v25;
      *(_QWORD *)(v6 + 96) = v25;
    }
  }
  sub_2489BA808();
}

uint64_t sub_2489E0C30(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2489E0CB4()
{
  return 0x6F666E4972657375;
}

void sub_2489E0CCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_2489C330C(&qword_254462A90);
  sub_2489BEE78();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489BF74C(a1, a1[3]);
  sub_2489E14D4();
  sub_2489C0B24();
  if (!v1)
  {
    sub_2489C330C(&qword_254463D50);
    sub_2489E1510();
    sub_2489E4524();
    sub_2489C5024();
  }
  sub_2489BEE70();
  sub_2489E44C8();
}

uint64_t sub_2489E0DAC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6156676E69727473 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_2489E0E48()
{
  sub_2489C1854();
  sub_2489C0B3C();
  sub_2489BDA5C();
  sub_2489C0648();
}

uint64_t sub_2489E0E6C()
{
  return 0x6156676E69727473;
}

uint64_t sub_2489E0E8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_2489C330C(&qword_254462A80);
  sub_2489BEE78();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BF74C(a1, a1[3]);
  sub_2489E157C();
  sub_2489C0B24();
  if (!v2)
  {
    v1 = sub_2489B6B00();
    sub_2489C5024();
  }
  sub_2489BEE70();
  return v1;
}

uint64_t sub_2489E0F5C()
{
  char *v0;

  return sub_2489E0070(*v0);
}

uint64_t sub_2489E0F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489DFF8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489E0F88()
{
  sub_2489E2674();
  return sub_248A46074();
}

uint64_t sub_2489E0FB0()
{
  sub_2489E2674();
  return sub_248A46080();
}

void sub_2489E0FD8()
{
  sub_2489E00A4();
}

void sub_2489E0FEC()
{
  sub_2489E45A4();
  sub_2489E45EC();
  sub_2489BDA5C();
  sub_2489C0648();
}

uint64_t sub_2489E1010()
{
  char *v0;

  return sub_2489E02DC(*v0);
}

uint64_t sub_2489E1018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489E01E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489E103C()
{
  sub_2489E3208();
  return sub_248A46074();
}

uint64_t sub_2489E1064()
{
  sub_2489E3208();
  return sub_248A46080();
}

void sub_2489E108C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2489E0304();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

uint64_t sub_2489E10B8()
{
  unsigned __int8 *v0;

  return sub_2489E0814(*v0);
}

uint64_t sub_2489E10C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489E0494(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489E10E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489E07DC();
  *a1 = result;
  return result;
}

uint64_t sub_2489E1108()
{
  sub_2489E3B5C();
  return sub_248A46074();
}

uint64_t sub_2489E1130()
{
  sub_2489E3B5C();
  return sub_248A46080();
}

void sub_2489E1158(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE __src[104];

  sub_2489E08F4();
  if (!v1)
    memcpy(a1, __src, 0x68uLL);
}

uint64_t sub_2489E11A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489E0C30(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2489E11CC()
{
  sub_2489E14D4();
  return sub_248A46074();
}

uint64_t sub_2489E11F4()
{
  sub_2489E14D4();
  return sub_248A46080();
}

void sub_2489E121C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_2489E0CCC(a1);
  if (!v2)
    *a2 = v4;
}

void sub_2489E1244()
{
  sub_248A45F90();
  sub_2489C0B3C();
  sub_2489BDA5C();
  sub_2489C0648();
}

uint64_t sub_2489E1270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489E0DAC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2489E1298()
{
  sub_2489E157C();
  return sub_248A46074();
}

uint64_t sub_2489E12C0()
{
  sub_2489E157C();
  return sub_248A46080();
}

uint64_t sub_2489E12E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_2489E0E8C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

unint64_t sub_2489E1310()
{
  unint64_t result;

  result = qword_254462860;
  if (!qword_254462860)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48350, &type metadata for ConstellationDeliveryInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462860);
  }
  return result;
}

unint64_t sub_2489E134C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254462A00;
  if (!qword_254462A00)
  {
    v1 = sub_2489BCD7C(&qword_254463D60);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254462A00);
  }
  return result;
}

unint64_t sub_2489E13A8()
{
  unint64_t result;

  result = qword_254462770;
  if (!qword_254462770)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48328, &unk_2519B9890);
    atomic_store(result, (unint64_t *)&qword_254462770);
  }
  return result;
}

unint64_t sub_2489E13E4()
{
  unint64_t result;

  result = qword_2544628E0;
  if (!qword_2544628E0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48300, &unk_2519B9F98);
    atomic_store(result, (unint64_t *)&qword_2544628E0);
  }
  return result;
}

unint64_t sub_2489E1420()
{
  unint64_t result;

  result = qword_254462680;
  if (!qword_254462680)
  {
    result = MEMORY[0x2495A2D34](&unk_248A482B0, &type metadata for ConstellationDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462680);
  }
  return result;
}

unint64_t sub_2489E145C()
{
  unint64_t result;

  result = qword_2544626D0;
  if (!qword_2544626D0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48288, &unk_2519B9300);
    atomic_store(result, (unint64_t *)&qword_2544626D0);
  }
  return result;
}

unint64_t sub_2489E1498()
{
  unint64_t result;

  result = qword_2544626F0;
  if (!qword_2544626F0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48260, &unk_2519B9410);
    atomic_store(result, (unint64_t *)&qword_2544626F0);
  }
  return result;
}

unint64_t sub_2489E14D4()
{
  unint64_t result;

  result = qword_254462880;
  if (!qword_254462880)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48210, &type metadata for ConstellationEventMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462880);
  }
  return result;
}

unint64_t sub_2489E1510()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_254463D58;
  if (!qword_254463D58)
  {
    v1 = sub_2489BCD7C(&qword_254463D50);
    v2 = sub_2489BCE64();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254463D58);
  }
  return result;
}

unint64_t sub_2489E157C()
{
  unint64_t result;

  result = qword_254462838;
  if (!qword_254462838)
  {
    result = MEMORY[0x2495A2D34](&unk_248A481C0, &type metadata for ConstellationEventValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462838);
  }
  return result;
}

unint64_t sub_2489E15B8()
{
  unint64_t result;

  result = qword_2544628F8;
  if (!qword_2544628F8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48170, &type metadata for ConstellationPreconditionsRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544628F8);
  }
  return result;
}

unint64_t sub_2489E15F4()
{
  unint64_t result;

  result = qword_2544628F0;
  if (!qword_2544628F0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48148, &unk_2519BA0C8);
    atomic_store(result, (unint64_t *)&qword_2544628F0);
  }
  return result;
}

uint64_t sub_2489E1630(uint64_t a1, uint64_t a2)
{
  sub_2489DB76C(a2, a1);
  return a2;
}

uint64_t sub_2489E1664(uint64_t a1)
{
  sub_2489DB740(a1);
  return a1;
}

unint64_t sub_2489E1690()
{
  unint64_t result;

  result = qword_2577A50F8;
  if (!qword_2577A50F8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A480F8, &type metadata for ConstellationDocument.Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A50F8);
  }
  return result;
}

uint64_t sub_2489E16CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 16);
  sub_248A453F0();
  sub_2489BB634(v4, v2);
  return a1;
}

uint64_t sub_2489E1774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_2489BB694(v4, v2);
  return a1;
}

unint64_t sub_2489E181C()
{
  unint64_t result;

  result = qword_254462728;
  if (!qword_254462728)
  {
    result = MEMORY[0x2495A2D34](&unk_248A480A8, &type metadata for ConstellationDocument.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462728);
  }
  return result;
}

uint64_t sub_2489E1858(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 32);
  sub_248A453F0();
  sub_248A453F0();
  sub_2489BB634(v4, v3);
  return a1;
}

uint64_t sub_2489E1908(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2489BB694(v4, v3);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ConstellationDocument.Action.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2489E1A08 + 4 * byte_248A4785B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2489E1A3C + 4 * byte_248A47856[v4]))();
}

uint64_t sub_2489E1A3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1A44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489E1A4CLL);
  return result;
}

uint64_t sub_2489E1A58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489E1A60);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2489E1A64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1A6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Action.CodingKeys()
{
  return &type metadata for ConstellationDocument.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Icon.CodingKeys()
{
  return &type metadata for ConstellationDocument.Icon.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationPreconditionsRuleInfo.CodingKeys()
{
  return &type metadata for ConstellationPreconditionsRuleInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationEventValue.CodingKeys()
{
  return &type metadata for ConstellationEventValue.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationEventMetadata.CodingKeys()
{
  return &type metadata for ConstellationEventMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ConstellationDocument.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2489E1B28 + 4 * byte_248A47865[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2489E1B5C + 4 * byte_248A47860[v4]))();
}

uint64_t sub_2489E1B5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1B64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489E1B6CLL);
  return result;
}

uint64_t sub_2489E1B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489E1B80);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2489E1B84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1B8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.CodingKeys()
{
  return &type metadata for ConstellationDocument.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ConstellationDeliveryInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2489E1BF4 + 4 * byte_248A4786F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2489E1C28 + 4 * byte_248A4786A[v4]))();
}

uint64_t sub_2489E1C28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1C30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489E1C38);
  return result;
}

uint64_t sub_2489E1C44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489E1C4CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2489E1C50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1C58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDeliveryInfo.CodingKeys()
{
  return &type metadata for ConstellationDeliveryInfo.CodingKeys;
}

uint64_t _s8CategoryOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2489E1CFC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2489E1D48 + 4 * byte_248A47879[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2489E1D7C + 4 * byte_248A47874[v4]))();
}

uint64_t sub_2489E1D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489E1D8CLL);
  return result;
}

uint64_t sub_2489E1D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489E1DA0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2489E1DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E1DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ConstellationPreconditionsType()
{
  sub_2489BF7B4();
}

uint64_t sub_2489E1DC8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

void type metadata accessor for ConstellationPreconditions()
{
  sub_2489BF7B4();
}

uint64_t sub_2489E1DF0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489E1E24()
{
  return swift_bridgeObjectRelease();
}

void sub_2489E1E2C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_248A453F0();
  sub_2489BEC70();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  sub_2489B6AF4();
}

uint64_t sub_2489E1E6C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t sub_2489E1EA8(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return sub_2489E457C(-1);
  if (a2 < 0 && *((_BYTE *)a1 + 9))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2489E457C(v2);
}

_QWORD *sub_2489E1EE4(_QWORD *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *((_BYTE *)result + 8) = 0;
    *result = a2 ^ 0x80000000;
    if (a3 < 0)
      *((_BYTE *)result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2489E4564(result, a2);
    }
    *((_BYTE *)result + 9) = 0;
    if (a2)
      return sub_2489E4564(result, a2);
  }
  return result;
}

void type metadata accessor for ConstellationTriggers()
{
  sub_2489BF7B4();
}

void *sub_2489E1F34(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

void type metadata accessor for ConstellationDocument.OutermostContent()
{
  sub_2489BF7B4();
}

uint64_t sub_2489E1F54()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2489E1F7C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

_QWORD *sub_2489E1FB8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2489E2024(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2489E2068(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489E20A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationDocument.Relationships()
{
  sub_2489BF7B4();
}

unint64_t sub_2489E20F8()
{
  unint64_t result;

  result = qword_2577A5100;
  if (!qword_2577A5100)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47B78, &unk_2519BA0C8);
    atomic_store(result, (unint64_t *)&qword_2577A5100);
  }
  return result;
}

unint64_t sub_2489E2138()
{
  unint64_t result;

  result = qword_2577A5108;
  if (!qword_2577A5108)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47C30, &type metadata for ConstellationDeliveryInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5108);
  }
  return result;
}

unint64_t sub_2489E2178()
{
  unint64_t result;

  result = qword_2577A5110;
  if (!qword_2577A5110)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47CE8, &type metadata for ConstellationDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5110);
  }
  return result;
}

unint64_t sub_2489E21B8()
{
  unint64_t result;

  result = qword_2577A5118;
  if (!qword_2577A5118)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47DA0, &type metadata for ConstellationEventMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5118);
  }
  return result;
}

unint64_t sub_2489E21F8()
{
  unint64_t result;

  result = qword_2577A5120;
  if (!qword_2577A5120)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47E58, &type metadata for ConstellationEventValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5120);
  }
  return result;
}

unint64_t sub_2489E2238()
{
  unint64_t result;

  result = qword_2577A5128;
  if (!qword_2577A5128)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47F10, &type metadata for ConstellationPreconditionsRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5128);
  }
  return result;
}

unint64_t sub_2489E2278()
{
  unint64_t result;

  result = qword_2577A5130;
  if (!qword_2577A5130)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47FC8, &type metadata for ConstellationDocument.Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5130);
  }
  return result;
}

unint64_t sub_2489E22B8()
{
  unint64_t result;

  result = qword_2577A5138;
  if (!qword_2577A5138)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48080, &type metadata for ConstellationDocument.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5138);
  }
  return result;
}

unint64_t sub_2489E22F8()
{
  unint64_t result;

  result = qword_254462738;
  if (!qword_254462738)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47FF0, &type metadata for ConstellationDocument.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462738);
  }
  return result;
}

unint64_t sub_2489E2338()
{
  unint64_t result;

  result = qword_254462730;
  if (!qword_254462730)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48018, &type metadata for ConstellationDocument.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462730);
  }
  return result;
}

unint64_t sub_2489E2378()
{
  unint64_t result;

  result = qword_2577A5140;
  if (!qword_2577A5140)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47F38, &type metadata for ConstellationDocument.Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5140);
  }
  return result;
}

unint64_t sub_2489E23B8()
{
  unint64_t result;

  result = qword_2577A5148;
  if (!qword_2577A5148)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47F60, &type metadata for ConstellationDocument.Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5148);
  }
  return result;
}

unint64_t sub_2489E23F8()
{
  unint64_t result;

  result = qword_254462908;
  if (!qword_254462908)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47E80, &type metadata for ConstellationPreconditionsRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462908);
  }
  return result;
}

unint64_t sub_2489E2438()
{
  unint64_t result;

  result = qword_254462900;
  if (!qword_254462900)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47EA8, &type metadata for ConstellationPreconditionsRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462900);
  }
  return result;
}

unint64_t sub_2489E2478()
{
  unint64_t result;

  result = qword_254462848;
  if (!qword_254462848)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47DC8, &type metadata for ConstellationEventValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462848);
  }
  return result;
}

unint64_t sub_2489E24B8()
{
  unint64_t result;

  result = qword_254462840;
  if (!qword_254462840)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47DF0, &type metadata for ConstellationEventValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462840);
  }
  return result;
}

unint64_t sub_2489E24F8()
{
  unint64_t result;

  result = qword_254462890;
  if (!qword_254462890)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47D10, &type metadata for ConstellationEventMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462890);
  }
  return result;
}

unint64_t sub_2489E2538()
{
  unint64_t result;

  result = qword_254462888;
  if (!qword_254462888)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47D38, &type metadata for ConstellationEventMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462888);
  }
  return result;
}

unint64_t sub_2489E2578()
{
  unint64_t result;

  result = qword_254462690;
  if (!qword_254462690)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47C58, &type metadata for ConstellationDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462690);
  }
  return result;
}

unint64_t sub_2489E25B8()
{
  unint64_t result;

  result = qword_254462688;
  if (!qword_254462688)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47C80, &type metadata for ConstellationDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462688);
  }
  return result;
}

unint64_t sub_2489E25F8()
{
  unint64_t result;

  result = qword_254462870;
  if (!qword_254462870)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47BA0, &type metadata for ConstellationDeliveryInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462870);
  }
  return result;
}

unint64_t sub_2489E2638()
{
  unint64_t result;

  result = qword_254462868;
  if (!qword_254462868)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47BC8, &type metadata for ConstellationDeliveryInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462868);
  }
  return result;
}

unint64_t sub_2489E2674()
{
  unint64_t result;

  result = qword_254462758;
  if (!qword_254462758)
  {
    result = MEMORY[0x2495A2D34](&unk_248A487EC, &type metadata for ConstellationTriggers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462758);
  }
  return result;
}

unint64_t sub_2489E26B0()
{
  unint64_t result;

  result = qword_2544628C0;
  if (!qword_2544628C0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A487C4, &unk_2519B9E88);
    atomic_store(result, (unint64_t *)&qword_2544628C0);
  }
  return result;
}

unint64_t sub_2489E26EC()
{
  unint64_t result;

  result = qword_2544628C8;
  if (!qword_2544628C8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48774, &type metadata for ConstellationPreconditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544628C8);
  }
  return result;
}

unint64_t sub_2489E2728()
{
  unint64_t result;

  result = qword_254462910;
  if (!qword_254462910)
  {
    result = MEMORY[0x2495A2D34](&unk_248A479A8, &unk_2519BA1E8);
    atomic_store(result, (unint64_t *)&qword_254462910);
  }
  return result;
}

unint64_t sub_2489E2764()
{
  unint64_t result;

  result = qword_2544626B8;
  if (!qword_2544626B8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48724, &type metadata for ConstellationDocument.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626B8);
  }
  return result;
}

unint64_t sub_2489E27A0()
{
  unint64_t result;

  result = qword_2544626D8;
  if (!qword_2544626D8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A486D4, &type metadata for ConstellationDocument.OutermostContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626D8);
  }
  return result;
}

unint64_t sub_2489E27DC()
{
  unint64_t result;

  result = qword_254462678;
  if (!qword_254462678)
  {
    result = MEMORY[0x2495A2D34](&unk_248A486AC, &unk_2519B9048);
    atomic_store(result, (unint64_t *)&qword_254462678);
  }
  return result;
}

unint64_t sub_2489E2818()
{
  unint64_t result;

  result = qword_2544628E8;
  if (!qword_2544628E8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47B00, &unk_2519BA0C8);
    atomic_store(result, (unint64_t *)&qword_2544628E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.OutermostContent.CodingKeys()
{
  return &type metadata for ConstellationDocument.OutermostContent.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Relationships.CodingKeys()
{
  return &type metadata for ConstellationDocument.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationPreconditions.CodingKeys()
{
  return &type metadata for ConstellationPreconditions.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationTriggers.CodingKeys()
{
  return &type metadata for ConstellationTriggers.CodingKeys;
}

_QWORD *sub_2489E2898(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_248A453F0();
  sub_2489BD894();
  return a1;
}

_QWORD *_s8SubrulesVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SubrulesVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SubrulesVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8SubrulesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationEventRuleInfo()
{
  sub_2489BF7B4();
}

void sub_2489E2A04(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) && (swift_bridgeObjectRelease(), *(_QWORD *)(a1 + 48) != 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2489BA7D0();
  }
}

void sub_2489E2A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  sub_248A453F0();
  sub_2489BA7EC();
  sub_2489BEC8C();
  if (v5)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    sub_2489BBC94();
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      v10 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v10;
      v11 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v11;
      sub_2489E45C4();
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      v12 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v12;
      v13 = *(_QWORD *)(a2 + 136);
      v14 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = v13;
      *(_QWORD *)(a1 + 144) = v14;
      sub_2489BA7EC();
      sub_2489BBC94();
      sub_2489BEC8C();
      sub_2489C60D0();
      sub_2489BD894();
      goto LABEL_7;
    }
    v7 = (void *)(a1 + 40);
    v8 = (const void *)(a2 + 40);
    v9 = 112;
  }
  else
  {
    v7 = (void *)(a1 + 24);
    v8 = (const void *)(a2 + 24);
    v9 = 128;
  }
  memcpy(v7, v8, v9);
LABEL_7:
  sub_2489BA828();
}

void sub_2489E2B50(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  sub_248A453F0();
  sub_2489BEC70();
  a1[1] = a2[1];
  sub_248A453F0();
  sub_2489BEC70();
  a1[2] = a2[2];
  sub_248A453F0();
  sub_2489BEC70();
  v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      sub_2489E460C();
      v6 = a2[6];
      sub_248A453F0();
      if (v6 == 1)
      {
        v7 = a1 + 5;
        v8 = a2 + 5;
LABEL_15:
        v9 = 112;
        goto LABEL_16;
      }
      goto LABEL_11;
    }
LABEL_10:
    v7 = a1 + 3;
    v8 = a2 + 3;
    v9 = 128;
LABEL_16:
    memcpy(v7, v8, v9);
    goto LABEL_17;
  }
  if (!v4)
  {
    sub_2489DCB44((uint64_t)(a1 + 3));
    goto LABEL_10;
  }
  sub_2489E460C();
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v5 = a2[6];
  if (a1[6] != 1)
  {
    if (v5 != 1)
    {
      sub_2489E45D8();
      sub_248A453F0();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      a1[8] = a2[8];
      sub_248A453F0();
      sub_2489BEC70();
      a1[9] = a2[9];
      a1[10] = a2[10];
      sub_248A453F0();
      sub_2489BEC70();
      sub_2489BA440();
      a1[16] = a2[16];
      sub_248A453F0();
      sub_2489BEC70();
      a1[17] = a2[17];
      a1[18] = a2[18];
      sub_248A453F0();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_2489DBC60((uint64_t)(a1 + 5));
    goto LABEL_14;
  }
  if (v5 == 1)
  {
LABEL_14:
    v7 = a1 + 5;
    v8 = a2 + 5;
    goto LABEL_15;
  }
LABEL_11:
  sub_2489E45D8();
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  sub_2489BA440();
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  sub_248A453F0();
  sub_2489BA7EC();
  sub_2489BBC94();
  sub_2489BEC8C();
  sub_2489BD894();
LABEL_17:
  sub_2489BA828();
}

void sub_2489E2D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_8;
  v4 = *(_QWORD *)(a2 + 32);
  if (!v4)
  {
    sub_2489DCB44(a1 + 24);
LABEL_8:
    v6 = (void *)(a1 + 24);
    v7 = (const void *)(a2 + 24);
    v8 = 128;
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48) != 1)
  {
    v5 = *(_QWORD *)(a2 + 48);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v5;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v10;
      swift_bridgeObjectRelease();
      sub_2489E45C4();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      v11 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_2489DBC60(a1 + 40);
  }
  v6 = (void *)(a1 + 40);
  v7 = (const void *)(a2 + 40);
  v8 = 112;
LABEL_9:
  memcpy(v6, v7, v8);
LABEL_10:
  sub_2489B6AF4();
}

uint64_t sub_2489E2E64(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return sub_2489E457C(-1);
  if (a2 < 0 && *((_BYTE *)a1 + 152))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2489E457C(v2);
}

_QWORD *sub_2489E2EA0(_QWORD *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 17) = 0u;
    *(_OWORD *)(result + 15) = 0u;
    *(_OWORD *)(result + 13) = 0u;
    *(_OWORD *)(result + 11) = 0u;
    *(_OWORD *)(result + 9) = 0u;
    *(_OWORD *)(result + 7) = 0u;
    *(_OWORD *)(result + 5) = 0u;
    *(_OWORD *)(result + 3) = 0u;
    *(_OWORD *)(result + 1) = 0u;
    *result = a2 ^ 0x80000000;
    if (a3 < 0)
      *((_BYTE *)result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_2489E4564(result, a2);
    }
    *((_BYTE *)result + 152) = 0;
    if (a2)
      return sub_2489E4564(result, a2);
  }
  return result;
}

void type metadata accessor for ConstellationDocument.MiniTipContent()
{
  sub_2489BF7B4();
}

unint64_t sub_2489E2F0C()
{
  unint64_t result;

  result = qword_2577A5150;
  if (!qword_2577A5150)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4845C, &type metadata for ConstellationTriggers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5150);
  }
  return result;
}

unint64_t sub_2489E2F4C()
{
  unint64_t result;

  result = qword_2577A5158;
  if (!qword_2577A5158)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48514, &type metadata for ConstellationPreconditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5158);
  }
  return result;
}

unint64_t sub_2489E2F8C()
{
  unint64_t result;

  result = qword_2577A5160;
  if (!qword_2577A5160)
  {
    result = MEMORY[0x2495A2D34](&unk_248A485CC, &type metadata for ConstellationDocument.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5160);
  }
  return result;
}

unint64_t sub_2489E2FCC()
{
  unint64_t result;

  result = qword_2577A5168;
  if (!qword_2577A5168)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48684, &type metadata for ConstellationDocument.OutermostContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5168);
  }
  return result;
}

unint64_t sub_2489E300C()
{
  unint64_t result;

  result = qword_2544626E8;
  if (!qword_2544626E8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A485F4, &type metadata for ConstellationDocument.OutermostContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626E8);
  }
  return result;
}

unint64_t sub_2489E304C()
{
  unint64_t result;

  result = qword_2544626E0;
  if (!qword_2544626E0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4861C, &type metadata for ConstellationDocument.OutermostContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626E0);
  }
  return result;
}

unint64_t sub_2489E308C()
{
  unint64_t result;

  result = qword_2544626C8;
  if (!qword_2544626C8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4853C, &type metadata for ConstellationDocument.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626C8);
  }
  return result;
}

unint64_t sub_2489E30CC()
{
  unint64_t result;

  result = qword_2544626C0;
  if (!qword_2544626C0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48564, &type metadata for ConstellationDocument.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626C0);
  }
  return result;
}

unint64_t sub_2489E310C()
{
  unint64_t result;

  result = qword_2544628D8;
  if (!qword_2544628D8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48484, &type metadata for ConstellationPreconditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544628D8);
  }
  return result;
}

unint64_t sub_2489E314C()
{
  unint64_t result;

  result = qword_2544628D0;
  if (!qword_2544628D0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A484AC, &type metadata for ConstellationPreconditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544628D0);
  }
  return result;
}

unint64_t sub_2489E318C()
{
  unint64_t result;

  result = qword_254462768;
  if (!qword_254462768)
  {
    result = MEMORY[0x2495A2D34](&unk_248A483CC, &type metadata for ConstellationTriggers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462768);
  }
  return result;
}

unint64_t sub_2489E31CC()
{
  unint64_t result;

  result = qword_254462760;
  if (!qword_254462760)
  {
    result = MEMORY[0x2495A2D34](&unk_248A483F4, &type metadata for ConstellationTriggers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462760);
  }
  return result;
}

unint64_t sub_2489E3208()
{
  unint64_t result;

  result = qword_2544628A8;
  if (!qword_2544628A8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48AA4, &type metadata for ConstellationEventRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544628A8);
  }
  return result;
}

unint64_t sub_2489E3244()
{
  unint64_t result;

  result = qword_254462790[0];
  if (!qword_254462790[0])
  {
    result = MEMORY[0x2495A2D34](&unk_248A48A7C, &unk_2519B99A0);
    atomic_store(result, qword_254462790);
  }
  return result;
}

unint64_t sub_2489E3280()
{
  unint64_t result;

  result = qword_254462660;
  if (!qword_254462660)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48A2C, &type metadata for ConstellationDocument.MiniTipContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462660);
  }
  return result;
}

unint64_t sub_2489E32BC()
{
  unint64_t result;

  result = qword_254462710;
  if (!qword_254462710)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48A04, &unk_2519B9520);
    atomic_store(result, (unint64_t *)&qword_254462710);
  }
  return result;
}

unint64_t sub_2489E32F8()
{
  unint64_t result;

  result = qword_254462740;
  if (!qword_254462740)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47958, &unk_2519B96E8);
    atomic_store(result, (unint64_t *)&qword_254462740);
  }
  return result;
}

unint64_t sub_2489E3334()
{
  unint64_t result;

  result = qword_254462718;
  if (!qword_254462718)
  {
    result = MEMORY[0x2495A2D34](&unk_248A47980, &unk_2519B95D8);
    atomic_store(result, (unint64_t *)&qword_254462718);
  }
  return result;
}

uint64_t sub_2489E3370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254462720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_2489E33B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[5];
  v5 = a1[4];
  v6 = a1[3];
  v3 = a1[6];
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_2489DAE44(v6, v5, v2, v3);
  return a1;
}

_QWORD *sub_2489E3488(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[5];
  v5 = a1[4];
  v6 = a1[3];
  v3 = a1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2489DB01C(v6, v5, v2, v3);
  return a1;
}

uint64_t _s10TipKitCore34ConstellationPreconditionsRuleInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2489E35A4 + 4 * byte_248A47883[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2489E35D8 + 4 * byte_248A4787E[v4]))();
}

uint64_t sub_2489E35D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E35E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489E35E8);
  return result;
}

uint64_t sub_2489E35F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489E35FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2489E3600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E3608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.MiniTipContent.CodingKeys()
{
  return &type metadata for ConstellationDocument.MiniTipContent.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationEventRuleInfo.CodingKeys()
{
  return &type metadata for ConstellationEventRuleInfo.CodingKeys;
}

uint64_t sub_2489E3634(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 96);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2489E3680(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  if (v6 != 1)
    sub_248A453F0();
  *(_QWORD *)(a1 + 96) = v6;
  return a1;
}

uint64_t sub_2489E3718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v7 = (uint64_t *)(a1 + 96);
  v8 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v8 != 1)
    {
      *v7 = v8;
      sub_248A453F0();
      return a1;
    }
    v9 = 1;
  }
  else
  {
    if (v8 != 1)
    {
      *v7 = v8;
      sub_248A453F0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489E3830(a1 + 96);
    v9 = *(_QWORD *)(a2 + 96);
  }
  *v7 = v9;
  return a1;
}

uint64_t sub_2489E3830(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_2489E3858(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t sub_2489E3860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v7 = (uint64_t *)(a1 + 96);
  v8 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    if (v8 != 1)
    {
      *v7 = v8;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489E3830(a1 + 96);
    v8 = 1;
  }
  *v7 = v8;
  return a1;
}

uint64_t sub_2489E392C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2489E396C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ConstellationEventInfo()
{
  sub_2489BF7B4();
}

void type metadata accessor for ConstellationDocument.Body()
{
  sub_2489BF7B4();
}

unint64_t sub_2489E39E0()
{
  unint64_t result;

  result = qword_2577A5170;
  if (!qword_2577A5170)
  {
    result = MEMORY[0x2495A2D34](&unk_248A488EC, &type metadata for ConstellationEventRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5170);
  }
  return result;
}

unint64_t sub_2489E3A20()
{
  unint64_t result;

  result = qword_2577A5178;
  if (!qword_2577A5178)
  {
    result = MEMORY[0x2495A2D34](&unk_248A489DC, &type metadata for ConstellationDocument.MiniTipContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5178);
  }
  return result;
}

unint64_t sub_2489E3A60()
{
  unint64_t result;

  result = qword_254462670;
  if (!qword_254462670)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48914, &type metadata for ConstellationDocument.MiniTipContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462670);
  }
  return result;
}

unint64_t sub_2489E3AA0()
{
  unint64_t result;

  result = qword_254462668;
  if (!qword_254462668)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4893C, &type metadata for ConstellationDocument.MiniTipContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462668);
  }
  return result;
}

unint64_t sub_2489E3AE0()
{
  unint64_t result;

  result = qword_2544628B8;
  if (!qword_2544628B8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4885C, &type metadata for ConstellationEventRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544628B8);
  }
  return result;
}

unint64_t sub_2489E3B20()
{
  unint64_t result;

  result = qword_2544628B0;
  if (!qword_2544628B0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48884, &type metadata for ConstellationEventRuleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544628B0);
  }
  return result;
}

unint64_t sub_2489E3B5C()
{
  unint64_t result;

  result = qword_254462778;
  if (!qword_254462778)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48CE8, &type metadata for ConstellationEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462778);
  }
  return result;
}

unint64_t sub_2489E3B98()
{
  unint64_t result;

  result = qword_254462850;
  if (!qword_254462850)
  {
    result = MEMORY[0x2495A2D34](&unk_248A479D0, &unk_2519B9B40);
    atomic_store(result, (unint64_t *)&qword_254462850);
  }
  return result;
}

unint64_t sub_2489E3BD4()
{
  unint64_t result;

  result = qword_254462898;
  if (!qword_254462898)
  {
    result = MEMORY[0x2495A2D34](&unk_248A479F8, &unk_2519B9D78);
    atomic_store(result, (unint64_t *)&qword_254462898);
  }
  return result;
}

uint64_t sub_2489E3C10(uint64_t result)
{
  if (result != 1)
    return sub_248A453F0();
  return result;
}

uint64_t sub_2489E3C20(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2489E3C30()
{
  unint64_t result;

  result = qword_2544626F8;
  if (!qword_2544626F8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48C98, &type metadata for ConstellationDocument.Body.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626F8);
  }
  return result;
}

uint64_t sub_2489E3C6C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = sub_2489BCD7C(a2);
    v7 = a3();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE12D0], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2489E3CD0()
{
  unint64_t result;

  result = qword_2544626B0;
  if (!qword_2544626B0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48C70, &unk_2519B91F0);
    atomic_store(result, (unint64_t *)&qword_2544626B0);
  }
  return result;
}

uint64_t _s7OptionsV10CodingKeysOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s10TipKitCore23ConstellationEventValueV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2489E3D9C + 4 * byte_248A47888[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2489E3DBC + 4 * byte_248A4788D[v4]))();
}

_BYTE *sub_2489E3D9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2489E3DBC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2489E3DC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2489E3DCC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2489E3DD4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2489E3DDC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Body.CodingKeys()
{
  return &type metadata for ConstellationDocument.Body.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ConstellationEventInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConstellationEventInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2489E3ECC + 4 * byte_248A47897[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2489E3F00 + 4 * byte_248A47892[v4]))();
}

uint64_t sub_2489E3F00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E3F08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489E3F10);
  return result;
}

uint64_t sub_2489E3F1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489E3F24);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2489E3F28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E3F30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationEventInfo.CodingKeys()
{
  return &type metadata for ConstellationEventInfo.CodingKeys;
}

uint64_t sub_2489E3F4C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489E3F80(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2489E3FC0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2489E3FF8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_2489E457C(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_2489E457C(v2);
}

void type metadata accessor for ConstellationDocument.BodyContent()
{
  sub_2489BF7B4();
}

unint64_t sub_2489E4044()
{
  unint64_t result;

  result = qword_2577A5180;
  if (!qword_2577A5180)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48B90, &type metadata for ConstellationEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5180);
  }
  return result;
}

unint64_t sub_2489E4084()
{
  unint64_t result;

  result = qword_2577A5188;
  if (!qword_2577A5188)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48C48, &type metadata for ConstellationDocument.Body.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5188);
  }
  return result;
}

unint64_t sub_2489E40C4()
{
  unint64_t result;

  result = qword_254462708;
  if (!qword_254462708)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48BB8, &type metadata for ConstellationDocument.Body.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462708);
  }
  return result;
}

unint64_t sub_2489E4104()
{
  unint64_t result;

  result = qword_254462700;
  if (!qword_254462700)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48BE0, &type metadata for ConstellationDocument.Body.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462700);
  }
  return result;
}

unint64_t sub_2489E4144()
{
  unint64_t result;

  result = qword_254462788;
  if (!qword_254462788)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48B00, &type metadata for ConstellationEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462788);
  }
  return result;
}

unint64_t sub_2489E4184()
{
  unint64_t result;

  result = qword_254462780;
  if (!qword_254462780)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48B28, &type metadata for ConstellationEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462780);
  }
  return result;
}

unint64_t sub_2489E41C0()
{
  unint64_t result;

  result = qword_254462698;
  if (!qword_254462698)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48DF0, &type metadata for ConstellationDocument.BodyContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254462698);
  }
  return result;
}

uint64_t _s14descr2519BBF29C12SubpredicateO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s10TipKitCore21ConstellationDocumentV4IconV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2489E42D0 + 4 * byte_248A478A1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2489E4304 + 4 * byte_248A4789C[v4]))();
}

uint64_t sub_2489E4304(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E430C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489E4314);
  return result;
}

uint64_t sub_2489E4320(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489E4328);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2489E432C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489E4334(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2489E4340(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.BodyContent.CodingKeys()
{
  return &type metadata for ConstellationDocument.BodyContent.CodingKeys;
}

unint64_t sub_2489E4360()
{
  unint64_t result;

  result = qword_2577A5190;
  if (!qword_2577A5190)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48DC8, &type metadata for ConstellationDocument.BodyContent.CodingKeys);
    atomic_store(result, &qword_2577A5190);
  }
  return result;
}

unint64_t sub_2489E43A0()
{
  unint64_t result;

  result = qword_2544626A8;
  if (!qword_2544626A8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48D38, &type metadata for ConstellationDocument.BodyContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626A8);
  }
  return result;
}

unint64_t sub_2489E43E0()
{
  unint64_t result;

  result = qword_2544626A0;
  if (!qword_2544626A0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48D60, &type metadata for ConstellationDocument.BodyContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2544626A0);
  }
  return result;
}

uint64_t sub_2489E4470()
{
  return sub_248A45CD8();
}

uint64_t sub_2489E4484()
{
  return sub_248A45CD8();
}

uint64_t sub_2489E4498()
{
  return sub_248A45CA8();
}

uint64_t sub_2489E44A0()
{
  return sub_248A45FF0();
}

uint64_t sub_2489E44B4()
{
  return sub_248A45FF0();
}

uint64_t sub_2489E44DC()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_2489E44FC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 83) = 1;
  return sub_2489BCEA0();
}

uint64_t sub_2489E4524()
{
  return sub_248A45CA8();
}

uint64_t sub_2489E452C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489E4544(unsigned int a1)
{
  return a1 | 0x736E6F00000000;
}

uint64_t sub_2489E4550()
{
  uint64_t v0;

  return v0 - 96;
}

_QWORD *sub_2489E4564(_QWORD *result, int a2)
{
  *result = (a2 - 1);
  return result;
}

uint64_t sub_2489E4570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2489E3370(v1 + 32, a1 + 24);
}

uint64_t sub_2489E457C@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_2489E4584()
{
  return sub_248A453F0();
}

void sub_2489E4590()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
}

uint64_t sub_2489E459C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489E45A4()
{
  return sub_248A45F90();
}

uint64_t sub_2489E45BC()
{
  return sub_248A45CB4();
}

void sub_2489E45C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + 88);
  *(_BYTE *)(v0 + 96) = *(_BYTE *)(v1 + 96);
}

uint64_t sub_2489E45D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  result = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 48) = result;
  return result;
}

uint64_t sub_2489E45EC()
{
  return sub_248A45F9C();
}

uint64_t sub_2489E460C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  result = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 32) = result;
  return result;
}

uint64_t sub_2489E4620()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2489E4628()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2489E46A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || v7 + ((v6 + 32) & (unint64_t)~v6) + 1 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    v15 = ((unint64_t)v13 + v6 + 16) & ~v6;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_248A453F0();
    sub_248A453F0();
    v16(v14, v15, v4);
    *(_BYTE *)(v14 + v7) = *(_BYTE *)(v15 + v7);
  }
  return a1;
}

uint64_t sub_2489E47A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_2489E47FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  sub_248A453F0();
  sub_248A453F0();
  v12(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

_QWORD *sub_2489E48A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v7 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v10, v11);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

_OWORD *sub_2489E496C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 16) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  *(_BYTE *)(v8 + *(_QWORD *)(v6 + 64)) = *(_BYTE *)(v9 + *(_QWORD *)(v6 + 64));
  return a1;
}

_QWORD *sub_2489E49F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v7 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v8 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v9 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v9 + 64));
  return a1;
}

uint64_t sub_2489E4A9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = *(_QWORD *)(v5 + 64) + ((v8 + 32) & ~v8) + 1;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return sub_2489BE834((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8, v6, v4);
      v16 = *(_QWORD *)(a1 + 8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2489E4B74 + 4 * byte_248A48E60[(v10 - 1)]))();
}

void sub_2489E4BE8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64)
     + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + 1;
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for ConstellationParameter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489BD200(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConstellationParameter);
}

uint64_t sub_2489E4DF0(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_2489E4DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t sub_2489E4E18(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2495A2D34](&unk_248A48F28, a1);
  return CoreParameterProtocol.description.getter(a1, v2);
}

uint64_t sub_2489E4E4C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_2489E4E54(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_2489E4E5C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x2495A2D34](&unk_248A48F00);
  result = MEMORY[0x2495A2D34](&unk_248A48F44, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2489E4EA0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2495A2D34](&unk_248A48EC8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2489E4ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, _OWORD *a5@<X8>)
{
  char v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  char v18;
  _QWORD v19[2];
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  ValueMetadata *v24;
  unint64_t v25;
  id v26;
  char v27;

  v8 = *a4;
  v27 = 1;
  if (*(_QWORD *)(a3 + 16))
    v9 = (v8 - 7) > 1u;
  else
    v9 = 1;
  if (v9)
  {
    sub_2489BBC58();
    result = swift_bridgeObjectRelease();
    *(_OWORD *)((char *)a5 + 57) = 0u;
    a5[2] = 0u;
    a5[3] = 0u;
    *a5 = 0u;
    a5[1] = 0u;
  }
  else
  {
    v11 = sub_2489E8C3C(a3);
    sub_2489E6B60(a1, a2, v8, v11);
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_2489BBC58();
    v19[0] = a1;
    v19[1] = v13;
    v18 = v8;
    v14 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
    v26 = CoreRule.Predicate.init(compoundOperation:)(&v18);
    v20 = 1;
    sub_248A453F0();
    v15 = sub_2489E8C3C(a3);
    swift_bridgeObjectRelease();
    v24 = &type metadata for CoreRule.Subrules;
    v16 = sub_2489E5154();
    v21 = a1;
    v22 = v13;
    v25 = v16;
    v23 = v15;
    sub_2489E5190((uint64_t)v19, (uint64_t)a5);
    return sub_2489E51C4((uint64_t)v19);
  }
  return result;
}

void sub_2489E5000(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_2489E500C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2489C4880(v1 + 24, a1);
}

id sub_2489E5018()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

void sub_2489E5020(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

uint64_t sub_2489E5030(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_248A45DBC();
}

uint64_t sub_2489E5060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD *)(a4 + 56);
  *(_QWORD *)(v5 + 32) = a5;
  *(_QWORD *)(v5 + 40) = v6;
  *(_BYTE *)(v5 + 56) = *(_BYTE *)(a4 + 64);
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(a4 + 72);
  *(_BYTE *)(v5 + 57) = *(_BYTE *)(a4 + 80);
  return swift_task_switch();
}

uint64_t sub_2489E5098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;

  v2 = *(_QWORD *)(v1 + 48);
  if (v2)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(v2 + 16))
    {
      v4 = sub_2489C3994();
      sub_2489E6D40(v4, v5, v6, v7, v8);
      if (v0)
        return (*(uint64_t (**)(void))(v1 + 8))();
      sub_2489C22E4();
      v3 = v15;
    }
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  v9 = *(_QWORD *)(v1 + 40);
  if (v9 && *(_QWORD *)(v9 + 16))
  {
    v10 = sub_2489C3994();
    sub_2489E5C24(v10, v11, v12, v13);
    if (v0)
    {
      sub_2489BBC58();
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
    sub_2489C22E4();
    v3 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v3);
}

unint64_t sub_2489E5154()
{
  unint64_t result;

  result = qword_2544625F8;
  if (!qword_2544625F8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Subrules, &type metadata for CoreRule.Subrules);
    atomic_store(result, (unint64_t *)&qword_2544625F8);
  }
  return result;
}

uint64_t sub_2489E5190(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ConstellationRule(a2, a1);
  return a2;
}

uint64_t sub_2489E51C4(uint64_t a1)
{
  destroy for ConstellationRule(a1);
  return a1;
}

void destroy for ConstellationRule(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_2489BCE44(a1 + 24);

}

uint64_t initializeWithCopy for ConstellationRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  void *v9;
  id v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  sub_248A453F0();
  v8(a1 + 24, v5, v7);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = v9;
  return a1;
}

uint64_t assignWithCopy for ConstellationRule(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_2489E5324((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  v4 = *(void **)(a2 + 64);
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t *sub_2489E5324(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for ConstellationRule(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ConstellationRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_2489BCE44(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConstellationRule(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConstellationRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationRule()
{
  return &type metadata for ConstellationRule;
}

unint64_t sub_2489E55A4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_2489E55D0();
  result = sub_2489E560C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2489E55D0()
{
  unint64_t result;

  result = qword_254462630;
  if (!qword_254462630)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48FAC, &type metadata for ConstellationRule);
    atomic_store(result, (unint64_t *)&qword_254462630);
  }
  return result;
}

unint64_t sub_2489E560C()
{
  unint64_t result;

  result = qword_254462638;
  if (!qword_254462638)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48F74, &type metadata for ConstellationRule);
    atomic_store(result, (unint64_t *)&qword_254462638);
  }
  return result;
}

uint64_t sub_2489E5648(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 *v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  _QWORD v25[4];
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _BYTE v30[32];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[2];
  uint64_t v38;
  _OWORD *v39;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v38 = MEMORY[0x24BEE4AF8];
    sub_248A029A0(0, v3, 0);
    v5 = v38;
    v39 = v37;
    v6 = (uint64_t *)(a1 + 40);
    v7 = &qword_254464AF0;
    v24 = MEMORY[0x24BEE4AD8] + 8;
    do
    {
      v8 = v7;
      v10 = *(v6 - 1);
      v9 = *v6;
      v11 = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain_n();
      if (v11 && (v12 = sub_2489C28D0(v10, v9), (v13 & 1) != 0))
      {
        sub_2489C81EC(*(_QWORD *)(a2 + 56) + 32 * v12, (uint64_t)&v31);
        *((_QWORD *)&v34 + 1) = &type metadata for AnyCodable;
        v14 = swift_allocObject();
        *(_QWORD *)&v33 = v14;
        v15 = v32;
        *(_OWORD *)(v14 + 16) = v31;
        *(_OWORD *)(v14 + 32) = v15;
        BYTE8(v36) = 0;
        *((_QWORD *)&v35 + 1) = v10;
        *(_QWORD *)&v36 = v9;
        LOBYTE(v35) = 0;
        sub_2489BE648((uint64_t)&v33, (uint64_t)v30);
        sub_2489BE648((uint64_t)v30, (uint64_t)&v28);
        if (v29)
        {
          sub_2489C3288(&v28, &v26);
          v25[3] = v24;
          v25[0] = swift_allocObject();
          sub_2489C3288(&v26, (_OWORD *)(v25[0] + 16));
          v7 = v8;
          sub_2489C32D0((uint64_t)v30, v8);
          v16 = (__int128 *)v25;
        }
        else
        {
          v27 = MEMORY[0x24BEE0D00];
          *(_QWORD *)&v26 = 0x3E6C6C756E3CLL;
          *((_QWORD *)&v26 + 1) = 0xE600000000000000;
          v7 = v8;
          sub_2489C32D0((uint64_t)v30, v8);
          v16 = &v26;
        }
        sub_2489C3288(v16, &v31);
        sub_2489C32D0((uint64_t)&v33, v7);
      }
      else
      {
        v33 = 0u;
        v34 = 0u;
        BYTE8(v36) = 0;
        *((_QWORD *)&v35 + 1) = v10;
        *(_QWORD *)&v36 = v9;
        LOBYTE(v35) = 0;
        v7 = v8;
        sub_2489C32D0((uint64_t)&v33, v8);
        v31 = 0u;
        v32 = 0u;
      }
      sub_2489E65F8((uint64_t)&v31, (uint64_t)v39, &qword_254464700);
      swift_bridgeObjectRelease();
      v38 = v5;
      v18 = *(_QWORD *)(v5 + 16);
      v17 = *(_QWORD *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_248A029A0((char *)(v17 > 1), v18 + 1, 1);
        v7 = v8;
        v5 = v38;
      }
      v6 += 2;
      *(_QWORD *)(v5 + 16) = v18 + 1;
      v19 = (_OWORD *)(v5 + (v18 << 6));
      v20 = v35;
      v21 = v36;
      v22 = v37[1];
      v19[4] = v37[0];
      v19[5] = v22;
      v19[2] = v20;
      v19[3] = v21;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_2489E58F4(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v16[7];
  _BYTE v17[7];
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_248A029A0(0, v1, 0);
    v3 = v18;
    v4 = (unint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_248A453F0();
      v7 = sub_248A455A0();
      sub_248A453F0();
      if ((v7 & 1) != 0)
      {
        v8 = sub_248A4554C();
        v9 = sub_248A4209C(v8, v5, v6);
        v5 = MEMORY[0x2495A1C9C](v9);
        v11 = v10;
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = v6;
      }
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      if (v13 >= v12 >> 1)
        sub_248A029A0((char *)(v12 > 1), v13 + 1, 1);
      v4 += 2;
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = v18 + (v13 << 6);
      *(_BYTE *)(v14 + 32) = 9;
      *(_DWORD *)(v14 + 33) = *(_DWORD *)v17;
      *(_DWORD *)(v14 + 36) = *(_DWORD *)&v17[3];
      *(_QWORD *)(v14 + 40) = v5;
      *(_QWORD *)(v14 + 48) = v11;
      *(_BYTE *)(v14 + 56) = 1;
      *(_DWORD *)(v14 + 60) = *(_DWORD *)&v16[3];
      *(_DWORD *)(v14 + 57) = *(_DWORD *)v16;
      *(_OWORD *)(v14 + 64) = 0u;
      *(_OWORD *)(v14 + 80) = 0u;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

void sub_2489E5A98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = a1 + 40;
    v5 = MEMORY[0x24BEE4AF8];
    v14 = a1 + 40;
    do
    {
      v15 = v5;
      v6 = (uint64_t *)(v4 + 16 * v3);
      v7 = v3;
      while (1)
      {
        if (v7 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v9 = *(v6 - 1);
        v8 = *v6;
        v3 = v7 + 1;
        sub_248A453F0();
        if ((sub_248A455A0() & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        v6 += 2;
        ++v7;
        if (v2 == v3)
          goto LABEL_13;
      }
      v5 = v15;
      v17 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489C74D8();
        v5 = v15;
      }
      v10 = *(_QWORD *)(v5 + 16);
      v11 = v10 + 1;
      if (v10 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        v16 = v10 + 1;
        v13 = *(_QWORD *)(v5 + 16);
        sub_2489C74D8();
        v11 = v16;
        v10 = v13;
        v5 = v17;
      }
      *(_QWORD *)(v5 + 16) = v11;
      v12 = v5 + 16 * v10;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v8;
      v4 = v14;
    }
    while (v2 - 1 != v7);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_2489E5C24(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v45[10];
  __int128 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  ValueMetadata *v54;
  unint64_t v55;
  id v56;
  char v57;
  _OWORD v58[5];
  _BYTE __dst[104];
  _BYTE v60[16];
  _BYTE v61[16];
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  char v67;

  if (!a3)
    return MEMORY[0x24BEE4AF8];
  v4 = *a4;
  v40 = *(_QWORD *)(a3 + 16);
  if (v40)
  {
    v66 = *a4;
    v39 = a3 + 32;
    swift_bridgeObjectRetain_n();
    v5 = 0;
    v6 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v7 = *(_QWORD *)(v39 + 24 * v5 + 16);
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        v41 = v5;
        v42 = v6;
        swift_bridgeObjectRetain_n();
        sub_248A453F0();
        v9 = 32;
        v10 = MEMORY[0x24BEE4AF8];
        do
        {
          memcpy(__dst, (const void *)(v7 + v9), sizeof(__dst));
          sub_2489E65F8((uint64_t)&__dst[32], (uint64_t)v60, &qword_254462858);
          sub_2489E65F8((uint64_t)v60, (uint64_t)&v64, &qword_254462858);
          v11 = v65;
          if (v65)
          {
            v12 = v64;
            v13 = v7;
            sub_2489E65F8((uint64_t)&__dst[16], (uint64_t)v61, &qword_254463A78);
            sub_2489E65F8((uint64_t)v61, (uint64_t)&v62, &qword_254463A78);
            if (v63 != 1)
            {
              v14 = v62;
              v54 = &type metadata for ConstellationEvent;
              v55 = sub_2489D9288();
              v51 = v12;
              v52 = v11;
              sub_2489E64DC((uint64_t)__dst);
              sub_248A453F0();
              swift_retain();
              sub_2489E6530((uint64_t)v60);
              v15 = sub_2489E61F4((uint64_t)__dst);
              v16 = sub_2489E6344((uint64_t)__dst);
              v46 = xmmword_248A48FF0;
              v47 = 0;
              v67 = 5;
              v45[3] = MEMORY[0x24BEE1768];
              v45[0] = v14;
              v17 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
              v18 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)((uint64_t *)&v46, &v67, (uint64_t)v45, v15, v16);
              sub_2489E6558((uint64_t)__dst);
              v57 = 1;
              sub_2489E69BC(a1, a2, (uint64_t)v18, &v51);
              v20 = v19;
              v22 = v21;
              swift_release();
              swift_bridgeObjectRelease();
              v48 = v20;
              v49 = v22;
              v50 = 2;
              v56 = v18;
              sub_2489C14BC(v45, &v48);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_2489C22F0();
                v10 = v24;
              }
              v23 = *(_QWORD *)(v10 + 16);
              if (v23 >= *(_QWORD *)(v10 + 24) >> 1)
              {
                sub_2489C22F0();
                v10 = v25;
              }
              *(_QWORD *)(v10 + 16) = v23 + 1;
              sub_2489C14BC((void *)(v10 + 80 * v23 + 32), v45);
              v7 = v13;
            }
          }
          v9 += 104;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease_n();
        v5 = v41;
        v6 = v42;
      }
      else
      {
        sub_248A453F0();
        sub_248A453F0();
        v10 = MEMORY[0x24BEE4AF8];
      }
      v26 = *(_QWORD *)(v10 + 16);
      if (v26)
      {
        if (v26 != 1)
        {
          v57 = 1;
          sub_2489C14C4();
          v27 = sub_2489E8C3C(v10);
          sub_2489E6B60(a1, v5, 7, v27);
          v29 = v28;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v48 = a1;
          v49 = v29;
          LOBYTE(v45[0]) = 7;
          v30 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
          v56 = CoreRule.Predicate.init(compoundOperation:)((char *)v45);
          v50 = 1;
          sub_248A453F0();
          v31 = sub_2489E8C3C(v10);
          swift_bridgeObjectRelease();
          v54 = &type metadata for CoreRule.Subrules;
          v32 = sub_2489E5154();
          v51 = a1;
          v52 = v29;
          v55 = v32;
          v53 = v31;
          sub_2489E5190((uint64_t)&v48, (uint64_t)v58);
          sub_2489E51C4((uint64_t)&v48);
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        sub_2489E5190(v10 + 32, (uint64_t)v58);
      }
      else
      {
        memset(v58, 0, 73);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_22:
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v58[0] + 1))
      {
        sub_2489C14BC(&v48, v58);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2489BFFC0();
          v6 = v34;
        }
        v33 = *(_QWORD *)(v6 + 16);
        if (v33 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_2489BFFC0();
          v6 = v35;
        }
        *(_QWORD *)(v6 + 16) = v33 + 1;
        sub_2489C14BC((void *)(v6 + 80 * v33 + 32), &v48);
      }
      else
      {
        sub_2489C32D0((uint64_t)v58, &qword_254462648);
      }
      if (++v5 == v40)
      {
        swift_bridgeObjectRelease_n();
        v4 = v66;
        goto LABEL_32;
      }
    }
  }
  v6 = MEMORY[0x24BEE4AF8];
LABEL_32:
  v36 = *(_QWORD *)(v6 + 16);
  if (!v36)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  if (v36 != 1 && (sub_2489FE0FC(v4, 7) & 1) == 0)
  {
    if ((sub_2489FE0FC(v4, 8) & 1) != 0)
    {
      sub_2489C330C(&qword_2577A51A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_248A47480;
      LOBYTE(v58[0]) = v4;
      sub_2489C14C4();
      sub_2489E4ECC(a1, v4, v6, (char *)v58, (_OWORD *)(inited + 32));
      v6 = sub_2489E72E0(inited);
      swift_setDeallocating();
      sub_2489E8230();
      return v6;
    }
    goto LABEL_37;
  }
  return v6;
}

uint64_t sub_2489E61F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[8];
  uint64_t v13;

  sub_2489E65F8(a1 + 96, (uint64_t)&v9, &qword_2544628A0);
  sub_2489E65F8((uint64_t)&v9, (uint64_t)&v10, &qword_2544628A0);
  if (v10 == 1
    || (v11 = v10,
        sub_2489E65F8((uint64_t)&v11, (uint64_t)v12, &qword_2577A51A8),
        sub_2489E65F8((uint64_t)v12, (uint64_t)&v13, &qword_2577A51A8),
        (v2 = v13) == 0))
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_248A453F0();
    sub_248A43A70();
    v4 = v3;
    sub_2489E65A8(&v9);
    sub_2489E65D0(&v9);
    v5 = sub_2489E5648(v4, v2);
    swift_release();
  }
  if (*(_QWORD *)(a1 + 88))
  {
    v6 = sub_248A453F0();
    sub_2489E5A98(v6);
    sub_2489E58F4(v7);
    swift_bridgeObjectRelease();
  }
  sub_2489EA8E8();
  return v5;
}

uint64_t sub_2489E6344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];
  _BYTE v19[16];
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;

  sub_2489E65F8(a1 + 56, (uint64_t)v19, &qword_254463A78);
  sub_2489E65F8((uint64_t)v19, (uint64_t)&v20, &qword_254463A78);
  if ((v21 & 1) != 0)
  {
    v2 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v3 = sub_2489D9038(v20);
    v5 = v4;
    sub_2489EC8E8();
    v2 = v6;
    v7 = *(_QWORD *)(v6 + 16);
    if (v7 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      sub_2489EC8E8();
      v2 = v15;
    }
    *(_QWORD *)(v2 + 16) = v7 + 1;
    v8 = v2 + 24 * v7;
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v5;
    *(_BYTE *)(v8 + 48) = 0;
  }
  sub_2489E65F8(a1 + 72, (uint64_t)v18, &qword_254463A78);
  sub_2489E65F8((uint64_t)v18, (uint64_t)&v22, &qword_254463A78);
  if ((v23 & 1) == 0)
  {
    v9 = sub_2489D9038(v22);
    v11 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2489EC8E8();
      v2 = v16;
    }
    v12 = *(_QWORD *)(v2 + 16);
    if (v12 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      sub_2489EC8E8();
      v2 = v17;
    }
    *(_QWORD *)(v2 + 16) = v12 + 1;
    v13 = v2 + 24 * v12;
    *(_QWORD *)(v13 + 32) = v9;
    *(_QWORD *)(v13 + 40) = v11;
    *(_BYTE *)(v13 + 48) = 1;
  }
  return v2;
}

uint64_t sub_2489E64DC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 96);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_2489E3C10(v2);
  return a1;
}

uint64_t sub_2489E6530(uint64_t a1)
{
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489E6558(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2489E3C20(v2);
  return a1;
}

uint64_t *sub_2489E65A8(uint64_t *a1)
{
  sub_2489E3C20(*a1);
  return a1;
}

uint64_t *sub_2489E65D0(uint64_t *a1)
{
  sub_2489E3C10(*a1);
  return a1;
}

uint64_t sub_2489E65F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_2489C330C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2489E663C()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2489E6664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result;
  unint64_t v9;
  _QWORD v10[4];
  uint64_t v11;
  unint64_t v12;

  v11 = 0;
  v12 = 0xE000000000000000;
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  v10[3] = sub_2489C330C(&qword_254462A08);
  v10[0] = MEMORY[0x24BEE1328];
  sub_248A45BAC();
  sub_2489BCE44((uint64_t)v10);
  sub_248A4557C();
  sub_248A4557C();
  result = swift_release();
  v9 = v12;
  *(_QWORD *)a4 = v11;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = a1;
  *(_QWORD *)(a4 + 24) = a2;
  *(_BYTE *)(a4 + 32) = a3;
  *(_BYTE *)(a4 + 33) = 1;
  return result;
}

uint64_t sub_2489E6778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  unint64_t v9;
  _QWORD v10[4];
  uint64_t v11;
  unint64_t v12;

  v11 = 0;
  v12 = 0xE000000000000000;
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  v10[3] = sub_2489C330C(&qword_254462A10);
  v10[0] = MEMORY[0x24BEE1768];
  sub_248A45BAC();
  sub_2489BCE44((uint64_t)v10);
  sub_248A4557C();
  sub_248A4557C();
  result = swift_release();
  v9 = v12;
  *(_QWORD *)a4 = v11;
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = a1;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  *(_BYTE *)(a4 + 40) = 1;
  return result;
}

uint64_t sub_2489E688C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  _QWORD v13[4];
  uint64_t v14;
  unint64_t v15;

  v14 = 0;
  v15 = 0xE000000000000000;
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  v10 = sub_2489C330C(&qword_254463A78);
  v13[3] = sub_2489C330C(&qword_2577A51C0);
  v13[0] = v10;
  sub_248A45BAC();
  sub_2489BCE44((uint64_t)v13);
  sub_248A4557C();
  sub_248A4557C();
  result = swift_release();
  v12 = v15;
  *(_QWORD *)a5 = v14;
  *(_QWORD *)(a5 + 8) = v12;
  *(_QWORD *)(a5 + 16) = a1;
  *(_QWORD *)(a5 + 24) = a2;
  *(_QWORD *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 1;
  return result;
}

void sub_2489E69BC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;

  sub_248A453F0();
  sub_2489BFFCC();
  v5 = a4[3];
  v6 = a4[4];
  sub_2489BE100(a4, v5);
  sub_2489BBC08(v5, v6);
  __asm { BR              X10 }
}

uint64_t sub_2489E6A48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_2489BFFCC();
  v1 = v0[3];
  v2 = v0[4];
  sub_2489BE100(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_2489BFFCC();
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  return v4;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2489E6B60(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  sub_248A453F0();
  sub_2489BFFCC();
  LOBYTE(v17[0]) = a3;
  CoreRule.Predicate.Operator.rawValue.getter();
  sub_248A4557C();
  sub_2489BDA70();
  sub_248A4557C();
  v6 = *(_QWORD *)(a4 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_2489C74D8();
    v8 = a4 + 32;
    v7 = v20;
    do
    {
      sub_2489C4880(v8, (uint64_t)v17);
      v9 = v18;
      v10 = v19;
      sub_2489BE100(v17, v18);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      v13 = v12;
      sub_2489BCE44((uint64_t)v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489C74D8();
        v7 = v20;
      }
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2489C1A94(v14);
        sub_2489C74D8();
        v7 = v20;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  v17[0] = v7;
  sub_2489C330C(&qword_254463D60);
  sub_2489C5D3C((unint64_t *)&qword_2544629F8, &qword_254463D60, MEMORY[0x24BEE12B0]);
  sub_248A4548C();
  sub_2489BDA70();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
}

uint64_t sub_2489E6D40(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t inited;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  ValueMetadata *v91;
  unint64_t v92;
  id v93;
  char v94;
  _OWORD v95[5];
  _BYTE v96[16];
  char v97;
  _QWORD v98[7];

  v98[6] = a5;
  if (!a3)
    return MEMORY[0x24BEE4AF8];
  v8 = *a4;
  v9 = MEMORY[0x24BEE4AF8];
  v58 = *(_QWORD *)(a3 + 16);
  if (!v58)
  {
    v11 = MEMORY[0x24BEE4AF8];
LABEL_39:
    v48 = *(_QWORD *)(v11 + 16);
    if (v48)
    {
      if (v48 == 1 || (sub_2489FE0FC(v8, 7) & 1) != 0)
        return v11;
      if ((sub_2489FE0FC(v8, 8) & 1) != 0)
      {
        sub_2489C330C(&qword_2577A51A0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_248A47480;
        LOBYTE(v95[0]) = v8;
        sub_2489BEC8C();
        sub_2489E4ECC(a1, a2, v11, (char *)v95, (_OWORD *)(inited + 32));
        v11 = sub_2489E72E0(inited);
        swift_setDeallocating();
        sub_2489E8230();
        return v11;
      }
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  HIDWORD(v51) = *a4;
  v57 = a3 + 32;
  v55 = v98;
  v53 = a3;
  swift_bridgeObjectRetain_n();
  v10 = 0;
  v54 = MEMORY[0x24BEE4AD8] + 8;
  v11 = v9;
  v56 = a1;
  while (1)
  {
    v12 = v57 + 56 * v10++;
    sub_2489E1630(v12, (uint64_t)v96);
    if (((1 << v97) & 0x1B) != 0)
      goto LABEL_5;
    if (v97 == 2)
      break;
    v37 = sub_2489C81EC((uint64_t)v55, (uint64_t)&v86);
    sub_2489C1860(v37, v38, v39, v40, v41, v42, v43, v44, v51, v52, v53, v54, (uint64_t)v55, v56, v57, v58, v59, v60, v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      v83,
      v84,
      v85,
      v86);
    sub_2489C330C(&qword_254464270);
    if (!swift_dynamicCast())
      goto LABEL_5;
    v45 = v68;
    *(_QWORD *)&v86 = v9;
    sub_2489E7C5C(v68, a1, a2, 0);
    sub_2489EA824();
    sub_2489E7C5C(v45, a1, a2, 1);
    sub_2489BA800();
    sub_2489EA824();
    v13 = v86;
LABEL_6:
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      if (v14 != 1)
      {
        v94 = 1;
        sub_2489BEC8C();
        v29 = sub_2489E8C3C(v13);
        sub_2489E6B60(a1, a2, 7, v29);
        v31 = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v86 = a1;
        *((_QWORD *)&v86 + 1) = v31;
        LOBYTE(v59) = 7;
        v32 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
        v93 = CoreRule.Predicate.init(compoundOperation:)((char *)&v59);
        v87 = 1;
        sub_248A453F0();
        v33 = sub_2489E8C3C(v13);
        sub_2489BA800();
        v91 = &type metadata for CoreRule.Subrules;
        v34 = sub_2489E5154();
        v88 = a1;
        v89 = v31;
        v9 = MEMORY[0x24BEE4AF8];
        v92 = v34;
        v90 = v33;
        sub_2489E5190((uint64_t)&v86, (uint64_t)v95);
        sub_2489E51C4((uint64_t)&v86);
        goto LABEL_26;
      }
      sub_2489E5190(v13 + 32, (uint64_t)v95);
    }
    else
    {
      memset(v95, 0, 73);
    }
    sub_2489BA800();
LABEL_26:
    sub_2489E1664((uint64_t)v96);
    if (*((_QWORD *)&v95[0] + 1))
    {
      sub_2489C14BC(&v86, v95);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489C22FC();
        sub_2489EC740();
        v11 = v46;
      }
      v36 = *(_QWORD *)(v11 + 16);
      v35 = *(_QWORD *)(v11 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_2489C1A94(v35);
        sub_2489EC740();
        v11 = v47;
      }
      *(_QWORD *)(v11 + 16) = v36 + 1;
      sub_2489C14BC((void *)(v11 + 80 * v36 + 32), &v86);
    }
    else
    {
      sub_2489C32D0((uint64_t)v95, &qword_254462648);
    }
    if (v10 == v58)
    {
      sub_2489BFFD8();
      v8 = HIDWORD(v51);
      goto LABEL_39;
    }
  }
  v15 = sub_2489C81EC((uint64_t)v55, (uint64_t)&v86);
  sub_2489C1860(v15, v16, v17, v18, v19, v20, v21, v22, v51, v52, v53, v54, (uint64_t)v55, v56, v57, v58, v59, v60, v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86);
  sub_2489C330C(&qword_2544647C8);
  if (!swift_dynamicCast())
  {
LABEL_5:
    v13 = v9;
    goto LABEL_6;
  }
  v23 = *(_QWORD *)(v68 + 16);
  if (!v23)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v13 = v9;
  v24 = v68 + 32;
  v52 = v68;
  sub_248A453F0();
  while (1)
  {
    sub_2489C81EC(v24, (uint64_t)&v68);
    sub_2489C81EC((uint64_t)&v68, (uint64_t)&v59);
    sub_2489BEC8C();
    swift_retain();
    sub_2489E785C(a1, a2, &v59, &v86);
    if (v5)
      break;
    sub_2489BCE44((uint64_t)&v68);
    if (*((_QWORD *)&v86 + 1))
    {
      sub_2489C14BC(&v59, &v86);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489C22FC();
        sub_2489EC740();
        v13 = v27;
      }
      v26 = *(_QWORD *)(v13 + 16);
      v25 = *(_QWORD *)(v13 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_2489C1A94(v25);
        sub_2489EC740();
        v13 = v28;
      }
      *(_QWORD *)(v13 + 16) = v26 + 1;
      sub_2489C14BC((void *)(v13 + 80 * v26 + 32), &v59);
      a1 = v56;
    }
    else
    {
      sub_2489C32D0((uint64_t)&v86, &qword_254462648);
    }
    v24 += 32;
    if (!--v23)
    {
      sub_2489BFFD8();
      v9 = MEMORY[0x24BEE4AF8];
      goto LABEL_6;
    }
  }
  sub_2489BCE44((uint64_t)&v68);
  sub_2489BA800();
  sub_2489BFFD8();
  sub_2489E1664((uint64_t)v96);
  swift_bridgeObjectRelease();
  sub_2489BFFD8();
  return v11;
}

uint64_t sub_2489E72E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[73];
  _QWORD __src[10];
  _BYTE v11[80];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = a1 + 32;
  sub_248A453F0();
  v3 = MEMORY[0x24BEE4AF8];
  do
  {
    sub_2489E82F8(v2, (uint64_t)v11);
    sub_2489E8340((uint64_t)v11, (uint64_t)__src);
    if (__src[1])
    {
      memcpy(v9, __src, sizeof(v9));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489C22FC();
        sub_2489EC740();
        v3 = v6;
      }
      v5 = *(_QWORD *)(v3 + 16);
      v4 = *(_QWORD *)(v3 + 24);
      if (v5 >= v4 >> 1)
      {
        sub_2489C1A94(v4);
        sub_2489EC740();
        v3 = v7;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      memcpy((void *)(v3 + 80 * v5 + 32), v9, 0x49uLL);
    }
    else
    {
      sub_2489C32D0((uint64_t)__src, &qword_254462648);
    }
    v2 += 80;
    --v1;
  }
  while (v1);
  sub_2489BDA70();
  return v3;
}

uint64_t sub_2489E7414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _BYTE v23[24];
  uint64_t v24;
  char v25;
  uint64_t v26[2];
  char v27;
  __int128 v28;

  v28 = *a3;
  v13 = *((_QWORD *)a3 + 2);
  v12 = *((_QWORD *)a3 + 3);
  *(_QWORD *)(a6 + 48) = sub_2489C330C(&qword_254462820);
  *(_QWORD *)(a6 + 56) = sub_2489C5D3C(&qword_254462818, &qword_254462820, (uint64_t)&unk_248A48F44);
  v14 = swift_allocObject();
  *(_QWORD *)(a6 + 24) = v14;
  v15 = a3[1];
  *(_OWORD *)(v14 + 16) = *a3;
  *(_OWORD *)(v14 + 32) = v15;
  *(_WORD *)(v14 + 48) = *((_WORD *)a3 + 16);
  v26[0] = v13;
  v26[1] = v12;
  v27 = 1;
  v25 = a4;
  v24 = MEMORY[0x24BEE1328];
  v23[0] = a5;
  v16 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
  swift_bridgeObjectRetain_n();
  sub_2489E6530((uint64_t)&v28);
  v17 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(v26, &v25, (uint64_t)v23, 0, 0);
  *(_BYTE *)(a6 + 72) = 1;
  sub_2489E69BC(a1, a2, (uint64_t)v17, (_QWORD *)(a6 + 24));
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  sub_2489E8288((uint64_t)&v28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a6 = v19;
  *(_QWORD *)(a6 + 8) = v21;
  *(_BYTE *)(a6 + 16) = 4;
  *(_QWORD *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_2489E757C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[4];
  char v24;
  uint64_t v25[2];
  char v26;
  __int128 v27;

  v27 = *a3;
  v13 = *((_QWORD *)a3 + 2);
  v12 = *((_QWORD *)a3 + 3);
  *(_QWORD *)(a6 + 48) = sub_2489C330C(&qword_254462830);
  *(_QWORD *)(a6 + 56) = sub_2489C5D3C(&qword_254462828, &qword_254462830, (uint64_t)&unk_248A48F44);
  v14 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(a6 + 24) = v14;
  v15 = a3[1];
  v14[1] = *a3;
  v14[2] = v15;
  *(_OWORD *)((char *)v14 + 41) = *(__int128 *)((char *)a3 + 25);
  v25[0] = v13;
  v25[1] = v12;
  v26 = 1;
  v24 = a4;
  v23[3] = MEMORY[0x24BEE1768];
  v23[0] = a5;
  v16 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
  swift_bridgeObjectRetain_n();
  sub_2489E6530((uint64_t)&v27);
  v17 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(v25, &v24, (uint64_t)v23, 0, 0);
  *(_BYTE *)(a6 + 72) = 1;
  sub_2489E69BC(a1, a2, (uint64_t)v17, (_QWORD *)(a6 + 24));
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  sub_2489E8288((uint64_t)&v27);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a6 = v19;
  *(_QWORD *)(a6 + 8) = v21;
  *(_BYTE *)(a6 + 16) = 4;
  *(_QWORD *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_2489E76E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29[2];
  char v30;
  __int128 v31;

  v31 = *a3;
  v15 = *((_QWORD *)a3 + 2);
  v14 = *((_QWORD *)a3 + 3);
  *(_QWORD *)(a7 + 48) = sub_2489C330C(&qword_2577A51B0);
  *(_QWORD *)(a7 + 56) = sub_2489C5D3C(&qword_2577A51B8, &qword_2577A51B0, (uint64_t)&unk_248A48F44);
  v16 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(a7 + 24) = v16;
  v17 = a3[1];
  v16[1] = *a3;
  v16[2] = v17;
  *(_OWORD *)((char *)v16 + 42) = *(__int128 *)((char *)a3 + 26);
  v29[0] = v15;
  v29[1] = v14;
  v30 = 1;
  v28 = a4;
  v27 = sub_2489C330C(&qword_254463A78);
  v25 = a5;
  v26 = a6 & 1;
  v18 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
  swift_bridgeObjectRetain_n();
  sub_2489E6530((uint64_t)&v31);
  v19 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(v29, &v28, (uint64_t)&v25, 0, 0);
  *(_BYTE *)(a7 + 72) = 1;
  sub_2489E69BC(a1, a2, (uint64_t)v19, (_QWORD *)(a7 + 24));
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease();
  sub_2489E8288((uint64_t)&v31);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a7 = v21;
  *(_QWORD *)(a7 + 8) = v23;
  *(_BYTE *)(a7 + 16) = 4;
  *(_QWORD *)(a7 + 64) = v19;
  return result;
}

uint64_t sub_2489E785C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  _OWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _BYTE __src[80];
  __int128 v20[2];
  __int128 v21[3];
  uint64_t v22;

  sub_2489C81EC((uint64_t)a3, (uint64_t)&v17);
  sub_2489C330C(&qword_254464270);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_9;
  sub_2489C4C6C(7955819, 0xE300000000000000, v15, &v17);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = &v17;
LABEL_11:
    sub_2489C32D0((uint64_t)v9, &qword_254464AF0);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_12:
    *(_QWORD *)&v17 = 0;
    *((_QWORD *)&v17 + 1) = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    sub_2489BE100(a3, a3[3]);
    sub_248A45D8C();
    v10 = v17;
    sub_2489C9824();
    swift_allocError();
    *v11 = v10;
    swift_willThrow();
    swift_release();
    return sub_2489BCE44((uint64_t)a3);
  }
  v8 = *((_QWORD *)&v15 + 1);
  v22 = v15;
  sub_2489C4C6C(0x65756C6176, 0xE500000000000000, v15, &v15);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = &v15;
    goto LABEL_11;
  }
  sub_2489C3288(&v15, &v17);
  sub_2489C81EC((uint64_t)&v17, (uint64_t)&v15);
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_2489E6664(v22, v8, v14, (uint64_t)v20);
    sub_2489E7414(a1, a2, v20, 0, v14, (uint64_t)__src);
LABEL_16:
    swift_release();
    sub_2489BCE44((uint64_t)&v17);
    sub_2489BCE44((uint64_t)&v15);
    memcpy(a4, __src, 0x49uLL);
    return sub_2489BCE44((uint64_t)a3);
  }
  if (swift_dynamicCast())
  {
    swift_retain();
    sub_2489E6778(v22, v8, v14, (uint64_t)v21);
    sub_2489E757C(a1, a2, v21, 0, v14, (uint64_t)__src);
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_254462F70 != -1)
    swift_once();
  v13 = type metadata accessor for logger();
  sub_2489C401C(v13, (uint64_t)&unk_254462F58);
  sub_248A45A74();
  sub_248A4557C();
  sub_2489BE100(&v17, v18);
  sub_248A45D8C();
  sub_2489BE9AC();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2489BCE44((uint64_t)&v17);
  sub_2489BCE44((uint64_t)&v15);
  result = sub_2489BCE44((uint64_t)a3);
  *(_OWORD *)((char *)a4 + 57) = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  *a4 = 0u;
  a4[1] = 0u;
  return result;
}

uint64_t sub_2489E7C5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v4;
  uint64_t v5;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  unsigned __int8 v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  _BYTE __src[73];
  unsigned __int8 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40[3];

  v4 = a4 & 1;
  if ((a4 & 1) != 0)
    v5 = 0x6564756C637865;
  else
    v5 = 0x6564756C636E69;
  if (!*(_QWORD *)(a1 + 16) || (v9 = sub_2489C28D0(v5, 0xE700000000000000), (v10 & 1) == 0))
  {
    v38 = 0u;
    v39 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  sub_2489C81EC(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_33:
    sub_2489C32D0((uint64_t)&v38, &qword_254464AF0);
    return MEMORY[0x24BEE4AF8];
  }
  sub_2489C330C(&qword_254463D60);
  if ((swift_dynamicCast() & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  if (qword_2544641F8 != -1)
    swift_once();
  v11 = sub_2489C330C(&qword_254464200);
  v12 = sub_2489C401C(v11, (uint64_t)qword_25446C698);
  swift_beginAccess();
  v13 = type metadata accessor for DeviceProfile();
  if (sub_2489BE834(v12, 1, v13)
    || (v35 = *(unsigned __int8 *)(v12 + 1), v35 == 3)
    || (v14 = *(_QWORD *)(*(_QWORD *)__src + 16)) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v32 = v13;
  v33 = v12;
  v34 = v4;
  v15 = MEMORY[0x24BEE4AF8];
  v16 = (uint64_t *)(*(_QWORD *)__src + 40);
  v30 = a3;
  v31 = a2;
  do
  {
    v17 = *(v16 - 1);
    v18 = *v16;
    *((_QWORD *)&v39 + 1) = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v38 = v17;
    *((_QWORD *)&v38 + 1) = v18;
    swift_bridgeObjectRetain_n();
    v19 = sub_248A27904((uint64_t)&v38);
    if (v19 == 3)
    {
      if (qword_254464240 != -1)
        swift_once();
      v20 = type metadata accessor for logger();
      sub_2489C401C(v20, (uint64_t)&unk_254464228);
      *(_QWORD *)&v38 = 0;
      *((_QWORD *)&v38 + 1) = 0xE000000000000000;
      sub_248A45A74();
      sub_248A4557C();
      sub_248A4557C();
      sub_248A4557C();
      sub_248A4557C();
      sub_248A4557C();
      sub_248A2B63C(v38, *((uint64_t *)&v38 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = v19;
      swift_bridgeObjectRelease();
      sub_248A453F0();
      swift_retain();
      sub_2489E688C(0x6570795472657355, 0xE800000000000000, v21, 0, (uint64_t)v40);
      v22 = 1;
      if (sub_2489BE834(v33, 1, v32))
      {
        v23 = 0;
      }
      else
      {
        v24 = *(unsigned __int8 *)(v33 + 1);
        v22 = v24 == 3;
        if (v24 == 3)
          v23 = 0;
        else
          v23 = *(unsigned __int8 *)(v33 + 1);
      }
      sub_2489E76E4(a2, a3, v40, v34, v23, v22, (uint64_t)&v38);
      if (qword_254464240 != -1)
        swift_once();
      v25 = type metadata accessor for logger();
      sub_2489C401C(v25, (uint64_t)&unk_254464228);
      *(_QWORD *)__src = 0;
      *(_QWORD *)&__src[8] = 0xE000000000000000;
      sub_248A45A74();
      sub_248A4557C();
      sub_248A4557C();
      swift_bridgeObjectRelease();
      sub_248A4557C();
      v37 = v21;
      sub_248A45BAC();
      sub_248A4557C();
      a3 = v30;
      sub_248A4557C();
      sub_248A4557C();
      v37 = v35;
      sub_248A45BAC();
      sub_248A4557C();
      sub_2489BE9AC();
      swift_bridgeObjectRelease();
      sub_2489E5190((uint64_t)&v38, (uint64_t)__src);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489EC740();
        v15 = v27;
      }
      v26 = *(_QWORD *)(v15 + 16);
      a2 = v31;
      if (v26 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_2489EC740();
        v15 = v28;
      }
      *(_QWORD *)(v15 + 16) = v26 + 1;
      memcpy((void *)(v15 + 80 * v26 + 32), __src, 0x49uLL);
      sub_2489E51C4((uint64_t)&v38);
    }
    v16 += 2;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2489E8230()
{
  sub_2489C330C(&qword_254462648);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_2489E8280()
{
  return sub_2489E82C0();
}

uint64_t sub_2489E8288(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2489E82B0()
{
  return sub_2489E82C0();
}

uint64_t sub_2489E82B8()
{
  return sub_2489E82C0();
}

uint64_t sub_2489E82C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2489E82F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254462648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489E8340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254462648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2489E8388(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  uint64_t *v6;
  os_unfair_lock_s *v7;
  uint64_t v8[2];
  uint64_t v9;

  v8[1] = a2;
  v8[0] = a1;
  v5 = *(os_unfair_lock_s **)(v3 + 16);
  v6 = (uint64_t *)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_2489E99C8(v6, v8, a3, &v9);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_2489E8414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return sub_248A28160(a2, a3, a1, a4);
}

uint64_t sub_2489E8438(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 1464) = a4;
  *(_QWORD *)(v4 + 1456) = a2;
  *(_QWORD *)(v4 + 1448) = a1;
  sub_2489BA438((void *)(v4 + 248), a2);
  *(_OWORD *)(v4 + 1472) = *(_OWORD *)a3;
  *(_QWORD *)(v4 + 1488) = *(_QWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 1496) = *(_OWORD *)(a3 + 24);
  *(_BYTE *)(v4 + 1321) = *(_BYTE *)(a3 + 40);
  *(_OWORD *)(v4 + 1512) = *(_OWORD *)(a3 + 48);
  *(_BYTE *)(v4 + 1322) = *(_BYTE *)(a3 + 64);
  *(_QWORD *)(v4 + 1528) = *(_QWORD *)(a3 + 72);
  *(_BYTE *)(v4 + 1323) = *(_BYTE *)(a3 + 80);
  return sub_2489BA850();
}

uint64_t sub_2489E84C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD *v25;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  const void *v34;
  __int128 v35;
  _QWORD v36[31];

  v34 = (const void *)(v0 + 248);
  v1 = *(_QWORD **)(v0 + 1504);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 1536) = v2;
  *(_QWORD *)(v0 + 1544) = v3;
  if (v1[2])
  {
    v4 = v1[4];
    v5 = v1[5];
    sub_248A453F0();
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *(_QWORD *)(v0 + 1560) = v5;
  *(_QWORD *)(v0 + 1552) = v4;
  v31 = *(_BYTE *)(v0 + 1321);
  v6 = *(const void **)(v0 + 1456);
  memcpy((void *)(v0 + 480), (const void *)(v0 + 328), 0x98uLL);
  v7 = *(_QWORD *)(v0 + 480);
  sub_2489BA438(v36, v6);
  sub_2489C1AA0();
  sub_248A453F0();
  sub_248A453F0();
  v8 = sub_2489E8D58((uint64_t)v36);
  sub_2489BFCE0(v0 + 496, v0 + 1432);
  sub_2489BFCE0(v0 + 1432, v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1440);
  if (v9)
  {
    v10 = sub_2489C0374();
    *(_QWORD *)(v10 + 16) = v34;
    sub_2489E995C(v0 + 1432);
    v9 = sub_2489E9788(v9, (void (*)(uint64_t, void *))sub_2489E9770, v10);
    sub_2489E3830(v0 + 1432);
    swift_task_dealloc();
  }
  sub_2489BFCE0(v0 + 504, v0 + 632);
  sub_2489BFCE0(v0 + 632, v0 + 888);
  v32 = v3;
  v33 = v2;
  v29 = v9;
  v30 = v7;
  if (sub_2489E9044(v0 + 888) != 1
    && ((memcpy((void *)(v0 + 760), (const void *)(v0 + 888), 0x80uLL), *(_QWORD *)(v0 + 760) == 0x6C6F626D7973)
      ? (v11 = *(_QWORD *)(v0 + 768) == 0xE600000000000000)
      : (v11 = 0),
        (v11 || (sub_248A45DBC() & 1) != 0)
     && (sub_2489E65F8(v0 + 776, v0 + 1128, &qword_2577A51D0),
         sub_2489E65F8(v0 + 1128, v0 + 1016, &qword_2577A51D0),
         *(_QWORD *)(v0 + 1024) != 1)))
  {
    v12 = v8;
    v14 = *(_QWORD *)(v0 + 1056);
    if (v14)
    {
      v13 = *(_QWORD *)(v0 + 1048);
      v14 = sub_248A453F0();
    }
    else
    {
      v13 = 0;
    }
  }
  else
  {
    v12 = v8;
    v13 = 0;
    v14 = 0;
  }
  v28 = *(_BYTE *)(v0 + 1323);
  v15 = *(_QWORD *)(v0 + 1528);
  v16 = *(_BYTE *)(v0 + 1322);
  v17 = *(_QWORD *)(v0 + 1520);
  v18 = *(_QWORD *)(v0 + 1512);
  v19 = *(_QWORD *)(v0 + 1488);
  v27 = *(_OWORD *)(v0 + 1472);
  v36[0] = 0;
  v36[1] = v13;
  v36[2] = v14;
  v20 = (objc_class *)type metadata accessor for CoreTip.ConstellationContent();
  v35 = *(_OWORD *)(v0 + 1496);
  v21 = objc_allocWithZone(v20);
  sub_248A0CC70(v30, v12, v29, (uint64_t)v36);
  v23 = v22;
  *(_QWORD *)(v0 + 1568) = v22;
  sub_2489BA438((void *)(v0 + 16), v34);
  *(_OWORD *)(v0 + 1240) = v27;
  *(_QWORD *)(v0 + 1256) = v19;
  *(_OWORD *)(v0 + 1264) = v35;
  *(_BYTE *)(v0 + 1280) = v31;
  *(_QWORD *)(v0 + 1288) = v18;
  *(_QWORD *)(v0 + 1296) = v17;
  *(_BYTE *)(v0 + 1304) = v16;
  *(_QWORD *)(v0 + 1312) = v15;
  *(_BYTE *)(v0 + 1320) = v28;
  v24 = v23;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1576) = v25;
  *v25 = v0;
  v25[1] = sub_2489E87F4;
  return sub_2489E5060(v33, v32, v0 + 16, v0 + 1240, *(_QWORD *)(v0 + 1464));
}

uint64_t sub_2489E87F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  void *v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 1584) = v1;
  swift_task_dealloc();
  if (v1)
  {
    v5 = (void *)v4[196];
    swift_bridgeObjectRelease();

    sub_2489BBC58();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4[199] = a1;
    sub_2489B71DC();
    sub_2489BEC70();
    sub_2489DAF04(v4 + 31);
  }
  return swift_task_switch();
}

uint64_t sub_2489E88CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 1568);
  v2 = *(_QWORD *)(v0 + 1560);
  v3 = *(_QWORD *)(v0 + 1552);
  v4 = *(_QWORD *)(v0 + 1544);
  v5 = *(_QWORD *)(v0 + 1536);
  v6 = *(_BYTE *)(v0 + 1321);
  if (*(_QWORD *)(v0 + 1512) == -1)
    v7 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v7 = *(_QWORD *)(v0 + 1512);
  v8 = sub_2489E8C3C(*(_QWORD *)(v0 + 1592));
  *(_QWORD *)(v0 + 1600) = v8;
  sub_2489BBC58();
  *(_QWORD *)(v0 + 1328) = v5;
  *(_QWORD *)(v0 + 1336) = v4;
  *(_QWORD *)(v0 + 1344) = v1;
  *(_QWORD *)(v0 + 1352) = v3;
  *(_QWORD *)(v0 + 1360) = v2;
  *(_BYTE *)(v0 + 1368) = 1;
  *(_BYTE *)(v0 + 1369) = v6;
  *(_QWORD *)(v0 + 1376) = v7;
  *(_QWORD *)(v0 + 1384) = 0;
  *(_BYTE *)(v0 + 1392) = 1;
  *(_DWORD *)(v0 + 1393) = 16843009;
  *(_QWORD *)(v0 + 1400) = v8;
  v9 = qword_254464B18;
  sub_2489C1AA0();
  sub_248A453F0();
  v10 = v1;
  sub_248A453F0();
  if (v9 != -1)
    swift_once();
  v11 = *(_QWORD *)(v0 + 1544);
  v12 = *(_QWORD *)(v0 + 1536);
  v13 = *(_QWORD *)(v0 + 1464);
  swift_beginAccess();
  v14 = sub_2489C0374();
  *(_QWORD *)(v14 + 16) = v0 + 1328;
  *(_QWORD *)(v14 + 24) = v13;
  v15 = sub_2489C0374();
  *(_QWORD *)(v15 + 16) = sub_2489E9740;
  *(_QWORD *)(v15 + 24) = v14;
  sub_248A453F0();
  swift_retain();
  sub_2489E8388(v12, v11, (uint64_t (*)(uint64_t))sub_2489E9748);
  swift_release();
  swift_release();
  sub_2489BDA70();
  swift_task_dealloc();
  swift_task_dealloc();
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1608) = v16;
  *v16 = v0;
  v16[1] = sub_2489E8AA4;
  return sub_248A380CC((uint64_t)v16, v17);
}

uint64_t sub_2489E8AA4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 1568);
  sub_2489BFA2C();
  sub_2489BEC70();

  sub_2489BDA70();
  sub_2489BBC58();
  return sub_2489BA850();
}

uint64_t sub_2489E8B10()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 1568);
  v2 = *(void **)(v0 + 1448);
  swift_release();
  memcpy(v2, (const void *)(v0 + 1328), 0x50uLL);
  sub_2489B71DC();

  sub_2489BEC70();
  sub_2489BDA70();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489E8B8C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1568);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2489B71DC();
  sub_2489DAF04((_QWORD *)(v0 + 248));
  sub_2489BEC70();

  sub_2489BDA70();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489E8C3C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  ValueMetadata *v9;
  unint64_t v10;
  _BYTE v11[80];
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_248A02984(0, v1, 0);
    v2 = v12;
    v4 = a1 + 32;
    do
    {
      sub_2489E5190(v4, (uint64_t)v11);
      v12 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_248A02984((_QWORD *)(v5 > 1), v6 + 1, 1);
        v2 = v12;
      }
      v9 = &type metadata for ConstellationRule;
      v10 = sub_2489E9ED8();
      *(_QWORD *)&v8 = swift_allocObject();
      sub_2489E5190((uint64_t)v11, v8 + 16);
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2489B8F74(&v8, v2 + 40 * v6 + 32);
      sub_2489E51C4((uint64_t)v11);
      v4 += 80;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2489E8D58(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD __dst[38];

  v1 = *(_QWORD *)(a1 + 88);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v1 + 16);
  sub_248A453F0();
  if (v2)
  {
    v3 = 0;
    v4 = v1 + 32;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      if (v3 >= v2)
      {
        __break(1u);
        JUMPOUT(0x2489E9034);
      }
      v6 = *(_QWORD *)(v4 + 16 * v3 + 8);
      if (v3)
        __asm { BR              X9 }
      sub_248A453F0();
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2489EC6A4();
          v5 = v12;
        }
        v8 = v7 - 1;
        for (i = 32; ; i += 144)
        {
          memcpy(__dst, (const void *)(v6 + i), 0x90uLL);
          sub_2489E9F48((uint64_t)__dst);
          v10 = *(_QWORD *)(v5 + 16);
          if (v10 >= *(_QWORD *)(v5 + 24) >> 1)
          {
            sub_2489EC6A4();
            v5 = v11;
          }
          *(_QWORD *)(v5 + 16) = v10 + 1;
          memcpy((void *)(v5 + 144 * v10 + 32), __dst, 0x90uLL);
          if (!v8)
            break;
          --v8;
        }
      }
      swift_bridgeObjectRelease();
      v3 = 1;
      v2 = *(_QWORD *)(v1 + 16);
    }
    while (v2 != 1);
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2489E9044(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_2489E905C(const void *a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for CoreTip();
  v4 = swift_allocObject();
  sub_2489E9CD8((uint64_t)a1);
  swift_retain();
  return sub_2489E9A00(a1, a2, v4);
}

ValueMetadata *sub_2489E90B8()
{
  return &type metadata for ConstellationTip;
}

void *sub_2489E90C4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_2489E90E8()
{
  return sub_248A453F0();
}

uint64_t sub_2489E90F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 41);
  v5 = *(_BYTE *)(v1 + 64);
  v6 = *(_BYTE *)(v1 + 65);
  v7 = *(_BYTE *)(v1 + 66);
  v8 = *(_BYTE *)(v1 + 67);
  v9 = *(_BYTE *)(v1 + 68);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 41) = v6;
  *(_BYTE *)(a1 + 42) = v7;
  *(_BYTE *)(a1 + 43) = v8;
  *(_BYTE *)(a1 + 44) = v9;
  return sub_248A453F0();
}

uint64_t sub_2489E913C(void *__src, const void *a2)
{
  _QWORD v4[10];
  _QWORD __dst[10];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_2489E5030(v4, __dst) & 1;
}

uint64_t sub_2489E9190()
{
  const void *v0;
  _BYTE v2[80];

  memcpy(v2, v0, sizeof(v2));
  return sub_2489E91C8();
}

uint64_t sub_2489E91C8()
{
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  return 0x203A646928706954;
}

uint64_t sub_2489E9240@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;

  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v26 = a2[4];
  v27 = *a2;
  v24 = a2[6];
  v25 = a2[5];
  v9 = a2[9];
  v22 = a2[8];
  v23 = a2[7];
  v10 = a2[10];
  v11 = a2[11];
  v20 = a2[13];
  v21 = a2[12];
  v18 = a2[15];
  v19 = a2[14];
  v16 = a2[17];
  v17 = a2[16];
  v45 = *a3;
  v28 = v45;
  sub_2489E6530((uint64_t)&v45);
  sub_248A4557C();
  v46 = a1;
  sub_248A45D68();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)&v28 + 1);
  v15 = v28;
  *(_QWORD *)&v28 = v27;
  *((_QWORD *)&v28 + 1) = v6;
  v29 = v7;
  v30 = v8;
  v31 = v26;
  v32 = v25;
  v33 = v24;
  v34 = v23;
  v35 = v22;
  v36 = v9;
  v37 = v10;
  v38 = v11;
  v39 = v21;
  v40 = v20;
  v41 = v19;
  v42 = v18;
  v43 = v17;
  v44 = v16;
  v13 = (uint64_t)a4 + *(int *)(type metadata accessor for CoreTip.ConstellationAction() + 32);
  sub_248A453F0();
  sub_248A453F0();
  sub_2489BB634(v26, v25);
  result = sub_2489E945C(&v28, v13);
  *a4 = v15;
  a4[1] = v14;
  a4[2] = v27;
  a4[3] = v6;
  a4[4] = v7;
  a4[5] = v8;
  a4[6] = v26;
  a4[7] = v25;
  a4[8] = v24;
  a4[9] = v23;
  a4[10] = v22;
  a4[11] = v9;
  a4[12] = v10;
  a4[13] = v11;
  a4[14] = v21;
  a4[15] = v20;
  a4[16] = v19;
  a4[17] = v18;
  a4[18] = v17;
  a4[19] = v16;
  return result;
}

uint64_t sub_2489E945C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[2];

  v4 = sub_2489C330C(&qword_254463A58);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_248A44C40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[15];
  if (a1[5] == 1 || v13 == 0)
    goto LABEL_14;
  v15 = a1[14];
  v16 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v16 = v15 & 0xFFFFFFFFFFFFLL;
  if (!v16)
    goto LABEL_14;
  if (v15 == 0xD000000000000015 && v13 == 0x8000000248A4F910 || (sub_248A45DBC() & 1) != 0)
  {
    if (qword_254464240 != -1)
      swift_once();
    v17 = type metadata accessor for logger();
    sub_2489C401C(v17, (uint64_t)&unk_254464228);
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    sub_248A453F0();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
LABEL_14:
    v18 = sub_248A44EB0();
    return sub_2489BE7E0(a2, 1, 1, v18);
  }
  sub_248A44C34();
  if (sub_2489BE834((uint64_t)v7, 1, v8) == 1)
  {
    sub_2489C32D0((uint64_t)v7, &qword_254463A58);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    sub_248A43720(7107189, 0xE300000000000000);
    if (v20)
    {
      sub_248A44E80();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return sub_248A44E80();
}

uint64_t sub_2489E9740()
{
  uint64_t v0;

  return sub_2489E905C(*(const void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2489E9748()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2489E9770@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_2489E9240(a1, a2, *(__int128 **)(v3 + 16), a3);
}

uint64_t sub_2489E9788(uint64_t a1, void (*a2)(uint64_t, void *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[152];
  uint64_t v27;

  v4 = v3;
  v21 = a2;
  v22 = a3;
  v6 = type metadata accessor for CoreTip.ConstellationAction();
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BEE4AF8];
  sub_248A02968(0, 0, 0);
  v10 = v27;
  v11 = *(_QWORD *)(a1 + 16);
  v23 = a1;
  sub_248A453F0();
  v19 = v11;
  if (v11)
  {
    v12 = 0;
    v18 = &v25;
    v13 = 32;
    while (1)
    {
      memcpy(v26, (const void *)(v23 + v13), 0x90uLL);
      v14 = v18;
      memcpy(v18, (const void *)(v23 + v13), 0x90uLL);
      v24 = v12;
      sub_2489E1858((uint64_t)v26);
      v21(v12, v14);
      if (v4)
        break;
      sub_2489E1908((uint64_t)v26);
      v27 = v10;
      v16 = *(_QWORD *)(v10 + 16);
      v15 = *(_QWORD *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_248A02968(v15 > 1, v16 + 1, 1);
        v10 = v27;
      }
      ++v12;
      *(_QWORD *)(v10 + 16) = v16 + 1;
      sub_2489E9984((uint64_t)v9, v10+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v16);
      v13 += 144;
      if (v19 == v12)
        goto LABEL_9;
    }
    sub_2489E1908((uint64_t)v26);
    swift_release();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2489E995C(uint64_t a1)
{
  sub_248A453F0();
  return a1;
}

uint64_t sub_2489E9984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CoreTip.ConstellationAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489E99C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_2489E8414(a1, *a2, a2[1], a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_2489E9A00(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27[2];
  _QWORD v28[5];

  v6 = sub_2489C330C(&qword_254464A98);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)v27 - v12;
  v28[3] = &type metadata for ConstellationTip;
  v28[4] = sub_2489E9D28();
  v14 = swift_allocObject();
  v28[0] = v14;
  memcpy((void *)(v14 + 16), a1, 0x50uLL);
  sub_2489C330C(&qword_254464AC8);
  swift_allocObject();
  sub_248A08DA0(0, 1);
  *(_QWORD *)(a3 + 96) = v15;
  v16 = sub_248A44F58();
  sub_2489BE7E0((uint64_t)v13, 1, 1, v16);
  sub_2489E9DA0((uint64_t)v13, (uint64_t)v10);
  sub_2489C330C(&qword_254464AA8);
  swift_allocObject();
  sub_2489C5FE8((uint64_t)v10);
  v18 = v17;
  sub_2489C32D0((uint64_t)v13, &qword_254464A98);
  *(_QWORD *)(a3 + 104) = v18;
  sub_2489C330C(&qword_254464AF8);
  swift_allocObject();
  sub_248A08DEC(0);
  *(_QWORD *)(a3 + 120) = v19;
  sub_248A44FDC();
  v20 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(a3 + 24) = v20;
  sub_2489C330C(&qword_254464AC0);
  swift_allocObject();
  sub_248A08DF8(0);
  *(_QWORD *)(a3 + 112) = v21;
  *(_QWORD *)(a3 + 136) = a2;
  sub_2489C330C(&qword_254464AB8);
  swift_allocObject();
  *(_QWORD *)(a3 + 128) = sub_2489C5FA8(0.0);
  if (*(_BYTE *)(v14 + 84))
    v22 = 3;
  else
    v22 = 0;
  *(_BYTE *)(a3 + 88) = v22;
  *(_BYTE *)(a3 + 89) = 10;
  sub_2489C4880((uint64_t)v28, a3 + 32);
  sub_248A453F0();
  swift_unownedRetain();
  *(_QWORD *)(a3 + 72) = String.init(type:)((uint64_t)&type metadata for ConstellationTip);
  *(_QWORD *)(a3 + 80) = v23;
  v24 = swift_allocObject();
  swift_weakInit();
  sub_2489C4880((uint64_t)v28, (uint64_t)v27);
  v25 = swift_allocObject();
  sub_2489B8F74(v27, v25 + 16);
  *(_QWORD *)(v25 + 56) = v24;
  swift_retain();
  sub_248A37864((uint64_t)&unk_2577A51D8, v25);
  swift_release();
  swift_release();
  swift_release();
  sub_2489BCE44((uint64_t)v28);
  return a3;
}

uint64_t sub_2489E9CD8(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 16);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

unint64_t sub_2489E9D28()
{
  unint64_t result;

  result = qword_2544625E8;
  if (!qword_2544625E8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A490BC, &type metadata for ConstellationTip);
    atomic_store(result, (unint64_t *)&qword_2544625E8);
  }
  return result;
}

uint64_t sub_2489E9D64()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2489E9DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489E9DE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2489E9E0C()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2489E9E38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 56);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_2489E9E9C;
  return sub_248A094B8(a1, v4, v5);
}

uint64_t sub_2489E9E9C()
{
  uint64_t v0;

  sub_2489BFA2C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2489E9ED8()
{
  unint64_t result;

  result = qword_254462640;
  if (!qword_254462640)
  {
    result = MEMORY[0x2495A2D34](&unk_248A48FD4, &type metadata for ConstellationRule);
    atomic_store(result, (unint64_t *)&qword_254462640);
  }
  return result;
}

uint64_t sub_2489E9F14()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2489BCE44(v0 + 40);

  return swift_deallocObject();
}

uint64_t sub_2489E9F48(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 24);
  sub_248A453F0();
  sub_2489BB634(v4, v3);
  sub_248A453F0();
  return a1;
}

uint64_t destroy for ConstellationTip(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ConstellationTip(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_DWORD *)(a1 + 65) = *(_DWORD *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_248A453F0();
  v7 = v5;
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t assignWithCopy for ConstellationTip(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ConstellationTip(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for ConstellationTip(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConstellationTip(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConstellationTip(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationTip()
{
  return &type metadata for ConstellationTip;
}

unint64_t sub_2489EA2E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2489EA318();
  a1[2] = sub_2489EA354();
  result = sub_2489EA390();
  a1[3] = result;
  return result;
}

unint64_t sub_2489EA318()
{
  unint64_t result;

  result = qword_2544625E0;
  if (!qword_2544625E0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A49034, &type metadata for ConstellationTip);
    atomic_store(result, (unint64_t *)&qword_2544625E0);
  }
  return result;
}

unint64_t sub_2489EA354()
{
  unint64_t result;

  result = qword_2544625D0;
  if (!qword_2544625D0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A49094, &type metadata for ConstellationTip);
    atomic_store(result, (unint64_t *)&qword_2544625D0);
  }
  return result;
}

unint64_t sub_2489EA390()
{
  unint64_t result;

  result = qword_2544625D8;
  if (!qword_2544625D8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4905C, &type metadata for ConstellationTip);
    atomic_store(result, (unint64_t *)&qword_2544625D8);
  }
  return result;
}

uint64_t CoreDonation.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2489BA858();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CoreDonation.donationInfo.getter()
{
  type metadata accessor for CoreDonation();
  return sub_248A453F0();
}

uint64_t type metadata accessor for CoreDonation()
{
  uint64_t result;

  result = qword_2577A51E0;
  if (!qword_2577A51E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CoreDonation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_248A44F58();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_248A453F0();
  }
  return a1;
}

uint64_t destroy for CoreDonation(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_248A44F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_248A44F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_248A453F0();
  return a1;
}

uint64_t assignWithCopy for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_248A44F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_248A44F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_248A44F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDonation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2489EA6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_2489BA858();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_2489BE834(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDonation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2489EA740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_2489BA858();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_2489BE7E0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_2489EA7B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44F58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2489EA824()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  sub_2489C50F0();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_2489BD89C() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_2489EC75C();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_2489EDE9C();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_248A0248C(v0 + 32, v3, v2 + 80 * v7 + 32);
  if (!v3)
  {
LABEL_11:
    sub_2489BDA70();
    *v1 = v2;
    sub_2489BA828();
    return;
  }
  v9 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v9, v3);
  v10 = v9 + v3;
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_2489EA8E8()
{
  uint64_t v0;
  char **v1;
  char *v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  BOOL v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  sub_2489C50F0();
  if (v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = (char *)sub_2489BD89C();
  if (!(_DWORD)v7 || v5 > *((_QWORD *)v2 + 3) >> 1)
  {
    if (v4 <= v5)
      v8 = v5;
    else
      v8 = v4;
    v2 = sub_2489EC7FC(v7, v8, 1, (uint64_t)v2);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_14;
    goto LABEL_16;
  }
  sub_2489EDE9C();
  if (v10 != v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_248A02528(v0 + 32, v3, (unint64_t)&v2[64 * v9 + 32]);
  if (!v3)
  {
LABEL_14:
    sub_2489BDA70();
    *v1 = v2;
    sub_2489BA828();
    return;
  }
  v11 = *((_QWORD *)v2 + 2);
  v6 = __OFADD__(v11, v3);
  v12 = v11 + v3;
  if (!v6)
  {
    *((_QWORD *)v2 + 2) = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_2489EA990()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_2489C50F0();
  if (v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = sub_2489BD89C();
  if (!(_DWORD)v7 || v5 > *(_QWORD *)(v2 + 24) >> 1)
  {
    if (v4 <= v5)
      v8 = v5;
    else
      v8 = v4;
    v2 = sub_2489ECC2C(v7, v8, 1, v2, &qword_2544647F8, (void (*)(_QWORD))MEMORY[0x24BDEAB90]);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_14;
    goto LABEL_16;
  }
  v9 = *(_QWORD *)(v2 + 16);
  v10 = (*(_QWORD *)(v2 + 24) >> 1) - v9;
  sub_248A45330();
  if (v10 < v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_2489EDEF0();
  sub_248A025C0(v0 + v12, v3, v2 + v12 + *(_QWORD *)(v11 + 72) * v9);
  if (!v3)
  {
LABEL_14:
    sub_2489BDA70();
    *v1 = v2;
    sub_2489BA828();
    return;
  }
  v13 = *(_QWORD *)(v2 + 16);
  v6 = __OFADD__(v13, v3);
  v14 = v13 + v3;
  if (!v6)
  {
    *(_QWORD *)(v2 + 16) = v14;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t CoreDonationRecord.date.getter()
{
  swift_getKeyPath();
  sub_2489BA29C(&qword_254464630, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_248A44FD0();
  swift_release();
  swift_getKeyPath();
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_2489BA29C(&qword_2544640F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_248A451F8();
  return sub_2489BA87C();
}

void sub_2489EAB58()
{
  CoreDonationRecord.date.getter();
  sub_2489BA7D0();
}

void sub_2489EAB74()
{
  CoreDonationRecord.date.getter();
  sub_2489BA7D0();
}

uint64_t sub_2489EAB90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489BEC94();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v1, a1);
  return CoreDonationRecord.date.setter();
}

uint64_t CoreDonationRecord.date.setter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2489BA29C(&qword_254464630, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_248A44FC4();
  sub_2489BA87C();
  v0 = sub_2489BA858();
  return sub_2489BF7BC(v0);
}

uint64_t sub_2489EACA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[4];

  sub_2489C4880(a2, (uint64_t)v5);
  sub_2489BE100(v5, v5[3]);
  swift_getKeyPath();
  v3 = sub_248A44F58();
  sub_2489BA29C(&qword_2544643D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_248A45048();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return sub_2489BCE44((uint64_t)v5);
}

uint64_t sub_2489EAD78()
{
  swift_getKeyPath();
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_2489BA29C(&qword_2544643D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_248A45210();
  return swift_release();
}

uint64_t sub_2489EAE1C()
{
  return sub_2489EAD78();
}

void CoreDonationRecord.date.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2489BA858();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  CoreDonationRecord.date.getter();
  sub_2489B6AF4();
}

void sub_2489EAEA8(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    CoreDonationRecord.date.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreDonationRecord.date.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

void CoreDonationRecord.event.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BD8A8();
  sub_2489BD9A0(&qword_254464630, v0, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BD9A0(&qword_254464638, v1, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_2489BA29C(&qword_2544645F8, (uint64_t (*)(uint64_t))type metadata accessor for CoreEventRecord, (uint64_t)&protocol conformance descriptor for CoreEventRecord);
  sub_248A451E0();
  swift_release();
  sub_2489BA868();
}

void sub_2489EAFFC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489EDEE4();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_2489EB018()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489EDEE4();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_2489EB034()
{
  uint64_t v0;

  v0 = swift_retain();
  CoreDonationRecord.event.setter(v0);
  sub_2489BA7D0();
}

uint64_t CoreDonationRecord.event.setter(uint64_t a1)
{
  return sub_2489EB3B4(a1, (uint64_t)&unk_248A49138, (uint64_t)sub_2489EB1F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2489EB078@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2489C4880(a1, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  type metadata accessor for CoreEventRecord();
  sub_2489BA29C(&qword_2544645F8, (uint64_t (*)(uint64_t))type metadata accessor for CoreEventRecord, (uint64_t)&protocol conformance descriptor for CoreEventRecord);
  sub_248A45054();
  swift_release();
  swift_release();
  result = sub_2489BCE44((uint64_t)v4);
  *a2 = 0;
  return result;
}

uint64_t sub_2489EB14C()
{
  swift_getKeyPath();
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_2489BA29C(&qword_2544645F8, (uint64_t (*)(uint64_t))type metadata accessor for CoreEventRecord, (uint64_t)&protocol conformance descriptor for CoreEventRecord);
  sub_248A4521C();
  return swift_release();
}

uint64_t sub_2489EB1F0()
{
  return sub_2489EB14C();
}

void (*CoreDonationRecord.event.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  CoreDonationRecord.event.getter();
  *a1 = v3;
  return sub_2489EB23C;
}

void sub_2489EB23C(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_retain();
    CoreDonationRecord.event.setter(v2);
    swift_release();
  }
  else
  {
    CoreDonationRecord.event.setter(*a1);
    sub_2489BA7D0();
  }
}

void CoreDonationRecord.donationInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BD8A8();
  sub_2489BD9A0(&qword_254464630, v0, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BD9A0(&qword_254464638, v1, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_248A451A4();
  swift_release();
  sub_2489BA868();
}

void sub_2489EB320(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CoreDonationRecord.donationInfo.getter();
  *a1 = v2;
}

void sub_2489EB348(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CoreDonationRecord.donationInfo.getter();
  *a1 = v2;
  sub_2489BA7D0();
}

uint64_t sub_2489EB36C()
{
  uint64_t v0;

  v0 = sub_248A453F0();
  return CoreDonationRecord.donationInfo.setter(v0);
}

uint64_t CoreDonationRecord.donationInfo.setter(uint64_t a1)
{
  return sub_2489EB3B4(a1, (uint64_t)&unk_248A49160, (uint64_t)sub_2489EB59C, (uint64_t (*)(uint64_t))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2489EB3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_getKeyPath();
  sub_2489BA29C(&qword_254464630, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_248A44FC4();
  swift_release();
  return a4(a1);
}

uint64_t sub_2489EB468@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2489C4880(a1, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_254462FF8);
  sub_248A45030();
  swift_release();
  swift_bridgeObjectRelease();
  result = sub_2489BCE44((uint64_t)v4);
  *a2 = 0;
  return result;
}

uint64_t sub_2489EB518()
{
  swift_getKeyPath();
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_248A451B0();
  return swift_release();
}

uint64_t sub_2489EB59C()
{
  return sub_2489EB518();
}

void (*CoreDonationRecord.donationInfo.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  CoreDonationRecord.donationInfo.getter();
  *a1 = v3;
  return sub_2489EB5E8;
}

void sub_2489EB5E8(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = sub_248A453F0();
    CoreDonationRecord.donationInfo.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    CoreDonationRecord.donationInfo.setter(*a1);
    sub_2489BA7D0();
  }
}

unint64_t CoreDonationRecord.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_2489BA858();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  sub_2489BEC94();
  sub_248A45A74();
  swift_bridgeObjectRelease();
  CoreDonationRecord.event.getter();
  if (v4)
  {
    CoreEventRecord.id.getter();
    swift_release();
  }
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  CoreDonationRecord.date.getter();
  sub_2489BA29C(&qword_2577A51F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
  sub_248A45D68();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  sub_248A4557C();
  return 0xD00000000000001ALL;
}

void CoreDonationRecord.__allocating_init(date:event:donationInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2489B6B08();
  CoreDonationRecord.init(date:event:donationInfo:)(a1, a2, a3);
  sub_2489B6AF4();
}

void CoreDonationRecord.init(date:event:donationInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v7 = sub_2489BA858();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_2489BBC7C();
  v12 = v11 - v10;
  v3[6] = sub_2489C330C(&qword_254462FF0);
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  v3[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v3 + 3);
  sub_248A4518C();
  sub_248A44F4C();
  sub_2489EACA8(v12, (uint64_t)(v3 + 3));
  sub_2489EB078((uint64_t)(v4 + 3), (_BYTE *)v4 + 16);
  sub_2489EB468((uint64_t)(v4 + 3), (_BYTE *)v4 + 17);
  sub_248A44FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, a1, v7);
  CoreDonationRecord.date.setter();
  CoreDonationRecord.donationInfo.setter(a3);
  v13 = swift_retain();
  CoreDonationRecord.event.setter(v13);
  sub_2489BA87C();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  sub_2489B71E4();
}

void CoreDonationRecord.persistentBackingData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2489BD8B0();
  sub_2489C4880(v1 + 24, a1);
  sub_2489B7208();
}

void sub_2489EB980(uint64_t a1)
{
  __int128 v1[2];

  sub_2489C4880(a1, (uint64_t)v1);
  CoreDonationRecord.persistentBackingData.setter(v1);
}

void CoreDonationRecord.persistentBackingData.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 24;
  sub_2489C09C0();
  sub_2489BCE44(v3);
  sub_2489B8F74(a1, v3);
  swift_endAccess();
  sub_2489B7208();
}

void CoreDonationRecord.persistentBackingData.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  sub_2489BD8B0();
  sub_2489C4880(v1 + 24, (uint64_t)v3);
  sub_2489B6AF4();
}

void static CoreDonationRecord.schemaMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  v28 = sub_248A45330();
  v0 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v1);
  sub_2489BBC7C();
  v25 = v3 - v2;
  v4 = sub_248A452F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  sub_2489C330C(&qword_2544647F8);
  v10 = *(_QWORD *)(v0 + 72);
  v27 = v0;
  v11 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A47460;
  v26 = v11;
  swift_getKeyPath();
  *((_QWORD *)&v30 + 1) = sub_2489BA858();
  sub_2489EBF34((uint64_t *)&v29);
  sub_248A44F4C();
  sub_248A45378();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEAC08];
  sub_2489BED94();
  sub_2489BFFEC();
  sub_2489BA29C(&qword_2544647B8, v12, MEMORY[0x24BDEAC00]);
  sub_2489EDED0(v13);
  sub_248A45324();
  swift_getKeyPath();
  v29 = 0u;
  v30 = 0u;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v9, *MEMORY[0x24BDEAB58], v4);
  sub_248A45300();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEAB70];
  sub_2489BED94();
  sub_248A4530C();
  sub_2489BA29C(&qword_2544647B0, v14, MEMORY[0x24BDEAB68]);
  sub_2489EDED0(v15);
  sub_248A45324();
  swift_getKeyPath();
  v29 = 0u;
  v30 = 0u;
  sub_2489C330C(&qword_254464800);
  sub_248A4536C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A47480;
  type metadata accessor for RawDictionaryTransformer();
  sub_248A45360();
  swift_allocObject();
  sub_2489BFFEC();
  sub_248A45324();
  swift_getKeyPath();
  v29 = 0u;
  v30 = 0u;
  sub_2489C330C(&qword_2544648F8);
  v16 = sub_2489C330C(&qword_254464880);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_248A47480;
  v20 = (uint64_t *)(v19 + v18);
  sub_2489C330C(&qword_254464818);
  v21 = sub_2489BA860();
  *(_OWORD *)(v21 + 16) = xmmword_248A49100;
  *(_QWORD *)(v21 + 32) = swift_getKeyPath();
  sub_248A456A8();
  *v20 = v21;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v20, *MEMORY[0x24BDEABA0], v16);
  sub_2489C330C(&qword_2544648C0);
  sub_2489BED94();
  sub_248A4533C();
  sub_2489EBFA4();
  sub_248A45324();
  v22 = sub_2489ECC2C(0, 1, 1, MEMORY[0x24BEE4AF8], &qword_2544647F8, (void (*)(_QWORD))MEMORY[0x24BDEAB90]);
  v24 = *(_QWORD *)(v22 + 16);
  v23 = *(_QWORD *)(v22 + 24);
  if (v24 >= v23 >> 1)
    v22 = sub_2489ECC2C(v23 > 1, v24 + 1, 1, v22, &qword_2544647F8, (void (*)(_QWORD))MEMORY[0x24BDEAB90]);
  *(_QWORD *)(v22 + 16) = v24 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v22 + v26 + v24 * v10, v25, v28);
  sub_2489EA990();
  sub_2489B71E4();
}

void sub_2489EBF34(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  sub_2489BA7D0();
}

void sub_2489EBF6C()
{
  sub_248A45318();
  sub_2489BA7D0();
}

void sub_2489EBF88()
{
  sub_248A45318();
  sub_2489BA7D0();
}

unint64_t sub_2489EBFA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544648B8;
  if (!qword_2544648B8)
  {
    v1 = sub_2489BCD7C(&qword_2544648C0);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDEABC0], v1);
    atomic_store(result, (unint64_t *)&qword_2544648B8);
  }
  return result;
}

void CoreDonationRecord.__allocating_init(backingData:)(uint64_t a1)
{
  sub_2489B6B08();
  CoreDonationRecord.init(backingData:)(a1);
  sub_2489BA7D0();
}

void CoreDonationRecord.init(backingData:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = *v1;
  v5 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  v2[6] = sub_2489C330C(&qword_254462FF0);
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v4;
  v12 = v10;
  v13 = v10;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v2 + 3);
  sub_248A4518C();
  sub_248A44F4C();
  sub_2489EACA8(v9, (uint64_t)(v2 + 3));
  sub_2489EB078((uint64_t)(v2 + 3), (_BYTE *)v2 + 16);
  sub_2489EB468((uint64_t)(v2 + 3), (_BYTE *)v2 + 17);
  sub_248A44FDC();
  *((_WORD *)v2 + 8) = 0;
  sub_2489C4880(a1, (uint64_t)&v11);
  sub_2489C09C0();
  sub_2489BCE44((uint64_t)(v2 + 3));
  sub_2489B8F74(&v11, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_2489BCE44(a1);
  sub_2489BA828();
}

void CoreDonationRecord.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  sub_2489BA7D0();
}

uint64_t CoreDonationRecord.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  return swift_deallocClassInstance();
}

unint64_t sub_2489EC1E8()
{
  return CoreDonationRecord.description.getter();
}

uint64_t CoreDonationRecord.hashValue.getter()
{
  sub_248A45F90();
  sub_2489BA29C(&qword_254464640, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  sub_248A45480();
  return sub_248A45FD8();
}

uint64_t (*sub_2489EC280(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  swift_beginAccess();
  sub_2489C4880(v1 + 24, (uint64_t)v3);
  return sub_2489EBA58;
}

void sub_2489EC2E8(uint64_t *a1, char a2)
{
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (__int128 *)(*a1 + 40);
  if ((a2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v2 + 128) + 24;
    sub_2489C4880(*a1, (uint64_t)v3);
    sub_2489C09C0();
    sub_2489BCE44(v4);
    sub_2489B8F74(v3, v4);
    swift_endAccess();
    sub_2489BCE44(v2);
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 128) + 24;
    sub_2489C09C0();
    sub_2489BCE44(v5);
    sub_2489B8F74((__int128 *)v2, v5);
    swift_endAccess();
  }
  free((void *)v2);
}

void sub_2489EC394()
{
  static CoreDonationRecord.schemaMetadata.getter();
}

uint64_t sub_2489EC3A8()
{
  return CoreDonationRecord.hashValue.getter();
}

uint64_t sub_2489EC3C8()
{
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  return sub_248A451D4();
}

uint64_t sub_2489EC420()
{
  sub_248A45F90();
  sub_248A45480();
  return sub_248A45FD8();
}

uint64_t sub_2489EC47C()
{
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  return sub_248A45180();
}

uint64_t sub_2489EC4D4()
{
  sub_2489BA29C(&qword_254464638, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
  return sub_248A451BC();
}

void sub_2489EC528()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_2489BBC9C();
  if ((v2 & 1) != 0)
  {
    sub_2489C2684();
    if (v3 != v4)
    {
      sub_2489C09B4();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  sub_2489C037C();
  if (v1)
  {
    sub_2489C330C(&qword_2577A5200);
    v5 = (_QWORD *)sub_2489BA860();
    sub_2489C0654(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_2489C5038();
    sub_2489ED85C(v6, v7, v8);
    sub_2489BFFE0();
  }
  else
  {
    v9 = sub_2489C186C();
    sub_2489ECDC4(v9, v10, v11, v12);
  }
  sub_2489BA828();
}

void sub_2489EC5C4()
{
  sub_2489EC904();
}

void sub_2489EC5E0()
{
  sub_2489EC75C();
}

void sub_2489EC5FC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  size_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_2489BBC9C();
  if ((v2 & 1) != 0)
  {
    sub_2489C2684();
    if (v3 != v4)
    {
      sub_2489C09B4();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  sub_2489C037C();
  if (v1)
  {
    sub_2489C330C(&qword_254462B08);
    v5 = (const void *)sub_2489BA860();
    v6 = j__malloc_size(v5);
    sub_2489C629C(v6 - 32);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_2489C5038();
    sub_2489EDA00(v7, v8, v9);
    sub_2489BFFE0();
  }
  else
  {
    v10 = sub_2489C186C();
    sub_2489ED0F8(v10, v11, v12, v13);
  }
  sub_2489B6AF4();
}

void sub_2489EC6A4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_2489BBC9C();
  if ((v2 & 1) != 0)
  {
    sub_2489C2684();
    if (v3 != v4)
    {
      sub_2489C09B4();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  sub_2489C037C();
  if (v1)
  {
    sub_2489C330C(&qword_254462AF0);
    v5 = (_QWORD *)sub_2489BA860();
    sub_2489C0654(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_2489C5038();
    sub_2489EDA88(v6, v7, v8);
    sub_2489BFFE0();
  }
  else
  {
    v9 = sub_2489C186C();
    sub_2489ED214(v9, v10, v11, v12);
  }
  sub_2489BA828();
}

void sub_2489EC740()
{
  sub_2489EC75C();
}

void sub_2489EC75C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  const void *v11;
  size_t v12;

  sub_2489EDEB0();
  if ((v4 & 1) != 0)
  {
    sub_2489C2684();
    if (v8 != v9)
    {
      sub_2489C09B4();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  else
  {
    v7 = v3;
  }
  if (v7 <= *(_QWORD *)(v0 + 16))
    v10 = *(_QWORD *)(v0 + 16);
  else
    v10 = v7;
  if (v10)
  {
    sub_2489EDE94(v2, v3, v4, v5, v6);
    v11 = (const void *)sub_2489BA860();
    v12 = j__malloc_size(v11);
    v2 = sub_2489EDE6C(v12);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_2489C9414();
    sub_2489BFFE0();
  }
  else
  {
    sub_2489C3374(v2, v3, (uint64_t)v11 + 32);
  }
  sub_2489BA400();
}

char *sub_2489EC7FC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2489C330C(&qword_2577A5208);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_2489EDBAC((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2489ED40C(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void sub_2489EC8E8()
{
  sub_2489EC904();
}

void sub_2489EC904()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  const void *v11;
  size_t v12;

  sub_2489EDEB0();
  if ((v4 & 1) != 0)
  {
    sub_2489C2684();
    if (v8 != v9)
    {
      sub_2489C09B4();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  else
  {
    v7 = v3;
  }
  if (v7 <= *(_QWORD *)(v0 + 16))
    v10 = *(_QWORD *)(v0 + 16);
  else
    v10 = v7;
  if (v10)
  {
    sub_2489EDE94(v2, v3, v4, v5, v6);
    v11 = (const void *)sub_2489BA860();
    v12 = j__malloc_size(v11);
    v2 = sub_2489EDE6C(v12);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_2489C9414();
    sub_2489BFFE0();
  }
  else
  {
    sub_2489C3374(v2, v3, (uint64_t)v11 + 32);
  }
  sub_2489BA400();
}

uint64_t sub_2489EC9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489ECC2C(a1, a2, a3, a4, &qword_2544647F8, (void (*)(_QWORD))MEMORY[0x24BDEAB90]);
}

void sub_2489EC9B8()
{
  sub_2489BA29C(&qword_254464630, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
}

void sub_2489EC9E4()
{
  sub_2489BA29C(&qword_254464640, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
}

void sub_2489ECA10()
{
  sub_2489BA29C(&qword_254464650, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
}

void sub_2489ECA3C()
{
  sub_2489BA29C(&qword_254464648, (uint64_t (*)(uint64_t))type metadata accessor for CoreDonationRecord, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
}

void sub_2489ECA68()
{
  sub_2489BA29C(&qword_2577A51F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEAAB0], MEMORY[0x24BDEAAC8]);
}

void sub_2489ECA94(uint64_t a1@<X8>)
{
  CoreDonationRecord.persistentBackingData.getter(a1);
  sub_2489BA7D0();
}

uint64_t sub_2489ECAB4()
{
  return type metadata accessor for CoreDonationRecord();
}

uint64_t sub_2489ECABC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44FE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CoreDonationRecord()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreDonationRecord.__allocating_init(date:event:donationInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CoreDonationRecord.__allocating_init(backingData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for CoreDonationRecord._SwiftDataNoType()
{
  return &type metadata for CoreDonationRecord._SwiftDataNoType;
}

void sub_2489ECB7C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_2489BBC9C();
  if ((v2 & 1) != 0)
  {
    sub_2489C2684();
    if (v3 != v4)
    {
      sub_2489C09B4();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_2489BFCE8();
    }
  }
  sub_2489C037C();
  if (v1)
  {
    sub_2489C330C(&qword_254462F48);
    v5 = (_QWORD *)sub_2489BA860();
    sub_2489C0654(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_2489C5038();
    sub_2489EDC8C(v6, v7, v8);
    sub_2489BFFE0();
  }
  else
  {
    v9 = sub_2489C186C();
    sub_2489ED5F8(v9, v10, v11, v12);
  }
  sub_2489BA828();
}

uint64_t sub_2489ECC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489ECC2C(a1, a2, a3, a4, &qword_254462E68, (void (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_2489ECC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD))
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  size_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    sub_2489C2684();
    if (v10 != v11)
    {
      sub_2489C09B4();
      if (v10)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_2489BFCE8();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (!v13)
  {
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  sub_2489EDE94(a1, a2, a3, a4, a5);
  v14 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v18 = j__malloc_size(v17);
  if (!v15 || (v18 - v16 == 0x8000000000000000 ? (v19 = v15 == -1) : (v19 = 0), v19))
  {
LABEL_23:
    sub_2489C1A3C();
    sub_2489EDEC4();
    result = sub_248A45BF4();
    __break(1u);
    return result;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_18:
  v20 = *(unsigned __int8 *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8) + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = (unint64_t)v17 + v21;
  if ((v8 & 1) != 0)
  {
    sub_2489EDD4C(a4 + v21, v12, v22, a6);
    sub_2489BFFE0();
  }
  else
  {
    sub_2489ED714(0, v12, v22, a4, a6);
  }
  return (uint64_t)v17;
}

uint64_t sub_2489ECDC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_2489C330C(&qword_2577A4EB0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ECEE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_2489C330C(&qword_2544638C0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ECFFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ED0F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 320 * a1 + 32;
    v6 = a3 + 320 * v4;
    if (v5 >= v6 || v5 + 320 * v4 <= a3)
    {
      sub_2489C330C(&qword_254462748);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ED214(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 144 * a1 + 32;
    v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ED310(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ED40C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

char *sub_2489ED500(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ED5F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_2489C330C(&qword_254462ED8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_2489ED714(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    a5(0);
    sub_2489EDEF0();
    v11 = *(_QWORD *)(v10 + 72);
    v12 = a4 + v9 + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      sub_2489BDA70();
      return v14;
    }
  }
  sub_2489C1A3C();
  sub_2489EDEC4();
  result = sub_248A45C48();
  __break(1u);
  return result;
}

char *sub_2489ED804(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_2489C1A3C();
    result = (char *)sub_2489C39AC();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_2489C14D0(a3, result);
  }
  return result;
}

char *sub_2489ED85C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_2489ED8E8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_2489ED974(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

char *sub_2489EDA00(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[320 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 320 * a2);
  }
  return __src;
}

char *sub_2489EDA88(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[144 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 144 * a2);
  }
  return __src;
}

uint64_t sub_2489EDB14(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_2489EDD4C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CoreTip.ConstellationAction);
}

char *sub_2489EDB24(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

char *sub_2489EDBAC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_2489C1A3C();
    result = (char *)sub_2489C39AC();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)sub_2489C14D0(a3, result);
  }
  return result;
}

char *sub_2489EDC04(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_2489EDC8C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_2489C1A3C();
    result = (char *)sub_2489C39AC();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_2489C14D0(a3, result);
  }
  return result;
}

char *sub_2489EDCEC(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    sub_2489C1A3C();
    __src = (char *)sub_2489C39AC();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_2489EDD4C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  uint64_t result;

  if (a2 < 0)
  {
    sub_2489C1A3C();
    result = sub_2489C39AC();
    __break(1u);
  }
  else if (a3 < a1
         || (result = ((uint64_t (*)(_QWORD))a4)(0),
             a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    a4(0);
    sub_2489EDE80();
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    sub_2489EDE80();
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_2489EDE14(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_2489C1A3C();
    result = (char *)sub_2489C39AC();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_2489C14D0(a3, result);
  }
  return result;
}

uint64_t sub_2489EDE6C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_2489EDE80()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2489EDE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_2489C330C(a5);
}

uint64_t sub_2489EDED0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = result;
  *(_QWORD *)(v2 - 152) = v1;
  return result;
}

void sub_2489EDEE4()
{
  CoreDonationRecord.event.getter();
}

void sub_2489EDF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v27;
  uint64_t v28;

  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489BBC7C();
  v25 = v9 - v8;
  v10 = sub_2489C330C(&qword_254463B58);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489BBC7C();
  v12 = sub_2489C330C(&qword_254463A90);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_2489BFCC8();
  sub_2489C330C(&qword_254464818);
  v15 = sub_2489BD9B4();
  *(_OWORD *)(v15 + 16) = xmmword_248A49100;
  *(_QWORD *)(v15 + 32) = swift_getKeyPath();
  sub_248A456A8();
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A44C7C();
  type metadata accessor for CoreEventRecord();
  sub_248A44FAC();
  v28 = a2;
  sub_2489C330C(&qword_254463CA0);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_248A47480;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v17 + v16, v3, v12);
  sub_248A3D90C();
  if (!v27)
  {
    v20 = v18;
    swift_bridgeObjectRelease();
    sub_2489BEE88();
    sub_2489C230C();
    sub_2489BFA4C();
    if ((v20 & 1) != 0)
    {
      if ((sub_2489C1AAC() & 1) != 0)
      {
        sub_248A450B4();
        v21 = a1;
        v22 = a3;
        v24 = v28;
LABEL_9:
        sub_2489EE9F0((uint64_t *)&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
        sub_248A45180();
        v23 = sub_248A452AC();
        sub_2489BE7E0(v25, 0, 1, v23);
        sub_2489EE5A0(v21, v24, v25, v22);
        sub_2489BA884();
        swift_release();
        goto LABEL_10;
      }
      v24 = a2;
      v21 = a1;
    }
    else
    {
      v24 = a2;
      v21 = a1;
    }
    v22 = a3;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  sub_2489BEE88();

  sub_2489C230C();
  sub_2489BFA4C();
  sub_248A45A74();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  sub_248A4557C();
  sub_2489C9824();
  sub_2489BF740();
  *v19 = 0xD000000000000026;
  v19[1] = 0x8000000248A4FB60;
  swift_willThrow();
LABEL_10:
  sub_2489BA808();
}

uint64_t sub_2489EE2E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  v4 = sub_2489C330C(&qword_254464060);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_254463B00);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_254463AD0);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489EEB7C((uint64_t *)&qword_254463AF8, &qword_254463B00);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = v18;
  v23 = v19;
  sub_248A44DB4();
  a3[3] = sub_2489C330C(&qword_254463AA8);
  a3[4] = sub_2489EEA30();
  sub_2489BE690(a3);
  sub_2489EEB7C((uint64_t *)&qword_254463AC8, &qword_254463AD0);
  sub_2489EEB7C((uint64_t *)&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
}

uint64_t sub_2489EE538@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2489EE2E8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t *sub_2489EE540()
{
  type metadata accessor for CoreEventRecord();
  swift_allocObject();
  sub_248A453F0();
  return CoreEventRecord.init(id:)();
}

uint64_t *sub_2489EE598()
{
  return sub_2489EE540();
}

void sub_2489EE5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489BFCC8();
  sub_248A44F58();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489BBC7C();
  v14 = v13 - v12;
  sub_2489C330C(&qword_254464818);
  v15 = sub_2489BD9B4();
  *(_OWORD *)(v15 + 16) = xmmword_248A49100;
  *(_QWORD *)(v15 + 32) = swift_getKeyPath();
  sub_248A456A8();
  sub_248A2F634();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
    swift_allocObject();
    sub_248A453F0();
    swift_retain();
    CoreDonationRecord.init(date:event:donationInfo:)(v14, v17, a4);
    sub_2489EE8A4(v5);
    if (v4)
    {
      sub_2489BBCA8();
      swift_release();
    }
    else
    {
      sub_2489BA884();
      if ((sub_2489C1AAC() & 1) != 0)
        sub_2489C2694();
      sub_2489EE9B4();
      sub_2489D5444(a1, a2, a4);
      type metadata accessor for CoreRuleRecord();
      v19 = CoreEventRecord.rules.getter();
      sub_248A07E88(v19, a1, a2);
      swift_bridgeObjectRelease();
      if ((sub_2489C1AAC() & 1) != 0)
        sub_2489C2694();
      if (qword_254464240 != -1)
        swift_once();
      v20 = type metadata accessor for logger();
      sub_2489C401C(v20, (uint64_t)&unk_254464228);
      sub_248A45A74();
      swift_bridgeObjectRelease();
      sub_248A4557C();
      sub_248A4557C();
      sub_2489BE9AC();
      sub_2489BBCA8();
      sub_2489BEE88();
    }
  }
  else
  {
    sub_2489C9824();
    sub_2489BF740();
    *v18 = 0xD00000000000002ELL;
    v18[1] = 0x8000000248A4FB90;
    swift_willThrow();
  }
  sub_2489BA808();
}

uint64_t sub_2489EE8A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for CoreDonationRecord();
  sub_2489EE9F0((uint64_t *)&qword_254464638, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  v2 = sub_248A45198();
  swift_release();
  if (!v2)
    sub_248A450FC();
  sub_248A45180();
  v3 = sub_248A452AC();
  return sub_2489BE7E0(a1, 0, 1, v3);
}

uint64_t sub_2489EE974(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2489C330C(&qword_254464970);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2489EE9B4()
{
  unint64_t result;

  result = qword_254463000;
  if (!qword_254463000)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254463000);
  }
  return result;
}

uint64_t sub_2489EE9F0(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    a2(255);
    sub_2489BEDA0();
  }
  return result;
}

unint64_t sub_2489EEA30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254463AA0;
  if (!qword_254463AA0)
  {
    v1 = sub_2489BCD7C(&qword_254463AA8);
    v2[0] = sub_2489EEA9C();
    v2[1] = sub_2489EEB18();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254463AA0);
  }
  return result;
}

unint64_t sub_2489EEA9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254463AC0;
  if (!qword_254463AC0)
  {
    v1 = sub_2489BCD7C(&qword_254463AD0);
    v2 = sub_2489EEB7C((uint64_t *)&qword_254463AF0, &qword_254463B00);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254463AC0);
  }
  return result;
}

unint64_t sub_2489EEB18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254464050;
  if (!qword_254464050)
  {
    v1 = sub_2489BCD7C(&qword_254464060);
    v2[0] = MEMORY[0x24BEE0D38];
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254464050);
  }
  return result;
}

uint64_t sub_2489EEB7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_2489BCD7C(a2);
    sub_2489BEDA0();
  }
  return result;
}

uint64_t sub_2489EEBB4(void (*a1)(__int128 *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17[2];
  __int128 v18;
  char v19;
  uint64_t v20;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return MEMORY[0x24BEE4AF8];
  sub_248A453F0();
  v20 = a3;
  v8 = (_BYTE *)(a3 + 48);
  v9 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v10 = *v8;
    v18 = *((_OWORD *)v8 - 1);
    v19 = v10;
    a1(&v15, &v18);
    if (v4)
      break;
    if (v16)
    {
      sub_2489B8F74(&v15, (uint64_t)v17);
      sub_2489B8F74(v17, (uint64_t)&v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489ECB7C();
        v9 = v12;
      }
      v11 = *(_QWORD *)(v9 + 16);
      if (v11 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_2489ECB7C();
        v9 = v13;
      }
      *(_QWORD *)(v9 + 16) = v11 + 1;
      sub_2489B8F74(&v15, v9 + 40 * v11 + 32);
    }
    v8 += 24;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2489EED20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_2489C330C(&qword_254463B60);
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_2489BA474();
  sub_248A44FAC();
  sub_248A300C4();
  v3 = v2;
  sub_2489C0000();
  return v3;
}

uint64_t sub_2489EEEE0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2489EF6A8(a1);
}

uint64_t sub_2489EEF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t result;

  if (*(_BYTE *)(a3 + OBJC_IVAR___Predicate_argument + 16))
  {
    sub_248A45A74();
    sub_248A4557C();
    sub_248A45BAC();
    sub_248A4557C();
    sub_2489C9824();
    swift_allocError();
    *v6 = 0;
    v6[1] = 0xE000000000000000;
    return swift_willThrow();
  }
  else
  {
    result = sub_2489EF030(a1, a2, a3);
    if (!v4)
    {
      a4[3] = MEMORY[0x24BEE1768];
      *a4 = result;
    }
  }
  return result;
}

uint64_t sub_2489EF030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  v22 = sub_2489C330C(&qword_254463B60);
  v21 = *(_QWORD *)(v22 - 8);
  v9 = MEMORY[0x24BDAC7A8](v22, v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v20 - v13;
  v15 = *(_QWORD *)(a3 + OBJC_IVAR___Predicate_queries);
  if (v15 && *(_QWORD *)(v15 + 16))
  {
    sub_2489EF244(a1, a2);
    sub_248A300C4();
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v22);
    }
    else
    {
      v19 = sub_2489F0084(v15, v16);
      swift_bridgeObjectRelease();
      if (v19 >> 62)
      {
        sub_248A453F0();
        v4 = sub_248A45C18();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v22);
    }
  }
  else
  {
    sub_2489EF244(a1, a2);
    sub_248A30CD8();
    v4 = v17;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  }
  return v4;
}

uint64_t sub_2489EF244(uint64_t a1, uint64_t a2)
{
  MEMORY[0x24BDAC7A8](a1, a2);
  return sub_248A44FAC();
}

uint64_t sub_2489EF2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17 = a2;
  v18 = a3;
  v20 = sub_2489C330C(&qword_254464078);
  MEMORY[0x24BDAC7A8](v20, v6);
  v7 = sub_2489C330C(&qword_254463B18);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2489C330C(&qword_254463860);
  MEMORY[0x24BDAC7A8](v12, v13);
  v19 = sub_2489C330C(&qword_254463838);
  MEMORY[0x24BDAC7A8](v19, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  swift_getKeyPath();
  sub_2489C330C(&qword_254462EE0);
  sub_2489C5D3C(&qword_254463B10, &qword_254463B18, MEMORY[0x24BDCD230]);
  sub_248A44D90();
  type metadata accessor for CoreEventRecord();
  sub_2489C330C(&qword_254463AD0);
  v15 = MEMORY[0x24BDCD1C0];
  sub_2489C5D3C(&qword_254463858, &qword_254463860, MEMORY[0x24BDCD1C0]);
  sub_2489C5D3C(&qword_254463AC8, &qword_254463AD0, v15);
  sub_248A44D24();
  v21 = v17;
  v22 = v18;
  sub_248A453F0();
  sub_2489C330C(&qword_254464278);
  sub_248A44D84();
  a4[3] = sub_2489C330C(&qword_254463848);
  a4[4] = sub_2489EFC34();
  sub_2489BE690(a4);
  sub_2489C5D3C(&qword_254463830, &qword_254463838, MEMORY[0x24BDCCEA0]);
  sub_2489C5D3C(&qword_254464070, &qword_254464078, MEMORY[0x24BDCD130]);
  sub_2489EFE54(&qword_254464288, MEMORY[0x24BEE0D28], MEMORY[0x24BEE4AB8]);
  return sub_248A44D6C();
}

uint64_t sub_2489EF5D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2489C330C(&qword_254463B00);
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_getKeyPath();
  sub_2489C5D3C(&qword_254463AF8, &qword_254463B00, MEMORY[0x24BDCD230]);
  return sub_248A44D90();
}

uint64_t sub_2489EF6A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v26 = sub_2489C330C(&qword_254464078);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v1);
  sub_2489BBC7C();
  v4 = v3 - v2;
  v5 = sub_2489C330C(&qword_254463B18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_2489BBC7C();
  v10 = v9 - v8;
  v11 = sub_2489C330C(&qword_254463860);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  sub_2489BBC7C();
  v16 = v15 - v14;
  v23 = sub_2489C330C(&qword_254463838);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v17);
  sub_2489BBC7C();
  v20 = v19 - v18;
  sub_2489C5D3C(&qword_254463B10, &qword_254463B18, MEMORY[0x24BDCD230]);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  sub_2489C330C(&qword_254463AD0);
  type metadata accessor for CoreEventRecord();
  v21 = MEMORY[0x24BDCD1C0];
  sub_2489C5D3C(&qword_254463858, &qword_254463860, MEMORY[0x24BDCD1C0]);
  sub_2489C5D3C(&qword_254463AC8, &qword_254463AD0, v21);
  sub_248A44D0C();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
  sub_2489C330C(&qword_254464278);
  sub_248A44DB4();
  a1[3] = sub_2489C330C(&qword_254463848);
  a1[4] = sub_2489EFC34();
  sub_2489BE690(a1);
  sub_2489C5D3C(&qword_254463830, &qword_254463838, MEMORY[0x24BDCCEA0]);
  sub_2489C5D3C(&qword_254464070, &qword_254464078, MEMORY[0x24BDCD130]);
  sub_2489EFE54(&qword_254464288, MEMORY[0x24BEE0D28], MEMORY[0x24BEE4AB8]);
  sub_248A44CF4();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v26);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v20, v23);
}

uint64_t sub_2489EF9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_2489C330C(&qword_254463B00);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  sub_2489BA474();
  sub_2489C5D3C(&qword_254463AF8, &qword_254463B00, MEMORY[0x24BDCD230]);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_2489EFAB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17[2];
  _QWORD v18[5];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[6];

  v16 = *a1;
  v8 = v16;
  v9 = sub_2489EEBB4((void (*)(__int128 *__return_ptr, __int128 *))sub_2489EFEBC, (uint64_t)&v15, a2);
  sub_2489EF2D8(v8, a3, a4, v22);
  sub_2489C4880((uint64_t)v22, (uint64_t)&v19);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v9 + 32;
    sub_248A453F0();
    do
    {
      sub_2489C4880(v11, (uint64_t)v18);
      v12 = v20;
      v13 = v21;
      sub_2489BE100(&v19, v20);
      StandardPredicateExpression<>.join(_:)(v18, v12, v13, (uint64_t *)v17);
      sub_2489BCE44((uint64_t)v18);
      sub_2489BCE44((uint64_t)&v19);
      sub_2489B8F74(v17, (uint64_t)&v19);
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  sub_2489B8F74(&v19, a5);
  sub_2489BCE44((uint64_t)v22);
  return swift_bridgeObjectRelease();
}

void sub_2489EFBD8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    sub_248A00DA0(a2, *(_QWORD *)a1, *(_QWORD *)(a1 + 8), a3);
  else
    sub_248A00B0C(a2, a3);
}

unint64_t sub_2489EFC34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254463840;
  if (!qword_254463840)
  {
    v1 = sub_2489BCD7C(&qword_254463848);
    v2[0] = sub_2489EFCA0();
    v2[1] = sub_2489EFDB8();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254463840);
  }
  return result;
}

unint64_t sub_2489EFCA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_254463828;
  if (!qword_254463828)
  {
    v1 = sub_2489BCD7C(&qword_254463838);
    sub_2489EFD4C(&qword_254463850, &qword_254463860, &qword_254463B08, &qword_254463B18);
    v3 = v2;
    sub_2489EFD4C((unint64_t *)&qword_254463AC0, &qword_254463AD0, &qword_254463AF0, &qword_254463B00);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCCE98], v1, v5);
    atomic_store(result, (unint64_t *)&qword_254463828);
  }
  return result;
}

void sub_2489EFD4C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;

  if (!*a1)
  {
    v7 = sub_2489BCD7C(a2);
    v8 = sub_2489C5D3C(a3, a4, MEMORY[0x24BDCD228]);
    atomic_store(MEMORY[0x2495A2D34](MEMORY[0x24BDCD1B8], v7, &v8), a1);
  }
  sub_2489BA428();
}

unint64_t sub_2489EFDB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_254464068;
  if (!qword_254464068)
  {
    v1 = sub_2489BCD7C(&qword_254464078);
    sub_2489EFE54(&qword_254464290, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4AC0]);
    v3 = v2;
    sub_2489EFE54(&qword_254464280, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD128], v1, v5);
    atomic_store(result, (unint64_t *)&qword_254464068);
  }
  return result;
}

void sub_2489EFE54(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_2489BCD7C(&qword_254464278);
    v7 = a2;
    atomic_store(MEMORY[0x2495A2D34](a3, v6, &v7), a1);
  }
  sub_2489BA428();
}

uint64_t sub_2489EFEB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2489EFAB0(a1, v2[2], v2[4], v2[5], a2);
}

void sub_2489EFEBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2489EFBD8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2489EFED4(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a3;
  v18 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v15 = v4 & 0xFFFFFFFFFFFFFF8;
      v16 = v4 & 0xC000000000000001;
      v14 = v4;
      while (v16)
      {
        v9 = MEMORY[0x2495A2200](v8, v4);
LABEL_7:
        v10 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v17 = v9;
        v11 = a2;
        v12 = a1(&v17);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          return v11;
        }
        if ((v12 & 1) != 0)
        {
          sub_248A45B10();
          sub_248A45B40();
          v4 = v14;
          sub_248A45B4C();
          sub_248A45B1C();
        }
        else
        {
          swift_release();
        }
        ++v8;
        if (v10 == v7)
        {
          v11 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v15 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_248A45C18();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(_QWORD *)(v4 + 8 * v8 + 32);
    swift_retain();
    goto LABEL_7;
  }
LABEL_19:
  v11 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_2489F0084(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[7];
  _BYTE v10[64];

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = a1 + 32;
    sub_248A453F0();
    v9[5] = a1;
    sub_248A453F0();
    v9[6] = 0x8000000248A4FC30;
    do
    {
      v6 = sub_2489F1114(v5, (uint64_t)v10);
      if ((v10[24] & 1) != 0)
        __asm { BR              X8 }
      MEMORY[0x24BDAC7A8](v6, v7);
      v9[2] = v10;
      sub_248A453F0();
      a2 = sub_2489EFED4((uint64_t (*)(uint64_t *))sub_2489F119C, (uint64_t)v9, a2);
      sub_2489F1150((uint64_t)v10);
      swift_bridgeObjectRelease();
      v5 += 64;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_248A453F0();
  }
  return a2;
}

uint64_t sub_2489F0520(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[4];
  _OWORD v11[2];
  _OWORD v12[2];

  v3 = *a2;
  CoreDonationRecord.donationInfo.getter();
  if (v4)
  {
    v5 = v4;
    v6 = *((_QWORD *)a2 + 1);
    v7 = *((_QWORD *)a2 + 2);
    sub_248A453F0();
    sub_2489C4C6C(v6, v7, v5, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_2489C7F24((uint64_t)(a2 + 32), (uint64_t)v10, &qword_254464700);
  if (v10[3])
  {
    sub_2489C81EC((uint64_t)v10, (uint64_t)v11);
    sub_2489C7218((uint64_t)v10);
  }
  else
  {
    sub_2489C32D0((uint64_t)v10, &qword_254464700);
    memset(v11, 0, sizeof(v11));
  }
  v8 = sub_2489F0638((uint64_t)v12, (uint64_t)v11, v3);
  sub_2489C32D0((uint64_t)v11, &qword_254464AF0);
  sub_2489C32D0((uint64_t)v12, &qword_2544643E0);
  return v8 & 1;
}

uint64_t sub_2489F0638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  void *v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _QWORD v32[4];
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  Swift::OpaquePointer_optional v36;

  if ((sub_2489FE0FC(a3, 0) & 1) == 0)
  {
LABEL_5:
    if ((sub_2489FE0FC(a3, 1) & 1) != 0)
    {
      sub_2489C7F24(a1, (uint64_t)v32, &qword_2544643E0);
      sub_2489C330C(&qword_2544643E0);
      sub_2489C330C(&qword_254463A80);
      if (swift_dynamicCast())
      {
        sub_2489B8F74(&v29, (uint64_t)v33);
        sub_2489BE100(v33, v34);
        v10 = default argument 1 of Equatable.isNotEqual(_:checkReverse:)();
        Equatable.isNotEqual(_:checkReverse:)(a2, v10 & 1);
        goto LABEL_31;
      }
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
      sub_2489C32D0((uint64_t)&v29, &qword_2577A5210);
    }
    if ((sub_2489FE0FC(a3, 6) & 1) != 0)
    {
      sub_2489C7F24(a1, (uint64_t)v32, &qword_2544643E0);
      sub_2489C330C(&qword_2544643E0);
      sub_2489C330C(&qword_254463A80);
      if (swift_dynamicCast())
      {
        sub_2489B8F74(&v29, (uint64_t)v33);
        v11 = v34;
        sub_2489BE100(v33, v34);
        sub_2489C7F24(a2, (uint64_t)&v29, &qword_254464AF0);
        if (*((_QWORD *)&v30 + 1))
        {
          sub_2489C330C(&qword_2544647C8);
          if (swift_dynamicCast())
            v12 = (void *)v32[0];
          else
            v12 = 0;
        }
        else
        {
          sub_2489C32D0((uint64_t)&v29, &qword_254464AF0);
          v12 = 0;
        }
        v36.value._rawValue = v12;
        v36.is_nil = v11;
        v25 = Equatable.exists(in:)(v36);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
      sub_2489C32D0((uint64_t)&v29, &qword_2577A5210);
    }
    if ((sub_2489FE0FC(a3, 2) & 1) != 0)
    {
      sub_2489C7F24(a1, (uint64_t)v32, &qword_2544643E0);
      sub_2489C330C(&qword_2544643E0);
      sub_2489C330C(&qword_2544624E8);
      if (swift_dynamicCast())
      {
        sub_2489B8F74(&v29, (uint64_t)v33);
        v13 = v34;
        v14 = v35;
        sub_2489BE100(v33, v34);
        v15 = default argument 1 of Comparable.isLessThan(_:checkReverse:)(v13, v14);
        v9 = Comparable.isLessThan(_:checkReverse:)(a2, v15 & 1, v13, v14);
        goto LABEL_31;
      }
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
      sub_2489C32D0((uint64_t)&v29, &qword_2577A50C0);
    }
    if ((sub_2489FE0FC(a3, 3) & 1) != 0)
    {
      sub_2489C7F24(a1, (uint64_t)v32, &qword_2544643E0);
      sub_2489C330C(&qword_2544643E0);
      sub_2489C330C(&qword_2544624E8);
      if (swift_dynamicCast())
      {
        sub_2489B8F74(&v29, (uint64_t)v33);
        v16 = v34;
        v17 = v35;
        sub_2489BE100(v33, v34);
        v18 = default argument 1 of Comparable.isLessThanOrEqual(_:checkReverse:)(v16, v17);
        v9 = Comparable.isLessThanOrEqual(_:checkReverse:)(a2, v18 & 1, v16, v17);
        goto LABEL_31;
      }
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
      sub_2489C32D0((uint64_t)&v29, &qword_2577A50C0);
    }
    if ((sub_2489FE0FC(a3, 4) & 1) != 0)
    {
      sub_2489C7F24(a1, (uint64_t)v32, &qword_2544643E0);
      sub_2489C330C(&qword_2544643E0);
      sub_2489C330C(&qword_2544624E8);
      if (swift_dynamicCast())
      {
        sub_2489B8F74(&v29, (uint64_t)v33);
        v19 = v34;
        v20 = v35;
        sub_2489BE100(v33, v34);
        v21 = default argument 1 of Comparable.isGreaterThan(_:checkReverse:)(v19, v20);
        v9 = Comparable.isGreaterThan(_:checkReverse:)(a2, v21 & 1, v19, v20);
        goto LABEL_31;
      }
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
      sub_2489C32D0((uint64_t)&v29, &qword_2577A50C0);
    }
    if ((sub_2489FE0FC(a3, 5) & 1) != 0)
    {
      sub_2489C7F24(a1, (uint64_t)v32, &qword_2544643E0);
      sub_2489C330C(&qword_2544643E0);
      sub_2489C330C(&qword_2544624E8);
      if (swift_dynamicCast())
      {
        sub_2489B8F74(&v29, (uint64_t)v33);
        v22 = v34;
        v23 = v35;
        sub_2489BE100(v33, v34);
        v24 = default argument 1 of Comparable.isGreaterThanOrEqual(_:checkReverse:)(v22, v23);
        v9 = Comparable.isGreaterThanOrEqual(_:checkReverse:)(a2, v24 & 1, v22, v23);
        goto LABEL_31;
      }
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
      sub_2489C32D0((uint64_t)&v29, &qword_2577A50C0);
    }
    sub_2489C7F24(a1, (uint64_t)v33, &qword_2544643E0);
    sub_2489C330C(&qword_2544643E0);
    sub_2489C966C();
    if (swift_dynamicCast())
    {
      v27 = (void *)v29;
      sub_2489C7F24(a2, (uint64_t)v33, &qword_254464AF0);
      if (v34)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v28 = (void *)v29;
          LOBYTE(v33[0]) = a3;
          v25 = sub_2489FE19C((uint64_t)v27);

          return v25 & 1;
        }

      }
      else
      {

        sub_2489C32D0((uint64_t)v33, &qword_254464AF0);
      }
    }
    v25 = 0;
    return v25 & 1;
  }
  sub_2489C7F24(a1, (uint64_t)v32, &qword_2544643E0);
  sub_2489C330C(&qword_2544643E0);
  sub_2489C330C(&qword_254463A80);
  if (!swift_dynamicCast())
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
    sub_2489C32D0((uint64_t)&v29, &qword_2577A5210);
    goto LABEL_5;
  }
  sub_2489B8F74(&v29, (uint64_t)v33);
  v6 = v34;
  v7 = v35;
  sub_2489BE100(v33, v34);
  v8 = default argument 1 of Equatable.isEqual(_:checkReverse:)(v6, v7);
  Equatable.isEqual(_:checkReverse:)(a2, v8 & 1);
LABEL_31:
  v25 = v9;
LABEL_32:
  sub_2489BCE44((uint64_t)v33);
  return v25 & 1;
}

void (*sub_2489F0D14(void (*a1)(_QWORD *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3))(_QWORD *__return_ptr, uint64_t *)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_248A453F0();
  sub_2489F11B8(a3, a1);
  if (!v3)
  {
    sub_248A453F0();
    sub_248A43AE0();
    v7 = v6;
    swift_bridgeObjectRelease_n();
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      a1 = *(void (**)(_QWORD *__return_ptr, uint64_t *))(v7 + 32);
      v9 = v8 - 1;
      if (v8 == 1)
      {
        sub_248A453F0();
      }
      else
      {
        swift_retain();
        sub_248A453F0();
        v10 = 0;
        v11 = (unint64_t)a1;
        do
        {
          v12 = *(_QWORD *)(v7 + 8 * v10 + 40);
          if (v11 >> 62)
          {
            sub_248A453F0();
            sub_248A453F0();
            v13 = sub_248A45C18();
            swift_bridgeObjectRelease();
          }
          else
          {
            v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
            sub_248A453F0();
          }
          if (v12 >> 62)
          {
            sub_248A453F0();
            v14 = sub_248A45C18();
            swift_bridgeObjectRelease();
          }
          else
          {
            v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v13 < v14)
            v11 = v12;
          swift_bridgeObjectRelease();
          ++v10;
        }
        while (v9 != v10);
        swift_release();
        a1 = (void (*)(_QWORD *__return_ptr, uint64_t *))v11;
      }
      swift_release();
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  return a1;
}

uint64_t sub_2489F0EAC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;

  CoreDonationRecord.donationInfo.getter();
  if (!v4)
  {
    v9 = 0u;
    v10 = 0u;
    goto LABEL_6;
  }
  v5 = v4;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  sub_248A453F0();
  sub_2489C4C6C(v6, v7, v5, &v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_6:
    result = sub_2489C32D0((uint64_t)&v9, &qword_2544643E0);
    goto LABEL_7;
  }
  sub_2489C330C(&qword_2544643C0);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_7:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void (*sub_2489F0F80(void (*a1)(_QWORD *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3))(_QWORD *__return_ptr, uint64_t *)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_248A453F0();
  sub_2489F11B8(a3, a1);
  if (!v3)
  {
    sub_248A453F0();
    sub_248A43AE0();
    v7 = v6;
    swift_bridgeObjectRelease_n();
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      a1 = *(void (**)(_QWORD *__return_ptr, uint64_t *))(v7 + 32);
      v9 = v8 - 1;
      if (v8 == 1)
      {
        sub_248A453F0();
      }
      else
      {
        swift_retain();
        sub_248A453F0();
        v10 = 0;
        v11 = (unint64_t)a1;
        do
        {
          v12 = *(_QWORD *)(v7 + 8 * v10 + 40);
          if (v12 >> 62)
          {
            swift_bridgeObjectRetain_n();
            v13 = sub_248A45C18();
            swift_bridgeObjectRelease();
          }
          else
          {
            v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
            sub_248A453F0();
          }
          if (v11 >> 62)
          {
            sub_248A453F0();
            v14 = sub_248A45C18();
            swift_bridgeObjectRelease();
          }
          else
          {
            v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v13 < v14)
            v11 = v12;
          swift_bridgeObjectRelease();
          ++v10;
        }
        while (v9 != v10);
        swift_release();
        a1 = (void (*)(_QWORD *__return_ptr, uint64_t *))v11;
      }
      swift_release();
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  return a1;
}

uint64_t sub_2489F1114(uint64_t a1, uint64_t a2)
{
  _s14descr2519BBE51C5QueryVwcp(a2, a1);
  return a2;
}

uint64_t sub_2489F1150(uint64_t a1)
{
  _s14descr2519BBE51C5QueryVwxx(a1);
  return a1;
}

uint64_t sub_2489F1184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2489F0EAC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2489F119C(uint64_t a1)
{
  uint64_t v1;

  return sub_2489F0520(a1, *(unsigned __int8 **)(v1 + 16)) & 1;
}

uint64_t sub_2489F11B8(unint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  uint64_t v27;
  _QWORD v28[5];
  uint64_t v29;
  _QWORD *v30;

  v3 = v2;
  v4 = a1;
  v30 = (_QWORD *)MEMORY[0x24BEE4B00];
  if (a1 >> 62)
  {
LABEL_25:
    sub_248A453F0();
    v5 = sub_248A45C18();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      v25 = v4 & 0xC000000000000001;
      v6 = (_QWORD *)MEMORY[0x24BEE4B00];
      for (i = 4; ; ++i)
      {
        if (v25)
        {
          v8 = MEMORY[0x2495A2200](i - 4, v4);
        }
        else
        {
          v8 = *(_QWORD *)(v4 + 8 * i);
          swift_retain();
        }
        v9 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        v29 = v8;
        a2(v28, &v29);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          return (uint64_t)v6;
        }
        v3 = v4;
        v4 = v5;
        v11 = sub_2489CE0AC((uint64_t)v28);
        v12 = v6[2];
        v13 = (v10 & 1) == 0;
        v14 = v12 + v13;
        if (__OFADD__(v12, v13))
          goto LABEL_23;
        v15 = v10;
        if (v6[3] < v14)
        {
          sub_2489CFD84(v14, 1);
          v6 = v30;
          v16 = sub_2489CE0AC((uint64_t)v28);
          if ((v15 & 1) != (v17 & 1))
          {
            sub_2489C330C(&qword_254463A60);
            result = sub_248A45F30();
            __break(1u);
            return result;
          }
          v11 = v16;
        }
        if ((v15 & 1) != 0)
        {
          v18 = sub_2489C32D0((uint64_t)v28, &qword_254463A60);
          v6 = v30;
          v19 = (_QWORD *)(v30[7] + 8 * v11);
          MEMORY[0x2495A1DF8](v18);
          if (*(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_248A456C0();
          sub_248A456E4();
          sub_248A456A8();
        }
        else
        {
          sub_2489C330C(&qword_254464818);
          v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_248A49100;
          *(_QWORD *)(v20 + 32) = v8;
          v27 = v20;
          sub_248A456A8();
          v6[(v11 >> 6) + 8] |= 1 << v11;
          sub_2489F149C((uint64_t)v28, v6[6] + 40 * v11);
          *(_QWORD *)(v6[7] + 8 * v11) = v27;
          v21 = v6[2];
          v22 = __OFADD__(v21, 1);
          v23 = v21 + 1;
          if (v22)
            goto LABEL_24;
          v6[2] = v23;
        }
        v5 = v4;
        v4 = v3;
        v3 = 0;
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4B00];
}

uint64_t sub_2489F149C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254463A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489F14E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2489F1184(a1);
}

uint64_t sub_2489F14F8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_248A453F0();
  for (; v2; v2 = sub_248A45C18())
  {
    v3 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2495A2200](v3 - 4, a1);
      else
        swift_retain();
      v4 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v5 = swift_retain();
      CoreDonationRecord.event.setter(v5);
      swift_release();
      ++v3;
      if (v4 == v2)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    sub_248A453F0();
  }
LABEL_9:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489F15E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[5];
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_2489BED74();
  v35 = v2;
  v36 = v3;
  v29 = v1;
  v28[0] = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_2489C330C(&qword_254463B58);
  v28[1] = *(_QWORD *)(v10 - 8);
  v28[2] = v10;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489BA48C();
  v13 = sub_2489C330C(&qword_254463A90);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A44C7C();
  v28[3] = v9;
  v28[4] = v7;
  v30 = v9;
  v31 = v7;
  v34 = type metadata accessor for CoreEventRecord();
  sub_248A44FAC();
  sub_2489C330C(&qword_254463CA0);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_248A47480;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 16))(v19 + v18, v17, v13);
  v20 = v29;
  sub_2489F1AD8();
  if (v20)
  {
    sub_2489BBC58();

    sub_2489BDA78();
    sub_2489F2328();
LABEL_3:
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    sub_248A4557C();
    sub_248A4557C();
    v22 = v32;
    v23 = v33;
    sub_2489C9824();
    swift_allocError();
    *v24 = v22;
    v24[1] = v23;
    return swift_willThrow();
  }
  v26 = v21;
  v29 = v5;
  sub_2489BBC58();
  sub_2489BDA78();
  sub_2489F2328();
  if (!v26)
    goto LABEL_3;
  v27 = sub_2489EED20();
  swift_retain();
  sub_2489F14F8(v27);
  sub_2489BA4B8();
  return sub_2489BBC58();
}

uint64_t sub_2489F1880@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  v4 = sub_2489C330C(&qword_254464060);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_254463B00);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_254463AD0);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489EEB7C((uint64_t *)&qword_254463AF8, &qword_254463B00);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = v18;
  v23 = v19;
  sub_248A44DB4();
  a3[3] = sub_2489C330C(&qword_254463AA8);
  a3[4] = sub_2489EEA30();
  sub_2489BE690(a3);
  sub_2489EEB7C((uint64_t *)&qword_254463AC8, &qword_254463AD0);
  sub_2489EEB7C((uint64_t *)&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
}

uint64_t sub_2489F1AD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2489F1880(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_2489F1AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_2489BED74();
  sub_2489C5EA8(v5, v6, v7, v8);
  sub_2489C330C(&qword_254464588);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489BA48C();
  v11 = sub_2489C330C(&qword_254463C00);
  v12 = sub_2489BA88C(v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489C187C();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489C5950();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489C5104();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_2489BA4A4();
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  sub_2489C6FD8(v22, v23, v24, v25, v26, v27, v28, v29, v33);
  v30 = sub_2489C330C(&qword_254463B58);
  sub_2489C39E0(v30);
  sub_2489BFD04();
  type metadata accessor for CoreEventRecord();
  v31 = sub_2489EE9F0((uint64_t *)&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_2489C038C();
  sub_2489B7214();
  sub_2489C0024();
  sub_2489C1AB4(v4, v2);
  sub_2489B6B18();
  sub_2489C618C();
  sub_2489C1508();
  sub_2489C1AB4(v0, v4);
  sub_2489BBCA8();
  sub_2489B721C();
  sub_2489C07E4();
  sub_2489C0B48();
  sub_2489C1AB4(v3, v0);
  sub_2489BBCA8();
  sub_2489C9420();
  sub_2489C0678();
  sub_2489C6BB0();
  sub_2489C1AB4(v34, v3);
  sub_2489B6B20();
  sub_2489BF7D0();
  sub_2489C2328();
  if (v0)
    goto LABEL_9;
  if (v31 >> 62)
  {
    sub_2489BF5DC();
    if (sub_2489C9428())
      goto LABEL_4;
  }
  else
  {
    sub_2489C6CA4();
    if (v1)
    {
LABEL_4:
      if ((v31 & 0xC000000000000001) != 0)
        sub_2489BD8C8();
      sub_2489C3384();
    }
  }
  sub_2489BBC58();
  v32 = sub_2489BEE90();
  sub_2489BBC58();
  if (!v32)
    sub_2489BA4B8();
LABEL_9:
  sub_2489C60D8();
  sub_2489BA808();
}

void sub_2489F1CD0()
{
  JUMPOUT(0x2489F1CA8);
}

uint64_t sub_2489F1CD8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

void sub_2489F1D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_2489BED74();
  sub_2489C5EA8(v5, v6, v7, v8);
  sub_2489C330C(&qword_254464598);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489BA48C();
  v11 = sub_2489C330C(&qword_254463C10);
  v12 = sub_2489BA88C(v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489C187C();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489C5950();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489C5104();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_2489BA4A4();
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  sub_2489C6FD8(v22, v23, v24, v25, v26, v27, v28, v29, v33);
  v30 = sub_2489C330C(&qword_254463B68);
  sub_2489C39E0(v30);
  sub_2489BFD04();
  type metadata accessor for CoreParameterRecord();
  v31 = sub_2489EE9F0(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489C038C();
  sub_2489B7214();
  sub_2489C0024();
  sub_2489C1AB4(v4, v2);
  sub_2489B6B18();
  sub_2489C618C();
  sub_2489C1508();
  sub_2489C1AB4(v0, v4);
  sub_2489BBCA8();
  sub_2489B721C();
  sub_2489C07E4();
  sub_2489C0B48();
  sub_2489C1AB4(v3, v0);
  sub_2489BBCA8();
  sub_2489C9420();
  sub_2489C0678();
  sub_2489C6BB0();
  sub_2489C1AB4(v34, v3);
  sub_2489B6B20();
  sub_2489BF7D0();
  sub_2489C2328();
  if (v0)
    goto LABEL_9;
  if (v31 >> 62)
  {
    sub_2489BF5DC();
    if (sub_2489C9428())
      goto LABEL_4;
  }
  else
  {
    sub_2489C6CA4();
    if (v1)
    {
LABEL_4:
      if ((v31 & 0xC000000000000001) != 0)
        sub_2489BD8C8();
      sub_2489C3384();
    }
  }
  sub_2489BBC58();
  v32 = sub_2489BEE90();
  sub_2489BBC58();
  if (!v32)
    sub_2489BA4B8();
LABEL_9:
  sub_2489C60D8();
  sub_2489BA808();
}

void sub_2489F1F20()
{
  JUMPOUT(0x2489F1EF8);
}

void sub_2489F1F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_2489BED74();
  sub_2489C5EA8(v5, v6, v7, v8);
  sub_2489C330C(&qword_2544645A0);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489BA48C();
  v11 = sub_2489C330C(&qword_254464250);
  v12 = sub_2489BA88C(v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489C187C();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489C5950();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489C5104();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_2489BA4A4();
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  sub_2489C6FD8(v22, v23, v24, v25, v26, v27, v28, v29, v33);
  v30 = sub_2489C330C(&qword_254464118);
  sub_2489C39E0(v30);
  sub_2489BFD04();
  type metadata accessor for CoreTipRecord();
  v31 = sub_2489EE9F0(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489C038C();
  sub_2489B7214();
  sub_2489C0024();
  sub_2489C1AB4(v4, v2);
  sub_2489B6B18();
  sub_2489C618C();
  sub_2489C1508();
  sub_2489C1AB4(v0, v4);
  sub_2489BBCA8();
  sub_2489B721C();
  sub_2489C07E4();
  sub_2489C0B48();
  sub_2489C1AB4(v3, v0);
  sub_2489BBCA8();
  sub_2489C9420();
  sub_2489C0678();
  sub_2489C6BB0();
  sub_2489C1AB4(v34, v3);
  sub_2489B6B20();
  sub_2489BF7D0();
  sub_2489C2328();
  if (v0)
    goto LABEL_9;
  if (v31 >> 62)
  {
    sub_2489BF5DC();
    if (sub_2489C9428())
      goto LABEL_4;
  }
  else
  {
    sub_2489C6CA4();
    if (v1)
    {
LABEL_4:
      if ((v31 & 0xC000000000000001) != 0)
        sub_2489BD8C8();
      sub_2489C3384();
    }
  }
  sub_2489BBC58();
  v32 = sub_2489BEE90();
  sub_2489BBC58();
  if (!v32)
    sub_2489BA4B8();
LABEL_9:
  sub_2489C60D8();
  sub_2489BA808();
}

void sub_2489F2120()
{
  JUMPOUT(0x2489F20F8);
}

void sub_2489F2128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_2489BED74();
  sub_2489C5EA8(v5, v6, v7, v8);
  sub_2489C330C(&qword_254464590);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489BA48C();
  v11 = sub_2489C330C(&qword_254463C08);
  v12 = sub_2489BA88C(v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489C187C();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489C5950();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489C5104();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_2489BA4A4();
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  sub_2489C6FD8(v22, v23, v24, v25, v26, v27, v28, v29, v33);
  v30 = sub_2489C330C(&qword_254463B60);
  sub_2489C39E0(v30);
  sub_2489BFD04();
  type metadata accessor for CoreDonationRecord();
  v31 = sub_2489EE9F0((uint64_t *)&qword_254464638, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  sub_2489C038C();
  sub_2489B7214();
  sub_2489C0024();
  sub_2489C1AB4(v4, v2);
  sub_2489B6B18();
  sub_2489C618C();
  sub_2489C1508();
  sub_2489C1AB4(v0, v4);
  sub_2489BBCA8();
  sub_2489B721C();
  sub_2489C07E4();
  sub_2489C0B48();
  sub_2489C1AB4(v3, v0);
  sub_2489BBCA8();
  sub_2489C9420();
  sub_2489C0678();
  sub_2489C6BB0();
  sub_2489C1AB4(v34, v3);
  sub_2489B6B20();
  sub_2489BF7D0();
  sub_2489C2328();
  if (v0)
    goto LABEL_9;
  if (v31 >> 62)
  {
    sub_2489BF5DC();
    if (sub_2489C9428())
      goto LABEL_4;
  }
  else
  {
    sub_2489C6CA4();
    if (v1)
    {
LABEL_4:
      if ((v31 & 0xC000000000000001) != 0)
        sub_2489BD8C8();
      sub_2489C3384();
    }
  }
  sub_2489BBC58();
  v32 = sub_2489BEE90();
  sub_2489BBC58();
  if (!v32)
    sub_2489BA4B8();
LABEL_9:
  sub_2489C60D8();
  sub_2489BA808();
}

void sub_2489F2320()
{
  JUMPOUT(0x2489F22F8);
}

uint64_t sub_2489F2328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t CoreEvent.event.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2489C4880(v1 + 16, a1);
}

uint64_t CoreEvent.id.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + 2;
  v2 = v0[5];
  v3 = v0[6];
  sub_2489BE100(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 16))(v2);
}

uint64_t CoreEvent.__allocating_init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CoreEvent.init(_:datastore:)(a1, a2);
  return v4;
}

uint64_t CoreEvent.init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __int128 v7[2];

  sub_2489C4880(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  sub_2489C4880(a1, (uint64_t)v7);
  v5 = swift_allocObject();
  sub_2489B8F74(v7, v5 + 16);
  swift_unownedRetain();
  sub_248A37864((uint64_t)&unk_2577A5220, v5);
  swift_release();
  sub_2489BCE44(a1);
  swift_release();
  return v2;
}

uint64_t sub_2489F247C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  sub_2489C330C(&qword_254464970);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2489F24D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int v8;

  if (qword_254463990 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess();
  v3 = v1[3];
  v4 = v1[4];
  sub_2489BE100(v1, v3);
  v5 = *(_QWORD *)(v4 + 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v6(v3, v5);
  sub_2489F7468();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = sub_248A452AC();
  v8 = sub_2489BE834(v2, 1, v7);
  sub_2489EE974(v2);
  if (v8 == 1)
  {
    sub_2489BE100(*(_QWORD **)(v0 + 48), v1[3]);
    type metadata accessor for CoreEventRecord();
    sub_2489F6444();
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489F2648()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2489F266C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2489F26C0;
  return sub_2489F247C(a1, v1 + 16);
}

uint64_t sub_2489F26C0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t CoreEvent.mapDonations<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[8];
  uint64_t v16;

  swift_unownedRetainStrong();
  v8 = v3 + 2;
  v10 = v3[5];
  v9 = v3[6];
  sub_2489BE100(v8, v10);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v9 + 8) + 16))(v10);
  v15[2] = a3;
  v15[3] = v11;
  v15[4] = v12;
  v15[5] = a1;
  v15[6] = a2;
  v13 = sub_248A45708();
  MiniTipsDatastore.performAndWait<A>(_:)((void (*)(uint64_t))sub_2489F290C, (uint64_t)v15, v13, (uint64_t)&v16);
  swift_release();
  if (v4)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_2489F27EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for CoreDonationRecord();
  sub_2489EED20();
  sub_2489C330C(&qword_254463C28);
  sub_2489F2964();
  v3 = sub_248A45600();
  result = swift_bridgeObjectRelease();
  if (!v1)
    *a1 = v3;
  return result;
}

uint64_t CoreEvent.deinit()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  swift_unownedRelease();
  return v0;
}

uint64_t sub_2489F28E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreEvent.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2489F290C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2489F27EC(a1);
}

uint64_t method lookup function for CoreEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreEvent.__allocating_init(_:datastore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_2489F2940(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 24))(*a1);
}

unint64_t sub_2489F2964()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254463C30;
  if (!qword_254463C30)
  {
    v1 = sub_2489BCD7C(&qword_254463C28);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254463C30);
  }
  return result;
}

uint64_t CoreEvent.donate()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2489F3B7C;
  return CoreEvent.donate(donationInfo:)(0);
}

uint64_t CoreEvent.donate(donationInfo:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_2489BFA58();
}

uint64_t sub_2489F2A00()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v12)(void);

  v1 = v0[2];
  v2 = (_QWORD *)v0[3];
  v3 = v2[7];
  swift_unownedRetainStrong();
  v0[4] = *(_QWORD *)(v3 + 64);
  swift_retain();
  sub_2489BF7F0();
  v5 = v2[5];
  v4 = v2[6];
  sub_2489BE100(v2 + 2, v5);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 16))(v5);
  v8 = v7;
  v9 = (_QWORD *)sub_2489BD9B4();
  v0[5] = v9;
  v9[2] = v6;
  v9[3] = v8;
  v9[4] = v1;
  v12 = (uint64_t (*)(void))((char *)&dword_2577A5248 + dword_2577A5248);
  sub_248A453F0();
  v10 = (_QWORD *)swift_task_alloc();
  v0[6] = v10;
  *v10 = v0;
  v10[1] = sub_2489F2AE0;
  return sub_2489BF5F0(v12);
}

uint64_t sub_2489F2AE0()
{
  sub_2489BFA2C();
  sub_2489BF7F0();
  swift_release();
  sub_2489BD87C();
  return sub_2489C1540();
}

uint64_t sub_2489F2B2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CoreEvent.donate<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a2;
  return sub_2489BFA58();
}

uint64_t sub_2489F2B48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = static DictionaryCoder.encode<A>(_:)();
  *(_QWORD *)(v0 + 48) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_2489F2BC8;
  return CoreEvent.donate(donationInfo:)(v1);
}

uint64_t sub_2489F2BC8()
{
  uint64_t v0;

  sub_2489BFA2C();
  swift_bridgeObjectRelease();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489F2C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  sub_2489C330C(&qword_254464970);
  v5[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2489F2C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for CoreDonationRecord();
  if (qword_254463990 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  swift_beginAccess();
  swift_retain();
  sub_248A453F0();
  sub_2489F7468();
  sub_2489BF7F0();
  swift_bridgeObjectRelease();
  sub_2489EE5A0(v4, v3, v1, v2);
  v5 = *(_QWORD *)(v0 + 104);
  swift_release();
  sub_2489EE974(v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489F2E7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2489C1ABC();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_2489C5EBC(v1);
  *v2 = v0;
  v2[1] = sub_2489F2ED4;
  v3 = sub_2489C1524();
  return sub_2489F2C04(v3, v4, v5, v6, v7);
}

uint64_t sub_2489F2ED4()
{
  uint64_t v0;

  sub_2489BFA2C();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static CoreEvent.donate(eventID:donationInfo:datastore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return sub_2489BFA58();
}

uint64_t sub_2489F2F1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = v0[4];
  v3 = v0[2];
  v2 = v0[3];
  v4 = (_QWORD *)sub_2489BD9B4();
  v0[6] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v7 = (uint64_t (*)(void))((char *)&dword_2577A5270 + dword_2577A5270);
  sub_248A453F0();
  sub_248A453F0();
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_2489F2FBC;
  return sub_2489BF5F0(v7);
}

uint64_t sub_2489F2FBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  sub_2489BD87C();
  return sub_2489C1540();
}

uint64_t sub_2489F301C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489F3028()
{
  uint64_t v0;

  swift_release();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489F3054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a2;
  v5[3] = a3;
  return swift_task_switch();
}

uint64_t sub_2489F3070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  type metadata accessor for CoreDonationRecord();
  sub_2489EDF04(v3, v1, v2);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489F30F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = v3;
  v4[10] = a2;
  sub_2489F3540();
  if (v3)
  {
    swift_getObjectType();
    sub_248A45738();
  }
  return swift_task_switch();
}

uint64_t sub_2489F3158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[10];
  v0[2] = v0;
  v0[3] = sub_2489F31C4;
  v4 = swift_continuation_init();
  sub_2489F3580(v4, v1, v3, v2, 65, (uint64_t)&unk_2519BB730, (uint64_t)&unk_2577A52B8);
  return sub_2489C26A0();
}

uint64_t sub_2489F31C4()
{
  uint64_t v0;

  return sub_2489BA7F4(*(uint64_t (**)(void))(*(_QWORD *)v0 + 8));
}

uint64_t sub_2489F3200()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2489F322C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2489C1ABC();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_2489C5EBC(v1);
  *v2 = v0;
  v2[1] = sub_2489F2ED4;
  v3 = sub_2489C1524();
  return sub_2489F3054(v3, v4, v5, v6, v7);
}

uint64_t sub_2489F3284(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  *(_QWORD *)(v4 + 16) = a3;
  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_2489F32E8;
  return v7();
}

uint64_t sub_2489F32E8()
{
  sub_2489BFA2C();
  sub_2489BD87C();
  return sub_2489BF788();
}

uint64_t sub_2489F3324()
{
  uint64_t v0;

  swift_continuation_resume();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489F334C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = v3;
  v4[10] = a2;
  sub_2489F3540();
  if (v3)
  {
    sub_2489BA4C0();
    sub_248A45738();
  }
  return sub_2489C1540();
}

uint64_t sub_2489F33A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_2489C6BC0((uint64_t)sub_2489F33F4);
  sub_2489C09CC(v0, v1, v2, v3, v4, (uint64_t)&unk_2519BB708, (uint64_t)&unk_2577A52A0);
  return sub_2489C26A0();
}

uint64_t sub_2489F33F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489C07F4();
  if (v0)
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2489F3434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  sub_2489F3540();
  if (v2)
  {
    sub_2489BA4C0();
    sub_248A45738();
  }
  return sub_2489C1540();
}

uint64_t sub_2489F348C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 56) = v0 + 104;
  v1 = sub_2489C6BC0((uint64_t)sub_2489F34E4);
  sub_2489C09CC(v1, v2, v3, v4, v5, (uint64_t)&unk_2519BB6E0, (uint64_t)&unk_2577A5288);
  return sub_2489C26A0();
}

uint64_t sub_2489F34E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2489C07F4();
  if (!v0)
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(unsigned __int8 *)(v2 + 104));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_2489F3540()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254464868;
  if (!qword_254464868)
  {
    v1 = type metadata accessor for MiniTipsDatastore.DatastoreQueue();
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for MiniTipsDatastore.DatastoreQueue, v1);
    atomic_store(result, (unint64_t *)&qword_254464868);
  }
  return result;
}

uint64_t sub_2489F3580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v18 = a7;
  v10 = sub_2489C330C(qword_254464C08);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v15 = (_QWORD *)sub_2489BD9B4();
  v15[2] = a1;
  v15[3] = a3;
  v15[4] = a4;
  v19 = v18;
  v20 = v15;
  swift_retain();
  sub_2489C330C(&qword_254464DF8);
  sub_248A45798();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_2489F36A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  *(_QWORD *)(v4 + 16) = a3;
  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_2489F3704;
  return v7();
}

uint64_t sub_2489F3704()
{
  sub_2489C03A0();
  sub_2489BD87C();
  return sub_2489BF788();
}

uint64_t sub_2489F3740()
{
  uint64_t v0;

  swift_continuation_throwingResume();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489F3768()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_2489C330C(&qword_254464C00);
  v1 = sub_2489BF740();
  sub_2489C6CB4(v1, v2);
  return sub_2489BF7E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489F37AC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a3;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v6;
  *v6 = v4;
  v6[1] = sub_2489F3820;
  return v8(v4 + 40, a2);
}

uint64_t sub_2489F3820()
{
  sub_2489C03A0();
  sub_2489BD87C();
  return sub_2489BF788();
}

uint64_t sub_2489F385C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 41) = *(_BYTE *)(v0 + 40);
  sub_2489F3A94(v0 + 41, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40));
  swift_continuation_throwingResume();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2489F38A0(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a2;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2489F3B7C;
  return sub_2489F3284(a1, v8, a3, a4);
}

uint64_t sub_2489F3920(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a2;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2489F3B7C;
  return sub_2489F36A0(a1, v8, a3, a4);
}

uint64_t sub_2489F39A0(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a2;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2489F3B7C;
  return sub_2489F37AC(a1, v8, a3, a4);
}

uint64_t sub_2489F3A20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2489F3A44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_2489C1ABC();
  v1 = sub_2489C5118();
  v2 = (_QWORD *)sub_2489C5EBC(v1);
  *v2 = v0;
  v2[1] = sub_2489F3B7C;
  v3 = sub_2489C1524();
  return sub_2489C0040(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2489F3A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2489F3ADC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_2489C1ABC();
  v1 = sub_2489C5118();
  v2 = (_QWORD *)sub_2489C5EBC(v1);
  *v2 = v0;
  v2[1] = sub_2489F3B7C;
  v3 = sub_2489C1524();
  return sub_2489C0040(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2489F3B2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_2489C1ABC();
  v1 = sub_2489C5118();
  v2 = (_QWORD *)sub_2489C5EBC(v1);
  *v2 = v0;
  v2[1] = sub_2489F3B7C;
  v3 = sub_2489C1524();
  return sub_2489C0040(v3, v4, v5, v6, v7, v8);
}

void sub_2489F3B88(uint64_t a1)
{
  sub_2489F3BB8(a1, (void (*)(os_unfair_lock_s *, uint64_t))sub_2489F3CA8);
}

void sub_2489F3B94(uint64_t a1)
{
  sub_2489F3BB8(a1, (void (*)(os_unfair_lock_s *, uint64_t))sub_2489F3C5C);
}

void sub_2489F3BA0(uint64_t a1)
{
  sub_2489F3BB8(a1, (void (*)(os_unfair_lock_s *, uint64_t))sub_2489F3C10);
}

void sub_2489F3BAC(uint64_t a1)
{
  sub_2489F3BB8(a1, (void (*)(os_unfair_lock_s *, uint64_t))sub_2489F3CF4);
}

void sub_2489F3BB8(uint64_t a1, void (*a2)(os_unfair_lock_s *, uint64_t))
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;

  v5 = *(os_unfair_lock_s **)(v2 + 16);
  v6 = v5 + 4;
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  a2(v6, a1);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_2489F3C10()
{
  sub_2489C330C(&qword_254462E78);
  return sub_248A4542C();
}

uint64_t sub_2489F3C5C()
{
  sub_2489C330C(&qword_254462930);
  return sub_248A4542C();
}

uint64_t sub_2489F3CA8()
{
  sub_2489C330C(&qword_254462928);
  return sub_248A4542C();
}

uint64_t sub_2489F3CF4()
{
  sub_2489C330C(&qword_254462920);
  return sub_248A4542C();
}

uint64_t sub_2489F3D40()
{
  sub_2489C330C(&qword_254462918);
  return sub_248A4542C();
}

void sub_2489F3D8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489C330C(&qword_254462FE0);
  v0 = sub_248A453C0();
  sub_2489C330C(&qword_254462FE8);
  swift_allocObject();
  sub_248A14704(v0);
  qword_254463030 = v1;
}

uint64_t static CoreEvent.events.getter()
{
  return sub_2489F3F2C(&qword_254463018);
}

uint64_t static CoreEvent.events.setter(uint64_t a1)
{
  return sub_2489F3F94(a1, &qword_254463018, &qword_254463030);
}

uint64_t (*static CoreEvent.events.modify())()
{
  if (qword_254463018 != -1)
    swift_once();
  sub_2489BFA10();
  return j_j__swift_endAccess;
}

void sub_2489F3EA0()
{
  uint64_t v0;
  uint64_t v1;

  sub_248A452AC();
  v0 = sub_248A453C0();
  sub_2489C330C(&qword_254464968);
  swift_allocObject();
  sub_248A146EC(v0);
  qword_254463988 = v1;
}

uint64_t static CoreEvent.modelIdentifiers.getter()
{
  return sub_2489F3F2C(&qword_254463990);
}

uint64_t sub_2489F3F2C(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  sub_2489C39FC();
  return swift_retain();
}

uint64_t static CoreEvent.modelIdentifiers.setter(uint64_t a1)
{
  return sub_2489F3F94(a1, &qword_254463990, &qword_254463988);
}

uint64_t sub_2489F3F94(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  sub_2489BFA10();
  *a3 = a1;
  return swift_release();
}

uint64_t (*static CoreEvent.modelIdentifiers.modify())()
{
  if (qword_254463990 != -1)
    swift_once();
  sub_2489BFA10();
  return j__swift_endAccess;
}

uint64_t sub_2489F405C()
{
  if (qword_254463018 != -1)
    swift_once();
  sub_2489C39FC();
  sub_2489C2344();
  sub_2489F3BB8(0, (void (*)(os_unfair_lock_s *, uint64_t))sub_2489F3D40);
  swift_release();
  if (qword_254463990 != -1)
    swift_once();
  sub_2489C39FC();
  sub_2489C2344();
  sub_2489F3BB8(0, (void (*)(os_unfair_lock_s *, uint64_t))sub_2489F3C5C);
  return swift_release();
}

void sub_2489F412C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CoreEventRecord.id.getter()
{
  uint64_t v0;

  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645F0);
  sub_248A44FD0();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645F8);
  sub_248A451F8();
  swift_release();
  return v0;
}

uint64_t CoreEventRecord.rules.getter()
{
  return sub_2489F4BA8((uint64_t)&unk_248A49718, (void (*)(_QWORD))type metadata accessor for CoreRuleRecord, (void (*)(void))sub_2489F4510);
}

void sub_2489F421C(uint64_t *a1@<X8>)
{
  *a1 = CoreEventRecord.rules.getter();
  sub_2489BA7D0();
}

void sub_2489F4240()
{
  sub_248A453F0();
  CoreEventRecord.rules.setter();
  sub_2489BA7D0();
}

uint64_t CoreEventRecord.rules.setter()
{
  return sub_2489F4D00();
}

uint64_t CoreEventRecord.dateCreated.getter()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F0, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A44FD0();
  sub_2489BA4B8();
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_2489F6410(&qword_2544640F8, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A451F8();
  return sub_2489BA87C();
}

void sub_2489F4368()
{
  CoreEventRecord.dateCreated.getter();
  sub_2489BA7D0();
}

void sub_2489F4384(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489BBC7C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5 - v4, a1);
  CoreEventRecord.dateCreated.setter();
  sub_2489B6AF4();
}

void CoreEventRecord.dateCreated.setter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F0, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  v0 = sub_2489BA858();
  sub_2489BF7BC(v0);
  sub_2489BA8A4();
}

void sub_2489F4478()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_2489C4F4C();
  v0[1] = v1;
  sub_2489BA7D0();
}

void sub_2489F4494()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_2489C4F4C();
  v0[1] = v1;
  sub_2489BA7D0();
}

void sub_2489F44B0()
{
  sub_248A453F0();
  CoreEventRecord.id.setter();
  sub_2489B6AF4();
}

void sub_2489F44E8(uint64_t *a1@<X8>)
{
  *a1 = CoreEventRecord.rules.getter();
  sub_2489BA7D0();
}

unint64_t sub_2489F4510()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2544642B0;
  if (!qword_2544642B0)
  {
    v1 = sub_2489BCD7C(&qword_2544642A8);
    sub_2489F5DEC(&qword_2544642A0, &qword_254464298);
    v3 = v2;
    sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDEAC38], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2544642B0);
  }
  return result;
}

uint64_t CoreEventRecord.id.setter()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F0, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A44FC4();
  sub_2489BA4B8();
  return sub_2489BDA70();
}

uint64_t CoreEventRecord.__allocating_init(id:)()
{
  uint64_t v0;

  v0 = sub_2489C0B58();
  CoreEventRecord.init(id:)();
  return v0;
}

uint64_t sub_2489F46A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  sub_2489C4880(a3, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_248A45048();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2489BCE44((uint64_t)v4);
}

uint64_t sub_2489F4750()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A45210();
  return swift_release();
}

void CoreEventRecord.id.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = CoreEventRecord.id.getter();
  a1[1] = v3;
  sub_2489BA7D0();
}

void sub_2489F4818(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_248A453F0();
    sub_2489BD9C0();
    sub_2489BFC74();
  }
  else
  {
    sub_2489BD9C0();
    sub_2489B6AF4();
  }
}

uint64_t sub_2489F4858(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[4];

  sub_2489C4880(a2, (uint64_t)v5);
  sub_2489BE100(v5, v5[3]);
  swift_getKeyPath();
  v3 = sub_248A44F58();
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45048();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return sub_2489BCE44((uint64_t)v5);
}

uint64_t sub_2489F4928()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45210();
  return swift_release();
}

void CoreEventRecord.dateCreated.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2489BA858();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  CoreEventRecord.dateCreated.getter();
  sub_2489B6AF4();
}

void sub_2489F4A40(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    CoreEventRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreEventRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_2489F4ACC()
{
  uint64_t v0;

  return sub_2489F4E90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_248A49718, (void (*)(_QWORD))type metadata accessor for CoreRuleRecord, (void (*)(void))sub_2489F4510);
}

void sub_2489F4AFC()
{
  CoreEventRecord.dateCreated.getter();
  sub_2489BA7D0();
}

uint64_t sub_2489F4B1C()
{
  return sub_2489F4928();
}

uint64_t sub_2489F4B34()
{
  return sub_2489F4750();
}

void CoreEventRecord.rules.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = CoreEventRecord.rules.getter();
  sub_2489BA7D0();
}

void sub_2489F4B80(uint64_t *a1, char a2)
{
  sub_2489F4F78(a1, a2, (void (*)(uint64_t))CoreEventRecord.rules.setter);
}

uint64_t CoreEventRecord.donations.getter()
{
  return sub_2489F4BA8((uint64_t)&unk_248A49768, (void (*)(_QWORD))type metadata accessor for CoreDonationRecord, (void (*)(void))sub_2489F54D8);
}

uint64_t sub_2489F4BA8(uint64_t a1, void (*a2)(_QWORD), void (*a3)(void))
{
  uint64_t v3;

  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F0, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A44FD0();
  swift_release();
  swift_getKeyPath();
  a2(0);
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  a3();
  sub_248A451EC();
  sub_2489BA4B8();
  return v3;
}

uint64_t sub_2489F4C9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CoreEventRecord.donations.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2489F4CC4()
{
  sub_248A453F0();
  return CoreEventRecord.donations.setter();
}

uint64_t CoreEventRecord.donations.setter()
{
  return sub_2489F4D00();
}

uint64_t sub_2489F4D00()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F0, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A44FC4();
  sub_2489BA4B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2489F4DAC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X4>, uint64_t (*a3)(_QWORD)@<X5>, void (*a4)(uint64_t)@<X6>, _BYTE *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;
  _QWORD v11[4];

  sub_2489C4880(a1, (uint64_t)v11);
  sub_2489BE100(v11, v11[3]);
  swift_getKeyPath();
  sub_2489C330C(a2);
  v9 = a3(0);
  a4(v9);
  sub_248A4503C();
  sub_2489BA4B8();
  swift_bridgeObjectRelease();
  result = sub_2489BCE44((uint64_t)v11);
  *a5 = 0;
  return result;
}

uint64_t sub_2489F4E90(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(void))
{
  swift_getKeyPath();
  a4(0);
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  a5();
  sub_248A45204();
  return swift_release();
}

void CoreEventRecord.donations.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = CoreEventRecord.donations.getter();
  sub_2489BA7D0();
}

void sub_2489F4F6C(uint64_t *a1, char a2)
{
  sub_2489F4F78(a1, a2, (void (*)(uint64_t))CoreEventRecord.donations.setter);
}

void sub_2489F4F78(uint64_t *a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v4 = sub_248A453F0();
    a3(v4);
    sub_2489BFC74();
  }
  else
  {
    a3(*a1);
    sub_2489B6AF4();
  }
}

uint64_t sub_2489F4FBC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  sub_2489C4880(a2, (uint64_t)v3);
  sub_2489BE100(v3, v3[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544643D8);
  sub_248A45030();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2489BCE44((uint64_t)v3);
}

uint64_t sub_2489F5064()
{
  uint64_t v0;

  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645F0);
  sub_248A44FD0();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645F8);
  sub_248A451A4();
  swift_release();
  return v0;
}

void sub_2489F5124()
{
  sub_248A453F0();
  sub_2489F514C();
}

void sub_2489F514C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F0, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  sub_2489BDA70();
  sub_2489BA8A4();
}

uint64_t sub_2489F51D0()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A451B0();
  return swift_release();
}

unint64_t CoreEventRecord.description.getter()
{
  sub_248A45A74();
  swift_bridgeObjectRelease();
  CoreEventRecord.id.getter();
  sub_248A4557C();
  sub_2489BDA70();
  sub_248A4557C();
  return 0xD000000000000014;
}

uint64_t *CoreEventRecord.init(id:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489BBC7C();
  v6 = v5 - v4;
  v0[6] = sub_2489C330C(&qword_254463C18);
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  v0[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v0 + 3);
  sub_248A4518C();
  sub_2489F46A8(0, 0xE000000000000000, (uint64_t)(v0 + 3));
  sub_248A44F4C();
  sub_2489F4858(v6, (uint64_t)(v0 + 3));
  sub_2489C6BD0((uint64_t)(v1 + 3), &qword_2544642A8, (uint64_t (*)(_QWORD))type metadata accessor for CoreRuleRecord, (void (*)(uint64_t))sub_2489F4510, (_BYTE *)v1 + 16);
  sub_2489C6BD0((uint64_t)(v1 + 3), &qword_254463C38, (uint64_t (*)(_QWORD))type metadata accessor for CoreDonationRecord, (void (*)(uint64_t))sub_2489F54D8, (_BYTE *)v1 + 17);
  sub_2489C330C(&qword_2544643C0);
  v7 = sub_248A453C0();
  sub_2489F4FBC(v7, (uint64_t)(v0 + 3));
  sub_248A44FDC();
  CoreEventRecord.id.setter();
  return v0;
}

void sub_2489F54B0(uint64_t *a1@<X8>)
{
  *a1 = CoreEventRecord.donations.getter();
  sub_2489BA7D0();
}

unint64_t sub_2489F54D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_254463C40;
  if (!qword_254463C40)
  {
    v1 = sub_2489BCD7C(&qword_254463C38);
    sub_2489F5DEC(&qword_254463C30, &qword_254463C28);
    v3 = v2;
    sub_2489F6410(&qword_254464638, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDEAC38], v1, v5);
    atomic_store(result, (unint64_t *)&qword_254463C40);
  }
  return result;
}

uint64_t sub_2489F5574()
{
  uint64_t v0;

  return sub_2489F4E90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_248A49768, (void (*)(_QWORD))type metadata accessor for CoreDonationRecord, (void (*)(void))sub_2489F54D8);
}

void CoreEventRecord.persistentBackingData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2489BD8B0();
  sub_2489C4880(v1 + 24, a1);
  sub_2489B7208();
}

void sub_2489F55DC(uint64_t a1)
{
  __int128 v1[2];

  sub_2489C4880(a1, (uint64_t)v1);
  CoreEventRecord.persistentBackingData.setter(v1);
}

void CoreEventRecord.persistentBackingData.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 24;
  sub_2489C09C0();
  sub_2489BCE44(v3);
  sub_2489B8F74(a1, v3);
  swift_endAccess();
  sub_2489B7208();
}

void CoreEventRecord.persistentBackingData.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  sub_2489BD8B0();
  sub_2489C4880(v1 + 24, (uint64_t)v3);
  sub_2489B6AF4();
}

uint64_t static CoreEventRecord.schemaMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;

  v39 = sub_248A45330();
  v0 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v1);
  sub_2489C0054();
  v34 = v2;
  v37 = sub_248A452F4();
  v3 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v4);
  sub_2489C0054();
  v33 = v5;
  sub_2489C330C(&qword_2544647F8);
  v6 = *(_QWORD *)(v0 + 72);
  v38 = v0;
  v7 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v8 = v6;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_248A496D0;
  v35 = v9;
  v36 = v7;
  swift_getKeyPath();
  *(_QWORD *)&v41 = 0;
  *((_QWORD *)&v41 + 1) = 0xE000000000000000;
  sub_248A45378();
  v10 = (void (*)(uint64_t))MEMORY[0x24BDEAC08];
  sub_2489BED94();
  v11 = MEMORY[0x24BEE4AF8];
  sub_2489BFFEC();
  sub_2489F6410(&qword_2544647B8, v10);
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v42 + 1) = sub_2489BA858();
  sub_2489EBF34((uint64_t *)&v41);
  sub_248A44F4C();
  sub_2489BF610();
  v12 = v11;
  v13 = sub_2489BFFEC();
  sub_2489C26B0(v13);
  sub_248A45324();
  v14 = v8;
  swift_getKeyPath();
  v15 = sub_2489C330C(&qword_2544647C8);
  *((_QWORD *)&v42 + 1) = v15;
  *(_QWORD *)&v41 = v12;
  v16 = *MEMORY[0x24BDEAB50];
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  v17(v33, v16, v37);
  sub_248A45300();
  sub_2489BED94();
  sub_2489C1AD0();
  sub_248A4530C();
  sub_2489F6410(&qword_2544647B0, (void (*)(uint64_t))MEMORY[0x24BDEAB70]);
  sub_2489BEE9C();
  swift_getKeyPath();
  *((_QWORD *)&v42 + 1) = v15;
  *(_QWORD *)&v41 = MEMORY[0x24BEE4AF8];
  v17(v33, v16, v37);
  swift_getKeyPath();
  swift_allocObject();
  sub_2489C1AD0();
  v40 = sub_248A4530C();
  sub_2489BEE9C();
  swift_getKeyPath();
  v18 = sub_248A453C0();
  *((_QWORD *)&v42 + 1) = sub_2489C330C(&qword_2544647C0);
  *(_QWORD *)&v41 = v18;
  sub_2489C330C(&qword_254464800);
  sub_248A4536C();
  *(_OWORD *)(sub_2489C0B58() + 16) = xmmword_248A47480;
  type metadata accessor for RawDictionaryTransformer();
  sub_248A45360();
  sub_2489BF610();
  v19 = sub_248A45384();
  sub_2489C26B0(v19);
  sub_248A45324();
  swift_getKeyPath();
  v41 = 0u;
  v42 = 0u;
  sub_2489C330C(&qword_2544648F0);
  v20 = *(_QWORD *)(sub_2489C330C(&qword_254464878) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v23 = sub_2489C0B58();
  *(_OWORD *)(v23 + 16) = xmmword_248A47460;
  v24 = (uint64_t *)(v23 + v22);
  sub_2489C330C(&qword_254464818);
  v25 = sub_2489BA860();
  *(_OWORD *)(v25 + 16) = xmmword_248A49100;
  *(_QWORD *)(v25 + 32) = swift_getKeyPath();
  sub_2489BF604();
  *v24 = v40;
  sub_2489C03C0((uint64_t)v24);
  v26 = sub_2489BA860();
  *(_OWORD *)(v26 + 16) = xmmword_248A49100;
  *(_QWORD *)(v26 + 32) = swift_getKeyPath();
  sub_2489BF604();
  *(uint64_t *)((char *)v24 + v21) = v40;
  sub_2489C03C0((uint64_t)v24 + v21);
  v27 = (uint64_t *)((char *)v24 + 2 * v21);
  v28 = sub_2489BA860();
  *(_OWORD *)(v28 + 16) = xmmword_248A496E0;
  *(_QWORD *)(v28 + 32) = swift_getKeyPath();
  *(_QWORD *)(v28 + 40) = swift_getKeyPath();
  sub_2489BF604();
  *v27 = v40;
  sub_2489C03C0((uint64_t)v27);
  sub_2489C330C(&qword_2544648B0);
  sub_2489BED94();
  sub_248A4533C();
  sub_2489F5DEC(&qword_2544648A8, &qword_2544648B0);
  sub_248A45324();
  v29 = sub_2489EC9A4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v31 = *(_QWORD *)(v29 + 16);
  v30 = *(_QWORD *)(v29 + 24);
  if (v31 >= v30 >> 1)
    v29 = sub_2489EC9A4(v30 > 1, v31 + 1, 1, v29);
  *(_QWORD *)(v29 + 16) = v31 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v29 + v36 + v31 * v14, v34, v39);
  sub_2489EA990();
  return v35;
}

void sub_2489F5DC0(uint64_t *a1@<X8>)
{
  *a1 = sub_2489F5064();
  sub_2489BA7D0();
}

void sub_2489F5DEC(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    sub_2489BCD7C(a2);
    sub_2489BEDA0();
  }
  sub_2489BA7D0();
}

void CoreEventRecord.__allocating_init(backingData:)(uint64_t a1)
{
  sub_2489C0B58();
  CoreEventRecord.init(backingData:)(a1);
  sub_2489BA7D0();
}

_QWORD *CoreEventRecord.init(backingData:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = *v1;
  v5 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  v2[6] = sub_2489C330C(&qword_254463C18);
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  *(_QWORD *)&v13 = v4;
  *((_QWORD *)&v13 + 1) = v4;
  v14 = v10;
  v15 = v10;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v2 + 3);
  sub_248A4518C();
  sub_2489F46A8(0, 0xE000000000000000, (uint64_t)(v2 + 3));
  sub_248A44F4C();
  sub_2489F4858(v9, (uint64_t)(v2 + 3));
  sub_2489C6BD0((uint64_t)(v2 + 3), &qword_2544642A8, (uint64_t (*)(_QWORD))type metadata accessor for CoreRuleRecord, (void (*)(uint64_t))sub_2489F4510, (_BYTE *)v2 + 16);
  sub_2489C6BD0((uint64_t)(v2 + 3), &qword_254463C38, (uint64_t (*)(_QWORD))type metadata accessor for CoreDonationRecord, (void (*)(uint64_t))sub_2489F54D8, (_BYTE *)v2 + 17);
  sub_2489C330C(&qword_2544643C0);
  v11 = sub_248A453C0();
  sub_2489F4FBC(v11, (uint64_t)(v2 + 3));
  sub_248A44FDC();
  *((_WORD *)v2 + 8) = 0;
  sub_2489C4880(a1, (uint64_t)&v13);
  sub_2489C09C0();
  sub_2489BCE44((uint64_t)(v2 + 3));
  sub_2489B8F74(&v13, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_2489BCE44(a1);
  return v2;
}

void CoreEventRecord.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  sub_2489BA7D0();
}

uint64_t CoreEventRecord.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  return swift_deallocClassInstance();
}

uint64_t sub_2489F60BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreEventRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_2489F60E4()
{
  return CoreEventRecord.description.getter();
}

uint64_t CoreEventRecord.hashValue.getter()
{
  sub_248A45F90();
  sub_2489F6410(&qword_254464600, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A45480();
  return sub_248A45FD8();
}

uint64_t sub_2489F617C()
{
  return static CoreEventRecord.schemaMetadata.getter();
}

uint64_t sub_2489F6190()
{
  return CoreEventRecord.hashValue.getter();
}

uint64_t sub_2489F61B0()
{
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  return sub_248A451D4();
}

uint64_t sub_2489F6208()
{
  sub_2489F6410(&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  return sub_248A451BC();
}

void sub_2489F625C()
{
  sub_2489F6410(&qword_2544645F0, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
}

void sub_2489F6288()
{
  sub_2489F6410(&qword_254464600, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
}

void sub_2489F62B4()
{
  sub_2489F6410(&qword_254464610, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
}

void sub_2489F62E0()
{
  sub_2489F6410(&qword_254464608, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
}

void sub_2489F630C(uint64_t a1@<X8>)
{
  CoreEventRecord.persistentBackingData.getter(a1);
  sub_2489BA7D0();
}

uint64_t sub_2489F632C()
{
  return type metadata accessor for CoreEventRecord();
}

uint64_t sub_2489F6334()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44FE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CoreEventRecord()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreEventRecord.__allocating_init(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CoreEventRecord.__allocating_init(backingData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for CoreEventRecord._SwiftDataNoType()
{
  return &type metadata for CoreEventRecord._SwiftDataNoType;
}

uint64_t sub_2489F63F8()
{
  return sub_2489F51D0();
}

void sub_2489F6410(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    sub_2489BEDA0();
  }
  sub_2489BA7D0();
}

void sub_2489F6444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_2489BED74();
  v28 = v0;
  v2 = v1;
  v4 = v3;
  v27 = v5;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v24 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v23 - v11;
  v13 = sub_248A452AC();
  v26 = *(_QWORD *)(v13 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489C0054();
  v25 = v16;
  if (qword_254463990 != -1)
    swift_once();
  sub_2489BA4D4();
  v17 = *(_QWORD *)(v2 + 8);
  v18 = *(void (**)(uint64_t, uint64_t))(v17 + 16);
  swift_retain();
  v18(v4, v17);
  v23 = v4;
  sub_2489F7468();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_2489BE834((uint64_t)v12, 1, v13) == 1)
  {
    sub_2489EE974((uint64_t)v12);
    v18(v23, v17);
    sub_2489F6E94();
    sub_2489BEE88();
  }
  else
  {
    v20 = v25;
    v19 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v12, v13);
    v21 = (uint64_t)v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v24, v20, v13);
    sub_2489BE7E0(v21, 0, 1, v13);
    sub_2489C330C(&qword_254464818);
    v22 = sub_2489BD9B4();
    *(_OWORD *)(v22 + 16) = xmmword_248A49100;
    *(_QWORD *)(v22 + 32) = swift_getKeyPath();
    sub_248A456A8();
    sub_248A1CA04();
    sub_2489BEE88();
    sub_2489BDA88();
    sub_2489C154C();
  }
  sub_2489F745C();
  sub_2489BA808();
}

void sub_2489F66B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_2489BED74();
  v13 = v1;
  v12 = v2;
  v3 = sub_2489C330C(&qword_254463B58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_2489C0068();
  v6 = sub_2489C330C(&qword_254463A90);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  sub_2489BBC7C();
  v11 = v10 - v9;
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A44C7C();
  sub_248A44FAC();
  sub_2489F6808(v13, 0, v11, v0, v12);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  sub_2489F745C();
  sub_2489BA808();
}

uint64_t sub_2489F67F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2489F71F8(a1);
}

uint64_t sub_2489F6808@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  v45 = a3;
  v46 = a1;
  v43 = a2;
  v40 = a5;
  v6 = sub_2489C330C(&qword_254464588);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2489C330C(&qword_254463C00);
  v42 = *(_QWORD *)(v10 - 8);
  v11 = v42;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v39 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v39 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  v44 = (char *)&v39 - v25;
  v26 = sub_2489C330C(&qword_254463B58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v9, a4, v26);
  sub_2489BE7E0((uint64_t)v9, 0, 1, v26);
  v27 = type metadata accessor for CoreEventRecord();
  v28 = sub_2489EE9F0((uint64_t *)&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_248A45168();
  v51 = v27;
  v52 = v28;
  swift_getKeyPath();
  v53 = 1;
  v54 = 0;
  swift_setAtWritableKeyPath();
  v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v41 = v10;
  v29(v19, v15, v10);
  swift_release();
  v49 = v27;
  v50 = v28;
  swift_getKeyPath();
  LOBYTE(v53) = v43;
  swift_setAtWritableKeyPath();
  v29(v23, v19, v10);
  swift_release();
  v47 = v27;
  v48 = v28;
  swift_getKeyPath();
  sub_2489C330C(&qword_254463CA0);
  v30 = sub_2489C330C(&qword_254463A90);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_248A47480;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 16))(v33 + v32, v45, v30);
  v53 = v33;
  sub_248A453F0();
  swift_setAtWritableKeyPath();
  v34 = v44;
  v35 = v41;
  v29(v44, v23, v41);
  swift_bridgeObjectRelease();
  swift_release();
  v36 = v55;
  v37 = sub_248A450A8();
  result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v34, v35);
  if (!v36)
  {
    sub_248A3BE48(v37, v40);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2489F6B64()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 *v25;
  uint64_t v26;

  sub_2489BED74();
  sub_2489BA4E8(v0, v1, v2, v3);
  sub_2489C330C(&qword_254464598);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489C0068();
  v6 = sub_2489C330C(&qword_254463C10);
  v7 = sub_2489C5EC8(v6);
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_2489C3A0C();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489C5044();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489B7224();
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489C62AC(v15, v16, v17, v18, v19, v20, v21, v22, v26);
  v23 = sub_2489C330C(&qword_254463B68);
  sub_2489C26C4(v23);
  sub_2489BECAC();
  type metadata accessor for CoreParameterRecord();
  v24 = sub_2489EE9F0(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489C0810();
  swift_getKeyPath();
  sub_2489BFD44();
  sub_2489C09E0();
  swift_release();
  swift_getKeyPath();
  sub_2489BFA64();
  sub_2489C4F58();
  sub_2489BF7F0();
  swift_getKeyPath();
  sub_2489C330C(&qword_254463CA8);
  sub_2489C330C(&qword_254463A98);
  v25 = (__n128 *)sub_2489C2350();
  sub_2489C03CC(v25, (__n128)xmmword_248A47480);
  sub_2489BEDAC();
  sub_2489C60E8();
  sub_2489C1898();
  sub_2489BEE88();
  sub_2489BF7F0();
  sub_2489BF7F8();
  sub_2489C1AF0();
  if (!v24)
  {
    sub_2489B6B28();
    sub_2489BBC58();
  }
  sub_2489F745C();
  sub_2489BA808();
}

void sub_2489F6CFC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 *v25;
  uint64_t v26;

  sub_2489BED74();
  sub_2489BA4E8(v0, v1, v2, v3);
  sub_2489C330C(&qword_2544645A0);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489C0068();
  v6 = sub_2489C330C(&qword_254464250);
  v7 = sub_2489C5EC8(v6);
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_2489C3A0C();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489C5044();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489B7224();
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489C62AC(v15, v16, v17, v18, v19, v20, v21, v22, v26);
  v23 = sub_2489C330C(&qword_254464118);
  sub_2489C26C4(v23);
  sub_2489BECAC();
  type metadata accessor for CoreTipRecord();
  v24 = sub_2489EE9F0(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489C0810();
  swift_getKeyPath();
  sub_2489BFD44();
  sub_2489C09E0();
  swift_release();
  swift_getKeyPath();
  sub_2489BFA64();
  sub_2489C4F58();
  sub_2489BF7F0();
  swift_getKeyPath();
  sub_2489C330C(&qword_2544643A8);
  sub_2489C330C(&qword_254464028);
  v25 = (__n128 *)sub_2489C2350();
  sub_2489C03CC(v25, (__n128)xmmword_248A47480);
  sub_2489BEDAC();
  sub_2489C60E8();
  sub_2489C1898();
  sub_2489BEE88();
  sub_2489BF7F0();
  sub_2489BF7F8();
  sub_2489C1AF0();
  if (!v24)
  {
    sub_2489B6B28();
    sub_2489BBC58();
  }
  sub_2489F745C();
  sub_2489BA808();
}

void sub_2489F6E94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_2489BED74();
  v3 = v0;
  v25 = v4;
  v26 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489C0054();
  v24 = v14;
  sub_2489C330C(&qword_254463B58);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_2489BA838();
  v27 = sub_2489C330C(&qword_254463A90);
  MEMORY[0x24BDAC7A8](v27, v17);
  sub_2489BBC7C();
  v20 = v19 - v18;
  sub_2489C330C(&qword_254464818);
  v21 = sub_2489BD9B4();
  *(_OWORD *)(v21 + 16) = xmmword_248A49100;
  *(_QWORD *)(v21 + 32) = swift_getKeyPath();
  sub_248A456A8();
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A44C7C();
  sub_248A44FAC();
  sub_248A453F0();
  sub_248A3BF88(v7, 0, v21, v20, v2, v3, v11, v9);
  if (v1)
  {
    sub_2489BBC58();

    sub_2489C6BD8();
    sub_2489BD8D4();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(_QWORD *)(v25 + 8) + 16))(v26);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_2489C9824();
    swift_allocError();
    *v22 = 0xD000000000000026;
    v22[1] = 0x8000000248A4FB60;
    swift_willThrow();
  }
  else
  {
    sub_2489BBC58();
    sub_2489C6BD8();
    sub_2489BD8D4();
    if ((sub_248A45078() & 1) != 0)
      sub_248A450B4();
    if (qword_254463990 != -1)
      swift_once();
    sub_2489BA4D4();
    sub_2489EE9F0((uint64_t *)&qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
    swift_retain();
    sub_248A45180();
    v23 = sub_248A452AC();
    sub_2489BE7E0(v24, 0, 1, v23);
    sub_248A1C818(v11, v9, v24);
    swift_release();
    sub_2489BDA88();
  }
  sub_2489BA808();
}

uint64_t sub_2489F71F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_2489C330C(&qword_254464060);
  v18 = *(_QWORD *)(v4 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  v10 = sub_2489C330C(&qword_254463B00);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_2489BA838();
  v13 = sub_2489C330C(&qword_254463AD0);
  v17 = *(_QWORD *)(v13 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489C0068();
  sub_2489EEB7C((uint64_t *)&qword_254463AF8, &qword_254463B00);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v10);
  sub_248A44DB4();
  a1[3] = sub_2489C330C(&qword_254463AA8);
  a1[4] = sub_2489EEA30();
  sub_2489BE690(a1);
  sub_2489EEB7C((uint64_t *)&qword_254463AC8, &qword_254463AD0);
  sub_2489EEB7C((uint64_t *)&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v9, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v1, v13);
}

void sub_2489F7468()
{
  os_unfair_lock_s *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  sub_2489C155C();
  v1 = (uint64_t *)sub_2489C2378();
  sub_2489F82C4(v1, v2, v3);
  sub_2489C3A28(v0);
}

void sub_2489F7494()
{
  os_unfair_lock_s *v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  sub_2489C155C();
  v1 = sub_2489C2378();
  sub_2489F82E0(v1, v2, v3);
  sub_2489C3A28(v0);
}

void sub_2489F74C0()
{
  os_unfair_lock_s *v0;
  unint64_t v1;
  uint64_t *v2;
  __int16 *v3;

  sub_2489C155C();
  v1 = sub_2489C2378();
  sub_2489F8344(v1, v2, v3);
  sub_2489C3A28(v0);
}

void sub_2489F74EC()
{
  os_unfair_lock_s *v0;
  unint64_t v1;
  uint64_t *v2;
  char *v3;

  sub_2489C155C();
  v1 = sub_2489C2378();
  sub_2489F8360(v1, v2, v3);
  sub_2489C3A28(v0);
}

uint64_t sub_2489F7518@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v6 = sub_2489C28D0(a2, a3), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v5 + 56);
    v10 = sub_248A452AC();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8, v10);
    v11 = a4;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = sub_248A452AC();
    v11 = a4;
    v12 = 1;
  }
  return sub_2489BE7E0(v11, v12, 1, v13);
}

unint64_t sub_2489F75C8@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char v6;
  char v7;

  v5 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_2489C28D0(a2, a3), (v6 & 1) != 0))
  {
    result = sub_2489F82FC(*(_QWORD *)(v5 + 56) + 8 * result, a4);
    v7 = 0;
  }
  else
  {
    *(_QWORD *)a4 = 0;
    v7 = 1;
  }
  *(_BYTE *)(a4 + 8) = v7;
  return result;
}

unint64_t sub_2489F7634@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 *a4@<X8>)
{
  uint64_t v5;
  char v6;
  __int16 v7;

  v5 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_2489C28D0(a2, a3), (v6 & 1) != 0))
    v7 = *(_WORD *)(*(_QWORD *)(v5 + 56) + 2 * result);
  else
    v7 = 4;
  *a4 = v7;
  return result;
}

unint64_t sub_2489F7690@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  char v6;
  char v7;

  v5 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_2489C28D0(a2, a3), (v6 & 1) != 0))
    v7 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + result);
  else
    v7 = 3;
  *a4 = v7;
  return result;
}

uint64_t CoreParameter.parameter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2489C4880(v1 + 16, a1);
}

uint64_t CoreParameter.id.getter()
{
  uint64_t v0;

  sub_2489BE100((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_2489C26E0();
}

BOOL CoreParameter.hasLoaded.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v7;

  v0 = sub_2489C330C(&qword_254464970);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F779C();
  v4 = sub_2489C03E4();
  v5 = sub_2489C18B0(v4) != 1;
  sub_2489EE974((uint64_t)v3);
  return v5;
}

uint64_t sub_2489F779C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  if (qword_254464520 != -1)
    swift_once();
  swift_beginAccess();
  v1 = v0[5];
  v2 = v0[6];
  sub_2489BE100(v0 + 2, v1);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 16);
  swift_retain();
  v4(v1, v3);
  sub_2489F7468();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2489F7868()
{
  uint64_t v0;
  __int128 v2;

  swift_unownedRetainStrong();
  sub_248A169E0((uint64_t)sub_2489F837C, v0, &v2);
  swift_release();
  return v2;
}

uint64_t sub_2489F78C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = sub_2489C330C(&qword_254464970);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F779C();
  sub_248A2F8E8();
  v7 = v6;
  result = sub_2489EE974((uint64_t)v5);
  if (v7)
  {
    CoreParameterRecord.valueData.getter();
    v10 = v9;
    v12 = v11;
    result = swift_release();
  }
  else
  {
    v10 = 0;
    v12 = 0xF000000000000000;
  }
  *a1 = v10;
  a1[1] = v12;
  return result;
}

uint64_t CoreParameter.__allocating_init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CoreParameter.init(_:datastore:)(a1, a2);
  return v4;
}

uint64_t CoreParameter.init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __int128 v7[2];

  sub_2489C4880(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  sub_2489C4880(a1, (uint64_t)v7);
  v5 = swift_allocObject();
  sub_2489B8F74(v7, v5 + 16);
  swift_unownedRetain();
  sub_248A37864((uint64_t)&unk_2577A52D0, v5);
  swift_release();
  sub_2489BCE44(a1);
  swift_release();
  return v2;
}

uint64_t sub_2489F7A90(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  sub_2489C330C(&qword_254464970);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2489F7AEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_254464520 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  sub_2489BFA80();
  v3 = v1[3];
  v4 = v1[4];
  sub_2489BE100(v1, v3);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v6(v3, v5);
  sub_2489F7468();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = sub_2489C03E4();
  v8 = sub_2489BE834(v2, 1, v7);
  sub_2489EE974(v2);
  if (v8 == 1)
  {
    v9 = *(_QWORD *)(v0 + 40);
    v11 = v1[3];
    v10 = v1[4];
    v12 = sub_2489BE100(*(_QWORD **)(v0 + 48), v11);
    type metadata accessor for CoreParameterRecord();
    sub_2489FA824((uint64_t)v12, v9, v11, v10);
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489F7C4C()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2489F7C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2489F7CC4;
  return sub_2489F7A90(a1, v1 + 16);
}

uint64_t sub_2489F7CC4()
{
  uint64_t v0;

  sub_2489C0080();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CoreParameter.deinit()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  swift_unownedRelease();
  return v0;
}

uint64_t CoreParameter.__deallocating_deinit()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  swift_unownedRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2489F7D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreParameter.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t CoreParameter.getValueData()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  sub_2489C330C(&qword_254464970);
  *(_QWORD *)(v1 + 48) = swift_task_alloc();
  return sub_2489BF788();
}

uint64_t sub_2489F7DBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_254464520 != -1)
    swift_once();
  v2 = *(_QWORD **)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  sub_2489BFA80();
  v3 = qword_254464518;
  v4 = v2 + 2;
  v5 = v2[5];
  v6 = v2[6];
  sub_2489BE100(v4, v5);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v8(v5, v7);
  sub_2489F7468();
  swift_release();
  swift_bridgeObjectRelease();
  v9 = sub_2489C03E4();
  v10 = sub_2489C18B0(v9);
  sub_2489EE974(v1);
  if (v10 == 1)
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 56);
    swift_unownedRetainStrong();
    *(_QWORD *)(v0 + 56) = *(_QWORD *)(v11 + 64);
    swift_retain();
    swift_release();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v12;
    *v12 = v0;
    v12[1] = sub_2489F7F1C;
    return sub_248A380CC((uint64_t)v12, v13);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 40);
    sub_2489F7868();
    sub_2489C1B0C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v15, v3);
  }
}

uint64_t sub_2489F7F1C()
{
  swift_task_dealloc();
  swift_release();
  return sub_2489BF788();
}

uint64_t sub_2489F7F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  sub_2489F7868();
  sub_2489C1B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_2489F7FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  return swift_task_switch();
}

uint64_t sub_2489F7FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD **)(v0 + 56);
  v7 = v5[3];
  v8 = v5[4];
  v9 = sub_2489BE100(v5, v7);
  type metadata accessor for CoreParameterRecord();
  sub_2489FB82C((uint64_t)v9, v4, v6, v3, v7, v1, v2, v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2489F81B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_2489BCE44(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2489F8220(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v8 = (uint64_t)(v1 + 5);
  v9 = (uint64_t)v1 + ((v7 + 80) & ~v7);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_2489F7CC4;
  return sub_2489F7FB4(a1, v8, v9, v4, v5, v6);
}

uint64_t method lookup function for CoreParameter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreParameter.__allocating_init(_:datastore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_2489F82C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2489F7518(a1, *a2, a2[1], a3);
}

unint64_t sub_2489F82E0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2489F75C8(a1, *a2, a2[1], a3);
}

uint64_t sub_2489F82FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2489F8344@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, __int16 *a3@<X8>)
{
  return sub_2489F7634(a1, *a2, a2[1], a3);
}

unint64_t sub_2489F8360@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return sub_2489F7690(a1, *a2, a2[1], a3);
}

uint64_t sub_2489F837C@<X0>(_QWORD *a1@<X8>)
{
  return sub_2489F78C4(a1);
}

void sub_2489F8394()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489C330C(&qword_254464000);
  v0 = sub_248A453C0();
  sub_2489C330C(&qword_254464008);
  swift_allocObject();
  sub_248A146F8(v0);
  qword_254464510 = v1;
}

uint64_t static CoreParameter.parameters.getter()
{
  return sub_2489F3F2C(&qword_254464420);
}

uint64_t static CoreParameter.parameters.setter(uint64_t a1)
{
  return sub_2489F3F94(a1, &qword_254464420, &qword_254464510);
}

uint64_t (*static CoreParameter.parameters.modify())()
{
  if (qword_254464420 != -1)
    swift_once();
  sub_2489BFA10();
  return j__swift_endAccess;
}

void sub_2489F84A8()
{
  uint64_t v0;
  uint64_t v1;

  sub_248A452AC();
  v0 = sub_248A453C0();
  sub_2489C330C(&qword_254464968);
  swift_allocObject();
  sub_248A146EC(v0);
  qword_254464518 = v1;
}

uint64_t static CoreParameter.modelIdentifiers.getter()
{
  return sub_2489F3F2C(&qword_254464520);
}

uint64_t static CoreParameter.modelIdentifiers.setter(uint64_t a1)
{
  return sub_2489F3F94(a1, &qword_254464520, &qword_254464518);
}

uint64_t (*static CoreParameter.modelIdentifiers.modify())()
{
  if (qword_254464520 != -1)
    swift_once();
  sub_2489BFA10();
  return j_j__swift_endAccess;
}

uint64_t sub_2489F85B8()
{
  if (qword_254464420 != -1)
    swift_once();
  sub_2489C39FC();
  sub_2489C2344();
  sub_2489F3BAC(0);
  swift_release();
  if (qword_254464520 != -1)
    swift_once();
  sub_2489C39FC();
  sub_2489C2344();
  sub_2489F3B94(0);
  return swift_release();
}

void sub_2489F8670(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  MEMORY[0x2495A2D34](&unk_248A48F28, a1);
  static CoreParameterProtocol.category.getter(a2);
}

uint64_t CoreParameterProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  _QWORD v5[2];

  sub_248A45A74();
  swift_bridgeObjectRelease();
  strcpy((char *)v5, "Parameter(id: ");
  HIBYTE(v5[1]) = -18;
  (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 16) + 16))(a1);
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  return v5[0];
}

void static CoreParameterProtocol.valuesEqual(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;

  v10 = sub_2489BFA90(a1, a2, a3, a4, a5, a6, a7, a8, v52[0]);
  if (!v53)
  {
    sub_2489C18C0(v10, &qword_254464AF0, v11, v12, v13, v14, v15, v16, v52[0]);
    v22 = sub_2489C238C();
    goto LABEL_7;
  }
  sub_2489C330C(&qword_254463A80);
  v17 = sub_2489C3A38();
  if ((v17 & 1) == 0)
  {
    v22 = sub_2489C1578();
LABEL_7:
    v27 = sub_2489C00A0(v17, &qword_2577A5210, v18, v19, v20, v21, v22);
    v28 = sub_2489C1B1C(v27, (uint64_t)v52);
    if (v53)
    {
      sub_2489C330C(&qword_254463A80);
      v35 = sub_2489C3A38();
      if ((v35 & 1) != 0)
      {
        if (v55)
        {
          sub_2489B8F74(&v54, (uint64_t)v56);
          v41 = v57;
          v42 = v58;
          sub_2489BE100(v56, v57);
          v25 = default argument 1 of Equatable.isEqual(_:checkReverse:)(v41, v42) & 1;
          v26 = v9;
          goto LABEL_11;
        }
      }
      else
      {
        v40 = sub_2489C1578();
      }
    }
    else
    {
      sub_2489C18C0(v28, &qword_254464AF0, v29, v30, v31, v32, v33, v34, v52[0]);
      v40 = sub_2489C238C();
    }
    v51 = sub_2489C00A0(v35, &qword_2577A5210, v36, v37, v38, v39, v40);
    sub_2489C1B1C(v51, (uint64_t)v56);
    sub_2489C32D0((uint64_t)v56, &qword_254464AF0);
    goto LABEL_15;
  }
  if (!v55)
    goto LABEL_7;
  sub_2489B8F74(&v54, (uint64_t)v56);
  v23 = v57;
  v24 = v58;
  sub_2489BE100(v56, v57);
  v25 = default argument 1 of Equatable.isEqual(_:checkReverse:)(v23, v24) & 1;
  v26 = v8;
LABEL_11:
  Equatable.isEqual(_:checkReverse:)(v26, v25);
  sub_2489C03EC(v43, v44, v45, v46, v47, v48, v49, v50, v52[0]);
LABEL_15:
  sub_2489C26F4();
}

uint64_t dispatch thunk of CoreParameterProtocol.isTransient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoreParameterProtocol.wrapperValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoreParameterProtocol.updateWrapperValue(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

void CoreParameterRecord.valueData.getter()
{
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_254464670);
  sub_2489BA500();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_254464678);
  sub_2489FA7BC(&qword_254463B50, (uint64_t (*)(void))sub_2489BCF18, MEMORY[0x24BEE4AC0]);
  sub_2489C6194();
  swift_release();
  sub_2489BA868();
}

void CoreParameterRecord.id.getter()
{
  sub_2489F9230();
}

void sub_2489F89B0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CoreParameterRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
  sub_2489BA7D0();
}

void sub_2489F89D4()
{
  sub_2489B64F4();
}

void CoreParameterRecord.id.setter()
{
  sub_2489F9318();
}

void CoreParameterRecord.id.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  CoreParameterRecord.id.getter();
  *a1 = v3;
  a1[1] = v4;
  sub_2489BA7D0();
}

void sub_2489F8A24(uint64_t a1, char a2)
{
  sub_2489F954C(a1, a2);
}

uint64_t CoreParameterRecord.dateCreated.getter()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_254464670, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_248A44FD0();
  swift_release();
  swift_getKeyPath();
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489F6410(&qword_2544640F8, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2489C6194();
  return sub_2489BA87C();
}

void sub_2489F8B1C()
{
  CoreParameterRecord.dateCreated.getter();
  sub_2489BA7D0();
}

void sub_2489F8B38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489BBC7C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5 - v4, a1);
  CoreParameterRecord.dateCreated.setter();
  sub_2489B6AF4();
}

void CoreParameterRecord.dateCreated.setter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2489F6410(&qword_254464670, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  v0 = sub_2489BA858();
  sub_2489BF7BC(v0);
  sub_2489BA8A4();
}

uint64_t sub_2489F8C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[4];

  sub_2489C4880(a2, (uint64_t)v5);
  sub_2489BE100(v5, v5[3]);
  swift_getKeyPath();
  v3 = sub_248A44F58();
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45048();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return sub_2489BCE44((uint64_t)v5);
}

uint64_t sub_2489F8CFC()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45210();
  return swift_release();
}

void CoreParameterRecord.dateCreated.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2489BA858();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  CoreParameterRecord.dateCreated.getter();
  sub_2489B6AF4();
}

void sub_2489F8E14(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    CoreParameterRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreParameterRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

void sub_2489F8EA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_2489C3390();
  *v0 = v1;
  v0[1] = v2;
  sub_2489BA7D0();
}

void sub_2489F8EC0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CoreParameterRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
  sub_2489BA7D0();
}

uint64_t sub_2489F8EE8()
{
  return sub_2489F9458();
}

void sub_2489F8F0C()
{
  CoreParameterRecord.dateCreated.getter();
  sub_2489BA7D0();
}

uint64_t sub_2489F8F2C()
{
  return sub_2489F8CFC();
}

void CoreParameterRecord.valueData.setter(uint64_t a1, unint64_t a2)
{
  swift_getKeyPath();
  sub_2489F6410(&qword_254464670, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_248A44FC4();
  sub_2489BDB94(a1, a2);
  swift_release();
  sub_2489C239C();
}

uint64_t sub_2489F8FF4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;
  _QWORD v8[4];

  sub_2489C4880(a3, (uint64_t)v8);
  sub_2489BE100(v8, v8[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_254463B40);
  sub_2489FA7BC(&qword_254463B48, (uint64_t (*)(void))sub_2489BD008, MEMORY[0x24BEE4AA8]);
  sub_248A45048();
  swift_release();
  sub_2489BDB94(a1, a2);
  result = sub_2489BCE44((uint64_t)v8);
  *a4 = 0;
  return result;
}

uint64_t sub_2489F90D4()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489FA7BC(&qword_254463B48, (uint64_t (*)(void))sub_2489BD008, MEMORY[0x24BEE4AA8]);
  sub_248A45210();
  return swift_release();
}

uint64_t sub_2489F9188()
{
  return sub_2489F90D4();
}

void CoreParameterRecord.valueData.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  CoreParameterRecord.valueData.getter();
  *a1 = v3;
  a1[1] = v4;
  sub_2489BA7D0();
}

void sub_2489F91D4(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_2489C6B40(*a1, v3);
    sub_2489C0688();
    sub_2489BDB94(v2, v3);
  }
  else
  {
    sub_2489C0688();
    sub_2489B6AF4();
  }
}

void CoreParameterRecord.valueType.getter()
{
  sub_2489F9230();
}

void sub_2489F9230()
{
  swift_getKeyPath();
  sub_2489BA4CC(&qword_254464670);
  sub_2489BA500();
  sub_2489BA87C();
  swift_getKeyPath();
  sub_2489BA4CC(&qword_254464678);
  sub_248A451F8();
  swift_release();
  sub_2489BA868();
}

void sub_2489F92DC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CoreParameterRecord.valueType.getter();
  *a1 = v2;
  a1[1] = v3;
  sub_2489BA7D0();
}

void CoreParameterRecord.valueType.setter()
{
  sub_2489F9318();
}

void sub_2489F9318()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_254464670, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_248A44FC4();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2489C239C();
}

void sub_2489F93C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[4];

  sub_2489C4880(a3, (uint64_t)v3);
  sub_2489BE100(v3, v3[3]);
  swift_getKeyPath();
  sub_248A45048();
  swift_bridgeObjectRelease();
  swift_release();
  sub_2489BCE44((uint64_t)v3);
  sub_2489C239C();
}

uint64_t sub_2489F9458()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_248A45210();
  return swift_release();
}

uint64_t sub_2489F94EC()
{
  return sub_2489F9458();
}

void CoreParameterRecord.valueType.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  CoreParameterRecord.valueType.getter();
  *a1 = v3;
  a1[1] = v4;
  sub_2489BA7D0();
}

void sub_2489F9540(uint64_t a1, char a2)
{
  sub_2489F954C(a1, a2);
}

void sub_2489F954C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_248A453F0();
    sub_2489C6CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2489C6CC8();
    sub_2489B6AF4();
  }
}

uint64_t CoreParameterRecord.rules.getter()
{
  uint64_t v0;

  sub_2489BD8A8();
  sub_2489BA4CC(&qword_254464670);
  sub_248A44FD0();
  sub_2489BA87C();
  sub_2489BD8A8();
  type metadata accessor for CoreRuleRecord();
  sub_2489BA4CC(&qword_254464678);
  sub_2489F4510();
  sub_248A451EC();
  swift_release();
  return v0;
}

void sub_2489F9674()
{
  uint64_t *v0;

  *v0 = sub_2489C60F8();
  sub_2489BA7D0();
}

void sub_2489F9690()
{
  uint64_t *v0;

  *v0 = sub_2489C60F8();
  sub_2489BA7D0();
}

void sub_2489F96AC()
{
  sub_248A453F0();
  CoreParameterRecord.rules.setter();
  sub_2489BA7D0();
}

void CoreParameterRecord.rules.setter()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_254464670, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  swift_bridgeObjectRelease();
  sub_2489BA8A4();
}

uint64_t sub_2489F975C@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2489C4880(a1, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544642A8);
  type metadata accessor for CoreRuleRecord();
  sub_2489F4510();
  sub_248A4503C();
  swift_release();
  swift_bridgeObjectRelease();
  result = sub_2489BCE44((uint64_t)v4);
  *a2 = 0;
  return result;
}

uint64_t sub_2489F9830()
{
  swift_getKeyPath();
  type metadata accessor for CoreRuleRecord();
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_2489F4510();
  sub_248A45204();
  return swift_release();
}

uint64_t sub_2489F98D0()
{
  return sub_2489F9830();
}

void CoreParameterRecord.rules.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = CoreParameterRecord.rules.getter();
  sub_2489BA7D0();
}

void sub_2489F9918(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_248A453F0();
    CoreParameterRecord.rules.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    CoreParameterRecord.rules.setter();
    sub_2489BA7D0();
  }
}

unint64_t CoreParameterRecord.description.getter()
{
  sub_248A45A74();
  swift_bridgeObjectRelease();
  CoreParameterRecord.id.getter();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  return 0xD000000000000018;
}

void CoreParameterRecord.__allocating_init(id:valueType:)()
{
  sub_2489B6B08();
  CoreParameterRecord.init(id:valueType:)();
  sub_2489BA828();
}

void CoreParameterRecord.init(id:valueType:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0;
  v3 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489BA48C();
  v0[6] = sub_2489C330C(&qword_254463C20);
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  v0[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v0 + 3);
  sub_248A4518C();
  sub_2489C0B60();
  sub_248A44F4C();
  sub_2489F8C2C(v1, (uint64_t)(v0 + 3));
  sub_2489F8FF4(0, 0xF000000000000000, (uint64_t)(v2 + 3), (_BYTE *)v2 + 16);
  sub_2489C0B60();
  sub_2489F975C((uint64_t)(v2 + 3), (_BYTE *)v2 + 17);
  sub_248A44FDC();
  CoreParameterRecord.id.setter();
  CoreParameterRecord.valueType.setter();
  sub_2489B71E4();
}

void CoreParameterRecord.persistentBackingData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2489BD8B0();
  sub_2489C4880(v1 + 24, a1);
  sub_2489B7208();
}

void sub_2489F9BD4(uint64_t a1)
{
  __int128 v1[2];

  sub_2489C4880(a1, (uint64_t)v1);
  CoreParameterRecord.persistentBackingData.setter(v1);
}

void CoreParameterRecord.persistentBackingData.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 24;
  sub_2489C09C0();
  sub_2489BCE44(v3);
  sub_2489B8F74(a1, v3);
  swift_endAccess();
  sub_2489B7208();
}

void CoreParameterRecord.persistentBackingData.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  sub_2489BD8B0();
  sub_2489C4880(v1 + 24, (uint64_t)v3);
  sub_2489B6AF4();
}

void static CoreParameterRecord.schemaMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  v28 = sub_248A45330();
  v1 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v2);
  sub_2489BBC7C();
  v25 = v4 - v3;
  v24 = sub_248A452F4();
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v5);
  sub_2489BA48C();
  sub_2489C330C(&qword_2544647F8);
  v6 = *(_QWORD *)(v1 + 72);
  v27 = v1;
  v7 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A496D0;
  v26 = v7;
  swift_getKeyPath();
  *(_QWORD *)&v30 = 0;
  *((_QWORD *)&v30 + 1) = 0xE000000000000000;
  sub_248A45378();
  v8 = (void (*)(uint64_t))MEMORY[0x24BDEAC08];
  sub_2489BED94();
  v9 = MEMORY[0x24BEE4AF8];
  sub_2489C3A50();
  sub_2489F6410(&qword_2544647B8, v8);
  sub_2489B7238();
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v31 + 1) = sub_2489BA858();
  sub_2489EBF34((uint64_t *)&v30);
  sub_248A44F4C();
  sub_2489C1B24();
  sub_2489C3A50();
  sub_2489B7238();
  sub_248A45324();
  swift_getKeyPath();
  v30 = 0u;
  v31 = 0u;
  sub_2489C1B24();
  sub_2489C3A50();
  sub_2489BEEA8();
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v31 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v30 = 0;
  *((_QWORD *)&v30 + 1) = 0xE000000000000000;
  sub_2489C1B24();
  sub_2489C3A50();
  sub_2489BEEA8();
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v31 + 1) = sub_2489C330C(&qword_2544647C8);
  *(_QWORD *)&v30 = v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v0, *MEMORY[0x24BDEAB50], v24);
  sub_248A45300();
  v10 = (void (*)(uint64_t))MEMORY[0x24BDEAB70];
  sub_2489BED94();
  v11 = sub_248A4530C();
  sub_2489F6410(&qword_2544647B0, v10);
  v29 = v11;
  sub_2489B7238();
  sub_248A45324();
  swift_getKeyPath();
  v30 = 0u;
  v31 = 0u;
  sub_2489C330C(&qword_254464900);
  v12 = sub_2489C330C(&qword_254464888);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_248A47460;
  v16 = (uint64_t *)(v15 + v14);
  sub_2489C330C(&qword_254464818);
  v17 = sub_2489BA860();
  *(_OWORD *)(v17 + 16) = xmmword_248A49100;
  *(_QWORD *)(v17 + 32) = swift_getKeyPath();
  sub_2489C6BEC();
  *v16 = v29;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BDEABA0], v12);
  v18 = sub_2489BA860();
  *(_OWORD *)(v18 + 16) = xmmword_248A49100;
  *(_QWORD *)(v18 + 32) = swift_getKeyPath();
  sub_2489C6BEC();
  sub_2489C03F8();
  v19 = sub_2489BA860();
  *(_OWORD *)(v19 + 16) = xmmword_248A496E0;
  *(_QWORD *)(v19 + 32) = swift_getKeyPath();
  *(_QWORD *)(v19 + 40) = swift_getKeyPath();
  sub_2489C6BEC();
  sub_2489C03F8();
  sub_2489C330C(&qword_2544648D0);
  sub_2489BED94();
  sub_248A4533C();
  sub_2489F5DEC(&qword_2544648C8, &qword_2544648D0);
  sub_2489B7238();
  sub_248A45324();
  v20 = sub_2489EC9A4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v22 = *(_QWORD *)(v20 + 16);
  v21 = *(_QWORD *)(v20 + 24);
  if (v22 >= v21 >> 1)
    v20 = sub_2489EC9A4(v21 > 1, v22 + 1, 1, v20);
  *(_QWORD *)(v20 + 16) = v22 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v20 + v26 + v22 * v6, v25, v28);
  sub_2489EA990();
  sub_2489B71E4();
}

void CoreParameterRecord.__allocating_init(backingData:)(uint64_t a1)
{
  sub_2489B6B08();
  CoreParameterRecord.init(backingData:)(a1);
  sub_2489BA7D0();
}

void CoreParameterRecord.init(backingData:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = *v1;
  v5 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  v2[6] = sub_2489C330C(&qword_254463C20);
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v4;
  v12 = v10;
  v13 = v10;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v2 + 3);
  sub_248A4518C();
  sub_2489C5EE4();
  sub_248A44F4C();
  sub_2489F8C2C(v9, (uint64_t)(v2 + 3));
  sub_2489F8FF4(0, 0xF000000000000000, (uint64_t)(v2 + 3), (_BYTE *)v2 + 16);
  sub_2489C5EE4();
  sub_2489F975C((uint64_t)(v2 + 3), (_BYTE *)v2 + 17);
  sub_248A44FDC();
  *((_WORD *)v2 + 8) = 0;
  sub_2489C4880(a1, (uint64_t)&v11);
  sub_2489C09C0();
  sub_2489BCE44((uint64_t)(v2 + 3));
  sub_2489B8F74(&v11, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_2489BCE44(a1);
  sub_2489BA828();
}

void CoreParameterRecord.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  sub_2489BA7D0();
}

uint64_t CoreParameterRecord.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  return swift_deallocClassInstance();
}

void sub_2489FA480(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CoreParameterRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_2489FA4A8()
{
  return CoreParameterRecord.description.getter();
}

uint64_t CoreParameterRecord.hashValue.getter()
{
  sub_248A45F90();
  sub_2489F6410(&qword_254464680, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_248A45480();
  return sub_248A45FD8();
}

void sub_2489FA540()
{
  static CoreParameterRecord.schemaMetadata.getter();
}

uint64_t sub_2489FA554()
{
  return CoreParameterRecord.hashValue.getter();
}

uint64_t sub_2489FA574()
{
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  return sub_248A451D4();
}

uint64_t sub_2489FA5CC()
{
  sub_2489F6410(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  return sub_248A451BC();
}

void sub_2489FA620()
{
  sub_2489F6410(&qword_254464670, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
}

void sub_2489FA64C()
{
  sub_2489F6410(&qword_254464680, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
}

void sub_2489FA678()
{
  sub_2489F6410(&qword_254464690, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
}

void sub_2489FA6A4()
{
  sub_2489F6410(&qword_254464688, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
}

void sub_2489FA6D0(uint64_t a1@<X8>)
{
  CoreParameterRecord.persistentBackingData.getter(a1);
  sub_2489BA7D0();
}

uint64_t sub_2489FA6F0()
{
  return type metadata accessor for CoreParameterRecord();
}

uint64_t sub_2489FA6F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44FE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CoreParameterRecord()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreParameterRecord.__allocating_init(id:valueType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CoreParameterRecord.__allocating_init(backingData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for CoreParameterRecord._SwiftDataNoType()
{
  return &type metadata for CoreParameterRecord._SwiftDataNoType;
}

uint64_t sub_2489FA7BC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_2489BCD7C(&qword_254463B40);
    v8 = a2();
    result = MEMORY[0x2495A2D34](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2489FA824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a2;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v34 - v12;
  v14 = sub_248A452AC();
  v37 = *(_QWORD *)(v14 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_2489BBC7C();
  v36 = v18 - v17;
  if (qword_254464520 != -1)
    swift_once();
  swift_beginAccess();
  v19 = *(_QWORD *)(a4 + 16);
  v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
  swift_retain();
  v20(a3, v19);
  v34 = a3;
  sub_2489F7468();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_2489BE834((uint64_t)v13, 1, v14) == 1)
  {
    sub_2489EE974((uint64_t)v13);
    v21 = v34;
    v22 = ((uint64_t (*)(uint64_t, uint64_t))v20)(v34, v19);
    v23 = v39;
    v24 = v40;
    v26 = sub_2489FAD3C(v22, v25, a1, v38, v21, a4);
    if (!v24)
      v23 = v26;
    sub_2489BEE88();
  }
  else
  {
    v28 = v36;
    v27 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v36, v13, v14);
    v29 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v35, v28, v14);
    sub_2489BE7E0(v29, 0, 1, v14);
    sub_2489C330C(&qword_254464818);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_248A49100;
    *(_QWORD *)(v30 + 32) = swift_getKeyPath();
    v41 = v30;
    sub_248A456A8();
    v23 = v39;
    v31 = v40;
    sub_248A1CA20();
    if (!v31)
      v23 = v32;
    sub_2489BEE88();
    sub_2489EE974(v29);
    sub_2489C154C();
  }
  return v23;
}

uint64_t sub_2489FAAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_2489C330C(&qword_254463B68);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  sub_2489C0068();
  v4 = sub_2489C330C(&qword_254463A98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A44C7C();
  sub_248A44FAC();
  sub_2489F6B64();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t sub_2489FAC34@<X0>(uint64_t *a1@<X8>)
{
  return sub_2489FB554(a1);
}

unint64_t sub_2489FAC54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254463AB0;
  if (!qword_254463AB0)
  {
    v1 = sub_2489BCD7C(&qword_254463AB8);
    v2[0] = sub_2489FACC0();
    v2[1] = sub_2489EEB18();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254463AB0);
  }
  return result;
}

unint64_t sub_2489FACC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254463AD8;
  if (!qword_254463AD8)
  {
    v1 = sub_2489BCD7C(&qword_254463AE8);
    v2 = sub_2489EEB7C(&qword_254463B20, &qword_254463B30);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254463AD8);
  }
  return result;
}

uint64_t sub_2489FAD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  char v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t KeyPath;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t AssociatedTypeWitness;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96[16];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v94 = a4;
  v7 = v6;
  v95 = a3;
  v12 = sub_2489C330C(&qword_254464970);
  MEMORY[0x24BDAC7A8](v12, v13);
  v80 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v15);
  v86 = (char *)&v76 - v17;
  v84 = *(_QWORD *)(a5 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v85 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v83 = (char *)&v76 - v22;
  v90 = sub_2489C330C(&qword_254463B68);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90, v23);
  v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_2489C330C(&qword_254463A98);
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88, v26);
  v28 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C330C(&qword_254464818);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_248A49100;
  *(_QWORD *)(v29 + 32) = swift_getKeyPath();
  v104 = v29;
  sub_248A456A8();
  v30 = v104;
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A44C7C();
  v102 = a1;
  v103 = a2;
  v106 = v7;
  sub_248A44FAC();
  v91 = a5;
  v92 = a6;
  v97 = a5;
  v98 = a6;
  v99 = a1;
  v100 = a2;
  v101 = v95;
  v31 = (void *)v93;
  v93 = sub_248A06634(v94, 0, v30, (uint64_t)v28, (uint64_t)v25, (uint64_t)sub_2489FB808, (uint64_t)v96);
  if (v31)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v89 + 8))(v25, v90);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v28, v88);
    v104 = 0;
    v105 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v104 = 0xD00000000000002ALL;
    v105 = 0x8000000248A4FEA0;
    (*(void (**)(uint64_t))(*(_QWORD *)(v92 + 16) + 16))(v91);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    v33 = v104;
    v34 = v105;
    sub_2489C9824();
    swift_allocError();
    *v35 = v33;
    v35[1] = v34;
    swift_willThrow();
    return v93;
  }
  v79 = 0;
  v76 = v7;
  v78 = a1;
  v77 = a2;
  v37 = v32;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v25, v90);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v28, v88);
  v38 = v84;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v40 = v83;
  v41 = v95;
  v42 = v91;
  v39(v83, v95, v91);
  if ((v37 & 1) != 0)
  {
    v43 = v40;
    v44 = 1;
    v45 = v92;
    v36 = v93;
  }
  else
  {
    v45 = v92;
    v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 48))(v42, v92);
    v43 = v40;
    v44 = v46;
    v36 = v93;
  }
  v47 = v86;
  v48 = v85;
  v49 = *(void (**)(char *, uint64_t))(v38 + 8);
  v49(v43, v42);
  v39(v48, v41, v42);
  if ((v44 & 1) != 0)
  {
    v49(v48, v42);
LABEL_8:
    KeyPath = swift_getKeyPath();
    v51 = v47;
    (*(void (**)(uint64_t, uint64_t))(v45 + 56))(v42, v45);
    v52 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    v53 = v79;
    v54 = sub_2489BE6F0();
    v79 = v53;
    if (v53)
    {
      (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v52);
      swift_release();
      swift_release();
      return v36;
    }
    v67 = v54;
    v68 = v55;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v52);
    sub_248A1D964(KeyPath, v67, v68);
    swift_release();
    sub_2489BE604(v67, v68);
    swift_getKeyPath();
    CoreParameterProtocol.valueType.getter();
    sub_248A1D9AC();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  v56 = CoreParameterProtocol.valueType.getter();
  v58 = v57;
  CoreParameterRecord.valueType.getter();
  if (v56 == v60 && v58 == v59)
  {
    swift_bridgeObjectRelease_n();
    v49(v48, v42);
  }
  else
  {
    v62 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49(v48, v42);
    v47 = v86;
    if ((v62 & 1) == 0)
      goto LABEL_8;
  }
  CoreParameterRecord.valueData.getter();
  v64 = v63;
  v66 = v65;
  (*(void (**)(void))(v45 + 64))();
  sub_2489BDB94(v64, v66);
LABEL_19:
  v69 = sub_248A45078();
  v70 = v77;
  v71 = v78;
  v72 = v79;
  if ((v69 & 1) != 0)
  {
    sub_248A450B4();
    v73 = (uint64_t)v80;
    if (v72)
    {
      swift_release();
      return v36;
    }
  }
  else
  {
    v73 = (uint64_t)v80;
  }
  if (qword_254464520 != -1)
    swift_once();
  swift_beginAccess();
  sub_2489EE9F0(&qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  swift_retain();
  sub_248A45180();
  v74 = sub_248A452AC();
  sub_2489BE7E0(v73, 0, 1, v74);
  sub_248A1C818(v71, v70, v73);
  swift_release();
  sub_2489EE974(v73);
  return v36;
}

uint64_t sub_2489FB554@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_2489C330C(&qword_254464060);
  v20 = *(_QWORD *)(v3 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BBC7C();
  v8 = v7 - v6;
  v9 = sub_2489C330C(&qword_254463B30);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_2489BBC7C();
  v14 = v13 - v12;
  v15 = sub_2489C330C(&qword_254463AE8);
  v19 = *(_QWORD *)(v15 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489C0068();
  sub_2489EEB7C(&qword_254463B28, &qword_254463B30);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v9);
  sub_248A44DB4();
  a1[3] = sub_2489C330C(&qword_254463AB8);
  a1[4] = sub_2489FAC54();
  sub_2489BE690(a1);
  sub_2489EEB7C(&qword_254463AE0, &qword_254463AE8);
  sub_2489EEB7C((uint64_t *)&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v8, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v1, v15);
}

void sub_2489FB77C()
{
  sub_248A453F0();
  CoreParameterProtocol.valueType.getter();
  type metadata accessor for CoreParameterRecord();
  swift_allocObject();
  CoreParameterRecord.init(id:valueType:)();
}

void sub_2489FB808()
{
  sub_2489FB77C();
}

uint64_t sub_2489FB82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v29 = a6;
  v30 = a7;
  v27 = a3;
  v28 = a4;
  v26 = a2;
  v34 = a1;
  v10 = sub_2489C330C(&qword_254464970);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_248A452AC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254464520 != -1)
    swift_once();
  swift_beginAccess();
  v19 = *(_QWORD *)(a8 + 16);
  v25 = a8;
  v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
  swift_retain();
  v20(a5, v19);
  v31 = a5;
  sub_2489F7468();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_2489BE834((uint64_t)v13, 1, v14) == 1)
  {
    sub_2489EE974((uint64_t)v13);
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    v20(v31, v19);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    v21 = v32;
    v22 = v33;
    sub_2489C9824();
    swift_allocError();
    *v23 = v21;
    v23[1] = v22;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
    sub_2489FBAB0((uint64_t)v18, v34, v26, v27, v28, v31, v29, v30, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

uint64_t sub_2489FBAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v37 = a5;
  v38 = a8;
  v13 = sub_2489C330C(&qword_254464970);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_248A452AC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, a1, v17);
  sub_2489BE7E0((uint64_t)v16, 0, 1, v17);
  v33 = a4;
  sub_248A2FA48();
  v19 = v18;
  sub_2489EE974((uint64_t)v16);
  if (v19)
  {
    v34 = a9;
    v35 = a2;
    v36 = a6;
    if (qword_254464240 != -1)
      swift_once();
    v20 = type metadata accessor for logger();
    sub_2489C401C(v20, (uint64_t)&unk_254464228);
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    (*(void (**)(uint64_t))(*(_QWORD *)(v34 + 16) + 16))(v36);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_248A45D8C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    v22 = v41;
    v23 = sub_2489BE6F0();
    if (v22)
    {
      swift_release();
    }
    else
    {
      v29 = v23;
      v30 = v24;
      sub_248A1D964(KeyPath, v23, v24);
      swift_release();
      swift_release();
      sub_2489BE604(v29, v30);
      if ((sub_248A45078() & 1) != 0)
        sub_248A450B4();
      v31 = v35;
      type metadata accessor for CoreRuleRecord();
      v32 = CoreParameterRecord.rules.getter();
      sub_248A08194(v32, v31);
      swift_bridgeObjectRelease();
      if ((sub_248A45078() & 1) != 0)
        sub_248A450B4();
    }
    return swift_release();
  }
  else
  {
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v39 = 0xD00000000000002FLL;
    v40 = 0x8000000248A4FF00;
    (*(void (**)(uint64_t))(*(_QWORD *)(a9 + 16) + 16))(a6);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    v25 = v39;
    v26 = v40;
    sub_2489C9824();
    swift_allocError();
    *v27 = v25;
    v27[1] = v26;
    return swift_willThrow();
  }
}

uint64_t CoreRule.id.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  sub_2489BE100(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t CoreRule.deinit()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return v0;
}

uint64_t CoreRule.__deallocating_deinit()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_2489FBEEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreRule.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for CoreRule()
{
  return swift_lookUpClassMethod();
}

uint64_t CoreRule.Category.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489FBF50 + 4 * byte_248A4A000[*v0]))(0x646E756F706D6F63, 0xE800000000000000);
}

uint64_t sub_2489FBF50()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_2489FBF68()
{
  return 0x746E657665;
}

uint64_t sub_2489FBF7C()
{
  return 0x6574617473;
}

uint64_t sub_2489FBF90()
{
  return 0x6574656D61726170;
}

uint64_t sub_2489FBFAC()
{
  return 0x656369766564;
}

unint64_t sub_2489FBFC4()
{
  unint64_t result;

  result = qword_2577A52F0;
  if (!qword_2577A52F0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Category, &type metadata for CoreRule.Category);
    atomic_store(result, (unint64_t *)&qword_2577A52F0);
  }
  return result;
}

uint64_t sub_2489FC000()
{
  unsigned __int8 *v0;

  return sub_248A0FC24(*v0);
}

uint64_t sub_2489FC008(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_248A108E4(a1, *v1);
}

uint64_t sub_2489FC010(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_248A10118(a1, *v1);
}

unint64_t sub_2489FC018@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return CoreRule.Category.init(rawValue:)(*a1, a2);
}

uint64_t sub_2489FC020()
{
  sub_2489FC188();
  return sub_248A45678();
}

uint64_t sub_2489FC07C()
{
  sub_2489FC188();
  return sub_248A45660();
}

uint64_t _s8CategoryOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2489FC118 + 4 * byte_248A4A00B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2489FC14C + 4 * byte_248A4A006[v4]))();
}

uint64_t sub_2489FC14C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489FC154(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489FC15CLL);
  return result;
}

uint64_t sub_2489FC168(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489FC170);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2489FC174(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489FC17C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_2489FC188()
{
  unint64_t result;

  result = qword_2577A52F8;
  if (!qword_2577A52F8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Category, &type metadata for CoreRule.Category);
    atomic_store(result, (unint64_t *)&qword_2577A52F8);
  }
  return result;
}

uint64_t sub_2489FC1C4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000248A4FF50)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2489FC248()
{
  sub_248A45F90();
  sub_248A45F9C();
  return sub_248A45FD8();
}

unint64_t sub_2489FC288()
{
  return 0xD000000000000010;
}

uint64_t sub_2489FC2A8()
{
  sub_248A45F90();
  sub_248A45F9C();
  return sub_248A45FD8();
}

uint64_t sub_2489FC2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489FC1C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2489FC310()
{
  sub_2489FC40C();
  return sub_248A46074();
}

uint64_t sub_2489FC338()
{
  sub_2489FC40C();
  return sub_248A46080();
}

void CoreRule.Options.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_2489C330C(&qword_2577A5300);
  sub_2489C00C0();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489C0068();
  sub_2489BE100(a1, a1[3]);
  sub_2489FC40C();
  sub_248A46008();
  sub_248A45D38();
  sub_2489C1598();
  sub_2489BA808();
}

unint64_t sub_2489FC40C()
{
  unint64_t result;

  result = qword_2577A5308;
  if (!qword_2577A5308)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A288, &_s7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5308);
  }
  return result;
}

void CoreRule.Options.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_2489C330C(&qword_2577A5310);
  sub_2489C00C0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489C0068();
  sub_2489BE100(a1, a1[3]);
  sub_2489FC40C();
  sub_248A45FF0();
  if (!v2)
  {
    v7 = sub_248A45CC0();
    sub_2489C1598();
    *a2 = v7 & 1;
  }
  sub_2489BCE44((uint64_t)a1);
  sub_2489BA808();
}

void sub_2489FC514(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  CoreRule.Options.init(from:)(a1, a2);
}

void sub_2489FC528(_QWORD *a1)
{
  CoreRule.Options.encode(to:)(a1);
}

uint64_t _s7OptionsVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s7OptionsVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2489FC620 + 4 * byte_248A4A15D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2489FC654 + 4 * byte_248A4A158[v4]))();
}

uint64_t sub_2489FC654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489FC65C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2489FC664);
  return result;
}

uint64_t sub_2489FC670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2489FC678);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2489FC67C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2489FC684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s7OptionsV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2489FC6D0 + 4 * byte_248A4A162[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2489FC6F0 + 4 * byte_248A4A167[v4]))();
}

_BYTE *sub_2489FC6D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2489FC6F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2489FC6F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2489FC700(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2489FC708(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2489FC710(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7OptionsV10CodingKeysOMa()
{
  return &_s7OptionsV10CodingKeysON;
}

unint64_t sub_2489FC730()
{
  unint64_t result;

  result = qword_2577A5318;
  if (!qword_2577A5318)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A260, &_s7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5318);
  }
  return result;
}

unint64_t sub_2489FC770()
{
  unint64_t result;

  result = qword_2577A5320;
  if (!qword_2577A5320)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A1D0, &_s7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5320);
  }
  return result;
}

unint64_t sub_2489FC7B0()
{
  unint64_t result;

  result = qword_2577A5328;
  if (!qword_2577A5328)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A1F8, &_s7OptionsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5328);
  }
  return result;
}

void CoreRule.Predicate.__allocating_init(compoundOperation:)(char *a1)
{
  sub_2489C0420();
  CoreRule.Predicate.init(compoundOperation:)(a1);
  sub_2489BA7D0();
}

void CoreRule.Predicate.__allocating_init(argument:operation:value:queries:subpredicates:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2489C0420();
  CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(a1, a2, a3, a4, a5);
  sub_2489BA828();
}

uint64_t CoreRule.Predicate.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___Predicate_id);
  sub_248A453F0();
  return v1;
}

uint64_t CoreRule.Predicate.argument.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = v1 + OBJC_IVAR___Predicate_argument;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___Predicate_argument);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___Predicate_argument + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_BYTE *)(v2 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  return sub_2489C4150(v3, v4, v5);
}

void CoreRule.Predicate.__allocating_init(id:predicateData:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)sub_2489C18E0());
  CoreRule.Predicate.init(id:predicateData:)();
  sub_2489BA828();
}

uint64_t sub_2489FC8F8()
{
  _BYTE *v0;
  uint64_t *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v20[3];
  uint64_t v21;
  __int128 v22;

  v1 = (uint64_t *)&v0[OBJC_IVAR___Predicate_argument];
  v2 = v0[OBJC_IVAR___Predicate_argument + 16];
  if (v2 > 1)
  {
    sub_2489C9824();
    sub_2489BF740();
    *v14 = 0xD00000000000002DLL;
    v14[1] = 0x8000000248A4FFE0;
    swift_willThrow();
  }
  else
  {
    v4 = *v1;
    v3 = v1[1];
    *(_QWORD *)&v22 = 36;
    *((_QWORD *)&v22 + 1) = 0xE100000000000000;
    sub_2489C4150(v4, v3, v2);
    sub_248A4557C();
    sub_2489BDB7C(v4, v3, v2);
    sub_248A4557C();
    LOBYTE(v20[0]) = v0[OBJC_IVAR___Predicate_operation];
    CoreRule.Predicate.Operator.rawValue.getter();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_2489C330C(&qword_254464820);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_248A47480;
    sub_2489C5618((uint64_t)&v0[OBJC_IVAR___Predicate_value], (uint64_t)v20, &qword_254464700);
    if (v21)
    {
      sub_2489C0824(v6, v7, v8, v9, v10, v11, v12, v13, v20[0], v20[1], v20[2], v21, v22);
      sub_2489C7218((uint64_t)v20);
      sub_2489C3288(&v22, (_OWORD *)(v5 + 32));
    }
    else
    {
      sub_2489C3298((uint64_t)v20, &qword_254464700);
      v15 = objc_allocWithZone(MEMORY[0x24BDBCEF8]);
      v16 = objc_msgSend(v15, sel_init, v20[0]);
      *(_QWORD *)(v5 + 56) = sub_2489B5D40(0, qword_254463D98);
      *(_QWORD *)(v5 + 32) = v16;
    }
    sub_2489B5D40(0, &qword_2544642F0);
    v0 = sub_2489C723C(36, 0xE100000000000000, v5);
    v17 = (void *)sub_248A453B4();
    v18 = objc_msgSend(v0, sel_predicateWithSubstitutionVariables_, v17);

    LOBYTE(v0) = objc_msgSend(v18, sel_evaluateWithObject_, 0);
  }
  return v0 & 1;
}

uint64_t sub_2489FCB88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _OWORD *v21;
  uint64_t v22[3];
  uint64_t v23;
  _OWORD v24[2];
  char v25;

  v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR___Predicate_operation);
  if (v6 >= 0xB)
  {
    if (v6 == 11)
    {
      v18 = *(_QWORD *)(v2 + OBJC_IVAR___Predicate_rawdata);
      v19 = *(_QWORD *)(v2 + OBJC_IVAR___Predicate_rawdata + 8);
      v16 = v24;
      CoreRule.Predicate.Operator.evaluate<A>(value:predicateData:)(a1, v18, v19, a2);
      if (!v3)
        LOBYTE(v16) = v20;
    }
    else
    {
      *(_QWORD *)&v24[0] = 0;
      *((_QWORD *)&v24[0] + 1) = 0xE000000000000000;
      sub_248A45A74();
      sub_248A4557C();
      sub_248A46098();
      sub_248A4557C();
      swift_bridgeObjectRelease();
      LOBYTE(v16) = 0;
      sub_2489C9824();
      sub_2489BF740();
      *v21 = v24[0];
      swift_willThrow();
    }
  }
  else
  {
    v25 = *(_BYTE *)(v2 + OBJC_IVAR___Predicate_operation);
    sub_2489C5618(v2 + OBJC_IVAR___Predicate_value, (uint64_t)v22, &qword_254464700);
    if (v23)
    {
      sub_2489C0824(v7, v8, v9, v10, v11, v12, v13, v14, v22[0], v22[1], v22[2], v23, v24[0]);
      sub_2489C7218((uint64_t)v22);
    }
    else
    {
      sub_2489C3298((uint64_t)v22, &qword_254464700);
      memset(v24, 0, sizeof(v24));
    }
    CoreRule.Predicate.Operator.evaluate<A>(lhs:rhs:)(a1, (uint64_t)v24, a2);
    LOBYTE(v16) = v15;
    sub_2489C3298((uint64_t)v24, &qword_254464AF0);
  }
  return v16 & 1;
}

id CoreRule.Predicate.__allocating_init()()
{
  return objc_msgSend(sub_2489C0420(), sel_init);
}

void CoreRule.Predicate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2489FCD70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746E656D75677261 && a2 == 0xE800000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x61746164776172 && a2 == 0xE700000000000000;
        if (v8 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
          if (v9 || (sub_248A45DBC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x73656972657571 && a2 == 0xE700000000000000;
            if (v10 || (sub_248A45DBC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6964657270627573 && a2 == 0xED00007365746163)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_248A45DBC();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2489FD04C()
{
  sub_248A45F90();
  sub_248A45F9C();
  return sub_248A45FD8();
}

uint64_t sub_2489FD090()
{
  return sub_2489FD04C();
}

uint64_t sub_2489FD098()
{
  sub_248A45F90();
  sub_248A45F9C();
  return sub_248A45FD8();
}

uint64_t sub_2489FD0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489FCD70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489FD0FC()
{
  sub_2489BCE08();
  return sub_248A46074();
}

uint64_t sub_2489FD124()
{
  sub_2489BCE08();
  return sub_248A46080();
}

id CoreRule.Predicate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2489FD180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreRule.Predicate.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for CoreRule.Predicate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(argument:operation:value:queries:subpredicates:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(id:predicateData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(compoundOperation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

unint64_t sub_2489FD1E8()
{
  unint64_t result;

  result = qword_2577A5368;
  if (!qword_2577A5368)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A444, &_s9PredicateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5368);
  }
  return result;
}

uint64_t sub_2489FD224()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return swift_deallocObject();
}

uint64_t CoreRule.Predicate.Argument.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (!*(_BYTE *)(v0 + 16))
  {
    v1 = 0x28746E756F63;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v1 = 0x286C617665;
LABEL_5:
    v3 = v1;
    sub_248A4557C();
    sub_248A4557C();
    return v3;
  }
  return 0;
}

uint64_t CoreRule.Predicate.Argument.name.getter()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 > 1)
    return 0;
  v3 = v0;
  v2 = *(_QWORD *)v0;
  sub_2489C4150(v2, *(_QWORD *)(v3 + 8), v1);
  return v2;
}

uint64_t static CoreRule.Predicate.Argument.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5)
          v9 = 1;
        else
          v9 = sub_2489C23E0();
        sub_2489C4150(v6, v5, 1u);
        sub_2489C4150(v3, v2, 1u);
        sub_2489BDB7C(v3, v2, 1u);
        v12 = v6;
        v13 = v5;
        v14 = 1;
LABEL_25:
        sub_2489BDB7C(v12, v13, v14);
        return v9 & 1;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_2489BDB7C(*(_QWORD *)a1, v2, 2u);
      sub_2489BDB7C(0, 0, 2u);
      v9 = 1;
      return v9 & 1;
    }
  }
  else if (!*(_BYTE *)(a2 + 16))
  {
    if (v3 == v6 && v2 == v5)
      v9 = 1;
    else
      v9 = sub_2489C23E0();
    sub_2489C4150(v6, v5, 0);
    sub_2489C4150(v3, v2, 0);
    sub_2489BDB7C(v3, v2, 0);
    v12 = v6;
    v13 = v5;
    v14 = 0;
    goto LABEL_25;
  }
  sub_2489C4150(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
  sub_2489C4150(v3, v2, v4);
  sub_2489BDB7C(v3, v2, v4);
  sub_2489BDB7C(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

uint64_t sub_2489FD4A0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_2489FD514()
{
  sub_248A45F90();
  sub_2489C0B3C();
  sub_248A45FD8();
  sub_2489C0648();
}

uint64_t sub_2489FD544()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_2489FD560()
{
  return 0;
}

uint64_t sub_2489FD56C()
{
  sub_2489C3DC4();
  return sub_248A46074();
}

uint64_t sub_2489FD594()
{
  sub_2489C3DC4();
  return sub_248A46080();
}

void sub_2489FD5BC()
{
  sub_2489FD514();
}

uint64_t sub_2489FD5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489FD4A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2489FD5FC()
{
  sub_2489C6B04();
  return sub_248A46074();
}

uint64_t sub_2489FD624()
{
  sub_2489C6B04();
  return sub_248A46080();
}

void sub_2489FD64C()
{
  sub_248A45F90();
  sub_2489C0B3C();
  sub_248A45FD8();
  sub_2489C0648();
}

uint64_t sub_2489FD678()
{
  sub_2489BB0F8();
  return sub_248A46074();
}

uint64_t sub_2489FD6A0()
{
  sub_2489BB0F8();
  return sub_248A46080();
}

uint64_t sub_2489FD6CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2489FD544();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2489FD6F4()
{
  sub_2489C3E00();
  return sub_248A46074();
}

uint64_t sub_2489FD71C()
{
  sub_2489C3E00();
  return sub_248A46080();
}

uint64_t sub_2489FD748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreRule.Predicate.Argument.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2489FD76C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14descr2519BBCF9C8ArgumentOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2489C4150(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2489BDB7C(v6, v7, v8);
  return a1;
}

uint64_t _s14descr2519BBCF9C8ArgumentOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2489BDB7C(v4, v5, v6);
  return a1;
}

uint64_t _s14descr2519BBCF9C8ArgumentOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr2519BBCF9C8ArgumentOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2489FD89C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

unint64_t _s14descr2519BBCF9C8ArgumentO17CommonKeyPathKindOwxx(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14descr2519BBCF9C8ArgumentO17CommonKeyPathKindOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    sub_248A453F0();
  }
  return a1;
}

_QWORD *_s14descr2519BBCF9C8ArgumentO17CommonKeyPathKindOwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_248A453F0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr2519BBCF9C8ArgumentO17CommonKeyPathKindOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2489FDA1C()
{
  unint64_t result;

  result = qword_2577A5378;
  if (!qword_2577A5378)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A6F4, &_s14descr2519BBCF9C8ArgumentO20EvaluationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5378);
  }
  return result;
}

unint64_t sub_2489FDA5C()
{
  unint64_t result;

  result = qword_2577A5380;
  if (!qword_2577A5380)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A7AC, &_s14descr2519BBCF9C8ArgumentO15CountCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5380);
  }
  return result;
}

unint64_t sub_2489FDA9C()
{
  unint64_t result;

  result = qword_2577A5388;
  if (!qword_2577A5388)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4A864, &_s14descr2519BBCF9C8ArgumentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5388);
  }
  return result;
}

void sub_2489FDAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_248A454E0();
  v2 = v1;
  if (v0 == sub_248A454E0() && v2 == v3)
    sub_2489BA8CC();
  else
    sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  sub_2489B6AF4();
}

void sub_2489FDB44(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_2489D72C8(a1);
  v5 = v4;
  if (v3 == sub_2489D72C8(a2) && v5 == v6)
    sub_2489BA8CC();
  else
    sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  sub_2489B6AF4();
}

void sub_2489FDBA8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2489FDC1C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2489FDCB8 + 4 * byte_248A4AA16[a2]))(0x53746E65746E6F63);
}

void sub_2489FDCB8(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 0x53746E65746E6F63 || v1 != 0xED00007375746174)
    sub_248A45DBC();
  sub_2489BBC58();
  sub_2489BDA70();
  sub_2489B6AF4();
}

void sub_2489FDD78(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2489FDDC0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2489FDE14 + 4 * byte_248A4AA20[a2]))(2036625250);
}

void sub_2489FDE14(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 2036625250 && v1 == 0xE400000000000000)
    sub_2489BA8CC();
  else
    sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  sub_2489B6AF4();
}

uint64_t sub_2489FDE78(uint64_t a1, uint64_t a2)
{
  return sub_2489FE108(a1, a2, CoreTip.ConstellationContent.Color.rawValue.getter);
}

void sub_2489FDE84(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6567616D69;
  else
    v3 = 0x6C6F626D7973;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6567616D69;
  else
    v5 = 0x6C6F626D7973;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    sub_2489BA8CC();
  else
    sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  sub_2489B6AF4();
}

void sub_2489FDEFC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F43746E65636361;
  else
    v3 = 97;
  if (v2)
    v4 = 0xE100000000000000;
  else
    v4 = 0xEB00000000726F6CLL;
  if ((a2 & 1) != 0)
    v5 = 0x6F43746E65636361;
  else
    v5 = 97;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000726F6CLL;
  else
    v6 = 0xE100000000000000;
  if (v3 == v5 && v4 == v6)
    sub_2489BA8CC();
  else
    sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  sub_2489B6AF4();
}

void sub_2489FDF78(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2489FDFB8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_2489FE010 + 4 * byte_248A4AA28[a2]))(0xD000000000000010);
}

void sub_2489FE010(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  if (a1 == 0xD000000000000010 && v2 == ((a2 - 32) | 0x8000000000000000))
    sub_2489BA8CC();
  else
    sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  sub_2489B6AF4();
}

void sub_2489FE074(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6579616C70736964;
  else
    v3 = 0x4449706974;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xED00006574614464;
  if ((a2 & 1) != 0)
    v5 = 0x6579616C70736964;
  else
    v5 = 0x4449706974;
  if ((a2 & 1) != 0)
    v6 = 0xED00006574614464;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    sub_2489BA8CC();
  else
    sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  sub_2489B6AF4();
}

uint64_t sub_2489FE0FC(uint64_t a1, uint64_t a2)
{
  return sub_2489FE108(a1, a2, CoreRule.Predicate.Operator.rawValue.getter);
}

uint64_t sub_2489FE108(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    sub_2489BA8CC();
  else
    LOBYTE(v4) = sub_2489C15A8();
  sub_2489BDA70();
  sub_2489BBC58();
  return v4 & 1;
}

BOOL CoreRule.Predicate.Operator.isCompoundOperation.getter()
{
  unsigned __int8 *v0;

  return *v0 - 7 < 2;
}

uint64_t sub_2489FE19C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t result;
  BOOL v3;

  switch(*v1)
  {
    case 0:
      return (uint64_t)sub_2489C0440(a1, sel_isEqualToNumber_);
    case 1:
      return sub_2489C0440(a1, sel_isEqualToNumber_) ^ 1;
    case 2:
      v3 = (char *)sub_2489C0440(a1, sel_compare_) + 1 == 0;
      goto LABEL_11;
    case 3:
      result = (uint64_t)sub_2489C0440(a1, sel_compare_);
      if (result != -1)
        goto LABEL_10;
      result = 1;
      break;
    case 4:
      v3 = sub_2489C0440(a1, sel_compare_) == (id)1;
      goto LABEL_11;
    case 5:
      result = (uint64_t)sub_2489C0440(a1, sel_compare_);
      if (result != 1)
      {
LABEL_10:
        v3 = sub_2489C0440(result, sel_compare_) == 0;
LABEL_11:
        result = v3;
      }
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

unint64_t sub_2489FE288()
{
  unint64_t result;

  result = qword_2577A5390;
  if (!qword_2577A5390)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Predicate.Operator, &type metadata for CoreRule.Predicate.Operator);
    atomic_store(result, (unint64_t *)&qword_2577A5390);
  }
  return result;
}

void sub_2489FE2C4()
{
  sub_248A0FC28();
}

void sub_2489FE2CC(uint64_t a1)
{
  char *v1;

  sub_248A10014(a1, *v1);
}

void sub_2489FE2D4()
{
  sub_248A1011C();
}

void sub_2489FE2DC(char *a1@<X8>)
{
  CoreRule.Predicate.Operator.init(rawValue:)(a1);
}

uint64_t sub_2489FE2E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2489FE108(*a1, *a2, CoreRule.Predicate.Operator.rawValue.getter) & 1;
}

uint64_t sub_2489FE310(uint64_t a1, uint64_t a2)
{
  return sub_2489FE358(a1, a2, &qword_254463D50, sub_248A220F8, &qword_254462978, sub_2489FE8B4);
}

uint64_t sub_2489FE334(uint64_t a1, uint64_t a2)
{
  return sub_2489FE358(a1, a2, &qword_2577A4E98, (uint64_t (*)())sub_248A2211C, &qword_2577A4E80, (uint64_t (*)())sub_2489FE9A8);
}

uint64_t sub_2489FE358(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(), uint64_t *a5, uint64_t (*a6)())
{
  char v11;
  double v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  double v18;
  char v21;
  double v22;
  void *v23;
  double v24;
  void *v25;
  _BYTE v26[32];
  _BYTE v27[32];

  sub_2489C81EC(a1, (uint64_t)v26);
  sub_2489C81EC(a2, (uint64_t)v27);
  sub_2489C330C(&qword_254463950);
  sub_2489C330C(&qword_254463948);
  if (!sub_2489C3AC8())
  {
    sub_2489C330C(&qword_254463958);
    if (sub_2489BF9E0())
      goto LABEL_4;
    if (sub_2489C3AC8() && sub_2489C15B8())
    {
      v11 = LOBYTE(v24) ^ LOBYTE(v22) ^ 1;
LABEL_41:
      sub_2489BCE44((uint64_t)v27);
      sub_2489BCE44((uint64_t)v26);
      return v11 & 1;
    }
    if (sub_2489C3AC8())
    {
      v12 = v24;
      if (sub_2489BF9E0())
        goto LABEL_21;
    }
    if (sub_2489C3AC8())
    {
      v13 = LOBYTE(v24);
      if (sub_2489C15B8())
      {
        v14 = LOBYTE(v22);
LABEL_30:
        v17 = v13 == v14;
        goto LABEL_38;
      }
    }
    if (sub_2489C3AC8())
    {
      v15 = LOWORD(v24);
      if (sub_2489BF9E0())
      {
        v16 = LOWORD(v22);
LABEL_34:
        v17 = v15 == v16;
        goto LABEL_38;
      }
    }
    if (sub_2489C3AC8())
    {
      v13 = LODWORD(v24);
      if (sub_2489C15B8())
      {
        v14 = LODWORD(v22);
        goto LABEL_30;
      }
    }
    if (sub_2489C3AC8())
    {
      v12 = v24;
      if (sub_2489BF9E0())
      {
LABEL_21:
        v17 = *(_QWORD *)&v12 == *(_QWORD *)&v22;
        goto LABEL_38;
      }
    }
    if (sub_2489C3AC8())
    {
      v18 = v24;
      if (sub_2489C15B8())
        goto LABEL_37;
    }
    if (sub_2489C3AC8())
    {
      v15 = LOBYTE(v24);
      if (sub_2489BF9E0())
      {
        v16 = LOBYTE(v22);
        goto LABEL_34;
      }
    }
    if (sub_2489C3AC8())
    {
      v13 = LOWORD(v24);
      if (sub_2489C15B8())
      {
        v14 = LOWORD(v22);
        goto LABEL_30;
      }
    }
    if (sub_2489C3AC8())
    {
      v15 = LODWORD(v24);
      if (sub_2489BF9E0())
      {
        v16 = LODWORD(v22);
        goto LABEL_34;
      }
    }
    if (sub_2489C3AC8())
    {
      v18 = v24;
      if (sub_2489C15B8())
      {
LABEL_37:
        v17 = *(_QWORD *)&v18 == *(_QWORD *)&v22;
        goto LABEL_38;
      }
    }
    if (sub_2489C3AC8() && sub_2489BF9E0())
    {
      v17 = *(float *)&v24 == *(float *)&v22;
      goto LABEL_38;
    }
    if (sub_2489C3AC8() && sub_2489C15B8())
    {
      v17 = v24 == v22;
LABEL_38:
      v11 = v17;
      goto LABEL_41;
    }
    if (sub_2489C3AC8())
    {
      if (sub_2489BF9E0())
      {
        if (*(_QWORD *)&v24 == *(_QWORD *)&v22 && v25 == v23)
        {
          v11 = 1;
          goto LABEL_66;
        }
        v21 = sub_248A45DBC();
LABEL_60:
        v11 = v21;
LABEL_66:
        sub_2489BBC60();
        goto LABEL_67;
      }
      sub_2489BBC60();
    }
    sub_2489C330C(a3);
    if (sub_2489BF9E0())
    {
      if (sub_2489BF9E0())
      {
        v21 = a4();
        goto LABEL_60;
      }
      sub_2489BBC60();
    }
    sub_2489C330C(a5);
    if (sub_2489BF9E0())
    {
      if (sub_2489BF9E0())
      {
        v11 = a6();
        sub_2489BEC70();
LABEL_67:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      sub_2489BEC70();
    }
    sub_2489C32D0((uint64_t)v26, &qword_254463950);
    v11 = 0;
    return v11 & 1;
  }

LABEL_4:
  sub_2489C32D0((uint64_t)v26, &qword_254463950);
  v11 = 1;
  return v11 & 1;
}

uint64_t sub_2489FE890(uint64_t a1, uint64_t a2)
{
  return sub_2489FE358(a1, a2, &qword_254462948, (uint64_t (*)())sub_248A223C0, &qword_254462E80, (uint64_t (*)())sub_2489FEA9C);
}

uint64_t sub_2489FE8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v8;
  _BYTE v10[32];
  _BYTE v11[32];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v6 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        sub_2489C81EC(v3, (uint64_t)v11);
        sub_2489C81EC(v4, (uint64_t)v10);
        v6 = sub_2489FE358((uint64_t)v11, (uint64_t)v10, &qword_254463D50, (uint64_t (*)())sub_248A220F8, &qword_254462978, sub_2489FE8B4);
        sub_2489C7218((uint64_t)v10);
        sub_2489C7218((uint64_t)v11);
        v8 = v5-- != 0;
        if ((v6 & 1) == 0)
          break;
        v3 += 32;
        v4 += 32;
      }
      while (v8);
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_2489FE9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v8;
  _BYTE v10[32];
  _BYTE v11[32];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v6 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        sub_2489D09D8(v3, (uint64_t)v11);
        sub_2489D09D8(v4, (uint64_t)v10);
        v6 = sub_2489FE358((uint64_t)v11, (uint64_t)v10, &qword_2577A4E98, (uint64_t (*)())sub_248A2211C, &qword_2577A4E80, sub_2489FE9A8);
        sub_2489D09A4((uint64_t)v10);
        sub_2489D09A4((uint64_t)v11);
        v8 = v5-- != 0;
        if ((v6 & 1) == 0)
          break;
        v3 += 32;
        v4 += 32;
      }
      while (v8);
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_2489FEA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v8;
  _BYTE v10[32];
  _BYTE v11[32];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v6 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        sub_2489D132C(v3, (uint64_t)v11);
        sub_2489D132C(v4, (uint64_t)v10);
        v6 = sub_2489FE358((uint64_t)v11, (uint64_t)v10, &qword_254462948, (uint64_t (*)())sub_248A223C0, &qword_254462E80, sub_2489FEA9C);
        sub_2489D1368((uint64_t)v10);
        sub_2489D1368((uint64_t)v11);
        v8 = v5-- != 0;
        if ((v6 & 1) == 0)
          break;
        v3 += 32;
        v4 += 32;
      }
      while (v8);
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_2489FEB90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[8];
  uint64_t v13;

  if (!a1)
    return 7104878;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_2489C74D8();
    v4 = a1 + 32;
    v3 = v13;
    do
    {
      sub_2489F1114(v4, (uint64_t)v12);
      v5 = CoreRule.Predicate.Query.id.getter();
      v7 = v6;
      sub_2489F1150((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2489C74D8();
        v3 = v13;
      }
      v8 = *(_QWORD *)(v3 + 16);
      if (v8 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_2489C74D8();
        v3 = v13;
      }
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      v4 += 64;
      --v2;
    }
    while (v2);
  }
  v12[0] = v3;
  sub_2489C330C(&qword_254463D60);
  sub_2489C7F68();
  v10 = sub_248A4548C();
  sub_2489BDA70();
  return v10;
}

uint64_t CoreRule.Predicate.Query.id.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v6 = 0x3A794270756F7267;
    v7 = 0xE900000000000020;
    LOBYTE(v9) = *(_BYTE *)v0;
    CoreRule.Predicate.Operator.rawValue.getter();
    sub_248A4557C();
    sub_2489BEC70();
    sub_2489BA510();
    sub_248A453F0();
    sub_248A4557C();
    sub_2489BDA70();
    return 0x3A794270756F7267;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
    v9 = *(_QWORD *)(v0 + 8);
    v10 = v2;
    sub_248A453F0();
    sub_2489BA510();
    LOBYTE(v6) = *(_BYTE *)v0;
    CoreRule.Predicate.Operator.rawValue.getter();
    sub_248A4557C();
    sub_2489BEC70();
    sub_248A4557C();
    sub_2489C7F24(v0 + 32, (uint64_t)&v6, &qword_254464700);
    if (v8)
    {
      v3 = sub_2489CBBC0();
      v5 = v4;
      sub_2489C7218((uint64_t)&v6);
    }
    else
    {
      sub_2489C32D0((uint64_t)&v6, &qword_254464700);
      v3 = 0;
      v5 = 0;
    }
    v6 = v3;
    v7 = v5;
    sub_2489C330C(&qword_254464278);
    sub_248A454F8();
    sub_248A4557C();
    sub_2489BDA70();
    sub_2489BA510();
    return v9;
  }
}

uint64_t sub_2489FEE64@<X0>(char a1@<W0>, char *a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _BYTE v14[32];
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v6 = a1 & 1;
  v7 = *a2;
  v8 = AnyKeyPath.stringValue.getter();
  v10 = v9;
  sub_2489C7F24(a3, (uint64_t)v19, &qword_254464AF0);
  BYTE8(v17) = v6;
  *((_QWORD *)&v16 + 1) = v8;
  *(_QWORD *)&v17 = v10;
  LOBYTE(v16) = v7;
  if (v20)
  {
    sub_2489C7F24((uint64_t)v19, (uint64_t)v14, &qword_254464AF0);
    sub_2489C51E0((uint64_t)v14, v15);
    sub_2489C32D0((uint64_t)v19, &qword_254464AF0);
  }
  else
  {
    sub_2489C32D0((uint64_t)v19, &qword_254464AF0);
    memset(v15, 0, sizeof(v15));
  }
  sub_2489BCDC0((uint64_t)v15, (uint64_t)v18);
  v11 = v17;
  *a4 = v16;
  a4[1] = v11;
  v12 = v18[1];
  a4[2] = v18[0];
  a4[3] = v12;
  swift_release();
  return sub_2489C32D0(a3, &qword_254464AF0);
}

BOOL static CoreRule.Predicate.Query.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  char v7;
  _OWORD v8[2];
  _BYTE v9[32];
  _BYTE v10[24];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[32];
  _BYTE v15[32];

  if ((sub_2489FE0FC(*a1, *a2) & 1) == 0)
    return 0;
  v4 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2);
  if (v4 || (v5 = sub_248A45DBC(), result = 0, (v5 & 1) != 0))
  {
    if (a1[24] == a2[24])
    {
      sub_2489C0A2C((uint64_t)(a1 + 32), (uint64_t)v15);
      sub_2489C0A2C((uint64_t)(a2 + 32), (uint64_t)v14);
      sub_2489C0A2C((uint64_t)v15, (uint64_t)v10);
      sub_2489C0A2C((uint64_t)v14, (uint64_t)&v12);
      if (v11)
      {
        sub_2489C7F24((uint64_t)v10, (uint64_t)v9, &qword_254464700);
        if (*((_QWORD *)&v13 + 1))
        {
          v8[0] = v12;
          v8[1] = v13;
          v7 = sub_2489FE358((uint64_t)v9, (uint64_t)v8, &qword_254463D50, (uint64_t (*)())sub_248A220F8, &qword_254462978, (uint64_t (*)())sub_2489FE8B4);
          sub_2489C7218((uint64_t)v8);
          sub_2489C14A8((uint64_t)v14);
          sub_2489C14A8((uint64_t)v15);
          sub_2489C7218((uint64_t)v9);
          sub_2489C14A8((uint64_t)v10);
          return (v7 & 1) != 0;
        }
        sub_2489C267C((uint64_t)v14);
        sub_2489C267C((uint64_t)v15);
        sub_2489C7218((uint64_t)v9);
      }
      else
      {
        sub_2489C267C((uint64_t)v14);
        sub_2489C267C((uint64_t)v15);
        if (!*((_QWORD *)&v13 + 1))
        {
          sub_2489C32D0((uint64_t)v10, &qword_254464700);
          return 1;
        }
      }
      sub_2489C32D0((uint64_t)v10, &qword_2577A5398);
    }
    return 0;
  }
  return result;
}

uint64_t sub_2489FF110(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7955819 && a2 == 0xE300000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1684957547 && a2 == 0xE400000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_248A45DBC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_2489FF2A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2489FF2D8 + 4 * byte_248A4AB80[a1]))(0x6F6974617265706FLL, 0xE90000000000006ELL);
}

uint64_t sub_2489FF2D8()
{
  return 7955819;
}

uint64_t sub_2489FF2E8()
{
  return 1684957547;
}

uint64_t sub_2489FF2F8()
{
  return 0x65756C6176;
}

uint64_t sub_2489FF30C()
{
  unsigned __int8 *v0;

  return sub_2489FF2A0(*v0);
}

uint64_t sub_2489FF314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489FF110(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489FF338()
{
  sub_2489FF508();
  return sub_248A46074();
}

uint64_t sub_2489FF360()
{
  sub_2489FF508();
  return sub_248A46080();
}

uint64_t CoreRule.Predicate.Query.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2489C330C(&qword_2577A53A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489B6B34();
  sub_2489BE100(a1, a1[3]);
  sub_2489FF508();
  sub_248A46008();
  sub_2489BCF90();
  sub_2489C084C();
  if (!v1)
  {
    sub_248A45D2C();
    sub_2489FF544();
    sub_2489C084C();
    sub_2489BCF54();
    sub_248A45D20();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_2489FF508()
{
  unint64_t result;

  result = qword_2577A53A8;
  if (!qword_2577A53A8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4ADD4, &_s14descr2519BBE51C5QueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A53A8);
  }
  return result;
}

unint64_t sub_2489FF544()
{
  unint64_t result;

  result = qword_2577A53B0;
  if (!qword_2577A53B0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4ADAC, &_s14descr2519BBE51C5QueryV4KindON);
    atomic_store(result, (unint64_t *)&qword_2577A53B0);
  }
  return result;
}

void CoreRule.Predicate.Query.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8[32];
  char v9[8];
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[48];

  v5 = sub_2489C330C(&qword_2577A53B8);
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BA838();
  sub_2489BE100(a1, a1[3]);
  sub_2489FF508();
  sub_248A45FF0();
  if (v2)
  {
    sub_2489BEE70();
  }
  else
  {
    sub_2489BCEA0();
    sub_2489BFDD4();
    v9[0] = v8[0];
    v8[0] = 1;
    v10 = sub_248A45CB4();
    v11 = v7;
    sub_2489FF748();
    sub_2489BFDD4();
    v12 = 1;
    v13[47] = 3;
    sub_2489BCE64();
    sub_248A45CA8();
    sub_2489BFFB0();
    sub_2489BCDC0((uint64_t)v8, (uint64_t)v13);
    sub_2489F1114((uint64_t)v9, a2);
    sub_2489BEE70();
    sub_2489F1150((uint64_t)v9);
  }
  sub_2489BA808();
}

unint64_t sub_2489FF748()
{
  unint64_t result;

  result = qword_2577A53C0;
  if (!qword_2577A53C0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AD84, &_s14descr2519BBE51C5QueryV4KindON);
    atomic_store(result, (unint64_t *)&qword_2577A53C0);
  }
  return result;
}

uint64_t sub_2489FF784(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7265746C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6970756F7267 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2489FF868(char a1)
{
  if ((a1 & 1) != 0)
    return 0x676E6970756F7267;
  else
    return 0x7265746C6966;
}

void sub_2489FF89C(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_2489C330C(&qword_2577A53E8);
  v5 = sub_2489C339C(v4);
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BA838();
  v18 = sub_2489C330C(&qword_2577A53F0);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v8);
  sub_2489BBC7C();
  v11 = v10 - v9;
  v12 = sub_2489C330C(&qword_2577A53F8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_2489BBC7C();
  v17 = v16 - v15;
  sub_2489BE100(a1, a1[3]);
  sub_248A00504();
  sub_248A46008();
  if ((a2 & 1) != 0)
  {
    sub_2489C5058();
    sub_2489C5EF8();
    (*(void (**)(uint64_t))(v19 + 8))(v2);
  }
  else
  {
    sub_248A0057C();
    sub_2489C5EF8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v18);
  }
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
  sub_2489BA808();
}

void sub_2489FFA0C()
{
  sub_248A45F90();
  sub_248A45F9C();
  sub_248A45FD8();
  sub_2489C0648();
}

uint64_t sub_2489FFA48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = sub_2489C330C(&qword_2577A5418);
  v4 = sub_2489C339C(v3);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BBC7C();
  v30 = v7 - v6;
  v29 = sub_2489C330C(&qword_2577A5420);
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v9);
  sub_2489B6B34();
  v10 = sub_2489C330C(&qword_2577A5428);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_2489BBC7C();
  v15 = v14 - v13;
  sub_2489BE100(a1, a1[3]);
  sub_248A00504();
  sub_248A45FF0();
  if (v32)
    return sub_2489BCE44((uint64_t)a1);
  v28 = v11;
  v16 = sub_248A45CE4();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17
    || (v18 = *(unsigned __int8 *)(v16 + 32),
        sub_2489FDAD8(1, v17, v16, v16 + 32, 0, (2 * v17) | 1),
        v20 = v19,
        v22 = v21,
        swift_bridgeObjectRelease(),
        v20 != v22 >> 1))
  {
    v24 = sub_248A45AB0();
    swift_allocError();
    v26 = v25;
    sub_2489C330C(&qword_2577A5370);
    *v26 = &_s14descr2519BBE51C5QueryV4KindON;
    sub_248A45C78();
    sub_248A45AA4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    sub_2489BD8E4();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v15, v10);
    return sub_2489BCE44((uint64_t)a1);
  }
  if ((v18 & 1) != 0)
  {
    sub_2489C5058();
    sub_2489C1B80();
    v23 = v28;
    (*(void (**)(uint64_t))(v31 + 8))(v30);
  }
  else
  {
    sub_248A0057C();
    sub_2489C1B80();
    v23 = v28;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v29);
  }
  sub_2489BD8E4();
  (*(void (**)(uint64_t, unint64_t))(v23 + 8))(v15, v22);
  sub_2489BCE44((uint64_t)a1);
  return v18;
}

void sub_2489FFD5C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  CoreRule.Predicate.Query.init(from:)(a1, a2);
}

uint64_t sub_2489FFD70(_QWORD *a1)
{
  return CoreRule.Predicate.Query.encode(to:)(a1);
}

uint64_t sub_2489FFD88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreRule.Predicate.Query.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2489FFDAC()
{
  sub_2489FFA0C();
}

uint64_t sub_2489FFDC8()
{
  char *v0;

  return sub_2489FF868(*v0);
}

uint64_t sub_2489FFDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2489FF784(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2489FFDF4()
{
  sub_248A00504();
  return sub_248A46074();
}

uint64_t sub_2489FFE1C()
{
  sub_248A00504();
  return sub_248A46080();
}

uint64_t sub_2489FFE44()
{
  sub_248A0057C();
  return sub_248A46074();
}

uint64_t sub_2489FFE6C()
{
  sub_248A0057C();
  return sub_248A46080();
}

uint64_t sub_2489FFE94()
{
  sub_248A00540();
  return sub_248A46074();
}

uint64_t sub_2489FFEBC()
{
  sub_248A00540();
  return sub_248A46080();
}

void sub_2489FFEE4()
{
  sub_248A45F90();
  sub_248A45F9C();
  sub_248A45FD8();
  sub_2489C0648();
}

uint64_t sub_2489FFF1C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2489FFA48(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

void sub_2489FFF48(_QWORD *a1)
{
  char *v1;

  sub_2489FF89C(a1, *v1);
}

void static CoreRule.Predicate.Query.filter<A, B>(operation:keyPath:value:)(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_2489BF634(*a2, v4, v5, v6, v7, v8);
  sub_2489C044C((uint64_t)v2);
  v3 = swift_retain();
  sub_2489BFAC8(v3);
  sub_2489BA8A4();
}

void static CoreRule.Predicate.Query.excluding<A, B>(_:_:)(uint64_t *a1)
{
  sub_2489FFFC4(a1);
}

void static CoreRule.Predicate.Query.matching<A, B>(_:_:)(uint64_t *a1)
{
  sub_2489FFFC4(a1);
}

void sub_2489FFFC4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_2489BF634(*a1, v3, v4, v5, v6, v7);
  sub_2489C044C((uint64_t)v1);
  v2 = swift_retain();
  sub_2489BFAC8(v2);
  sub_2489BA8A4();
}

void static CoreRule.Predicate.Query.largestSubset<A, B>(groupedBy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2489BECD4();
  AnyKeyPath.stringValue.getter();
  sub_2489C069C();
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  *(_BYTE *)v0 = 9;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  sub_2489B6AF4();
}

void static CoreRule.Predicate.Query.smallestSubset<A, B>(groupedBy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2489BECD4();
  AnyKeyPath.stringValue.getter();
  sub_2489C069C();
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  *(_BYTE *)v0 = 10;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  sub_2489B6AF4();
}

uint64_t _s14descr2519BBE51C5QueryVwxx(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    return sub_2489BCE44(a1 + 32);
  return result;
}

uint64_t _s14descr2519BBE51C5QueryVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  sub_248A453F0();
  if (v5)
  {
    *(_QWORD *)(a1 + 56) = v5;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v5 - 8))(a1 + 32, v4, v5);
  }
  else
  {
    v6 = v4[1];
    *(_OWORD *)(a1 + 32) = *v4;
    *(_OWORD *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t _s14descr2519BBE51C5QueryVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v6)
    {
      sub_2489CE9EC((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
    }
    else
    {
      sub_2489C7218(a1 + 32);
      v7 = *(_OWORD *)(a2 + 48);
      *v4 = *v5;
      *(_OWORD *)(a1 + 48) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 56) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 48);
    *v4 = *v5;
    *(_OWORD *)(a1 + 48) = v8;
  }
  return a1;
}

__n128 _s14descr2519BBE51C5QueryVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s14descr2519BBE51C5QueryVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  if (*(_QWORD *)(a1 + 56))
  {
    if (*(_QWORD *)(a2 + 56))
      sub_2489BCE44(a1 + 32);
    else
      sub_2489C7218(a1 + 32);
  }
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t _s14descr2519BBE51C5QueryVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr2519BBE51C5QueryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr2519BBE51C5QueryV4KindOMa()
{
  return &_s14descr2519BBE51C5QueryV4KindON;
}

uint64_t _s14descr2519BBE51C5QueryV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_248A00384 + 4 * byte_248A4AB89[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_248A003B8 + 4 * byte_248A4AB84[v4]))();
}

uint64_t sub_248A003B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A003C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A003C8);
  return result;
}

uint64_t sub_248A003D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A003DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_248A003E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A003E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr2519BBE51C5QueryV10CodingKeysOMa()
{
  return &_s14descr2519BBE51C5QueryV10CodingKeysON;
}

unint64_t sub_248A00408()
{
  unint64_t result;

  result = qword_2577A53C8;
  if (!qword_2577A53C8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4ACF4, &_s14descr2519BBE51C5QueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A53C8);
  }
  return result;
}

unint64_t sub_248A00448()
{
  unint64_t result;

  result = qword_2577A53D0;
  if (!qword_2577A53D0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AD1C, &_s14descr2519BBE51C5QueryV4KindON);
    atomic_store(result, (unint64_t *)&qword_2577A53D0);
  }
  return result;
}

unint64_t sub_248A00488()
{
  unint64_t result;

  result = qword_2577A53D8;
  if (!qword_2577A53D8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AC64, &_s14descr2519BBE51C5QueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A53D8);
  }
  return result;
}

unint64_t sub_248A004C8()
{
  unint64_t result;

  result = qword_2577A53E0;
  if (!qword_2577A53E0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AC8C, &_s14descr2519BBE51C5QueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A53E0);
  }
  return result;
}

unint64_t sub_248A00504()
{
  unint64_t result;

  result = qword_2577A5400;
  if (!qword_2577A5400)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B05C, &_s14descr2519BBE51C5QueryV4KindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5400);
  }
  return result;
}

unint64_t sub_248A00540()
{
  unint64_t result;

  result = qword_2577A5408;
  if (!qword_2577A5408)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B00C, &_s14descr2519BBE51C5QueryV4KindO18GroupingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5408);
  }
  return result;
}

unint64_t sub_248A0057C()
{
  unint64_t result;

  result = qword_2577A5410;
  if (!qword_2577A5410)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AFBC, &_s14descr2519BBE51C5QueryV4KindO16FilterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5410);
  }
  return result;
}

uint64_t _s14descr2519BBE51C5QueryV4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_248A00604 + 4 * byte_248A4AB93[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248A00638 + 4 * byte_248A4AB8E[v4]))();
}

uint64_t sub_248A00638(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A00640(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A00648);
  return result;
}

uint64_t sub_248A00654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A0065CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248A00660(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A00668(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr2519BBE51C5QueryV4KindO10CodingKeysOMa()
{
  return &_s14descr2519BBE51C5QueryV4KindO10CodingKeysON;
}

ValueMetadata *_s14descr2519BBE51C5QueryV4KindO16FilterCodingKeysOMa()
{
  return &_s14descr2519BBE51C5QueryV4KindO16FilterCodingKeysON;
}

ValueMetadata *_s14descr2519BBE51C5QueryV4KindO18GroupingCodingKeysOMa()
{
  return &_s14descr2519BBE51C5QueryV4KindO18GroupingCodingKeysON;
}

unint64_t sub_248A006A8()
{
  unint64_t result;

  result = qword_2577A5430;
  if (!qword_2577A5430)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AF94, &_s14descr2519BBE51C5QueryV4KindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5430);
  }
  return result;
}

unint64_t sub_248A006E8()
{
  unint64_t result;

  result = qword_2577A5438;
  if (!qword_2577A5438)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AEB4, &_s14descr2519BBE51C5QueryV4KindO16FilterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5438);
  }
  return result;
}

unint64_t sub_248A00728()
{
  unint64_t result;

  result = qword_2577A5440;
  if (!qword_2577A5440)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AEDC, &_s14descr2519BBE51C5QueryV4KindO16FilterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5440);
  }
  return result;
}

unint64_t sub_248A00768()
{
  unint64_t result;

  result = qword_2577A5448;
  if (!qword_2577A5448)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AE64, &_s14descr2519BBE51C5QueryV4KindO18GroupingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5448);
  }
  return result;
}

unint64_t sub_248A007A8()
{
  unint64_t result;

  result = qword_2577A5450;
  if (!qword_2577A5450)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AE8C, &_s14descr2519BBE51C5QueryV4KindO18GroupingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5450);
  }
  return result;
}

unint64_t sub_248A007E8()
{
  unint64_t result;

  result = qword_2577A5458;
  if (!qword_2577A5458)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AF04, &_s14descr2519BBE51C5QueryV4KindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5458);
  }
  return result;
}

unint64_t sub_248A00828()
{
  unint64_t result;

  result = qword_2577A5460;
  if (!qword_2577A5460)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4AF2C, &_s14descr2519BBE51C5QueryV4KindO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5460);
  }
  return result;
}

uint64_t static CoreRule.Predicate.Subpredicate.maxAge(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_248A00878(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!a1)
    return 7104878;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_2489C74D8();
    v3 = (_BYTE *)(a1 + 48);
    do
    {
      if ((*v3 & 1) != 0)
      {
        sub_248A45A74();
        swift_bridgeObjectRelease();
        v9 = 0xD000000000000015;
        v10 = 0x8000000248A50160;
      }
      else
      {
        sub_248A45A74();
        swift_bridgeObjectRelease();
        sub_2489C085C();
        v9 = v4;
        v10 = 0xEE00202D20776F6ELL;
      }
      sub_248A46020();
      sub_248A4557C();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v11 + 16);
      if (v5 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_2489C74D8();
      v3 += 24;
      *(_QWORD *)(v11 + 16) = v5 + 1;
      v6 = v11 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v9;
      *(_QWORD *)(v6 + 40) = v10;
      --v2;
    }
    while (v2);
  }
  sub_2489C330C(&qword_254463D60);
  sub_2489EEB7C(&qword_2544629F8, &qword_254463D60);
  v7 = sub_248A4548C();
  sub_2489BDA70();
  return v7;
}

unint64_t CoreRule.Predicate.Subpredicate.id.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v1 = 0xD000000000000015;
  }
  else
  {
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_2489C085C();
  }
  v3 = v1;
  sub_248A46020();
  sub_248A4557C();
  sub_2489BDA70();
  return v3;
}

void sub_248A00B0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_248A44D60();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489C0054();
  v21 = v6;
  v7 = sub_248A44F58();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C330C(&qword_254462FD8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489C0068();
  v14 = sub_2489C330C(&qword_254463B18);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  sub_2489B6B34();
  sub_2489C330C(&qword_254462ED0);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_2489BA838();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v2, a1, v14);
  swift_getKeyPath();
  sub_2489EEB7C((uint64_t *)&qword_254463B10, &qword_254463B18);
  sub_248A44D90();
  _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
  sub_2489C5964();
  sub_2489C5964();
  sub_248A44EEC();
  sub_2489C06AC(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_248A44D84();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v21, *MEMORY[0x24BDCCF48], v23);
  *(_QWORD *)(a2 + 24) = sub_2489C330C(&qword_254462EB8);
  v19 = sub_248A02004();
  sub_2489BFAE0(v19);
  sub_2489EEB7C(&qword_254462EC8, &qword_254462ED0);
  sub_2489EEB7C(&qword_254462FD0, &qword_254462FD8);
  sub_2489BA2D8(&qword_2544640F0);
  sub_2489C6CFC();
  sub_248A44CD0();
  sub_2489BFDF0();
}

void sub_248A00DA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  v36 = a2;
  v37 = a3;
  v35 = a1;
  v7 = sub_248A44D60();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489C0054();
  v44 = v10;
  v43 = sub_2489C330C(&qword_254462FD8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489C0054();
  v42 = v13;
  v14 = sub_2489C330C(&qword_254463B18);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  sub_2489B6B34();
  v41 = sub_2489C330C(&qword_254462ED0);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_2489C0054();
  v38 = v19;
  sub_2489C330C(&qword_254464A98);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_2489C0068();
  v22 = sub_248A44F58();
  v45 = *(_QWORD *)(v22 - 8);
  sub_2489BA7E0();
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v34 - v27;
  if (qword_2544641F8 != -1)
    swift_once();
  v29 = sub_2489C330C(&qword_254464200);
  v30 = sub_2489C401C(v29, (uint64_t)qword_25446C698);
  swift_beginAccess();
  v31 = type metadata accessor for DeviceProfile();
  if (sub_2489BE834(v30, 1, v31))
  {
    sub_2489BE7E0(v5, 1, 1, v22);
  }
  else
  {
    sub_2489E9DA0(v30 + *(int *)(v31 + 32), v5);
    if (sub_2489BE834(v5, 1, v22) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v28, v5, v22);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v4, v35, v14);
      swift_getKeyPath();
      sub_2489EEB7C((uint64_t *)&qword_254463B10, &qword_254463B18);
      sub_248A44D90();
      sub_2489BA518();
      sub_2489BA518();
      sub_248A44EEC();
      sub_248A44D84();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v44, *MEMORY[0x24BDCCF48], v40);
      *(_QWORD *)(a4 + 24) = sub_2489C330C(&qword_254462EB8);
      v33 = sub_248A02004();
      sub_2489BFAE0(v33);
      sub_2489EEB7C(&qword_254462EC8, &qword_254462ED0);
      sub_2489EEB7C(&qword_254462FD0, &qword_254462FD8);
      sub_2489BA2D8(&qword_2544640F0);
      sub_2489C6CFC();
      sub_248A44CD0();
      sub_2489C06AC(*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
      goto LABEL_7;
    }
  }
  sub_248A02178(v5);
  v46 = 0;
  *(_QWORD *)(a4 + 24) = sub_2489C330C(&qword_2577A5480);
  v32 = sub_248A021B8();
  sub_2489BFAE0(v32);
  sub_248A44D84();
LABEL_7:
  sub_2489BFDF0();
}

uint64_t static CoreRule.Predicate.Subpredicate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 16))
      return 0;
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    return 0;
  }
  return sub_248A46050();
}

uint64_t sub_248A011A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65674178616DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6470557265746661 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_248A0129C()
{
  sub_248A45F90();
  sub_248A45F9C();
  return sub_248A45FD8();
}

uint64_t sub_248A012E0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6470557265746661;
  else
    return 0x65674178616DLL;
}

uint64_t sub_248A0131C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_248A45DBC();
    sub_2489BDA70();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_248A0139C()
{
  return 0x6E6F697461727564;
}

uint64_t sub_248A013B8()
{
  sub_248A01730();
  return sub_248A46074();
}

uint64_t sub_248A013E0()
{
  sub_248A01730();
  return sub_248A46080();
}

uint64_t sub_248A01408()
{
  return sub_248A0129C();
}

uint64_t sub_248A01410()
{
  char *v0;

  return sub_248A012E0(*v0);
}

uint64_t sub_248A01418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A011A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A0143C()
{
  sub_248A016F4();
  return sub_248A46074();
}

uint64_t sub_248A01464()
{
  sub_248A016F4();
  return sub_248A46080();
}

uint64_t sub_248A0148C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A0131C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_248A014B4()
{
  sub_248A0176C();
  return sub_248A46074();
}

uint64_t sub_248A014DC()
{
  sub_248A0176C();
  return sub_248A46080();
}

void CoreRule.Predicate.Subpredicate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_2489C330C(&qword_254462AC0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BA838();
  v7 = sub_2489C330C(&qword_254462AB8);
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489BBC7C();
  v12 = v11 - v10;
  v13 = sub_2489C330C(&qword_254462AB0);
  v24 = *(_QWORD *)(v13 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489BBC7C();
  v18 = v17 - v16;
  v19 = *(_BYTE *)(v1 + 16);
  sub_2489BE100(a1, a1[3]);
  sub_248A016F4();
  sub_248A46008();
  if ((v19 & 1) != 0)
  {
    sub_2489C6C04();
    sub_2489C0460();
    sub_248A45D50();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v2, v23);
  }
  else
  {
    sub_248A0176C();
    sub_2489C0460();
    sub_248A45D50();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v12, v21);
  }
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v18, v13);
  sub_2489BA808();
}

unint64_t sub_248A016F4()
{
  unint64_t result;

  result = qword_254462EF0;
  if (!qword_254462EF0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B4B0, &_s14descr2519BBF29C12SubpredicateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462EF0);
  }
  return result;
}

unint64_t sub_248A01730()
{
  unint64_t result;

  result = qword_254462F18;
  if (!qword_254462F18)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B460, &_s14descr2519BBF29C12SubpredicateO21AfterUpdateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462F18);
  }
  return result;
}

unint64_t sub_248A0176C()
{
  unint64_t result;

  result = qword_254462600;
  if (!qword_254462600)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B410, &_s14descr2519BBF29C12SubpredicateO16MaxAgeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462600);
  }
  return result;
}

void CoreRule.Predicate.Subpredicate.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v31 = *(_QWORD *)(sub_2489C330C(&qword_254462F40) - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489C0054();
  v30 = sub_2489C330C(&qword_254462F38);
  v5 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v6);
  sub_2489C0068();
  v7 = sub_2489C330C(&qword_254462F30);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_2489BBC7C();
  v12 = v11 - v10;
  sub_2489BE100(a1, a1[3]);
  sub_248A016F4();
  sub_248A45FF0();
  if (v33)
    goto LABEL_9;
  v28 = a1;
  v34 = v8;
  v13 = sub_248A45CE4();
  v14 = *(_QWORD *)(v13 + 16);
  v15 = v7;
  if (!v14)
  {
LABEL_8:
    v21 = sub_248A45AB0();
    swift_allocError();
    v23 = v22;
    sub_2489C330C(&qword_2577A5370);
    *v23 = &type metadata for CoreRule.Predicate.Subpredicate;
    sub_248A45C78();
    sub_248A45AA4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v15);
    a1 = v28;
LABEL_9:
    v24 = (uint64_t)a1;
    goto LABEL_10;
  }
  v16 = *(_BYTE *)(v13 + 32);
  sub_2489FDAD8(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v18 != v20 >> 1)
  {
    v15 = v7;
    goto LABEL_8;
  }
  if ((v16 & 1) != 0)
  {
    sub_2489C6C04();
    sub_248A45C6C();
    sub_2489C1B98();
    sub_2489C2410(v31);
    sub_2489C15C4();
    v25 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v26 = v12;
    v27 = v7;
  }
  else
  {
    LOBYTE(v32) = 0;
    sub_248A0176C();
    sub_248A45C6C();
    sub_2489C1B98();
    sub_2489C2410(v5);
    sub_2489C15C4();
    v26 = sub_2489C5120();
  }
  v25(v26, v27);
  v24 = (uint64_t)v28;
  *(_OWORD *)a2 = v32;
  *(_BYTE *)(a2 + 16) = v16;
LABEL_10:
  sub_2489BCE44(v24);
  sub_2489BA808();
}

void sub_248A01B58(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  CoreRule.Predicate.Subpredicate.init(from:)(a1, a2);
}

void sub_248A01B6C(_QWORD *a1)
{
  CoreRule.Predicate.Subpredicate.encode(to:)(a1);
}

unint64_t sub_248A01B84@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = CoreRule.Predicate.Subpredicate.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s14descr2519BBF29C12SubpredicateOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr2519BBF29C12SubpredicateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_248A01C2C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_248A01C34(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

uint64_t _s14descr2519BBF29C12SubpredicateO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_248A01C8C + 4 * byte_248A4B0C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248A01CC0 + 4 * byte_248A4B0C0[v4]))();
}

uint64_t sub_248A01CC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A01CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A01CD0);
  return result;
}

uint64_t sub_248A01CDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A01CE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248A01CE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A01CF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr2519BBF29C12SubpredicateO10CodingKeysOMa()
{
  return &_s14descr2519BBF29C12SubpredicateO10CodingKeysON;
}

ValueMetadata *_s14descr2519BBF29C12SubpredicateO16MaxAgeCodingKeysOMa()
{
  return &_s14descr2519BBF29C12SubpredicateO16MaxAgeCodingKeysON;
}

uint64_t _s14descr2519BBF29C12SubpredicateO16MaxAgeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_248A01D60 + 4 * byte_248A4B0CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_248A01D80 + 4 * byte_248A4B0CF[v4]))();
}

_BYTE *sub_248A01D60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_248A01D80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248A01D88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248A01D90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_248A01D98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_248A01DA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14descr2519BBF29C12SubpredicateO21AfterUpdateCodingKeysOMa()
{
  return &_s14descr2519BBF29C12SubpredicateO21AfterUpdateCodingKeysON;
}

unint64_t sub_248A01DC0()
{
  unint64_t result;

  result = qword_2577A5468;
  if (!qword_2577A5468)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B278, &_s14descr2519BBF29C12SubpredicateO21AfterUpdateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5468);
  }
  return result;
}

unint64_t sub_248A01E00()
{
  unint64_t result;

  result = qword_2577A5470;
  if (!qword_2577A5470)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B330, &_s14descr2519BBF29C12SubpredicateO16MaxAgeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5470);
  }
  return result;
}

unint64_t sub_248A01E40()
{
  unint64_t result;

  result = qword_2577A5478;
  if (!qword_2577A5478)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B3E8, &_s14descr2519BBF29C12SubpredicateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5478);
  }
  return result;
}

unint64_t sub_248A01E80()
{
  unint64_t result;

  result = qword_254462F10;
  if (!qword_254462F10)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B2A0, &_s14descr2519BBF29C12SubpredicateO16MaxAgeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462F10);
  }
  return result;
}

unint64_t sub_248A01EC0()
{
  unint64_t result;

  result = qword_254462F08;
  if (!qword_254462F08)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B2C8, &_s14descr2519BBF29C12SubpredicateO16MaxAgeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462F08);
  }
  return result;
}

unint64_t sub_248A01F00()
{
  unint64_t result;

  result = qword_254462F28;
  if (!qword_254462F28)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B1E8, &_s14descr2519BBF29C12SubpredicateO21AfterUpdateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462F28);
  }
  return result;
}

unint64_t sub_248A01F40()
{
  unint64_t result;

  result = qword_254462F20;
  if (!qword_254462F20)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B210, &_s14descr2519BBF29C12SubpredicateO21AfterUpdateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462F20);
  }
  return result;
}

unint64_t sub_248A01F80()
{
  unint64_t result;

  result = qword_254462F00;
  if (!qword_254462F00)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B358, &_s14descr2519BBF29C12SubpredicateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462F00);
  }
  return result;
}

unint64_t sub_248A01FC0()
{
  unint64_t result;

  result = qword_254462EF8;
  if (!qword_254462EF8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4B380, &_s14descr2519BBF29C12SubpredicateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462EF8);
  }
  return result;
}

unint64_t sub_248A02004()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254462EB0;
  if (!qword_254462EB0)
  {
    v1 = sub_2489BCD7C(&qword_254462EB8);
    v2[0] = sub_248A02070();
    v2[1] = sub_248A020EC();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCCCD8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254462EB0);
  }
  return result;
}

unint64_t sub_248A02070()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254462EC0;
  if (!qword_254462EC0)
  {
    v1 = sub_2489BCD7C(&qword_254462ED0);
    v2 = sub_2489EEB7C((uint64_t *)&qword_254463B08, &qword_254463B18);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254462EC0);
  }
  return result;
}

unint64_t sub_248A020EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254462FC8;
  if (!qword_254462FC8)
  {
    v1 = sub_2489BCD7C(&qword_254462FD8);
    v2[0] = sub_2489BA2D8((uint64_t *)&qword_2544640F8);
    v2[1] = sub_2489BA2D8((uint64_t *)&qword_2544643D0);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254462FC8);
  }
  return result;
}

uint64_t sub_248A02178(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2489C330C(&qword_254464A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_248A021B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2577A5488;
  if (!qword_2577A5488)
  {
    v1 = sub_2489BCD7C(&qword_2577A5480);
    v2[0] = MEMORY[0x24BEE1348];
    v2[1] = MEMORY[0x24BEE1330];
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2577A5488);
  }
  return result;
}

uint64_t static CoreRuleProtocol.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  v7 = v6(a3, a4);
  v9 = v8;
  if (v7 == v6(a3, a4) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_248A45DBC();
  sub_2489BDA70();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_248A022D0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_248A0239C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (v3 = a1 + 40 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_248A45C48();
    __break(1u);
  }
  else
  {
    sub_2489C330C(&qword_2544625F0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_248A0248C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    sub_2489C1A3C();
    sub_2489BFE0C();
  }
  else
  {
    if (a3 + 80 * a2 <= a1 || a1 + 80 * a2 <= a3)
      return sub_2489C15CC();
    sub_2489C1A3C();
    sub_2489C2734();
  }
  result = sub_2489C2420();
  __break(1u);
  return result;
}

uint64_t sub_248A02528(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    sub_2489C1A3C();
    sub_2489BFE0C();
  }
  else
  {
    if (a3 + (a2 << 6) <= a1 || a1 + (a2 << 6) <= a3)
      return sub_2489C15CC();
    sub_2489C1A3C();
    sub_2489C2734();
  }
  result = sub_2489C2420();
  __break(1u);
  return result;
}

uint64_t sub_248A025C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_248A025CC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDEAB90]);
}

uint64_t sub_248A025CC(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_2489C1A3C();
    sub_2489BFE0C();
  }
  else
  {
    v6 = *(_QWORD *)(*(_QWORD *)(a4(0) - 8) + 72) * a2;
    v7 = a3 + v6;
    v8 = a1 + v6;
    if (v7 <= a1 || v8 <= a3)
      return swift_arrayInitWithCopy();
    sub_2489C1A3C();
    sub_2489C2734();
  }
  result = sub_2489C2420();
  __break(1u);
  return result;
}

void *sub_248A02690(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_248A02754(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_248A02820(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (v3 = a1 + 8 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_248A45C48();
    __break(1u);
  }
  else
  {
    sub_2489C330C(&qword_254463FC0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void sub_248A0290C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489B6C88();
  *v0 = v1;
}

uint64_t dispatch thunk of CoreRuleProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoreRuleProtocol.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoreRuleProtocol.subject.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoreRuleProtocol.predicate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoreRuleProtocol.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

size_t sub_248A02968(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_248A02A44(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_248A02984(_QWORD *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  _QWORD *result;

  result = sub_248A02B90(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_248A029A0(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_248A02C78(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_248A029BC(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_248A02D58(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_248A029D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489C750C();
  *v0 = v1;
}

char *sub_248A02A0C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_248A02E2C(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_248A02A28()
{
  sub_2489C750C();
}

size_t sub_248A02A44(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2489C330C(&qword_254462AF8);
  v10 = *(_QWORD *)(type metadata accessor for CoreTip.ConstellationAction() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CoreTip.ConstellationAction() - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (unint64_t)v13 + v16;
  v18 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_2489EDB14(v18, v8, v17);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_248A025CC(v18, v8, v17, (uint64_t (*)(_QWORD))type metadata accessor for CoreTip.ConstellationAction);
  }
  swift_release();
  return (size_t)v13;
}

_QWORD *sub_248A02B90(_QWORD *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2489C330C(&qword_254462AE0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    sub_2489EDB20(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_248A0239C(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_248A02C78(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2489C330C(&qword_2577A5208);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2489EDBAC(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_248A02528((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_248A02D58(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2489C330C(&qword_254462F50);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2489EDCEC(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_248A02690(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_248A02E2C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2489C330C(&qword_254463FC8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2489EDE14(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_248A02820((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

unint64_t CoreRule.Status.init(rawValue:)(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

uint64_t CoreRule.Status.init(_:)(char a1)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 1;
}

uint64_t CoreRule.Status.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_248A02F38()
{
  unint64_t result;

  result = qword_2577A54A0;
  if (!qword_2577A54A0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRule.Status, &type metadata for CoreRule.Status);
    atomic_store(result, &qword_2577A54A0);
  }
  return result;
}

unint64_t sub_248A02F74@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = CoreRule.Status.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_248A02F9C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = CoreRule.Status.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t _s6StatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248A03010 + 4 * byte_248A4B559[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_248A03044 + 4 * asc_248A4B554[v4]))();
}

uint64_t sub_248A03044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0304C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A03054);
  return result;
}

uint64_t sub_248A03060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A03068);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_248A0306C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A03074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Status()
{
  return &type metadata for CoreRule.Status;
}

uint64_t dispatch thunk of RuleSubject.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static RuleSubject.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t CoreRule.Subrules.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_248A453F0();
  return v1;
}

uint64_t CoreRule.Subrules.rules.getter()
{
  return sub_248A453F0();
}

void static CoreRule.Subrules.category.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_248A030E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreRule.Subrules.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_248A0310C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_248A0314C()
{
  sub_248A4557C();
  return swift_bridgeObjectRelease();
}

uint64_t CoreRuleRecord.id.getter()
{
  uint64_t v0;

  sub_248A065A0();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B0);
  sub_248A44FD0();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B8);
  sub_248A451F8();
  sub_2489BEC4C();
  return v0;
}

void sub_248A03284()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_248A065F0();
  v0[1] = v1;
  sub_2489BA7D0();
}

void sub_248A032A0()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_248A065F0();
  v0[1] = v1;
  sub_2489BA7D0();
}

void sub_248A032BC()
{
  sub_248A453F0();
  CoreRuleRecord.id.setter();
  sub_2489B6AF4();
}

uint64_t CoreRuleRecord.id.setter()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489C6104();
  sub_2489BA4B8();
  return sub_2489BDA70();
}

uint64_t sub_248A033A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  sub_2489C4880(a3, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_248A45048();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2489BCE44((uint64_t)v4);
}

uint64_t sub_248A0344C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A45210();
  return swift_release();
}

uint64_t sub_248A034E4()
{
  return sub_248A0344C();
}

void CoreRuleRecord.id.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = CoreRuleRecord.id.getter();
  a1[1] = v3;
  sub_2489BA7D0();
}

void sub_248A03530(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_248A453F0();
    sub_248A06608();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_248A06608();
    sub_2489B6AF4();
  }
}

uint64_t CoreRuleRecord.dateCreated.getter()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489B6B4C();
  sub_248A065C4(&qword_2544645B0);
  sub_248A0655C();
  sub_2489BA4B8();
  sub_2489B6B4C();
  sub_248A065C4(&qword_2544645B8);
  sub_2489F6410(&qword_2544640F8, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A451F8();
  return sub_2489BA87C();
}

void sub_248A03644()
{
  CoreRuleRecord.dateCreated.getter();
  sub_2489BA7D0();
}

void sub_248A03660()
{
  CoreRuleRecord.dateCreated.getter();
  sub_2489BA7D0();
}

void sub_248A0367C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_2489BBC7C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5 - v4, a1);
  CoreRuleRecord.dateCreated.setter();
  sub_2489B6AF4();
}

void CoreRuleRecord.dateCreated.setter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  v0 = sub_2489BA858();
  sub_2489BF7BC(v0);
  sub_2489BA8A4();
}

uint64_t sub_248A03774(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[4];

  sub_2489C4880(a2, (uint64_t)v5);
  sub_2489BE100(v5, v5[3]);
  swift_getKeyPath();
  v3 = sub_248A44F58();
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45048();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return sub_2489BCE44((uint64_t)v5);
}

uint64_t sub_248A03844()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45210();
  return swift_release();
}

uint64_t sub_248A038E8()
{
  return sub_248A03844();
}

void CoreRuleRecord.dateCreated.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2489BA858();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  CoreRuleRecord.dateCreated.getter();
  sub_2489B6AF4();
}

void sub_248A03974(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    CoreRuleRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreRuleRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

void CoreRuleRecord.predicate.getter()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B0);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B8);
  sub_2489C61A0();
  sub_2489BEC4C();
  sub_2489BA868();
}

void sub_248A03A88(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CoreRuleRecord.predicate.getter();
  *a1 = v2;
}

void sub_248A03AB0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489C9430();
  CoreRuleRecord.predicate.getter();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A03AD0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  CoreRuleRecord.predicate.setter(v1);
}

void CoreRuleRecord.predicate.setter(void *a1)
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489BFD2C();
  sub_2489BA87C();

  sub_2489BA8A4();
}

uint64_t sub_248A03B84@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  _QWORD v6[4];

  sub_2489C4880(a2, (uint64_t)v6);
  sub_2489BE100(v6, v6[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544641C8);
  sub_248A45030();
  swift_release();

  result = sub_2489BCE44((uint64_t)v6);
  *a3 = 0;
  return result;
}

uint64_t sub_248A03C30()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A451B0();
  return swift_release();
}

uint64_t sub_248A03CB4()
{
  return sub_248A03C30();
}

void CoreRuleRecord.predicate.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  CoreRuleRecord.predicate.getter();
  *a1 = v3;
  sub_2489BA7D0();
}

void sub_248A03CFC(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    CoreRuleRecord.predicate.setter(v2);

  }
  else
  {
    CoreRuleRecord.predicate.setter(*a1);
  }
}

uint64_t CoreRuleRecord.isDirty.getter()
{
  uint64_t v0;

  sub_2489BFA10();
  return *(unsigned __int8 *)(v0 + 17);
}

void CoreRuleRecord.isDirty.setter(char a1)
{
  uint64_t v1;

  sub_2489BFA10();
  *(_BYTE *)(v1 + 17) = a1;
  sub_2489B7208();
}

void CoreRuleRecord.isDirty.modify()
{
  sub_2489C09C0();
  sub_2489BA7D0();
}

uint64_t sub_248A03DDC()
{
  return sub_248A04188((uint64_t)&unk_248A4B738, &qword_2544646D0);
}

void sub_248A03E00(uint64_t a1)
{
  sub_248A03F84(a1, (uint64_t)&unk_248A4B738, (uint64_t)sub_248A064F8, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_248A03E1C@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2489C4880(a1, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A45054();
  swift_release();
  swift_release();
  result = sub_2489BCE44((uint64_t)v4);
  *a2 = 0;
  return result;
}

void sub_248A03EE8()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B0);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B8);
  sub_248A451E0();
  sub_2489BEC4C();
  sub_2489BA868();
}

void sub_248A03F84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_248A06614();
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489C6104();
  swift_release();
  a4(a1);
  sub_2489C6C10();
}

uint64_t sub_248A0401C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A4521C();
  return swift_release();
}

uint64_t sub_248A04098@<X0>(uint64_t a1@<X1>, void (*a2)(_QWORD)@<X4>, _QWORD *a3@<X5>, _BYTE *a4@<X8>)
{
  uint64_t result;
  _QWORD v8[4];

  sub_2489C4880(a1, (uint64_t)v8);
  sub_2489BE100(v8, v8[3]);
  sub_2489B6B4C();
  a2(0);
  sub_248A065D8(a3);
  sub_248A45054();
  sub_2489BA87C();
  sub_2489BA4B8();
  result = sub_2489BCE44((uint64_t)v8);
  *a4 = 0;
  return result;
}

uint64_t sub_248A04164()
{
  return sub_248A04188((uint64_t)&unk_248A4B788, &qword_254464678);
}

uint64_t sub_248A04188(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;

  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A44FD0();
  swift_release();
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A065D8(a2);
  v3 = sub_248A451E0();
  sub_2489BA4B8();
  return v3;
}

void sub_248A04274(uint64_t *a1@<X8>)
{
  *a1 = sub_248A04164();
  sub_2489BA7D0();
}

void sub_248A04298()
{
  uint64_t v0;

  v0 = sub_2489C5970();
  sub_248A03F84(v0, (uint64_t)&unk_248A4B788, (uint64_t)sub_248A064C0, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
  sub_2489BA7D0();
}

void sub_248A042CC(uint64_t a1)
{
  sub_248A03F84(a1, (uint64_t)&unk_248A4B788, (uint64_t)sub_248A064C0, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_248A042E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t))
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489F6410(a4, a5);
  sub_248A4521C();
  return swift_release();
}

uint64_t sub_248A04390()
{
  return sub_248A04188((uint64_t)&unk_248A4B7D8, &qword_2544645F8);
}

void sub_248A043B4(uint64_t *a1@<X8>)
{
  *a1 = sub_248A04390();
  sub_2489BA7D0();
}

void sub_248A043D8()
{
  uint64_t v0;

  v0 = sub_2489C5970();
  sub_248A03F84(v0, (uint64_t)&unk_248A4B7D8, (uint64_t)sub_248A06488, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
  sub_2489BA7D0();
}

void sub_248A0440C(uint64_t a1)
{
  sub_248A03F84(a1, (uint64_t)&unk_248A4B7D8, (uint64_t)sub_248A06488, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_248A04428@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2489C4880(a1, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544642A8);
  sub_2489F4510();
  sub_248A4503C();
  swift_release();
  swift_bridgeObjectRelease();
  result = sub_2489BCE44((uint64_t)v4);
  *a2 = 0;
  return result;
}

void sub_248A044F4()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489B6B4C();
  sub_248A065C4(&qword_2544645B0);
  sub_248A0655C();
  sub_2489BA4B8();
  sub_2489B6B4C();
  sub_248A065C4(&qword_2544645B8);
  sub_2489F4510();
  sub_248A451EC();
  sub_2489BA87C();
  sub_2489BA868();
}

void sub_248A045A0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_248A065FC();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A045BC()
{
  uint64_t v0;

  v0 = sub_248A453F0();
  sub_248A03F84(v0, (uint64_t)&unk_248A4B828, (uint64_t)sub_248A06434, (void (*)(uint64_t))MEMORY[0x24BEE4BC0]);
  sub_2489BA7D0();
}

void sub_248A045F8(uint64_t a1)
{
  sub_248A03F84(a1, (uint64_t)&unk_248A4B828, (uint64_t)sub_248A06434, (void (*)(uint64_t))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_248A04614()
{
  swift_getKeyPath();
  type metadata accessor for CoreRuleRecord();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489F4510();
  sub_248A45204();
  return swift_release();
}

uint64_t sub_248A046B4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  sub_2489C4880(a2, (uint64_t)v3);
  sub_2489BE100(v3, v3[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544643D8);
  sub_248A45030();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2489BCE44((uint64_t)v3);
}

void sub_248A0475C()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B0);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544645B8);
  sub_2489C61A0();
  sub_2489BEC4C();
  sub_2489BA868();
}

void sub_248A047E4()
{
  sub_248A453F0();
  sub_248A0480C();
}

void sub_248A0480C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  sub_2489BDA70();
  sub_2489BA8A4();
}

uint64_t sub_248A04890()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A451B0();
  return swift_release();
}

void sub_248A04914()
{
  sub_248A0492C();
}

void CoreRuleRecord.statusValue.getter()
{
  sub_248A0492C();
}

void sub_248A0492C()
{
  sub_248A065A0();
  swift_getKeyPath();
  sub_2489BA4CC(&qword_2544645B0);
  sub_2489BF5CC();
  sub_2489BA87C();
  swift_getKeyPath();
  sub_2489BA4CC(&qword_2544645B8);
  sub_248A451F8();
  sub_2489B6B20();
  sub_2489C4F7C();
}

void sub_248A049DC(_WORD *a1@<X8>)
{
  __int16 v2;

  CoreRuleRecord.statusValue.getter();
  *a1 = v2;
}

void sub_248A04A04()
{
  _WORD *v0;
  __int16 v1;

  sub_2489C9430();
  CoreRuleRecord.statusValue.getter();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A04A24()
{
  CoreRuleRecord.statusValue.setter();
}

void sub_248A04A48()
{
  CoreRuleRecord.statusValue.setter();
  sub_2489BA7D0();
}

void CoreRuleRecord.statusValue.setter()
{
  sub_248A04A7C();
}

void sub_248A04A7C()
{
  sub_248A06614();
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_2489C6104();
  sub_2489BA4B8();
  sub_2489C6C10();
}

void sub_248A04B08(uint64_t a1, uint64_t a2)
{
  _QWORD v2[4];

  sub_2489C4880(a2, (uint64_t)v2);
  sub_2489BE100(v2, v2[3]);
  swift_getKeyPath();
  sub_248A45048();
  sub_2489B6B20();
  sub_2489BCE44((uint64_t)v2);
  sub_2489C6C10();
}

uint64_t sub_248A04B98()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A45210();
  return swift_release();
}

uint64_t sub_248A04C20()
{
  return sub_248A04B98();
}

void CoreRuleRecord.statusValue.modify(uint64_t a1)
{
  uint64_t v1;
  __int16 v3;

  *(_QWORD *)a1 = v1;
  CoreRuleRecord.statusValue.getter();
  *(_WORD *)(a1 + 8) = v3;
  sub_2489BA7D0();
}

void sub_248A04C74()
{
  CoreRuleRecord.statusValue.setter();
  sub_2489BA7D0();
}

void CoreRuleRecord.status.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  CoreRuleRecord.status.getter();
  *(_BYTE *)(a1 + 8) = v3;
  sub_2489BA7D0();
}

void sub_248A04CC4()
{
  CoreRuleRecord.status.setter();
  sub_2489BA7D0();
}

uint64_t CoreRuleRecord.description.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  unint64_t v4;

  v3 = 0;
  v4 = 0xE000000000000000;
  sub_248A45A74();
  sub_248A4557C();
  sub_2489BE8C0(&v2);
  sub_248A0310C(v2);
  sub_248A4557C();
  sub_2489B5F08();
  if (v0)
  {
    CoreTipRecord.id.getter();
    swift_release();
  }
  sub_248A4557C();
  sub_2489BDA70();
  sub_248A4557C();
  return v3;
}

uint64_t CoreRuleRecord.__allocating_init(id:predicate:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;

  v6 = sub_2489B6B08();
  CoreRuleRecord.init(id:predicate:)(a1, a2, a3);
  return v6;
}

uint64_t CoreRuleRecord.init(id:predicate:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v5 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  *(_QWORD *)(v3 + 48) = sub_2489C330C(&qword_254464258);
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  *(_QWORD *)(v3 + 56) = swift_getOpaqueTypeConformance2();
  sub_2489EBF34((uint64_t *)(v3 + 24));
  sub_248A4518C();
  sub_248A033A4(0, 0xE000000000000000, v3 + 24);
  sub_248A44F4C();
  sub_248A065CC();
  sub_248A03774(v7, v8);
  sub_248A065CC();
  sub_248A03B84(v9, v10, v11);
  *(_BYTE *)(v3 + 17) = 0;
  sub_2489BD8EC((void (*)(_QWORD))type metadata accessor for CoreTipRecord, &qword_2544646D0, (_BYTE *)(v3 + 18));
  sub_248A065CC();
  sub_248A03E1C(v12, v13);
  sub_2489BD8EC((void (*)(_QWORD))type metadata accessor for CoreParameterRecord, &qword_254464678, (_BYTE *)(v3 + 20));
  sub_2489BD8EC((void (*)(_QWORD))type metadata accessor for CoreEventRecord, &qword_2544645F8, (_BYTE *)(v3 + 21));
  sub_248A065CC();
  sub_248A04428(v14, v15);
  sub_2489C330C(&qword_2544643C0);
  sub_248A453C0();
  sub_248A065CC();
  sub_248A046B4(v16, v17);
  sub_248A06548(0, v3 + 24);
  sub_248A06548(0, v3 + 24);
  sub_248A44FDC();
  CoreRuleRecord.id.setter();
  v18 = a3;
  CoreRuleRecord.predicate.setter(a3);

  return v3;
}

void CoreRuleRecord.update(tip:parent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    v3 = swift_retain();
    sub_248A06598(v3, (uint64_t)&unk_248A4B738, (uint64_t)sub_248A064F8);
    sub_248A06598(0, (uint64_t)&unk_248A4B760, (uint64_t)sub_248A06530);
  }
  if (a2)
  {
    v4 = swift_retain();
    sub_248A06598(v4, (uint64_t)&unk_248A4B760, (uint64_t)sub_248A06530);
    sub_248A06598(0, (uint64_t)&unk_248A4B738, (uint64_t)sub_248A064F8);
  }
  sub_2489B6AF4();
}

void CoreRuleRecord.persistentBackingData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2489BFA10();
  sub_2489C4880(v1 + 24, a1);
  sub_2489B7208();
}

void sub_248A05150(uint64_t a1)
{
  __int128 v1[2];

  sub_2489C4880(a1, (uint64_t)v1);
  CoreRuleRecord.persistentBackingData.setter(v1);
}

void CoreRuleRecord.persistentBackingData.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 24;
  sub_2489C09C0();
  sub_2489BCE44(v3);
  sub_2489B8F74(a1, v3);
  swift_endAccess();
  sub_2489B7208();
}

void CoreRuleRecord.persistentBackingData.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  sub_2489BFA10();
  sub_2489C4880(v1 + 24, (uint64_t)v3);
  sub_2489B6AF4();
}

uint64_t static CoreRuleRecord.schemaMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t KeyPath;
  __n128 *v31;
  uint64_t v32;
  __n128 *v33;
  uint64_t v34;
  __n128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD);
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;

  v46 = sub_248A45330();
  v0 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v1);
  sub_2489BBC7C();
  v42 = v3 - v2;
  v49 = sub_248A452F4();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49, v4);
  sub_2489BBC7C();
  v7 = v6 - v5;
  sub_2489C330C(&qword_2544647F8);
  v8 = *(_QWORD *)(v0 + 72);
  v45 = v0;
  v9 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_248A4BB00;
  v43 = v10;
  v44 = v9;
  swift_getKeyPath();
  *(_QWORD *)&v51 = 0;
  *((_QWORD *)&v51 + 1) = 0xE000000000000000;
  sub_248A45378();
  v11 = (void (*)(uint64_t))MEMORY[0x24BDEAC08];
  sub_2489BED94();
  sub_2489BFFEC();
  sub_2489F6410(&qword_2544647B8, v11);
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v52 + 1) = sub_2489BA858();
  sub_2489EBF34((uint64_t *)&v51);
  sub_248A44F4C();
  sub_2489BF610();
  v12 = sub_2489BFFEC();
  sub_2489C26B0(v12);
  sub_248A45324();
  swift_getKeyPath();
  v51 = 0u;
  v52 = 0u;
  sub_2489C330C(&qword_254464800);
  sub_248A4536C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A47480;
  sub_2489C330C(&qword_2544647A0);
  sub_248A45360();
  sub_2489BF610();
  v13 = sub_2489C0B94();
  sub_2489C26B0(v13);
  sub_248A45324();
  swift_getKeyPath();
  v51 = 0u;
  v52 = 0u;
  v14 = *MEMORY[0x24BDEAB58];
  v48 = *(void (**)(_QWORD))(v47 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v48)(v7, *MEMORY[0x24BDEAB58], v49);
  sub_248A45300();
  sub_2489BED94();
  sub_2489C5134();
  sub_2489BA4CC(&qword_2544647B0);
  sub_248A0656C();
  swift_getKeyPath();
  v15 = sub_248A06580();
  v48(v15);
  sub_2489C0480();
  v16 = sub_2489C5134();
  sub_2489B7244(v16);
  sub_248A0656C();
  swift_getKeyPath();
  v17 = sub_248A06580();
  v48(v17);
  swift_getKeyPath();
  sub_2489C0480();
  sub_2489C4F68();
  sub_2489C15E4();
  sub_248A06620();
  sub_248A0656C();
  swift_getKeyPath();
  v51 = 0u;
  v52 = 0u;
  ((void (*)(uint64_t, _QWORD, uint64_t))v48)(v7, v14, v49);
  swift_getKeyPath();
  sub_2489C0480();
  sub_2489C4F68();
  v18 = MEMORY[0x24BEE4AF8];
  v19 = sub_2489C15E4();
  sub_2489B7244(v19);
  sub_248A0656C();
  swift_getKeyPath();
  *((_QWORD *)&v52 + 1) = sub_2489C330C(&qword_2544647C8);
  *(_QWORD *)&v51 = v18;
  ((void (*)(uint64_t, _QWORD, uint64_t))v48)(v7, *MEMORY[0x24BDEAB50], v49);
  swift_getKeyPath();
  sub_2489C0480();
  sub_2489C4F68();
  v50 = sub_2489C15E4();
  sub_248A45324();
  swift_getKeyPath();
  v20 = sub_248A453C0();
  *((_QWORD *)&v52 + 1) = sub_2489C330C(&qword_2544647C0);
  *(_QWORD *)&v51 = v20;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A47480;
  type metadata accessor for RawDictionaryTransformer();
  sub_248A45360();
  sub_2489BF610();
  v21 = sub_2489C0B94();
  sub_2489C26B0(v21);
  sub_248A45324();
  swift_getKeyPath();
  v22 = MEMORY[0x24BEE1768];
  *((_QWORD *)&v52 + 1) = MEMORY[0x24BEE1768];
  *(_QWORD *)&v51 = 0;
  sub_2489BF610();
  v23 = sub_2489BFFEC();
  sub_2489C26B0(v23);
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v52 + 1) = v22;
  *(_QWORD *)&v51 = 0;
  sub_2489BF610();
  v24 = sub_2489BFFEC();
  sub_2489C26B0(v24);
  sub_248A45324();
  swift_getKeyPath();
  v51 = 0u;
  v52 = 0u;
  sub_2489C330C(&qword_2544648E8);
  v25 = *(_QWORD *)(sub_2489C330C(&qword_254464870) - 8);
  v26 = *(_QWORD *)(v25 + 72);
  v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_248A496D0;
  v29 = (uint64_t *)(v28 + v27);
  sub_2489C330C(&qword_254464818);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A49100;
  KeyPath = swift_getKeyPath();
  sub_2489BA8D8(KeyPath);
  *v29 = v50;
  sub_2489C6D10((uint64_t)v29);
  v31 = (__n128 *)sub_2489C5064();
  sub_248A065B4(v31);
  v32 = swift_getKeyPath();
  sub_2489BA8D8(v32);
  *(uint64_t *)((char *)v29 + v26) = v50;
  sub_2489C6D10((uint64_t)v29 + v26);
  v33 = (__n128 *)sub_2489C5064();
  sub_248A065B4(v33);
  v34 = swift_getKeyPath();
  sub_2489BA8D8(v34);
  *(uint64_t *)((char *)v29 + 2 * v26) = v50;
  sub_2489C6D10((uint64_t)v29 + 2 * v26);
  v35 = (__n128 *)sub_2489C5064();
  sub_248A065B4(v35);
  v36 = swift_getKeyPath();
  sub_2489BA8D8(v36);
  *(uint64_t *)((char *)v29 + 3 * v26) = v50;
  sub_2489C6D10((uint64_t)v29 + 3 * v26);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_248A496E0;
  *(_QWORD *)(v37 + 32) = swift_getKeyPath();
  *(_QWORD *)(v37 + 40) = swift_getKeyPath();
  sub_248A456A8();
  *(uint64_t *)((char *)v29 + 4 * v26) = v37;
  sub_2489C6D10((uint64_t)v29 + 4 * v26);
  sub_2489C330C(&qword_2544648A0);
  sub_2489BED94();
  sub_248A4533C();
  sub_2489F5DEC(&qword_254464898, &qword_2544648A0);
  sub_248A45324();
  v38 = sub_2489EC9A4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v40 = *(_QWORD *)(v38 + 16);
  v39 = *(_QWORD *)(v38 + 24);
  if (v40 >= v39 >> 1)
    v38 = sub_2489EC9A4(v39 > 1, v40 + 1, 1, v38);
  *(_QWORD *)(v38 + 16) = v40 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 32))(v38 + v44 + v40 * v8, v42, v46);
  sub_2489EA990();
  return v43;
}

void sub_248A05C5C(uint64_t *a1@<X8>)
{
  *a1 = sub_248A03DDC();
  sub_2489BA7D0();
}

void sub_248A05C84()
{
  _QWORD *v0;
  uint64_t v1;

  sub_248A065E4();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A05CA4(uint64_t *a1@<X8>)
{
  *a1 = sub_248A04164();
  sub_2489BA7D0();
}

void sub_248A05CD4(uint64_t *a1@<X8>)
{
  *a1 = sub_248A04390();
  sub_2489BA7D0();
}

void sub_248A05D04()
{
  _QWORD *v0;
  uint64_t v1;

  sub_248A065FC();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A05D24()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489C9430();
  sub_248A0475C();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A05D48()
{
  _WORD *v0;
  __int16 v1;

  sub_2489C9430();
  sub_248A04914();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A05D68()
{
  sub_248A04A7C();
  sub_2489BA7D0();
}

void CoreRuleRecord.__allocating_init(backingData:)(uint64_t a1)
{
  sub_2489B6B08();
  CoreRuleRecord.init(backingData:)(a1);
  sub_2489BA7D0();
}

_QWORD *CoreRuleRecord.init(backingData:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  v5 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v2[6] = sub_2489C330C(&qword_254464258);
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  *(_QWORD *)&v20 = v4;
  *((_QWORD *)&v20 + 1) = v4;
  v21 = v7;
  v22 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v2 + 3);
  sub_248A4518C();
  sub_248A033A4(0, 0xE000000000000000, (uint64_t)(v2 + 3));
  sub_248A44F4C();
  sub_248A06550();
  sub_248A03774(v8, v9);
  sub_248A06550();
  sub_248A03B84(v10, v11, v12);
  *((_BYTE *)v2 + 17) = 0;
  sub_2489BECE0((void (*)(_QWORD))type metadata accessor for CoreTipRecord, &qword_2544646D0, (_BYTE *)v2 + 18);
  sub_248A06550();
  sub_248A03E1C(v13, v14);
  sub_2489BECE0((void (*)(_QWORD))type metadata accessor for CoreParameterRecord, &qword_254464678, (_BYTE *)v2 + 20);
  sub_2489BECE0((void (*)(_QWORD))type metadata accessor for CoreEventRecord, &qword_2544645F8, (_BYTE *)v2 + 21);
  sub_248A06550();
  sub_248A04428(v15, v16);
  sub_2489C330C(&qword_2544643C0);
  sub_248A453C0();
  sub_248A06550();
  sub_248A046B4(v17, v18);
  sub_248A06548(0, (uint64_t)(v2 + 3));
  sub_248A06548(0, (uint64_t)(v2 + 3));
  sub_248A44FDC();
  *((_BYTE *)v2 + 16) = 0;
  *(_DWORD *)((char *)v2 + 18) = 0;
  *((_BYTE *)v2 + 22) = 0;
  sub_2489C4880(a1, (uint64_t)&v20);
  sub_2489C09C0();
  sub_2489BCE44((uint64_t)(v2 + 3));
  sub_2489B8F74(&v20, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_2489BCE44(a1);
  return v2;
}

void CoreRuleRecord.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  sub_2489BA7D0();
}

uint64_t CoreRuleRecord.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  return swift_deallocClassInstance();
}

uint64_t sub_248A060A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreRuleRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248A060CC()
{
  return CoreRuleRecord.description.getter();
}

uint64_t CoreRuleRecord.hashValue.getter()
{
  sub_248A45F90();
  sub_2489F6410(&qword_2544645C0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_248A45480();
  return sub_248A45FD8();
}

uint64_t sub_248A06164()
{
  return static CoreRuleRecord.schemaMetadata.getter();
}

uint64_t sub_248A06178()
{
  return CoreRuleRecord.hashValue.getter();
}

uint64_t sub_248A06198()
{
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  return sub_248A451D4();
}

uint64_t sub_248A061F0()
{
  sub_2489F6410(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  return sub_248A451BC();
}

void sub_248A06244()
{
  sub_2489F6410(&qword_2544645B0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

void sub_248A06270()
{
  sub_2489F6410(&qword_2544645C0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

void sub_248A0629C()
{
  sub_2489F6410(&qword_2544645D0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

void sub_248A062C8()
{
  sub_2489F6410(&qword_2544645C8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

void sub_248A062F4()
{
  _BYTE *v0;
  char v1;

  sub_2489C9430();
  CoreRuleRecord.status.getter();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A06314()
{
  CoreRuleRecord.status.setter();
  sub_2489BA7D0();
}

void sub_248A06334(uint64_t a1@<X8>)
{
  CoreRuleRecord.persistentBackingData.getter(a1);
  sub_2489BA7D0();
}

uint64_t sub_248A06354()
{
  return type metadata accessor for CoreRuleRecord();
}

uint64_t sub_248A0635C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44FE8();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for CoreRuleRecord()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreRuleRecord.__allocating_init(id:predicate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of CoreRuleRecord.__allocating_init(backingData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

ValueMetadata *type metadata accessor for CoreRuleRecord._SwiftDataNoType()
{
  return &type metadata for CoreRuleRecord._SwiftDataNoType;
}

uint64_t sub_248A06434()
{
  return sub_248A04614();
}

uint64_t sub_248A0644C()
{
  return sub_248A04890();
}

uint64_t sub_248A06464()
{
  return sub_248A04B98();
}

uint64_t sub_248A06488()
{
  uint64_t v0;

  return sub_248A042E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_248A4B7D8, &qword_2544645F8, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
}

uint64_t sub_248A064C0()
{
  uint64_t v0;

  return sub_248A042E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_248A4B788, &qword_254464678, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
}

uint64_t sub_248A064F8()
{
  uint64_t v0;

  return sub_248A042E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_248A4B738, &qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

uint64_t sub_248A06530()
{
  return sub_248A0401C();
}

void sub_248A06548(uint64_t a1, uint64_t a2)
{
  sub_248A04B08(a1, a2);
}

uint64_t sub_248A0655C()
{
  return sub_248A44FD0();
}

uint64_t sub_248A0656C()
{
  return sub_248A45324();
}

uint64_t sub_248A06580()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  return v0;
}

void sub_248A06598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v3)(uint64_t);

  sub_248A03F84(a1, a2, a3, v3);
}

__n128 sub_248A065B4(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 192);
  a1[1] = result;
  return result;
}

void sub_248A065C4(_QWORD *a1)
{
  void (*v1)(uint64_t);

  sub_2489F6410(a1, v1);
}

void sub_248A065D8(_QWORD *a1)
{
  void (*v1)(uint64_t);

  sub_2489F6410(a1, v1);
}

void sub_248A065E4()
{
  sub_248A03EE8();
}

uint64_t sub_248A065F0()
{
  return CoreRuleRecord.id.getter();
}

void sub_248A065FC()
{
  sub_248A044F4();
}

uint64_t sub_248A06608()
{
  return CoreRuleRecord.id.setter();
}

uint64_t sub_248A06614()
{
  return swift_getKeyPath();
}

uint64_t sub_248A06620()
{
  return 0x6574656D61726170;
}

uint64_t sub_248A06634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_248A06670(a1, a2, a3, a4, a5, a6, a7, &qword_254463CA8, &qword_254463A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_248A3DF8C);
}

uint64_t sub_248A06670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;

  sub_2489C330C(a8);
  v15 = sub_2489C330C(a9);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_248A47480;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 16))(v18 + v17, a4, v15);
  v19 = a10(a1, a2, a3, v18, a5, v22, a6, a7);
  swift_bridgeObjectRelease();
  return v19;
}

void sub_248A06780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 32))(&v6, a5, a6);
  __asm { BR              X10 }
}

uint64_t sub_248A067F4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  _QWORD *v4;

  sub_248A45A74();
  sub_248A4557C();
  sub_2489C1608();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  v2(v0, v1);
  sub_248A0310C(*(_BYTE *)(v3 - 65));
  sub_248A4557C();
  sub_2489C9824();
  swift_allocError();
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  swift_willThrow();
  return 0;
}

unint64_t sub_248A06960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a6;
  v13 = sub_248A071E0(a1, a2, a3, a7, a8, a9);
  if (!v13)
    goto LABEL_9;
  v14 = v13;
  sub_248A0774C(a4, (uint64_t)&v28);
  sub_2489C330C(&qword_2544641E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
LABEL_9:
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v28 = 0xD00000000000002ELL;
    v29 = 0x8000000248A50270;
    (*(void (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    v22 = v28;
    v14 = v29;
    sub_2489C9824();
    swift_allocError();
    *v23 = v22;
    v23[1] = v14;
    swift_willThrow();
    return v14;
  }
  CoreRuleRecord.update(tip:parent:)(a5, v32);
  swift_getKeyPath();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 32))(&v28, a8, a9);
  sub_248A1D9F0();
  v32 = v15;
  swift_release();
  swift_getKeyPath();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 56))(&v28, a8, a9);
  sub_248A1D9F0();
  swift_release();
  swift_release();
  swift_release();
  v16 = *(_QWORD *)(v27 + 16);
  if (v16)
  {
    v26 = MEMORY[0x24BEE4AF8];
    sub_248A453F0();
    sub_248A45B34();
    v17 = v27 + 32;
    while (1)
    {
      sub_248A0774C(v17, (uint64_t)&v28);
      v18 = v30;
      v19 = v31;
      v20 = sub_2489BE100(&v28, v30);
      sub_248A06780(v20, 0, v14, a7, v18, v19);
      sub_2489BCE44((uint64_t)&v28);
      if (v9)
        break;
      sub_248A45B10();
      sub_248A45B40();
      sub_248A45B4C();
      sub_248A45B1C();
      v17 += 40;
      if (!--v16)
      {
        v21 = v26;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
LABEL_11:
    sub_248A045F8(v21);
  }
  return v14;
}

unint64_t sub_248A06CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  __int128 v20[2];
  uint64_t v21;
  _QWORD v22[5];
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v13 = sub_248A071E0(a1, a2, a3, a7, a8, a9);
  if (!v13)
    goto LABEL_7;
  v14 = v13;
  sub_248A0774C(a4, (uint64_t)v22);
  sub_2489C330C(&qword_2544641E8);
  sub_2489C330C(&qword_254463868);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v21 = 0;
    memset(v20, 0, sizeof(v20));
    swift_release();
    sub_2489C3298((uint64_t)v20, &qword_254463730);
LABEL_7:
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v23 = 0xD00000000000002BLL;
    v24 = 0x8000000248A502A0;
    (*(void (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    v14 = v23;
    v17 = v24;
    sub_2489C9824();
    swift_allocError();
    *v18 = v14;
    v18[1] = v17;
    swift_willThrow();
    return v14;
  }
  sub_2489B8F74(v20, (uint64_t)&v23);
  CoreRuleRecord.update(tip:parent:)(a5, a6);
  swift_getKeyPath();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a9 + 32))(v22, a8, a9);
  sub_248A1D9F0();
  swift_release();
  swift_getKeyPath();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a9 + 56))(v22, a8, a9);
  sub_248A1D9F0();
  swift_release();
  swift_release();
  swift_release();
  sub_2489BE100(&v23, v25);
  type metadata accessor for CoreEventRecord();
  v15 = v26;
  sub_2489F6444();
  if (v15)
    swift_release();
  else
    sub_248A0440C(v16);
  sub_2489BCE44((uint64_t)&v23);
  return v14;
}

unint64_t sub_248A06F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  __int128 v24[2];
  uint64_t v25;
  _QWORD v26[5];
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v14 = sub_248A071E0(a1, a2, a3, a7, a8, a9);
  if (!v14)
    goto LABEL_7;
  v15 = v14;
  sub_248A0774C(a4, (uint64_t)v26);
  sub_2489C330C(&qword_2544641E8);
  sub_2489C330C(&qword_254463B70);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v25 = 0;
    memset(v24, 0, sizeof(v24));
    swift_release();
    sub_2489C3298((uint64_t)v24, &qword_254463B78);
LABEL_7:
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v27 = 0xD00000000000002FLL;
    v28 = 0x8000000248A502D0;
    (*(void (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    v15 = v27;
    v21 = v28;
    sub_2489C9824();
    swift_allocError();
    *v22 = v15;
    v22[1] = v21;
    swift_willThrow();
    return v15;
  }
  sub_2489B8F74(v24, (uint64_t)&v27);
  CoreRuleRecord.update(tip:parent:)(a5, a6);
  swift_getKeyPath();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a9 + 32))(v26, a8, a9);
  sub_248A1D9F0();
  swift_release();
  swift_getKeyPath();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a9 + 56))(v26, a8, a9);
  sub_248A1D9F0();
  swift_release();
  swift_release();
  swift_release();
  v16 = v29;
  v17 = v30;
  v18 = sub_2489BE100(&v27, v29);
  type metadata accessor for CoreParameterRecord();
  v19 = v31;
  v20 = sub_2489FA824((uint64_t)v18, a7, v16, v17);
  if (v19)
    swift_release();
  else
    sub_248A042CC(v20);
  sub_2489BCE44((uint64_t)&v27);
  return v15;
}

uint64_t sub_248A071E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = v6;
  v24 = a5;
  v25 = a6;
  v26 = a3;
  v27 = a4;
  v28 = sub_2489C330C(&qword_254464110);
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2489C330C(&qword_254464020);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C330C(&qword_254464818);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_248A4BB10;
  *(_QWORD *)(v19 + 32) = swift_getKeyPath();
  *(_QWORD *)(v19 + 40) = swift_getKeyPath();
  *(_QWORD *)(v19 + 48) = swift_getKeyPath();
  *(_QWORD *)(v19 + 56) = swift_getKeyPath();
  *(_QWORD *)(v19 + 64) = swift_getKeyPath();
  v37 = v19;
  sub_248A456A8();
  v20 = v37;
  swift_getKeyPath();
  sub_248A077BC();
  sub_248A44C7C();
  v35 = a1;
  v36 = a2;
  v37 = v7;
  sub_248A44FAC();
  v30 = v24;
  v31 = v25;
  v32 = a1;
  v33 = a2;
  v34 = v26;
  v21 = sub_248A06670(v27, 0, v20, (uint64_t)v18, (uint64_t)v13, (uint64_t)sub_248A07804, (uint64_t)v29, &qword_2544643A0, &qword_254464020, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_248A3E1B4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v28);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  return v21;
}

uint64_t sub_248A07424@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  v4 = sub_2489C330C(&qword_254464060);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_2544640B8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_254464090);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248A07904(&qword_2544640B0, &qword_2544640B8, MEMORY[0x24BDCD230]);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = v18;
  v23 = v19;
  sub_248A44DB4();
  a3[3] = sub_2489C330C(&qword_254464038);
  a3[4] = sub_248A0781C();
  sub_2489BE690(a3);
  sub_248A07904(&qword_254464088, &qword_254464090, MEMORY[0x24BDCD1C0]);
  sub_248A07904(&qword_254464058, &qword_254464060, MEMORY[0x24BDCD130]);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
}

uint64_t sub_248A07674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;

  v9 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 48);
  sub_248A453F0();
  v10 = (void *)v9(a4, a5);
  type metadata accessor for CoreRuleRecord();
  swift_allocObject();
  return CoreRuleRecord.init(id:predicate:)(a1, a2, v10);
}

void sub_248A076FC(_BYTE *a1@<X8>)
{
  char v2;

  sub_2489C4BD8();
  *a1 = v2 & 1;
}

void sub_248A07728(char *a1)
{
  sub_2489BB134(*a1);
}

void sub_248A0774C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_2489BA7D0();
}

unint64_t sub_248A077BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544640F0;
  if (!qword_2544640F0)
  {
    v1 = sub_248A44F58();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_2544640F0);
  }
  return result;
}

uint64_t sub_248A077FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_248A07424(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_248A07804()
{
  uint64_t *v0;

  return sub_248A07674(v0[4], v0[5], v0[6], v0[2], v0[3]);
}

unint64_t sub_248A0781C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254464030;
  if (!qword_254464030)
  {
    v1 = sub_2489BCD7C(&qword_254464038);
    v2[0] = sub_248A07888();
    v2[1] = sub_2489EEB18();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254464030);
  }
  return result;
}

unint64_t sub_248A07888()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_254464080;
  if (!qword_254464080)
  {
    v1 = sub_2489BCD7C(&qword_254464090);
    sub_248A07904(&qword_2544640A8, &qword_2544640B8, MEMORY[0x24BDCD228]);
    v3 = v2;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD1B8], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_254464080);
  }
  return result;
}

void sub_248A07904(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_2489BCD7C(a2);
    atomic_store(MEMORY[0x2495A2D34](a3, v5), a1);
  }
  sub_2489BA7D0();
}

uint64_t sub_248A07940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v7;
  uint64_t v9[5];

  v9[3] = a4;
  v9[4] = a5;
  v7 = sub_2489BE690(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v7, a2, a4);
  sub_248A079B8();
  return sub_248A07CDC((uint64_t)v9);
}

void sub_248A079B8()
{
  char v0;

  sub_2489BE8C0(&v0);
  __asm { BR              X10 }
}

uint64_t sub_248A07A08()
{
  _QWORD *v0;
  char v2;

  sub_248A45A74();
  sub_248A4557C();
  CoreRuleRecord.id.getter();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  sub_2489BE8C0(&v2);
  sub_248A0310C(v2);
  sub_248A4557C();
  sub_2489C9824();
  swift_allocError();
  *v0 = 0;
  v0[1] = 0xE000000000000000;
  return swift_willThrow();
}

uint64_t sub_248A07CDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2489C330C(&qword_2544641F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_248A07D1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_248A453F0();
  for (; v6; v6 = sub_248A45C18())
  {
    v7 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2495A2200](v7 - 4, a1);
      else
        swift_retain();
      v8 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      sub_248A07EE4(a2, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      sub_2489B5F08();
      if (v9)
      {
        sub_248A20780();
        swift_release();
      }
      swift_release();
      ++v7;
      if (v8 == v6)
        goto LABEL_12;
    }
    __break(1u);
LABEL_16:
    sub_248A453F0();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248A07E88(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5;

  if (result)
  {
    sub_248A453F0();
    v5 = sub_248A453F0();
    sub_248A07D1C(v5, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_248A07EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  char *v6;
  uint64_t *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t inited;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;

  CoreRuleRecord.predicate.getter();
  if (!v5)
    goto LABEL_10;
  v6 = v5;
  sub_248A08154();
  if (!sub_248A45198())
  {

    goto LABEL_10;
  }
  if (!a2
    || (v7 = (uint64_t *)&v6[OBJC_IVAR___Predicate_argument],
        v8 = v6[OBJC_IVAR___Predicate_argument + 16],
        v8 >= 2))
  {

    swift_release();
LABEL_10:
    sub_248A45A74();
    swift_bridgeObjectRelease();
    CoreRuleRecord.id.getter();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_2489C9824();
    swift_allocError();
    *v11 = 0xD000000000000026;
    v11[1] = 0x8000000248A50340;
    return swift_willThrow();
  }
  v9 = *v7;
  v10 = v7[1];
  type metadata accessor for CoreDonationRecord();
  v17 = v10;
  sub_2489C4150(v9, v10, v8);
  sub_2489EEF04(a1, a2, (uint64_t)v6, &v16);
  if (v2)
  {
    sub_2489BDB7C(v9, v17, v8);
  }
  else
  {
    sub_2489C330C(&qword_254463878);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_248A47480;
    v13 = v17;
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v13;
    sub_2489C81EC((uint64_t)&v16, inited + 48);
    sub_248A453C0();
    v15 = sub_2489FC8F8();
    swift_bridgeObjectRelease();
    sub_2489C41D0(v15 & 1);
    sub_2489BCE44((uint64_t)&v16);
  }

  return swift_release();
}

unint64_t sub_248A08154()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544645B8;
  if (!qword_2544645B8)
  {
    v1 = type metadata accessor for CoreRuleRecord();
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreRuleRecord, v1);
    atomic_store(result, (unint64_t *)&qword_2544645B8);
  }
  return result;
}

uint64_t sub_248A08194(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  if (result)
  {
    v2 = result;
    MEMORY[0x24BDAC7A8](result, a2);
    v6[2] = v3;
    v6[3] = v4;
    v6[4] = v5;
    sub_248A453F0();
    sub_248A20680((void (*)(uint64_t *))sub_248A08570, (uint64_t)v6, v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_248A0821C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _BYTE v8[24];
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_2489C4188(a1, (uint64_t)v8);
  if (v9)
  {
    sub_2489C330C(&qword_2544641E8);
    sub_2489C330C(&qword_254463B70);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*((_QWORD *)&v11 + 1))
      {
        sub_2489B8F74(&v10, (uint64_t)&v13);
        v1 = v15;
        v2 = v16;
        v3 = sub_2489BE100(&v13, v15);
        sub_248A08450((uint64_t)v3, v1, v2);
        return sub_2489BCE44((uint64_t)&v13);
      }
    }
    else
    {
      v12 = 0;
      v10 = 0u;
      v11 = 0u;
    }
  }
  else
  {
    sub_2489C32D0((uint64_t)v8, &qword_2544641F0);
    v10 = 0u;
    v11 = 0u;
    v12 = 0;
  }
  sub_2489C32D0((uint64_t)&v10, &qword_254463B78);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_248A45A74();
  sub_248A4557C();
  CoreRuleRecord.id.getter();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  v5 = v13;
  v6 = v14;
  sub_2489C9824();
  swift_allocError();
  *v7 = v5;
  v7[1] = v6;
  return swift_willThrow();
}

void sub_248A083AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10[5];

  v7 = *(_QWORD *)(a4 + 16);
  v10[3] = a3;
  v10[4] = v7;
  v8 = sub_2489BE690(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v8, a2, a3);
  sub_248A0821C((uint64_t)v10);
  sub_2489C32D0((uint64_t)v10, &qword_2544641F0);
  if (!v4)
  {
    sub_2489B5F08();
    if (v9)
    {
      sub_248A20780();
      swift_release();
    }
  }
}

void sub_248A08450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v9);
  v11 = (char *)&v16 - v10;
  v17 = v3;
  CoreRuleRecord.predicate.getter();
  if (v12)
  {
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
    v14 = sub_2489FCB88((uint64_t)v11, AssociatedTypeWitness);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
    }
    else
    {
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      sub_2489C41D0(v15 & 1);
    }

  }
}

void sub_248A08570(uint64_t a1)
{
  uint64_t *v1;

  sub_248A083AC(a1, v1[4], v1[2], v1[3]);
}

void sub_248A0858C(char a1, uint64_t a2)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  char v17;

  CoreRuleRecord.predicate.getter();
  if (!v4)
    goto LABEL_8;
  v5 = v4;
  sub_2489BE8C0(v15);
  if (LOBYTE(v15[0]) != 1 || (v6 = v5[OBJC_IVAR___Predicate_operation], (v6 - 7) > 1))
  {

LABEL_8:
    sub_2489C9824();
    swift_allocError();
    *v7 = 0xD00000000000001ALL;
    v7[1] = 0x8000000248A503B0;
    swift_willThrow();
    return;
  }
  if (v6 == 7)
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v8 && *(_BYTE *)(a2 + 32) == 2 && v8 != 1)
    {
      v9 = 33;
      while (1)
      {
        v10 = v9 - 31;
        if (__OFADD__(v9 - 32, 1))
          break;
        if (*(_BYTE *)(a2 + v9) == 2)
        {
          ++v9;
          if (v10 != v8)
            continue;
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_25:
      swift_once();
      goto LABEL_21;
    }
  }
  else
  {
    if (v6 != 8)
      goto LABEL_17;
    sub_248A2A760(2, a2);
  }
LABEL_16:
  CoreRuleRecord.status.setter();
LABEL_17:
  if (!*(_QWORD *)(a2 + 16))
    CoreRuleRecord.status.setter();
  CoreRuleRecord.status.getter();
  if (v11 == a1)
    goto LABEL_23;
  if (qword_254464240 != -1)
    goto LABEL_25;
LABEL_21:
  v12 = type metadata accessor for logger();
  sub_2489C401C(v12, (uint64_t)&unk_254464228);
  *(_QWORD *)&v15[0] = 0;
  *((_QWORD *)&v15[0] + 1) = 0xE000000000000000;
  sub_248A45A74();
  sub_248A4557C();
  CoreRuleRecord.id.getter();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  CoreRuleRecord.status.getter();
  v17 = v13;
  sub_248A45BAC();
  sub_2489BE9AC();
  swift_bridgeObjectRelease();
  sub_248A03EE8();
  if (v14)
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_248A079B8();
    sub_248A07CDC((uint64_t)v15);

    swift_release();
    return;
  }
LABEL_23:

}

uint64_t sub_248A08858()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 7;
  os_unfair_lock_lock(v1 + 7);
  sub_248A0B208(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

double sub_248A088B8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  double v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2489C635C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_248A08914(uint64_t a1@<X8>)
{
  sub_248A08920(&qword_254463FF8, a1);
}

void sub_248A08920(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  sub_2489C0BB4();
  v7 = (os_unfair_lock_s *)(v5 + v6);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + v6));
  sub_2489C5618(v2, a2, a1);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_248A08980()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  id *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (id *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_248A0B270(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_248A089DC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_248A0B2B0(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_248A08A38()
{
  return sub_248A08A50((void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_248A0B4D8);
}

uint64_t sub_248A08A44()
{
  return sub_248A08A50((void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_248A0B2F0);
}

uint64_t sub_248A08A50(void (*a1)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v7;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  v4 = v3 + 4;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  a1(&v7, v4);
  os_unfair_lock_unlock(v5);
  return v7;
}

void sub_248A08AB0(uint64_t a1, char a2)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  char v7;

  v6 = a1;
  v7 = a2 & 1;
  v3 = *(os_unfair_lock_s **)(v2 + 16);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 7;
  os_unfair_lock_lock(v3 + 7);
  sub_248A0B238(v4, (uint64_t)&v6);
  os_unfair_lock_unlock(v5);
}

void sub_248A08B0C(double a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  double *p_os_unfair_lock_opaque;
  os_unfair_lock_s *v4;
  double v5;

  v5 = a1;
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  p_os_unfair_lock_opaque = (double *)&v2[4]._os_unfair_lock_opaque;
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_248A0B258(p_os_unfair_lock_opaque, &v5);
  os_unfair_lock_unlock(v4);
}

void sub_248A08B60(uint64_t a1)
{
  sub_248A08B74(a1, sub_248A08D08);
}

void sub_248A08B74(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  sub_2489C0BB4();
  v7 = (os_unfair_lock_s *)(v5 + v6);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + v6));
  a2(v2, a1);
  os_unfair_lock_unlock(v7);
  sub_2489BD9CC(a1);
  sub_2489BA868();
}

void sub_248A08BE4(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  id *v3;
  os_unfair_lock_s *v4;
  id v5;

  v5 = a1;
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  v3 = (id *)&v2[4];
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_248A0B298(v3, &v5);
  os_unfair_lock_unlock(v4);

}

void sub_248A08C40(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;

  v5 = a1;
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  v3 = v2 + 4;
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_248A0B2D8(v3, &v5);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_248A08C94(uint64_t a1)
{
  return *(_QWORD *)a1;
}

id sub_248A08CA4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  return v1;
}

uint64_t sub_248A08CD0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_248A08CD8()
{
  return sub_248A453F0();
}

uint64_t sub_248A08CF0(uint64_t result, uint64_t a2, char a3)
{
  *(_QWORD *)result = a2;
  *(_BYTE *)(result + 8) = a3 & 1;
  return result;
}

double *sub_248A08D00(double *result, double a2)
{
  *result = a2;
  return result;
}

void sub_248A08D08(uint64_t a1, uint64_t a2)
{
  sub_2489C4AD4(a1, &qword_254463FF8);
  sub_2489C5618(a2, a1, &qword_254463FF8);
}

id sub_248A08D58(id *a1, void *a2)
{

  *a1 = a2;
  return a2;
}

_QWORD *sub_248A08D98(_QWORD *result, uint64_t a2)
{
  *result = a2;
  return result;
}

void sub_248A08DA0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  sub_2489C330C(&qword_254464AE8);
  v5 = sub_2489BA860();
  *(_DWORD *)(v5 + 28) = 0;
  *(_QWORD *)(v5 + 16) = a1;
  *(_BYTE *)(v5 + 24) = a2 & 1;
  *(_QWORD *)(v2 + 16) = v5;
  sub_2489B6AF4();
}

void sub_248A08DEC(uint64_t a1)
{
  sub_248A08E04(a1, &qword_254464B00);
}

void sub_248A08DF8(uint64_t a1)
{
  sub_248A08E04(a1, &qword_254464BF8);
}

void sub_248A08E04(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2489BEDB8(a1, a2);
  v4 = sub_2489BA860();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v3 + 16) = v4;
  sub_2489BA7D0();
}

uint64_t CoreTip.__allocating_init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  return sub_248A0940C(a1, a2, sub_248A0AC5C);
}

uint64_t CoreTip.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_248A453F0();
  return v1;
}

uint64_t CoreTip.status.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_2489BA29C(&qword_254464860, (uint64_t (*)(uint64_t))type metadata accessor for CoreTip, (uint64_t)&protocol conformance descriptor for CoreTip);
  sub_248A44FD0();
  result = sub_2489BA87C();
  *a1 = *(_WORD *)(v1 + 88);
  return result;
}

uint64_t sub_248A08EF4@<X0>(_WORD *a1@<X8>)
{
  uint64_t result;
  __int16 v3;

  result = CoreTip.status.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_248A08F2C()
{
  return sub_248A08F60();
}

uint64_t sub_248A08F60()
{
  swift_getKeyPath();
  sub_248A08FBC();
  return sub_2489B6B20();
}

uint64_t sub_248A08FBC()
{
  sub_2489BA29C(&qword_254464860, (uint64_t (*)(uint64_t))type metadata accessor for CoreTip, (uint64_t)&protocol conformance descriptor for CoreTip);
  return sub_248A44FC4();
}

uint64_t sub_248A0905C(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_2489C00F0();
  sub_248A08AB0(a1, v3);
  return sub_2489C0A34();
}

void CoreTip.activeViews.getter()
{
  sub_2489C00F0();
  sub_248A089DC();
  sub_2489BF7F0();
  sub_2489BA7D0();
}

uint64_t CoreTip.activeViews.setter(uint64_t a1)
{
  sub_2489C00F0();
  sub_248A08C40(a1);
  return sub_2489BFE5C();
}

uint64_t (*CoreTip.activeViews.modify(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = *(_QWORD *)(v1 + 112);
  swift_retain();
  *a1 = sub_248A089DC();
  return sub_248A0912C;
}

uint64_t sub_248A0912C(uint64_t *a1)
{
  sub_248A08C40(*a1);
  return sub_2489BFE5C();
}

uint64_t CoreTip.$activeViews.getter()
{
  return swift_retain();
}

void CoreTip.constellationContent.getter()
{
  sub_2489C00F0();
  sub_248A08980();
  sub_2489BF7F0();
  sub_2489BA7D0();
}

void sub_248A09180(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_248A091AC(v1);
}

void sub_248A091AC(void *a1)
{
  id v2;

  v2 = a1;
  sub_2489C00F0();
  sub_248A08BE4(a1);
  sub_2489BF7F0();

}

uint64_t CoreTip.$constellationContent.getter()
{
  return swift_retain();
}

uint64_t sub_248A091F8(double a1)
{
  sub_2489C00F0();
  sub_248A08B0C(a1);
  return swift_release();
}

uint64_t CoreTip.$displayDuration.getter()
{
  return swift_retain();
}

void sub_248A09238()
{
  if (qword_254464B20 != -1)
    swift_once();
  sub_2489C33B0();
  sub_2489BBC94();
  sub_2489C0870();
  swift_bridgeObjectRelease();
  sub_2489B6B20();
  sub_2489BA428();
}

uint64_t sub_248A092A0(char *a1)
{
  char v1;

  v1 = *a1;
  if (qword_254463E68 != -1)
    swift_once();
  sub_2489BA530();
  sub_248A453F0();
  sub_248A2F468(v1);
  return sub_2489C0A34();
}

uint64_t sub_248A09314()
{
  if (qword_254464530 != -1)
    swift_once();
  sub_2489BA530();
  sub_248A453F0();
  sub_2489F7468();
  sub_2489B71DC();
  return swift_release();
}

uint64_t CoreTip.description.getter()
{
  uint64_t v0;
  uint64_t v2;

  sub_2489C0120();
  v2 = v0;
  sub_248A453F0();
  sub_2489C0138();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  return v2;
}

uint64_t CoreTip.init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  return sub_248A0940C(a1, a2, sub_248A0AD30);
}

uint64_t sub_248A0940C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = sub_2489D08D4(a1, v7);
  MEMORY[0x24BDAC7A8](v9, v9);
  sub_2489BBC7C();
  v12 = v11 - v10;
  (*(void (**)(uint64_t))(v13 + 16))(v11 - v10);
  v14 = a3(v12, a2, v3, v7, v8);
  sub_2489BCE44(a1);
  return v14;
}

uint64_t sub_248A094B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  sub_2489C330C(&qword_254464970);
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A09518()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  unsigned __int8 v13;

  if (qword_254464530 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD **)(v0 + 104);
  v3 = v2[3];
  v4 = v2[4];
  sub_2489BE100(v2, v3);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 32);
  swift_retain();
  v5(v3, v4);
  sub_2489F7468();
  swift_bridgeObjectRelease();
  swift_release();
  v6 = sub_248A452AC();
  v7 = sub_2489BE834(v1, 1, v6);
  sub_2489C4AD4(v1, &qword_254464970);
  if (v7 == 1
    && (v9 = v2[3],
        v8 = v2[4],
        sub_2489BE100(*(_QWORD **)(v0 + 104), v9),
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 64))(&v12, v9, v8),
        v10 = v13,
        swift_bridgeObjectRelease(),
        v10 == 1))
  {
    sub_2489BD8B0();
    swift_weakLoadStrong();
    swift_weakInit();
    sub_2489B6B20();
    *(_QWORD *)(v0 + 128) = sub_248A45768();
    *(_QWORD *)(v0 + 136) = sub_248A4575C();
    sub_248A45738();
    return swift_task_switch();
  }
  else
  {
    sub_2489BD8B0();
    if (swift_weakLoadStrong())
    {
      sub_2489B6B54();
      sub_2489BF7F0();
    }
    sub_2489BD8FC();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_248A09714()
{
  swift_release();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_2489BD8B0();
  if (swift_weakLoadStrong())
  {
    sub_248A08F60();
    sub_2489BEC4C();
  }
  swift_release();
  swift_weakDestroy();
  return swift_task_switch();
}

uint64_t sub_248A09804()
{
  uint64_t v0;

  sub_2489BE100(*(_QWORD **)(v0 + 104), *(_QWORD *)(*(_QWORD *)(v0 + 104) + 24));
  type metadata accessor for CoreTipRecord();
  sub_248A1CB44();
  swift_release();
  sub_2489BD8B0();
  if (swift_weakLoadStrong())
  {
    sub_2489B6B54();
    sub_2489BF7F0();
  }
  sub_2489BD8FC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_248A098C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];

  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v25 - v10;
  v12 = sub_248A452AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_2489C0068();
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BD8B0();
  if (qword_254464F38)
  {
    v15 = qword_254464F30;
    v16 = qword_254464F38;
  }
  else
  {
    v25[1] = a1;
    v25[2] = v1;
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v15 = qword_25446C6D0;
      v16 = qword_25446C6D8;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v17 = sub_2489D7B5C();
      if (v18)
        v15 = v17;
      else
        v15 = 0;
      if (v18)
        v16 = v18;
      else
        v16 = 0xE000000000000000;
    }
    sub_248A453F0();
  }
  sub_2489C0490();
  if (v15 == v20 && v16 == v19)
  {
    sub_2489BBC94();
    sub_2489C2448();
  }
  else
  {
    v22 = sub_2489C00F8();
    sub_2489BBC94();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      sub_248A09314();
      if (sub_2489BE834((uint64_t)v11, 1, v12) == 1)
      {
        sub_2489C4AD4((uint64_t)v11, &qword_254464970);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v2, v11, v12);
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v2, v12);
        sub_2489BE7E0((uint64_t)v8, 0, 1, v12);
        sub_248A2FCF0();
        v24 = v23;
        sub_2489C4AD4((uint64_t)v8, &qword_254464970);
        if (v24)
        {
          sub_248A09CA0(v24);
          sub_2489BA87C();
        }
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v12);
      }
    }
  }
}

void CoreTip.onStatusChange(_:)(void (*a1)(__int16 *), uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  __int16 v6;
  __int16 v7;

  v4 = sub_2489BA860();
  swift_weakInit();
  v5 = (_QWORD *)sub_2489BA860();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  sub_2489BA530();
  sub_248A44FB8();
  sub_2489BA87C();
  swift_release();
  CoreTip.status.getter(&v7);
  v6 = v7;
  a1(&v6);
  sub_2489BA868();
}

uint64_t sub_248A09BF8()
{
  __int16 v1;

  return CoreTip.status.getter(&v1);
}

uint64_t sub_248A09C24(uint64_t a1, uint64_t a2, uint64_t (*a3)(__int16 *))
{
  uint64_t result;
  __int16 v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CoreTip.status.getter(&v5);
    swift_release();
    return a3(&v5);
  }
  return result;
}

uint64_t sub_248A09CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  int v53;
  int v54;
  uint64_t v56;
  void (*v57)(uint64_t);
  int v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;
  unsigned __int8 v74;

  v3 = v1;
  sub_2489C330C(&qword_254464DD8);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  v10 = sub_248A44F58();
  v71 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489BBC7C();
  v68 = v13 - v12;
  v14 = sub_2489C330C(&qword_254464100);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_2489C0068();
  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v69 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v70 = (uint64_t)&v66 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (char *)&v66 - v26;
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v66 - v29;
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BD8B0();
  v72 = v10;
  if (qword_254464F38)
  {
    v31 = qword_254464F30;
    v32 = qword_254464F38;
  }
  else
  {
    v67 = a1;
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v31 = qword_25446C6D0;
      v32 = qword_25446C6D8;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v33 = sub_2489D7B5C();
      if (v34)
      {
        v31 = v33;
        v32 = v34;
      }
      else
      {
        v31 = 0;
        v32 = 0xE000000000000000;
      }
    }
    sub_248A453F0();
  }
  sub_2489C0490();
  if (v31 == v36 && v32 == v35)
  {
    sub_248A453F0();
    return sub_2489C2448();
  }
  v38 = sub_2489C00F8();
  sub_248A453F0();
  result = swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
    return result;
  sub_2489C6468((uint64_t)v30);
  sub_2489C4B1C();
  v40 = v2 + *(int *)(v14 + 48);
  sub_2489C5618((uint64_t)v30, v2, &qword_254464A98);
  sub_2489C5618((uint64_t)v27, v40, &qword_254464A98);
  v41 = v72;
  if (sub_2489BE834(v2, 1, v72) != 1)
  {
    v42 = v70;
    sub_2489C5618(v2, v70, &qword_254464A98);
    if (sub_2489BE834(v40, 1, v41) != 1)
    {
      v43 = v68;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v68, v40, v41);
      sub_2489BA29C((unint64_t *)&qword_254463FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      LODWORD(v67) = sub_248A454B0();
      v44 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v44(v43, v41);
      sub_2489C5F08((uint64_t)v27);
      sub_2489C5F08((uint64_t)v30);
      v44(v70, v41);
      sub_2489C5F08(v2);
      if ((v67 & 1) != 0)
        goto LABEL_27;
LABEL_26:
      v45 = (uint64_t)v69;
      sub_2489C4B1C();
      sub_2489C638C(v45);
      goto LABEL_27;
    }
    sub_2489BD9CC((uint64_t)v27);
    sub_2489BD9CC((uint64_t)v30);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v42, v41);
LABEL_24:
    sub_2489C4AD4(v2, &qword_254464100);
    goto LABEL_26;
  }
  sub_2489C5F08((uint64_t)v27);
  sub_2489C5F08((uint64_t)v30);
  if (sub_2489BE834(v40, 1, v41) != 1)
    goto LABEL_24;
  sub_2489C4AD4(v2, &qword_254464A98);
LABEL_27:
  v46 = sub_2489B57DC();
  v48 = v47;
  sub_2489C47EC();
  if ((v48 & 1) != 0 || v46 != v49)
  {
    sub_2489C47EC();
    sub_248A0905C(v50, 0);
  }
  v51 = CoreTip.displayDuration.getter();
  if (v51 < sub_2489B9D1C())
  {
    v52 = sub_2489B9D1C();
    sub_248A091F8(v52);
  }
  sub_248A0A280((char *)&v73);
  v53 = v73;
  v54 = HIBYTE(v73);
  result = CoreTip.status.getter(&v73);
  if (v53 == v73)
  {
    if (v54 == 10)
    {
      if (HIBYTE(v73) == 10)
        return result;
    }
    else if (HIBYTE(v73) != 10 && v54 == HIBYTE(v73))
    {
      return result;
    }
  }
  if (v53 == 1)
  {
    sub_2489BE100((_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 56));
    v56 = sub_2489C0138();
    v57(v56);
    v58 = v74;
    swift_bridgeObjectRelease();
    if (v58 == 1)
    {
      CoreTip.constellationContent.getter();
      v60 = v59;

      if (!v60)
      {
        CoreTipRecord.content.getter();
        sub_248A091AC(v61);
      }
    }
  }
  v62 = sub_248A45780();
  sub_2489BE7E0(v9, 1, 1, v62);
  sub_248A45768();
  swift_retain();
  v63 = sub_248A4575C();
  v64 = sub_2489BA860();
  v65 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v64 + 16) = v63;
  *(_QWORD *)(v64 + 24) = v65;
  *(_QWORD *)(v64 + 32) = v3;
  *(_BYTE *)(v64 + 40) = v53;
  *(_BYTE *)(v64 + 41) = v54;
  sub_248A0A9AC(v9, (uint64_t)&unk_2577A54B0, v64);
  return swift_release();
}

void sub_248A0A280(char *a1@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  sub_248A09238();
  if (v2 == 4)
  {
    v3 = 10;
    v4 = 3;
    goto LABEL_18;
  }
  v5 = v2;
  sub_2489C649C(&v11);
  if (v11 == 2)
  {
    if (qword_254464240 != -1)
      swift_once();
    v6 = type metadata accessor for logger();
    sub_2489C401C(v6, (uint64_t)&unk_254464228);
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v11 = 0x203A646928706954;
    v12 = 0xE800000000000000;
    sub_248A453F0();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v7 = sub_248A16DA4();
  if (v7 != 4)
  {
    v4 = v7;
    if (qword_254464240 != -1)
      swift_once();
    v8 = type metadata accessor for logger();
    sub_2489C401C(v8, (uint64_t)&unk_254464228);
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    sub_248A453F0();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_248A45BAC();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v5 != 1)
  {
LABEL_13:
    sub_2489B49C4();
    v4 = v5;
    goto LABEL_18;
  }
  if (sub_2489B65E0() != 2)
  {
    if (qword_254464240 != -1)
      swift_once();
    goto LABEL_24;
  }
  if (sub_2489B5578() != 2)
  {
    if (qword_254464240 != -1)
      swift_once();
LABEL_24:
    v9 = type metadata accessor for logger();
    sub_2489C401C(v9, (uint64_t)&unk_254464228);
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_248A45A74();
    sub_248A4557C();
    sub_248A453F0();
    sub_248A4557C();
    swift_bridgeObjectRelease();
LABEL_7:
    sub_248A4557C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
    v4 = 0;
LABEL_17:
    v3 = 10;
    goto LABEL_18;
  }
  if (sub_2489B4A40() == 2)
    goto LABEL_13;
  if (qword_254464240 != -1)
    swift_once();
  v10 = type metadata accessor for logger();
  sub_2489C401C(v10, (uint64_t)&unk_254464228);
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_248A45A74();
  sub_248A4557C();
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  sub_2489BE9AC();
  swift_bridgeObjectRelease();
  v3 = 8;
  v4 = 2;
LABEL_18:
  *a1 = v4;
  a1[1] = v3;
}

uint64_t sub_248A0A79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  uint64_t v5;

  *(_WORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = sub_248A45768();
  *(_QWORD *)(v5 + 32) = sub_248A4575C();
  sub_248A45738();
  return swift_task_switch();
}

uint64_t sub_248A0A810()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  sub_248A08F60();
  if (qword_254464240 != -1)
    swift_once();
  v1 = type metadata accessor for logger();
  sub_2489C401C(v1, (uint64_t)&unk_254464228);
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_248A45A74();
  swift_bridgeObjectRelease();
  sub_2489C0120();
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  CoreTip.Status.description.getter();
  sub_248A4557C();
  sub_2489BEC4C();
  sub_2489B71DC();
  sub_2489BE9AC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A0A9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_248A45780();
  if (sub_2489BE834(a1, 1, v6) == 1)
  {
    sub_2489C4AD4(a1, &qword_254464DD8);
  }
  else
  {
    sub_248A45774();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_248A45738();
    swift_unknownObjectRelease();
  }
  v7 = sub_2489BA860();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

void CoreTip.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_2489BCE44(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  v1 = sub_248A44FE8();
  sub_2489BF7BC(v1);
  sub_2489BA7D0();
}

uint64_t CoreTip.__deallocating_deinit()
{
  CoreTip.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_248A0AB88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreTip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248A0ABB0()
{
  return CoreTip.description.getter();
}

uint64_t sub_248A0ABD0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_248A0AC34;
  return v6(a1);
}

uint64_t sub_248A0AC34()
{
  uint64_t v0;

  sub_2489C0080();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_248A0AC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  v13 = sub_248A0AD30((uint64_t)v11, a2, v12, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, a4);
  return v13;
}

uint64_t sub_248A0AD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(__int128 *__return_ptr, uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  __int128 v34[2];
  unsigned __int8 v35;
  uint64_t v36[5];

  v10 = sub_2489C330C(&qword_254464A98);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v33 - v16;
  v36[3] = a4;
  v36[4] = a5;
  v18 = sub_2489BE690(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v18, a1, a4);
  sub_2489C330C(&qword_254464AC8);
  swift_allocObject();
  sub_248A08DA0(0, 1);
  *(_QWORD *)(a3 + 96) = v19;
  v20 = sub_248A44F58();
  sub_2489BE7E0((uint64_t)v17, 1, 1, v20);
  sub_2489C5618((uint64_t)v17, (uint64_t)v14, &qword_254464A98);
  sub_2489C330C(&qword_254464AA8);
  swift_allocObject();
  sub_2489C5FE8((uint64_t)v14);
  v22 = v21;
  sub_2489C4AD4((uint64_t)v17, &qword_254464A98);
  *(_QWORD *)(a3 + 104) = v22;
  sub_2489C330C(&qword_254464AF8);
  swift_allocObject();
  sub_248A08E04(0, &qword_254464B00);
  *(_QWORD *)(a3 + 120) = v23;
  sub_248A44FDC();
  *(_QWORD *)(a3 + 16) = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  *(_QWORD *)(a3 + 24) = v24;
  sub_2489C330C(&qword_254464AC0);
  swift_allocObject();
  sub_248A08E04(0, &qword_254464BF8);
  *(_QWORD *)(a3 + 112) = v25;
  *(_QWORD *)(a3 + 136) = a2;
  sub_2489C330C(&qword_254464AB8);
  swift_allocObject();
  *(_QWORD *)(a3 + 128) = sub_2489C5FA8(0.0);
  v26 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a5 + 64);
  swift_unownedRetain();
  v26(v34, a4, a5);
  LODWORD(v22) = v35;
  swift_bridgeObjectRelease();
  if ((_DWORD)v22)
    v27 = 3;
  else
    v27 = 0;
  *(_BYTE *)(a3 + 88) = v27;
  *(_BYTE *)(a3 + 89) = 10;
  sub_2489C4880((uint64_t)v36, a3 + 32);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 40))(a4, a5);
  *(_QWORD *)(a3 + 72) = String.init(type:)(v28);
  *(_QWORD *)(a3 + 80) = v29;
  v30 = swift_allocObject();
  swift_weakInit();
  sub_2489C4880((uint64_t)v36, (uint64_t)v34);
  v31 = swift_allocObject();
  sub_2489B8F74(v34, v31 + 16);
  *(_QWORD *)(v31 + 56) = v30;
  swift_retain();
  sub_248A37864((uint64_t)&unk_2577A51D8, v31);
  swift_release();
  swift_release();
  swift_release();
  sub_2489BCE44((uint64_t)v36);
  return a3;
}

uint64_t sub_248A0B048()
{
  return sub_248A09BF8();
}

uint64_t sub_248A0B050()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_248A0B074()
{
  return sub_248A0B328((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_248A0B084(uint64_t a1)
{
  uint64_t v1;

  return sub_248A09C24(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(__int16 *))(v1 + 24));
}

void sub_248A0B090(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CoreTip.activeViews.getter();
  *a1 = v2;
  sub_2489BA7D0();
}

void sub_248A0B0B4(uint64_t *a1)
{
  CoreTip.activeViews.setter(*a1);
  sub_2489BA7D0();
}

void sub_248A0B0D4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CoreTip.constellationContent.getter();
  *a1 = v2;
  sub_2489BA7D0();
}

void sub_248A0B0FC(double *a1@<X8>)
{
  *a1 = CoreTip.displayDuration.getter();
  sub_2489BA7D0();
}

void sub_248A0B120(double *a1)
{
  sub_248A091F8(*a1);
  sub_2489BA7D0();
}

uint64_t sub_248A0B140()
{
  return type metadata accessor for CoreTip();
}

uint64_t sub_248A0B148()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44FE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CoreTip()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreTip.__allocating_init(_:datastore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_248A0B208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_248A08C94(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_248A0B238(uint64_t a1, uint64_t a2)
{
  return sub_248A08CF0(a1, *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

double *sub_248A0B258(double *a1, double *a2)
{
  return sub_248A08D00(a1, *a2);
}

id sub_248A0B270@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_248A08CA4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

id sub_248A0B298(id *a1, void **a2)
{
  return sub_248A08D58(a1, *a2);
}

uint64_t sub_248A0B2B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_248A08CD0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_248A0B2D8(_QWORD *a1, uint64_t *a2)
{
  return sub_248A08D98(a1, *a2);
}

uint64_t sub_248A0B2F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_248A08CD8();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_248A0B318()
{
  return sub_248A0B328((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_248A0B328(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248A0B364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_WORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2489F7CC4;
  return sub_248A0A79C(a1, v4, v5, v6, v7);
}

uint64_t sub_248A0B3E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248A0B404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_248A0B4D4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2577A54B8 + dword_2577A54B8))(a1, v4);
}

void sub_248A0B474()
{
  uint64_t v0;

  *(_WORD *)(*(_QWORD *)(v0 + 16) + 88) = *(_WORD *)(v0 + 24);
}

uint64_t sub_248A0B484()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248A0B4B0()
{
  uint64_t v0;

  sub_2489C0080();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_248A0B4D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_248A0B2F0(a1);
}

void CoreTip.ConstellationAction.id.getter()
{
  sub_2489BD894();
  sub_2489BA7D0();
}

void CoreTip.ConstellationAction.type.getter()
{
  sub_2489BD894();
  sub_2489BA7D0();
}

void CoreTip.ConstellationAction.text.getter()
{
  sub_2489BD894();
  sub_2489BA7D0();
}

uint64_t CoreTip.ConstellationAction.attrs.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1[6];
  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  v6 = v1[10];
  v7 = v1[11];
  v8 = v1[12];
  v9 = v1[13];
  v10 = v1[14];
  v11 = v1[15];
  v12 = v1[16];
  v13 = v1[17];
  v14 = v1[18];
  v15 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  return sub_2489BB634(v2, v3);
}

uint64_t CoreTip.ConstellationAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CoreTip.ConstellationAction() + 32);
  return sub_2489BE840(v3, a1);
}

uint64_t sub_248A0B5E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1954047348 && a2 == 0xE400000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7372747461 && a2 == 0xE500000000000000;
        if (v8 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 7107189 && a2 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_248A45DBC();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_248A0B7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A0B5E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A0B7D0()
{
  sub_2489CAC70();
  return sub_248A46074();
}

uint64_t sub_248A0B7F8()
{
  sub_2489CAC70();
  return sub_248A46080();
}

uint64_t CoreTip.ConstellationAction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2489C330C(&qword_254462F78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489B6B34();
  sub_2489BE100(a1, a1[3]);
  sub_2489CAC70();
  sub_248A46008();
  sub_2489C161C();
  if (!v1)
  {
    sub_2489C161C();
    sub_2489C161C();
    sub_248A0B9C4();
    sub_2489C18D4();
    type metadata accessor for CoreTip.ConstellationAction();
    sub_248A44EB0();
    sub_2489CB760(&qword_2544640D8, MEMORY[0x24BDCDAE0]);
    sub_2489C18D4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_248A0B9C4()
{
  unint64_t result;

  result = qword_254463820;
  if (!qword_254463820)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationContent.Attributes, &type metadata for CoreTip.ConstellationContent.Attributes);
    atomic_store(result, (unint64_t *)&qword_254463820);
  }
  return result;
}

uint64_t sub_248A0BA00(_QWORD *a1)
{
  return CoreTip.ConstellationAction.encode(to:)(a1);
}

uint64_t _s19ConstellationActionVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    if (v10 == 1)
    {
      memcpy((void *)(a1 + 48), a2 + 6, 0x70uLL);
    }
    else
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v10;
      v12 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v12;
      v13 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v13;
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
      *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
      *(_QWORD *)(a1 + 112) = a2[14];
      v14 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v14;
      v15 = a2[19];
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = v15;
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
    }
    v16 = *(int *)(a3 + 32);
    v17 = (void *)(a1 + v16);
    v18 = (char *)a2 + v16;
    v19 = sub_248A44EB0();
    if (sub_2489BE834((uint64_t)v18, 1, v19))
    {
      v20 = sub_2489C330C(&qword_254464D40);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      sub_2489BE7E0((uint64_t)v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t _s19ConstellationActionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v7 = *(_QWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v7;
      v8 = *(_QWORD *)(a2 + 112);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = v8;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 1)
  {
    sub_2489DBC60(a1 + 48);
LABEL_6:
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0x70uLL);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v9;
  v10 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  sub_248A453F0();
  swift_bridgeObjectRelease();
LABEL_8:
  v11 = *(int *)(a3 + 32);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_248A44EB0();
  v15 = sub_2489BE834((uint64_t)v12, 1, v14);
  v16 = sub_2489BE834((uint64_t)v13, 1, v14);
  if (!v15)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    v18 = sub_2489C330C(&qword_254464D40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  sub_2489BE7E0((uint64_t)v12, 0, 1, v14);
  return a1;
}

_OWORD *_s19ConstellationActionVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  memcpy(a1 + 3, a2 + 3, 0x70uLL);
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_248A44EB0();
  if (sub_2489BE834((uint64_t)v9, 1, v10))
  {
    v11 = sub_2489C330C(&qword_254464D40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    sub_2489BE7E0((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s19ConstellationActionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) == 1)
    goto LABEL_4;
  v9 = *(_QWORD *)(a2 + 56);
  if (v9 == 1)
  {
    sub_2489DBC60(a1 + 48);
LABEL_4:
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0x70uLL);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
LABEL_6:
  v14 = *(int *)(a3 + 32);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_248A44EB0();
  v18 = sub_2489BE834((uint64_t)v15, 1, v17);
  v19 = sub_2489BE834((uint64_t)v16, 1, v17);
  if (!v18)
  {
    v20 = *(_QWORD *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    v21 = sub_2489C330C(&qword_254464D40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  sub_2489BE7E0((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t _s19ConstellationActionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248A0C160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2489C330C(&qword_254464D40);
    return sub_2489BE834(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t _s19ConstellationActionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_248A0C1E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2489C330C(&qword_254464D40);
    return sub_2489BE7E0(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

unint64_t sub_248A0C258()
{
  unint64_t result;

  result = qword_2577A54D0;
  if (!qword_2577A54D0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4BF74, &_s19ConstellationActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A54D0);
  }
  return result;
}

void CoreTip.ConstellationAsset.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t CoreTip.ConstellationAsset.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_248A453F0();
  return v1;
}

uint64_t sub_248A0C2CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_248A45DBC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_248A0C3A0(char a1)
{
  if ((a1 & 1) != 0)
    return 1701667182;
  else
    return 1701869940;
}

uint64_t sub_248A0C3C0()
{
  char *v0;

  return sub_248A0C3A0(*v0);
}

uint64_t sub_248A0C3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A0C2CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A0C3EC()
{
  sub_248A0C564();
  return sub_248A46074();
}

uint64_t sub_248A0C414()
{
  sub_248A0C564();
  return sub_248A46080();
}

void CoreTip.ConstellationAsset.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v4 = sub_2489C330C(&qword_2577A54D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v11[0] = *((_QWORD *)v1 + 2);
  v11[1] = v10;
  sub_2489BE100(a1, a1[3]);
  sub_248A0C564();
  sub_248A46008();
  v14 = v9;
  v13 = 0;
  sub_248A0C5A0();
  sub_248A45D50();
  if (!v2)
  {
    v12 = 1;
    sub_248A45D2C();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_2489BA808();
}

unint64_t sub_248A0C564()
{
  unint64_t result;

  result = qword_2577A54E0;
  if (!qword_2577A54E0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C23C, &_s18ConstellationAssetV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A54E0);
  }
  return result;
}

unint64_t sub_248A0C5A0()
{
  unint64_t result;

  result = qword_2577A54E8;
  if (!qword_2577A54E8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationAsset.AssetType, &type metadata for CoreTip.ConstellationAsset.AssetType);
    atomic_store(result, (unint64_t *)&qword_2577A54E8);
  }
  return result;
}

void CoreTip.ConstellationAsset.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v5 = sub_2489C330C(&qword_2577A54F0);
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BE100(a1, a1[3]);
  sub_248A0C564();
  sub_248A45FF0();
  if (!v2)
  {
    sub_248A0C718();
    sub_248A45CD8();
    v7 = sub_248A45CB4();
    v9 = v8;
    sub_2489C1598();
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v9;
  }
  sub_2489BCE44((uint64_t)a1);
  sub_2489BA808();
}

unint64_t sub_248A0C718()
{
  unint64_t result;

  result = qword_2577A54F8;
  if (!qword_2577A54F8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationAsset.AssetType, &type metadata for CoreTip.ConstellationAsset.AssetType);
    atomic_store(result, (unint64_t *)&qword_2577A54F8);
  }
  return result;
}

void sub_248A0C754(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  CoreTip.ConstellationAsset.init(from:)(a1, a2);
}

void sub_248A0C768(_QWORD *a1)
{
  CoreTip.ConstellationAsset.encode(to:)(a1);
}

uint64_t CoreTip.ConstellationAsset.AssetType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_248A45C60();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t CoreTip.ConstellationAsset.AssetType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6567616D69;
  else
    return 0x6C6F626D7973;
}

void sub_248A0C810(char *a1, char *a2)
{
  sub_2489FDE84(*a1, *a2);
}

unint64_t sub_248A0C820()
{
  unint64_t result;

  result = qword_2577A5500;
  if (!qword_2577A5500)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationAsset.AssetType, &type metadata for CoreTip.ConstellationAsset.AssetType);
    atomic_store(result, (unint64_t *)&qword_2577A5500);
  }
  return result;
}

void sub_248A0C85C()
{
  sub_248A0FC4C();
}

uint64_t sub_248A0C864()
{
  return sub_248A0FEB4();
}

void sub_248A0C86C()
{
  sub_248A10200();
}

uint64_t sub_248A0C874@<X0>(char *a1@<X8>)
{
  return CoreTip.ConstellationAsset.AssetType.init(rawValue:)(a1);
}

uint64_t sub_248A0C880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreTip.ConstellationAsset.AssetType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248A0C8A4()
{
  sub_248A0CBFC();
  return sub_248A4566C();
}

uint64_t sub_248A0C900()
{
  sub_248A0CBFC();
  return sub_248A45654();
}

uint64_t _s18ConstellationAssetVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18ConstellationAssetVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  sub_248A453F0();
  return a1;
}

uint64_t _s18ConstellationAssetVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18ConstellationAssetVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18ConstellationAssetVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationAsset()
{
  return &type metadata for CoreTip.ConstellationAsset;
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationAsset.AssetType()
{
  return &type metadata for CoreTip.ConstellationAsset.AssetType;
}

uint64_t _s18ConstellationAssetV9AssetTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_248A0CABC + 4 * byte_248A4BFF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248A0CAF0 + 4 * byte_248A4BFF0[v4]))();
}

uint64_t sub_248A0CAF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0CAF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A0CB00);
  return result;
}

uint64_t sub_248A0CB0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A0CB14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248A0CB18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0CB20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18ConstellationAssetV10CodingKeysOMa()
{
  return &_s18ConstellationAssetV10CodingKeysON;
}

unint64_t sub_248A0CB40()
{
  unint64_t result;

  result = qword_2577A5508;
  if (!qword_2577A5508)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C214, &_s18ConstellationAssetV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5508);
  }
  return result;
}

unint64_t sub_248A0CB80()
{
  unint64_t result;

  result = qword_2577A5510;
  if (!qword_2577A5510)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C184, &_s18ConstellationAssetV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5510);
  }
  return result;
}

unint64_t sub_248A0CBC0()
{
  unint64_t result;

  result = qword_2577A5518;
  if (!qword_2577A5518)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C1AC, &_s18ConstellationAssetV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5518);
  }
  return result;
}

unint64_t sub_248A0CBFC()
{
  unint64_t result;

  result = qword_2577A5520;
  if (!qword_2577A5520)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationAsset.AssetType, &type metadata for CoreTip.ConstellationAsset.AssetType);
    atomic_store(result, (unint64_t *)&qword_2577A5520);
  }
  return result;
}

uint64_t CoreTip.ConstellationContent.message.getter()
{
  return sub_2489BFE64();
}

uint64_t CoreTip.ConstellationContent.actions.getter()
{
  return sub_2489BFE64();
}

uint64_t CoreTip.ConstellationContent.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___ConstellationContent_asset + 16);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + OBJC_IVAR___ConstellationContent_asset);
  *(_QWORD *)(a1 + 16) = v2;
  return sub_248A453F0();
}

void sub_248A0CC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  char *v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)&v4[OBJC_IVAR___ConstellationContent_title] = a1;
  *(_QWORD *)&v4[OBJC_IVAR___ConstellationContent_message] = a2;
  *(_QWORD *)&v4[OBJC_IVAR___ConstellationContent_actions] = a3;
  v11 = &v4[OBJC_IVAR___ConstellationContent_asset];
  *(_OWORD *)v11 = *(_OWORD *)a4;
  *((_QWORD *)v11 + 2) = v10;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, sel_init);
  sub_2489BA868();
}

id CoreTip.ConstellationContent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CoreTip.ConstellationContent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_248A0CD54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x736E6F69746361 && a2 == 0xE700000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7465737361 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_248A45DBC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_248A0CEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A0CD54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A0CF1C()
{
  sub_2489B9B38();
  return sub_248A46074();
}

uint64_t sub_248A0CF44()
{
  sub_2489B9B38();
  return sub_248A46080();
}

id CoreTip.ConstellationContent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CoreTip.ConstellationContent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2489C330C(&qword_254463938);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489B6B34();
  sub_2489BE100(a1, a1[3]);
  sub_2489B9B38();
  sub_248A46008();
  sub_2489C330C(&qword_254463C58);
  sub_2489B9AD0(&qword_254463920, (uint64_t (*)(void))sub_248A0D184, MEMORY[0x24BEE12A0]);
  sub_2489C2750();
  if (!v1)
  {
    sub_2489C2750();
    sub_2489C330C(&qword_254463C68);
    sub_2489B9A64(&qword_254463928, &qword_254463910, (uint64_t)&protocol conformance descriptor for CoreTip.ConstellationAction, MEMORY[0x24BEE12A0]);
    sub_2489C1BC0();
    sub_248A0D1C0();
    sub_2489C1BC0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_248A0D184()
{
  unint64_t result;

  result = qword_254463900;
  if (!qword_254463900)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText, &type metadata for CoreTip.ConstellationText);
    atomic_store(result, (unint64_t *)&qword_254463900);
  }
  return result;
}

unint64_t sub_248A0D1C0()
{
  unint64_t result;

  result = qword_254463908;
  if (!qword_254463908)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationAsset, &type metadata for CoreTip.ConstellationAsset);
    atomic_store(result, (unint64_t *)&qword_254463908);
  }
  return result;
}

uint64_t sub_248A0D1FC(_QWORD *a1)
{
  return CoreTip.ConstellationContent.encode(to:)(a1);
}

void CoreTip.ConstellationContent.Attributes.glyph.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

void CoreTip.ConstellationContent.Attributes.alt.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

void CoreTip.ConstellationContent.Attributes.stringId.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

uint64_t CoreTip.ConstellationContent.Attributes.providerId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t CoreTip.ConstellationContent.Attributes.personalizationId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

void CoreTip.ConstellationContent.Attributes.href.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

void CoreTip.ConstellationContent.Attributes.color.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

uint64_t sub_248A0D2D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x6870796C67 && a2 == 0xE500000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7629921 && a2 == 0xE300000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6449676E69727473 && a2 == 0xE800000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x72656469766F7270 && a2 == 0xEA00000000006449;
        if (v8 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x8000000248A505B0 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 1717924456 && a2 == 0xE400000000000000;
          if (v9 || (sub_248A45DBC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v11 = sub_248A45DBC();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

void sub_248A0D578()
{
  sub_248A45F90();
  sub_248A45F9C();
  sub_248A45FD8();
  sub_2489C0648();
}

void sub_248A0D5B4()
{
  sub_248A0D578();
}

uint64_t sub_248A0D5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A0D2D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A0D5F0()
{
  sub_2489CA294();
  return sub_248A46074();
}

uint64_t sub_248A0D618()
{
  sub_2489CA294();
  return sub_248A46080();
}

void CoreTip.ConstellationContent.Attributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_2489C330C(&qword_254463010);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_2489B6B34();
  sub_2489BE100(a1, a1[3]);
  sub_2489CA294();
  sub_248A46008();
  sub_248A45CFC();
  if (!v6)
  {
    sub_2489C014C();
    sub_2489C014C();
    sub_2489C0BD0();
    sub_2489C0BD0();
    sub_2489C014C();
    sub_2489C014C();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_2489BA808();
}

void sub_248A0D828(_QWORD *a1)
{
  CoreTip.ConstellationContent.Attributes.encode(to:)(a1);
}

uint64_t CoreTip.ConstellationContent.Color.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_248A45C60();
  result = swift_bridgeObjectRelease();
  v4 = 15;
  if (v2 < 0xF)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t CoreTip.ConstellationContent.Color.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248A0D8CC + 4 * byte_248A4C29B[*v0]))(0x6F43746E65636361, 0xEB00000000726F6CLL);
}

uint64_t sub_248A0D8CC()
{
  return 0x7261646E6F636573;
}

uint64_t sub_248A0D8F4()
{
  return 0x6C426D6574737973;
}

unint64_t sub_248A0D918()
{
  return 0xD000000000000010;
}

unint64_t sub_248A0D99C()
{
  return 0xD000000000000011;
}

uint64_t sub_248A0DA78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2489FDE78(*a1, *a2);
}

unint64_t sub_248A0DA88()
{
  unint64_t result;

  result = qword_2577A5548;
  if (!qword_2577A5548)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationContent.Color, &type metadata for CoreTip.ConstellationContent.Color);
    atomic_store(result, (unint64_t *)&qword_2577A5548);
  }
  return result;
}

void sub_248A0DAC4()
{
  sub_248A0FC58();
}

uint64_t sub_248A0DACC()
{
  return sub_248A0FE7C();
}

void sub_248A0DAD4()
{
  sub_248A1025C();
}

uint64_t sub_248A0DADC@<X0>(char *a1@<X8>)
{
  return CoreTip.ConstellationContent.Color.init(rawValue:)(a1);
}

uint64_t sub_248A0DAE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreTip.ConstellationContent.Color.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for CoreTip.ConstellationContent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreTip.ConstellationContent.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t _s20ConstellationContentC10AttributesVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s20ConstellationContentC10AttributesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

uint64_t _s20ConstellationContentC10AttributesVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s20ConstellationContentC10AttributesVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t _s20ConstellationContentC10AttributesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20ConstellationContentC10AttributesVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationContent.Attributes()
{
  return &type metadata for CoreTip.ConstellationContent.Attributes;
}

uint64_t _s20ConstellationContentC5ColorOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 14) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v5 = v6 - 15;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s20ConstellationContentC5ColorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_248A0DECC + 4 * byte_248A4C2AF[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_248A0DF00 + 4 * byte_248A4C2AA[v4]))();
}

uint64_t sub_248A0DF00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0DF08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A0DF10);
  return result;
}

uint64_t sub_248A0DF1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A0DF24);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_248A0DF28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0DF30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationContent.Color()
{
  return &type metadata for CoreTip.ConstellationContent.Color;
}

unint64_t sub_248A0DF50()
{
  unint64_t result;

  result = qword_2577A5550;
  if (!qword_2577A5550)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C544, &_s20ConstellationContentC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5550);
  }
  return result;
}

unint64_t sub_248A0DF90()
{
  unint64_t result;

  result = qword_2577A5558;
  if (!qword_2577A5558)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4C5FC, &_s20ConstellationContentC10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5558);
  }
  return result;
}

uint64_t CoreTip.ConstellationText.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_248A453F0();
  return v1;
}

uint64_t CoreTip.ConstellationText.attrs.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_2489C246C(v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], a1);
}

uint64_t CoreTip.ConstellationText.marks.getter()
{
  return sub_248A453F0();
}

uint64_t sub_248A0E040(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7372747461 && a2 == 0xE500000000000000;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x736B72616DLL && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_248A45DBC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_248A0E1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A0E040(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A0E1E8()
{
  sub_2489BB7D4();
  return sub_248A46074();
}

uint64_t sub_248A0E210()
{
  sub_2489BB7D4();
  return sub_248A46080();
}

void CoreTip.ConstellationText.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2489BED74();
  v2 = v1;
  v3 = sub_2489C330C(&qword_254463930);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_2489B6B34();
  sub_2489C3B30();
  sub_2489BE100(v2, v2[3]);
  sub_2489BB7D4();
  sub_248A46008();
  sub_248A0E434();
  sub_248A45D50();
  if (!v0)
  {
    sub_248A45CFC();
    sub_2489BA8E8();
    sub_2489C0BE0();
    sub_2489C6D1C();
    sub_248A0B9C4();
    sub_2489C015C();
    sub_2489C330C(&qword_254463C48);
    sub_2489BB6F4(&qword_254463918, (uint64_t (*)(void))sub_248A0E470, MEMORY[0x24BEE12A0]);
    sub_248A45D20();
  }
  sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_2489BA808();
}

unint64_t sub_248A0E434()
{
  unint64_t result;

  result = qword_2544638F0;
  if (!qword_2544638F0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.ContentType, &type metadata for CoreTip.ConstellationText.ContentType);
    atomic_store(result, (unint64_t *)&qword_2544638F0);
  }
  return result;
}

unint64_t sub_248A0E470()
{
  unint64_t result;

  result = qword_2544638F8;
  if (!qword_2544638F8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.Mark, &type metadata for CoreTip.ConstellationText.Mark);
    atomic_store(result, (unint64_t *)&qword_2544638F8);
  }
  return result;
}

uint64_t sub_248A0E4AC(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_2489BB694(v4, v3);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_248A0E560()
{
  CoreTip.ConstellationText.encode(to:)();
}

uint64_t CoreTip.ConstellationText.ContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248A0E598 + 4 * byte_248A4C6D4[*v0]))(112, 0xE100000000000000);
}

unint64_t sub_248A0E598()
{
  return 0xD000000000000010;
}

uint64_t sub_248A0E5B4()
{
  return 0x6C6F626D7973;
}

uint64_t sub_248A0E5C8()
{
  return 1954047348;
}

void sub_248A0E5D8(char *a1)
{
  sub_2489FDF78(*a1);
}

void sub_248A0E5E4()
{
  sub_248A0FC7C();
}

void sub_248A0E5EC(uint64_t a1)
{
  char *v1;

  sub_248A0FF48(a1, *v1);
}

void sub_248A0E5F4()
{
  sub_248A10194();
}

uint64_t sub_248A0E5FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreTip.ConstellationText.ContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248A0E620()
{
  sub_2489B68F8();
  return sub_248A45654();
}

uint64_t CoreTip.ConstellationText.Mark.attrs.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_2489C246C(v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

void CoreTip.ConstellationText.Mark.MarkType.init(rawValue:)(char *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_248A45C60();
  sub_2489C06C8();
  if (v1 == 1)
    v3 = 1;
  else
    v3 = 2;
  if (!v1)
    v3 = 0;
  *a1 = v3;
  sub_2489B6AF4();
}

uint64_t CoreTip.ConstellationText.Mark.MarkType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F43746E65636361;
  else
    return 97;
}

void sub_248A0E730(char *a1, char *a2)
{
  sub_2489FDEFC(*a1, *a2);
}

void sub_248A0E73C()
{
  sub_248A0FCB4();
}

uint64_t sub_248A0E744()
{
  return sub_248A0FEFC();
}

void sub_248A0E74C()
{
  sub_248A101A0();
}

void sub_248A0E754(char *a1@<X8>)
{
  CoreTip.ConstellationText.Mark.MarkType.init(rawValue:)(a1);
}

uint64_t sub_248A0E760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreTip.ConstellationText.Mark.MarkType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248A0E784()
{
  sub_248A0F790();
  return sub_248A4566C();
}

uint64_t sub_248A0E7E0()
{
  sub_248A0F790();
  return sub_248A45654();
}

uint64_t sub_248A0E82C()
{
  sub_248A0E9B0();
  return sub_248A46074();
}

uint64_t sub_248A0E854()
{
  sub_248A0E9B0();
  return sub_248A46080();
}

void CoreTip.ConstellationText.Mark.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2489BED74();
  v2 = v1;
  v3 = sub_2489C330C(&qword_254462EA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_2489B6B34();
  sub_2489C3B30();
  sub_2489BE100(v2, v2[3]);
  sub_248A0E9B0();
  sub_248A46008();
  sub_248A0E9EC();
  sub_2489C015C();
  if (!v0)
  {
    sub_2489BA8E8();
    sub_2489C0BE0();
    sub_2489C6D1C();
    sub_248A0B9C4();
    sub_2489C015C();
  }
  sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_2489BA808();
}

unint64_t sub_248A0E9B0()
{
  unint64_t result;

  result = qword_254462FA8;
  if (!qword_254462FA8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CB54, &_s17ConstellationTextV4MarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462FA8);
  }
  return result;
}

unint64_t sub_248A0E9EC()
{
  unint64_t result;

  result = qword_254462E98;
  if (!qword_254462E98)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.Mark.MarkType, &type metadata for CoreTip.ConstellationText.Mark.MarkType);
    atomic_store(result, (unint64_t *)&qword_254462E98);
  }
  return result;
}

void CoreTip.ConstellationText.Mark.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  sub_2489BED74();
  v2 = v1;
  v4 = v3;
  v5 = sub_2489C330C(&qword_254462FC0);
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BE100(v2, v2[3]);
  sub_248A0E9B0();
  sub_248A45FF0();
  if (!v0)
  {
    sub_248A0EB68();
    sub_2489C1BCC();
    sub_2489BB75C();
    sub_2489C1BCC();
    sub_2489BFA3C();
    *(_BYTE *)v4 = v7;
    *(_OWORD *)(v4 + 8) = v7;
    *(_OWORD *)(v4 + 24) = v8;
    *(_OWORD *)(v4 + 40) = v9;
    *(_OWORD *)(v4 + 56) = v10;
    *(_OWORD *)(v4 + 72) = v11;
    *(_OWORD *)(v4 + 88) = v12;
    *(_OWORD *)(v4 + 104) = v13;
  }
  sub_2489BCE44((uint64_t)v2);
  sub_2489BA808();
}

unint64_t sub_248A0EB68()
{
  unint64_t result;

  result = qword_254462FA0;
  if (!qword_254462FA0)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.Mark.MarkType, &type metadata for CoreTip.ConstellationText.Mark.MarkType);
    atomic_store(result, (unint64_t *)&qword_254462FA0);
  }
  return result;
}

unint64_t sub_248A0EBA8()
{
  unint64_t result;

  result = qword_2577A5560;
  if (!qword_2577A5560)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.ContentType, &type metadata for CoreTip.ConstellationText.ContentType);
    atomic_store(result, (unint64_t *)&qword_2577A5560);
  }
  return result;
}

unint64_t sub_248A0EBE8()
{
  unint64_t result;

  result = qword_2577A5568;
  if (!qword_2577A5568)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.Mark.MarkType, &type metadata for CoreTip.ConstellationText.Mark.MarkType);
    atomic_store(result, (unint64_t *)&qword_2577A5568);
  }
  return result;
}

void sub_248A0EC24()
{
  CoreTip.ConstellationText.Mark.init(from:)();
}

void sub_248A0EC38()
{
  CoreTip.ConstellationText.Mark.encode(to:)();
}

uint64_t _s17ConstellationTextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  sub_248A453F0();
  if (v5 == 1)
  {
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x70uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v8 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v8;
    v9 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v9;
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_248A453F0();
  return a1;
}

uint64_t _s17ConstellationTextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v7;
      v8 = *(_QWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v8;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_2489DBC60(a1 + 24);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x70uLL);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
LABEL_8:
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17ConstellationTextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    v5 = *(_QWORD *)(a2 + 32);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      v8 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2489DBC60(a1 + 24);
  }
  memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x70uLL);
LABEL_6:
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17ConstellationTextVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17ConstellationTextVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for CoreTip.ConstellationText.ContentType()
{
  sub_2489BF7B4();
}

uint64_t _s17ConstellationTextV4MarkVwxx(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17ConstellationTextV4MarkVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (void *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 == 1)
  {
    memcpy(v3, (const void *)(a2 + 8), 0x70uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    v7 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v7;
    v8 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v8;
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
  }
  return a1;
}

uint64_t _s17ConstellationTextV4MarkVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (void *)(a1 + 8);
  v5 = (const void *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v9;
      v10 = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v10;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60(a1 + 8);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    memcpy(v4, v5, 0x70uLL);
    return a1;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  return a1;
}

void *_s17ConstellationTextV4MarkVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t _s17ConstellationTextV4MarkVwta(uint64_t a1, uint64_t a2)
{
  void *v3;
  const void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (void *)(a1 + 8);
  v4 = (const void *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      v9 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_2489DBC60((uint64_t)v3);
  }
  memcpy(v3, v4, 0x70uLL);
  return a1;
}

uint64_t _s17ConstellationTextV4MarkVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;
  int v4;
  BOOL v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 120))
    {
      v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v4 = v3 - 1;
      if (v4 < 0)
        v4 = -1;
      v5 = __OFSUB__(v4, 1);
      v2 = v4 - 1;
      if (v2 < 0 != v5)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17ConstellationTextV4MarkVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

void type metadata accessor for CoreTip.ConstellationText.Mark.MarkType()
{
  sub_2489BF7B4();
}

uint64_t _s17ConstellationTextV4MarkV8MarkTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_248A0F610 + 4 * byte_248A4C6DD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248A0F644 + 4 * byte_248A4C6D8[v4]))();
}

uint64_t sub_248A0F644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0F64C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A0F654);
  return result;
}

uint64_t sub_248A0F660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A0F668);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248A0F66C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0F674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17ConstellationTextV4MarkV10CodingKeysOMa()
{
  return &_s17ConstellationTextV4MarkV10CodingKeysON;
}

unint64_t sub_248A0F694()
{
  unint64_t result;

  result = qword_2577A5570;
  if (!qword_2577A5570)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CA74, &_s17ConstellationTextV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5570);
  }
  return result;
}

unint64_t sub_248A0F6D4()
{
  unint64_t result;

  result = qword_2577A5578;
  if (!qword_2577A5578)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CB2C, &_s17ConstellationTextV4MarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2577A5578);
  }
  return result;
}

unint64_t sub_248A0F714()
{
  unint64_t result;

  result = qword_254462FB8;
  if (!qword_254462FB8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CA9C, &_s17ConstellationTextV4MarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462FB8);
  }
  return result;
}

unint64_t sub_248A0F754()
{
  unint64_t result;

  result = qword_254462FB0;
  if (!qword_254462FB0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CAC4, &_s17ConstellationTextV4MarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254462FB0);
  }
  return result;
}

unint64_t sub_248A0F790()
{
  unint64_t result;

  result = qword_254462F98;
  if (!qword_254462F98)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.ConstellationText.Mark.MarkType, &type metadata for CoreTip.ConstellationText.Mark.MarkType);
    atomic_store(result, (unint64_t *)&qword_254462F98);
  }
  return result;
}

uint64_t _s19IneligibilityReasonOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE7)
  {
    if (a2 + 25 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 25) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 26;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v5 = v6 - 26;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s19IneligibilityReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_248A0F8A0 + 4 * byte_248A4CC05[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_248A0F8D4 + 4 * byte_248A4CC00[v4]))();
}

uint64_t sub_248A0F8D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0F8DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A0F8E4);
  return result;
}

uint64_t sub_248A0F8F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A0F8F8);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_248A0F8FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0F904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A0F910(char a1)
{
  return dword_248A4CD48[a1];
}

uint64_t sub_248A0F924(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248A0F950 + 4 * byte_248A4CC0A[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_248A0F950()
{
  return 0x6669636570736E75;
}

uint64_t sub_248A0F970()
{
  return 0x4470704173706974;
}

unint64_t sub_248A0F994()
{
  return 0xD00000000000001BLL;
}

void sub_248A0FBB8(uint64_t a1)
{
  sub_248A0FBDC(a1, (void (*)(uint64_t))sub_2489D72C8);
}

void sub_248A0FBC4()
{
  sub_248A0FC88();
}

void sub_248A0FBD0(uint64_t a1)
{
  sub_248A0FBDC(a1, (void (*)(uint64_t))sub_2489DFC1C);
}

void sub_248A0FBDC(uint64_t a1, void (*a2)(uint64_t))
{
  sub_2489C1854();
  a2(a1);
  sub_2489C2498();
  sub_2489BDA70();
  sub_2489BDA5C();
  sub_2489C0648();
}

void sub_248A0FC28()
{
  sub_248A10268();
}

void sub_248A0FC4C()
{
  sub_248A10200();
}

void sub_248A0FC58()
{
  sub_248A10268();
}

void sub_248A0FC7C()
{
  sub_248A0FC88();
}

void sub_248A0FC88()
{
  uint64_t v0;

  v0 = sub_2489C1854();
  sub_2489C06D4(v0);
  sub_2489BDA5C();
  sub_2489C0648();
}

void sub_248A0FCB4()
{
  sub_248A101A0();
}

void sub_248A0FCC0()
{
  sub_248A10128();
}

void sub_248A0FCCC()
{
  sub_2489C1854();
  sub_2489BF664();
  sub_2489BDA5C();
  sub_2489C0648();
}

uint64_t sub_248A0FCF4(uint64_t a1, unsigned __int8 a2)
{
  sub_2489D72C8(a2);
  sub_2489BFB2C();
  return sub_2489C3BB4();
}

void sub_248A0FD1C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_248A0FD68()
{
  sub_2489C2498();
  return sub_2489C3BB4();
}

void sub_248A0FDFC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_248A0FE38()
{
  sub_2489C2498();
  return sub_2489C3BB4();
}

uint64_t sub_248A0FE7C()
{
  CoreTip.ConstellationContent.Color.rawValue.getter();
  sub_2489BFB2C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248A0FEB4()
{
  sub_2489C2498();
  return sub_2489C3BB4();
}

uint64_t sub_248A0FEFC()
{
  sub_2489C2498();
  return sub_2489C3BB4();
}

void sub_248A0FF48(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_248A0FF7C()
{
  sub_2489BF858();
  sub_2489C2498();
  return sub_2489C3BB4();
}

uint64_t sub_248A0FFBC()
{
  sub_2489C2498();
  return sub_2489C3BB4();
}

void sub_248A10014(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_248A10048()
{
  sub_2489C2498();
  return sub_2489C3BB4();
}

void sub_248A100F8()
{
  sub_248A45F9C();
  sub_2489BA7D0();
}

void sub_248A1011C()
{
  sub_248A10268();
}

void sub_248A10128()
{
  sub_2489C279C();
  sub_2489C2498();
  sub_2489BDA70();
  sub_2489BDA5C();
  sub_2489C0648();
}

void sub_248A10194()
{
  sub_2489B9CF8();
}

void sub_248A101A0()
{
  sub_2489C279C();
  sub_2489C2498();
  sub_2489BDA70();
  sub_2489BDA5C();
  sub_2489C0648();
}

void sub_248A10200()
{
  sub_2489C279C();
  sub_2489C2498();
  sub_2489BDA70();
  sub_2489BDA5C();
  sub_2489C0648();
}

void sub_248A1025C()
{
  sub_248A10268();
}

void sub_248A10268()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  v1 = sub_2489BFE7C();
  v0(v1);
  sub_2489C2498();
  sub_2489BDA70();
  sub_2489BDA5C();
  sub_2489C0648();
}

void sub_248A102AC()
{
  sub_2489C279C();
  sub_2489BF664();
  sub_2489BDA5C();
  sub_2489C0648();
}

void sub_248A102D4()
{
  sub_2489B9CF8();
}

void sub_248A102E0()
{
  sub_248A102F8();
}

void sub_248A102EC()
{
  sub_248A102F8();
}

void sub_248A102F8()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  sub_2489BFE7C();
  v0(v1);
  sub_2489C2498();
  sub_2489BDA70();
  sub_2489BDA5C();
  sub_2489C0648();
}

uint64_t sub_248A10338()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  __int128 v7[2];
  unsigned __int8 v8;

  v1 = (uint64_t)(v0 + 4);
  v2 = v0[7];
  v3 = v0[8];
  sub_2489BE100(v0 + 4, v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 64))(v7, v2, v3);
  v4 = v8;
  result = swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    swift_unownedRetainStrong();
    swift_retain();
    sub_2489BF7F0();
    sub_2489C4880(v1, (uint64_t)v7);
    v6 = swift_allocObject();
    sub_2489B8F74(v7, v6 + 16);
    sub_248A3742C((uint64_t)&unk_2577A5590, v6);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_248A1041C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_248A10434()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD **)(v0 + 56);
  type metadata accessor for CoreTipRecord();
  sub_2489BE100(v1, v1[3]);
  sub_2489C088C();
  sub_248A1CD98();
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
  {
    v5 = sub_2489C04CC();
    sub_248A209D8((uint64_t)v5, v6, v7, v8);
    sub_2489C04CC();
    sub_248A20B24();
    sub_2489BF7F0();
  }
  else
  {
    if (qword_254464240 != -1)
      swift_once();
    v9 = type metadata accessor for logger();
    sub_2489C401C(v9, (uint64_t)&unk_254464228);
    sub_248A45A74();
    sub_248A4557C();
    sub_2489C088C();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_248A106B0(unint64_t result)
{
  if (result >= 0x1A)
    return 26;
  return result;
}

uint64_t sub_248A106C0(uint64_t result)
{
  return result;
}

void sub_248A106C8()
{
  sub_248A0FCCC();
}

void sub_248A106E0()
{
  sub_248A100F8();
}

void sub_248A106E8()
{
  sub_248A102AC();
}

void sub_248A10700(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = sub_248A106B0(*a1);
  sub_2489BA7D0();
}

void sub_248A10724(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = sub_248A106C0(*v1);
  sub_2489BA7D0();
}

unint64_t sub_248A1074C()
{
  unint64_t result;

  result = qword_2577A5580;
  if (!qword_2577A5580)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CCCC, &_s19IneligibilityReasonON);
    atomic_store(result, &qword_2577A5580);
  }
  return result;
}

uint64_t sub_248A10788()
{
  sub_248A10830();
  return sub_248A45678();
}

uint64_t sub_248A107E4()
{
  sub_248A10830();
  return sub_248A45660();
}

unint64_t sub_248A10830()
{
  unint64_t result;

  result = qword_254463CD0;
  if (!qword_254463CD0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CC54, &_s19IneligibilityReasonON);
    atomic_store(result, (unint64_t *)&qword_254463CD0);
  }
  return result;
}

uint64_t sub_248A1086C()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_248A10890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2489F26C0;
  return sub_248A1041C(a1, v1 + 16);
}

void CoreTip.viewDidAppear(date:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int16 v12;
  _QWORD v13[6];

  sub_2489BECFC();
  v3 = v2;
  v4 = sub_2489BA858();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489C62C0();
  sub_2489BE100(v0 + 4, v0[7]);
  sub_2489BD9D4();
  sub_248A13264();
  if ((v0 & 1) == 0)
    static CoreTip.setLastTipDisplayed(id:date:)(v0[2], v0[3], v3);
  CoreTip.status.getter(v13);
  if (LOBYTE(v13[0]) != 1)
  {
    if (qword_254462F70 != -1)
      swift_once();
    v7 = sub_2489BEE68();
    sub_2489C401C(v7, (uint64_t)&unk_254462F58);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_248A45A74();
    sub_2489C1BE8();
    sub_248A453F0();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489C5160();
    CoreTip.status.getter(&v12);
    CoreTip.Status.description.getter();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
  }
  sub_248A13298();
  sub_248A1328C();
  sub_2489BF7F0();
  v9 = v0[2];
  v8 = v0[3];
  sub_2489BFB44(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v8;
  sub_2489BFB44(v11 + v10, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  sub_248A453F0();
  sub_248A3742C((uint64_t)&unk_2577A55A0, v11);
  sub_2489BA87C();
  swift_release();
  sub_2489B71E4();
}

uint64_t sub_248A10AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  return swift_task_switch();
}

uint64_t sub_248A10B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_248A13210();
  sub_2489C6D30();
  if (v0)
  {
    if (qword_2577A4DD0 != -1)
      swift_once();
    v2 = sub_2489BEE68();
    sub_2489C401C(v2, (uint64_t)&unk_2577A5758);
    sub_2489BF86C();
    sub_248A45A74();
    sub_2489C1BE8();
    sub_2489C0BF4();
    sub_2489C04F4();
    sub_2489C5160();
    sub_2489C0A40();
    sub_2489BECF0();
    sub_2489C06E0();
    sub_2489BDA70();
    sub_248A13278();
  }
  else
  {
    sub_248A132CC();
    if ((sub_248A13250() & 1) != 0)
      sub_248A13248();
  }
  return sub_2489C1640(*(uint64_t (**)(void))(v1 + 8));
}

Swift::Void __swiftcall CoreTip.viewDidDisappear(viewDisplayDuration:)(Swift::Double_optional viewDisplayDuration)
{
  char v1;
  _QWORD *v2;
  char v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];

  v3 = v1;
  v4 = *(double *)&viewDisplayDuration.is_nil;
  if ((v1 & 1) == 0)
  {
    v5 = CoreTip.displayDuration.getter();
    sub_248A091F8(v5 + v4);
  }
  swift_unownedRetainStrong();
  swift_retain();
  sub_2489BA4B8();
  v7 = v2[2];
  v6 = v2[3];
  v8 = v2[7];
  v9 = v2[8];
  sub_2489BE100(v2 + 4, v8);
  v10 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 64);
  sub_2489BEC8C();
  v10(&v13, v8, v9);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v6;
  *(double *)(v11 + 32) = v4;
  *(_BYTE *)(v11 + 40) = v3 & 1;
  v12 = v14[0];
  *(_OWORD *)(v11 + 48) = v13;
  *(_OWORD *)(v11 + 64) = v12;
  *(_OWORD *)(v11 + 77) = *(_OWORD *)((char *)v14 + 13);
  sub_248A3742C((uint64_t)&unk_2577A55B0, v11);
  sub_2489BA87C();
  swift_release();
}

uint64_t sub_248A10CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 72) = a4;
  *(_QWORD *)(v6 + 80) = a6;
  *(_BYTE *)(v6 + 88) = a5;
  *(_QWORD *)(v6 + 56) = a2;
  *(_QWORD *)(v6 + 64) = a3;
  *(_QWORD *)(v6 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_248A10D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 88) & 1;
  type metadata accessor for CoreTipRecord();
  sub_248A1E35C(v4, v3, v1, v6, *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), v5);
  if ((sub_248A13250() & 1) != 0)
    sub_248A13248();
  return sub_2489C1640(*(uint64_t (**)(void))(v0 + 8));
}

void sub_248A10E2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(__int128 *__return_ptr, uint64_t, uint64_t);
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  __int128 v34;
  _BYTE v35[29];

  sub_2489BECFC();
  v2 = v0;
  v4 = v3;
  v5 = sub_2489BA858();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5, v8);
  sub_2489C62C0();
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489C27C8();
  if (qword_254464F38)
  {
    v9 = qword_254464F30;
    v10 = qword_254464F38;
  }
  else
  {
    v32 = v0;
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v9 = qword_25446C6D0;
      v10 = qword_25446C6D8;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v11 = sub_2489D7B5C();
      if (v12)
        v9 = v11;
      else
        v9 = 0;
      if (v12)
        v10 = v12;
      else
        v10 = 0xE000000000000000;
    }
    sub_248A453F0();
    v2 = v32;
  }
  if (v9 == 0x6C7070612E6D6F63 && v10 == 0xEF64737069742E65)
  {
    sub_248A453F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_248A45DBC();
    sub_248A453F0();
    sub_2489BBC58();
    if ((v14 & 1) == 0)
    {
      if (qword_254464E68 != -1)
        swift_once();
      if (byte_254464E60 == 1)
      {
        if (qword_2544641F8 != -1)
          swift_once();
        v15 = sub_2489C330C(&qword_254464200);
        v16 = sub_2489C401C(v15, (uint64_t)qword_25446C698);
        swift_beginAccess();
        v17 = type metadata accessor for DeviceProfile();
        if (!sub_2489BE834(v16, 1, v17) && *(_BYTE *)(v16 + 2) == 2)
        {
          v33 = v4;
          v18 = v2 + 4;
          v19 = v2[7];
          v20 = v2[8];
          v21 = sub_2489BE100(v2 + 4, v19);
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 64))(&v34, v19, v20);
          sub_248A13264();
          if ((v21 & 1) == 0)
            static CoreTip.setLastTipDisplayed(id:date:)(v2[2], v2[3], v33);
          sub_248A13298();
          sub_248A1328C();
          sub_2489BF7F0();
          v22 = v2[3];
          v31 = v2[2];
          v24 = v2[7];
          v23 = v2[8];
          sub_2489BE100(v18, v24);
          v25 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 64);
          sub_248A453F0();
          v25(&v34, v24, v23);
          sub_2489BFB44(v1, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
          v26 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
          v27 = (v7 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v31;
          *(_QWORD *)(v28 + 24) = v22;
          sub_2489BFB44(v28 + v26, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
          v29 = (_OWORD *)(v28 + v27);
          v30 = *(_OWORD *)v35;
          *v29 = v34;
          v29[1] = v30;
          *(_OWORD *)((char *)v29 + 29) = *(_OWORD *)&v35[13];
          sub_248A3742C((uint64_t)&unk_2577A55E8, v28);
          sub_2489BA4B8();
          swift_release();
        }
      }
    }
  }
  sub_2489B71E4();
}

uint64_t sub_248A111CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  return swift_task_switch();
}

uint64_t sub_248A111EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_248A13210();
  sub_2489C6D30();
  if (v0)
  {
    if (qword_254462F70 != -1)
      swift_once();
    v2 = sub_2489BEE68();
    sub_2489C401C(v2, (uint64_t)&unk_254462F58);
    sub_2489BF86C();
    sub_248A45A74();
    sub_2489C1BE8();
    sub_2489C0BF4();
    sub_2489C04F4();
    sub_2489C5160();
    sub_2489C0A40();
    sub_2489BECF0();
    sub_2489C06E0();
    sub_2489BDA70();
    sub_248A13278();
  }
  else
  {
    sub_248A132CC();
    sub_248A1E35C(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), 0, 1, *(_QWORD *)(*(_QWORD *)(v1 + 80) + 32), *(unsigned __int8 *)(*(_QWORD *)(v1 + 80) + 40), *(_QWORD *)(v1 + 48));
    if ((sub_248A13250() & 1) != 0)
      sub_248A13248();
  }
  return sub_2489C1640(*(uint64_t (**)(void))(v1 + 8));
}

void CoreTip.actionButtonTapped(actionID:linkURL:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _BYTE v15[80];

  sub_2489BECFC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_2489C330C(&qword_254464D40);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10);
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489C27C8();
  if (byte_254464F41 == 1)
  {
    sub_2489BE100(v0 + 4, v0[7]);
    sub_2489BD9D4();
    swift_bridgeObjectRelease();
    if (v15[51] == 1)
    {
      swift_unownedRetainStrong();
      swift_retain();
      swift_release();
      v12 = v0[2];
      v11 = v0[3];
      sub_2489BE840(v2, (uint64_t)&v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
      v13 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = v12;
      v14[3] = v11;
      v14[4] = v6;
      v14[5] = v4;
      sub_2489BE7EC((uint64_t)&v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v14 + v13);
      sub_248A453F0();
      sub_248A453F0();
      sub_248A3742C((uint64_t)&unk_2577A55C0, (uint64_t)v14);
      sub_2489BA4B8();
      sub_2489BF7F0();
    }
  }
  sub_2489B71E4();
}

uint64_t sub_248A11464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_2489C330C(&qword_254464970);
  v6[8] = swift_task_alloc();
  v6[9] = swift_task_alloc();
  v7 = sub_248A452AC();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A11500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_254464530 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  swift_retain();
  sub_2489BEC8C();
  sub_2489C4F84();
  sub_2489BBCA8();
  sub_2489B71DC();
  if (sub_2489BE834(v2, 1, v1) == 1)
  {
    sub_2489C32D0(*(_QWORD *)(v0 + 72), &qword_254464970);
LABEL_10:
    if (qword_254462F70 != -1)
      swift_once();
    v10 = sub_2489BEE68();
    sub_2489C401C(v10, (uint64_t)&unk_254462F58);
    sub_248A132B8();
    sub_248A45A74();
    sub_2489C1BE8();
    sub_2489BEEC0();
    sub_2489C5160();
    sub_248A13220();
    sub_2489BDA70();
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 64);
  sub_2489BFB44(v3, *(_QWORD *)(v0 + 72), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_2489BFB44(v5, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_2489BBCBC();
  sub_2489BEDC4();
  v7 = v6;
  sub_248A13270(v6, &qword_254464970);
  if (!v7)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    goto LABEL_10;
  }
  sub_2489C7D1C();
  if ((v8 & 1) != 0)
    sub_2489D6930(v7, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  v9 = *(_QWORD *)(v0 + 88);
  sub_2489BF7F0();
  sub_2489BA538(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_2489BF670(*(uint64_t (**)(void))(v0 + 8));
}

Swift::Void __swiftcall CoreTip.tipViewTapped()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v1 = v0;
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489C27C8();
  if (byte_254464F41 == 1)
  {
    v2 = v0[7];
    v3 = v0[8];
    sub_2489BE100(v0 + 4, v2);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 64))(&v8, v2, v3);
    v4 = v9;
    swift_bridgeObjectRelease();
    if (v4 == 1)
    {
      sub_248A13298();
      swift_retain();
      sub_2489BF7F0();
      v6 = v1[2];
      v5 = v1[3];
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v6;
      *(_QWORD *)(v7 + 24) = v5;
      sub_248A453F0();
      sub_248A3742C((uint64_t)&unk_2577A55D0, v7);
      swift_release();
      sub_2489BA87C();
    }
  }
}

uint64_t sub_248A117DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_2489C330C(&qword_254464970);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v4 = sub_248A452AC();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A11874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_254464530 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  swift_retain();
  sub_2489BEC8C();
  sub_2489C4F84();
  sub_2489BBCA8();
  sub_2489B71DC();
  if (sub_2489BE834(v2, 1, v1) == 1)
  {
    sub_2489C32D0(*(_QWORD *)(v0 + 48), &qword_254464970);
LABEL_10:
    if (qword_254462F70 != -1)
      swift_once();
    v10 = sub_2489BEE68();
    sub_2489C401C(v10, (uint64_t)&unk_254462F58);
    sub_248A132B8();
    sub_248A45A74();
    sub_2489C1BE8();
    sub_2489BEEC0();
    sub_2489C5160();
    sub_248A13220();
    sub_2489BDA70();
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 40);
  sub_2489BFB44(v3, *(_QWORD *)(v0 + 48), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_2489BFB44(v5, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_2489BBCBC();
  sub_2489BEDC4();
  v7 = v6;
  sub_248A13270(v6, &qword_254464970);
  if (!v7)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    goto LABEL_10;
  }
  sub_2489C7D1C();
  if ((v8 & 1) != 0)
    sub_2489D6AD4(v7);
  v9 = *(_QWORD *)(v0 + 64);
  sub_2489BF7F0();
  sub_2489BA538(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_2489BF670(*(uint64_t (**)(void))(v0 + 8));
}

Swift::Void __swiftcall CoreTip.hide()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_248A132F0();
  sub_248A132AC();
  sub_2489C0898();
  v0 = sub_248A13280();
  if ((v0 & 1) == 0)
  {
    sub_248A13258();
    v0 = sub_248A1323C();
  }
  sub_248A132A0(v0, v1, v2, v3, v4, v5, v6, v7, v17);
  if (v18 != 2)
  {
    if (qword_254464240 != -1)
      swift_once();
    v8 = sub_2489BEE68();
    sub_2489C401C(v8, (uint64_t)&unk_254464228);
    sub_248A132D8();
    sub_2489C0898();
    if ((sub_2489C61B4() & 1) == 0)
    {
      sub_248A13258();
      sub_248A13230();
    }
    sub_2489BF86C();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_2489C27A4();
    sub_2489BDA90();
    swift_bridgeObjectRelease();
    sub_2489C04F4();
    sub_248A4557C();
    sub_2489BBCA8();
    sub_2489C943C();
    v9 = sub_2489B71DC();
    sub_248A132E4(v9, v10, v11, v12, v13, v14, v15, v16, 2);
    sub_248A11B68();
  }
  sub_2489C1C00();
}

uint64_t sub_248A11B68()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;
  uint64_t v7;

  sub_248A45768();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_254464F38)
  {
    v0 = qword_254464F30;
    v1 = qword_254464F38;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v0 = qword_25446C6D0;
      v1 = qword_25446C6D8;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v2 = sub_2489D7B5C();
      if (v3)
      {
        v0 = v2;
        v1 = v3;
      }
      else
      {
        v0 = 0;
        v1 = 0xE000000000000000;
      }
    }
    sub_248A453F0();
  }
  if (v0 == 0x6C7070612E6D6F63 && v1 == 0xEF64737069742E65)
  {
    sub_248A453F0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_248A45DBC();
    sub_248A453F0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      swift_unownedRetainStrong();
      v7 = swift_allocObject();
      swift_weakInit();
      sub_248A16C68((void (*)(uint64_t *__return_ptr, uint64_t))sub_248A13068, v7);
      swift_release();
      swift_release();
    }
    return swift_release();
  }
}

Swift::Void __swiftcall CoreTip.show()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_248A132F0();
  sub_248A132AC();
  sub_2489C0898();
  v0 = sub_248A13280();
  if ((v0 & 1) == 0)
  {
    sub_248A13258();
    v0 = sub_248A1323C();
  }
  sub_248A132A0(v0, v1, v2, v3, v4, v5, v6, v7, v17);
  if (v18 == 2)
  {
    if (qword_254464240 != -1)
      swift_once();
    v8 = sub_2489BEE68();
    sub_2489C401C(v8, (uint64_t)&unk_254464228);
    sub_248A132D8();
    sub_2489C0898();
    if ((sub_2489C61B4() & 1) == 0)
    {
      sub_248A13258();
      sub_248A13230();
    }
    sub_2489BF86C();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_2489C27A4();
    sub_2489BDA90();
    swift_bridgeObjectRelease();
    sub_2489C04F4();
    sub_248A4557C();
    sub_2489BBCA8();
    sub_2489C943C();
    v9 = sub_2489B71DC();
    sub_248A132E4(v9, v10, v11, v12, v13, v14, v15, v16, 0);
    sub_248A11B68();
  }
  sub_2489C1C00();
}

uint64_t sub_248A11EF0@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  v5 = result;
  if (result)
  {
    sub_248A098C0(a1);
    result = swift_release();
  }
  *a2 = v5 == 0;
  return result;
}

void sub_248A11F70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_2489BECFC();
  v1 = v0;
  v3 = v2;
  v4 = sub_2489C330C(&qword_254464A98);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BBC7C();
  v8 = v7 - v6;
  v9 = sub_2489BA858();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_2489BBC7C();
  v14 = v13 - v12;
  if (!v1)
    goto LABEL_9;
  if (!*(_QWORD *)(v1 + 16)
    || (v15 = sub_2489C28D0(0x4449706974, 0xE500000000000000), (v16 & 1) == 0)
    || (sub_2489C81EC(*(_QWORD *)(v1 + 56) + 32 * v15, (uint64_t)&v26),
        sub_2489C330C(&qword_2544643C0),
        (swift_dynamicCast() & 1) == 0))
  {
    sub_2489BBC58();
LABEL_9:
    v22 = sub_2489C611C();
    v20 = (uint64_t)v3;
    v21 = 1;
    goto LABEL_10;
  }
  sub_2489C4C6C(0x6579616C70736964, 0xED00006574614464, v1, &v26);
  sub_2489BBC58();
  if (!v27)
  {
    sub_2489C32D0((uint64_t)&v26, &qword_2544643E0);
    sub_2489BD920(v8, 1);
    goto LABEL_12;
  }
  v17 = swift_dynamicCast();
  sub_2489BD920(v8, v17 ^ 1u);
  if (sub_2489BE834(v8, 1, v9) == 1)
  {
LABEL_12:
    v23 = swift_bridgeObjectRelease();
    sub_248A13270(v23, &qword_254464A98);
    goto LABEL_9;
  }
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v18(v14, v8, v9);
  v19 = sub_2489C611C();
  v18((uint64_t)v3 + *(int *)(v19 + 20), v14, v9);
  *v3 = v24;
  v3[1] = v25;
  v20 = (uint64_t)v3;
  v21 = 0;
  v22 = v19;
LABEL_10:
  sub_2489BE7E0(v20, v21, 1, v22);
  sub_2489B71E4();
}

uint64_t sub_248A1216C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6579616C70736964;
  else
    return 0x4449706974;
}

uint64_t sub_248A121AC()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_248A45C60();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_248A12200(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_248A45DBC() & 1) == 0)
    return 0;
  sub_2489C611C();
  return sub_248A44F34();
}

uint64_t sub_248A12264(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2489C330C(&qword_254462AC8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489B6B34();
  sub_2489BE100(a1, a1[3]);
  sub_248A12E54();
  sub_248A46008();
  sub_248A45D2C();
  if (!v1)
  {
    _s12DisplayEventVMa();
    sub_248A44F58();
    sub_248A12E90(&qword_2544643D0, MEMORY[0x24BDCE920]);
    sub_248A45D50();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_248A123A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = sub_248A44F58();
  v13 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v5);
  sub_2489BBC7C();
  v15 = v7 - v6;
  v17 = sub_2489C330C(&qword_254463D80);
  MEMORY[0x24BDAC7A8](v17, v8);
  sub_2489BBC7C();
  v9 = _s12DisplayEventVMa();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489B6B34();
  sub_2489BE100(a1, a1[3]);
  sub_248A12E54();
  sub_248A45FF0();
  if (v2)
    return sub_2489BCE44((uint64_t)a1);
  *v3 = sub_248A45CB4();
  v3[1] = v11;
  sub_248A12E90(&qword_2544640F8, MEMORY[0x24BDCE960]);
  sub_248A45CD8();
  sub_2489C33BC();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))((char *)v3 + *(int *)(v9 + 20), v15, v16);
  sub_248A12ED0((uint64_t)v3, a2);
  sub_2489BCE44((uint64_t)a1);
  return sub_248A12F14((uint64_t)v3);
}

void sub_248A125A8(char *a1, char *a2)
{
  sub_2489FE074(*a1, *a2);
}

void sub_248A125B4()
{
  sub_248A0FCC0();
}

uint64_t sub_248A125BC()
{
  return sub_248A0FFBC();
}

void sub_248A125C4()
{
  sub_248A10128();
}

uint64_t sub_248A125CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_248A121AC();
  *a1 = result;
  return result;
}

uint64_t sub_248A125F8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_248A1216C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_248A12620()
{
  char *v0;

  return sub_248A1216C(*v0);
}

uint64_t sub_248A12628@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_248A121FC();
  *a1 = result;
  return result;
}

uint64_t sub_248A1264C()
{
  sub_248A12E54();
  return sub_248A46074();
}

uint64_t sub_248A12674()
{
  sub_248A12E54();
  return sub_248A46080();
}

uint64_t sub_248A1269C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248A123A0(a1, a2);
}

uint64_t sub_248A126B0(_QWORD *a1)
{
  return sub_248A12264(a1);
}

unint64_t CoreTip.DisplayState.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t CoreTip.DisplayState.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_248A126E4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return CoreTip.DisplayState.init(rawValue:)(*a1, a2);
}

uint64_t sub_248A126EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CoreTip.DisplayState.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_248A12710()
{
  sub_2489BA858();
  sub_2489BD904();
  sub_2489C5074();
  sub_2489C610C();
  return sub_2489BA8FC();
}

uint64_t sub_248A12750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_2489BA858() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_248A1320C;
  return sub_248A10AE8(a1, v5, v6, v7);
}

uint64_t sub_248A127CC()
{
  sub_2489C5074();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_248A127F4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_BYTE *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_2489C0180(v3, (uint64_t)sub_248A1320C);
  return sub_248A10CEC(v4, v5, v6, v7, v2, v0 + 48);
}

uint64_t sub_248A12860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_2489C330C(&qword_254464D40) - 8) + 80);
  sub_2489C5074();
  swift_bridgeObjectRelease();
  v2 = sub_248A44EB0();
  if (!sub_2489BE834(v0 + ((v1 + 48) & ~v1), 1, v2))
    sub_2489BA538(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  return sub_2489BA8FC();
}

uint64_t sub_248A128E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_2489C330C(&qword_254464D40) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = v0 + ((v2 + 48) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = sub_2489C0180(v5, (uint64_t)sub_248A1320C);
  return sub_248A11464(v6, v7, v8, v9, v3, v4);
}

uint64_t sub_248A12968()
{
  sub_2489C5074();
  return swift_deallocObject();
}

uint64_t sub_248A12988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_2489F26C0;
  return sub_248A117DC(a1, v5, v4);
}

unint64_t sub_248A129EC()
{
  unint64_t result;

  result = qword_2577A55D8;
  if (!qword_2577A55D8)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.DisplayState, &type metadata for CoreTip.DisplayState);
    atomic_store(result, &qword_2577A55D8);
  }
  return result;
}

uint64_t _s12DisplayStateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248A12A74 + 4 * byte_248A4CDB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_248A12AA8 + 4 * byte_248A4CDB0[v4]))();
}

uint64_t sub_248A12AA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A12AB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A12AB8);
  return result;
}

uint64_t sub_248A12AC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A12ACCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_248A12AD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A12AD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t *sub_248A12AE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_248A44F58();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_248A453F0();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_248A12B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_248A44F58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_248A12BC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_248A44F58();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  sub_248A453F0();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_248A12C38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_248A44F58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_248A12CB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_248A44F58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_248A12D10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_248A44F58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_248A12D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2489BA858();
    return sub_2489BE834(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_248A12DEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2489BA858();
    return sub_2489BE7E0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

unint64_t sub_248A12E54()
{
  unint64_t result;

  result = qword_254463CE8;
  if (!qword_254463CE8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4D024, &_s12DisplayEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463CE8);
  }
  return result;
}

uint64_t sub_248A12E90(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_248A44F58();
    result = MEMORY[0x2495A2D34](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248A12ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12DisplayEventVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A12F14(uint64_t a1)
{
  uint64_t v2;

  v2 = _s12DisplayEventVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_248A12F50()
{
  sub_2489BA858();
  sub_2489BD904();
  sub_2489C5074();
  sub_2489C610C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_248A12FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_2489BA858();
  v3 = v0
     + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
       + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_2489C0180(v4, (uint64_t)sub_248A1320C);
  return sub_248A111CC(v5, v6, v7, v8, v3);
}

uint64_t sub_248A13044()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_248A13068@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_248A11EF0(a1, a2);
}

uint64_t _s12DisplayEventV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_248A130CC + 4 * byte_248A4CDBF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_248A13100 + 4 * byte_248A4CDBA[v4]))();
}

uint64_t sub_248A13100(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A13108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A13110);
  return result;
}

uint64_t sub_248A1311C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A13124);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_248A13128(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A13130(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12DisplayEventV10CodingKeysOMa()
{
  return &_s12DisplayEventV10CodingKeysON;
}

unint64_t sub_248A13150()
{
  unint64_t result;

  result = qword_2577A55F0;
  if (!qword_2577A55F0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CFFC, &_s12DisplayEventV10CodingKeysON);
    atomic_store(result, &qword_2577A55F0);
  }
  return result;
}

unint64_t sub_248A13190()
{
  unint64_t result;

  result = qword_254463CD8;
  if (!qword_254463CD8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CF34, &_s12DisplayEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463CD8);
  }
  return result;
}

unint64_t sub_248A131D0()
{
  unint64_t result;

  result = qword_254463CF0;
  if (!qword_254463CF0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CF5C, &_s12DisplayEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254463CF0);
  }
  return result;
}

uint64_t sub_248A13210()
{
  return type metadata accessor for CoreTipRecord();
}

void sub_248A13220()
{
  sub_2489BE9AC();
}

uint64_t sub_248A13230()
{
  return swift_task_reportUnexpectedExecutor();
}

uint64_t sub_248A1323C()
{
  return swift_task_reportUnexpectedExecutor();
}

uint64_t sub_248A13248()
{
  return sub_248A450B4();
}

uint64_t sub_248A13250()
{
  return sub_248A45078();
}

uint64_t sub_248A13264()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_248A13270(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_2489C32D0(v2, a2);
}

void sub_248A13278()
{
  void *v0;

}

uint64_t sub_248A13280()
{
  return swift_task_isCurrentExecutor();
}

uint64_t sub_248A1328C()
{
  return swift_retain();
}

uint64_t sub_248A13298()
{
  return swift_unownedRetainStrong();
}

void sub_248A132A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  sub_2489C649C(&a9);
}

uint64_t sub_248A132AC()
{
  return sub_248A4575C();
}

uint64_t sub_248A132CC()
{
  uint64_t *v0;

  return sub_248A1F83C(v0[7], v0[8], v0[9], v0[6]);
}

uint64_t sub_248A132D8()
{
  return sub_248A4575C();
}

uint64_t sub_248A132E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return sub_248A092A0(&a9);
}

uint64_t sub_248A132F0()
{
  return sub_248A45768();
}

uint64_t sub_248A132FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248A13328 + 4 * byte_248A4D080[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_248A13328()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_248A13340()
{
  return 0x657373696D736964;
}

unint64_t sub_248A13364()
{
  return 0xD000000000000017;
}

void sub_248A133E0()
{
  JUMPOUT(0x248A133F4);
}

uint64_t sub_248A13400(char a1)
{
  return byte_248A4D1FA[a1];
}

uint64_t CoreTip.InvalidationReason.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_248A1341C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = CoreTip.InvalidationReason.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_248A13444@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = CoreTip.InvalidationReason.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_248A1346C()
{
  sub_248A14504();
  return sub_248A45678();
}

uint64_t sub_248A134C8()
{
  sub_248A14504();
  return sub_248A45660();
}

uint64_t CoreTip.invalidate(reason:)(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v3 = v1[2];
  v2 = v1[3];
  v4 = v1[9];
  v5 = v1[10];
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  v6 = sub_2489D84B0(v3, v2, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2489BA46C();
  swift_bridgeObjectRelease();
  if (v6 != 4)
    return sub_248A136E0(a1);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  v7 = sub_2489C5F24();
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v2;
  *(_BYTE *)(v7 + 32) = a1;
  sub_248A453F0();
  sub_248A3742C((uint64_t)&unk_2577A5600, v7);
  sub_2489BF7F0();
  return swift_release();
}

uint64_t sub_248A136E0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = sub_2489C330C(&qword_254464DD8);
  result = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xFE) == 2)
  {
    v8 = sub_248A45780();
    sub_2489BE7E0((uint64_t)v7, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v1;
    swift_retain();
    sub_248A0A9AC((uint64_t)v7, (uint64_t)&unk_2577A5638, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_248A137A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 72) = a4;
  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_248A137C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(unsigned __int8 *)(v0 + 72);
  type metadata accessor for CoreTipRecord();
  sub_248A1F1FC(v1, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A13918()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_248A1393C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2489F7CC4;
  return sub_248A137A8(a1, v4, v5, v6);
}

uint64_t sub_248A139A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_248A45B94();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A13A04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_254464240 != -1)
    swift_once();
  v1 = v0[2];
  v2 = type metadata accessor for logger();
  v0[6] = sub_2489C401C(v2, (uint64_t)&unk_254464228);
  sub_248A45A74();
  sub_2489C1BE8();
  v0[7] = *(_QWORD *)(v1 + 16);
  v0[8] = *(_QWORD *)(v1 + 24);
  sub_248A453F0();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_2489C5160();
  sub_2489BE9AC();
  sub_2489BEC70();
  v0[9] = sub_248A45768();
  v0[10] = sub_248A4575C();
  sub_2489C0C04();
  return swift_task_switch();
}

uint64_t sub_248A13B44()
{
  swift_release();
  CoreTip.hide()();
  return swift_task_switch();
}

uint64_t sub_248A13B88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_248A45B88();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2577A5998 + dword_2577A5998);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_248A13C08;
  return v3(3000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_248A13C08()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  sub_2489C0A50();
  return sub_2489BA850();
}

uint64_t sub_248A13C84()
{
  uint64_t v0;

  sub_248A45A74();
  sub_2489C1BE8();
  sub_248A453F0();
  sub_248A4557C();
  sub_2489BEC70();
  sub_2489C5160();
  sub_2489BE9AC();
  sub_2489BEC70();
  *(_QWORD *)(v0 + 96) = sub_248A4575C();
  sub_2489C0C04();
  return swift_task_switch();
}

uint64_t sub_248A13D60()
{
  uint64_t v0;

  swift_release();
  CoreTip.show()();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static CoreTip.invalidateTip(id:reason:datastore:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a4;
  *(_BYTE *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_248A13DC4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = sub_2489C5F24();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  *(_BYTE *)(v4 + 32) = v2;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2577A5270 + dword_2577A5270);
  sub_248A453F0();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_248A13E70;
  return v7((uint64_t)v7, (uint64_t)&unk_2577A5618, v4);
}

uint64_t sub_248A13E70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return sub_2489BA850();
}

uint64_t sub_248A13ED8()
{
  uint64_t v0;

  swift_release();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_248A13F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 96) = a5;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = sub_2489C330C(&qword_254464118);
  *(_QWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  v7 = sub_2489C330C(&qword_254464028);
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A13F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int16 v11;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  swift_getKeyPath();
  sub_248A077BC();
  sub_248A44C7C();
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v0 + 16) = type metadata accessor for CoreTipRecord();
  sub_248A44FAC();
  v7 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v5;
  sub_2489C330C(&qword_2544643A8);
  v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_248A47480;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v9 + v8, v1, v3);
  sub_248A3E834();
  v11 = *(unsigned __int8 *)(v0 + 96);
  sub_2489BA46C();
  sub_2489C6D4C();
  sub_2489C08A4();
  sub_248A1F470(v11);
  sub_2489BF7F0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A141A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  v4 = sub_2489C330C(&qword_254464060);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_2544640D0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_2544640A0);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C5D3C((unint64_t *)&qword_2544640C8, &qword_2544640D0, MEMORY[0x24BDCD230]);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = v18;
  v23 = v19;
  sub_248A44DB4();
  a3[3] = sub_2489C330C(&qword_254464048);
  a3[4] = sub_248A14560();
  sub_2489BE690(a3);
  sub_2489C5D3C(&qword_254464098, &qword_2544640A0, MEMORY[0x24BDCD1C0]);
  sub_2489C5D3C(&qword_254464058, &qword_254464060, MEMORY[0x24BDCD130]);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
}

void sub_248A143F0()
{
  type metadata accessor for CoreTipRecord();
  swift_allocObject();
  sub_248A453F0();
  CoreTipRecord.init(id:)();
}

uint64_t sub_248A14448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 32);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_248A0B4B0;
  return sub_248A13F04(a1, a2, v6, v7, v8);
}

unint64_t sub_248A144C8()
{
  unint64_t result;

  result = qword_2577A5620;
  if (!qword_2577A5620)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.InvalidationReason, &type metadata for CoreTip.InvalidationReason);
    atomic_store(result, (unint64_t *)&qword_2577A5620);
  }
  return result;
}

unint64_t sub_248A14504()
{
  unint64_t result;

  result = qword_2577A5628;
  if (!qword_2577A5628)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.InvalidationReason, &type metadata for CoreTip.InvalidationReason);
    atomic_store(result, &qword_2577A5628);
  }
  return result;
}

uint64_t sub_248A14548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_248A141A0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_248A14550()
{
  sub_248A143F0();
}

unint64_t sub_248A14560()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254464040;
  if (!qword_254464040)
  {
    v1 = sub_2489BCD7C(&qword_254464048);
    v2[0] = sub_248A145CC();
    v2[1] = sub_2489EEB18();
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254464040);
  }
  return result;
}

unint64_t sub_248A145CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254463FE0;
  if (!qword_254463FE0)
  {
    v1 = sub_2489BCD7C(&qword_2544640A0);
    v2 = sub_2489C5D3C((unint64_t *)&qword_2544640C0, &qword_2544640D0, MEMORY[0x24BDCD228]);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254463FE0);
  }
  return result;
}

uint64_t sub_248A14648()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248A14674(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_248A146E0;
  return sub_248A139A4(a1, v4, v5, v6);
}

void sub_248A146EC(uint64_t a1)
{
  sub_248A1471C(a1, &qword_254464978);
}

void sub_248A146F8(uint64_t a1)
{
  sub_248A1471C(a1, &qword_254464010);
}

void sub_248A14704(uint64_t a1)
{
  sub_248A1471C(a1, &qword_254463008);
}

void sub_248A14710(uint64_t a1)
{
  sub_248A1471C(a1, &qword_254464D78);
}

void sub_248A1471C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2489BEDB8(a1, a2);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v3 + 16) = v4;
  sub_2489BA7D0();
}

uint64_t sub_248A14750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_2489C330C(&qword_2544625C0);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_2489C55EC(a1, v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16), &qword_254463FF8);
  sub_248A157F4(a1, &qword_254463FF8);
  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_248A147F8(void (*a1)(uint64_t *__return_ptr, _BYTE *, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_248A08A38();
  if (*(_QWORD *)(v2 + 16))
  {
    sub_248A14874(v2, a1);
    v4 = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v4;
}

void sub_248A14874(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _BYTE *, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD v24[5];
  uint64_t v25;

  v25 = MEMORY[0x24BEE4AF8];
  sub_2489D13D0(a1, v24);
  v3 = v24[0];
  v4 = v24[3];
  v5 = v24[4];
  v16 = v24[1];
  v17 = (unint64_t)(v24[2] + 64) >> 6;
  sub_248A453F0();
  while (1)
  {
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v7 = v6 | (v4 << 6);
      goto LABEL_15;
    }
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v8 >= v17)
      goto LABEL_27;
    v9 = *(_QWORD *)(v16 + 8 * v8);
    if (!v9)
    {
      v10 = v4 + 2;
      if (v4 + 2 >= v17)
        goto LABEL_27;
      v9 = *(_QWORD *)(v16 + 8 * v10);
      if (v9)
        goto LABEL_13;
      v10 = v4 + 3;
      if (v4 + 3 >= v17)
        goto LABEL_27;
      v9 = *(_QWORD *)(v16 + 8 * v10);
      if (v9)
        goto LABEL_13;
      v10 = v4 + 4;
      if (v4 + 4 >= v17)
        goto LABEL_27;
      v9 = *(_QWORD *)(v16 + 8 * v10);
      if (v9)
      {
LABEL_13:
        v8 = v10;
      }
      else
      {
        v8 = v4 + 5;
        if (v4 + 5 >= v17)
          goto LABEL_27;
        v9 = *(_QWORD *)(v16 + 8 * v8);
        if (!v9)
        {
          v15 = v4 + 6;
          while (v15 < v17)
          {
            v9 = *(_QWORD *)(v16 + 8 * v15++);
            if (v9)
            {
              v8 = v15 - 1;
              goto LABEL_14;
            }
          }
LABEL_27:
          swift_release();
          return;
        }
      }
    }
LABEL_14:
    v5 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v8 << 6);
    v4 = v8;
LABEL_15:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v7);
    v13 = *v11;
    v12 = v11[1];
    sub_2489C55EC(*(_QWORD *)(v3 + 56) + 8 * v7, (uint64_t)&v23, &qword_254464AA0);
    v22[0] = v13;
    v22[1] = v12;
    sub_2489C625C((uint64_t)v22, (uint64_t)v20, &qword_2544638E8);
    sub_248A453F0();
    a2(&v19, v20, &v21);
    if (v2)
    {
      sub_248A157F4((uint64_t)v20, &qword_2544638E8);
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    v14 = v19;
    sub_248A157F4((uint64_t)v20, &qword_2544638E8);
    if (v14)
    {
      MEMORY[0x2495A1DF8]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_248A456C0();
      sub_248A456E4();
      sub_248A456A8();
    }
  }
  __break(1u);
}

uint64_t static CoreTip.setLastTipDisplayed(id:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_2489C330C(&qword_254463FF8);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489BBC7C();
  v10 = (uint64_t *)(v9 - v8);
  type metadata accessor for DeviceProfile();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489BBC7C();
  v15 = v14 - v13;
  v16 = sub_2489C330C(&qword_254464200);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_2489BBC7C();
  v21 = v20 - v19;
  if (qword_254464E70 != -1)
    swift_once();
  result = sub_2489BD8B0();
  if ((byte_254464F42 & 1) == 0 && !*((_QWORD *)off_254464F48 + 2) && (byte_254464F50 & 1) == 0)
  {
    v23 = *((_QWORD *)off_254464F58 + 2) ? 1 : word_254464F60;
    if ((v23 & 1) == 0)
    {
      if (byte_254464F40 == 1)
      {
        if (qword_2544641F8 != -1)
          swift_once();
        v24 = sub_2489C401C(v16, (uint64_t)qword_25446C698);
        sub_2489BD8B0();
        sub_2489C55EC(v24, v21, &qword_254464200);
        v25 = sub_2489BFB4C(v21);
        sub_248A157F4(v21, &qword_254464200);
        if (v25 != 1)
        {
          sub_2489BFA10();
          if (!sub_2489BFB4C(v24))
            sub_248A223E4(a1, a2, a3);
          swift_endAccess();
          if (!sub_2489BFB4C(v24))
          {
            sub_248A15774(v24, v15);
            sub_248A22660();
            sub_248A157B8(v15);
          }
        }
      }
      if (qword_254462E50 != -1)
        swift_once();
      v26 = _s12DisplayEventVMa();
      v27 = (char *)v10 + *(int *)(v26 + 20);
      v28 = sub_248A44F58();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, a3, v28);
      *v10 = a1;
      v10[1] = a2;
      sub_2489BE7E0((uint64_t)v10, 0, 1, v26);
      sub_2489C00F0();
      sub_2489BA90C();
      sub_248A08B60((uint64_t)v10);
      return sub_2489BF7F0();
    }
  }
  return result;
}

void sub_248A14DA8()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489C330C(&qword_254464AA0);
  v0 = sub_248A453C0();
  sub_2489C330C(&qword_254464AB0);
  sub_2489BFC3C();
  sub_248A1471C(v0, &qword_254464AD8);
  qword_254464B30 = v1;
  sub_2489BA7D0();
}

uint64_t static CoreTip.tips.getter()
{
  if (qword_254464B18 != -1)
    swift_once();
  sub_2489BD8B0();
  return swift_retain();
}

void static CoreTip.tips.setter(uint64_t a1)
{
  if (qword_254464B18 != -1)
    swift_once();
  sub_2489BFA10();
  qword_254464B30 = a1;
  swift_release();
  sub_2489B7208();
}

uint64_t (*static CoreTip.tips.modify())()
{
  if (qword_254464B18 != -1)
    swift_once();
  sub_2489BFA10();
  return j__swift_endAccess;
}

void sub_248A14F4C()
{
  uint64_t v0;
  uint64_t v1;

  sub_248A452AC();
  v0 = sub_248A453C0();
  sub_2489C330C(&qword_254464968);
  sub_2489BFC3C();
  sub_248A1471C(v0, &qword_254464978);
  qword_254464528 = v1;
  sub_2489BA7D0();
}

uint64_t static CoreTip.modelIdentifiers.getter()
{
  if (qword_254464530 != -1)
    swift_once();
  return swift_retain();
}

void sub_248A14FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2489C330C(&qword_254463FF8);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_2489BBC7C();
  v4 = v3 - v2;
  v5 = _s12DisplayEventVMa();
  sub_2489BE7E0(v4, 1, 1, v5);
  sub_2489C330C(&qword_2544625A8);
  sub_2489BFC3C();
  qword_25446C640 = sub_248A14750(v4);
  sub_2489BA7D0();
}

void sub_248A15078(uint64_t a1)
{
  sub_248A150C0(a1, (uint64_t)&type metadata for CoreTip.DisplayState, &qword_254463D38, &qword_254463D78, &qword_25446C688);
}

void sub_248A1509C(uint64_t a1)
{
  sub_248A150C0(a1, (uint64_t)&type metadata for CoreTip.Status, &qword_254464B38, &qword_254464B40, &qword_25446C6B0);
}

void sub_248A150C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_248A453C0();
  sub_2489C330C(a3);
  sub_2489BFC3C();
  sub_248A1471C(v8, a4);
  *a5 = v9;
}

uint64_t sub_248A15130(uint64_t a1, uint64_t a2, unsigned __int8 a3, __int16 a4)
{
  if (qword_254464B20 != -1)
    swift_once();
  swift_retain();
  sub_2489BA90C();
  sub_248A2F424(a3 | (unsigned __int16)(a4 << 8));
  return swift_release();
}

uint64_t sub_248A151C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t Strong;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  char v21[8];
  char v22[8];
  unint64_t v23;
  _QWORD v24[5];

  if (qword_254464B18 != -1)
LABEL_43:
    swift_once();
  sub_2489BD8B0();
  sub_2489C00F0();
  v0 = sub_248A08A38();
  sub_2489BF7F0();
  v23 = MEMORY[0x24BEE4AF8];
  sub_2489D13D0(v0, v24);
  v1 = v24[0];
  v2 = v24[1];
  v3 = v24[3];
  v4 = v24[4];
  v5 = (unint64_t)(v24[2] + 64) >> 6;
  sub_248A453F0();
  while (v4)
  {
    v6 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v7 = v6 | (v3 << 6);
LABEL_23:
    sub_2489C55EC(*(_QWORD *)(v1 + 56) + 8 * v7, (uint64_t)v22, &qword_254464AA0);
    sub_2489C625C((uint64_t)v22, (uint64_t)v21, &qword_254464AA0);
    Strong = swift_weakLoadStrong();
    sub_248A157F4((uint64_t)v21, &qword_254464AA0);
    if (Strong)
    {
      MEMORY[0x2495A1DF8]();
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_248A456C0();
      sub_248A456E4();
      sub_248A456A8();
    }
  }
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v8 >= v5)
    goto LABEL_27;
  v9 = *(_QWORD *)(v2 + 8 * v8);
  v10 = v3 + 1;
  if (v9)
    goto LABEL_22;
  v10 = v3 + 2;
  if (v3 + 2 >= v5)
    goto LABEL_27;
  v9 = *(_QWORD *)(v2 + 8 * v10);
  if (v9)
    goto LABEL_22;
  v10 = v3 + 3;
  if (v3 + 3 >= v5)
    goto LABEL_27;
  v9 = *(_QWORD *)(v2 + 8 * v10);
  if (v9)
    goto LABEL_22;
  v10 = v3 + 4;
  if (v3 + 4 >= v5)
    goto LABEL_27;
  v9 = *(_QWORD *)(v2 + 8 * v10);
  if (v9)
    goto LABEL_22;
  v10 = v3 + 5;
  if (v3 + 5 >= v5)
    goto LABEL_27;
  v9 = *(_QWORD *)(v2 + 8 * v10);
  if (v9)
    goto LABEL_22;
  v10 = v3 + 6;
  if (v3 + 6 >= v5)
    goto LABEL_27;
  v9 = *(_QWORD *)(v2 + 8 * v10);
  if (v9)
  {
LABEL_22:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
    v3 = v10;
    goto LABEL_23;
  }
  v11 = v3 + 7;
  while (v11 < v5)
  {
    v9 = *(_QWORD *)(v2 + 8 * v11++);
    if (v9)
    {
      v10 = v11 - 1;
      goto LABEL_22;
    }
  }
LABEL_27:
  swift_release();
  v13 = v23;
  swift_bridgeObjectRelease();
  if (v13 >> 62)
  {
    sub_248A453F0();
    v14 = sub_248A45C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = swift_bridgeObjectRelease();
  if (v14)
  {
    sub_2489C00F0();
    v16 = sub_248A147F8((void (*)(uint64_t *__return_ptr, _BYTE *, uint64_t *))sub_248A15558);
    sub_2489BF7F0();
    if (v16 >> 62)
    {
      sub_248A453F0();
      result = sub_248A45C18();
      v17 = result;
      if (!result)
        goto LABEL_38;
LABEL_32:
      if (v17 >= 1)
      {
        for (i = 0; i != v17; ++i)
        {
          if ((v16 & 0xC000000000000001) != 0)
            MEMORY[0x2495A2200](i, v16);
          else
            sub_2489C00F0();
          sub_248A10338();
          sub_2489BF7F0();
        }
        goto LABEL_38;
      }
      __break(1u);
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = sub_248A453F0();
      if (v17)
        goto LABEL_32;
LABEL_38:
      swift_bridgeObjectRelease_n();
      if (qword_254464B20 != -1)
        swift_once();
      v19 = sub_2489C00F0();
      sub_2489D33F8(v19, v20);
      return sub_2489BF7F0();
    }
  }
  return result;
}

uint64_t sub_248A15558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

void sub_248A15588()
{
  if (qword_254464B18 != -1)
    swift_once();
  sub_2489BD8B0();
  sub_2489C00F0();
  sub_2489F3B88(0);
  sub_2489BF7F0();
  if (qword_254464530 != -1)
    swift_once();
  sub_2489C00F0();
  sub_2489F3B94(0);
  sub_2489BF7F0();
  if (qword_254464B20 != -1)
    swift_once();
  sub_2489C00F0();
  sub_2489F3BA0(0);
  sub_2489BF7F0();
  sub_2489B7208();
}

uint64_t sub_248A15670()
{
  uint64_t Strong;
  uint64_t v2;
  _BYTE v3[16];

  if (qword_254464B18 != -1)
    swift_once();
  sub_2489BD8B0();
  swift_retain();
  sub_2489BA90C();
  sub_2489F7494();
  swift_bridgeObjectRelease();
  swift_release();
  if ((v3[8] & 1) != 0)
  {
    sub_248A157F4((uint64_t)v3, &qword_254463FD8);
    return 0;
  }
  else
  {
    sub_2489C55EC((uint64_t)v3, (uint64_t)&v2, &qword_254464AA0);
    sub_248A157F4((uint64_t)v3, &qword_254463FD8);
    Strong = swift_weakLoadStrong();
    sub_248A157F4((uint64_t)&v2, &qword_254464AA0);
  }
  return Strong;
}

uint64_t sub_248A15774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A157B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceProfile();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_248A157F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_2489BEDB8(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_2489BA7D0();
}

uint64_t CoreTip.Options.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_248A453F0();
  return v1;
}

uint64_t CoreTip.Options.cloudSyncEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t CoreTip.Options.ignoresDisplayFrequency.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t CoreTip.Options.maxDisplayCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t CoreTip.Options.maxDisplayDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t CoreTip.Options.updatesFromTipsd.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t CoreTip.Options.usesCoreAnalytics.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 43);
}

uint64_t CoreTip.Options.usesTipRecord.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t CoreTip.Options.init(cloudSyncEnabled:ignoresDisplayFrequency:maxDisplayCount:maxDisplayDuration:usesConstellation:usesCoreAnalytics:usesTipRecord:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;

  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_254464F38)
  {
    v17 = qword_254464F30;
    v18 = qword_254464F38;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v17 = qword_25446C6D0;
      v18 = qword_25446C6D8;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v19 = sub_2489D7B5C();
      if (v20)
      {
        v17 = v19;
        v18 = v20;
      }
      else
      {
        v17 = 0;
        v18 = 0xE000000000000000;
      }
    }
    sub_248A453F0();
  }
  if (a8 == 2)
    v21 = byte_254464F41;
  else
    v21 = a8;
  v22 = 0x7FFFFFFFFFFFFFFFLL;
  if ((a4 & 1) == 0)
    v22 = a3;
  *(_QWORD *)a9 = v17;
  *(_QWORD *)(a9 + 8) = v18;
  *(_BYTE *)(a9 + 16) = (a1 == 2) | a1 & 1;
  *(_BYTE *)(a9 + 17) = a2 & 1;
  *(_QWORD *)(a9 + 24) = v22;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_BYTE *)(a9 + 41) = 0;
  *(_BYTE *)(a9 + 42) = a7 & 1;
  *(_BYTE *)(a9 + 43) = v21 & 1;
  *(_BYTE *)(a9 + 44) = (a10 == 2) | a10 & 1;
  return sub_248A453F0();
}

uint64_t sub_248A15A5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248A50BA0 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000248A50BC0 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = a1 == 0x6C7073694478616DLL && a2 == 0xEF746E756F437961;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000248A50BE0 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000248A4FF50 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000248A50C00 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000248A50C20 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else if (a1 == 0x5270695473657375 && a2 == 0xED000064726F6365)
    {
      swift_bridgeObjectRelease();
      return 8;
    }
    else
    {
      v8 = sub_248A45DBC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 8;
      else
        return 9;
    }
  }
}

uint64_t sub_248A15E0C()
{
  return 9;
}

uint64_t sub_248A15E14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_248A15E48 + 4 * byte_248A4D204[a1]))(0x4449656C646E7562, 0xE800000000000000);
}

unint64_t sub_248A15E48()
{
  return 0xD000000000000010;
}

unint64_t sub_248A15EC4()
{
  return 0xD000000000000011;
}

void sub_248A15EDC()
{
  JUMPOUT(0x248A15EF0);
}

uint64_t sub_248A15EFC()
{
  return 0x5270695473657375;
}

uint64_t sub_248A15F20()
{
  unsigned __int8 *v0;

  return sub_248A15E14(*v0);
}

uint64_t sub_248A15F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A15A5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A15F4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_248A15E0C();
  *a1 = result;
  return result;
}

uint64_t sub_248A15F70()
{
  sub_248A161DC();
  return sub_248A46074();
}

uint64_t sub_248A15F98()
{
  sub_248A161DC();
  return sub_248A46080();
}

void CoreTip.Options.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD v11[6];
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = sub_2489C330C(&qword_2577A5640);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v14 = *(unsigned __int8 *)(v1 + 17);
  v15 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 32);
  v13 = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 40);
  v11[4] = *(unsigned __int8 *)(v1 + 41);
  v11[5] = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 42);
  v11[2] = *(unsigned __int8 *)(v1 + 43);
  v11[3] = v9;
  v11[1] = *(unsigned __int8 *)(v1 + 44);
  sub_2489BE100(a1, a1[3]);
  sub_248A161DC();
  sub_248A46008();
  v25 = 0;
  v10 = v16;
  sub_248A45D2C();
  if (!v10)
  {
    v24 = 1;
    sub_2489C1658();
    v23 = 2;
    sub_2489C1658();
    v22 = 3;
    sub_248A45D44();
    v21 = 4;
    sub_248A45D08();
    v20 = 5;
    sub_2489C1658();
    v19 = 6;
    sub_2489C1658();
    v18 = 7;
    sub_2489C1658();
    v17 = 8;
    sub_2489C1658();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  sub_2489BA808();
}

unint64_t sub_248A161DC()
{
  unint64_t result;

  result = qword_2577A5648;
  if (!qword_2577A5648)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4D358, &_s7OptionsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2577A5648);
  }
  return result;
}

void CoreTip.Options.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v5 = sub_2489C330C(&qword_2577A5650);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_2489BE100(a1, a1[3]);
  sub_248A161DC();
  sub_248A45FF0();
  if (v2)
  {
    sub_2489BCE44((uint64_t)a1);
  }
  else
  {
    sub_2489BFE8C();
    v8 = sub_248A45CB4();
    v10 = v9;
    sub_248A453F0();
    v21 = sub_2489C3BBC();
    v20 = sub_2489C3BBC();
    sub_2489BFE8C();
    v19 = sub_248A45CCC();
    sub_2489BFE8C();
    v11 = sub_248A45C90();
    v17 = v12;
    v18 = v11;
    v16 = sub_2489C3BBC();
    v15 = sub_2489C3BBC();
    v14 = sub_2489C3BBC();
    v13 = sub_2489C3BBC();
    sub_2489C24A0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 16) = v21 & 1;
    *(_BYTE *)(a2 + 17) = v20 & 1;
    *(_QWORD *)(a2 + 24) = v19;
    *(_QWORD *)(a2 + 32) = v18;
    *(_BYTE *)(a2 + 40) = v17 & 1;
    *(_BYTE *)(a2 + 41) = v16 & 1;
    *(_BYTE *)(a2 + 42) = v15 & 1;
    *(_BYTE *)(a2 + 43) = v14 & 1;
    *(_BYTE *)(a2 + 44) = v13 & 1;
    sub_2489BCE44((uint64_t)a1);
    sub_2489B71DC();
  }
  sub_2489BA808();
}

void sub_248A164B4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  CoreTip.Options.init(from:)(a1, a2);
}

void sub_248A164C8(_QWORD *a1)
{
  CoreTip.Options.encode(to:)(a1);
}

uint64_t _s7OptionsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  return a1;
}

__n128 _s7OptionsVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s7OptionsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  return a1;
}

uint64_t _s7OptionsVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 45))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7OptionsVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 45) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 45) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s7OptionsV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s7OptionsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_248A1675C + 4 * byte_248A4D212[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_248A16790 + 4 * byte_248A4D20D[v4]))();
}

uint64_t sub_248A16790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A16798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A167A0);
  return result;
}

uint64_t sub_248A167AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A167B4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_248A167B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A167C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7OptionsV10CodingKeysOMa_0()
{
  return &_s7OptionsV10CodingKeysON_0;
}

unint64_t sub_248A167E0()
{
  unint64_t result;

  result = qword_2577A5658;
  if (!qword_2577A5658)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4D330, &_s7OptionsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2577A5658);
  }
  return result;
}

unint64_t sub_248A16820()
{
  unint64_t result;

  result = qword_2577A5660;
  if (!qword_2577A5660)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4D2A0, &_s7OptionsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2577A5660);
  }
  return result;
}

unint64_t sub_248A16860()
{
  unint64_t result;

  result = qword_2577A5668;
  if (!qword_2577A5668)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4D2C8, &_s7OptionsV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_2577A5668);
  }
  return result;
}

uint64_t static CoreTipProtocol.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 32);
  v7 = v6(a3, a4);
  v9 = v8;
  if (v7 == v6(a3, a4) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_248A45DBC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t CoreTipProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 32))();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  return 0x203A646928706954;
}

uint64_t dispatch thunk of CoreTipProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoreTipProtocol.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoreTipProtocol.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoreTipProtocol.rules.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoreTipProtocol.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_248A169E0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;

  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    v5 = (void (*)(void))result;
    sub_2489C6124();
    if (pthread_main_np() == 1 && _CFRunLoopCurrentIsMain())
    {
      v6 = sub_248A45768();
      MEMORY[0x24BDAC7A8](v6, v7);
      sub_2489C507C();
      *(_QWORD *)(v8 - 16) = a2;
      sub_2489C08B4();
      sub_248A184FC(v9, v10);
      return sub_2489BEDD4();
    }
    else
    {
      sub_248A45108();
      sub_2489C6124();
      sub_2489BD894();
      sub_2489C5168();
      v5();
      sub_248A450CC();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    *a3 = xmmword_248A4A2E0;
  }
  return result;
}

uint64_t sub_248A16B0C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
    return 2;
  swift_retain();
  if (pthread_main_np() == 1 && _CFRunLoopCurrentIsMain())
  {
    v5 = sub_248A45768();
    MEMORY[0x24BDAC7A8](v5, v6);
    v9[2] = v2;
    v9[3] = a1;
    v9[4] = a2;
    v7 = sub_248A18688((void (*)(_QWORD *__return_ptr))sub_248A18A84, (uint64_t)v9);
    swift_release();
  }
  else
  {
    sub_248A45108();
    swift_retain();
    sub_248A453F0();
    sub_248A3A52C();
    v7 = sub_248A189A8(a1);
    swift_release();
    swift_release();
  }
  return v7;
}

uint64_t sub_248A16C68(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *__return_ptr);
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  char v14;

  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
    return 1;
  sub_2489C6124();
  if (pthread_main_np() == 1 && _CFRunLoopCurrentIsMain())
  {
    v6 = sub_248A45768();
    MEMORY[0x24BDAC7A8](v6, v7);
    sub_2489C507C();
    *(_QWORD *)(v8 - 16) = a2;
    sub_2489C08B4();
    v12 = sub_248A18818(v9, v10, v11);
    result = sub_2489BEDD4();
    if (!v3)
      return v12 & 1;
  }
  else
  {
    sub_248A45108();
    sub_2489C6124();
    sub_2489BD894();
    sub_2489C5168();
    v14 = sub_248A189A8(a1);
    sub_2489BEDD4();
    result = swift_release();
    if (!v3)
      return v14 & 1;
  }
  return result;
}

BOOL CoreTip.Status.isAvailable.getter()
{
  unsigned __int8 *v0;

  return *v0 == 1;
}

uint64_t sub_248A16DA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BD8B0();
  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[9];
  v4 = v0[10];
  sub_2489BA7EC();
  sub_248A453F0();
  sub_248A453F0();
  sub_248A453F0();
  v5 = sub_2489D84B0(v1, v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2489BEC70();
  sub_2489BDA70();
  return v5;
}

uint64_t CoreTip.Status.recordStatus.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t CoreTip.Status.invalidationReason.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

BOOL CoreTip.Status.isUnknown.getter()
{
  unsigned __int8 *v0;

  return *v0 == 3;
}

uint64_t CoreTip.Status.description.getter()
{
  _BYTE *v0;

  if (*v0 == 2)
  {
    sub_248A45A74();
    sub_2489BA914();
    sub_248A4557C();
    sub_2489BA914();
    sub_248A4557C();
  }
  else
  {
    sub_248A45BAC();
  }
  return 0;
}

uint64_t static CoreTip.Status.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  if (*a1 != *a2)
    return 0;
  v2 = a1[1];
  v3 = a2[1];
  if (v2 == 10)
  {
    if (v3 != 10)
      return 0;
  }
  else if (v3 == 10 || v2 != v3)
  {
    return 0;
  }
  return 1;
}

BOOL CoreTip.RecordStatus.isEligible.getter(char a1)
{
  return a1 == 1;
}

uint64_t sub_248A17058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t AssociatedTypeWitness;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  _QWORD v109[3];
  uint64_t v110;
  uint64_t v111;

  sub_2489C7F24(a1, (uint64_t)&v107, &qword_254464330);
  if (!v108)
  {
    sub_2489C32D0(a1, &qword_254464330);
    sub_2489C32D0((uint64_t)&v107, &qword_254464330);
    return 4;
  }
  v105 = a1;
  sub_2489B8F74(&v107, (uint64_t)v109);
  v2 = v110;
  v3 = v111;
  v4 = sub_2489BE100(v109, v110);
  v104 = &v96;
  v5 = *(_QWORD *)(v2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v4);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v96 - v7;
  (*(void (**)(char *))(v5 + 16))((char *)&v96 - v7);
  v9 = sub_2489C15D4();
  v10 = v9;
  v103 = &v96;
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_2489BF648((uint64_t)&v96 - v7);
  if ((v10 & 1) == 0)
  {
    sub_2489C3ADC((uint64_t)&v96 - v7);
    goto LABEL_24;
  }
  v12 = sub_2489BFE28();
  v13 = sub_2489C3ADC((uint64_t)&v96 - v7);
  if (v12 <= 64)
    goto LABEL_24;
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489BFAF8(v15, v16, v17, v18, v19, v20, v21, v22, v96);
  *(_QWORD *)&v107 = 0x8000000000000000;
  if ((sub_2489C15D4() & 1) == 0)
  {
    v102 = &v96;
    v34 = sub_2489C15D4();
    v35 = sub_2489BFE28();
    if ((v34 & 1) != 0)
    {
      if (v35 > 64)
      {
        sub_2489C0470(v35, v36, v37, v38, v39, v40, v41, v42, v96);
        MEMORY[0x24BDAC7A8](v43, v44);
        sub_2489BFB1C();
        sub_2489BA524();
        sub_2489BFE4C();
        v45 = sub_2489BFE34();
        sub_2489C3ADC(v34);
        result = sub_2489C3ADC(v12);
        goto LABEL_14;
      }
      v101 = *(uint64_t **)(*(_QWORD *)(v3 + 24) + 16);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v100 = &v96;
      MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v51);
      v97 = (char *)&v96 - v52;
      swift_getAssociatedConformanceWitness();
      v53 = sub_248A45F0C();
      v98 = &v96;
      MEMORY[0x24BDAC7A8](v53, v54);
      sub_2489BFB1C();
      v99 = v55;
      v57 = v56 - v55;
      sub_248A45DA4();
      LODWORD(v97) = sub_2489BFE34();
      v58 = sub_2489C3ADC(v57);
      sub_2489C0470(v58, v59, v60, v61, v62, v63, v64, v65, v96);
      MEMORY[0x24BDAC7A8](v66, v67);
      v68 = (uint64_t)&v96 - v99;
      sub_2489BBCB0((uint64_t)&v96 - v99, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
      if ((v97 & 1) != 0)
        goto LABEL_38;
      v69 = v107;
      v70 = sub_2489BFAEC();
      result = sub_2489C3ADC(v68);
      v49 = v70 < v69;
    }
    else
    {
      if (v35 >= 64)
      {
        sub_2489C3ADC(v12);
        goto LABEL_24;
      }
      v48 = sub_2489BFAEC();
      result = sub_2489C3ADC(v12);
      v49 = v48 < (uint64_t)v107;
    }
    if (v49)
      goto LABEL_39;
    goto LABEL_24;
  }
  v23 = sub_2489BFE28();
  if (v23 >= 64)
  {
    sub_2489C0470(v23, v24, v25, v26, v27, v28, v29, v30, v96);
    MEMORY[0x24BDAC7A8](v46, v47);
    sub_2489BFB1C();
    v102 = &v96;
    sub_2489BA524();
    sub_2489BFE4C();
    v45 = sub_2489BFE34();
    sub_2489C3ADC((uint64_t)&v96);
    result = sub_2489C3ADC(v12);
LABEL_14:
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_24;
  }
  v31 = sub_2489BFAEC();
  result = sub_2489C3ADC(v12);
  if (v31 < (uint64_t)v107)
    goto LABEL_39;
LABEL_24:
  v71 = sub_2489BFE28();
  MEMORY[0x24BDAC7A8](v71, v72);
  sub_2489BFB1C();
  v75 = v73 - v74;
  sub_2489BF648(v73 - v74);
  if (v71 < 65)
  {
    v71 = sub_2489BFE28();
    sub_2489C3ADC(v75);
    if (v71 != 64)
      goto LABEL_35;
    v76 = sub_2489C15D4();
    if ((v76 & 1) != 0)
      goto LABEL_35;
  }
  else
  {
    v76 = sub_2489C3ADC(v75);
  }
  v101 = &v96;
  v102 = &v96;
  v78 = MEMORY[0x24BDAC7A8](v76, v77);
  sub_2489BFAF8(v78, v79, v80, v81, v82, v83, v84, v85, v96);
  *(_QWORD *)&v107 = 0x7FFFFFFFFFFFFFFFLL;
  v86 = sub_2489C15D4();
  v87 = sub_2489BFE28();
  if ((v86 & 1) == 0)
  {
    if (v87 > 63)
    {
      v106 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x24BDAC7A8](v87, v88);
      v92 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      v93 = sub_2489BBCB0((uint64_t)v92, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
      MEMORY[0x24BDAC7A8](v93, v94);
      sub_2489C974C();
      sub_2489BFE4C();
      v68 = sub_248A45498();
      sub_2489C3ADC((uint64_t)v92);
      sub_2489C3ADC((uint64_t)v92);
      goto LABEL_34;
    }
LABEL_32:
    sub_2489BFAEC();
    sub_2489C3ADC(v71);
LABEL_35:
    v95 = sub_2489BFAEC();
    sub_2489C3ADC((uint64_t)v8);
    sub_2489C32D0(v105, &qword_254464330);
    v33 = CoreTip.RecordStatus.init(rawValue:)(v95);
    sub_2489BCE44((uint64_t)v109);
    return v33;
  }
  if (v87 <= 64)
    goto LABEL_32;
  MEMORY[0x24BDAC7A8](v87, v88);
  sub_2489BFB1C();
  v91 = v89 - v90;
  sub_2489C974C();
  sub_2489BFE4C();
  v68 = sub_248A45498();
  sub_2489C3ADC(v91);
  sub_2489C3ADC(v71);
LABEL_34:
  if ((v68 & 1) == 0)
    goto LABEL_35;
  __break(1u);
LABEL_38:
  result = sub_2489C3ADC(v68);
LABEL_39:
  __break(1u);
  return result;
}

unint64_t CoreTip.RecordStatus.init(rawValue:)(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t CoreTip.RecordStatus.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_248A176D4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = CoreTip.RecordStatus.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_248A176FC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = CoreTip.RecordStatus.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_248A17728()
{
  unint64_t result;

  result = qword_2577A5670;
  if (!qword_2577A5670)
  {
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTip.RecordStatus, &type metadata for CoreTip.RecordStatus);
    atomic_store(result, (unint64_t *)&qword_2577A5670);
  }
  return result;
}

_WORD *_s6StatusVwCP(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s6StatusVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 65283 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65283 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65284;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s6StatusVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65283 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65283 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_248A17848 + 4 * byte_248A4D3C5[v4]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_248A1787C + 4 * asc_248A4D3C0[v4]))();
}

uint64_t sub_248A1787C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_248A17884(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x248A1788CLL);
  return result;
}

uint64_t sub_248A17898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x248A178A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_248A178A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_248A178AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreTip.Status()
{
  return &type metadata for CoreTip.Status;
}

uint64_t _s12RecordStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_248A17914 + 4 * byte_248A4D3CF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_248A17948 + 4 * byte_248A4D3CA[v4]))();
}

uint64_t sub_248A17948(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A17950(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A17958);
  return result;
}

uint64_t sub_248A17964(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A1796CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_248A17970(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A17978(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreTip.RecordStatus()
{
  return &type metadata for CoreTip.RecordStatus;
}

uint64_t sub_248A17994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  uint64_t v11;
  double v13;
  long double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];

  v1 = v0;
  v2 = sub_2489C330C(&qword_254463FF8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = _s12DisplayEventVMa();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_254462E50 != -1)
    swift_once();
  swift_retain();
  sub_248A08914((uint64_t)v5);
  swift_release();
  if (sub_2489BE834((uint64_t)v5, 1, v6) == 1)
  {
    sub_2489C32D0((uint64_t)v5, &qword_254463FF8);
  }
  else
  {
    sub_248A18A00((uint64_t)v5, (uint64_t)v9);
    v10 = *v9 == *(_QWORD *)(v0 + 16) && v9[1] == *(_QWORD *)(v0 + 24);
    if (v10 || (sub_248A45DBC() & 1) != 0)
    {
      sub_248A12F14((uint64_t)v9);
    }
    else
    {
      if (qword_254464E70 != -1)
        swift_once();
      swift_beginAccess();
      sub_248A44F10();
      v14 = -v13;
      v15 = Double.seconds.getter(-v13);
      v16 = sub_2489D9080(v15);
      v18 = v17;
      fmod(v14, 1.0);
      v19 = sub_248A4602C();
      MEMORY[0x2495A27B8](v16, v18, v19, v20);
      LOBYTE(v16) = sub_248A46038();
      sub_248A12F14((uint64_t)v9);
      if ((v16 & 1) != 0)
        return 1;
    }
  }
  swift_unownedRetainStrong();
  v11 = sub_248A16B0C((void (*)(uint64_t *__return_ptr, uint64_t))sub_248A18A44, v1);
  swift_release();
  return v11;
}

uint64_t sub_248A17BD8@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  unint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  _BYTE *v17;

  v17 = a2;
  v3 = sub_248A44F58();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v16 - v10;
  type metadata accessor for CoreTipRecord();
  _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  sub_248A44EEC();
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v8, v3);
  if (qword_254462590 != -1)
    swift_once();
  sub_2489C401C(v3, (uint64_t)qword_254462578);
  v13 = sub_248A1E7CC();
  v12(v11, v3);
  swift_retain();
  v14 = sub_248A17DBC(v13, a1);
  result = swift_bridgeObjectRelease();
  *v17 = v14 & 1;
  return result;
}

uint64_t sub_248A17DBC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_248A453F0();
  for (; v4; v4 = sub_248A45C18())
  {
    v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2495A2200](v5 - 4, a1);
      else
        swift_retain();
      v6 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if (CoreTipRecord.id.getter() == *(_QWORD *)(a2 + 16) && v7 == *(_QWORD *)(a2 + 24))
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        v9 = sub_248A45DBC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
        {
          swift_release();
        }
        else
        {
          sub_248A18FF8();
          v11 = v10;
          swift_release();
          if ((v11 & 1) == 0)
          {
            swift_release();
            v12 = 1;
            goto LABEL_22;
          }
        }
      }
      ++v5;
      if (v6 == v4)
        goto LABEL_21;
    }
    __break(1u);
LABEL_20:
    sub_248A453F0();
  }
LABEL_21:
  swift_release();
  v12 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_248A17F34@<X0>(void (*a1)(uint64_t)@<X1>, _OWORD *a2@<X8>)
{
  sub_248A45768();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_248A1818C(a1, a2);
  return swift_release();
}

uint64_t sub_248A17FFC(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v3;

  sub_248A45768();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v3 = sub_248A182BC(a2);
  swift_release();
  return v3;
}

uint64_t sub_248A180C4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  char v3;

  sub_248A45768();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v3 = sub_248A183D8(a2);
  swift_release();
  return v3 & 1;
}

uint64_t sub_248A1818C@<X0>(void (*a1)(uint64_t)@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  sub_248A45768();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    swift_retain();
    v5 = sub_248A4512C();
    swift_release();
    if ((sub_248A45090() & 1) != 0)
      sub_248A4509C();
    a1(v5);
    sub_248A450CC();
    swift_release();
    return swift_release();
  }
  else
  {
    result = swift_release();
    *a2 = xmmword_248A4A2E0;
  }
  return result;
}

uint64_t sub_248A182BC(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  sub_248A45768();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    swift_retain();
    sub_248A4512C();
    swift_release();
    if ((sub_248A45090() & 1) != 0)
      sub_248A4509C();
    v3 = sub_248A189A8(a1);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return 2;
  }
  return v3;
}

uint64_t sub_248A183D8(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t result;

  sub_248A45768();
  sub_248A4575C();
  sub_248A45738();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    swift_retain();
    sub_248A4512C();
    swift_release();
    if ((sub_248A45090() & 1) != 0)
      sub_248A4509C();
    v4 = sub_248A189A8(a1);
    swift_release();
    result = swift_release();
    if (!v2)
      return v4 & 1;
  }
  else
  {
    swift_release();
    return 1;
  }
  return result;
}

uint64_t sub_248A184FC(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  char isEscapingClosureAtFileLocation;

  sub_248A4575C();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    goto LABEL_6;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  a1();
  if (v2)
    return swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_248A45A74();
    sub_248A4557C();
    sub_248A46098();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A4557C();
    result = sub_248A45C00();
    __break(1u);
  }
  return result;
}

uint64_t sub_248A18688(void (*a1)(_QWORD *__return_ptr), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v9[2];

  sub_248A4575C();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) != 0)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = a2;
    a1(v9);
    if (v2)
    {
      swift_release();
      return v6;
    }
    v6 = LOBYTE(v9[0]);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return v6;
    __break(1u);
  }
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_248A45A74();
  sub_248A4557C();
  sub_248A46098();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  result = sub_248A45C00();
  __break(1u);
  return result;
}

uint64_t sub_248A18818(void (*a1)(_QWORD *__return_ptr), uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v10[2];

  sub_248A4575C();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) != 0)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = a2;
    a1(v10);
    if (v3)
    {
      swift_release();
      return a3 & 1;
    }
    a3 = v10[0];
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return a3 & 1;
    __break(1u);
  }
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_248A45A74();
  sub_248A4557C();
  sub_248A46098();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_248A4557C();
  result = sub_248A45C00();
  __break(1u);
  return result;
}

uint64_t sub_248A189A8(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1(&v4, v1);
  if (v2)
    return sub_248A450CC();
  sub_248A450CC();
  return v4;
}

uint64_t sub_248A18A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s12DisplayEventVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A18A44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_248A17BD8(v1, a1);
}

uint64_t sub_248A18A5C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_248A17FFC(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_248A18A84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_248A18A5C(*(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24), a1);
}

uint64_t sub_248A18AA4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_248A180C4(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_248A18AD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_248A18AA4(*(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24), a1);
}

uint64_t sub_248A18AF0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_248A17F34(*(void (**)(uint64_t))(v1 + 24), a1);
}

uint64_t CoreTipRecord.id.getter()
{
  uint64_t v0;

  sub_248A065A0();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544646C8);
  sub_248A44FD0();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544646D0);
  sub_248A451F8();
  sub_2489BEC4C();
  return v0;
}

uint64_t sub_248A18BD0()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  sub_248A1A360();
  sub_2489C6D5C(0x4449656C646E7562, 0xE800000000000000, &v4);
  sub_2489C330C(&qword_2544643E0);
  if (!sub_2489BFB58())
  {
    sub_2489BDA70();
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  v0 = v2;
  sub_2489BDA70();
  if (!v3)
    goto LABEL_5;
  return v0;
}

void CoreTipRecord.content.getter()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544646C8);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544646D0);
  sub_2489C61A0();
  sub_2489BEC4C();
  sub_2489BA868();
}

void CoreTipRecord.dateCreated.getter()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489B6B4C();
  sub_248A065C4(&qword_2544646C8);
  sub_248A0655C();
  sub_2489BA4B8();
  sub_2489B6B4C();
  sub_248A065C4(&qword_2544646D0);
  sub_2489F6410(&qword_2544640F8, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A1C0A4();
  sub_2489BA87C();
  sub_2489BA868();
}

void sub_248A18DA0()
{
  CoreTipRecord.dateCreated.getter();
  sub_2489BA7D0();
}

void sub_248A18DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_2489BA858();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489BEC94();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v1, a1);
  CoreTipRecord.dateCreated.setter();
  sub_2489B6AF4();
}

void CoreTipRecord.dateCreated.setter()
{
  uint64_t v0;

  sub_248A1C128();
  swift_getKeyPath();
  sub_248A1C174();
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  v0 = sub_2489BA858();
  sub_2489BF7BC(v0);
  sub_2489BA8A4();
}

void sub_248A18EA0()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_248A1C1B0();
  v0[1] = v1;
  sub_2489BA7D0();
}

void sub_248A18EBC()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_248A1C1B0();
  v0[1] = v1;
  sub_2489BA7D0();
}

void sub_248A18ED8()
{
  sub_2489BA7EC();
  CoreTipRecord.id.setter();
  sub_2489B6AF4();
}

uint64_t CoreTipRecord.id.setter()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_248A1C198();
  sub_2489BA4B8();
  return sub_2489BDA70();
}

uint64_t CoreTipRecord.__allocating_init(id:)()
{
  uint64_t v0;

  v0 = sub_2489B6B08();
  CoreTipRecord.init(id:)();
  return v0;
}

void sub_248A18FF8()
{
  uint64_t v0;
  _OWORD *v1;

  sub_248A1A360();
  sub_248A1C134();
  sub_2489C6D5C(0xD000000000000017, v0, v1);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BFB58();
  sub_2489BDA70();
  sub_2489BA928();
}

uint64_t sub_248A19074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  sub_2489C4880(a3, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_248A45048();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2489BCE44((uint64_t)v4);
}

uint64_t sub_248A1911C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_248A45210();
  return swift_release();
}

void CoreTipRecord.id.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = CoreTipRecord.id.getter();
  a1[1] = v3;
  sub_2489BA7D0();
}

void sub_248A191E4(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_248A453F0();
    sub_248A1C218();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_248A1C218();
    sub_2489B6AF4();
  }
}

uint64_t sub_248A1922C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD v5[4];

  sub_2489C4880(a2, (uint64_t)v5);
  sub_2489BE100(v5, v5[3]);
  swift_getKeyPath();
  v3 = sub_248A44F58();
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45048();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return sub_2489BCE44((uint64_t)v5);
}

uint64_t sub_248A192FC()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489F6410(&qword_2544643D0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_248A45210();
  return swift_release();
}

void CoreTipRecord.dateCreated.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2489BA858();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  CoreTipRecord.dateCreated.getter();
  sub_2489B6AF4();
}

void sub_248A19414(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    CoreTipRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreTipRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

void sub_248A194A0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489C9430();
  CoreTipRecord.content.getter();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A194C0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  CoreTipRecord.content.setter(v1);
}

void sub_248A194F0()
{
  CoreTipRecord.dateCreated.getter();
  sub_2489BA7D0();
}

uint64_t sub_248A19510()
{
  return sub_248A192FC();
}

uint64_t sub_248A19528()
{
  return sub_248A1911C();
}

void CoreTipRecord.content.setter(void *a1)
{
  sub_248A1C128();
  swift_getKeyPath();
  sub_248A1C174();
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489BFD2C();
  sub_2489BA87C();

  sub_2489BA8A4();
}

uint64_t sub_248A195C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  _QWORD v6[4];

  sub_2489C4880(a2, (uint64_t)v6);
  sub_2489BE100(v6, v6[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544641D0);
  sub_248A45030();
  swift_release();

  result = sub_2489BCE44((uint64_t)v6);
  *a3 = 0;
  return result;
}

uint64_t sub_248A1966C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_248A451B0();
  return swift_release();
}

void CoreTipRecord.content.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  CoreTipRecord.content.getter();
  *a1 = v3;
  sub_2489BA7D0();
}

void sub_248A19720(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    CoreTipRecord.content.setter(v2);

  }
  else
  {
    CoreTipRecord.content.setter(*a1);
  }
}

#error "248A19810: call analysis failed (funcsize=36)"

void sub_248A19824(uint64_t a1)
{
  CoreTipRecord.lastDisplayed.getter(a1);
  sub_2489BA7D0();
}

void sub_248A19840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489BEC94();
  sub_2489E9DA0(a1, v1);
  CoreTipRecord.lastDisplayed.setter();
  sub_2489B6AF4();
}

void CoreTipRecord.lastDisplayed.setter()
{
  sub_248A1C128();
  swift_getKeyPath();
  sub_248A1C174();
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  sub_248A1C208();
  sub_2489BA8A4();
}

uint64_t sub_248A19918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_2489C4880(a2, (uint64_t)v11);
  sub_2489BE100(v11, v12);
  swift_getKeyPath();
  sub_2489C330C(&qword_254464A98);
  sub_248A1BFB0((uint64_t)&unk_254464108, (uint64_t)&qword_2544643D0, MEMORY[0x24BDCE920], MEMORY[0x24BEE4AA8], v5, v6, v7, v8, v10, v11[0], v11[1], v11[2], v12, v13, v14, v15, v16, v17);
  sub_248A45048();
  swift_release();
  sub_248A02178(a1);
  result = sub_2489BCE44((uint64_t)v11);
  *a3 = 0;
  return result;
}

#error "248A19A68: call analysis failed (funcsize=37)"

void CoreTipRecord.lastDisplayed.modify(_QWORD *a1)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(sub_2489C330C(&qword_254464A98) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  CoreTipRecord.lastDisplayed.getter(v4);
  sub_2489B6AF4();
}

void sub_248A19B08(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_2489E9DA0((uint64_t)v3, (uint64_t)v2);
    CoreTipRecord.lastDisplayed.setter();
    sub_248A02178((uint64_t)v3);
  }
  else
  {
    CoreTipRecord.lastDisplayed.setter();
  }
  free(v3);
  sub_248A1C068(v2);
}

void CoreTipRecord.rules.getter()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544646C8);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  type metadata accessor for CoreRuleRecord();
  sub_2489BA4CC(&qword_2544646D0);
  sub_2489F4510();
  sub_248A451EC();
  sub_2489BEC4C();
  sub_2489BA868();
}

void sub_248A19C10()
{
  _QWORD *v0;
  uint64_t v1;

  sub_248A1C1A4();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A19C2C()
{
  sub_248A453F0();
  CoreTipRecord.rules.setter();
  sub_2489BA7D0();
}

void CoreTipRecord.rules.setter()
{
  sub_248A1C128();
  swift_getKeyPath();
  sub_248A1C174();
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  sub_2489BDA70();
  sub_2489BA8A4();
}

uint64_t sub_248A19CCC@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2489C4880(a1, (uint64_t)v4);
  sub_2489BE100(v4, v4[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544642A8);
  type metadata accessor for CoreRuleRecord();
  sub_2489F4510();
  sub_248A4503C();
  swift_release();
  swift_bridgeObjectRelease();
  result = sub_2489BCE44((uint64_t)v4);
  *a2 = 0;
  return result;
}

uint64_t sub_248A19DA0()
{
  swift_getKeyPath();
  type metadata accessor for CoreRuleRecord();
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489F4510();
  sub_248A45204();
  return swift_release();
}

void CoreTipRecord.rules.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  CoreTipRecord.rules.getter();
  *a1 = v3;
  sub_2489BA7D0();
}

void sub_248A19E70(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_248A453F0();
    CoreTipRecord.rules.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    CoreTipRecord.rules.setter();
    sub_2489BA7D0();
  }
}

uint64_t sub_248A19EB0()
{
  return sub_248A1A064();
}

void CoreTipRecord.status.getter()
{
  __int16 v0;
  _WORD v1[12];
  uint64_t v2;
  unint64_t v3;

  v0 = sub_248A19EB0();
  v2 = MEMORY[0x24BEE3F30];
  v3 = sub_2489BE970();
  v1[0] = v0;
  sub_248A17058((uint64_t)v1);
  sub_2489BA928();
}

void sub_248A19F0C()
{
  _BYTE *v0;
  char v1;

  sub_248A1C1BC();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A19F28()
{
  sub_248A1C1D4();
  sub_2489BA7D0();
}

void CoreTipRecord.status.setter()
{
  sub_248A1A11C();
}

void CoreTipRecord.status.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  CoreTipRecord.status.getter();
  *(_BYTE *)(a1 + 8) = v3;
  sub_2489BA7D0();
}

void sub_248A19F98()
{
  CoreTipRecord.status.setter();
  sub_2489BA7D0();
}

void sub_248A19FB8(uint64_t a1, uint64_t a2)
{
  _QWORD v2[4];

  sub_2489C4880(a2, (uint64_t)v2);
  sub_2489BE100(v2, v2[3]);
  swift_getKeyPath();
  sub_248A45048();
  swift_release();
  sub_2489BCE44((uint64_t)v2);
  sub_2489C33CC();
}

uint64_t sub_248A1A058()
{
  return sub_248A1A064();
}

uint64_t sub_248A1A064()
{
  unsigned __int16 v1;

  sub_248A065A0();
  swift_getKeyPath();
  sub_2489BA4CC(&qword_2544646C8);
  sub_2489BF5CC();
  sub_2489BA87C();
  swift_getKeyPath();
  sub_2489BA4CC(&qword_2544646D0);
  sub_248A451F8();
  swift_release();
  return v1;
}

void sub_248A1A11C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_248A1C198();
  sub_2489BA4B8();
  sub_2489C33CC();
}

uint64_t sub_248A1A1B8()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_248A45210();
  return swift_release();
}

void CoreTipRecord.invalidationReason.setter()
{
  sub_248A1A11C();
}

void CoreTipRecord.invalidationReason.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  CoreTipRecord.invalidationReason.getter();
  *(_BYTE *)(a1 + 8) = v3;
  sub_2489BA7D0();
}

void sub_248A1A298()
{
  CoreTipRecord.invalidationReason.setter();
  sub_2489BA7D0();
}

uint64_t sub_248A1A2B8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  sub_2489C4880(a2, (uint64_t)v3);
  sub_2489BE100(v3, v3[3]);
  swift_getKeyPath();
  sub_2489C330C(&qword_2544643D8);
  sub_248A45030();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2489BCE44((uint64_t)v3);
}

void sub_248A1A360()
{
  sub_248A065A0();
  sub_248A06574();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544646C8);
  sub_2489BF5CC();
  sub_2489BA87C();
  sub_2489BD8A8();
  sub_2489BA4CC(&qword_2544646D0);
  sub_2489C61A0();
  sub_2489BEC4C();
  sub_2489BA868();
}

void sub_248A1A3E8()
{
  sub_248A453F0();
  sub_248A1A410();
}

void sub_248A1A410()
{
  sub_248A1C128();
  swift_getKeyPath();
  sub_248A1C174();
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_2489BFD2C();
  sub_2489BA87C();
  sub_2489BDA70();
  sub_2489BA8A4();
}

uint64_t sub_248A1A48C()
{
  swift_getKeyPath();
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_248A451B0();
  return swift_release();
}

void sub_248A1A510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_2489B6B60();
  sub_248A1C180(v0);
  sub_2489C330C(&qword_254463A78);
  sub_2489C330C(&qword_2544643C0);
  v1 = sub_2489C27D8();
  v9 = sub_248A1C150(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  sub_248A2F3A0((uint64_t)v9, v10 & 0xFFFFFFFFFFFFLL | 0x4379000000000000, 0xEC000000746E756FLL);
  sub_2489C0C20();
  sub_2489BFB64();
}

void sub_248A1A574()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;

  sub_248A1A360();
  v0 = sub_248A1C0FC();
  sub_2489C6D5C(v0, 0xEC00000073657461, v1);
  sub_2489C330C(&qword_2544643E0);
  sub_2489C330C(&qword_2544625B0);
  if (!sub_2489BF7AC())
  {
    sub_2489BDA70();
LABEL_5:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_2489BDA70();
  if (!v2)
    goto LABEL_5;
LABEL_6:
  sub_2489C4F7C();
}

void sub_248A1A608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2489B6B60();
  v3 = v0;
  v4 = v1;
  sub_2489BA7EC();
  sub_2489C330C(&qword_2544625B8);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C0700();
  sub_248A2F3A0((uint64_t)&v2, 0x4479616C70736964, 0xEC00000073657461);
  swift_bridgeObjectRelease();
  sub_2489C6C2C();
  sub_2489BA8A4();
}

void sub_248A1A694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_248A1A360();
  sub_2489C330C(&qword_254462E58);
  sub_2489C330C(&qword_2544643C0);
  v0 = sub_2489C27D8();
  v8 = sub_248A1C150(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11);
  sub_248A2F3A0((uint64_t)v8, v9 & 0xFFFFFFFFFFFFLL | 0x4479000000000000, 0xEF6E6F6974617275);
  sub_2489C0C20();
  sub_2489C33CC();
}

void sub_248A1A714()
{
  uint64_t v0;
  _OWORD *v1;

  sub_248A1A360();
  sub_248A1C134();
  sub_2489C6D5C(0xD000000000000014, v0, v1);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BFB58();
  sub_2489BDA70();
  sub_2489C4F7C();
}

void sub_248A1A79C()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_2489B6B60();
  sub_248A1C180(v0);
  sub_2489C330C(&qword_254463A78);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C27D8();
  sub_248A1C074((uint64_t)v1, 20, 0x8000000248A50E30);
  sub_2489C0C20();
  sub_2489BFB64();
}

void sub_248A1A808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_248A1C0BC();
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489C944C(v5, v6, v7, v8, v9, v10, v11, v12, v14);
  sub_248A1A360();
  sub_248A1C118(v13);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C0700();
  sub_248A2F3A0((uint64_t)v15, 0x696C457473726966, 0xED0000656C626967);
  sub_248A02178(v0);
  sub_248A1C1C8();
  sub_248A1C208();
  sub_2489BA828();
}

void sub_248A1A8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_2489C62D8();
  sub_2489C4C6C(0xD000000000000012, 0x8000000248A50E50, v2, &v3);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BA858();
  if (sub_2489BF7AC())
    sub_2489BBCD0();
  else
    sub_248A1C07C();
  sub_248A1C0D8();
  sub_2489BA828();
}

void sub_248A1A980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_248A1C0BC();
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489C944C(v5, v6, v7, v8, v9, v10, v11, v12, v14);
  sub_248A1A360();
  sub_248A1C118(v13);
  sub_2489C330C(&qword_2544643C0);
  sub_2489C0700();
  sub_248A1C074((uint64_t)v15, 18, 0x8000000248A50E50);
  sub_248A02178(v0);
  sub_248A1C1C8();
  sub_248A1C208();
  sub_2489BA828();
}

void sub_248A1AA38()
{
  __int128 v0;

  sub_248A1A360();
  sub_2489C6D5C(0xD000000000000011, 0x8000000248A50C00, &v0);
  sub_2489C330C(&qword_2544643E0);
  sub_2489BFB58();
  sub_2489BDA70();
  sub_2489BA928();
}

unint64_t CoreTipRecord.description.getter()
{
  sub_248A45A74();
  swift_bridgeObjectRelease();
  CoreTipRecord.id.getter();
  sub_248A4557C();
  sub_2489BDA70();
  sub_248A4557C();
  return 0xD000000000000012;
}

void CoreTipRecord.init(id:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_2489BBC7C();
  v5 = v4 - v3;
  v6 = sub_2489BA858();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_2489BBC7C();
  v0[6] = sub_2489C330C(&qword_254464260);
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  v0[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v0 + 3);
  sub_248A4518C();
  sub_248A19074(0, 0xE000000000000000, (uint64_t)(v0 + 3));
  sub_248A44F4C();
  sub_248A1C168();
  sub_248A1922C(v9, v10);
  sub_248A1C168();
  sub_248A195C0(v11, v12, v13);
  sub_2489BE7E0(v5, 1, 1, v6);
  sub_248A1C168();
  sub_248A19918(v14, v15, v16);
  sub_248A1C168();
  sub_248A19CCC(v17, v18);
  sub_248A1C190(0, (uint64_t)(v0 + 3));
  sub_248A1C190(0, (uint64_t)(v0 + 3));
  sub_2489C330C(&qword_2544643C0);
  sub_248A453C0();
  sub_248A1C168();
  sub_248A1A2B8(v19, v20);
  sub_248A44FDC();
  CoreTipRecord.id.setter();
  sub_2489B71E4();
}

uint64_t sub_248A1AD34()
{
  return sub_248A1966C();
}

void sub_248A1AD4C(uint64_t a1)
{
  CoreTipRecord.lastDisplayed.getter(a1);
  sub_2489BA7D0();
}

uint64_t sub_248A1AD6C()
{
  uint64_t v0;

  return sub_248A199F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_248A1AD84()
{
  _QWORD *v0;
  uint64_t v1;

  sub_248A1C1A4();
  *v0 = v1;
  sub_2489BA7D0();
}

uint64_t sub_248A1ADA4()
{
  return sub_248A19DA0();
}

void CoreTipRecord.persistentBackingData.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2489BFA10();
  sub_2489C4880(v1 + 24, a1);
  sub_2489B7208();
}

void sub_248A1ADF8(uint64_t a1)
{
  __int128 v1[2];

  sub_2489C4880(a1, (uint64_t)v1);
  CoreTipRecord.persistentBackingData.setter(v1);
}

void CoreTipRecord.persistentBackingData.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 24;
  sub_2489BFA10();
  sub_2489BCE44(v3);
  sub_2489B8F74(a1, v3);
  swift_endAccess();
  sub_2489B7208();
}

void CoreTipRecord.persistentBackingData.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  sub_2489BFA10();
  sub_2489C4880(v1 + 24, (uint64_t)v3);
  sub_2489B6AF4();
}

void static CoreTipRecord.schemaMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t KeyPath;
  __n128 *v21;
  uint64_t v22;
  __n128 *v23;
  uint64_t v24;
  __n128 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v36 = sub_248A45330();
  v0 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v1);
  sub_2489C0054();
  v33 = v2;
  v32 = sub_248A452F4();
  v3 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v4);
  sub_2489C0054();
  v31 = v5;
  sub_2489C330C(&qword_2544647F8);
  v6 = *(_QWORD *)(v0 + 72);
  v35 = v0;
  v7 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A4D4F0;
  v34 = v7;
  swift_getKeyPath();
  *(_QWORD *)&v38 = 0;
  *((_QWORD *)&v38 + 1) = 0xE000000000000000;
  sub_248A45378();
  v8 = (void (*)(uint64_t))MEMORY[0x24BDEAC08];
  sub_2489BED94();
  sub_2489BFFEC();
  sub_2489F6410(&qword_2544647B8, v8);
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v39 + 1) = sub_2489BA858();
  sub_2489EBF34((uint64_t *)&v38);
  sub_248A44F4C();
  sub_2489BF610();
  v9 = sub_2489BFFEC();
  sub_2489C26B0(v9);
  sub_248A1C210();
  swift_getKeyPath();
  v38 = 0u;
  v39 = 0u;
  sub_2489C330C(&qword_254464800);
  sub_248A4536C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A47480;
  sub_2489C330C(&qword_2544647A8);
  sub_248A45360();
  sub_2489BF610();
  sub_248A45384();
  sub_248A45324();
  swift_getKeyPath();
  v38 = 0u;
  v39 = 0u;
  sub_2489BF610();
  v10 = MEMORY[0x24BEE4AF8];
  v11 = sub_2489BFFEC();
  sub_2489C26B0(v11);
  sub_248A45324();
  swift_getKeyPath();
  *((_QWORD *)&v39 + 1) = sub_2489C330C(&qword_2544647C8);
  *(_QWORD *)&v38 = v10;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v31, *MEMORY[0x24BDEAB50], v32);
  swift_getKeyPath();
  sub_248A45300();
  sub_2489BED94();
  sub_248A4530C();
  sub_2489F6410(&qword_2544647B0, (void (*)(uint64_t))MEMORY[0x24BDEAB70]);
  sub_248A45324();
  swift_getKeyPath();
  v12 = MEMORY[0x24BEE1768];
  *((_QWORD *)&v39 + 1) = MEMORY[0x24BEE1768];
  *(_QWORD *)&v38 = 0;
  sub_2489BF610();
  v13 = sub_2489BFFEC();
  sub_2489C26B0(v13);
  sub_248A1C210();
  swift_getKeyPath();
  *((_QWORD *)&v39 + 1) = v12;
  *(_QWORD *)&v38 = 0;
  sub_2489BF610();
  sub_2489BFFEC();
  sub_248A1C1E0();
  sub_248A1C210();
  swift_getKeyPath();
  v14 = sub_248A453C0();
  *((_QWORD *)&v39 + 1) = sub_2489C330C(&qword_2544647C0);
  *(_QWORD *)&v38 = v14;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A47480;
  type metadata accessor for RawDictionaryTransformer();
  sub_248A45360();
  sub_2489BF610();
  v37 = sub_2489BFFEC();
  sub_248A45324();
  swift_getKeyPath();
  v38 = 0u;
  v39 = 0u;
  sub_2489C330C(&qword_254464908);
  v15 = sub_2489C330C(&qword_254464890);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_248A496D0;
  v19 = (uint64_t *)(v18 + v17);
  sub_2489C330C(&qword_254464818);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_248A49100;
  KeyPath = swift_getKeyPath();
  sub_2489BA8D8(KeyPath);
  *v19 = v37;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v19, *MEMORY[0x24BDEABA0], v15);
  v21 = (__n128 *)sub_2489BEDE0();
  sub_248A065B4(v21);
  v22 = swift_getKeyPath();
  sub_2489BA8D8(v22);
  sub_2489C0504();
  v23 = (__n128 *)sub_2489BEDE0();
  sub_248A065B4(v23);
  v24 = swift_getKeyPath();
  sub_2489BA8D8(v24);
  sub_2489C0504();
  v25 = (__n128 *)sub_2489BEDE0();
  sub_248A065B4(v25);
  v26 = swift_getKeyPath();
  sub_2489BA8D8(v26);
  sub_2489C0504();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_248A496E0;
  *(_QWORD *)(v27 + 32) = swift_getKeyPath();
  *(_QWORD *)(v27 + 40) = swift_getKeyPath();
  sub_248A456A8();
  sub_2489C0504();
  sub_2489C330C(&qword_2544648E0);
  sub_2489BED94();
  sub_248A4533C();
  sub_2489F5DEC(&qword_2544648D8, &qword_2544648E0);
  sub_248A1C1E0();
  sub_248A45324();
  v28 = sub_2489EC9A4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v30 = *(_QWORD *)(v28 + 16);
  v29 = *(_QWORD *)(v28 + 24);
  if (v30 >= v29 >> 1)
    v28 = sub_2489EC9A4(v29 > 1, v30 + 1, 1, v28);
  *(_QWORD *)(v28 + 16) = v30 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))(v28 + v34 + v30 * v6, v33, v36);
  sub_2489EA990();
  sub_2489B71E4();
}

void sub_248A1B738()
{
  _WORD *v0;

  sub_2489C9430();
  *v0 = sub_248A19EB0();
  sub_2489BA7D0();
}

void sub_248A1B758()
{
  sub_248A1A11C();
  sub_2489BA7D0();
}

void sub_248A1B788()
{
  _WORD *v0;

  sub_2489C9430();
  *v0 = sub_248A1A058();
  sub_2489BA7D0();
}

void sub_248A1B7A8()
{
  sub_248A1A11C();
  sub_2489BA7D0();
}

void sub_248A1B7D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2489C9430();
  sub_248A1A360();
  *v0 = v1;
  sub_2489BA7D0();
}

void CoreTipRecord.__allocating_init(backingData:)(uint64_t a1)
{
  sub_2489B6B08();
  CoreTipRecord.init(backingData:)(a1);
  sub_2489BA7D0();
}

_QWORD *CoreTipRecord.init(backingData:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = *v1;
  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  v10 = sub_2489BA858();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489BBC7C();
  v2[6] = sub_2489C330C(&qword_254464260);
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  *(_QWORD *)&v27 = v4;
  *((_QWORD *)&v27 + 1) = v4;
  v28 = v13;
  v29 = v13;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_2489EBF34(v2 + 3);
  sub_248A4518C();
  sub_248A19074(0, 0xE000000000000000, (uint64_t)(v2 + 3));
  sub_248A44F4C();
  sub_248A06550();
  sub_248A1922C(v14, v15);
  sub_248A06550();
  sub_248A195C0(v16, v17, v18);
  sub_2489BE7E0(v9, 1, 1, v10);
  sub_248A06550();
  sub_248A19918(v19, v20, v21);
  sub_248A06550();
  sub_248A19CCC(v22, v23);
  sub_248A1C190(0, (uint64_t)(v2 + 3));
  sub_248A1C190(0, (uint64_t)(v2 + 3));
  sub_2489C330C(&qword_2544643C0);
  sub_248A453C0();
  sub_248A06550();
  sub_248A1A2B8(v24, v25);
  sub_248A44FDC();
  *((_WORD *)v2 + 8) = 0;
  *((_BYTE *)v2 + 18) = 0;
  sub_2489C4880(a1, (uint64_t)&v27);
  sub_2489BFA10();
  sub_2489BCE44((uint64_t)(v2 + 3));
  sub_2489B8F74(&v27, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_2489BCE44(a1);
  return v2;
}

void CoreTipRecord.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  sub_2489BA7D0();
}

uint64_t CoreTipRecord.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BCE44(v0 + 24);
  v1 = sub_2489BD9A8();
  sub_2489BF7BC(v1);
  return swift_deallocClassInstance();
}

uint64_t sub_248A1BACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreTipRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_248A1BAF4()
{
  return CoreTipRecord.description.getter();
}

uint64_t CoreTipRecord.hashValue.getter()
{
  sub_248A45F90();
  sub_2489F6410(&qword_2544646D8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_248A45480();
  return sub_248A45FD8();
}

uint64_t (*sub_248A1BB8C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  swift_beginAccess();
  sub_2489C4880(v1 + 24, (uint64_t)v3);
  return sub_248A1AED8;
}

void sub_248A1BBF4(uint64_t *a1, char a2)
{
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (__int128 *)(*a1 + 40);
  if ((a2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v2 + 128) + 24;
    sub_2489C4880(*a1, (uint64_t)v3);
    sub_2489BFA10();
    sub_2489BCE44(v4);
    sub_2489B8F74(v3, v4);
    swift_endAccess();
    sub_2489BCE44(v2);
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 128) + 24;
    sub_2489BFA10();
    sub_2489BCE44(v5);
    sub_2489B8F74((__int128 *)v2, v5);
    swift_endAccess();
  }
  sub_248A1C068((void *)v2);
}

void sub_248A1BCA0()
{
  static CoreTipRecord.schemaMetadata.getter();
}

uint64_t sub_248A1BCB4()
{
  return CoreTipRecord.hashValue.getter();
}

uint64_t sub_248A1BCD4()
{
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  return sub_248A451D4();
}

uint64_t sub_248A1BD2C()
{
  sub_2489F6410(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  return sub_248A451BC();
}

void sub_248A1BD80()
{
  sub_2489F6410(&qword_2544646C8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

void sub_248A1BDAC()
{
  sub_2489F6410(&qword_2544646D8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

void sub_248A1BDD8()
{
  sub_2489F6410(&qword_2544646E8, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

void sub_248A1BE04()
{
  sub_2489F6410(&qword_2544646E0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

void sub_248A1BE30()
{
  _BYTE *v0;
  char v1;

  sub_248A1C1BC();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A1BE4C()
{
  sub_248A1C1D4();
  sub_2489BA7D0();
}

void sub_248A1BE64()
{
  _BYTE *v0;
  char v1;

  sub_2489C9430();
  CoreTipRecord.invalidationReason.getter();
  *v0 = v1;
  sub_2489BA7D0();
}

void sub_248A1BE84()
{
  CoreTipRecord.invalidationReason.setter();
  sub_2489BA7D0();
}

void sub_248A1BEA4(uint64_t a1@<X8>)
{
  CoreTipRecord.persistentBackingData.getter(a1);
  sub_2489BA7D0();
}

uint64_t sub_248A1BEC4()
{
  return type metadata accessor for CoreTipRecord();
}

uint64_t sub_248A1BECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_248A44FE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CoreTipRecord()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreTipRecord.__allocating_init(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of CoreTipRecord.__allocating_init(backingData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for CoreTipRecord._SwiftDataNoType()
{
  return &type metadata for CoreTipRecord._SwiftDataNoType;
}

uint64_t sub_248A1BF98()
{
  return sub_248A1A48C();
}

void sub_248A1BFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  sub_248A065A0();
  a17 = v18;
  a18 = v21;
  v23 = v22;
  if (!*v22)
  {
    v24 = v20;
    v25 = v19;
    v26 = sub_2489BCD7C(&qword_254464A98);
    sub_2489F6410(v25, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    a10 = v27;
    atomic_store(MEMORY[0x2495A2D34](v24, v26, &a10), v23);
  }
  sub_2489BA868();
}

uint64_t sub_248A1C020()
{
  return sub_248A1A1B8();
}

uint64_t sub_248A1C044()
{
  return sub_248A1A1B8();
}

void sub_248A1C068(void *a1)
{
  free(a1);
}

void sub_248A1C074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248A2F3A0(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3);
}

uint64_t sub_248A1C07C()
{
  uint64_t v0;
  uint64_t v1;

  sub_2489BE7E0(v0, 1, 1, v1);
  return sub_248A02178(v0);
}

uint64_t sub_248A1C0A4()
{
  return sub_248A451F8();
}

uint64_t sub_248A1C0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2489BE7E0(v0, v2, 1, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_248A1C0FC()
{
  return 0x4479616C70736964;
}

uint64_t sub_248A1C118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 56) = a1;
  return sub_2489E9DA0(v2, v1);
}

char *sub_248A1C150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t sub_248A1C180(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 40) = result;
  return result;
}

void sub_248A1C190(uint64_t a1, uint64_t a2)
{
  sub_248A19FB8(a1, a2);
}

uint64_t sub_248A1C198()
{
  return sub_248A44FC4();
}

void sub_248A1C1A4()
{
  CoreTipRecord.rules.getter();
}

uint64_t sub_248A1C1B0()
{
  return CoreTipRecord.id.getter();
}

void sub_248A1C1BC()
{
  CoreTipRecord.status.getter();
}

void sub_248A1C1C8()
{
  sub_248A1A410();
}

void sub_248A1C1D4()
{
  CoreTipRecord.status.setter();
}

uint64_t *sub_248A1C1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t sub_248A1C208()
{
  uint64_t v0;

  return sub_248A02178(v0);
}

uint64_t sub_248A1C210()
{
  return sub_248A45324();
}

uint64_t sub_248A1C218()
{
  return CoreTipRecord.id.setter();
}

void sub_248A1C224(uint64_t a1, char a2)
{
  char v4;
  char v5;
  char v6;

  sub_2489C7D1C();
  if ((v4 & 1) != 0)
    sub_2489D6694(a1, a2);
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_254464F40 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    if ((byte_25446499C & 1) == 0
      && (byte_254464F42 & 1) == 0
      && !*((_QWORD *)off_254464F48 + 2)
      && (byte_254464F50 & 1) == 0)
    {
      v5 = word_254464F60;
      if (*((_QWORD *)off_254464F58 + 2))
        v5 = 1;
      if ((v5 & 1) == 0)
      {
        sub_248A18FF8();
        if ((v6 & 1) == 0)
        {
          sub_248A1C7DC();
          sub_2489D5BBC(a1, a2);
        }
      }
    }
  }
}

void sub_248A1C358(uint64_t a1)
{
  char v2;
  char v3;
  char v4;

  sub_2489C7D1C();
  if ((v2 & 1) != 0)
    sub_2489D668C(a1);
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BD8B0();
  if (byte_254464F40 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    if ((byte_25446499C & 1) == 0
      && (byte_254464F42 & 1) == 0
      && !*((_QWORD *)off_254464F48 + 2)
      && (byte_254464F50 & 1) == 0)
    {
      v3 = word_254464F60;
      if (*((_QWORD *)off_254464F58 + 2))
        v3 = 1;
      if ((v3 & 1) == 0)
      {
        sub_248A18FF8();
        if ((v4 & 1) == 0)
        {
          sub_248A1C7DC();
          sub_2489D5900();
        }
      }
    }
  }
}

void sub_248A1C480(uint64_t a1, char a2)
{
  char v4;
  char v5;

  sub_2489C7D1C();
  if ((v4 & 1) != 0)
    sub_2489D6854(a1, a2);
  v5 = sub_248A13400(a2);
  sub_248A1C224(a1, v5);
}

void sub_248A1C4E0(uint64_t a1, char a2, char a3)
{
  char v7;
  char v8;

  if (a2 == 1 && a3 == 0)
    sub_248A1C224(a1, 15);
  sub_2489C7D1C();
  if (!a2 && (v7 & 1) != 0 && a3 == 1)
    sub_2489D6BD4(a1);
  sub_2489C7D1C();
  if ((v8 & 1) != 0 && a2 != a3)
    sub_2489D691C(a1);
}

void sub_248A1C580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  int v20;
  double v21;
  long double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_2489C330C(&qword_254464A98);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v30 - v9;
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v30 - v12;
  v14 = sub_248A44F58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C7D1C();
  if ((v19 & 1) != 0)
  {
    sub_2489C4B1C();
    if (sub_2489C3BCC((uint64_t)v13) == 1)
    {
      sub_248A02178((uint64_t)v13);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
      sub_248A1A8CC();
      v20 = sub_2489C3BCC((uint64_t)v10);
      sub_248A02178((uint64_t)v10);
      if (v20 == 1)
      {
        sub_248A44F10();
        v22 = -v21;
        v23 = Double.seconds.getter(-v21);
        v24 = sub_2489D9080(v23);
        v26 = v25;
        fmod(v22, 1.0);
        v27 = sub_248A4602C();
        MEMORY[0x2495A27B8](v24, v26, v27, v28);
        if (qword_254464E70 != -1)
          swift_once();
        sub_2489BD8B0();
        if ((sub_248A46038() & 1) == 0)
        {
          sub_248A1A714();
          sub_2489D6AF8(v1, (uint64_t)v18, v29);
          _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
          sub_2489BE7E0((uint64_t)v6, 0, 1, v14);
          sub_248A1A980();
        }
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }
  }
}

unint64_t sub_248A1C7DC()
{
  unint64_t result;

  result = qword_254463028;
  if (!qword_254463028)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254463028);
  }
  return result;
}

void sub_248A1C818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8[2];

  v8[0] = a1;
  v8[1] = a2;
  v5 = *(os_unfair_lock_s **)(v3 + 16);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_248A1D940(v6, v8, a3);
  os_unfair_lock_unlock(v7);
}

void sub_248A1C874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v7 = sub_2489C330C(&qword_254464970);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248A1D7C4(a4, (uint64_t)v10);
  sub_248A453F0();
  sub_248A2F29C((uint64_t)v10, a2, a3);
}

uint64_t sub_248A1C918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2489C330C(&qword_2544643A8);
  v5 = sub_2489C330C(&qword_254464028);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_248A47480;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v8 + v7, a4, v5);
  sub_2489F1F28();
  v10 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_248A1CA04()
{
  sub_248A1CA3C();
}

void sub_248A1CA20()
{
  sub_248A1CA3C();
}

void sub_248A1CA3C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  sub_2489BED74();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489C0068();
  if (!v2(v10, v8, v6, v4))
  {
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_248A1D7C4(v10, v0);
    sub_248A454F8();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489C9824();
    sub_2489BF740();
    *v13 = 0xD000000000000026;
    v13[1] = 0x8000000248A50E70;
    swift_willThrow();
  }
  sub_2489BA808();
}

void sub_248A1CB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_2489BED74();
  v22 = v0;
  v23 = v1;
  v21 = v2;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v20 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v18 - v8;
  v10 = sub_248A452AC();
  v19 = *(_QWORD *)(v10 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_2489C0054();
  v18 = v13;
  if (qword_254464530 != -1)
    swift_once();
  swift_retain();
  sub_2489BF87C();
  sub_2489F7468();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_2489BE834((uint64_t)v9, 1, v10) == 1)
  {
    sub_2489EE974((uint64_t)v9);
    sub_2489BF87C();
    sub_248A1D2A0();
    sub_2489BEE88();
  }
  else
  {
    v15 = v18;
    v14 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v18, v9, v10);
    v16 = (uint64_t)v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, v15, v10);
    sub_2489BE7E0(v16, 0, 1, v10);
    sub_2489C330C(&qword_254464818);
    v17 = sub_2489BD9B4();
    *(_OWORD *)(v17 + 16) = xmmword_248A49100;
    *(_QWORD *)(v17 + 32) = swift_getKeyPath();
    sub_248A456A8();
    sub_248A1CA3C();
    sub_2489BEE88();
    sub_2489EE974(v16);
    sub_2489BA934();
  }
  sub_2489BA808();
}

void sub_248A1CD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2489BED74();
  v11 = v1;
  v12 = sub_2489C330C(&qword_254464118);
  v2 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v3);
  sub_2489C0068();
  v4 = sub_2489C330C(&qword_254464028);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  sub_2489C330C(&qword_254464818);
  v10 = sub_2489BD9B4();
  *(_OWORD *)(v10 + 16) = xmmword_248A49100;
  *(_QWORD *)(v10 + 32) = swift_getKeyPath();
  sub_248A456A8();
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2489C6D64();
  sub_2489C051C();
  sub_248A1C918(v11, 0, v10, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  sub_2489BA808();
}

uint64_t sub_248A1CF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_2489BED74();
  v1 = sub_2489C330C(&qword_254464118);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  sub_2489C0068();
  v4 = sub_2489C330C(&qword_254464028);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2489C6D64();
  sub_2489C051C();
  sub_2489F6CFC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t sub_248A1D058@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_2489C330C(&qword_254464060);
  v18 = *(_QWORD *)(v4 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BBC7C();
  v9 = v8 - v7;
  v10 = sub_2489C330C(&qword_2544640D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_2489BA838();
  v13 = sub_2489C330C(&qword_2544640A0);
  v17 = *(_QWORD *)(v13 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489C0068();
  sub_2489EEB7C(&qword_2544640C8, &qword_2544640D0);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v10);
  sub_248A44DB4();
  a1[3] = sub_2489C330C(&qword_254464048);
  a1[4] = sub_248A14560();
  sub_2489BE690(a1);
  sub_2489EEB7C((uint64_t *)&qword_254464098, &qword_2544640A0);
  sub_2489EEB7C((uint64_t *)&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v9, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v1, v13);
}

uint64_t sub_248A1D278@<X0>(uint64_t *a1@<X8>)
{
  return sub_248A1D058(a1);
}

void sub_248A1D2A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[5];
  char v52;

  sub_2489BED74();
  v3 = v0;
  v49 = v4;
  v50 = v5;
  v7 = v6;
  v48 = v8;
  v10 = v9;
  v12 = v11;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489C0054();
  v44 = v15;
  sub_2489C330C(&qword_254464118);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489BBC7C();
  v20 = v19 - v18;
  v46 = sub_2489C330C(&qword_254464028);
  MEMORY[0x24BDAC7A8](v46, v21);
  sub_2489BA838();
  sub_2489C330C(&qword_254464818);
  v22 = sub_2489BD9B4();
  *(_OWORD *)(v22 + 16) = xmmword_248A49100;
  *(_QWORD *)(v22 + 32) = swift_getKeyPath();
  v51[0] = v22;
  sub_248A456A8();
  swift_getKeyPath();
  sub_2489EE9F0(&qword_2544640F0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2489C6D64();
  sub_248A44FAC();
  sub_248A453F0();
  v47 = sub_248A3BFC0(v7, 0, v22, v2, v20, v3, v12, v10);
  if (v1)
  {
    sub_2489BBC58();

    sub_2489C1C30();
    sub_2489C0A60();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v51[0] = 0xD000000000000024;
    v51[1] = 0x8000000248A50EA0;
    (*(void (**)(uint64_t))(v50 + 32))(v49);
    sub_248A4557C();
    sub_2489BEE88();
    sub_248A4557C();
    sub_2489C9824();
    sub_2489BF740();
    *v23 = 0xD000000000000024;
    v23[1] = 0x8000000248A50EA0;
    swift_willThrow();
  }
  else
  {
    v45 = v7;
    v43 = v10;
    sub_2489BBC58();
    sub_2489C1C30();
    sub_2489C0A60();
    sub_248A1FDBC(v48, v49, v50);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 56);
    v25 = v24(v49, v50);
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      v27 = (_QWORD *)(v25 + 32);
      type metadata accessor for CoreRuleRecord();
      do
      {
        v28 = v27[3];
        v29 = v27[4];
        v30 = sub_2489BE100(v27, v28);
        sub_248A06780((uint64_t)v30, v47, 0, v45, v28, v29);
        swift_release();
        v27 += 5;
        --v26;
      }
      while (v26);
    }
    sub_2489B71DC();
    v31 = v24(v49, v50);
    v32 = sub_248A1D80C(v31);
    v33 = sub_2489BA59C(v32);
    sub_2489BBC58();
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v50 + 64))(v51, v49, v50);
    v34 = v52;
    swift_bridgeObjectRelease();
    sub_248A20158(v33, v34, v45);
    sub_2489B71DC();
    sub_2489C1664();
    sub_248A20D7C();
    sub_2489C1664();
    sub_248A21014();
    sub_2489C1664();
    sub_248A21160();
    v35 = sub_2489C1664();
    sub_248A209D8(v35, v36, v37, v38);
    sub_248A1C580();
    if ((sub_248A45078() & 1) != 0)
      sub_248A450B4();
    if (qword_254464530 != -1)
      swift_once();
    sub_2489EE9F0(&qword_2544646D0, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
    swift_retain();
    sub_248A45180();
    v39 = sub_248A452AC();
    sub_2489BE7E0(v44, 0, 1, v39);
    sub_248A1C818(v12, v43, v44);
    swift_release();
    sub_2489EE974(v44);
    type metadata accessor for CoreTip();
    CoreTipRecord.status.getter();
    v41 = v40;
    CoreTipRecord.invalidationReason.getter();
    sub_248A15130(v12, v43, v41, v42);
  }
  sub_2489BA808();
}

uint64_t sub_248A1D7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A1D80C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  sub_2489C74D8();
  if (v2)
  {
    v3 = (_QWORD *)(a1 + 32);
    sub_248A453F0();
    do
    {
      v4 = v3[3];
      v5 = v3[4];
      sub_2489BE100(v3, v4);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
      v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_2489C74D8();
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_2489C74D8();
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v8;
      v3 += 5;
      --v2;
    }
    while (v2);
  }
  else
  {
    sub_248A453F0();
  }
  swift_bridgeObjectRelease();
  return v12;
}

void sub_248A1D940(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_248A1C874(a1, *a2, a2[1], a3);
}

void sub_248A1D964(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_2489C6B40(a2, a3);
  sub_2489C00F0();
  sub_2489BF684();
  sub_2489BF7F0();
  sub_2489C00F0();
  sub_2489B7208();
}

void sub_248A1D9AC()
{
  sub_248A453F0();
  sub_2489C00F0();
  sub_2489BF684();
  sub_2489BF7F0();
  sub_2489C00F0();
  sub_2489B7208();
}

void sub_248A1D9F0()
{
  sub_2489C00F0();
  sub_2489BF684();
  sub_2489BF7F0();
  sub_2489C00F0();
  sub_2489C7008();
}

uint64_t sub_248A1DA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_2489C330C(&qword_254464A98);
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489E9DA0(a2, (uint64_t)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = v2;
  swift_retain();
  swift_setAtReferenceWritableKeyPath();
  swift_release();
  return swift_retain();
}

void sub_248A1DACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  double v39;
  long double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  char v55;
  uint64_t KeyPath;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[5];

  v76 = a4;
  v70 = a3;
  v75 = sub_248A44F58();
  v73 = *(_QWORD *)(v75 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489BFA18();
  v71 = v6;
  MEMORY[0x24BDAC7A8](v7, v8);
  v72 = (char *)&v69 - v9;
  sub_2489C330C(&qword_254464A98);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489BFA18();
  v69 = v12;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v69 - v15;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v69 - v23;
  v25 = sub_248A452AC();
  v77 = *(_QWORD *)(v25 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254464530 != -1)
    swift_once();
  sub_2489C00F0();
  sub_248A453F0();
  sub_2489F7468();
  swift_bridgeObjectRelease();
  sub_2489BF7F0();
  if (sub_2489BE834((uint64_t)v24, 1, v25) == 1)
  {
    sub_2489C32D0((uint64_t)v24, &qword_254464970);
LABEL_9:
    sub_2489C0530();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v79[2] = 0xD000000000000012;
    v79[3] = 0x8000000248A50D70;
    sub_2489C193C();
    sub_2489BA944();
    sub_2489C9824();
    v35 = sub_2489BF740();
    sub_2489C0708(v35, v36);
    goto LABEL_10;
  }
  v30 = v77;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v29, v24, v25);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v21, v29, v25);
  sub_2489BE7E0((uint64_t)v21, 0, 1, v25);
  sub_248A2FB9C();
  v32 = v31;
  v33 = sub_2489C32D0((uint64_t)v21, &qword_254464970);
  if (!v32)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v25);
    goto LABEL_9;
  }
  v76 = v32;
  CoreTipRecord.lastDisplayed.getter(v33);
  v34 = v75;
  if (sub_2489BE834((uint64_t)v16, 1, v75))
  {
    sub_2489C32D0((uint64_t)v16, &qword_254464A98);
    goto LABEL_15;
  }
  v37 = v73;
  v38 = v72;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v16, v34);
  sub_2489C32D0((uint64_t)v16, &qword_254464A98);
  sub_248A44F10();
  v40 = -v39;
  v41 = Double.seconds.getter(-v39);
  v42 = sub_2489D9080(v41);
  v44 = v43;
  fmod(v40, 1.0);
  v45 = sub_248A4602C();
  v47 = v46;
  v48 = v44;
  v34 = v75;
  MEMORY[0x2495A27B8](v42, v48, v45, v47);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v34);
  if ((sub_248A46038() & 1) == 0)
  {
LABEL_15:
    if (qword_254464E70 != -1)
      swift_once();
    sub_2489BD8B0();
    if ((byte_254464F42 & 1) != 0)
      goto LABEL_18;
    v53 = off_254464F58;
    v54 = word_254464F60;
    if (*((_QWORD *)off_254464F48 + 2) || (byte_254464F50 & 1) != 0)
      goto LABEL_35;
    v55 = *((_QWORD *)off_254464F58 + 2) ? 1 : word_254464F60;
    if ((v55 & 1) != 0)
      goto LABEL_35;
    v72 = (char *)v25;
    KeyPath = swift_getKeyPath();
    v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
    v58 = v69;
    v59 = v70;
    v57(v69, v70, v34);
    sub_2489BE7E0(v58, 0, 1, v34);
    sub_248A1DA2C(KeyPath, v58);
    swift_release();
    swift_release();
    sub_2489C32D0(v58, &qword_254464A98);
    v57(v71, v59, v34);
    sub_248A1A574();
    v61 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v61 = sub_2489C5174(0, *(_QWORD *)(v61 + 16) + 1);
    v63 = *(_QWORD *)(v61 + 16);
    v62 = *(_QWORD *)(v61 + 24);
    if (v63 >= v62 >> 1)
      v61 = sub_2489C5174(v62 > 1, v63 + 1);
    *(_QWORD *)(v61 + 16) = v63 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v73 + 32))(v61+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(_QWORD *)(v73 + 72) * v63, v71, v75);
    sub_248A1A608();
    sub_2489C47EC();
    if (__OFADD__(v64, 1))
    {
      __break(1u);
    }
    else
    {
      sub_248A1A510();
      if (qword_254464240 == -1)
      {
LABEL_33:
        v65 = sub_2489BEE68();
        sub_2489C401C(v65, (uint64_t)&unk_254464228);
        v79[0] = 0;
        v79[1] = 0xE000000000000000;
        sub_248A45A74();
        swift_bridgeObjectRelease();
        sub_2489C27F0();
        sub_2489C193C();
        sub_2489BA944();
        sub_2489C47EC();
        v78 = v66;
        sub_248A45D68();
        sub_248A4557C();
        swift_bridgeObjectRelease();
        sub_2489BE9AC();
        swift_bridgeObjectRelease();
        if ((byte_254464F42 & 1) != 0)
        {
LABEL_18:
          v50 = v76;
          sub_2489C7D1C();
          if ((v51 & 1) != 0 && (v52 = v74, sub_248A1C358(v50), v52)
            || (type metadata accessor for CoreTip(), !sub_248A15670()))
          {
            sub_2489C1C44();
            swift_release();
          }
          else
          {
            LOBYTE(v79[0]) = 1;
            sub_248A092A0((char *)v79);
            sub_2489BF7F0();
            swift_release();
            sub_2489C1C44();
          }
          goto LABEL_10;
        }
        v53 = off_254464F58;
        v54 = word_254464F60;
LABEL_35:
        if (!*((_QWORD *)off_254464F48 + 2) && (byte_254464F50 & 1) == 0)
        {
          v67 = v53[2] ? 1 : v54;
          if ((v67 & 1) == 0)
          {
            sub_2489C49B4();
            if ((v68 & 1) != 0)
            {
              if (qword_254464208 != -1)
                swift_once();
              if (qword_25446C678)
                sub_248A42CA4();
            }
          }
        }
        goto LABEL_18;
      }
    }
    swift_once();
    goto LABEL_33;
  }
  v72 = (char *)v25;
  if (qword_254464240 != -1)
    swift_once();
  v49 = sub_2489BEE68();
  sub_2489C401C(v49, (uint64_t)&unk_254464228);
  sub_2489C0530();
  sub_248A45A74();
  sub_248A4557C();
  sub_2489C193C();
  sub_248A4557C();
  v79[0] = _ss8DurationV10TipKitCoreE7secondsSivg_0();
  sub_248A45D68();
  sub_248A4557C();
  swift_bridgeObjectRelease();
  sub_2489BA944();
  sub_2489BE9AC();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v77 + 8))(v29, v72);
LABEL_10:
  sub_2489C1680();
}

void sub_248A1E35C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  int v34;
  int v35;
  uint64_t v36;
  _QWORD v37[5];

  v36 = a7;
  v34 = a4;
  v35 = a6;
  v32 = a3;
  v33 = *(double *)&a5;
  sub_2489C330C(&qword_254464970);
  sub_2489BA7E0();
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v32 - v14;
  v16 = sub_248A452AC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254464530 != -1)
    swift_once();
  sub_2489C00F0();
  sub_248A453F0();
  sub_2489F7468();
  swift_bridgeObjectRelease();
  sub_2489BF7F0();
  if (sub_2489BE834((uint64_t)v15, 1, v16) == 1)
  {
    sub_2489C32D0((uint64_t)v15, &qword_254464970);
LABEL_16:
    sub_2489C0530();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v37[2] = 0xD000000000000012;
    v37[3] = 0x8000000248A50D70;
    sub_248A4557C();
    sub_2489BA944();
    sub_2489C9824();
    v24 = sub_2489BF740();
    sub_2489C0708(v24, v25);
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v20, v16);
  sub_2489BE7E0((uint64_t)v12, 0, 1, v16);
  sub_248A2FB9C();
  v22 = v21;
  sub_2489C32D0((uint64_t)v12, &qword_254464970);
  if (!v22)
  {
    sub_2489C24BC();
    goto LABEL_16;
  }
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BD8B0();
  if ((byte_254464F42 & 1) == 0 && !*((_QWORD *)off_254464F48 + 2) && (byte_254464F50 & 1) == 0)
  {
    v26 = *((_QWORD *)off_254464F58 + 2) ? 1 : word_254464F60;
    if ((v26 & 1) == 0)
    {
      if ((v34 & 1) == 0)
      {
        sub_2489C08CC();
        sub_248A1A694();
      }
      if ((v35 & 1) == 0)
      {
        v27 = v33;
        if (sub_2489C08CC() >= v27)
        {
          sub_2489C6D6C(9);
          if (v7)
            goto LABEL_31;
        }
      }
      sub_2489C47EC();
      v29 = v28;
      sub_2489C4A3C();
      if (v29 >= v30)
      {
        sub_2489C6D6C(4);
        if (v7)
          goto LABEL_31;
      }
      if (qword_254464240 != -1)
        swift_once();
      v31 = sub_2489BEE68();
      v36 = sub_2489C401C(v31, (uint64_t)&unk_254464228);
      v37[0] = 0;
      v37[1] = 0xE000000000000000;
      sub_248A45A74();
      swift_bridgeObjectRelease();
      sub_2489C27F0();
      CoreTipRecord.id.getter();
      sub_248A4557C();
      swift_bridgeObjectRelease();
      sub_248A4557C();
      sub_2489BE9AC();
      swift_bridgeObjectRelease();
    }
  }
  type metadata accessor for CoreTip();
  if (!sub_2489C019C() || (sub_2489C649C(v37), sub_2489BF7F0(), LOBYTE(v37[0]) != 2))
  {
    if (sub_2489C019C())
    {
      LOBYTE(v37[0]) = 0;
      sub_248A092A0((char *)v37);
      sub_2489BF7F0();
    }
  }
  if (!sub_2489C019C())
  {
LABEL_31:
    sub_2489C24BC();
    swift_release();
    goto LABEL_17;
  }
  v23 = sub_2489C08CC();
  sub_248A091F8(v23);
  swift_release();
  swift_release();
  sub_2489C24BC();
LABEL_17:
  sub_2489C1680();
}

uint64_t sub_248A1E7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_2489C330C(&qword_254464118);
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_248A44FAC();
  sub_248A302F8();
  v3 = v2;
  sub_2489C3BD8();
  return v3;
}

uint64_t sub_248A1E974@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;

  v72 = a3;
  v65 = a2;
  v76 = a4;
  v5 = sub_248A44D60();
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v68 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_254462FD8);
  v9 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  v63 = v9;
  MEMORY[0x24BDAC7A8](v8, v10);
  v61 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_2489C330C(&qword_254462540);
  v73 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69, v12);
  v60 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2489C330C(&qword_254462500);
  v15 = *(_QWORD *)(v14 - 8);
  v74 = v14;
  v75 = v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v64 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2489C330C(&qword_254462518);
  v19 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  v58 = v19;
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2489C330C(&qword_2544640D0);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_2489C330C(&qword_254462558);
  v56 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_2489C330C(&qword_254462570);
  v33 = *(_QWORD *)(v32 - 8);
  v66 = v32;
  v67 = v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v59 = (char *)v53 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = *a1;
  sub_2489EEB7C(&qword_2544640C8, &qword_2544640D0);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  v54 = *(void (**)(char *, uint64_t))(v24 + 8);
  v54(v27, v23);
  sub_248A44F58();
  sub_248A44D3C();
  v53[1] = sub_2489EEB7C(&qword_254462550, &qword_254462558);
  sub_2489EEB7C(&qword_254462510, &qword_254462518);
  sub_248A1EF6C();
  v36 = v57;
  sub_248A44D18();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v36);
  v37 = *(void (**)(char *, uint64_t))(v56 + 8);
  v37(v31, v28);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  v54(v27, v23);
  v38 = v61;
  sub_248A44DB4();
  sub_2489EEB7C(&qword_254462FD0, &qword_254462FD8);
  v39 = v60;
  v40 = v62;
  sub_248A44D54();
  v65 = *(void (**)(char *, uint64_t))(v63 + 8);
  v65(v38, v40);
  v37(v31, v28);
  v41 = v38;
  sub_248A44DB4();
  v43 = v70;
  v42 = v71;
  v44 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v68, *MEMORY[0x24BDCCF58], v71);
  sub_2489EEB7C(&qword_254462538, &qword_254462540);
  sub_2489BA2D8(&qword_2544640F0);
  v45 = v64;
  v46 = v69;
  sub_248A44D30();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  v65(v41, v40);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v46);
  v47 = sub_2489C330C(&qword_254462528);
  v48 = v76;
  v76[3] = v47;
  v48[4] = sub_248A1EFE0();
  sub_2489BE690(v48);
  sub_2489EEB7C(&qword_254462568, &qword_254462570);
  sub_2489EEB7C(&qword_2544624F8, &qword_254462500);
  v49 = v59;
  v50 = v66;
  v51 = v74;
  sub_248A44D48();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v49, v50);
}

uint64_t sub_248A1EF5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_248A1E974(a1, *(void (**)(char *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_248A1EF6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2544625A0;
  if (!qword_2544625A0)
  {
    v1 = sub_2489BCD7C(&qword_254464A98);
    v2 = sub_2489BA2D8(&qword_254463FE8);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2544625A0);
  }
  return result;
}

unint64_t sub_248A1EFE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254462520;
  if (!qword_254462520)
  {
    v1 = sub_2489BCD7C(&qword_254462528);
    v2[0] = sub_248A1F06C();
    v2[1] = sub_248A1F190(&qword_2544624F0, &qword_254462500, sub_248A1F16C, MEMORY[0x24BDCCCD8]);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCCDB0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254462520);
  }
  return result;
}

unint64_t sub_248A1F06C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254462560;
  if (!qword_254462560)
  {
    v1 = sub_2489BCD7C(&qword_254462570);
    v2[0] = sub_248A1F0F0();
    v2[1] = sub_2489EEB7C(&qword_254462508, &qword_254462518);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD1F8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254462560);
  }
  return result;
}

unint64_t sub_248A1F0F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254462548;
  if (!qword_254462548)
  {
    v1 = sub_2489BCD7C(&qword_254462558);
    v2 = sub_2489EEB7C(&qword_2544640C0, &qword_2544640D0);
    result = MEMORY[0x2495A2D34](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254462548);
  }
  return result;
}

uint64_t sub_248A1F16C()
{
  return sub_248A1F190(&qword_254462530, &qword_254462540, (uint64_t (*)(void))sub_248A1F0F0, MEMORY[0x24BDCCDF8]);
}

uint64_t sub_248A1F190(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_2489BCD7C(a2);
    v9[0] = a3();
    v9[1] = sub_248A020EC();
    result = MEMORY[0x2495A2D34](a4, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248A1F1FC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  _BYTE v22[4];
  int v23;
  unint64_t v24;
  unint64_t v25;

  v23 = a3;
  v3 = sub_2489C330C(&qword_254464970);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = &v22[-v9];
  v11 = sub_248A452AC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_254464530 != -1)
    swift_once();
  swift_retain();
  sub_248A453F0();
  sub_2489F7468();
  swift_bridgeObjectRelease();
  sub_2489BF7F0();
  if (sub_2489BE834((uint64_t)v10, 1, v11) == 1)
  {
    sub_2489EE974((uint64_t)v10);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v15, v10, v11);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v7, v15, v11);
    sub_2489BE7E0((uint64_t)v7, 0, 1, v11);
    sub_248A2FB9C();
    v17 = v16;
    sub_2489EE974((uint64_t)v7);
    if (v17)
    {
      sub_248A1F470(v23);
      sub_2489C3BE8();
      return sub_2489BF7F0();
    }
    sub_2489C3BE8();
  }
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_248A45A74();
  swift_bridgeObjectRelease();
  v24 = 0xD000000000000025;
  v25 = 0x8000000248A51030;
  sub_248A4557C();
  sub_248A4557C();
  v19 = v24;
  v20 = v25;
  sub_2489C9824();
  swift_allocError();
  *v21 = v19;
  v21[1] = v20;
  return swift_willThrow();
}

void sub_248A1F470(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;

  v3 = v2;
  v4 = v1;
  if (a1 == 3)
  {
    sub_248A1A714();
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    sub_248A1A79C();
    if ((sub_248A45078() & 1) != 0)
    {
      sub_2489C24CC();
      v3 = v2;
      if (v2)
        return;
    }
    sub_2489C7D1C();
    if ((v7 & 1) != 0)
      sub_2489D6758(v1);
  }
  CoreTipRecord.status.getter();
  if (v8 == 2)
    goto LABEL_14;
  CoreTipRecord.status.setter();
  CoreTipRecord.invalidationReason.setter();
  type metadata accessor for CoreTip();
  v9 = CoreTipRecord.id.getter();
  v11 = v10;
  CoreTipRecord.status.getter();
  sub_248A15130(v9, v11, v12, a1);
  swift_bridgeObjectRelease();
  if ((sub_248A45078() & 1) == 0 || (sub_2489C24CC(), (v3 = v2) == 0))
  {
    sub_248A1C480(v1, a1);
    if (!v3)
    {
      if (qword_254464240 != -1)
        swift_once();
      v13 = type metadata accessor for logger();
      sub_2489C401C(v13, (uint64_t)&unk_254464228);
      sub_248A45A74();
      sub_248A4557C();
      CoreTipRecord.id.getter();
      sub_248A4557C();
      sub_2489BA800();
      sub_248A4557C();
      sub_248A45BAC();
      sub_2489BE9AC();
      sub_2489B71DC();
LABEL_14:
      if (qword_254464E70 != -1)
        swift_once();
      swift_beginAccess();
      v14 = qword_2544649A0;
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      sub_248A453F0();
      if (v14 != -1)
        swift_once();
      if (word_254464998 != 3)
      {
        sub_2489BA800();
        sub_2489BBC60();
        sub_2489B71DC();
        swift_bridgeObjectRelease();
LABEL_23:
        type metadata accessor for CoreTip();
        CoreTipRecord.id.getter();
        v17 = sub_248A15670();
        sub_2489BBC60();
        if (v17)
        {
          sub_248A09CA0(v4);
          sub_2489BF7F0();
        }
        return;
      }
      if (qword_254464E68 == -1)
      {
LABEL_20:
        v15 = byte_254464E60;
        sub_2489BA800();
        sub_2489BBC60();
        sub_2489B71DC();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          v16 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
          swift_retain();
          sub_248A4397C(0xD000000000000016, 0x8000000248A51010, v16);

        }
        goto LABEL_23;
      }
LABEL_27:
      swift_once();
      goto LABEL_20;
    }
  }
}

uint64_t sub_248A1F83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t *v34;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v44 = a4;
  v42 = a3;
  v5 = sub_2489C330C(&qword_254464A98);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v43 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v41 - v11;
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v41 - v14;
  v16 = sub_2489C330C(&qword_254464970);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)&v41 - v22;
  v24 = sub_248A452AC();
  v46 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254464530 != -1)
    swift_once();
  swift_retain();
  sub_248A453F0();
  v51 = a1;
  sub_2489F7468();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_2489BE834((uint64_t)v23, 1, v24) == 1)
  {
    sub_2489C32D0((uint64_t)v23, &qword_254464970);
LABEL_10:
    v49 = 0;
    v50 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v49 = 0xD000000000000023;
    v50 = 0x8000000248A51060;
    sub_248A4557C();
    sub_248A4557C();
    v32 = v49;
    v33 = v50;
    sub_2489C9824();
    swift_allocError();
    *v34 = v32;
    v34[1] = v33;
    return swift_willThrow();
  }
  v28 = v46;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v27, v23, v24);
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v20, v27, v24);
  sub_2489BE7E0((uint64_t)v20, 0, 1, v24);
  sub_248A2FB9C();
  v30 = v29;
  sub_2489C32D0((uint64_t)v20, &qword_254464970);
  if (!v30)
  {
    sub_2489BFD8C(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    goto LABEL_10;
  }
  v45 = type metadata accessor for CoreTip();
  if (!sub_248A15670())
  {
    v31 = sub_248A44F58();
    sub_2489C1820((uint64_t)v15, 1);
LABEL_12:
    sub_2489C32D0((uint64_t)v15, &qword_254464A98);
    sub_2489C4B1C();
    sub_248A44F58();
    v36 = sub_2489BA950((uint64_t)v12);
    sub_2489C32D0((uint64_t)v12, &qword_254464A98);
    if (v36 == 1)
    {
      if (qword_254464E70 != -1)
        swift_once();
      sub_2489C27C8();
      if ((byte_254464F42 & 1) == 0 && !*((_QWORD *)off_254464F48 + 2) && (byte_254464F50 & 1) == 0)
      {
        v37 = *((_QWORD *)off_254464F58 + 2) ? 1 : word_254464F60;
        if ((v37 & 1) == 0)
        {
          v38 = (uint64_t)v43;
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v43, v42, v31);
          sub_2489C1820(v38, 0);
          sub_248A1A808();
          if (qword_254464240 != -1)
            swift_once();
          v39 = type metadata accessor for logger();
          sub_2489C401C(v39, (uint64_t)&unk_254464228);
          v47 = 0;
          v48 = 0xE000000000000000;
          sub_248A45A74();
          swift_bridgeObjectRelease();
          v47 = 0x203A646928706954;
          v48 = 0xE800000000000000;
          sub_248A4557C();
          sub_248A4557C();
          sub_2489BE9AC();
          swift_bridgeObjectRelease();
        }
      }
    }
    goto LABEL_25;
  }
  sub_2489C6468((uint64_t)v15);
  swift_release();
  v31 = sub_248A44F58();
  if (sub_2489BA950((uint64_t)v15) == 1)
    goto LABEL_12;
  sub_2489C32D0((uint64_t)v15, &qword_254464A98);
LABEL_25:
  if (sub_248A15670())
  {
    v40 = (uint64_t)v43;
    sub_2489C4B1C();
    sub_2489C638C(v40);
    swift_release();
    swift_release();
    return sub_2489BFD8C(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
  }
  else
  {
    sub_2489BFD8C(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
    return swift_release();
  }
}

void sub_248A1FDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v39;
  uint64_t v40[2];

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 64))(v40, a2, a3);
  sub_2489C579C(v40[0], v40[1]);
  sub_2489C169C(v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  sub_2489BF88C();
  sub_2489C5824();
  sub_2489C5A68();
  sub_2489C169C(v9, v10, v11, v12);
  swift_bridgeObjectRelease();
  sub_2489BF88C();
  sub_2489C5880();
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489C27C8();
  if (qword_254464F38)
  {
    v13 = qword_254464F30;
    v14 = qword_254464F38;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v13 = qword_25446C6D0;
      v14 = qword_25446C6D8;
    }
    else
    {
      sub_2489BF68C();
      v15 = sub_2489C0A70();
      if (v16)
      {
        v13 = v15;
        v14 = v16;
      }
      else
      {
        v13 = 0;
        v14 = 0xE000000000000000;
      }
    }
    sub_2489C0540();
  }
  v17 = v13 == 0x6C7070612E6D6F63 && v14 == 0xEF64737069742E65;
  if (v17)
  {
    sub_2489C01AC();
    sub_2489C2448();
  }
  else
  {
    v18 = sub_2489C3BF8();
    sub_2489C01AC();
    v19 = sub_2489BBC58();
    if ((v18 & 1) == 0)
    {
      sub_2489C169C(v19, v20, v21, v22);
      swift_bridgeObjectRelease();
      sub_2489BF88C();
      sub_2489C58D4();
      sub_2489C169C(v23, v24, v25, v26);
      swift_bridgeObjectRelease();
      sub_2489BF88C();
      sub_2489C5AD4();
    }
  }
  if (qword_254464F38)
  {
    v27 = qword_254464F38;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v27 = qword_25446C6D8;
    }
    else
    {
      sub_2489BF68C();
      sub_2489C0A70();
      if (v28)
        v27 = v28;
      else
        v27 = 0xE000000000000000;
    }
    sub_2489C0540();
  }
  sub_2489C1C58();
  if (v17 && v27 == 0xEF64737069742E65)
  {
    sub_2489C01AC();
    sub_2489C2448();
  }
  else
  {
    v30 = sub_2489C3BF8();
    sub_2489C01AC();
    sub_2489BBC58();
    if ((v30 & 1) == 0)
      goto LABEL_38;
  }
  v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  CoreTipRecord.content.setter(v31);
LABEL_38:
  sub_248A1AA38();
  if ((v32 & 1) == 0)
    goto LABEL_56;
  if (qword_254464F38)
  {
    v36 = qword_254464F38;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v36 = qword_25446C6D8;
    }
    else
    {
      sub_2489BF68C();
      sub_2489C0A70();
      if (v37)
        v36 = v37;
      else
        v36 = 0xE000000000000000;
    }
    sub_2489C0540();
  }
  sub_2489C1C58();
  if (v17 && v36 == 0xEF64737069742E65)
  {
    sub_2489C01AC();
    v32 = sub_2489C2448();
    goto LABEL_56;
  }
  v39 = sub_2489C3BF8();
  sub_2489C01AC();
  v32 = sub_2489BBC58();
  if ((v39 & 1) != 0)
  {
LABEL_56:
    sub_2489C169C(v32, v33, v34, v35);
    swift_bridgeObjectRelease();
    sub_2489C9CE8();
  }
}

uint64_t sub_248A20158(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[4];
  _QWORD v15[3];
  char v16;

  CoreTipRecord.rules.getter();
  if (!v8)
    goto LABEL_3;
  v10 = v8;
  v11 = MEMORY[0x24BDAC7A8](v8, v9);
  v15[2] = a1;
  v16 = a2 & 1;
  MEMORY[0x24BDAC7A8](v11, v15);
  v14[2] = v3;
  v14[3] = a3;
  sub_248A204FC((uint64_t (*)(uint64_t *))sub_248A20638, v12, (void (*)(uint64_t *))sub_248A20658, (uint64_t)v14, v10);
  result = swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_3:
    result = sub_248A45078();
    if ((result & 1) != 0)
      return sub_248A450B4();
  }
  return result;
}

uint64_t sub_248A20244(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v16;

  type metadata accessor for CoreRuleRecord();
  sub_2489C962C((unint64_t *)&qword_2544645B8, (uint64_t (*)(uint64_t))type metadata accessor for CoreRuleRecord, (uint64_t)&protocol conformance descriptor for CoreRuleRecord);
  if ((sub_248A45228() & 1) != 0)
    goto LABEL_4;
  v5 = CoreRuleRecord.id.getter();
  sub_2489C7E2C(v5, v6, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0
    || (sub_2489C7DE8(),
        v9 = CoreRuleRecord.id.getter(),
        v11 = v10,
        swift_release(),
        sub_2489C7E2C(v9, v11, a2),
        v13 = v12,
        swift_bridgeObjectRelease(),
        (v13 & 1) != 0))
  {
LABEL_4:
    v14 = 0;
  }
  else
  {
    sub_2489C4BD8();
    v14 = v16 ^ a3 ^ 1;
  }
  return v14 & 1;
}

uint64_t sub_248A20344()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2489C962C((unint64_t *)&qword_2544646D0, (uint64_t (*)(uint64_t))type metadata accessor for CoreTipRecord, (uint64_t)&protocol conformance descriptor for CoreTipRecord);
  result = sub_248A45228();
  if ((result & 1) == 0)
  {
    v2 = sub_248A03DDC();
    swift_release();
    if (v2)
      sub_248A03E00(0);
    sub_248A044F4();
    if (v3)
    {
      v4 = v3;
      if (v3 >> 62)
        goto LABEL_21;
      v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_248A453F0();
      while (v5)
      {
        v6 = 4;
        while (1)
        {
          if ((v4 & 0xC000000000000001) != 0)
            MEMORY[0x2495A2200](v6 - 4, v4);
          else
            swift_retain();
          v7 = v6 - 3;
          if (__OFADD__(v6 - 4, 1))
            break;
          type metadata accessor for CoreRuleRecord();
          sub_2489C962C((unint64_t *)&qword_2544645B8, (uint64_t (*)(uint64_t))type metadata accessor for CoreRuleRecord, (uint64_t)&protocol conformance descriptor for CoreRuleRecord);
          if ((sub_248A45228() & 1) == 0)
          {
            sub_248A31430();
            if (v0)
            {
              swift_bridgeObjectRelease_n();
              return swift_release();
            }
          }
          swift_release();
          ++v6;
          if (v7 == v5)
            goto LABEL_16;
        }
        __break(1u);
LABEL_21:
        sub_248A453F0();
        v5 = sub_248A45C18();
      }
LABEL_16:
      swift_bridgeObjectRelease_n();
    }
    return sub_248A31430();
  }
  return result;
}

uint64_t sub_248A204FC(uint64_t (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v15;

  if (a5 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_248A453F0();
  for (; v8; v8 = sub_248A45C18())
  {
    for (i = 4; ; ++i)
    {
      if ((a5 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x2495A2200](i - 4, a5);
      }
      else
      {
        v10 = *(_QWORD *)(a5 + 8 * i);
        swift_retain();
      }
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v15 = v10;
      v12 = a1(&v15);
      if (v5)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if ((v12 & 1) != 0)
        a3(&v15);
      swift_release();
      if (v11 == v8)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_15:
    sub_248A453F0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_248A20638(uint64_t a1)
{
  uint64_t v1;

  return sub_248A20244(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24)) & 1;
}

uint64_t sub_248A20658()
{
  return sub_248A20344();
}

void sub_248A20680(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_248A453F0();
  for (; v6; v6 = sub_248A45C18())
  {
    v7 = 4;
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x2495A2200](v7 - 4, a3);
      }
      else
      {
        v8 = *(_QWORD *)(a3 + 8 * v7);
        swift_retain();
      }
      v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v10 = v8;
      a1(&v10);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_12;
      }
      swift_release();
      ++v7;
      if (v9 == v6)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    sub_248A453F0();
  }
LABEL_10:
  swift_bridgeObjectRelease();
LABEL_12:
  sub_2489BA808();
}

void sub_248A20780()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;

  v2 = v0;
  CoreTipRecord.status.getter();
  v4 = v3;
  v5 = sub_248A219C8();
  if (v1)
  {

  }
  else
  {
    v6 = v5;
    if (v4 != v5)
    {
      swift_getKeyPath();
      sub_248A21B18();
      swift_release();
      swift_release();
      sub_248A21C14();
      if (sub_248A45198())
      {
        if ((sub_248A45078() & 1) != 0)
          sub_248A450B4();
        sub_2489BF7F0();
      }
      if (qword_254464240 != -1)
        swift_once();
      v7 = sub_2489BEE68();
      sub_2489C401C(v7, (uint64_t)&unk_254464228);
      sub_248A45A74();
      sub_2489C1BE8();
      sub_2489C5F30();
      sub_248A4557C();
      swift_bridgeObjectRelease();
      sub_2489C0C28();
      sub_2489C5160();
      sub_2489C1948();
      sub_2489BF694();
      sub_2489C1948();
      sub_2489BE9AC();
      sub_2489BA820();
      type metadata accessor for CoreTip();
      v8 = sub_2489C5F30();
      v10 = v9;
      CoreTipRecord.invalidationReason.getter();
      sub_248A15130(v8, v10, v6, v11);
      swift_bridgeObjectRelease();
      sub_2489C5F30();
      v12 = sub_248A15670();
      swift_bridgeObjectRelease();
      if (v12)
      {
        sub_248A09CA0(v2);
        sub_2489BF7F0();
      }
      sub_248A1C4E0(v2, v4, v6);
    }
  }
}

void sub_248A209D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char v19;
  _QWORD v20[8];
  _QWORD v21[5];
  char v22;

  v6 = v4;
  CoreTipRecord.status.getter();
  sub_2489C182C();
  if (!v11)
  {
    CoreTipRecord.rules.getter();
    if (!v12)
      goto LABEL_4;
    v14 = v12;
    MEMORY[0x24BDAC7A8](v12, v13);
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a1;
    v20[5] = v6;
    v20[6] = a2;
    sub_248A20680((void (*)(uint64_t *))sub_248A21BEC, (uint64_t)v20, v14);
    sub_2489BBC58();
    if (!v5)
    {
LABEL_4:
      sub_2489C47EC();
      v16 = v15;
      sub_2489C4A3C();
      if (v16 < v17 || (sub_2489C3C28(4), !v5))
      {
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 64))(v21, a3, a4);
        v18 = *(double *)&v21[4];
        v19 = v22;
        swift_bridgeObjectRelease();
        if ((v19 & 1) != 0 || v18 >= sub_2489B9D1C() || (sub_2489C3C28(9), !v5))
          sub_248A20780();
      }
    }
  }
}

void sub_248A20B24()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  int v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  __int16 v11;
  uint64_t v12;
  unsigned __int8 v13;

  v1 = v0;
  if (qword_254464B20 != -1)
    swift_once();
  swift_retain();
  sub_2489C24D8();
  sub_2489F74C0();
  sub_2489BBC60();
  swift_release();
  v2 = v13;
  if (v13 == 4)
    v2 = 4;
  v3 = v2;
  CoreTipRecord.status.getter();
  if (v3 == 4 || v3 != v4)
  {
    if (qword_254464240 != -1)
      swift_once();
    v5 = sub_2489BEE68();
    sub_2489C401C(v5, (uint64_t)&unk_254464228);
    sub_248A45A74();
    sub_2489C1BE8();
    sub_2489C24D8();
    sub_2489C597C();
    sub_2489BBC60();
    sub_2489C5160();
    swift_retain();
    sub_2489C24D8();
    sub_2489F74C0();
    sub_2489BA800();
    swift_release();
    sub_2489C330C(&qword_254462F80);
    sub_248A454F8();
    sub_2489C597C();
    sub_2489BBC60();
    sub_2489BF694();
    CoreTipRecord.status.getter();
    sub_248A45BAC();
    sub_2489BE9AC();
    sub_2489BBC60();
    type metadata accessor for CoreTip();
    v6 = sub_2489C24D8();
    v8 = v7;
    CoreTipRecord.status.getter();
    v10 = v9;
    CoreTipRecord.invalidationReason.getter();
    sub_248A15130(v6, v8, v10, v11);
    sub_2489BA800();
    sub_2489C24D8();
    v12 = sub_248A15670();
    sub_2489BBC60();
    if (v12)
    {
      sub_248A09CA0(v1);
      sub_2489BF7F0();
    }
  }
}

void sub_248A20D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v0 = sub_2489C330C(&qword_254464200);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  CoreTipRecord.status.getter();
  sub_2489C182C();
  if (!v4)
  {
    if (qword_2544641F8 != -1)
      swift_once();
    v5 = sub_2489C401C(v0, (uint64_t)qword_25446C698);
    sub_2489BD8B0();
    sub_248A21C74(v5, (uint64_t)v3);
    v6 = type metadata accessor for DeviceProfile();
    v7 = sub_2489BFB4C((uint64_t)v3);
    sub_2489C32D0((uint64_t)v3, &qword_254464200);
    if (v7 != 1)
    {
      swift_beginAccess();
      if (sub_2489BFB4C(v5))
      {
        sub_2489C6C38();
      }
      else
      {
        v20 = sub_2489C24D8();
        v9 = v8;
        if (qword_254464E70 != -1)
          swift_once();
        sub_2489BD8B0();
        if (HIBYTE(word_254464F60) == 1)
        {
          if (*(_QWORD *)(*(_QWORD *)(v5 + *(int *)(v6 + 36)) + 16))
          {
            sub_2489BD894();
            sub_2489BA544();
            v11 = v10;
            sub_2489BBC58();
            if ((v11 & 1) != 0)
            {
              sub_248A35458(v20, v9);
              sub_248A22660();
            }
          }
        }
        if (*(_QWORD *)(*(_QWORD *)(v5 + *(int *)(v6 + 36)) + 16))
        {
          sub_2489BD894();
          sub_2489BA544();
          v13 = v12;
          sub_2489C6C38();
          sub_2489BA820();
          sub_2489BBC58();
          if ((v13 & 1) != 0)
          {
            if (qword_254464240 != -1)
              swift_once();
            v14 = sub_2489BEE68();
            sub_2489C401C(v14, (uint64_t)&unk_254464228);
            v18 = 0;
            v19 = 0xE000000000000000;
            sub_248A45A74();
            swift_bridgeObjectRelease();
            sub_2489C0120();
            v18 = v15;
            v19 = v16;
            sub_2489C24D8();
            sub_248A4557C();
            sub_2489BA800();
            sub_2489C0C28();
            sub_2489C5160();
            sub_2489C0A78();
            sub_2489BA800();
            sub_2489C3C28(6);
          }
        }
        else
        {
          sub_2489C6C38();
          sub_2489BA820();
        }
      }
    }
  }
  sub_2489BA808();
}

void sub_248A21014()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_2489C0714();
  sub_2489C182C();
  if (!v0)
  {
    sub_2489C47EC();
    if (!v1)
    {
      sub_2489C49B4();
      if ((v2 & 1) != 0)
      {
        if (qword_254464208 != -1)
          swift_once();
        if (qword_25446C678)
        {
          v3 = sub_2489C24D8();
          v5 = sub_248A42DE0(v3, v4);
          sub_2489BA800();
          if ((v5 & 1) != 0)
          {
            if (qword_254464240 != -1)
              swift_once();
            v6 = sub_2489BEE68();
            sub_2489C401C(v6, (uint64_t)&unk_254464228);
            sub_248A45A74();
            swift_bridgeObjectRelease();
            sub_2489C0120();
            sub_2489C24D8();
            sub_2489C597C();
            sub_2489BA800();
            sub_2489C5160();
            sub_2489C0A78();
            sub_2489BA800();
            sub_2489C3C28(5);
          }
        }
      }
    }
  }
}

void sub_248A21160()
{
  char v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  sub_2489C0714();
  sub_2489C182C();
  if (!v0)
  {
    if (qword_254464E70 != -1)
      swift_once();
    sub_2489BD8B0();
    v1 = qword_2544649A0;
    sub_2489BD894();
    sub_248A453F0();
    sub_248A453F0();
    sub_248A453F0();
    if (v1 != -1)
      swift_once();
    if (word_254464998 == 3)
    {
      if (qword_254464E68 != -1)
        swift_once();
      v2 = byte_254464E60;
      sub_2489BA820();
      sub_2489BA800();
      sub_2489BBC60();
      sub_2489BBC58();
      if ((v2 & 1) == 0)
      {
        v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
        sub_2489C0C28();
        v4 = sub_2489BC23C();

        if (v4)
        {
          v5 = sub_2489C24D8();
          sub_2489C7E2C(v5, v6, v4);
          v8 = v7;
          sub_2489BBC58();
          sub_2489BBC60();
          if ((v8 & 1) != 0)
          {
            if (qword_254464240 != -1)
              swift_once();
            v9 = sub_2489BEE68();
            sub_2489C401C(v9, (uint64_t)&unk_254464228);
            sub_248A45A74();
            swift_bridgeObjectRelease();
            sub_2489C0120();
            sub_2489C24D8();
            sub_248A4557C();
            sub_2489BA800();
            sub_2489C0C28();
            sub_248A4557C();
            sub_2489C0A78();
            sub_2489BA800();
            sub_2489C3C28(7);
          }
        }
      }
    }
    else
    {
      sub_2489BA820();
      sub_2489BA800();
      sub_2489BBC60();
      sub_2489BBC58();
    }
  }
}

uint64_t sub_248A213B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[6];
  uint64_t v35;

  v7 = *a1;
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 56);
  v35 = a5;
  v9 = v8(a5, a6);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v9 + 32;
    sub_248A453F0();
    while (1)
    {
      sub_2489C4880(v11, (uint64_t)&v25);
      v12 = v26;
      v13 = v27;
      sub_2489BE100(&v25, v26);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
      v16 = v15;
      if (v14 == CoreRuleRecord.id.getter() && v16 == v17)
        break;
      v19 = sub_248A45DBC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        goto LABEL_12;
      sub_2489BCE44((uint64_t)&v25);
      v11 += 40;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_2489B8F74(&v25, (uint64_t)&v28);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
    swift_bridgeObjectRelease();
  }
  v20 = *((_QWORD *)&v29 + 1);
  if (*((_QWORD *)&v29 + 1))
  {
    v21 = v30;
    sub_2489BE100(&v28, *((uint64_t *)&v29 + 1));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v21 + 40))(&v31, v20, v21);
    sub_2489BCE44((uint64_t)&v28);
    if (*((_QWORD *)&v32 + 1))
    {
      sub_2489B8F74(&v31, (uint64_t)v34);
      sub_248A215D8(v7, v34, a2, a4, v35, a6);
      return sub_2489BCE44((uint64_t)v34);
    }
  }
  else
  {
    sub_2489C32D0((uint64_t)&v28, &qword_2577A5678);
    v31 = 0u;
    v32 = 0u;
    v33 = 0;
  }
  return sub_2489C32D0((uint64_t)&v31, &qword_2544641F0);
}

uint64_t sub_248A215D8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[40];
  uint64_t v19;

  sub_2489C4880((uint64_t)a2, (uint64_t)v18);
  sub_2489C330C(&qword_2544641E8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v19 = v16;
    sub_2489BE8C0(v18);
    if (v18[0] == 1)
    {
      sub_248A21720(a1, v17, a3, a4, a5, a6);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v13 = a2[3];
  v14 = a2[4];
  v15 = sub_2489BE100(a2, v13);
  type metadata accessor for CoreRuleRecord();
  return sub_248A07940(a1, (uint64_t)v15, a4, v13, v14);
}

void sub_248A21720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[8];

  v7 = v6;
  if (*(_QWORD *)(a2 + 16))
  {
    sub_248A044F4();
    if (v13)
    {
      v15 = v13;
      MEMORY[0x24BDAC7A8](v13, v14);
      v16[2] = a5;
      v16[3] = a6;
      v16[4] = a2;
      v16[5] = v7;
      v16[6] = a3;
      v16[7] = a4;
      sub_248A20680((void (*)(uint64_t *))sub_248A21C54, (uint64_t)v16, v15);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2489C41D0(1);
  }
}

uint64_t sub_248A217F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _BYTE v33[48];
  uint64_t v34;

  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v34 = a7;
    v9 = *a1;
    v10 = a2 + 32;
    sub_248A453F0();
    while (1)
    {
      sub_2489C4880(v10, (uint64_t)&v24);
      v11 = v25;
      v12 = v26;
      sub_2489BE100(&v24, v25);
      v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
      v15 = v14;
      if (v13 == CoreRuleRecord.id.getter() && v15 == v16)
        break;
      v18 = sub_248A45DBC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        goto LABEL_12;
      sub_2489BCE44((uint64_t)&v24);
      v10 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_2489B8F74(&v24, (uint64_t)v27);
    v19 = v28;
    v20 = v29;
    sub_2489BE100(v27, v28);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 40))(&v30, v19, v20);
    sub_2489BCE44((uint64_t)v27);
    if (*((_QWORD *)&v31 + 1))
    {
      sub_2489B8F74(&v30, (uint64_t)v33);
      sub_248A215D8(v9, v33, a4, a5, a6, v34);
      return sub_2489BCE44((uint64_t)v33);
    }
  }
  else
  {
LABEL_10:
    v30 = 0u;
    v31 = 0u;
    v32 = 0;
  }
  return sub_2489C32D0((uint64_t)&v30, &qword_2544641F0);
}

uint64_t sub_248A219C8()
{
  char v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  CoreTipRecord.status.getter();
  if (v0 == 2)
    return 2;
  sub_2489C59E4();
  if ((v2 & 1) != 0)
    return 0;
  CoreTipRecord.rules.getter();
  if (!v3)
    return 1;
  v4 = v3;
  if (v3 >> 62)
    goto LABEL_23;
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_248A453F0();
  for (; v5; v5 = sub_248A45C18())
  {
    v6 = 4;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
        MEMORY[0x2495A2200](v6 - 4, v4);
      else
        swift_retain();
      v7 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      CoreRuleRecord.status.getter();
      if (v8 == 2)
      {
        swift_release();
      }
      else
      {
        sub_248A03EE8();
        v10 = v9;
        swift_release();
        swift_release();
        if (!v10)
        {
          v1 = 0;
          goto LABEL_20;
        }
      }
      ++v6;
      if (v7 == v5)
        goto LABEL_17;
    }
    __break(1u);
LABEL_23:
    sub_248A453F0();
  }
LABEL_17:
  v1 = 1;
LABEL_20:
  swift_bridgeObjectRelease_n();
  return v1;
}

uint64_t sub_248A21B18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_248A21C14();
  v1 = sub_248A45198();
  swift_release();
  if (v1)
  {
    swift_retain();
    swift_setAtReferenceWritableKeyPath();
    swift_release();
    swift_retain();
  }
  else
  {
    sub_2489C9824();
    swift_allocError();
    *v2 = 0xD000000000000036;
    v2[1] = 0x8000000248A51100;
    swift_willThrow();
  }
  return v0;
}

uint64_t sub_248A21BEC(uint64_t *a1)
{
  uint64_t *v1;

  return sub_248A213B4(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

unint64_t sub_248A21C14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2544646D0;
  if (!qword_2544646D0)
  {
    v1 = type metadata accessor for CoreTipRecord();
    result = MEMORY[0x2495A2D34](&protocol conformance descriptor for CoreTipRecord, v1);
    atomic_store(result, (unint64_t *)&qword_2544646D0);
  }
  return result;
}

uint64_t sub_248A21C54(uint64_t *a1)
{
  uint64_t *v1;

  return sub_248A217F8(a1, v1[4], v1[5], v1[6], v1[7], v1[2], v1[3]);
}

uint64_t sub_248A21C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A21CBC()
{
  return sub_248A44EE0();
}

uint64_t Date.subtracting(_:)()
{
  sub_2489C01B4();
  sub_2489BFE9C();
  return sub_2489C3C38();
}

uint64_t Date.adding(_:)()
{
  sub_2489C01B4();
  sub_2489BFE9C();
  return sub_2489C3C38();
}

void Date.durationUntilNow.getter()
{
  double v0;
  uint64_t v1;

  sub_248A44F10();
  v1 = Double.seconds.getter(-v0);
  sub_2489D9080(v1);
  sub_2489C24E0();
  sub_248A4602C();
  sub_2489C280C();
  sub_2489C16B0();
}

double Date.timeIntervalUntilNow.getter()
{
  double v0;

  sub_248A44F10();
  return -v0;
}

void Date.durationSinceNow.getter()
{
  double v0;
  uint64_t v1;

  sub_248A44F10();
  v1 = Double.seconds.getter(v0);
  sub_2489D9080(v1);
  sub_2489C24E0();
  sub_248A4602C();
  sub_2489C280C();
  sub_2489C16B0();
}

uint64_t sub_248A21DF8()
{
  uint64_t v0;

  v0 = sub_248A44F58();
  sub_2489C93CC(v0, qword_254462578);
  sub_2489C401C(v0, (uint64_t)qword_254462578);
  return sub_248A44F1C();
}

uint64_t static Date.epoch.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254462590 != -1)
    swift_once();
  v2 = sub_248A44F58();
  v3 = sub_2489C401C(v2, (uint64_t)qword_254462578);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static Date.byAdding(calendarComponent:count:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_248A44F88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248A44F7C();
  sub_248A44F70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_248A21F64(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v11);
    sub_248A453F0();
    v19 = sub_2489C28D0(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + v19) != v18)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_248A220F8(uint64_t a1, uint64_t a2)
{
  return sub_248A22140(a1, a2, (void (*)(unint64_t, _OWORD *))sub_2489C81EC, &qword_254463940, (uint64_t (*)(_BYTE *, __int128 *))sub_2489FE310, (void (*)(__int128 *))sub_2489C7218);
}

uint64_t sub_248A2211C(uint64_t a1, uint64_t a2)
{
  return sub_248A22140(a1, a2, (void (*)(unint64_t, _OWORD *))sub_2489D09D8, &qword_2577A4F48, (uint64_t (*)(_BYTE *, __int128 *))sub_2489FE334, (void (*)(__int128 *))sub_2489D09A4);
}

uint64_t sub_248A22140(uint64_t result, uint64_t a2, void (*a3)(unint64_t, _OWORD *), uint64_t *a4, uint64_t (*a5)(_BYTE *, __int128 *), void (*a6)(__int128 *))
{
  uint64_t v7;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  _BYTE v30[32];
  __int128 v31;
  _OWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;

  if (result == a2)
    return 1;
  v7 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v10 = 0;
  v26 = result + 64;
  v11 = 1 << *(_BYTE *)(result + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
LABEL_8:
      v16 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v15);
      v18 = *v16;
      v17 = v16[1];
      a3(*(_QWORD *)(v7 + 56) + 32 * v15, v32);
      *(_QWORD *)&v31 = v18;
      *((_QWORD *)&v31 + 1) = v17;
      sub_248A453F0();
      goto LABEL_27;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v19 < v27)
    {
      v20 = *(_QWORD *)(v26 + 8 * v19);
      if (v20)
        goto LABEL_12;
      v21 = v10 + 2;
      ++v10;
      if (v19 + 1 < v27)
      {
        v20 = *(_QWORD *)(v26 + 8 * v21);
        if (v20)
          goto LABEL_15;
        v10 = v19 + 1;
        if (v19 + 2 < v27)
        {
          v20 = *(_QWORD *)(v26 + 8 * (v19 + 2));
          if (v20)
          {
            v19 += 2;
            goto LABEL_12;
          }
          v21 = v19 + 3;
          v10 = v19 + 2;
          if (v19 + 3 < v27)
            break;
        }
      }
    }
LABEL_26:
    v13 = 0;
    memset(v32, 0, sizeof(v32));
    v31 = 0u;
LABEL_27:
    sub_2489C625C((uint64_t)&v31, (uint64_t)&v33, a4);
    if (!v34)
      return 1;
    v31 = v35;
    v32[0] = v36;
    v22 = sub_2489C28D0(v33, v34);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      a6(&v31);
      return 0;
    }
    a3(*(_QWORD *)(a2 + 56) + 32 * v22, v30);
    v25 = a5(v30, &v31);
    a6((__int128 *)v30);
    result = ((uint64_t (*)(__int128 *))a6)(&v31);
    if ((v25 & 1) == 0)
      return 0;
  }
  v20 = *(_QWORD *)(v26 + 8 * v21);
  if (v20)
  {
LABEL_15:
    v19 = v21;
LABEL_12:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v19 << 6);
    v10 = v19;
    goto LABEL_8;
  }
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v27)
    {
      v10 = v27 - 1;
      goto LABEL_26;
    }
    v20 = *(_QWORD *)(v26 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_248A223C0(uint64_t a1, uint64_t a2)
{
  return sub_248A22140(a1, a2, (void (*)(unint64_t, _OWORD *))sub_2489D132C, &qword_2577A4F40, (uint64_t (*)(_BYTE *, __int128 *))sub_2489FE890, (void (*)(__int128 *))sub_2489D1368);
}

uint64_t sub_248A223E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489C0724();
  v10 = sub_248A44F58();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_2489BA838();
  v13 = (_QWORD *)(v3 + *(int *)(sub_2489BEDF0() + 40));
  v14 = _s12DisplayEventVMa();
  if (sub_2489BE834((uint64_t)v13, 1, v14))
  {
    sub_2489BD920(v5, 1);
  }
  else
  {
    sub_2489BED14(v5, (uint64_t)v13 + *(int *)(v14 + 20));
    sub_2489BD920(v5, 0);
    sub_2489BF898(v5, 1, v10);
    if (!v15)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v4, v5, v10);
      goto LABEL_8;
    }
  }
  if (qword_254462590 != -1)
    swift_once();
  v16 = sub_2489C401C(v10, (uint64_t)qword_254462578);
  sub_2489BED14(v4, v16);
  sub_2489C4AF4(v5, &qword_254464A98);
LABEL_8:
  v17 = sub_248A44F04();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v4, v10);
  if ((v17 & 1) != 0)
  {
    sub_2489C4AF4((uint64_t)v13, &qword_254463FF8);
    sub_2489BED14((uint64_t)v13 + *(int *)(v14 + 20), a3);
    *v13 = a1;
    v13[1] = a2;
    sub_2489BE7E0((uint64_t)v13, 0, 1, v14);
    v19 = qword_254464240;
    sub_2489BA90C();
    if (v19 != -1)
      swift_once();
    v20 = type metadata accessor for logger();
    sub_2489C401C(v20, (uint64_t)&unk_254464228);
    sub_248A45A74();
    sub_248A4557C();
    sub_248A4557C();
    sub_248A4557C();
    sub_2489BE9AC();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_248A22660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_2489BEDF0();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_2489C0428();
  sub_2489C330C(&qword_254464D40);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489BA474();
  v8 = sub_248A44EB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  sub_2489B6B34();
  sub_2489BD3E4(v3);
  sub_2489BF898(v3, 1, v8);
  if (v11)
  {
    sub_2489C4AF4(v3, &qword_254464D40);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v2, v3, v8);
    if (qword_254463F98 != -1)
      swift_once();
    sub_248A25D40(v1, v2, v0);
    sub_2489C83BC(v0, (uint64_t (*)(_QWORD))type metadata accessor for DeviceProfile);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
  }
}

uint64_t sub_248A22794@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  long double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;

  v4 = sub_2489C330C(&qword_254463FF8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v77 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s12DisplayEventVMa();
  MEMORY[0x24BDAC7A8](v7, v8);
  v78 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2489C330C(&qword_2544625C8);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v73 - v16;
  v18 = sub_2489C330C(&qword_254464A98);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)a2 = 0;
  a2[2] = 0;
  v22 = (int *)type metadata accessor for DeviceProfile();
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  v23 = (uint64_t)&a2[v22[8]];
  v24 = sub_248A44F58();
  v76 = v23;
  sub_2489BE7E0(v23, 1, 1, v24);
  v25 = v22[9];
  *(_QWORD *)&a2[v25] = sub_248A453C0();
  v73 = &a2[v22[10]];
  v74 = v25;
  v79 = v7;
  sub_2489BE7E0((uint64_t)v73, 1, 1, v7);
  v75 = v22[11];
  *(_QWORD *)&a2[v75] = 0;
  swift_getKeyPath();
  v26 = AnyKeyPath.stringValue.getter();
  sub_2489C4C6C(v26, v27, a1, &v82);
  swift_bridgeObjectRelease();
  sub_2489C330C(&qword_2544643E0);
  if (swift_dynamicCast())
  {
    v28 = v80;
    swift_release();
    if (v28 != 2)
    {
      v29 = v28 & 1;
      goto LABEL_6;
    }
  }
  else
  {
    LOBYTE(v80) = 2;
    swift_release();
  }
  v29 = *a2;
LABEL_6:
  *a2 = v29;
  swift_getKeyPath();
  v30 = AnyKeyPath.stringValue.getter();
  sub_2489C4C6C(v30, v31, a1, &v80);
  swift_bridgeObjectRelease();
  if (v81)
  {
    *((_QWORD *)&v83 + 1) = sub_2489C330C(&qword_2544643C0);
    *(_QWORD *)&v82 = swift_allocObject();
    sub_2489C3288(&v80, (_OWORD *)(v82 + 16));
  }
  else
  {
    sub_2489C4AF4((uint64_t)&v80, &qword_2544643E0);
    v82 = 0u;
    v83 = 0u;
  }
  swift_release();
  v32 = sub_248A27904((uint64_t)&v82);
  if (v32 == 3)
    v32 = a2[1];
  a2[1] = v32;
  if (qword_2544649A0 != -1)
    swift_once();
  if ((byte_25446499B & 1) != 0)
  {
    v33 = 1;
  }
  else
  {
    swift_getKeyPath();
    v34 = AnyKeyPath.stringValue.getter();
    sub_2489C4C6C(v34, v35, a1, &v82);
    swift_bridgeObjectRelease();
    v36 = swift_dynamicCast();
    v37 = v36;
    if (v36)
    {
      BYTE8(v80) = 0;
      v38 = v80;
    }
    else
    {
      v38 = 0;
      *(_QWORD *)&v80 = 0;
      BYTE8(v80) = 1;
    }
    swift_release();
    v33 = sub_248A25C74(v38, v37 ^ 1u);
    if (v33 == 3)
      v33 = a2[2];
  }
  a2[2] = v33;
  swift_getKeyPath();
  v39 = AnyKeyPath.stringValue.getter();
  sub_2489C4C6C(v39, v40, a1, &v82);
  swift_bridgeObjectRelease();
  sub_2489C330C(&qword_254464278);
  if (!swift_dynamicCast())
  {
    v80 = xmmword_248A48E50;
    swift_release();
    v42 = 0;
    goto LABEL_24;
  }
  v41 = *((_QWORD *)&v80 + 1);
  v42 = v80;
  swift_release();
  if (v41 == 1)
  {
LABEL_24:
    v43 = *((_QWORD *)a2 + 1);
    v41 = *((_QWORD *)a2 + 2);
    sub_248A453F0();
    sub_248A25618(v42, 1);
    v42 = v43;
  }
  swift_bridgeObjectRelease();
  *((_QWORD *)a2 + 1) = v42;
  *((_QWORD *)a2 + 2) = v41;
  swift_getKeyPath();
  v44 = AnyKeyPath.stringValue.getter();
  sub_2489C4C6C(v44, v45, a1, &v82);
  swift_bridgeObjectRelease();
  if (swift_dynamicCast())
  {
    sub_2489BE7E0((uint64_t)v14, 0, 1, v18);
    sub_2489C625C((uint64_t)v14, (uint64_t)v17, &qword_254464A98);
    v46 = 0;
  }
  else
  {
    v46 = 1;
    sub_2489BE7E0((uint64_t)v14, 1, 1, v18);
    sub_2489C4AF4((uint64_t)v14, &qword_2544625C8);
  }
  sub_2489BE7E0((uint64_t)v17, v46, 1, v18);
  swift_release();
  if (sub_2489BE834((uint64_t)v17, 1, v18) == 1)
  {
    v47 = v76;
    sub_2489C55EC(v76, (uint64_t)v21, &qword_254464A98);
    sub_2489C4AF4((uint64_t)v17, &qword_2544625C8);
    v48 = (uint64_t)v78;
  }
  else
  {
    sub_2489C625C((uint64_t)v17, (uint64_t)v21, &qword_254464A98);
    v48 = (uint64_t)v78;
    v47 = v76;
  }
  sub_2489BA270((uint64_t)v21, v47, &qword_254464A98);
  swift_getKeyPath();
  v49 = AnyKeyPath.stringValue.getter();
  sub_2489C4C6C(v49, v50, a1, &v82);
  swift_bridgeObjectRelease();
  sub_2489C330C(&qword_2544643D8);
  if (swift_dynamicCast())
  {
    v51 = v80;
    swift_release();
    if (v51)
    {
      v52 = sub_248A258D0(v51);
      swift_bridgeObjectRelease();
      v53 = v74;
      swift_bridgeObjectRelease();
      *(_QWORD *)&a2[v53] = v52;
    }
  }
  else
  {
    *(_QWORD *)&v80 = 0;
    swift_release();
  }
  swift_getKeyPath();
  v54 = AnyKeyPath.stringValue.getter();
  sub_2489C4C6C(v54, v55, a1, &v82);
  swift_bridgeObjectRelease();
  if (!swift_dynamicCast())
    *(_QWORD *)&v80 = 0;
  v56 = v79;
  swift_release();
  v57 = (uint64_t)v77;
  sub_248A11F70();
  if (sub_2489BE834(v57, 1, v56) == 1)
  {
    sub_2489C4AF4(v57, &qword_254463FF8);
  }
  else
  {
    sub_248A18A00(v57, v48);
    sub_248A44F10();
    v59 = -v58;
    v60 = Double.seconds.getter(-v58);
    v61 = sub_2489D9080(v60);
    v63 = v62;
    fmod(v59, 1.0);
    v64 = sub_248A4602C();
    MEMORY[0x2495A27B8](v61, v63, v64, v65);
    if ((sub_248A46038() & 1) != 0)
    {
      v66 = (uint64_t)v73;
      sub_2489C4AF4((uint64_t)v73, &qword_254463FF8);
      sub_248A18A00(v48, v66);
      sub_2489BE7E0(v66, 0, 1, v56);
    }
    else
    {
      sub_2489C83BC(v48, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
    }
  }
  swift_getKeyPath();
  v67 = AnyKeyPath.stringValue.getter();
  sub_2489C4C6C(v67, v68, a1, &v82);
  swift_bridgeObjectRelease();
  sub_2489C330C(&qword_254464270);
  if (swift_dynamicCast())
  {
    v69 = v80;
    swift_bridgeObjectRelease();
    result = swift_release();
    if (v69)
    {
      v71 = sub_248A2562C(v69);
      swift_bridgeObjectRelease();
      v72 = v75;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)&a2[v72] = v71;
    }
  }
  else
  {
    *(_QWORD *)&v80 = 0;
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_248A23010(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  BOOL v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int v39;

  v39 = a4;
  sub_2489C330C(&qword_254463FF8);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_2489C611C();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489C0054();
  v37 = (uint64_t *)v15;
  v16 = (int *)sub_2489BEDF0();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_2489BA838();
  sub_248A15774(v4, (uint64_t)v5);
  v19 = static DeviceProfile.== infix(_:_:)(v5, (unsigned __int8 *)a3);
  v20 = sub_2489B725C();
  sub_2489C83BC(v20, v21);
  if (!v19)
  {
    v22 = a1 == 0x6C7070612E6D6F63 && a2 == 0xEF64737069742E65;
    if (v22 || (sub_248A45DBC() & 1) != 0)
    {
      *(_BYTE *)v4 = *(_BYTE *)a3;
      *(_BYTE *)(v4 + 1) = *(_BYTE *)(a3 + 1);
      if (qword_2544649A0 != -1)
        swift_once();
      if ((byte_25446499B & 1) != 0)
        v23 = 1;
      else
        v23 = *(_BYTE *)(a3 + 2);
      *(_BYTE *)(v4 + 2) = v23;
      v24 = v16[11];
      v25 = *(_QWORD *)(a3 + v24);
      sub_2489BA90C();
      sub_2489BEC70();
      *(_QWORD *)(v4 + v24) = v25;
      v26 = v16[9];
      v27 = *(_QWORD *)(a3 + v26);
      sub_2489BA90C();
      sub_2489BEC70();
      *(_QWORD *)(v4 + v26) = v27;
      v29 = *(_QWORD *)(a3 + 8);
      v28 = *(_QWORD *)(a3 + 16);
      sub_2489BA90C();
      sub_2489BEC70();
      *(_QWORD *)(v4 + 8) = v29;
      *(_QWORD *)(v4 + 16) = v28;
      sub_248A255D0(a3 + v16[8], v4 + v16[8]);
    }
    v30 = v16[9];
    v31 = *(_QWORD *)(a3 + v30);
    if ((sub_248A21F64(v31, *(_QWORD *)(v4 + v30)) & 1) == 0)
    {
      sub_248A453F0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v4 + v30) = v31;
    }
    sub_2489C55EC(a3 + v16[10], (uint64_t)v12, &qword_254463FF8);
    v32 = v38;
    if (sub_2489BE834((uint64_t)v12, 1, v38) == 1)
    {
      sub_2489C4AF4((uint64_t)v12, &qword_254463FF8);
    }
    else
    {
      v33 = v37;
      sub_248A18A00((uint64_t)v12, (uint64_t)v37);
      v35 = *v33;
      v34 = v33[1];
      v36 = (uint64_t)v33 + *(int *)(v32 + 20);
      sub_2489BA90C();
      sub_248A223E4(v35, v34, v36);
      swift_bridgeObjectRelease();
      sub_2489C83BC((uint64_t)v33, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
    }
    if ((v39 & 1) != 0)
      sub_248A22660();
  }
}

BOOL static DeviceProfile.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  char v45;
  _BOOL8 result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  char v55;
  void (*v56)(uint64_t, uint64_t);
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  _QWORD *v66;
  BOOL v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t (*v74)(_QWORD);
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v83 = _s12DisplayEventVMa();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489C0A84(v8, v75);
  v80 = sub_2489C330C(&qword_254463CC8);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489C0054();
  v84 = v11;
  sub_2489C330C(&qword_254463FF8);
  sub_2489C14E0();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v79 = (uint64_t *)((char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v81 = (uint64_t)&v75 - v18;
  MEMORY[0x24BDAC7A8](v17, v19);
  v82 = (uint64_t)&v75 - v20;
  v21 = sub_248A44F58();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  sub_2489BA474();
  v24 = sub_2489C330C(&qword_254464100);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_2489C0428();
  sub_2489C330C(&qword_254464A98);
  sub_2489C14E0();
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v29, v32);
  v35 = (char *)&v75 - v34;
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)&v75 - v37;
  if (*a1 != *a2)
    return 0;
  v39 = a1[1];
  v40 = a2[1];
  if (v39 == 3)
  {
    if (v40 != 3)
      return 0;
  }
  else
  {
    v41 = v40 != 3 && v39 == v40;
    if (!v41)
      return 0;
  }
  if (a1[2] != a2[2])
    return 0;
  v42 = *((_QWORD *)a1 + 2);
  v43 = *((_QWORD *)a2 + 2);
  if (!v42)
  {
    if (v43)
      return 0;
    goto LABEL_20;
  }
  if (!v43)
    return 0;
  v44 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && v42 == v43;
  if (v44 || (v45 = sub_248A45DBC(), result = 0, (v45 & 1) != 0))
  {
LABEL_20:
    v47 = sub_2489BEDF0();
    v77 = a2;
    v48 = v47;
    sub_2489C55EC((uint64_t)&a1[*(int *)(v47 + 32)], (uint64_t)v38, &qword_254464A98);
    v76 = v48;
    sub_2489C62F0((uint64_t)&v77[*(int *)(v48 + 32)], (uint64_t)v35);
    v49 = v2 + *(int *)(v24 + 48);
    v50 = sub_2489B725C();
    sub_2489C62F0(v50, v51);
    sub_2489C62F0((uint64_t)v35, v49);
    sub_2489BF898(v2, 1, v21);
    if (v41)
    {
      sub_2489C01C4((uint64_t)v35);
      sub_2489C01C4((uint64_t)v38);
      sub_2489BF898(v49, 1, v21);
      if (v41)
      {
        sub_2489C4AF4(v2, &qword_254464A98);
        goto LABEL_31;
      }
    }
    else
    {
      sub_2489C55EC(v2, (uint64_t)v31, &qword_254464A98);
      sub_2489BF898(v49, 1, v21);
      if (!v52)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v3, v49, v21);
        sub_2489BA29C((unint64_t *)&qword_254463FE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
        v55 = sub_248A454B0();
        v56 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
        v56(v3, v21);
        sub_2489C01C4((uint64_t)v35);
        sub_2489C01C4((uint64_t)v38);
        v56((uint64_t)v31, v21);
        sub_2489C01C4(v2);
        if ((v55 & 1) == 0)
          return 0;
LABEL_31:
        v58 = v76;
        v57 = v77;
        if ((sub_248A21F64(*(_QWORD *)&a1[*(int *)(v76 + 36)], *(_QWORD *)&v77[*(int *)(v76 + 36)]) & 1) == 0)
          return 0;
        v59 = v82;
        sub_2489C5F38((uint64_t)&a1[*(int *)(v58 + 40)], v82);
        v60 = v81;
        sub_2489C5F38((uint64_t)&v57[*(int *)(v58 + 40)], v81);
        v61 = v84;
        v62 = v84 + *(int *)(v80 + 48);
        sub_2489C5F38(v59, v84);
        sub_2489C5F38(v60, v62);
        v63 = v83;
        sub_2489BF898(v61, 1, v83);
        if (v41)
        {
          sub_2489C0C3C(v60);
          sub_2489C0C3C(v59);
          sub_2489BF898(v62, 1, v63);
          if (v41)
          {
            sub_2489C4AF4(v61, &qword_254463FF8);
LABEL_47:
            v69 = *(int *)(v58 + 44);
            v70 = *(_QWORD *)&v77[v69];
            if (*(_QWORD *)&a1[v69])
            {
              if (!v70)
                return 0;
              sub_2489BA90C();
              v71 = sub_248A453F0();
              v72 = sub_248A22140(v71, v70, (void (*)(unint64_t, _OWORD *))sub_2489C81EC, &qword_254463940, (uint64_t (*)(_BYTE *, __int128 *))sub_2489FE310, (void (*)(__int128 *))sub_2489C7218);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return (v72 & 1) != 0;
            }
            return !v70;
          }
        }
        else
        {
          v64 = v79;
          sub_2489C55EC(v61, (uint64_t)v79, &qword_254463FF8);
          sub_2489BF898(v62, 1, v63);
          if (!v65)
          {
            v66 = v78;
            sub_248A18A00(v62, (uint64_t)v78);
            v67 = *v64 == *v66 && v64[1] == v66[1];
            if (v67 || (sub_248A45DBC() & 1) != 0)
            {
              v68 = sub_248A44F34();
              sub_2489C83BC((uint64_t)v66, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
              sub_2489C01C4(v60);
              sub_2489C01C4(v59);
              sub_2489C83BC((uint64_t)v64, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
              sub_2489C01C4(v61);
              v58 = v76;
              if ((v68 & 1) == 0)
                return 0;
              goto LABEL_47;
            }
            sub_2489C83BC((uint64_t)v66, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
            sub_2489C0C3C(v60);
            sub_2489C0C3C(v59);
            v73 = sub_2489B725C();
            sub_2489C83BC(v73, v74);
            v54 = v61;
            v53 = &qword_254463FF8;
LABEL_29:
            sub_2489C4AF4(v54, v53);
            return 0;
          }
          sub_2489BEED0(v60);
          sub_2489BEED0(v59);
          sub_2489C83BC((uint64_t)v64, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
        }
        v53 = &qword_254463CC8;
        v54 = v61;
        goto LABEL_29;
      }
      sub_2489C4AF4((uint64_t)v35, &qword_254464A98);
      sub_2489C4AF4((uint64_t)v38, &qword_254464A98);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v21);
    }
    v53 = &qword_254464100;
    v54 = v2;
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_248A23914(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 3487349 && a2 == 0xE300000000000000;
  if (v2 || (sub_248A45DBC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6570795472657375 && a2 == 0xE800000000000000;
    if (v6 || (sub_248A45DBC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656D697265707865 && a2 == 0xEE00706D6143746ELL;
      if (v7 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000248A511F0 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000248A51210 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x626967696C656E69 && a2 == 0xEE0073706954656CLL;
        if (v8 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000248A51230 || (sub_248A45DBC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x8000000248A51250)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          v9 = sub_248A45DBC();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 7;
          else
            return 8;
        }
      }
    }
  }
}

uint64_t sub_248A23C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_248A23914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248A23C88()
{
  sub_2489C9C9C();
  return sub_248A46074();
}

uint64_t sub_248A23CB0()
{
  sub_2489C9C9C();
  return sub_248A46080();
}

uint64_t DeviceProfile.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2489C330C(&qword_254462AD0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_2489B6B34();
  sub_2489BE100(a1, a1[3]);
  sub_2489C9C9C();
  sub_248A46008();
  sub_248A45D38();
  if (!v1)
  {
    sub_248A24A70();
    sub_2489C18D4();
    sub_248A24AAC();
    sub_2489C4F98();
    sub_248A45CFC();
    sub_2489BEDF0();
    sub_248A44F58();
    sub_2489BA29C(&qword_2544643D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_2489BFEAC();
    sub_2489BBC8C();
    sub_248A24B24(&qword_254462938, &qword_254463D40);
    sub_248A25C44();
    sub_2489C4F98();
    sub_2489C611C();
    sub_2489BA29C(&qword_254462608, (uint64_t (*)(uint64_t))_s12DisplayEventVMa, (uint64_t)&unk_248A4CF00);
    sub_2489BFEAC();
    sub_2489BBC8C();
    sub_248A24B24(&qword_254462940, &qword_254463D50);
    sub_248A25C44();
    sub_2489C18D4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_248A23F78(_QWORD *a1)
{
  return DeviceProfile.encode(to:)(a1);
}

void sub_248A23F90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  unsigned __int8 v29;
  uint64_t (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  id v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66[3];

  v63 = a2;
  v3 = type metadata accessor for DeviceProfile();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2489C330C(&qword_254464200);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v62 = (uint64_t)&v58 - v13;
  v14 = sub_2489C330C(&qword_254464D40);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_248A44EB0();
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v58 - v25;
  if (qword_254464E68 != -1)
  {
    v57 = v24;
    swift_once();
    v24 = v57;
  }
  if (byte_254464E60 != 1)
    goto LABEL_6;
  v61 = v24;
  sub_2489C55EC(a1, (uint64_t)v17, &qword_254464D40);
  if (sub_2489BE834((uint64_t)v17, 1, v18) == 1)
  {
    sub_2489C4AF4((uint64_t)v17, &qword_254464D40);
LABEL_6:
    sub_2489BE7E0(v63, 1, 1, v3);
    return;
  }
  v59 = (int *)v3;
  v27 = v61;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v26, v17, v18);
  v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v29 = sub_2489B8044();

  v60 = v18;
  if ((v29 & 1) != 0)
  {
    v30 = *(uint64_t (**)(char *, char *, uint64_t))(v27 + 16);
    v58 = v26;
    v31 = v30(v22, v26, v18);
    MEMORY[0x24BDAC7A8](v31, v32);
    *(&v58 - 2) = 0;
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
    sub_2489B7AD0(0, (uint64_t)sub_2489CB6C0, (uint64_t)(&v58 - 4), v66);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v18);
    v42 = v66[0];
    v43 = v66[1];
    sub_248A44CA0();
    swift_allocObject();
    sub_248A44C94();
    sub_248A25BB0();
    sub_248A44C88();
    swift_release();
    sub_2489BE604(v42, v43);
    v48 = v58;
  }
  else
  {
    if (qword_254463F98 != -1)
      swift_once();
    *(_WORD *)v6 = 0;
    v6[2] = 0;
    *((_QWORD *)v6 + 1) = 0;
    *((_QWORD *)v6 + 2) = 0;
    v34 = v59;
    v35 = (uint64_t)&v6[v59[8]];
    v36 = sub_248A44F58();
    sub_2489BE7E0(v35, 1, 1, v36);
    v37 = v34[9];
    *(_QWORD *)&v6[v37] = sub_248A453C0();
    v38 = (uint64_t)&v6[v34[10]];
    v39 = _s12DisplayEventVMa();
    sub_2489BE7E0(v38, 1, 1, v39);
    *(_QWORD *)&v6[v34[11]] = 0;
    v48 = v26;
    if (byte_254464E60 == 1)
    {
      sub_248A25D40((uint64_t)v6, (uint64_t)v26, (uint64_t)v11);
      sub_2489C83BC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DeviceProfile);
      v40 = (uint64_t)v11;
      v41 = 0;
    }
    else
    {
      sub_2489C83BC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DeviceProfile);
      v40 = (uint64_t)v11;
      v41 = 1;
    }
    sub_2489BE7E0(v40, v41, 1, (uint64_t)v34);
  }
  sub_2489C625C((uint64_t)v11, v62, &qword_254464200);
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_254464F38)
  {
    v44 = qword_254464F30;
    v45 = qword_254464F38;
  }
  else
  {
    if (qword_254464F80 != -1)
      swift_once();
    if (qword_25446C6D8)
    {
      v44 = qword_25446C6D0;
      v45 = qword_25446C6D8;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      v46 = sub_2489D7B5C();
      if (v47)
      {
        v44 = v46;
        v45 = v47;
      }
      else
      {
        v44 = 0;
        v45 = 0xE000000000000000;
      }
    }
    sub_248A453F0();
  }
  if (v44 == 0x6C7070612E6D6F63 && v45 == 0xEF64737069742E65)
  {
LABEL_45:
    sub_248A453F0();
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  v50 = sub_248A45DBC();
  sub_248A453F0();
  swift_bridgeObjectRelease();
  if ((v50 & 1) == 0)
  {
    if (qword_254464F38)
    {
      v51 = qword_254464F30;
      v52 = qword_254464F38;
    }
    else
    {
      if (qword_254464F80 != -1)
        swift_once();
      if (qword_25446C6D8)
      {
        v51 = qword_25446C6D0;
        v52 = qword_25446C6D8;
      }
      else
      {
        type metadata accessor for CFBundle(0);
        v53 = sub_2489D7B5C();
        if (v54)
        {
          v51 = v53;
          v52 = v54;
        }
        else
        {
          v51 = 0;
          v52 = 0xE000000000000000;
        }
      }
      sub_248A453F0();
    }
    if (v51 != 0xD000000000000010 || v52 != 0x8000000248A4F5C0)
    {
      v55 = sub_248A45DBC();
      sub_248A453F0();
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0 && sub_2489BE834(v62, 1, (uint64_t)v59) != 1)
      {
        if (qword_254464240 != -1)
          swift_once();
        v56 = type metadata accessor for logger();
        sub_2489C401C(v56, (uint64_t)&unk_254464228);
        v64 = 0;
        v65 = 0xE000000000000000;
        sub_248A45A74();
        swift_bridgeObjectRelease();
        v64 = 0xD000000000000028;
        v65 = 0x8000000248A512B0;
        sub_248A44E74();
        sub_248A4557C();
        swift_bridgeObjectRelease();
        sub_2489BE9AC();
        swift_bridgeObjectRelease();
        if (qword_254463F98 != -1)
          swift_once();
        sub_248A25F14();
      }
      goto LABEL_46;
    }
    goto LABEL_45;
  }
LABEL_46:
  (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v60);
  sub_2489C625C(v62, v63, &qword_254464200);
}

void static DeviceProfile.updateTipsdData(_:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_2489BEDF0();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489B6B34();
  if (qword_2544641F8 != -1)
    swift_once();
  v5 = sub_2489C330C(&qword_254464200);
  v6 = sub_2489C401C(v5, (uint64_t)qword_25446C698);
  swift_beginAccess();
  if (sub_2489BE834(v6, 1, v2))
  {
    sub_2489BD9E4();
  }
  else
  {
    v8 = sub_248A453F0();
    sub_248A22794(v8, v1);
    sub_248A23010(0x6C7070612E6D6F63, 0xEF64737069742E65, (uint64_t)v1, 1);
    if (v0)
    {
      sub_2489C83BC((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for DeviceProfile);
      sub_2489BD9E4();
      return;
    }
    sub_2489BD9E4();
    sub_2489C83BC((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for DeviceProfile);
  }
  if (qword_254464240 != -1)
    swift_once();
  v7 = type metadata accessor for logger();
  sub_2489C401C(v7, (uint64_t)&unk_254464228);
  sub_2489BE9AC();
}

unint64_t sub_248A24A70()
{
  unint64_t result;

  result = qword_254462E70;
  if (!qword_254462E70)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DEE0, &_s8UserTypeON);
    atomic_store(result, (unint64_t *)&qword_254462E70);
  }
  return result;
}

unint64_t sub_248A24AAC()
{
  unint64_t result;

  result = qword_254462620;
  if (!qword_254462620)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DD9C, &_s14ExperimentCampON);
    atomic_store(result, (unint64_t *)&qword_254462620);
  }
  return result;
}

unint64_t sub_248A24AE8()
{
  unint64_t result;

  result = qword_254462610;
  if (!qword_254462610)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4CD1C, &_s19IneligibilityReasonON);
    atomic_store(result, (unint64_t *)&qword_254462610);
  }
  return result;
}

void sub_248A24B24(_QWORD *a1, uint64_t *a2)
{
  void (*v2)(void);

  if (!*a1)
  {
    sub_2489C9464(0, a2);
    v2();
    sub_248A25C58();
  }
  sub_2489BA428();
}

unint64_t sub_248A24B74()
{
  unint64_t result;

  result = qword_254463FA8;
  if (!qword_254463FA8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DEB8, &_s8UserTypeON);
    atomic_store(result, (unint64_t *)&qword_254463FA8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DeviceProfile(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a3[8];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_248A44F58();
    sub_248A453F0();
    if (sub_2489BE834((uint64_t)v10, 1, v11))
    {
      v12 = sub_2489C330C(&qword_254464A98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_2489BE7E0((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = _s12DisplayEventVMa();
    sub_248A453F0();
    if (sub_2489BE834((uint64_t)v16, 1, v17))
    {
      v18 = sub_2489C330C(&qword_254463FF8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = v16[1];
      *v15 = *v16;
      v15[1] = v19;
      v20 = *(int *)(v17 + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      sub_248A453F0();
      v23(v21, v22, v11);
      sub_2489BE7E0((uint64_t)v15, 0, 1, v17);
    }
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    sub_248A453F0();
  }
  return v4;
}

uint64_t assignWithCopy for DeviceProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_248A44F58();
  v10 = sub_2489BE834((uint64_t)v7, 1, v9);
  v11 = sub_2489BE834((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      sub_2489BE7E0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_2489C330C(&qword_254464A98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  v14 = a3[10];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = _s12DisplayEventVMa();
  v18 = sub_2489BE834((uint64_t)v15, 1, v17);
  v19 = sub_2489BE834((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (!v19)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      sub_248A453F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v9);
      goto LABEL_13;
    }
    sub_2489C83BC((uint64_t)v15, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v24 = sub_2489C330C(&qword_254463FF8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v20 = *(int *)(v17 + 20);
  v21 = &v15[v20];
  v22 = &v16[v20];
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_248A453F0();
  v23(v21, v22, v9);
  sub_2489BE7E0((uint64_t)v15, 0, 1, v17);
LABEL_13:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  sub_248A453F0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DeviceProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_248A44F58();
  if (sub_2489BE834((uint64_t)v8, 1, v9))
  {
    v10 = sub_2489C330C(&qword_254464A98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    sub_2489BE7E0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = _s12DisplayEventVMa();
  if (sub_2489BE834((uint64_t)v13, 1, v14))
  {
    v15 = sub_2489C330C(&qword_254463FF8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    sub_2489BE7E0((uint64_t)v12, 0, 1, v14);
  }
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for DeviceProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_248A44F58();
  v11 = sub_2489BE834((uint64_t)v8, 1, v10);
  v12 = sub_2489BE834((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      sub_2489BE7E0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_2489C330C(&qword_254464A98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  v15 = a3[10];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = _s12DisplayEventVMa();
  v19 = sub_2489BE834((uint64_t)v16, 1, v18);
  v20 = sub_2489BE834((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (!v20)
    {
      v23 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v23;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(&v16[*(int *)(v18 + 20)], &v17[*(int *)(v18 + 20)], v10);
      goto LABEL_13;
    }
    sub_2489C83BC((uint64_t)v16, (uint64_t (*)(_QWORD))_s12DisplayEventVMa);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = sub_2489C330C(&qword_254463FF8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v16 = *(_OWORD *)v17;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(&v16[*(int *)(v18 + 20)], &v17[*(int *)(v18 + 20)], v10);
  sub_2489BE7E0((uint64_t)v16, 0, 1, v18);
LABEL_13:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_248A25398(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_2489C330C(&qword_254464A98);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a3[8];
    return sub_2489BE834(a1 + v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = sub_2489C330C(&qword_254463FF8);
    v8 = a3[10];
    return sub_2489BE834(a1 + v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + a3[9]);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

void sub_248A2543C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_2489C330C(&qword_254464A98);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[8];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
      sub_2489B6AF4();
      return;
    }
    v9 = sub_2489C330C(&qword_254463FF8);
    v10 = a4[10];
  }
  sub_2489BE7E0(a1 + v10, a2, a2, v9);
}

uint64_t storeEnumTagSinglePayload for DeviceProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_248A25520 + 4 * byte_248A4D995[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_248A25554 + 4 * byte_248A4D990[v4]))();
}

uint64_t sub_248A25554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A2555C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A25564);
  return result;
}

uint64_t sub_248A25570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A25578);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_248A2557C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A25584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_248A25594()
{
  unint64_t result;

  result = qword_2577A5680;
  if (!qword_2577A5680)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DB3C, &type metadata for DeviceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2577A5680);
  }
  return result;
}

uint64_t sub_248A255D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A25618(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_248A2562C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  _QWORD v38[3];
  uint64_t v39;
  int64_t v40;

  sub_2489C330C(&qword_254462A30);
  result = sub_248A45C24();
  v3 = (_QWORD *)result;
  v4 = 0;
  v36 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v33 = v6;
  v34 = (unint64_t)(v8 + 63) >> 6;
  v35 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v40 = v4;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v15 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * i);
    v19 = *v17;
    v18 = v17[1];
    sub_2489C81EC(*(_QWORD *)(v36 + 56) + 32 * i, (uint64_t)v38);
    v20 = v39;
    v21 = sub_2489BE100(v38, v39);
    v22 = sub_248A45924();
    MEMORY[0x24BDAC7A8](v22, v23);
    v25 = (char *)&v32 - v24;
    (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))((char *)&v32 - v24, v21, v20);
    sub_2489BE7E0((uint64_t)v25, 0, 1, v20);
    sub_248A453F0();
    sub_2489CBA94((uint64_t)v25, v20, v37);
    result = sub_2489BCE44((uint64_t)v38);
    *(_QWORD *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(v3[6] + 16 * i);
    *v26 = v19;
    v26[1] = v18;
    v27 = (_OWORD *)(v3[7] + 32 * i);
    v28 = v37[1];
    *v27 = v37[0];
    v27[1] = v28;
    v29 = v3[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v31;
    v4 = v40;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v34)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v33 + 8 * v13);
    v15 = v4 + 1;
    if (!v14)
    {
      v15 = v4 + 2;
      if (v4 + 2 >= v34)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v33 + 8 * v15);
      if (!v14)
      {
        v15 = v4 + 3;
        if (v4 + 3 >= v34)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v33 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
    v40 = v15;
  }
  v16 = v4 + 4;
  if (v4 + 4 >= v34)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v33 + 8 * v16);
  if (v14)
  {
    v15 = v4 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v34)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v33 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_248A258D0(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  _BYTE v29[32];
  uint64_t v30[4];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  sub_2489C330C(&qword_254462A28);
  result = sub_248A45C24();
  v3 = (_QWORD *)result;
  v4 = 0;
  v33 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v27 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    sub_2489C81EC(*(_QWORD *)(v33 + 56) + 32 * i, (uint64_t)v31);
    v18 = v32;
    v19 = sub_2489BE100(v31, v32);
    v30[3] = v18;
    v20 = sub_2489BE690(v30);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v20, v19, v18);
    sub_2489C55EC((uint64_t)v30, (uint64_t)v29, &qword_254464AF0);
    sub_248A453F0();
    sub_2489C330C(&qword_254464AF0);
    if (!swift_dynamicCast())
    {
      v28 = 0;
      sub_2489C4AF4((uint64_t)v30, &qword_254464AF0);
LABEL_23:
      v21 = 1;
      goto LABEL_24;
    }
    v21 = sub_248A106B0(v28);
    sub_2489C4AF4((uint64_t)v30, &qword_254464AF0);
    if (v21 == 26)
      goto LABEL_23;
LABEL_24:
    result = sub_2489BCE44((uint64_t)v31);
    *(_QWORD *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v22 = (_QWORD *)(v3[6] + 16 * i);
    *v22 = v16;
    v22[1] = v17;
    *(_BYTE *)(v3[7] + i) = v21;
    v23 = v3[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v25;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_29;
    if (v12 >= v27)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v26 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v27)
        return (uint64_t)v3;
      v13 = *(_QWORD *)(v26 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v27)
          return (uint64_t)v3;
        v13 = *(_QWORD *)(v26 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_18:
    v8 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v27)
    return (uint64_t)v3;
  v13 = *(_QWORD *)(v26 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v27)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v26 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_248A25B8C()
{
  uint64_t v0;

  sub_2489BCE44(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_248A25BB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_254463E70;
  if (!qword_254463E70)
  {
    v1 = sub_2489BCD7C(&qword_254464200);
    sub_2489BA29C(&qword_254463D30, (uint64_t (*)(uint64_t))type metadata accessor for DeviceProfile, (uint64_t)&protocol conformance descriptor for DeviceProfile);
    v3 = v2;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE4AC0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_254463E70);
  }
  return result;
}

uint64_t sub_248A25C2C()
{
  return sub_2489C0C34();
}

uint64_t sub_248A25C38()
{
  return sub_2489C0C34();
}

uint64_t sub_248A25C44()
{
  uint64_t v0;

  return v0 - 80;
}

void sub_248A25C58()
{
  JUMPOUT(0x2495A2D34);
}

ValueMetadata *_s14ExperimentCampOMa()
{
  return &_s14ExperimentCampON;
}

unint64_t sub_248A25C74(unint64_t result, char a2)
{
  if (result < 3 && (a2 & 1) == 0)
    return result;
  else
    return 3;
}

uint64_t sub_248A25C8C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_248A106C0(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_248A25CB4()
{
  sub_2489C9BC0();
  return sub_248A45660();
}

unint64_t sub_248A25D04()
{
  unint64_t result;

  result = qword_2577A5688;
  if (!qword_2577A5688)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DCD4, &_s14ExperimentCampON);
    atomic_store(result, &qword_2577A5688);
  }
  return result;
}

uint64_t sub_248A25D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v25 = a1;
  v27 = a3;
  v4 = sub_2489BFEDC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v8 = sub_2489BEDF0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8, v11);
  v12 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_254464DD8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_248A45780();
  sub_2489C0548((uint64_t)v16, v18, v19, v17);
  v20 = sub_2489BA860();
  swift_weakInit();
  sub_248A15774(a1, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v4);
  v21 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v22 = (v10 + *(unsigned __int8 *)(v5 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0;
  *((_QWORD *)v23 + 4) = v20;
  sub_248A26484((uint64_t)v12, (uint64_t)&v23[v21]);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v23[v22], (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_248A2CC90((uint64_t)v16, (uint64_t)&unk_2577A5698, (uint64_t)v23);
  swift_release();
  sub_2489C3298((uint64_t)v16, &qword_254464DD8);
  return sub_248A15774(v25, v27);
}

uint64_t sub_248A25F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_2489C330C(&qword_254464DD8);
  result = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v0 + 112))
  {
    v6 = sub_248A45780();
    sub_2489C0548((uint64_t)v5, v7, v8, v6);
    v9 = sub_2489BA860();
    swift_weakInit();
    v10 = (_QWORD *)sub_2489BA860();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v9;
    v11 = sub_248A2CC90((uint64_t)v5, (uint64_t)&unk_2577A56A8, (uint64_t)v10);
    sub_2489C3298((uint64_t)v5, &qword_254464DD8);
    *(_QWORD *)(v0 + 112) = v11;
    return swift_release();
  }
  return result;
}

uint64_t sub_248A25FF8()
{
  uint64_t v0;
  uint64_t result;

  _s11FileHandlerCMa();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  qword_25446C690 = v0;
  return result;
}

void sub_248A26034()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 112))
  {
    swift_retain();
    sub_248A457C8();
    swift_release();
  }
  *(_QWORD *)(v0 + 112) = 0;
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  sub_2489BA7D0();
}

uint64_t sub_248A260A8()
{
  sub_248A26034();
  return swift_defaultActor_deallocate();
}

uint64_t _s11FileHandlerCMa()
{
  return objc_opt_self();
}

uint64_t sub_248A260E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_248A260EC()
{
  return sub_248A260E0();
}

uint64_t sub_248A26104()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_248A26128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  return swift_task_switch();
}

uint64_t sub_248A26144()
{
  uint64_t v0;
  uint64_t Strong;

  sub_2489BD8B0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
    return swift_task_switch();
  else
    return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_248A261A8()
{
  uint64_t v0;

  sub_248A2656C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  *(_QWORD *)(v0 + 104) = 0;
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A2621C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  swift_release();
  if (qword_254464240 != -1)
    swift_once();
  v1 = *(void **)(v0 + 104);
  v2 = sub_2489BEE68();
  sub_2489C401C(v2, (uint64_t)&unk_254464228);
  sub_248A45A74();
  sub_248A4557C();
  swift_getErrorValue();
  sub_248A45D8C();
  sub_2489BE9AC();
  sub_2489BEC70();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A26318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_2489BEDF0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = sub_2489BFEDC();
  v4 = *(_QWORD *)(v12 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v6 = v0 + v3 + *(int *)(v1 + 32);
  v7 = sub_248A44F58();
  if (!sub_2489BE834(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 40);
  v9 = _s12DisplayEventVMa();
  if (!sub_2489BE834(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v8 + *(int *)(v9 + 20), v7);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v3 + v11 + v5) & ~v5), v12);
  return swift_deallocObject();
}

uint64_t sub_248A26484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A264C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(sub_2489BEDF0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2489BFEDC() - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  v11 = sub_2489C1960(v10);
  return sub_248A26128(v11, v12, v13, v7, v8, v9);
}

uint64_t sub_248A2656C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  sub_248A44CC4();
  swift_allocObject();
  sub_248A44CB8();
  type metadata accessor for DeviceProfile();
  sub_248A277F8(&qword_254462628, 255, (uint64_t (*)(uint64_t))type metadata accessor for DeviceProfile, (uint64_t)&protocol conformance descriptor for DeviceProfile);
  v4 = sub_248A44CAC();
  v6 = v5;
  result = swift_release();
  if (!v2)
  {
    v8 = sub_2489B5D40(0, &qword_254462A18);
    MEMORY[0x24BDAC7A8](v8, v9);
    v20[2] = v4;
    v20[3] = v6;
    v20[4] = 1;
    sub_248A3B61C(a2, 0, (uint64_t)sub_248A27648, (uint64_t)v20);
    sub_2489BE604(v4, v6);
    sub_2489B5D40(0, &qword_254463D68);
    v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultCenter);
    if (qword_254463CE0 != -1)
      swift_once();
    v11 = qword_25446C680;
    sub_2489C330C(&qword_2544637E8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_248A47480;
    v23 = 0x7265646E6573;
    v24 = 0xE600000000000000;
    v13 = MEMORY[0x24BEE0D00];
    sub_248A45A44();
    if (qword_254464E70 != -1)
      swift_once();
    swift_beginAccess();
    if (qword_254464F38)
    {
      v14 = qword_254464F30;
      v15 = qword_254464F38;
    }
    else
    {
      if (qword_254464F80 != -1)
        swift_once();
      if (qword_25446C6D8)
      {
        v14 = qword_25446C6D0;
        v15 = qword_25446C6D8;
      }
      else
      {
        type metadata accessor for CFBundle(0);
        v16 = sub_2489D7B5C();
        if (v17)
        {
          v14 = v16;
          v15 = v17;
        }
        else
        {
          v14 = 0;
          v15 = 0xE000000000000000;
        }
      }
      sub_248A453F0();
    }
    *(_QWORD *)(inited + 96) = v13;
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 80) = v15;
    sub_248A453F0();
    v18 = sub_248A453C0();
    sub_248A27664(v11, 0, v18, v10);

    if (qword_254464240 != -1)
      swift_once();
    v19 = type metadata accessor for logger();
    sub_2489C401C(v19, (uint64_t)&unk_254464228);
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_248A45A74();
    swift_bridgeObjectRelease();
    v21 = 0xD000000000000018;
    v22 = 0x8000000248A513C0;
    sub_248A44E74();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_2489BE9AC();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_248A26928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_248A26940()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  sub_2489BD8B0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 48) = Strong;
  if (!Strong)
    return sub_2489BA7F4(*(uint64_t (**)(void))(v0 + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_248A269B8;
  return sub_248A269F8();
}

uint64_t sub_248A269B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_2489C2820(&v3);
  sub_2489BF7F0();
  return sub_2489BA7F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_248A269F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[50] = v0;
  v1[51] = type metadata accessor for DeviceProfile();
  v1[52] = swift_task_alloc();
  v2 = sub_248A44BF8();
  v1[53] = v2;
  v1[54] = *(_QWORD *)(v2 - 8);
  v1[55] = swift_task_alloc();
  sub_2489C330C(&qword_254464018);
  v1[56] = swift_task_alloc();
  v3 = sub_248A458F4();
  v1[57] = v3;
  v1[58] = *(_QWORD *)(v3 - 8);
  v1[59] = swift_task_alloc();
  sub_2489C330C(&qword_254464D40);
  v1[60] = swift_task_alloc();
  v4 = sub_248A44EB0();
  v1[61] = v4;
  v1[62] = *(_QWORD *)(v4 - 8);
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A26B24()
{
  uint64_t v0;
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 480);
  sub_2489BD3E4(v1);
  if (sub_2489BF6A8(v1) == 1)
  {
    sub_2489C3298(*(_QWORD *)(v0 + 480), &qword_254464D40);
    sub_2489C24F4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 496) + 32))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488));
    sub_2489B5D40(0, &qword_254463D68);
    v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultCenter);
    if (qword_254463CE0 != -1)
      swift_once();
    sub_248A4590C();

    sub_248A458E8();
    sub_248A277F8(&qword_254463CC0, v4, (uint64_t (*)(uint64_t))_s11FileHandlerCMa, (uint64_t)&unk_248A4DDDC);
    *(_QWORD *)(v0 + 520) = v5;
    sub_2489C7014(&qword_254464300, v6, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0028], MEMORY[0x24BDD0038]);
    *(_QWORD *)(v0 + 528) = v7;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 536) = v8;
    *v8 = v0;
    v8[1] = sub_248A26CE4;
    return sub_248A45744();
  }
}

uint64_t sub_248A26CE4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;

  v2 = (_QWORD *)*v1;
  v4 = (_QWORD *)*v1;
  sub_2489C2820(&v4);
  if (v0)
  {
    v2[69] = v0;
    if (v2[50])
    {
      sub_2489C6C40();
      sub_248A45738();
    }
  }
  else
  {
    v2[68] = 0;
  }
  return sub_2489C1540();
}

uint64_t sub_248A26D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 424);
  if (sub_2489BE834(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 512);
    v4 = *(_QWORD *)(v0 + 488);
    v5 = *(_QWORD *)(v0 + 496);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    sub_2489C24F4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 432) + 32))(*(_QWORD *)(v0 + 440), v1, v2);
  v7 = sub_248A44BEC();
  if (!v7)
    goto LABEL_18;
  v8 = v7;
  *(_QWORD *)(v0 + 256) = 0x7265646E6573;
  *(_QWORD *)(v0 + 264) = 0xE600000000000000;
  sub_248A45A44();
  sub_248A277B0(v0 + 56, v0 + 96);
  if (!*(_QWORD *)(v0 + 120))
  {
    sub_2489C3298(v0 + 96, &qword_254463A60);
LABEL_17:
    sub_2489BBC58();
    sub_2489C3298(v0 + 56, &qword_254463A60);
    goto LABEL_18;
  }
  v9 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 32) = v9;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 128);
  if (*(_QWORD *)(v8 + 16) && (v10 = sub_2489CE020(v0 + 16), (v11 & 1) != 0))
  {
    sub_2489C81EC(*(_QWORD *)(v8 + 56) + 32 * v10, v0 + 136);
  }
  else
  {
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
  }
  sub_2489D139C(v0 + 16);
  sub_2489C330C(&qword_254464AF0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)(v0 + 240) = 0;
    *(_QWORD *)(v0 + 248) = 0;
    goto LABEL_17;
  }
  v13 = *(_QWORD *)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 248);
  sub_2489BBC58();
  sub_2489C3298(v0 + 56, &qword_254463A60);
  if (v12)
  {
    if (qword_254464E70 != -1)
      swift_once();
    sub_2489BD8B0();
    if (qword_254464F38)
    {
      v14 = qword_254464F30;
      v15 = qword_254464F38;
    }
    else
    {
      if (qword_254464F80 != -1)
        swift_once();
      if (qword_25446C6D8)
      {
        v14 = qword_25446C6D0;
        v15 = qword_25446C6D8;
      }
      else
      {
        type metadata accessor for CFBundle(0);
        v17 = sub_2489D7B5C();
        if (v18)
        {
          v14 = v17;
          v15 = v18;
        }
        else
        {
          v14 = 0;
          v15 = 0xE000000000000000;
        }
      }
      sub_248A453F0();
    }
    if (v13 == v14 && v12 == v15)
    {
      sub_248A453F0();
      sub_2489BBC58();
    }
    else
    {
      sub_2489C5F40();
      v20 = sub_248A45DBC();
      sub_248A453F0();
      sub_2489BBC58();
      if ((v20 & 1) == 0)
      {
        if (qword_2544641F8 != -1)
          swift_once();
        v21 = sub_2489C330C(&qword_254464200);
        v22 = sub_2489C401C(v21, (uint64_t)qword_25446C698);
        swift_beginAccess();
        if (sub_2489BF6A8(v22))
        {
          sub_2489BA974();
        }
        else
        {
          v27 = *(void **)(v0 + 544);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 496) + 16))(*(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 488));
          v28 = swift_task_alloc();
          *(_QWORD *)(v28 + 16) = 0;
          v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
          sub_2489B7AD0(0, (uint64_t)sub_2489CB6C0, v28, (uint64_t *)(v0 + 304));
          if (v27)
          {

            sub_2489BFECC();
            swift_task_dealloc();
            v30 = v27;
            if (qword_254464240 != -1)
              swift_once();
            v32 = sub_2489BEE68();
            sub_2489C401C(v32, (uint64_t)&unk_254464228);
            *(_QWORD *)(v0 + 336) = 0;
            *(_QWORD *)(v0 + 344) = 0xE000000000000000;
            sub_248A45A74();
            v33 = *(_QWORD *)(v0 + 344);
            *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 336);
            *(_QWORD *)(v0 + 328) = v33;
            sub_2489C5180();
            sub_2489C7014(&qword_254462E90, v34, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
            sub_248A45D68();
            sub_2489C5180();
            swift_bridgeObjectRelease();
            sub_248A4557C();
            swift_getErrorValue();
            sub_248A45D8C();
            sub_248A2B63C(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328));
            sub_2489BEC70();
            swift_willThrow();
            sub_2489BA974();
            if (qword_254462F70 != -1)
              swift_once();
            v36 = *(_QWORD *)(v0 + 432);
            v35 = *(_QWORD *)(v0 + 440);
            v37 = *(_QWORD *)(v0 + 424);
            v38 = sub_2489BEE68();
            sub_2489C401C(v38, (uint64_t)&unk_254462F58);
            *(_QWORD *)(v0 + 272) = 0;
            *(_QWORD *)(v0 + 280) = 0xE000000000000000;
            sub_248A45A74();
            v39 = *(_QWORD *)(v0 + 280);
            *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 272);
            *(_QWORD *)(v0 + 360) = v39;
            sub_248A4557C();
            sub_2489C5F40();
            sub_248A4557C();
            sub_2489BE9AC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
            goto LABEL_19;
          }

          sub_2489BFECC();
          swift_task_dealloc();
          sub_248A44CA0();
          swift_allocObject();
          sub_248A44C94();
          sub_2489C7014(&qword_254463D30, v31, (uint64_t (*)(uint64_t))type metadata accessor for DeviceProfile, (uint64_t)&protocol conformance descriptor for DeviceProfile);
          sub_248A44C88();
          v40 = *(_QWORD *)(v0 + 416);
          sub_2489BF7F0();
          sub_2489C0AA0();
          v41 = sub_2489C5F40();
          sub_248A23010(v41, v42, v40, 0);
          v43 = *(_QWORD *)(v0 + 416);
          sub_2489BA974();
          sub_248A157B8(v43);
        }
        if (qword_254464240 != -1)
          swift_once();
        v24 = *(_QWORD *)(v0 + 432);
        v23 = *(_QWORD *)(v0 + 440);
        v25 = *(_QWORD *)(v0 + 424);
        v26 = sub_2489BEE68();
        sub_2489C401C(v26, (uint64_t)&unk_254464228);
        *(_QWORD *)(v0 + 288) = 0;
        *(_QWORD *)(v0 + 296) = 0xE000000000000000;
        sub_248A45A74();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 368) = 0xD000000000000022;
        *(_QWORD *)(v0 + 376) = 0x8000000248A513E0;
        sub_2489C5F40();
        sub_2489C5180();
        sub_2489BE9AC();
        sub_2489BEC70();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
        goto LABEL_42;
      }
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 432) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 424));
LABEL_42:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_18:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 432) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 424));
LABEL_19:
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 560) = v16;
  *v16 = v0;
  v16[1] = sub_248A275C0;
  return sub_248A45744();
}

uint64_t sub_248A2755C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 392) = *(_QWORD *)(v0 + 552);
  sub_2489C330C(&qword_254464C00);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_248A275C0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;

  v2 = (_QWORD *)*v1;
  v4 = (_QWORD *)*v1;
  sub_2489C2820(&v4);
  if (v0)
  {
    v2[69] = v0;
    if (v2[50])
    {
      sub_2489C6C40();
      sub_248A45738();
    }
  }
  else
  {
    v2[68] = 0;
  }
  return sub_2489C1540();
}

uint64_t sub_248A27648()
{
  return sub_248A21CBC();
}

void sub_248A27664(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7;

  v7 = (id)sub_248A453B4();
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_postNotificationName_object_userInfo_, a1, a2, v7);

}

uint64_t sub_248A276EC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248A27718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_2489C1960(v3);
  return sub_248A26928(v4, v5, v6, v2);
}

uint64_t sub_248A27774()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_2489C2820(&v3);
  return sub_2489BA7F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_248A277B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254463A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_248A277F8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x2495A2D34](a4, v6), a1);
  }
  sub_2489BA7D0();
}

uint64_t _s8UserTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_248A27884 + 4 * byte_248A4DE09[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_248A278B8 + 4 * byte_248A4DE04[v4]))();
}

uint64_t sub_248A278B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A278C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A278C8);
  return result;
}

uint64_t sub_248A278D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A278DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_248A278E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A278E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8UserTypeOMa()
{
  return &_s8UserTypeON;
}

uint64_t sub_248A27904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v17[32];
  _BYTE v18[24];
  uint64_t v19;

  sub_2489BE648(a1, (uint64_t)v18);
  if (!v19)
  {
    sub_2489C16BC();
LABEL_26:
    v3 = 3;
    goto LABEL_27;
  }
  sub_2489BE648((uint64_t)v18, (uint64_t)v17);
  if (!sub_2489C01CC())
  {
    if (sub_2489C01CC())
    {
      v4 = v15 == 0x737265735577656ELL && v16 == 0xE800000000000000;
      if (v4 || (sub_248A45DBC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = sub_2489C16BC();
        sub_2489C2508(v5, v6);
        v3 = 0;
        goto LABEL_27;
      }
      v7 = v15 == 0x7265646172677075 && v16 == 0xE900000000000073;
      if (v7 || (sub_2489C3C48() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v8 = sub_2489C16BC();
        sub_2489C2508(v8, v9);
        v3 = 1;
        goto LABEL_27;
      }
      if (v15 == 0x7265686374697773 && v16 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = sub_2489C3C48();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
          goto LABEL_24;
      }
      v13 = sub_2489C16BC();
      sub_2489C2508(v13, v14);
      v3 = 2;
      goto LABEL_27;
    }
LABEL_24:
    v1 = sub_2489C16BC();
    goto LABEL_25;
  }
  v1 = sub_2489C16BC();
  v3 = v15;
  if (v15 >= 3)
  {
LABEL_25:
    sub_2489C2508(v1, v2);
    goto LABEL_26;
  }
  sub_2489C2508(v1, v2);
LABEL_27:
  sub_2489BE124((uint64_t)v18);
  return v3;
}

uint64_t sub_248A27AD0()
{
  sub_248A27BB8();
  return sub_248A45678();
}

uint64_t sub_248A27B2C()
{
  sub_248A27BB8();
  return sub_248A45660();
}

unint64_t sub_248A27B7C()
{
  unint64_t result;

  result = qword_2577A56B8;
  if (!qword_2577A56B8)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DE18, &_s8UserTypeON);
    atomic_store(result, (unint64_t *)&qword_2577A56B8);
  }
  return result;
}

unint64_t sub_248A27BB8()
{
  unint64_t result;

  result = qword_254463FA0;
  if (!qword_254463FA0)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4DE40, &_s8UserTypeON);
    atomic_store(result, (unint64_t *)&qword_254463FA0);
  }
  return result;
}

void Dictionary.getOrCreate(key:default:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v35 = a2;
  v37 = a5;
  v9 = *(_QWORD *)(a4 + 16);
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  sub_2489C0054();
  v32 = v10;
  v12 = *(_QWORD *)(v11 + 24);
  v36 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489BFCC8();
  v15 = sub_248A45924();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  sub_2489C5188();
  v29 = v18 - v19;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v28 - v22;
  v33 = v5;
  v24 = *v5;
  v25 = *(_QWORD *)(a4 + 32);
  v31 = a1;
  MEMORY[0x2495A1BD0](a1, v24, v9, v12, v25);
  if (sub_2489BE834((uint64_t)v23, 1, v12) != 1)
  {
    v26 = v36;
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
  sub_2489C9470();
  if (!v6)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v31, v9);
    v26 = v36;
    v27 = v29;
    sub_248A292C4(v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
    sub_2489BE7E0(v27, 0, 1, v12);
    sub_248A45468();
LABEL_5:
    sub_248A292C4(v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
  }
  sub_2489BA808();
}

void Dictionary.set(key:returning:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 24);
  sub_248A45924();
  sub_2489C16C4();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v14 - v10;
  MEMORY[0x24BDAC7A8](v9, v12);
  sub_2489BA48C();
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v3, a1);
  sub_248A292F0((uint64_t)v11);
  sub_2489BE7E0((uint64_t)v11, 0, 1, v6);
  sub_248A45468();
  sub_248A292F0(a3);
  sub_2489BA400();
}

void Dictionary.setInitialValue(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a3;
  v29 = a2;
  v7 = a1;
  v8 = *(_QWORD *)(a4 + 16);
  v30 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  sub_2489C0054();
  v31 = v9;
  v11 = *(_QWORD *)(v10 + 24);
  v12 = sub_2489BF8AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_2489C5188();
  v17 = v15 - v16;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v26 - v20;
  v27 = v4;
  v22 = *v4;
  v23 = v7;
  MEMORY[0x2495A1BD0](v7, v22, v8, v11, *(_QWORD *)(a4 + 32));
  LODWORD(v7) = sub_2489BE834((uint64_t)v21, 1, v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
  if ((_DWORD)v7 == 1)
  {
    v25 = v30;
    v24 = v31;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v31, v23, v8);
    sub_2489C9470();
    if (v5)
    {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v8);
    }
    else
    {
      sub_2489BE7E0(v17, 0, 1, v11);
      sub_248A45468();
    }
  }
  sub_2489BA808();
}

void Dictionary.get<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_2489BECFC();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_2489BFCC8();
  MEMORY[0x2495A1BD0](&v4);
  v2 = v5;
  v3 = sub_2489BFB80();
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(&v4, v3);
  if ((v2 & 1) == 0)
    sub_2489C1C70();
  sub_2489C1C70();
}

void sub_248A28104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v1 - 88) & 1) != 0)
  {
    sub_2489C01E0();
  }
  else
  {
    v2 = *(_QWORD *)(v0 - 8);
    sub_2489BFB44(v1 - 104, v1 - 96, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    sub_2489C01E0();
    MEMORY[0x2495A2ED8](v1 - 104);
    sub_2489BDAA0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_2489B71E4();
}

uint64_t sub_248A28160(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  _BYTE v14[8];

  sub_2489D9330(a1, a2, *a3, (uint64_t)&v12);
  if ((v13 & 1) != 0)
  {
    v9 = sub_2489C32D0((uint64_t)&v12, &qword_254463FD8);
  }
  else
  {
    sub_2489F82FC((uint64_t)&v12, (uint64_t)v14);
    sub_2489C32D0((uint64_t)&v12, &qword_254463FD8);
    Strong = swift_weakLoadStrong();
    v9 = sub_2489C32D0((uint64_t)v14, &qword_254464AA0);
    if (Strong)
      return Strong;
  }
  v10 = a4(v9);
  if (!v4)
  {
    Strong = v10;
    swift_weakInit();
    swift_weakAssign();
    sub_248A2927C((uint64_t)v14, (uint64_t)&v12);
    v13 = 0;
    sub_248A453F0();
    sub_248A2F1E8((uint64_t)&v12, a1, a2);
  }
  return Strong;
}

uint64_t Dictionary.getOrCreate<A>(key:default:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _BYTE v29[8];

  v26 = a3;
  v6 = a2;
  v8 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1, a2);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 24);
  MEMORY[0x2495A1BD0](&v27, v10, *v4, v8, v14, *(_QWORD *)(v13 + 32));
  v24 = a1;
  v25 = v4;
  v15 = (uint64_t (*)(uint64_t))v6;
  if ((v28 & 1) != 0)
  {
    v16 = sub_2489BF8AC();
    v17 = sub_2489BA97C(v16);
  }
  else
  {
    v18 = *(_QWORD *)(v14 - 8);
    (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v18 + 16))(v29, &v27, v14);
    v19 = sub_2489BF8AC();
    sub_2489BA97C(v19);
    v6 = MEMORY[0x2495A2ED8](v29);
    v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v29, v14);
    if (v6)
      return v6;
  }
  v20 = v15(v17);
  if (!v5)
  {
    v6 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v24, v8);
    v21 = swift_unknownObjectRetain();
    WeakReference.init(_:)(v21, (uint64_t)&v27);
    sub_248A45468();
  }
  return v6;
}

uint64_t Dictionary.set<A>(key:value:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_2489C0554();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_2489C2828(v2, v5);
  v3 = sub_2489BEED8();
  sub_248A292FC(v3);
  return sub_2489BD92C();
}

uint64_t Dictionary.set<A>(key:returning:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_2489C0554();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_2489C2828(v2, v5);
  v3 = sub_2489BEED8();
  sub_248A292FC(v3);
  sub_2489BD92C();
  return swift_unknownObjectRetain();
}

void Dictionary.subscript.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_2489BECFC();
  v38 = v0;
  v3 = v2;
  v5 = v4;
  v41 = v6;
  v36 = *(_QWORD *)(v2 + 24);
  sub_248A45924();
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v7, v8);
  v35 = (char *)&v34 - v9;
  v40 = *(_QWORD *)(sub_2489BFB80() - 8);
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C701C();
  v37 = v3;
  v12 = *(_QWORD *)(v3 + 16);
  v13 = sub_248A45924();
  v14 = *(_QWORD *)(v13 - 8);
  sub_2489C16C4();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v34 - v18;
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v17, v21);
  sub_2489C5188();
  v24 = v22 - v23;
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v34 - v27;
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v39 = v5;
  sub_2489C33D4((uint64_t)v19, v5, v29);
  if (sub_2489BE834((uint64_t)v19, 1, v12) == 1)
  {
    v30 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v30(v39, v13);
    sub_2489BED1C();
    v30((uint64_t)v19, v13);
  }
  else
  {
    sub_2489B6B80((uint64_t)v28, (uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
    sub_2489B6B80(v24, (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
    sub_2489B7268(v1, v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16));
    v32 = (uint64_t)v35;
    v31 = v36;
    v33 = sub_2489BF7AC();
    sub_2489BE7E0(v32, v33 ^ 1u, 1, v31);
    sub_248A45468();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v39, v13);
    sub_2489BED1C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v12);
  }
  sub_2489B71E4();
}

void Dictionary.subscript.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD v15[2];

  v8 = *(_QWORD *)(sub_248A45924() - 8);
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v15 - v11;
  if (a1)
  {
    v15[0] = AnyKeyPath.stringValue.getter();
    v15[1] = v13;
    MEMORY[0x2495A1BD0](v15, a2, MEMORY[0x24BEE0D00], a3, MEMORY[0x24BEE0D10]);
    swift_bridgeObjectRelease();
    if (sub_2489BE834((uint64_t)v12, 1, a3) != 1)
    {
      v14 = sub_2489C61EC();
      sub_2489C08D4((uint64_t)v14);
      goto LABEL_6;
    }
    sub_2489BEE5C(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }
  *a4 = 0u;
  a4[1] = 0u;
LABEL_6:
  sub_2489BA400();
}

void sub_248A289C0()
{
  Dictionary.subscript.getter();
}

void sub_248A289DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v14[1] = a2;
  v5 = sub_248A45924();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v14 - v8;
  v10 = sub_248A45924();
  MEMORY[0x24BDAC7A8](v10, v11);
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v13, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  sub_248A45450();
  Dictionary.subscript.setter();
}

void Dictionary.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;

  sub_2489BECFC();
  sub_248A292DC();
  v5 = malloc(0x58uLL);
  *v4 = v5;
  v5[1] = v0;
  v5[2] = v1;
  *v5 = v2;
  v6 = sub_2489BFB80();
  v5[3] = v6;
  v5[4] = *(_QWORD *)(v6 - 8);
  v5[5] = sub_2489C4FA4();
  v5[6] = sub_2489C4FA4();
  v7 = sub_248A45924();
  v5[7] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[8] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[9] = malloc(v9);
  v10 = malloc(v9);
  v5[10] = v10;
  sub_2489B6B80((uint64_t)v10, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  Dictionary.subscript.getter();
  sub_2489B71E4();
}

void sub_248A28BD0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 72);
  v4 = *(void **)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    v5 = v2[8];
    v7 = (void *)v2[5];
    v6 = (void *)v2[6];
    v8 = v2[3];
    v9 = v2[4];
    v10 = v2[7];
    (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v10);
    Dictionary.subscript.setter();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    v7 = (void *)v2[5];
    v6 = (void *)v2[6];
    Dictionary.subscript.setter();
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  free(v2);
}

void sub_248A28CC4()
{
  Dictionary.subscript.getter();
}

void sub_248A28CDC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[4];

  v6 = *(uint64_t *)((char *)a3 + a4 - 8);
  v7 = sub_248A45924();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v18 - v9;
  v11 = *a3;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v18 - v9, a1);
  v13 = sub_248A45450();
  swift_retain();
  Dictionary.subscript.setter((uint64_t)v10, v11, v13, v6, v14, v15, v16, v17, v18[0], v18[1], v18[2], v18[3]);
}

void Dictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  sub_2489BECFC();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = *(_QWORD *)(v18 + 24);
  sub_2489BEDF8();
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)v42 - v22;
  v24 = sub_2489C612C();
  v25 = *(_QWORD *)(v24 - 8);
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)v42 - v28;
  if (v15)
  {
    v30 = AnyKeyPath.stringValue.getter();
    v42[1] = v13;
    v32 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v29, v17, v24);
    v33 = sub_2489BF7AC();
    sub_2489BE7E0((uint64_t)v23, v33 ^ 1u, 1, v19);
    v42[2] = v30;
    v42[3] = v32;
    sub_248A45468();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v17, v24);
    sub_2489B71E4();
  }
  else
  {
    sub_2489B71E4();
    v36(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12);
  }
}

uint64_t (*Dictionary.subscript.modify())(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  sub_248A292DC();
  v5 = malloc(0x40uLL);
  *v4 = v5;
  v5[2] = v0;
  v5[3] = v1;
  *v5 = v3;
  v5[1] = v2;
  v6 = sub_2489BFB80();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = sub_2489C4FA4();
  v5[7] = sub_2489C4FA4();
  Dictionary.subscript.getter();
  return sub_248A28F6C;
}

#error "248A28FF0: call analysis failed (funcsize=44)"

void Dictionary.decode<A>(as:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id v15;

  sub_2489BECFC();
  v14 = v0;
  sub_2489BBD04(*MEMORY[0x24BDAC8D0]);
  sub_2489C16C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v14 - v3;
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_248A453B4();
  v15 = 0;
  v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, &v15);

  v8 = v15;
  if (v7)
  {
    sub_248A44ED4();

    v9 = 0;
    sub_2489BE31C();
    sub_248A292D0();
    sub_2489C5090();
    v12 = v14;
    sub_2489BFB44(v14, (uint64_t)v4, v13);
  }
  else
  {
    v10 = v8;
    v11 = (void *)sub_248A44DCC();

    swift_willThrow();
    v9 = 1;
    v12 = v14;
  }
  sub_2489C1820(v12, v9);
  sub_2489B71E4();
}

uint64_t sub_248A291C4()
{
  uint64_t v0;

  sub_248A45414();
  v0 = sub_248A453FC();
  MEMORY[0x2495A2D34](MEMORY[0x24BEE03C0], v0);
  return sub_248A45714();
}

uint64_t sub_248A29244()
{
  return 32;
}

__n128 sub_248A29250(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_248A29264()
{
  return 16;
}

__n128 sub_248A29270(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_248A2927C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A292C4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_248A292D0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2489BE604(v1, v0);
}

uint64_t sub_248A292F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_248A292FC(uint64_t a1)
{
  uint64_t v1;

  return WeakReference.init(_:)(a1, v1 - 64);
}

ValueMetadata *type metadata accessor for DictionaryCoder()
{
  return &type metadata for DictionaryCoder;
}

ValueMetadata *type metadata accessor for DictionaryDecoder()
{
  return &type metadata for DictionaryDecoder;
}

uint64_t static DictionaryEncoder.encode<A>(_:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v8;
  id v9[5];

  v9[4] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2489BE6F0();
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_248A44EC8();
  v9[0] = 0;
  v2 = objc_msgSend(v0, sel_JSONObjectWithData_options_error_, v1, 0, v9);

  if (!v2)
  {
    v5 = v9[0];
    v6 = (void *)sub_248A44DCC();

    swift_willThrow();
    goto LABEL_5;
  }
  v3 = v9[0];
  sub_248A459C0();
  swift_unknownObjectRelease();
  sub_2489C330C(&qword_2544643D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    sub_2489C330C(&qword_2544643C0);
    v4 = sub_248A453C0();
    sub_2489C3C64();
    return v4;
  }
  sub_2489C3C64();
  return v8;
}

ValueMetadata *type metadata accessor for DictionaryEncoder()
{
  return &type metadata for DictionaryEncoder;
}

uint64_t sub_248A29508()
{
  return 1;
}

uint64_t sub_248A29510()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_248A29518()
{
  swift_getObjCClassMetadata();
  sub_248A29510();
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_248A2953C()
{
  uint64_t v1;

  sub_2489B5D40(0, &qword_2544642F8);
  sub_248A458DC();
  sub_2489C330C(&qword_254464AF0);
  sub_2489C330C(&qword_2544643D8);
  if (swift_dynamicCast())
    return v1;
  else
    return 0;
}

id sub_248A296AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_248A296E0(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x2495A2E00);
  return result;
}

void Duration.init(timeInterval:)(long double a1)
{
  uint64_t v2;

  v2 = Double.seconds.getter(a1);
  sub_2489D9080(v2);
  fmod(a1, 1.0);
  sub_248A4602C();
  JUMPOUT(0x2495A27B8);
}

double Duration.timeInterval.getter()
{
  double v0;
  uint64_t v1;

  v0 = (double)_ss8DurationV10TipKitCoreE7secondsSivg_0();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  return (double)v1 / 1.0e18 + v0;
}

uint64_t Duration.attoseconds.getter()
{
  uint64_t v0;

  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  return v0;
}

uint64_t static Duration.minutes<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2489B6F7C(a1, a2, a3, (uint64_t)&unk_248A4DFA8, 1792);
}

uint64_t static Duration.hours<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2489B6F7C(a1, a2, a3, (uint64_t)&unk_248A4DFB0, 3328);
}

uint64_t static Duration.weeks<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2489B6F7C(a1, a2, a3, (uint64_t)&unk_248A4DFB8, 5376);
}

Swift::Bool __swiftcall Equatable.exists(in:)(Swift::OpaquePointer_optional in)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  if (in.value._rawValue)
  {
    v3 = *((_QWORD *)in.value._rawValue + 2);
    if (v3)
    {
      v4 = v1;
      v5 = *(_QWORD *)&in.is_nil;
      v6 = (char *)in.value._rawValue + 32;
      sub_248A453F0();
      v7 = v3 - 1;
      do
      {
        v8 = v7;
        LOBYTE(v3) = sub_248A298B4((uint64_t)v6, v2, v5, v4);
        if ((v3 & 1) != 0)
          break;
        v7 = v8 - 1;
        v6 += 32;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    LOBYTE(v3) = 0;
  }
  return v3 & 1;
}

uint64_t sub_248A298B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  char v7;
  _BYTE v9[32];

  sub_2489C81EC(a1, (uint64_t)v9);
  v6 = default argument 1 of Equatable.isEqual(_:checkReverse:)(a3, a4);
  Equatable.isEqual(_:checkReverse:)((uint64_t)v9, v6 & 1);
  LOBYTE(a4) = v7;
  sub_2489C32D0((uint64_t)v9, &qword_254464AF0);
  return a4 & 1;
}

uint64_t sub_248A29934(uint64_t a1, uint64_t a2)
{
  return sub_248A29988(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))MEMORY[0x24BDEA7E0]);
}

uint64_t sub_248A29950(uint64_t a1, uint64_t a2)
{
  return sub_248A29988(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))MEMORY[0x24BDEA818]);
}

uint64_t sub_248A2996C(uint64_t a1, uint64_t a2)
{
  return sub_248A29988(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))MEMORY[0x24BDEA828]);
}

uint64_t sub_248A29988(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v4 = v3;
  v6 = a3(v3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v4, a2);
  return v6;
}

void sub_248A299EC()
{
  void *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  if ((sub_2489B8044() & 1) != 0)
  {
    v0 = (void *)sub_248A44E2C();
    v7 = sub_2489C2548((int)v0, sel_removeItemAtURL_error_, v1, v2, v3, v4, v5, v6, v11, v12, v13, v14, v15, v16, 0);

    if (v7)
    {
      sub_2489C3CB0(v17);
      return;
    }
    v8 = v17;
    v9 = (void *)sub_2489BFBA8();

    swift_willThrow();
    if (qword_254462F70 != -1)
      swift_once();
    v10 = type metadata accessor for logger();
    sub_2489C401C(v10, (uint64_t)&unk_254462F58);
    sub_2489BF6CC();
    sub_248A45A74();
    sub_248A4557C();
    sub_248A44E74();
    sub_2489C058C();
    sub_2489BEE88();
    sub_2489C1700();
    sub_2489C1CA8();
    sub_2489C198C();
    sub_248A4557C();
    sub_2489C285C();
    sub_2489BEE88();

  }
  sub_2489BFEE4();
}

uint64_t sub_248A29B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  int v7;
  uint64_t v8;
  _QWORD v11[5];

  v1 = v0;
  v2 = sub_248A45120();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (__int128 *)((char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  v7 = (*(uint64_t (**)(__int128 *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BDEA898] || v7 == *MEMORY[0x24BDEA8A0] || v7 == *MEMORY[0x24BDEA890])
  {
    sub_2489BDA64(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    sub_2489B8F74(v6, (uint64_t)v11);
    sub_2489BE100(v11, v11[3]);
    swift_getDynamicType();
    v8 = sub_248A46098();
    sub_2489BCE44((uint64_t)v11);
  }
  else
  {
    sub_2489BDA64(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    return 0x4379726F74736948;
  }
  return v8;
}

uint64_t FixedWidthInteger.increment(by:)(uint64_t a1, uint64_t a2)
{
  return sub_248A29CB0(a1, a2);
}

uint64_t FixedWidthInteger.decrement(by:)(uint64_t a1, uint64_t a2)
{
  return sub_248A29CB0(a1, a2);
}

uint64_t sub_248A29CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v10;

  v3 = v2;
  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v3, v7, a2);
}

uint64_t sub_248A29D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_248A45BB8();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v15 = 0;
    v16 = result;
    MEMORY[0x24BDAC7A8](result, v6);
    v13 = a1;
    v14 = a2;
    v7 = sub_2489C330C(&qword_2577A56C0);
    v8 = sub_248A2A010();
    v15 = sub_248A3B928((void (*)(char *, uint64_t))sub_248A29FF4, (uint64_t)v12, v7, a1, MEMORY[0x24BEE4078], v8, MEMORY[0x24BEE40A8], v9);
    MEMORY[0x24BDAC7A8](v15, v10);
    v12[0] = a1;
    v12[1] = a2;
    v13 = v2;
    v11 = sub_248A45708();
    MEMORY[0x2495A2D34](MEMORY[0x24BEE12F0], v11);
    return sub_248A45B04();
  }
  return result;
}

uint64_t sub_248A29E80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v11[1] = a3;
  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v8);
  v9 = *a1;
  swift_getAssociatedConformanceWitness();
  sub_248A45F0C();
  sub_248A45DA4();
  v13 = v9;
  sub_2489C974C();
  sub_248A45990();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, a2);
}

uint64_t sub_248A29FF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_248A29E80(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_248A2A010()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2577A56C8;
  if (!qword_2577A56C8)
  {
    v1 = sub_2489BCD7C(&qword_2577A56C0);
    v2 = sub_248A2A07C();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE1BD8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2577A56C8);
  }
  return result;
}

unint64_t sub_248A2A07C()
{
  unint64_t result;

  result = qword_2577A56D0[0];
  if (!qword_2577A56D0[0])
  {
    result = MEMORY[0x2495A2D34](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, qword_2577A56D0);
  }
  return result;
}

BOOL sub_248A2A0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v5);
  v33 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v32 = (char *)&v31 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v31 - v15;
  sub_248A45984();
  if ((sub_248A459B4() & 1) != 0)
  {
    v17 = sub_248A459A8() < 64;
LABEL_7:
    if (!v17)
      goto LABEL_10;
    v27 = sub_248A4599C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, a3);
    v26 = v27 == 0;
    return (v26 & 1) == 0;
  }
  v31 = v10;
  v18 = sub_248A459B4();
  v19 = sub_248A459A8();
  v17 = v19 < 64;
  if ((v18 & 1) == 0)
    goto LABEL_7;
  if (v19 > 64)
  {
LABEL_10:
    v34 = 0;
    sub_2489C974C();
    v28 = v32;
    sub_248A45978();
    v26 = sub_248A454B0();
    v29 = *(void (**)(char *, uint64_t))(v33 + 8);
    v29(v28, a3);
    v29(v16, a3);
    return (v26 & 1) == 0;
  }
  swift_getAssociatedConformanceWitness();
  sub_248A45F0C();
  v20 = v32;
  sub_248A45DA4();
  v21 = sub_248A454A4();
  v22 = v33;
  v23 = *(void (**)(char *, uint64_t))(v33 + 8);
  v23(v20, a3);
  v24 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v25 = v31;
  v24(v31, v16, a3);
  v26 = (v21 & 1) != 0 && sub_248A4599C() == 0;
  v23(v25, a3);
  v23(v16, a3);
  return (v26 & 1) == 0;
}

BOOL sub_248A2A3D0(uint64_t a1)
{
  uint64_t v1;

  return sub_248A2A0B8(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_248A2A3F0()
{
  uint64_t v0;

  sub_248A44BE0();
  sub_2489BED94();
  sub_248A44BD4();
  sub_248A44BBC();
  sub_2489C1710();
  return v0;
}

uint64_t sub_248A2A46C()
{
  sub_248A44BB0();
  sub_2489BED94();
  sub_248A44BA4();
  sub_248A44B8C();
  return sub_2489C2558();
}

void KeyPathAccessible.set<A>(_:_:)(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *a1;
  v2 = (_QWORD *)MEMORY[0x24BEE35B8];
  sub_2489C1724();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489C3CC0(v5, v6);
  swift_setAtReferenceWritableKeyPath();
  sub_2489C0208(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + *v2) - 8) + 16));
  sub_2489BA828();
}

void KeyPathAccessible.with<A>(_:_:)(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *a1;
  v2 = (_QWORD *)MEMORY[0x24BEE2B70];
  sub_2489C1724();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489C3CC0(v5, v6);
  swift_setAtWritableKeyPath();
  sub_2489C0208(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + *v2) - 8) + 32));
  sub_2489BA828();
}

uint64_t KeyPathInput.underlyingValue.getter()
{
  return swift_retain();
}

uint64_t KeyPathInput.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_248A2A5E4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for KeyPathInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2489BD200(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyPathInput);
}

void sub_248A2A5F8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD *v17;
  __int128 v18;
  char v19;
  uint64_t v20;

  v0 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (!v0)
    goto LABEL_10;
  v4 = v0;
  v5 = objc_msgSend(v0, sel_entitlements);

  if (!v5)
    goto LABEL_10;
  v6 = (void *)sub_248A454BC();
  sub_2489C0320((uint64_t)v6, &qword_254464310);
  v7 = objc_msgSend(v5, sel_objectForKey_ofClass_, v6, swift_getObjCClassFromMetadata());

  if (v7)
  {
    sub_248A459C0();
    v8 = swift_unknownObjectRelease();
  }
  else
  {
    v16 = 0u;
    v18 = 0u;
  }
  v0 = (id)sub_2489C1744(v8, v9, v10, v11, v12, v13, v14, v15, v16, *((uint64_t *)&v16 + 1), v18, *((uint64_t *)&v18 + 1), v19);
  if (v20)
  {
    sub_2489C330C(&qword_254463D60);
    if ((sub_2489C0214() & 1) != 0)
    {
      sub_2489B482C(0xD000000000000017, 0x8000000248A515A0, v17);
      sub_2489BDA70();
    }
  }
  else
  {
LABEL_10:
    sub_2489C1998((uint64_t)v0, v1, v2, v3);
  }
  sub_2489BFB64();
}

BOOL sub_248A2A760(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_248A2A7C0()
{
  return sub_2489C2564();
}

uint64_t sub_248A2A7D8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  uint64_t v21;

  v0 = objc_msgSend((id)objc_opt_self(), sel_bundleRecordForCurrentProcess);
  if (!v0)
    goto LABEL_10;
  v4 = v0;
  v5 = objc_msgSend(v0, sel_entitlements);

  if (!v5)
    goto LABEL_10;
  v6 = (void *)sub_248A454BC();
  sub_2489C0320((uint64_t)v6, &qword_254464310);
  v7 = objc_msgSend(v5, sel_objectForKey_ofClass_, v6, swift_getObjCClassFromMetadata());

  if (v7)
  {
    sub_248A459C0();
    v8 = swift_unknownObjectRelease();
  }
  else
  {
    v17 = 0u;
    v19 = 0u;
  }
  v0 = (id)sub_2489C1744(v8, v9, v10, v11, v12, v13, v14, v15, v17, *((uint64_t *)&v17 + 1), v19, *((uint64_t *)&v19 + 1), v20);
  if (v21)
  {
    sub_2489C330C(&qword_254463D60);
    if (sub_2489C0214())
      return v18;
  }
  else
  {
LABEL_10:
    sub_2489C1998((uint64_t)v0, v1, v2, v3);
  }
  return MEMORY[0x24BEE4AF8];
}

void sub_248A2A918(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_248A2A93C()
{
  uint64_t result;

  if (qword_2544649A0 != -1)
    swift_once();
  result = 0x1000000000000014;
  if (byte_25446499B == 1 && (word_254464998 & 0x100) != 0)
    return 0x1000000000000019;
  return result;
}

void sub_248A2ACB0()
{
  uint64_t v0;
  char v1;

  v0 = sub_2489BEE68();
  sub_248A2C90C(v0);
  *(_BYTE *)sub_2489C5198() = 0;
  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489BEEE8();
  if (v1)
    sub_248A2C938();
  sub_2489C50B8();
  sub_2489C1CC8();
  sub_2489BA7D0();
}

uint64_t (*static logger.analytics.read())(_QWORD)
{
  uint64_t v0;

  if (qword_254463818 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)&unk_254463898);
  return nullsub_1;
}

uint64_t (*static logger.datastore.read())(_QWORD)
{
  uint64_t v0;

  if (qword_254464910 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)&unk_254464980);
  return nullsub_1;
}

void sub_248A2ADE8()
{
  uint64_t v0;
  char v1;

  v0 = sub_2489BEE68();
  sub_248A2C90C(v0);
  *(_BYTE *)sub_2489C5198() = 2;
  if (qword_2544649A0 != -1)
    swift_once();
  sub_2489C33DC();
  if ((v1 & 1) != 0)
    sub_248A2C92C();
  sub_2489C50B8();
  sub_2489C1CC8();
  sub_2489BA7D0();
}

uint64_t (*static logger.exception.read())(_QWORD)
{
  uint64_t v0;

  if (qword_2577A4DD0 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)&unk_2577A5758);
  return nullsub_1;
}

uint64_t sub_248A2AED0()
{
  uint64_t v0;

  v0 = type metadata accessor for logger();
  sub_2489C93CC(v0, qword_2577A5770);
  *(_BYTE *)sub_2489C401C(v0, (uint64_t)qword_2577A5770) = 3;
  if (qword_2544649A0 != -1)
    swift_once();
  return sub_248A45018();
}

uint64_t (*static logger.runtime.read())(_QWORD)
{
  uint64_t v0;

  if (qword_2577A4DD8 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)qword_2577A5770);
  return nullsub_1;
}

uint64_t (*static logger.warning.read())(_QWORD)
{
  uint64_t v0;

  if (qword_254462F70 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)&unk_254462F58);
  return nullsub_1;
}

uint64_t (*static logger.tipKit.read())(_QWORD)
{
  uint64_t v0;

  if (qword_254463FD0 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)qword_254464210);
  return nullsub_1;
}

uint64_t (*static logger.tipKitCore.read())(_QWORD)
{
  uint64_t v0;

  if (qword_254464240 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)&unk_254464228);
  return nullsub_1;
}

uint64_t (*static logger.tipsNext.read())(_QWORD)
{
  uint64_t v0;

  if (qword_254463810 != -1)
    swift_once();
  v0 = sub_2489BEE68();
  sub_2489B7270(v0, (uint64_t)qword_254463880);
  return nullsub_1;
}

void sub_248A2B138()
{
  char *v0;

  sub_248A2A918(*v0);
}

uint64_t log(_:_:_:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  char v10;
  char v11;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  sub_248A458A0();
  sub_248A2C9C4();
  if (v10)
  {
    a3();
    sub_2489C0598();
LABEL_10:
    sub_248A2B668(v4, v5, v6, v7, v8, v9);
    return sub_2489BFC74();
  }
  sub_248A458AC();
  sub_248A2C9C4();
  if (v10)
  {
    a3();
    sub_2489C19A0();
    goto LABEL_10;
  }
  sub_248A458B8();
  sub_248A2C9C4();
  if (v11)
  {
    a3();
    sub_248A2C99C();
    sub_2489C702C();
    goto LABEL_10;
  }
  sub_248A458C4();
  sub_248A2C9C4();
  if (v13)
  {
    v14 = ((uint64_t (*)(void))a3)();
    sub_248A2B8DC(v14, v15);
  }
  else
  {
    v16 = _s10TipKitCore3logyyAA6loggerV_So03os_D7_type_tanSSyXKtFfA0__0();
    ((void (*)(uint64_t))a3)(v16);
    sub_2489BE9AC();
  }
  return sub_2489BFC74();
}

uint64_t static logger.info(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2489BFBB4(a1, a2);
  sub_2489C0598();
  sub_248A2B668(v2, v3, v4, v5, v6, v7);
  return sub_2489BFC74();
}

uint64_t static logger.debug(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2489BFBB4(a1, a2);
  sub_2489C19A0();
  sub_248A2B668(v2, v3, v4, v5, v6, v7);
  return sub_2489BFC74();
}

uint64_t static logger.error(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_2489BFBB4(a1, a2);
  sub_2489C702C();
  sub_2489C08E8(v2, v3, v4, v5, 29295, v6);
  return sub_2489BFC74();
}

uint64_t static logger.fault(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_2489B6E44(a1, a2);
}

uint64_t log(_:_:_:_:)(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  char v14;
  char v15;
  char v17;
  uint64_t v18;

  sub_248A458A0();
  sub_248A2C9B8();
  if (v14)
  {
    a3();
    sub_2489BA9A0();
    sub_2489C0AC4();
    sub_2489BF8C4();
    sub_2489C0598();
LABEL_10:
    sub_248A2B668(v8, v9, v10, v11, v12, v13);
    return sub_2489C3CF4();
  }
  sub_248A458AC();
  sub_248A2C9B8();
  if (v14)
  {
    a3();
    sub_2489BA9A0();
    sub_2489C0AC4();
    sub_2489BF8C4();
    sub_2489C19A0();
    goto LABEL_10;
  }
  sub_248A458B8();
  sub_248A2C9B8();
  if (v15)
  {
    a3();
    sub_2489BA9A0();
    sub_2489C0AC4();
    sub_2489BF8C4();
    sub_248A2C99C();
    sub_2489C702C();
    goto LABEL_10;
  }
  sub_248A458C4();
  sub_248A2C9B8();
  if (v17)
  {
    a3();
    sub_2489BA9A0();
    sub_2489C0AC4();
    sub_2489BF8C4();
    sub_248A2B8DC(a4, a5);
  }
  else
  {
    v18 = _s10TipKitCore3logyyAA6loggerV_So03os_D7_type_tanSSyXKtFfA0__0();
    ((void (*)(uint64_t))a3)(v18);
    sub_2489BA9A0();
    sub_2489C0AC4();
    sub_2489BF8C4();
    sub_2489BE9AC();
  }
  return sub_2489C3CF4();
}

uint64_t static logger.log(_:_:_:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  return sub_248A2BC80(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_2489BE9AC);
}

uint64_t static logger.notice(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_2489BFBB4(a1, a2);
  sub_2489C5F4C(v2, v3, v4, v5, v6, MEMORY[0x24BEE7928]);
  return sub_2489BFC74();
}

uint64_t static logger.notice(_:_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2489C256C(a1, a2);
  sub_2489C0228();
  sub_2489BFF04();
  sub_2489C286C();
  v2 = sub_2489C6138();
  sub_2489C5F4C(v2, v3, v4, v5, v6, v7);
  return sub_2489C3CF4();
}

uint64_t static logger.debug(_:_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_2489C256C(a1, a2);
  sub_2489C0228();
  sub_2489BFF04();
  sub_2489C286C();
  v2 = sub_2489C5984();
  sub_2489C08E8(v2, v4, v5, v3 | 0x6265642000000000, 26485, v6);
  return sub_2489C3CF4();
}

uint64_t static logger.trace(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_2489BFBB4(a1, a2);
  sub_2489C08E8(v2, v3, 17, 0x61727420A280E220, 25955, MEMORY[0x24BEE7908]);
  return sub_2489BFC74();
}

uint64_t static logger.trace(_:_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_2489C256C(a1, a2);
  sub_2489C0228();
  sub_2489BFF04();
  sub_2489C286C();
  v2 = sub_2489C5984();
  sub_2489C08E8(v2, v4, v5, v3 | 0x6172742000000000, 25955, v6);
  return sub_2489C3CF4();
}

uint64_t static logger.info(_:_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_2489C256C(a1, a2);
  sub_2489C0228();
  sub_2489BFF04();
  sub_2489C286C();
  v2 = sub_2489C6138();
  sub_248A2B668(v2, v3, 16, 0x666E6920A280E220, 0xAB00000000205D6FLL, v4);
  return sub_2489C3CF4();
}

uint64_t static logger.warning(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_2489BFBB4(a1, a2);
  sub_2489C6C4C(v2, v3, v4, v5, v6, (uint64_t (*)(void *))MEMORY[0x24BEE7910]);
  return sub_2489BFC74();
}

uint64_t static logger.warning(_:_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *);

  sub_2489C256C(a1, a2);
  sub_2489C0228();
  sub_2489BFF04();
  sub_2489C286C();
  v2 = sub_2489C6138();
  sub_2489C6C4C(v2, v3, v4, v5, v6, v7);
  return sub_2489C3CF4();
}

void sub_248A2B63C(uint64_t a1, uint64_t a2)
{
  sub_248A2B668(a1, a2, 17, 0x72726520A280E220, 0xAC000000205D726FLL, MEMORY[0x24BEE7910]);
}

void sub_248A2B668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __n128 *v13;
  uint64_t v14;
  void *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v9 = sub_248A2C914();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_2489BEC94();
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BA4D4();
  if (byte_254464F78 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    sub_2489BEEE8();
    if (v12)
    {
      sub_248A2C938();
      if (v12)
      {
        sub_2489C330C(&qword_254464820);
        v13 = (__n128 *)sub_2489BDAAC();
        sub_248A2C968(v13, (__n128)xmmword_248A47480);
        sub_248A45A74();
        swift_bridgeObjectRelease();
        sub_2489B6B88();
        sub_248A4557C();
        swift_bridgeObjectRelease();
        sub_248A4557C();
        sub_248A2C9B0();
        v13[3].n128_u64[1] = MEMORY[0x24BEE0D00];
        v13[2].n128_u64[0] = v20;
        v13[2].n128_u64[1] = v21;
        sub_2489BBD14();
        sub_248A2C990();
      }
    }
  }
  v14 = sub_2489BEE68();
  sub_248A2C984(v6 + *(int *)(v14 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  sub_2489BEE04();
  v15 = (void *)sub_248A2C97C();
  v16 = a6();
  if (sub_248A2C948(v16))
  {
    sub_2489C4FAC();
    sub_2489C4FAC();
    sub_248A2C8F8(4.8149e-34);
    v17 = sub_248A2C91C();
    sub_2489BD93C(v17);
    sub_2489C61F8();
    sub_2489C947C(&dword_2489B3000, v18, v19, "%s");
    sub_248A2C958();
    sub_2489C0754();
  }

  sub_2489BD9F8();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  sub_2489B71E4();
}

uint64_t static logger.error(_:_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_2489C256C(a1, a2);
  sub_2489C0228();
  sub_2489BFF04();
  sub_2489C286C();
  v2 = sub_2489C5984();
  sub_2489C08E8(v2, v4, v5, v3 | 0x7272652000000000, 29295, v6);
  return sub_2489C3CF4();
}

uint64_t sub_248A2B8DC(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v5 = sub_248A45024();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254464E70 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_254464F78 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    if (byte_25446499B == 1 && HIBYTE(word_254464998) == 1)
    {
      sub_2489C330C(&qword_254464820);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_248A47480;
      v23 = 0;
      v24 = 0xE000000000000000;
      sub_248A45A74();
      swift_bridgeObjectRelease();
      v23 = 91;
      v24 = 0xE100000000000000;
      sub_248A2A918(*v2);
      sub_248A4557C();
      swift_bridgeObjectRelease();
      sub_248A4557C();
      sub_248A4557C();
      v11 = v23;
      v12 = v24;
      *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v10 + 32) = v11;
      *(_QWORD *)(v10 + 40) = v12;
      sub_248A45F84();
      swift_bridgeObjectRelease();
    }
  }
  if (*v2 == 3)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    if (HIBYTE(word_254464998) == 1)
      sub_248A2BCF0(a1, a2);
  }
  v13 = type metadata accessor for logger();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, &v2[*(int *)(v13 + 20)], v5);
  swift_bridgeObjectRetain_n();
  v14 = sub_248A4500C();
  v15 = sub_248A458C4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v22 = v5;
    v23 = v17;
    v18 = a1;
    v19 = v17;
    *(_DWORD *)v16 = 136315138;
    sub_248A453F0();
    v25 = sub_2489C811C(v18, a2, &v23);
    sub_248A45954();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2489B3000, v14, v15, "%s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495A2E00](v19, -1, -1);
    MEMORY[0x2495A2E00](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v22);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

uint64_t static logger.fault(_:_:_:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  return sub_248A2BC80(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_248A2B8DC);
}

uint64_t sub_248A2BC80(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_2489BFBB4(a1, a2);
  sub_248A453F0();
  v6 = sub_248A454EC();
  v8 = v7;
  swift_bridgeObjectRelease();
  a5(v6, v8);
  return sub_2489C3CF4();
}

uint64_t sub_248A2BCF0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  Dl_info v9;
  uint64_t v10;

  v3 = result;
  v10 = *MEMORY[0x24BDAC8D0];
  if (qword_2544649A0 != -1)
    result = swift_once();
  if (HIBYTE(word_254464998) == 1)
  {
    memset(&v9, 0, sizeof(v9));
    result = (uint64_t)dlopen(0, 2);
    if (result)
    {
      v4 = (void *)result;
      if (qword_2577A4DE0 != -1)
        swift_once();
      v5 = sub_248A4551C();
      v6 = dlsym(v4, (const char *)(v5 + 32));
      result = swift_release();
      if (v6)
      {
        result = dladdr(v6, &v9);
        if (v9.dli_fbase)
        {
          sub_248A458C4();
          sub_248A2C8BC();
          v7 = (void *)sub_248A45918();
          sub_2489C330C(&qword_2544643B0);
          v8 = swift_allocObject();
          *(_OWORD *)(v8 + 16) = xmmword_248A47480;
          *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v8 + 64) = sub_2489C6088();
          *(_QWORD *)(v8 + 32) = v3;
          *(_QWORD *)(v8 + 40) = a2;
          sub_248A453F0();
          sub_248A45000();

          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t static logger.critical(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_2489BFBB4(a1, a2);
  sub_2489C0C44(v2, v3, v4, v5, v6, (uint64_t (*)(void *))MEMORY[0x24BEE7920]);
  return sub_2489BFC74();
}

void sub_248A2BF0C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *))
{
  _BYTE *v6;
  uint64_t v7;
  __n128 *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24[6];

  v10 = (__n128 *)sub_248A2C914();
  v11 = v10[-1].n128_u64[1];
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_2489BEC94();
  if (qword_254464E70 != -1)
    swift_once();
  sub_2489BA4D4();
  if (byte_254464F78 == 1)
  {
    if (qword_2544649A0 != -1)
      swift_once();
    sub_2489BEEE8();
    if (v13)
    {
      sub_248A2C92C();
      if ((v14 & 1) != 0 || *v6 == 4)
      {
        sub_2489C330C(&qword_254464820);
        v10 = (__n128 *)sub_2489BDAAC();
        sub_248A2C968(v10, (__n128)xmmword_248A47480);
        sub_248A45A74();
        swift_bridgeObjectRelease();
        sub_2489B6B88();
        sub_248A4557C();
        swift_bridgeObjectRelease();
        sub_248A4557C();
        sub_248A2C9B0();
        v15 = v24[0];
        v16 = v24[1];
        v10[3].n128_u64[1] = MEMORY[0x24BEE0D00];
        v10[2].n128_u64[0] = v15;
        v10[2].n128_u64[1] = v16;
        sub_2489BBD14();
        sub_248A2C990();
      }
    }
  }
  v17 = sub_2489BEE68();
  (*(void (**)(uint64_t, _BYTE *, __n128 *))(v11 + 16))(v7, &v6[*(int *)(v17 + 20)], v10);
  sub_2489BEE04();
  v18 = (void *)sub_248A2C97C();
  v19 = a6(v18);
  if (sub_248A2C948(v19))
  {
    sub_2489C4FAC();
    v24[0] = sub_2489C4FAC();
    sub_248A2C8F8(4.8149e-34);
    v20 = sub_2489C811C(a1, a2, v24);
    sub_2489BD93C(v20);
    sub_2489C61F8();
    sub_2489C947C(&dword_2489B3000, v21, v22, "%s");
    sub_248A2C958();
    sub_2489C0754();
  }

  sub_2489BD9F8();
  (*(void (**)(uint64_t, __n128 *))(v11 + 8))(v7, v10);
  sub_2489B71E4();
}

uint64_t static logger.critical(_:_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *);

  sub_2489C256C(a1, a2);
  sub_2489C0228();
  sub_2489BFF04();
  sub_2489C286C();
  v2 = sub_2489C6138();
  sub_2489C0C44(v2, v3, v4, v5, v6, v7);
  return sub_2489C3CF4();
}

_BYTE *initializeWithTake for logger(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_248A45024();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for logger(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_248A45024();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for logger()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_248A2C258(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 248)
  {
    v4 = *a1;
    if (v4 >= 8)
      return v4 - 7;
    else
      return 0;
  }
  else
  {
    v8 = sub_248A2C914();
    return sub_2489BE834((uint64_t)&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for logger()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_248A2C2CC(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 248)
  {
    *result = a2 + 7;
  }
  else
  {
    v7 = sub_248A2C914();
    return (_BYTE *)sub_2489BE7E0((uint64_t)&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for logger.Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_248A2C37C + 4 * byte_248A4E055[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_248A2C3B0 + 4 * byte_248A4E050[v4]))();
}

uint64_t sub_248A2C3B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A2C3B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x248A2C3C0);
  return result;
}

uint64_t sub_248A2C3CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x248A2C3D4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_248A2C3D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_248A2C3E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for logger.Category()
{
  return &type metadata for logger.Category;
}

unint64_t sub_248A2C400()
{
  unint64_t result;

  result = qword_2577A5788;
  if (!qword_2577A5788)
  {
    result = MEMORY[0x2495A2D34](&unk_248A4E0F4, &type metadata for logger.Category);
    atomic_store(result, (unint64_t *)&qword_2577A5788);
  }
  return result;
}

void *sub_248A2C43C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_248A45C48();
  __break(1u);
  return result;
}

uint64_t sub_248A2C500(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_248A2C594(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_248A2C768(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_248A2C768((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_248A2C594(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_248A45594();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_248A2C704(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_248A45A80();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_248A45C48();
  __break(1u);
LABEL_14:
  result = sub_248A45BF4();
  __break(1u);
  return result;
}

_QWORD *sub_248A2C704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_2489C330C(&qword_2577A5790);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_248A2C768(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_2489C330C(&qword_2577A5790);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_248A2C83C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_248A02690(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_248A2C83C(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_248A45C48();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unint64_t sub_248A2C8BC()
{
  unint64_t result;

  result = qword_2577A5798;
  if (!qword_2577A5798)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2577A5798);
  }
  return result;
}

uint64_t sub_248A2C8F8(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_248A453F0();
}

uint64_t *sub_248A2C90C(uint64_t a1)
{
  uint64_t *v1;

  return sub_2489C93CC(a1, v1);
}

uint64_t sub_248A2C914()
{
  return sub_248A45024();
}

uint64_t sub_248A2C91C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_2489C811C(v0, v1, (uint64_t *)(v2 - 128));
}

BOOL sub_248A2C948(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_248A2C958()
{
  return swift_arrayDestroy();
}

__n128 *sub_248A2C968(__n128 *result, __n128 a2)
{
  uint64_t v2;

  result[1] = a2;
  *(_QWORD *)(v2 - 128) = 0;
  *(_QWORD *)(v2 - 120) = 0xE000000000000000;
  return result;
}

uint64_t sub_248A2C97C()
{
  return sub_248A4500C();
}

uint64_t sub_248A2C984@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_248A2C990()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_248A2C9B0()
{
  return sub_248A4557C();
}

void sub_248A2C9D0()
{
  if (qword_2544649A0 != -1)
    swift_once();
  __asm { BR              X10 }
}

void sub_248A2CB4C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (void *)sub_248A454BC();
  v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    v2 = sub_248A454E0();
    v4 = v3;

    qword_25446C658 = v2;
    unk_25446C660 = v4;
  }
  else
  {
    __break(1u);
  }
}

void sub_248A2CBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8[2];

  v8[0] = a1;
  v8[1] = a2;
  v5 = *(os_unfair_lock_s **)(v3 + 16);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_248A2F0F8(v6, v8, a3);
  os_unfair_lock_unlock(v7);
}

void sub_248A2CC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v7[16];

  swift_retain();
  sub_248A453F0();
  sub_248A2CD8C(a4, (uint64_t)v7);
  sub_248A2F1CC((uint64_t)v7, a2, a3);
}

uint64_t sub_248A2CC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  sub_248A2ECA8(a1, 0, 0, 0, 1, 0, 0);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_248A45738();
    swift_unknownObjectRelease();
  }
  v5 = sub_2489BA860();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  return swift_task_create();
}

void sub_248A2CD8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[8];

  swift_weakInit();
  if (a1)
  {
    swift_weakAssign();
    swift_release();
    sub_248A2F118((uint64_t)v4, a2);
  }
  else
  {
    sub_2489C3298((uint64_t)v4, &qword_254464D50);
    *(_QWORD *)a2 = 0;
  }
  *(_BYTE *)(a2 + 8) = a1 == 0;
}

void MiniTipsDatastore.id.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

void MiniTipsDatastore.bundleID.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

void MiniTipsDatastore.author.getter()
{
  sub_2489BD894();
  sub_2489C5154();
  sub_2489BA7D0();
}

uint64_t MiniTipsDatastore.queue.getter()
{
  return swift_retain();
}

uint64_t MiniTipsDatastore.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = sub_2489C330C(&qword_254464D40);
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_2489B6B34();
  sub_248A45A74();
  swift_bridgeObjectRelease();
  sub_248A2F16C();
  v5 = v3;
  sub_248A453F0();
  sub_248A4557C();
  sub_2489BBC60();
  sub_2489C0C28();
  sub_248A4557C();
  sub_248A2CF70(v0);
  sub_2489BDA04();
  sub_248A454F8();
  sub_248A4557C();
  sub_2489BDA70();
  sub_248A4557C();
  return v5;
}

uint64_t sub_248A2CF70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v16;

  v3 = sub_2489BFEDC();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_2489B6B34();
  v5 = sub_248A2F1B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelConfiguration;
  sub_2489BD8B0();
  v11 = 1;
  if (!sub_2489BE834(v10, 1, v5))
  {
    v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
    MEMORY[0x2495A19D8](v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    sub_248A44E44();
    v13 = sub_2489BDA04();
    v14(v13);
    v11 = 0;
  }
  return sub_2489BE7E0(a1, v11, 1, v3);
}

BOOL MiniTipsDatastore.hasConfigured.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v7;

  v0 = sub_2489C330C(&qword_254464D40);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248A2CF70((uint64_t)v3);
  v4 = sub_2489BFEDC();
  v5 = sub_2489BE834((uint64_t)v3, 1, v4) != 1;
  sub_2489C3298((uint64_t)v3, &qword_254464D40);
  return v5;
}

uint64_t MiniTipsDatastore.__allocating_init(id:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  MiniTipsDatastore.init(id:bundleID:)(a1, a2, a3, a4);
  return v8;
}

_QWORD *MiniTipsDatastore.init(id:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4[9] = 0;
  v9 = sub_248A2F1B8();
  sub_2489C3D04(v9);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer) = 0;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_datastoreTask) = 0;
  v4[2] = a1;
  v4[3] = a2;
  v10 = a1 == a3 && a2 == a4;
  if (v10 || (sub_2489BDA04(), (sub_248A45DBC() & 1) != 0))
  {
    sub_2489BA7EC();
    sub_2489BEC8C();
    v11 = a3;
    v12 = a4;
  }
  else
  {
    sub_2489BA7EC();
    sub_2489BEC8C();
    sub_248A4557C();
    sub_2489BDA04();
    sub_248A4557C();
    v11 = a3;
    v12 = a4;
  }
  v4[6] = v11;
  v4[7] = v12;
  type metadata accessor for MiniTipsDatastore.DatastoreQueue();
  swift_allocObject();
  v4[8] = sub_248A36F90();
  v4[4] = a3;
  v4[5] = a4;
  if (qword_254464D48 != -1)
    swift_once();
  sub_2489BD8B0();
  swift_retain();
  swift_retain();
  v13 = sub_2489BDA04();
  sub_248A2CBC4(v13, v14, (uint64_t)v4);
  swift_release();
  sub_2489BEC70();
  sub_2489B6B20();
  return v4;
}

uint64_t MiniTipsDatastore.configure(url:monitorChanges:cloudKitContainer:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 88) = a5;
  *(_QWORD *)(v6 + 96) = v5;
  *(_QWORD *)(v6 + 72) = a3;
  *(_QWORD *)(v6 + 80) = a4;
  *(_BYTE *)(v6 + 152) = a2;
  *(_QWORD *)(v6 + 64) = a1;
  *(_QWORD *)(v6 + 104) = *v5;
  sub_2489C330C(&qword_254464560);
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  *(_QWORD *)(v6 + 120) = swift_task_alloc();
  v7 = sub_2489BFEDC();
  *(_QWORD *)(v6 + 128) = v7;
  *(_QWORD *)(v6 + 136) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 144) = swift_task_alloc();
  if (qword_254464558 != -1)
    swift_once();
  return sub_2489BF788();
}

uint64_t sub_248A2D3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  id v3;
  Swift::Bool v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (MiniTipsDatastore.hasConfigured.getter())
  {
    if (qword_254464240 != -1)
      swift_once();
    v1 = sub_2489BEE68();
    sub_2489C401C(v1, (uint64_t)&unk_254464228);
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    sub_248A45A74();
    swift_bridgeObjectRelease();
    sub_248A2F16C();
    sub_2489BA29C(&qword_254462E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    sub_248A45D68();
    sub_248A4557C();
    sub_2489BEC70();
    sub_2489BE9AC();
    sub_2489BEC70();
  }
  else
  {
    if (qword_254464E70 != -1)
      swift_once();
    sub_2489BD8B0();
    sub_2489BEC8C();
    sub_248A44E38();
    sub_2489B71DC();
    v3 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v4 = URL.createDirectory(using:)((NSFileManager)v3);

    if (!v4)
    {
      sub_2489C4FB4();
      sub_2489C9824();
      swift_allocError();
      sub_248A2F16C();
      *v6 = v7;
      v6[1] = v8;
      swift_willThrow();
      swift_task_dealloc();
      sub_2489C33EC();
      sub_2489C08FC();
      v2 = *(uint64_t (**)(void))(v0 + 8);
      return v2();
    }
    v5 = sub_248A38F34();
    sub_248A388AC(*(_QWORD *)(v0 + 144), v5, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 120));
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 96);
    sub_2489BA4B8();
    v12 = sub_248A2F1B8();
    sub_2489BE7E0(v10, 0, 1, v12);
    v13 = v11 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelConfiguration;
    sub_2489BEE10();
    sub_248A2EA48(v10, v13);
    swift_endAccess();
    v14 = sub_248A38F34();
    v15 = *(_QWORD *)(v0 + 112);
    sub_248A2EE08(v13, v15, &qword_254464560);
    v16 = sub_248A38BCC(v14, v15);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(unsigned __int8 *)(v0 + 152);
    sub_2489C3298(*(_QWORD *)(v0 + 112), &qword_254464560);
    sub_2489BA4B8();
    *(_QWORD *)(v17 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer) = v16;
    swift_release();
    if (v18 == 1)
    {
      v19 = *(_QWORD **)(v0 + 96);
      v21 = v19[6];
      v20 = v19[7];
      _s16ContainerMonitorCMa();
      v22 = swift_allocObject();
      sub_2489BD894();
      swift_defaultActor_initialize();
      *(_QWORD *)(v22 + 112) = v21;
      *(_QWORD *)(v22 + 120) = v20;
      v19[9] = v22;
      swift_release();
    }
    v24 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 144);
    v25 = *(_QWORD *)(v0 + 128);
    sub_2489B934C();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  swift_task_dealloc();
  sub_2489C33EC();
  sub_2489BBD28();
  v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_248A2D808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v16;
  uint64_t v17;

  *(_QWORD *)(v8 + 2232) = v17;
  *(_OWORD *)(v8 + 2216) = v16;
  *(_QWORD *)(v8 + 2168) = a8;
  *(_QWORD *)(v8 + 2120) = a7;
  *(_QWORD *)(v8 + 2072) = a6;
  *(_QWORD *)(v8 + 2024) = a5;
  *(_QWORD *)(v8 + 1976) = a4;
  v12 = sub_248A44EB0();
  *(_QWORD *)(v8 + 2240) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 2248) = v13;
  *(_QWORD *)(v8 + 2256) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v8 + 2264) = swift_task_alloc();
  type metadata accessor for MiniTipsDatastore();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 2272) = v14;
  *v14 = v8;
  v14[1] = sub_248A2D8D4;
  return sub_248A2DD3C(a4, a5, a6);
}

uint64_t sub_248A2D8D4()
{
  sub_2489BFA2C();
  return sub_2489BF788();
}

uint64_t sub_248A2D914()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[283];
  v2 = v0[281];
  v3 = v0[280];
  v17 = v0[277];
  v4 = v0[271];
  v5 = v0[259];
  v16 = v0[253];
  v6 = v0[247];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, v0[265], v3);
  v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v8 = swift_allocObject();
  v0[285] = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v8 + v7, v1, v3);
  v9 = sub_2489C0374();
  v0[286] = v9;
  *(_QWORD *)(v9 + 16) = &unk_2577A57C8;
  *(_QWORD *)(v9 + 24) = v8;
  swift_asyncLet_begin();
  v10 = (_QWORD *)sub_2489BA860();
  v0[287] = v10;
  v10[2] = v4;
  v10[3] = v6;
  v10[4] = v16;
  v10[5] = v5;
  v11 = sub_2489C0374();
  v0[288] = v11;
  *(_QWORD *)(v11 + 16) = &unk_2577A57E8;
  *(_QWORD *)(v11 + 24) = v10;
  swift_retain();
  swift_retain();
  sub_248A453F0();
  swift_asyncLet_begin();
  v12 = (_QWORD *)sub_2489BA860();
  v0[289] = v12;
  v12[2] = v17;
  v12[3] = v6;
  v12[4] = v4;
  v13 = sub_2489C0374();
  v0[290] = v13;
  *(_QWORD *)(v13 + 16) = &unk_2577A5800;
  *(_QWORD *)(v13 + 24) = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2489BCD7C(&qword_254464828);
  swift_asyncLet_begin();
  if (qword_254464910 != -1)
    swift_once();
  v14 = sub_2489BEE68();
  sub_2489C401C(v14, (uint64_t)&unk_254464980);
  sub_248A45A74();
  swift_bridgeObjectRelease();
  sub_248A2F16C();
  sub_248A4557C();
  sub_248A4557C();
  sub_248A44E74();
  sub_248A4557C();
  sub_2489BDA70();
  sub_2489BE9AC();
  sub_2489BDA70();
  return swift_asyncLet_get();
}

uint64_t sub_248A2DC08()
{
  return swift_asyncLet_get();
}

uint64_t sub_248A2DC1C()
{
  return swift_asyncLet_get();
}

uint64_t sub_248A2DC34()
{
  return swift_asyncLet_finish();
}

uint64_t sub_248A2DC4C()
{
  return sub_2489BFA58();
}

uint64_t sub_248A2DC58()
{
  swift_release();
  sub_2489C08FC();
  return sub_2489C05C0();
}

uint64_t sub_248A2DCA0()
{
  return sub_2489BFA58();
}

uint64_t sub_248A2DCAC()
{
  swift_release();
  sub_2489C08FC();
  return sub_2489C05C0();
}

uint64_t sub_248A2DCF4()
{
  return sub_2489BFA58();
}

uint64_t sub_248A2DD00()
{
  uint64_t v0;

  swift_release();
  sub_2489C33EC();
  sub_2489BBD28();
  return sub_2489C08F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_248A2DD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v3[15] = type metadata accessor for DeviceProfile();
  v3[16] = swift_task_alloc();
  sub_2489C330C(&qword_254464590);
  v3[17] = swift_task_alloc();
  sub_2489C330C(&qword_254464588);
  v3[18] = swift_task_alloc();
  sub_2489C330C(&qword_254464598);
  v3[19] = swift_task_alloc();
  sub_2489C330C(&qword_254464580);
  v3[20] = swift_task_alloc();
  sub_2489C330C(&qword_2544645A0);
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A2DE50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  if (qword_254464E70 != -1)
    swift_once();
  sub_2489C5154();
  sub_2489BD8B0();
  if (HIBYTE(word_254464F60) == 1)
  {
    v1 = *(_QWORD *)(v0 + 96);
    sub_248A45108();
    swift_retain();
    sub_2489BD894();
    if (sub_248A3A500(v1))
    {
      type metadata accessor for CoreTipRecord();
      v2 = sub_2489C330C(&qword_254464118);
      sub_2489C3D04(v2);
      sub_2489BA29C((unint64_t *)&qword_2544646D0, (uint64_t (*)(uint64_t))type metadata accessor for CoreTipRecord, (uint64_t)&protocol conformance descriptor for CoreTipRecord);
      sub_248A450E4();
      sub_2489C3298(*(_QWORD *)(v0 + 168), &qword_2544645A0);
      type metadata accessor for CoreRuleRecord();
      v3 = sub_2489C330C(&qword_254464110);
      sub_2489C3D04(v3);
      sub_2489C59A0((unint64_t *)&qword_2544645B8, v4, (uint64_t)&protocol conformance descriptor for CoreRuleRecord);
      sub_2489C257C();
      sub_2489C3298(*(_QWORD *)(v0 + 160), &qword_254464580);
      type metadata accessor for CoreParameterRecord();
      v5 = sub_2489C330C(&qword_254463B68);
      sub_2489C3D04(v5);
      sub_2489C59A0(&qword_254464678, v6, (uint64_t)&protocol conformance descriptor for CoreParameterRecord);
      sub_2489C257C();
      sub_2489C3298(*(_QWORD *)(v0 + 152), &qword_254464598);
      type metadata accessor for CoreEventRecord();
      v7 = sub_2489C330C(&qword_254463B58);
      sub_2489C3D04(v7);
      sub_2489C59A0(&qword_2544645F8, v8, (uint64_t)&protocol conformance descriptor for CoreEventRecord);
      sub_2489C257C();
      sub_2489C3298(*(_QWORD *)(v0 + 144), &qword_254464588);
      type metadata accessor for CoreDonationRecord();
      v20 = sub_2489C330C(&qword_254463B60);
      sub_2489C3D04(v20);
      sub_2489C59A0(&qword_254464638, v21, (uint64_t)&protocol conformance descriptor for CoreDonationRecord);
      sub_2489C257C();
      sub_2489C3298(*(_QWORD *)(v0 + 136), &qword_254464590);
      if (byte_254464F40 == 1)
      {
        if (qword_2544649A0 != -1)
          swift_once();
        if ((byte_25446499C & 1) == 0)
        {
          if (qword_2544641F8 != -1)
            swift_once();
          v9 = sub_2489C330C(&qword_254464200);
          v10 = sub_2489C401C(v9, (uint64_t)qword_25446C698);
          sub_2489BEE10();
          if (!sub_2489BBD30() && byte_254464F40 == 1 && (byte_25446499C & 1) == 0)
          {
            sub_2489C3298(v10 + *(int *)(*(_QWORD *)(v0 + 120) + 40), &qword_254463FF8);
            v11 = _s12DisplayEventVMa();
            sub_2489C3D04(v11);
            if (qword_254464240 != -1)
              swift_once();
            v12 = sub_2489BEE68();
            sub_2489C401C(v12, (uint64_t)&unk_254464228);
            sub_2489B7284();
          }
          swift_endAccess();
          if (!sub_2489BBD30())
          {
            v13 = *(_QWORD *)(v0 + 128);
            sub_248A15774(v10, v13);
            sub_248A22660();
            sub_248A157B8(v13);
          }
        }
      }
      v14 = qword_2544649A0;
      sub_248A453F0();
      sub_2489BEC8C();
      sub_2489BA7EC();
      sub_2489BD894();
      if (v14 != -1)
        swift_once();
      if (word_254464998 == 3)
      {
        if (qword_254464E68 != -1)
          swift_once();
        v15 = byte_254464E60;
        sub_2489BBC60();
        sub_2489B71DC();
        sub_2489BEC70();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          v16 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
          sub_2489C0C28();
          v17 = (void *)sub_248A454BC();
          objc_msgSend(v16, sel_removeObjectForKey_, v17);

        }
      }
      else
      {
        sub_2489BBC60();
        sub_2489B71DC();
        sub_2489BEC70();
        swift_bridgeObjectRelease();
      }
      if (qword_254464910 != -1)
        swift_once();
      v18 = sub_2489BEE68();
      sub_2489C401C(v18, (uint64_t)&unk_254464980);
      sub_2489B7284();
      sub_2489B6B20();
    }
  }
  swift_task_dealloc();
  sub_2489C33EC();
  sub_2489BBD28();
  sub_2489C08FC();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A2E4B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  type metadata accessor for MiniTipsDatastore();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_248A146E0;
  return sub_248A2E514(a1);
}

uint64_t sub_248A2E514(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  v2 = sub_248A44EB0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_248A2E584()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;

  sub_2489C0C28();
  sub_248A2F1C0();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_248A2F180();

  sub_2489BF6E0();
  sub_248A2F1C0();
  v3 = sub_2489C5F74();
  sub_248A2F180();

  sub_2489BF6E0();
  sub_248A2F160();
  sub_2489C6204();
  sub_2489C62F8();
  v4 = sub_2489C5F74();
  sub_248A2F18C();

  sub_2489BF6E0();
  sub_248A2F160();
  sub_2489C6204();
  sub_2489C62F8();
  v5 = sub_2489C5F74();
  sub_248A2F18C();

  sub_2489BF6E0();
  sub_2489C08FC();
  sub_2489BBD28();
  return sub_2489C08F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_248A2E6DC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_248A0AC34;
  return v5();
}

uint64_t sub_248A2E730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_248A146E0;
  return sub_248A370F8(a2, a3, a4);
}

uint64_t sub_248A2E79C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  if (!a1)
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_248A2E824;
  return sub_248A31524();
}

uint64_t sub_248A2E824()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc();
  return sub_2489C0AD4(*(_QWORD *)(v1 + 16) == 0, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_248A2E86C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_248A2E8C4;
  return v5();
}

uint64_t sub_248A2E8C4(char a1)
{
  uint64_t (**v1)(void);
  _BYTE *v3;

  v3 = (_BYTE *)*((_QWORD *)*v1 + 2);
  sub_2489BFA2C();
  *v3 = a1 & 1;
  return v1[1]();
}

uint64_t MiniTipsDatastore.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_datastoreTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_datastoreTask))
  {
    swift_retain();
    sub_248A457C8();
    sub_2489B6B20();
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_2489C3298(v0 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelConfiguration, &qword_254464560);
  swift_release();
  swift_release();
  return v0;
}

uint64_t MiniTipsDatastore.__deallocating_deinit()
{
  MiniTipsDatastore.deinit();
  return swift_deallocClassInstance();
}

void sub_248A2EA00(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  MiniTipsDatastore.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_248A2EA28()
{
  return MiniTipsDatastore.description.getter();
}

uint64_t sub_248A2EA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for MiniTipsDatastore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MiniTipsDatastore.__allocating_init(id:bundleID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_248A2EAA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254464D70)
  {
    sub_248A45270();
    v0 = sub_248A45924();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254464D70);
  }
}

uint64_t sub_248A2EAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2489BFEDC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_248A2EBC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v3 = *(_QWORD *)(sub_2489BFEDC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1[3];
  v14 = v1[2];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = (uint64_t)v1 + v4;
  v11 = swift_task_alloc();
  v12 = (_QWORD *)sub_2489C5EBC(v11);
  *v12 = v2;
  v12[1] = sub_2489F7CC4;
  return sub_248A2D808(a1, v14, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_248A2ECA8(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  unsigned __int8 v20;
  uint64_t v21;

  v14 = sub_2489C330C(&qword_254464DD8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248A2EE08(a1, (uint64_t)v17, &qword_254464DD8);
  v18 = sub_248A45780();
  if (sub_2489BE834((uint64_t)v17, 1, v18) == 1)
  {
    sub_2489C3298((uint64_t)v17, &qword_254464DD8);
    result = 0;
    if ((a2 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v20 = sub_248A45774();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    result = v20;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if ((a3 & 1) != 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if ((a3 & 1) != 0)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if ((a5 & 1) != 0)
LABEL_6:
    result |= 0x1000uLL;
LABEL_7:
  if ((a6 & 1) != 0)
    result |= 0x2000uLL;
  if ((a7 & 1) != 0)
    return result | 0x4000;
  return result;
}

uint64_t sub_248A2EDE8()
{
  sub_248A2F178();
  return swift_deallocObject();
}

void sub_248A2EE08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_2489C330C(a3);
  v3 = sub_2489C5154();
  v4(v3);
  sub_2489BA7D0();
}

uint64_t sub_248A2EE44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2489BFEDC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_248A2EEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_2489BFEDC() - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_248A146E0;
  return sub_248A2E4B8(v3);
}

uint64_t sub_248A2EF00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_248A2F1AC();
  v0 = sub_2489BEEF8();
  v1 = (_QWORD *)sub_2489C5EBC(v0);
  v2 = sub_2489BFF14(v1);
  return sub_2489C0238(v2, v3, v4, v5);
}

uint64_t sub_248A2EF40()
{
  swift_release();
  sub_248A2F178();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_248A2EF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_248A2F198(v4, (uint64_t)sub_248A146E0);
  return sub_248A2E730(v5, v6, v3, v2);
}

uint64_t sub_248A2EFC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_248A2F1AC();
  v0 = sub_2489BEEF8();
  v1 = (_QWORD *)sub_2489C5EBC(v0);
  v2 = sub_2489BFF14(v1);
  return sub_2489C0238(v2, v3, v4, v5);
}

uint64_t sub_248A2F008()
{
  swift_release();
  sub_248A2F178();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_248A2F038()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_248A2F198(v1, (uint64_t)sub_248A2F08C);
  return sub_248A2E79C(v2);
}

uint64_t sub_248A2F08C(uint64_t a1)
{
  uint64_t v1;

  sub_2489C0080();
  return sub_2489C0AD4(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_248A2F0B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_248A2F1AC();
  v0 = sub_2489BEEF8();
  v1 = (_QWORD *)sub_2489C5EBC(v0);
  v2 = sub_2489BFF14(v1);
  return sub_2489C0238(v2, v3, v4, v5);
}

void sub_248A2F0F8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_248A2CC20(a1, *a2, a2[1], a3);
}

uint64_t sub_248A2F118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2489C330C(&qword_254464D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248A2F160()
{
  return sub_248A44E44();
}

uint64_t sub_248A2F178()
{
  return swift_release();
}

void sub_248A2F180()
{
  sub_248A299EC();
}

void sub_248A2F18C()
{
  sub_2489B9114();
}

uint64_t sub_248A2F198@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_248A2F1B8()
{
  return sub_248A45270();
}

uint64_t sub_248A2F1C0()
{
  return sub_248A44E38();
}

void sub_248A2F1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248A2F204(a1, a2, a3, &qword_254464D50, &qword_254464D80, &qword_254462EA8);
}

void sub_248A2F1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_248A2F204(a1, a2, a3, &qword_254464AA0, &qword_2544637A0, &qword_254463FD8);
}

void sub_248A2F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  _BYTE v11[16];

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_2489C3298(a1, a6);
    sub_248A34EC8(a2, a3, a5, a4, (uint64_t)v11);
    sub_2489BDA70();
    sub_2489C3298((uint64_t)v11, a6);
  }
  else
  {
    sub_2489C625C(a1, (uint64_t)v11, a4);
    sub_248A35548();
    sub_2489BDA70();
  }
  sub_2489BA868();
}

void sub_248A2F29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_248A452AC();
  sub_248A36644();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489BA838();
  if (sub_2489BE834(a1, 1, v12) == 1)
  {
    sub_2489C3298(a1, &qword_254464970);
    v15 = sub_248A3673C();
    sub_248A34FF4(v15, v16, v17);
    sub_2489BDA70();
    sub_2489C3298((uint64_t)v11, &qword_254464970);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, a1, v12);
    sub_248A355D8(v3, a2, a3);
    sub_2489BDA70();
  }
}

void sub_248A2F3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD v8[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_2489C3288((_OWORD *)a1, v8);
    sub_248A35654(v8, a2, a3);
    sub_2489BDA70();
  }
  else
  {
    sub_2489C3298(a1, &qword_2544643E0);
    v5 = sub_248A3673C();
    sub_248A3513C(v5, v6, v7);
    sub_2489BDA70();
    sub_2489C3298((uint64_t)v8, &qword_2544643E0);
  }
}

uint64_t sub_248A2F424(__int16 a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v4;
  __int16 v5;

  v5 = a1;
  sub_248A3661C();
  sub_248A35F3C(v1, &v4, &v5);
  os_unfair_lock_unlock(v2);
  return sub_248A365C4();
}

uint64_t sub_248A2F468(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v4;
  char v5;

  v5 = a1;
  sub_248A3661C();
  sub_248A35F60(v1, &v4, &v5);
  os_unfair_lock_unlock(v2);
  return sub_248A365C4();
}

void sub_248A2F4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8[2];

  v8[0] = a2;
  v8[1] = a3;
  v5 = *(os_unfair_lock_s **)(v3 + 16);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_248A1D940(v6, v8, a1);
  os_unfair_lock_unlock(v7);
  swift_bridgeObjectRelease();
  sub_2489C3298(a1, &qword_254464970);
}

uint64_t sub_248A2F524(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  __int16 v8;

  if (a4 == 4)
  {
    sub_248A453F0();
    sub_248A35264(a2, a3, &v8);
  }
  else
  {
    sub_248A453F0();
    sub_248A356D0(a4, a2, a3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_248A2F5AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v8;

  if (a4 == 3)
  {
    sub_248A453F0();
    sub_248A3534C(a2, a3, &v8);
  }
  else
  {
    sub_248A453F0();
    sub_248A3574C(a4, a2, a3);
  }
  return swift_bridgeObjectRelease();
}

void sub_248A2F634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_2489BECFC();
  sub_248A36664(v4, v5, v6, v7);
  sub_2489C330C(&qword_254463B58);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489B6B34();
  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C0904();
  sub_2489B6B9C();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489BF8D4();
  v14 = sub_2489C19C8(v2);
  if (v15)
  {
    sub_248A36918(v14, &qword_254464970);
  }
  else
  {
    sub_248A364D4();
    type metadata accessor for CoreEventRecord();
    sub_248A36508(&qword_2544645F8, v16, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
    if (sub_248A365E0())
    {
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
    else
    {
      sub_248A367B8(0, v18, v19, v20, v21, v22, v23, v24, v27);
      MEMORY[0x24BDAC7A8](v25, v26);
      sub_248A36510();
      sub_2489C05D0();
      sub_248A366A0();
      if (v0)
        sub_248A13278();
      sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
  }
  sub_2489B71E4();
}

void sub_248A2F794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  sub_2489BECFC();
  sub_248A364E8(v4, v5, v6, v7);
  sub_2489C330C(&qword_254463B58);
  sub_2489B6B9C();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489B6B34();
  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C0760();
  sub_248A36644();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489BF6EC();
  v14 = sub_2489C19C8(v3);
  if (v15)
  {
    sub_248A36920(v14, &qword_254464970);
  }
  else
  {
    sub_2489C9490();
    sub_248A36508(&qword_2544645F8, v16, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
    if (sub_248A365F0())
    {
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
    else
    {
      MEMORY[0x24BDAC7A8](0, v18);
      sub_248A36528();
      sub_2489C05D0();
      sub_248A366A0();
      if (v0)
        sub_248A13278();
      sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
  }
  sub_2489B71E4();
}

void sub_248A2F8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_2489BECFC();
  sub_248A36664(v4, v5, v6, v7);
  sub_2489C330C(&qword_254463B68);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489B6B34();
  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C0904();
  sub_2489B6B9C();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489BF8D4();
  v14 = sub_2489C19C8(v2);
  if (v15)
  {
    sub_248A36918(v14, &qword_254464970);
  }
  else
  {
    sub_248A364D4();
    type metadata accessor for CoreParameterRecord();
    sub_248A36508(&qword_254464678, v16, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
    if (sub_248A365E0())
    {
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
    else
    {
      sub_248A367B8(0, v18, v19, v20, v21, v22, v23, v24, v27);
      MEMORY[0x24BDAC7A8](v25, v26);
      sub_248A36510();
      sub_2489C05D0();
      sub_248A36678();
      if (v0)
        sub_248A13278();
      sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
  }
  sub_2489B71E4();
}

void sub_248A2FA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  sub_2489BECFC();
  sub_248A364E8(v4, v5, v6, v7);
  sub_2489C330C(&qword_254463B68);
  sub_2489B6B9C();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489B6B34();
  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C0760();
  sub_248A36644();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489BF6EC();
  v14 = sub_2489C19C8(v3);
  if (v15)
  {
    sub_248A36920(v14, &qword_254464970);
  }
  else
  {
    sub_2489C9490();
    sub_248A36508(&qword_254464678, v16, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
    if (sub_248A365F0())
    {
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
    else
    {
      MEMORY[0x24BDAC7A8](0, v18);
      sub_248A36528();
      sub_2489C05D0();
      sub_248A36678();
      if (v0)
        sub_248A13278();
      sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
  }
  sub_2489B71E4();
}

void sub_248A2FB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  sub_2489BECFC();
  sub_248A364E8(v4, v5, v6, v7);
  sub_2489C330C(&qword_254464118);
  sub_2489B6B9C();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489B6B34();
  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C0760();
  sub_248A36644();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489BF6EC();
  v14 = sub_2489C19C8(v3);
  if (v15)
  {
    sub_248A36920(v14, &qword_254464970);
  }
  else
  {
    sub_2489C9490();
    sub_248A36508(&qword_2544646D0, v16, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
    if (sub_248A365F0())
    {
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
    else
    {
      MEMORY[0x24BDAC7A8](0, v18);
      sub_248A36528();
      sub_2489C05D0();
      sub_248A3668C();
      if (v0)
        sub_248A13278();
      sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
  }
  sub_2489B71E4();
}

void sub_248A2FCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_2489BECFC();
  sub_248A36664(v4, v5, v6, v7);
  sub_2489C330C(&qword_254464118);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489B6B34();
  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_2489C0904();
  sub_2489B6B9C();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_2489BF8D4();
  v14 = sub_2489C19C8(v2);
  if (v15)
  {
    sub_248A36918(v14, &qword_254464970);
  }
  else
  {
    sub_248A364D4();
    type metadata accessor for CoreTipRecord();
    sub_248A36508(&qword_2544646D0, v16, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
    if (sub_248A365E0())
    {
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
    else
    {
      sub_248A367B8(0, v18, v19, v20, v21, v22, v23, v24, v27);
      MEMORY[0x24BDAC7A8](v25, v26);
      sub_248A36510();
      sub_2489C05D0();
      sub_248A3668C();
      if (v0)
        sub_248A13278();
      sub_2489C0174(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      sub_2489C3D18(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
  }
  sub_2489B71E4();
}

uint64_t sub_248A2FE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD v25[4];

  v25[1] = a4;
  v5 = sub_2489C330C(&qword_254463B60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2489C330C(&qword_254464970);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_248A452AC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248A1D7C4(a1, (uint64_t)v13);
  if (sub_2489BE834((uint64_t)v13, 1, v14) == 1)
  {
    sub_2489C3298((uint64_t)v13, &qword_254464970);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v19 = type metadata accessor for CoreDonationRecord();
  sub_248A36454(&qword_254464638, 255, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  v20 = sub_248A45060();
  if (v20)
  {
    v22 = v20;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    v25[0] = v25;
    MEMORY[0x24BDAC7A8](0, v21);
    v25[-2] = v18;
    v25[3] = v19;
    sub_248A44FAC();
    sub_2489F2128();
    v22 = v24;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (!v22)
      return 0;
  }
  return v22;
}

void sub_248A300C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_2489BED74();
  sub_2489C4FC4(v6, v7, v8, v9, v10, v11, v12, v13);
  sub_2489C330C(&qword_254464590);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489BA838();
  sub_2489C330C(&qword_254463C08);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489C6148();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_248A368A0();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_248A3688C();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_2489C5950();
  MEMORY[0x24BDAC7A8](v24, v25);
  v44 = (uint64_t)&v43 - v26;
  sub_2489C0634();
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  sub_248A368F8(v29, v30, v31, v32, v33, v34, v35, v36, v43);
  v37 = sub_2489C330C(&qword_254463B60);
  sub_248A36580(v37);
  sub_2489BE7E0(v3, 0, 1, v0);
  v38 = sub_2489ECAB4();
  sub_248A36508(&qword_254464638, v39, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  v41 = v40;
  sub_248A36700();
  v56 = v38;
  v57 = v41;
  swift_getKeyPath();
  sub_2489BDAB8();
  sub_2489C6210(v2, v4);
  sub_248A36734();
  v54 = v38;
  v55 = v41;
  swift_getKeyPath();
  sub_2489BBD40();
  sub_2489C6210(v1, v2);
  sub_248A36734();
  v52 = v38;
  v53 = v41;
  swift_getKeyPath();
  sub_248A365A8();
  sub_2489C6210(v5, v1);
  swift_release();
  v50 = v38;
  v51 = v41;
  swift_getKeyPath();
  sub_248A36788(v46);
  sub_248A36790();
  v42 = v44;
  sub_2489C6210(v44, v5);
  sub_2489BA4B8();
  v48 = v38;
  v49 = v41;
  swift_getKeyPath();
  sub_248A36788(v47);
  sub_248A36790();
  sub_2489C6210(v45, v42);
  sub_2489BA4B8();
  sub_248A366D0();
  sub_248A36600();
  sub_248A36798();
  sub_2489BA808();
}

void sub_248A302F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_2489BED74();
  sub_2489C4FC4(v6, v7, v8, v9, v10, v11, v12, v13);
  sub_2489C330C(&qword_2544645A0);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_2489BA838();
  sub_2489C330C(&qword_254464250);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_2489C6148();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_248A368A0();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_248A3688C();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_2489C5950();
  MEMORY[0x24BDAC7A8](v24, v25);
  v44 = (uint64_t)&v43 - v26;
  sub_2489C0634();
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  sub_248A368F8(v29, v30, v31, v32, v33, v34, v35, v36, v43);
  v37 = sub_2489C330C(&qword_254464118);
  sub_248A36580(v37);
  sub_2489BE7E0(v3, 0, 1, v0);
  v38 = type metadata accessor for CoreTipRecord();
  sub_248A36508(&qword_2544646D0, v39, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  v41 = v40;
  sub_248A36700();
  v56 = v38;
  v57 = v41;
  swift_getKeyPath();
  sub_2489BDAB8();
  sub_2489C6210(v2, v4);
  sub_248A36734();
  v54 = v38;
  v55 = v41;
  swift_getKeyPath();
  sub_2489BBD40();
  sub_2489C6210(v1, v2);
  sub_248A36734();
  v52 = v38;
  v53 = v41;
  swift_getKeyPath();
  sub_248A365A8();
  sub_2489C6210(v5, v1);
  swift_release();
  v50 = v38;
  v51 = v41;
  swift_getKeyPath();
  sub_248A36788(v46);
  sub_248A36790();
  v42 = v44;
  sub_2489C6210(v44, v5);
  sub_2489BA4B8();
  v48 = v38;
  v49 = v41;
  swift_getKeyPath();
  sub_248A36788(v47);
  sub_248A36790();
  sub_2489C6210(v45, v42);
  sub_2489BA4B8();
  sub_248A366D0();
  sub_248A36600();
  sub_248A36798();
  sub_2489BA808();
}

uint64_t sub_248A30530(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char *v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v51 = a7;
  v52 = a8;
  v50 = a6;
  v47 = a5;
  v46 = a4;
  v45 = a2;
  v53 = a1;
  v10 = sub_2489C330C(&qword_254464598);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2489C330C(&qword_254463C10);
  v66 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v45 - v21;
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v45 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)&v45 - v29;
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v48 = (char *)&v45 - v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v49 = (char *)&v45 - v35;
  v36 = sub_2489C330C(&qword_254463B68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v13, a9, v36);
  sub_2489BE7E0((uint64_t)v13, 0, 1, v36);
  v37 = type metadata accessor for CoreParameterRecord();
  sub_248A36454(&qword_254464678, 255, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  v39 = v38;
  sub_248A45168();
  v62 = v37;
  v63 = v39;
  swift_getKeyPath();
  v64 = v45;
  v65 = a3 & 1;
  swift_setAtWritableKeyPath();
  v40 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  v40(v22, v18, v14);
  swift_release();
  v60 = v37;
  v61 = v39;
  swift_getKeyPath();
  v64 = v46;
  v65 = v47 & 1;
  swift_setAtWritableKeyPath();
  v40(v26, v22, v14);
  swift_release();
  v58 = v37;
  v59 = v39;
  swift_getKeyPath();
  LOBYTE(v64) = v50;
  swift_setAtWritableKeyPath();
  v40(v30, v26, v14);
  swift_release();
  v56 = v37;
  v57 = v39;
  swift_getKeyPath();
  v64 = v51;
  sub_248A453F0();
  swift_setAtWritableKeyPath();
  v41 = v48;
  v40(v48, v30, v14);
  swift_release();
  v54 = v37;
  v55 = v39;
  swift_getKeyPath();
  v64 = v52;
  sub_248A453F0();
  swift_setAtWritableKeyPath();
  v42 = v49;
  v40(v49, v41, v14);
  swift_release();
  v43 = sub_248A450C0();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v14);
  return v43;
}

uint64_t sub_248A30904(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char *v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v51 = a7;
  v52 = a8;
  v50 = a6;
  v47 = a5;
  v46 = a4;
  v45 = a2;
  v53 = a1;
  v10 = sub_2489C330C(&qword_254464588);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2489C330C(&qword_254463C00);
  v66 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v45 - v21;
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v45 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)&v45 - v29;
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v48 = (char *)&v45 - v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v49 = (char *)&v45 - v35;
  v36 = sub_2489C330C(&qword_254463B58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v13, a9, v36);
  sub_2489BE7E0((uint64_t)v13, 0, 1, v36);
  v37 = type metadata accessor for CoreEventRecord();
  sub_248A36454(&qword_2544645F8, 255, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  v39 = v38;
  sub_248A45168();
  v62 = v37;
  v63 = v39;
  swift_getKeyPath();
  v64 = v45;
  v65 = a3 & 1;
  swift_setAtWritableKeyPath();
  v40 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  v40(v22, v18, v14);
  swift_release();
  v60 = v37;
  v61 = v39;
  swift_getKeyPath();
  v64 = v46;
  v65 = v47 & 1;
  swift_setAtWritableKeyPath();
  v40(v26, v22, v14);
  swift_release();
  v58 = v37;
  v59 = v39;
  swift_getKeyPath();
  LOBYTE(v64) = v50;
  swift_setAtWritableKeyPath();
  v40(v30, v26, v14);
  swift_release();
  v56 = v37;
  v57 = v39;
  swift_getKeyPath();
  v64 = v51;
  sub_248A453F0();
  swift_setAtWritableKeyPath();
  v41 = v48;
  v40(v48, v30, v14);
  swift_release();
  v54 = v37;
  v55 = v39;
  swift_getKeyPath();
  v64 = v52;
  sub_248A453F0();
  swift_setAtWritableKeyPath();
  v42 = v49;
  v40(v49, v41, v14);
  swift_release();
  v43 = sub_248A450C0();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v14);
  return v43;
}

void sub_248A30CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  sub_2489BED74();
  v1 = v0;
  sub_2489C330C(&qword_254464590);
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2489C330C(&qword_254463C08);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)v20 - v13;
  v15 = sub_2489C330C(&qword_254463B60);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v1, v15);
  sub_2489BE7E0((uint64_t)v5, 0, 1, v15);
  v16 = sub_2489ECAB4();
  sub_248A36508(&qword_254464638, v17, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  v19 = v18;
  sub_248A45168();
  v20[2] = v16;
  v20[3] = v19;
  swift_getKeyPath();
  swift_setAtWritableKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v11, v6);
  swift_release();
  sub_248A4506C();
  sub_248A366B4((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_248A36798();
  sub_2489BA808();
}

uint64_t sub_248A30E84(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[4];
  char v25;

  v5 = sub_2489C330C(&qword_2544645A0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2489C330C(&qword_254464250);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)v24 - v16;
  v18 = sub_2489C330C(&qword_254464118);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, a3, v18);
  sub_2489BE7E0((uint64_t)v8, 0, 1, v18);
  v19 = type metadata accessor for CoreTipRecord();
  sub_248A36454(&qword_2544646D0, 255, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  v21 = v20;
  sub_248A45168();
  v24[2] = v19;
  v24[3] = v21;
  swift_getKeyPath();
  v25 = a2;
  swift_setAtWritableKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v14, v9);
  swift_release();
  v22 = sub_248A4506C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  return v22;
}

uint64_t sub_248A31068(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[4];
  char v25;

  v5 = sub_2489C330C(&qword_254464598);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2489C330C(&qword_254463C10);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)v24 - v16;
  v18 = sub_2489C330C(&qword_254463B68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, a3, v18);
  sub_2489BE7E0((uint64_t)v8, 0, 1, v18);
  v19 = type metadata accessor for CoreParameterRecord();
  sub_248A36454(&qword_254464678, 255, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  v21 = v20;
  sub_248A45168();
  v24[2] = v19;
  v24[3] = v21;
  swift_getKeyPath();
  v25 = a2;
  swift_setAtWritableKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v14, v9);
  swift_release();
  v22 = sub_248A4506C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  return v22;
}

uint64_t sub_248A3124C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[4];
  char v25;

  v5 = sub_2489C330C(&qword_254464588);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2489C330C(&qword_254463C00);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)v24 - v16;
  v18 = sub_2489C330C(&qword_254463B58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, a3, v18);
  sub_2489BE7E0((uint64_t)v8, 0, 1, v18);
  v19 = type metadata accessor for CoreEventRecord();
  sub_248A36454(&qword_2544645F8, 255, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  v21 = v20;
  sub_248A45168();
  v24[2] = v19;
  v24[3] = v21;
  swift_getKeyPath();
  v25 = a2;
  swift_setAtWritableKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v14, v9);
  swift_release();
  v22 = sub_248A4506C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  return v22;
}

uint64_t sub_248A31430()
{
  return sub_248A3145C(&qword_2544645B8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

uint64_t sub_248A3145C(_QWORD *a1, void (*a2)(uint64_t))
{
  _QWORD *v3;

  sub_248A36508(a1, (uint64_t)a2, a2);
  if (sub_248A45198())
  {
    if ((sub_248A45228() & 1) == 0)
      sub_248A450F0();
    return sub_2489BA4B8();
  }
  else
  {
    sub_2489C9824();
    swift_allocError();
    *v3 = 0xD00000000000002DLL;
    v3[1] = 0x8000000248A51D90;
    return swift_willThrow();
  }
}

uint64_t sub_248A31524()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 48) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_248A31580;
  v3 = sub_248A3673C();
  return sub_248A316DC(v3, v4);
}

uint64_t sub_248A31580()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return sub_2489C1540();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_248A315E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  if (qword_254464240 != -1)
    swift_once();
  v1 = *(void **)(v0 + 64);
  v2 = type metadata accessor for logger();
  sub_2489C401C(v2, (uint64_t)&unk_254464228);
  sub_248A45A74();
  sub_2489C0C28();
  sub_248A4557C();
  swift_getErrorValue();
  sub_248A45D8C();
  sub_2489BE9AC();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A316DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  v4 = sub_248A36884();
  v3[16] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[17] = v5;
  v3[18] = *(_QWORD *)(v5 + 64);
  v3[19] = sub_248A36778();
  v3[20] = swift_task_alloc();
  sub_2489C330C(&qword_254464540);
  v3[21] = sub_248A36778();
  v3[22] = swift_task_alloc();
  return sub_2489C1540();
}

uint64_t sub_248A31764()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[15];
  sub_248A45108();
  v0[23] = *(_QWORD *)(v1 + 112);
  v0[24] = *(_QWORD *)(v1 + 120);
  swift_retain();
  sub_248A453F0();
  v0[25] = sub_248A3A52C();
  sub_248A39F38(v0 + 7);
  v2 = v0[10];
  v3 = sub_2489BE100(v0 + 7, v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v4 + 16))(v5, v3, v2);
  v0[5] = swift_getAssociatedTypeWitness();
  sub_248A36838();
  v0[6] = swift_getAssociatedConformanceWitness();
  sub_2489BE690(v0 + 2);
  sub_248A457E0();
  swift_task_dealloc();
  sub_2489BCE44((uint64_t)(v0 + 7));
  sub_248A36454(&qword_254464538, v6, (void (*)(uint64_t))_s16ContainerMonitorCMa);
  v0[26] = v7;
  sub_2489D08D4((uint64_t)(v0 + 2), v0[5]);
  v8 = (_QWORD *)swift_task_alloc();
  v0[27] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_248A3192C;
  return sub_248A45750();
}

uint64_t sub_248A3192C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return sub_2489C1540();
}

void sub_248A3197C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;
  unint64_t i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, unint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  if (!v0[12])
  {
    swift_release();
    sub_2489BCE44((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2489C077C();
LABEL_5:
    sub_2489BFCAC();
    __asm { BR              X0 }
  }
  v1 = v0[28];
  v0[29] = sub_248A3A59C(v0[12], v0[23], v0[24]);
  if (v1)
  {
    sub_2489BBC60();
    swift_release();
    sub_2489BCE44((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2489C077C();
    swift_task_dealloc();
    goto LABEL_5;
  }
  sub_2489BBC60();
  v3 = 0;
  for (i = 0; ; ++i)
  {
    v0[31] = v3;
    v0[32] = i;
    v0[30] = 0;
    if (v3)
    {
      if (*(_QWORD *)(v3 + 16))
      {
        v10 = v0[21];
        v9 = v0[22];
        v12 = v0[16];
        v11 = v0[17];
        v13 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16);
        v13(v10, v3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v12);
        sub_2489BE7E0(v10, 0, 1, v12);
        sub_2489C625C(v10, v9, &qword_254464540);
        if (sub_2489BE834(v9, 1, v12) != 1)
        {
          v15 = v0[19];
          v16 = v0[20];
          v17 = v0[16];
          v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[17] + 32);
          v18(v16, v0[22], v17);
          sub_2489BFC3C();
          sub_248A36768();
          v13(v15, v16, v17);
          v19 = swift_allocObject();
          v20 = sub_248A366E4(v19);
          ((void (*)(uint64_t))v18)(v20);
          v21 = (_QWORD *)swift_task_alloc();
          v0[34] = (uint64_t)v21;
          *v21 = v0;
          v21[1] = sub_248A31C98;
          sub_2489BFCAC();
          __asm { BR              X2 }
        }
        goto LABEL_15;
      }
      v5 = v0[21];
      sub_2489BE7E0(v5, 1, 1, v0[16]);
      sub_2489C3298(v5, &qword_254464540);
    }
    v6 = v0[29];
    v7 = *(_QWORD *)(v6 + 16);
    if (i == v7)
    {
      sub_248A366BC();
LABEL_15:
      swift_bridgeObjectRelease();
      sub_2489BA820();
      sub_248A450CC();
      sub_248A36714();
      v14 = (_QWORD *)swift_task_alloc();
      v0[27] = (uint64_t)v14;
      *v14 = v0;
      v14[1] = sub_248A3192C;
      sub_248A367F0();
      sub_2489BFCAC();
      sub_248A45750();
      return;
    }
    if (i >= v7)
      break;
    v8 = *(_QWORD *)(v6 + 8 * i + 32);
    sub_248A453F0();
    sub_2489BA820();
    v3 = v8;
  }
  __break(1u);
}

uint64_t sub_248A31C98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    sub_2489BDA70();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

void sub_248A31D30()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t i;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, unint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, uint64_t);

  (*(void (**)(_QWORD, _QWORD))(v0[17] + 8))(v0[20], v0[16]);
  v2 = v0[31];
  v1 = v0[32];
  for (i = v0[30] + 1; ; i = 0)
  {
    v0[31] = v2;
    v0[32] = v1;
    v0[30] = i;
    if (!v2)
      goto LABEL_5;
    v4 = *(_QWORD *)(v2 + 16);
    if (i != v4)
      break;
    sub_2489BE7E0(v0[21], 1, 1, v0[16]);
    v5 = sub_248A3673C();
    sub_2489C3298(v5, v6);
LABEL_5:
    v7 = v0[29];
    v8 = *(_QWORD *)(v7 + 16);
    if (v1 == v8)
    {
      sub_248A366BC();
LABEL_12:
      swift_bridgeObjectRelease();
      sub_2489BBC60();
      sub_248A450CC();
      sub_248A36714();
      v19 = (_QWORD *)swift_task_alloc();
      v0[27] = v19;
      *v19 = v0;
      v19[1] = sub_248A3192C;
      sub_248A367F0();
      sub_248A45750();
      return;
    }
    if (v1 >= v8)
    {
      __break(1u);
      goto LABEL_14;
    }
    v9 = *(_QWORD *)(v7 + 8 * v1 + 32);
    sub_248A453F0();
    sub_2489BBC60();
    v2 = v9;
    ++v1;
  }
  if (i < v4)
  {
    v11 = v0[21];
    v10 = v0[22];
    v13 = v0[16];
    v12 = v0[17];
    v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
    v14(v11, v2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * i, v13);
    sub_2489BE7E0(v11, 0, 1, v13);
    v15 = sub_248A3673C();
    sub_2489C625C(v15, v16, v17);
    sub_2489C19C8(v10);
    if (!v18)
    {
      v20 = v0[19];
      v21 = v0[20];
      v23 = v0[15];
      v22 = v0[16];
      v24 = *(void (**)(_QWORD))(v0[17] + 32);
      ((void (*)(unint64_t, _QWORD, uint64_t))v24)(v21, v0[22], v22);
      sub_2489BFC3C();
      sub_248A36768();
      v14(v20, v21, v22);
      v25 = swift_allocObject();
      v26 = sub_248A366E4(v25);
      v24(v26);
      v28 = (void (*)(uint64_t, uint64_t))((char *)&dword_2577A5278 + dword_2577A5278);
      v27 = (_QWORD *)swift_task_alloc();
      v0[34] = v27;
      *v27 = v0;
      v27[1] = sub_248A31C98;
      v28((uint64_t)&unk_2577A5838, v23);
      return;
    }
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_248A31FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_2489BCE44(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2489C077C();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A32048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_248A32064()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 64);
    v3 = sub_248A452DC();
    sub_248A32124(v2, v3);
    swift_bridgeObjectRelease();
    swift_release();
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248A32124(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v5 = *(_QWORD *)(sub_248A45120() - 8);
    v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    sub_2489BEC8C();
    while (1)
    {
      sub_248A322A8();
      if (v2)
        return sub_2489B71DC();
      v6 += v7;
      if (!--v3)
      {
        sub_2489B71DC();
        goto LABEL_6;
      }
    }
  }
  else
  {
LABEL_6:
    if ((sub_248A45078() & 1) != 0)
    {
      sub_248A450B4();
      if (v2)
      {
        if (qword_254464240 != -1)
          swift_once();
        v8 = sub_2489BEE68();
        sub_2489C401C(v8, (uint64_t)&unk_254464228);
        sub_248A45A74();
        sub_2489C0C28();
        sub_2489C5160();
        swift_getErrorValue();
        sub_248A45D8C();
        sub_248A36830();
        sub_2489B71DC();

      }
    }
    type metadata accessor for CoreTip();
    return sub_248A151C0();
  }
}

void sub_248A322A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_2489BED74();
  v63 = v2;
  v4 = v3;
  v6 = v5;
  v53 = sub_2489C330C(&qword_254463758);
  v49 = *(_QWORD *)(v53 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_2489BFA18();
  v48 = v9;
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_248A368EC();
  v52 = v12;
  v57 = sub_2489C330C(&qword_254463788);
  v51 = *(_QWORD *)(v57 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_2489BFA18();
  v50 = v15;
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_248A368EC();
  v56 = v18;
  v60 = sub_2489C330C(&qword_254463790);
  v55 = *(_QWORD *)(v60 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_2489BFA18();
  v54 = v21;
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_248A368EC();
  v59 = v24;
  v65 = sub_2489C330C(&qword_254463798);
  v58 = *(_QWORD *)(v65 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_2489BFBBC(v27, v48);
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_248A368EC();
  v64 = v30;
  v31 = sub_248A45120();
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_2489BFA18();
  v66 = v34;
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&v48 - v37;
  sub_248A452D0();
  if (v39)
  {
    v61 = v6;
    v62 = v0;
    if (qword_254464910 != -1)
      swift_once();
    v40 = sub_2489BEE68();
    sub_2489BD958(v40, (uint64_t)&unk_254464980);
    sub_248A45A74();
    sub_248A368E0();
    sub_2489C0C28();
    sub_2489C5160();
    sub_248A29B58();
    sub_248A4557C();
    swift_bridgeObjectRelease();
    sub_248A368D4();
    sub_248A4557C();
    sub_248A368B4();
    sub_248A452B8();
    sub_248A4557C();
    sub_2489BBC60();
    sub_248A4557C();
    sub_2489BE9AC();
    swift_bridgeObjectRelease();
    sub_2489BBC60();
  }
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v41(v38, v4, v31);
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v38, v31) == *MEMORY[0x24BDEA898])
  {
    v41((char *)v66, (uint64_t)v38, v31);
    sub_248A366B4(v66, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    sub_2489C330C(&qword_254462E48);
    if (sub_2489BA550())
    {
      sub_248A364C0();
      sub_248A36634();
      sub_248A3268C();
    }
    else if (sub_2489BA550())
    {
      sub_248A364C0();
      sub_248A36634();
      sub_248A32DFC();
    }
    else
    {
      if (!sub_2489BA550())
      {
        v44 = v52;
        v45 = v53;
        if (swift_dynamicCast())
        {
          v47 = v48;
          v46 = v49;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v48, v44, v45);
          sub_248A36634();
          sub_248A33CBC();
          (*(void (**)(uint64_t))(v46 + 8))(v47);
        }
        goto LABEL_13;
      }
      sub_248A364C0();
      sub_248A36634();
      sub_248A33538();
    }
    v42 = sub_248A36838();
    v43(v42);
LABEL_13:
    sub_2489BCE44(v66);
  }
  sub_248A366B4((uint64_t)v38, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_2489BA808();
}

void sub_248A3268C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v53;
  void (*v54)(uint64_t);
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  sub_2489BED74();
  v63 = v1;
  v5 = v4;
  v6 = sub_2489C330C(&qword_254464028);
  v7 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  v61 = v7;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v8, v9);
  v59 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_2489C330C(&qword_254464118);
  sub_248A36724();
  MEMORY[0x24BDAC7A8](v11, v12);
  v58 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v55 - v16;
  sub_248A3687C();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_2489C6148();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_248A367C8();
  sub_2489C330C(&qword_254463798);
  sub_248A36758();
  v22 = sub_2489C03E4();
  sub_2489C6304(v22);
  sub_248A2FCF0();
  sub_248A36570();
  if (v0)
  {
    v23 = CoreTipRecord.id.getter();
    v25 = v24;
    v26 = sub_2489BF7F0();
    MEMORY[0x24BDAC7A8](v26, v27);
    sub_248A367D8();
    v28 = type metadata accessor for CoreTipRecord();
    sub_248A36810(v28);
    sub_248A36500();
    v29 = v63;
    v30 = sub_248A30E84(v5, 0, (uint64_t)v17);
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v17, v62);
LABEL_11:
      sub_2489B71DC();
      goto LABEL_12;
    }
    v56 = v23;
    v57 = v30;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v17, v62);
    if (v57 < 2)
      goto LABEL_11;
    if (qword_254464530 != -1)
      swift_once();
    swift_retain();
    v32 = v56;
    v55[2] = v5;
    sub_248A1CF14();
    v33 = v61;
    sub_2489BEC8C();
    sub_248A3690C(v3, v32);
    sub_2489BA87C();
    KeyPath = swift_getKeyPath();
    v63 = 0;
    v35 = KeyPath;
    sub_248A36508(&qword_2544640F0, v36, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v37 = (uint64_t)v59;
    v38 = sub_248A365D4();
    v55[1] = v55;
    MEMORY[0x24BDAC7A8](v38, v39);
    sub_248A36654();
    *(_QWORD *)(v40 - 16) = v32;
    *(_QWORD *)(v40 - 8) = v25;
    v41 = (uint64_t)v58;
    sub_248A36500();
    sub_2489C330C(&qword_2544643A8);
    v42 = sub_2489B7290();
    *(_OWORD *)(v42 + 16) = xmmword_248A47480;
    (*(void (**)(uint64_t, uint64_t))(v33 + 16))(v42 + v35, v37);
    sub_248A368C8();
    sub_2489BDA10();
    v43 = v63;
    sub_248A34290(v44, v45, v46, v47, v48, v49, v50, v41, v52, v53, v54);
    if (v43)
    {
      sub_2489B71DC();
      sub_2489BBC58();
      sub_248A36850();
      sub_2489C22DC(v37, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    }
    else
    {
      v63 = 0;
      sub_2489BBC58();
      sub_248A36850();
      sub_2489C22DC(v37, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
      if (qword_254464240 != -1)
        swift_once();
      v51 = sub_2489BEE68();
      sub_2489C401C(v51, (uint64_t)&unk_254464228);
      v65 = 0;
      v66 = 0xE000000000000000;
      sub_248A45A74();
      sub_2489C6D88();
      v64 = v57 - 1;
      sub_248A45D68();
      sub_248A4557C();
      sub_2489BDA70();
      sub_248A368D4();
      sub_248A4557C();
      sub_2489BA944();
      sub_248A36830();
      sub_2489B71DC();
      sub_2489BDA70();
    }
  }
  else
  {
    if (qword_254464910 != -1)
      swift_once();
    v31 = sub_2489BEE68();
    sub_2489C401C(v31, (uint64_t)&unk_254464980);
    v65 = 0;
    v66 = 0xE000000000000000;
    sub_248A45A74();
    sub_2489BA944();
    sub_248A3685C();
    sub_248A364B4();
    sub_2489BEE88();
  }
LABEL_12:
  sub_2489BA808();
}

uint64_t sub_248A32BAC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  v4 = sub_2489C330C(&qword_254464060);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_2544640D0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_2544640A0);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F5DEC(&qword_2544640C8, &qword_2544640D0);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = v18;
  v23 = v19;
  sub_248A44DB4();
  a3[3] = sub_2489C330C(&qword_254464048);
  a3[4] = sub_248A14560();
  sub_2489BE690(a3);
  sub_2489F5DEC(&qword_254464098, &qword_2544640A0);
  sub_2489F5DEC(&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
}

void sub_248A32DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_2489BED74();
  v4 = v3;
  v60 = sub_2489C330C(&qword_254463A98);
  v62 = *(_QWORD *)(v60 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BEE20(v7, v54);
  v63 = sub_2489C330C(&qword_254463B68);
  sub_248A36724();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489BFBBC(v10, v54);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v54 - v13;
  sub_248A3687C();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v15, v16);
  v61 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_248A367C8();
  sub_2489C330C(&qword_254463790);
  sub_248A36758();
  v20 = sub_2489C03E4();
  sub_2489C6304(v20);
  sub_248A2F8E8();
  sub_248A36570();
  if (v0)
  {
    CoreParameterRecord.id.getter();
    v22 = v21;
    v24 = v23;
    v25 = sub_2489BF7F0();
    MEMORY[0x24BDAC7A8](v25, v26);
    sub_248A367D8();
    v27 = type metadata accessor for CoreParameterRecord();
    sub_248A36810(v27);
    sub_248A36500();
    v28 = sub_248A31068(v4, 0, (uint64_t)v14);
    if (v1)
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v14, v63);
LABEL_11:
      sub_2489B71DC();
      goto LABEL_12;
    }
    v30 = v28;
    v57 = v22;
    v31 = *(void (**)(char *, uint64_t))(v2 + 8);
    v31(v14, v63);
    if (v30 < 2)
      goto LABEL_11;
    v55 = v30;
    v56 = v31;
    if (qword_254464520 != -1)
      swift_once();
    sub_248A364A0();
    swift_retain();
    sub_248A3681C();
    sub_2489FAAD4();
    v32 = v62;
    sub_2489BEC8C();
    sub_248A3690C(v22, v30);
    sub_2489BA87C();
    KeyPath = swift_getKeyPath();
    v61 = 0;
    v34 = KeyPath;
    sub_248A36508(&qword_2544640F0, v35, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v36 = v59;
    v37 = sub_248A365D4();
    v54 = (uint64_t)&v54;
    MEMORY[0x24BDAC7A8](v37, v38);
    sub_248A36654();
    *(_QWORD *)(v39 - 16) = v30;
    *(_QWORD *)(v39 - 8) = v24;
    v40 = v58;
    sub_248A36500();
    sub_2489C330C(&qword_254463CA8);
    v41 = sub_2489B7290();
    *(_OWORD *)(v41 + 16) = xmmword_248A47480;
    sub_248A3693C(v41 + v34, v36, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v32 + 16));
    sub_248A368C8();
    sub_2489BDA10();
    v42 = v61;
    sub_248A34290(v43, v44, v45, v46, v47, v48, v49, v40, v51, v52, v53);
    if (v42)
    {
      sub_2489B71DC();
      sub_2489BBC58();
      sub_248A3659C(v40);
      sub_2489C22DC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    }
    else
    {
      v61 = 0;
      sub_2489BBC58();
      sub_248A3659C(v40);
      sub_2489C22DC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
      if (qword_254464240 != -1)
        swift_once();
      v50 = sub_2489BEE68();
      sub_2489C401C(v50, (uint64_t)&unk_254464228);
      sub_248A367A8();
      sub_248A45A74();
      sub_2489C6D88();
      v64 = v55 - 1;
      sub_248A45D68();
      sub_248A36804();
      sub_2489BDA70();
      sub_248A4557C();
      sub_248A4557C();
      sub_2489BA944();
      sub_248A36830();
      sub_2489B71DC();
      sub_2489BDA70();
      sub_248A36928();
    }
  }
  else
  {
    if (qword_254464910 != -1)
      swift_once();
    v29 = sub_2489BEE68();
    sub_2489BD958(v29, (uint64_t)&unk_254464980);
    sub_248A45A74();
    sub_248A368E0();
    sub_2489BA944();
    sub_248A3685C();
    sub_248A364B4();
    sub_2489BEE88();
  }
LABEL_12:
  sub_2489BA808();
}

uint64_t sub_248A332E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  v4 = sub_2489C330C(&qword_254464060);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_254463B30);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_254463AE8);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F5DEC(&qword_254463B28, &qword_254463B30);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = v18;
  v23 = v19;
  sub_248A44DB4();
  a3[3] = sub_2489C330C(&qword_254463AB8);
  a3[4] = sub_2489FAC54();
  sub_2489BE690(a3);
  sub_2489F5DEC(&qword_254463AE0, &qword_254463AE8);
  sub_2489F5DEC(&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
}

void sub_248A33538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_2489BED74();
  v3 = v2;
  v5 = v4;
  v60 = sub_2489C330C(&qword_254463A90);
  v62 = *(_QWORD *)(v60 - 8);
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_2489BEE20(v8, v54);
  v63 = sub_2489C330C(&qword_254463B58);
  sub_248A36724();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_2489BFBBC(v11, v54);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v54 - v14;
  sub_248A3687C();
  sub_2489C14E0();
  MEMORY[0x24BDAC7A8](v16, v17);
  v61 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489C0634();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_248A367C8();
  sub_2489C330C(&qword_254463788);
  sub_248A452A0();
  v21 = sub_2489C03E4();
  sub_2489C6304(v21);
  sub_248A2F634();
  sub_248A36570();
  if (v5)
  {
    v22 = CoreEventRecord.id.getter();
    v24 = v23;
    v25 = sub_2489BF7F0();
    MEMORY[0x24BDAC7A8](v25, v26);
    v53 = (void (*)(uint64_t))v22;
    v27 = type metadata accessor for CoreEventRecord();
    sub_248A36810(v27);
    sub_248A36500();
    v28 = sub_248A3124C(v3, 0, (uint64_t)v15);
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v15, v63);
LABEL_11:
      sub_2489BEE88();
      goto LABEL_12;
    }
    v30 = v28;
    v57 = v22;
    v31 = *(void (**)(char *, uint64_t))(v1 + 8);
    v31(v15, v63);
    if (v30 < 2)
      goto LABEL_11;
    v55 = v30;
    v56 = v31;
    if (qword_254463990 != -1)
      swift_once();
    sub_248A364A0();
    swift_retain();
    sub_248A3681C();
    sub_2489F66B0();
    v32 = v62;
    sub_2489BBC94();
    sub_248A2F4AC(v22, v30, v24);
    sub_2489BA4B8();
    sub_2489ECAB4();
    sub_2489F15E8();
    KeyPath = swift_getKeyPath();
    v61 = 0;
    v34 = KeyPath;
    sub_248A36508(&qword_2544640F0, v35, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v36 = v59;
    v37 = sub_248A365D4();
    v54 = (uint64_t)&v54;
    MEMORY[0x24BDAC7A8](v37, v38);
    sub_248A36654();
    *(_QWORD *)(v39 - 16) = v30;
    *(_QWORD *)(v39 - 8) = v24;
    v40 = v58;
    sub_248A36500();
    sub_2489C330C(&qword_254463CA0);
    v41 = sub_2489B7290();
    *(_OWORD *)(v41 + 16) = xmmword_248A47480;
    sub_248A3693C(v41 + v34, v36, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v32 + 16));
    sub_248A368C8();
    sub_2489BDA10();
    v42 = v61;
    sub_248A34290(v43, v44, v45, v46, v47, v48, v49, v40, v51, v52, v53);
    if (v42)
    {
      sub_2489BEE88();
      sub_2489BBC58();
      sub_248A3659C(v40);
      sub_2489C22DC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    }
    else
    {
      v61 = 0;
      sub_2489BBC58();
      sub_248A3659C(v40);
      sub_2489C22DC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
      if (qword_254464240 != -1)
        swift_once();
      v50 = sub_2489BEE68();
      sub_2489C401C(v50, (uint64_t)&unk_254464228);
      sub_248A367A8();
      sub_248A45A74();
      sub_2489C6D88();
      v64 = v55 - 1;
      sub_248A45D68();
      sub_248A36804();
      sub_2489BDA70();
      sub_248A368B4();
      sub_248A4557C();
      sub_2489BA944();
      sub_2489BE9AC();
      sub_2489BEE88();
      sub_2489BDA70();
      sub_248A36928();
    }
  }
  else
  {
    if (qword_254464910 != -1)
      swift_once();
    v29 = sub_2489BEE68();
    sub_2489BD958(v29, (uint64_t)&unk_254464980);
    sub_248A45A74();
    sub_248A368E0();
    sub_2489BA944();
    sub_248A45BAC();
    sub_248A364B4();
    sub_2489BEE88();
  }
LABEL_12:
  sub_2489BA808();
}

uint64_t sub_248A33A6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  v4 = sub_2489C330C(&qword_254464060);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2489C330C(&qword_254463B00);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2489C330C(&qword_254463AD0);
  v20 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F5DEC(&qword_254463AF8, &qword_254463B00);
  sub_248A44DC0();
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v22 = v18;
  v23 = v19;
  sub_248A44DB4();
  a3[3] = sub_2489C330C(&qword_254463AA8);
  a3[4] = sub_2489EEA30();
  sub_2489BE690(a3);
  sub_2489F5DEC(&qword_254463AC8, &qword_254463AD0);
  sub_2489F5DEC(&qword_254464058, &qword_254464060);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
}

void sub_248A33CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v49;
  void (*v50)(uint64_t);
  uint64_t v51[2];
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_2489BED74();
  v60 = v0;
  v3 = v2;
  v4 = sub_2489C330C(&qword_254463A90);
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  sub_2489BA7E0();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_2489BEE20(v7, v51[0]);
  v58 = sub_2489C330C(&qword_254463B58);
  sub_2489C0364();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_2489BFBBC(v10, v51[0]);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v51 - v13;
  sub_2489C330C(&qword_254464970);
  sub_2489C14E0();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)v51 - v21;
  sub_2489C330C(&qword_254463758);
  sub_248A452A0();
  v23 = sub_2489C03E4();
  sub_2489BE7E0((uint64_t)v22, 0, 1, v23);
  v59 = v3;
  v24 = sub_248A2FE50((uint64_t)v22, v3, 0, MEMORY[0x24BEE4AF8]);
  sub_2489C3298((uint64_t)v22, &qword_254464970);
  if (v24)
  {
    CoreDonationRecord.event.getter();
    if (v25)
    {
      v26 = CoreEventRecord.id.getter();
      v28 = v27;
      v29 = sub_2489BF7F0();
      v53 = v51;
      MEMORY[0x24BDAC7A8](v29, v30);
      v50 = (void (*)(uint64_t))v26;
      v31 = type metadata accessor for CoreEventRecord();
      sub_248A36810(v31);
      sub_248A36500();
      v32 = v60;
      v33 = sub_248A3124C(v59, 0, (uint64_t)v14);
      if (v32)
      {
        (*(void (**)(char *, uint64_t))(v1 + 8))(v14, v58);
        sub_2489BEE88();
        swift_release();
      }
      else
      {
        v35 = v33;
        v52 = v26;
        v60 = v28;
        (*(void (**)(char *, uint64_t))(v1 + 8))(v14, v58);
        if (v35 < 2)
        {
          sub_2489BA4B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (qword_254463990 != -1)
            swift_once();
          sub_248A364A0();
          swift_retain();
          v36 = v52;
          v37 = v60;
          sub_2489F66B0();
          sub_248A453F0();
          sub_248A2F4AC((uint64_t)v19, v36, v37);
          swift_release();
          sub_2489ECAB4();
          sub_248A36838();
          sub_2489F15E8();
          swift_getKeyPath();
          sub_248A36508(&qword_2544640F0, v38, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
          v39 = v55;
          v40 = sub_248A365D4();
          v51[1] = (uint64_t)v51;
          MEMORY[0x24BDAC7A8](v40, v41);
          sub_248A36654();
          *(_QWORD *)(v42 - 16) = v36;
          *(_QWORD *)(v42 - 8) = v37;
          v43 = v54;
          sub_248A36500();
          sub_2489C330C(&qword_254463CA0);
          v44 = v56;
          v45 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
          v46 = swift_allocObject();
          *(_OWORD *)(v46 + 16) = xmmword_248A47480;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v44 + 16))(v46 + v45, v39, v57);
          sub_248A368C8();
          sub_248A34290(v59, 0, 1, 1, 0, 0, v46, v43, v48, v49, v50);
          sub_2489BDA70();
          sub_248A36844();
          sub_248A36748();
          if (qword_254464240 != -1)
            swift_once();
          v47 = sub_2489BEE68();
          sub_2489C401C(v47, (uint64_t)&unk_254464228);
          sub_248A367A8();
          sub_248A45A74();
          sub_2489BA944();
          sub_248A4557C();
          sub_2489C0C28();
          sub_2489C5160();
          sub_248A364B4();
          sub_2489BA4B8();
          sub_2489BBC60();
          sub_2489BEE88();
        }
      }
      goto LABEL_14;
    }
    sub_2489BA4B8();
  }
  if (qword_254464910 != -1)
    swift_once();
  v34 = sub_2489BEE68();
  sub_2489BD958(v34, (uint64_t)&unk_254464980);
  sub_248A45A74();
  sub_248A368E0();
  sub_2489BA944();
  sub_248A45BAC();
  sub_248A364B4();
  sub_2489BEE88();
LABEL_14:
  sub_2489BA808();
}

uint64_t sub_248A34244()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t _s16ContainerMonitorCMa()
{
  return objc_opt_self();
}

unint64_t sub_248A34290(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t), _QWORD *a10, void (*a11)(uint64_t))
{
  uint64_t v11;
  unint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;

  result = a9(a1, a2, a3 & 1, a4, a5 & 1, a6, MEMORY[0x24BEE4AF8], a7, a8);
  if (!v11)
  {
    v13 = result;
    if (result >> 62)
      goto LABEL_13;
    v14 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_2489BBC94();
    for (; v14; v14 = sub_248A45C18())
    {
      for (i = 4; ; ++i)
      {
        if ((v13 & 0xC000000000000001) != 0)
          MEMORY[0x2495A2200](i - 4, v13);
        else
          swift_retain();
        v16 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        sub_248A3145C(a10, a11);
        sub_2489BF7F0();
        if (v16 == v14)
          return sub_2489BD9F8();
      }
      __break(1u);
LABEL_13:
      sub_2489BBC94();
    }
    return sub_2489BD9F8();
  }
  return result;
}

uint64_t sub_248A3441C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19[1] = a1;
  v3 = sub_2489C330C(&qword_254464400);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2489C330C(&qword_254463B00);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2489C330C(&qword_254463780);
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F5DEC(&qword_254463AF8, &qword_254463B00);
  sub_248A44DC0();
  v22 = type metadata accessor for CoreEventRecord();
  sub_248A36454(&qword_2544645F8, 255, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  v23 = v16;
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_248A452AC();
  v17 = (void (*)(uint64_t))MEMORY[0x24BDEAAB0];
  sub_248A44DB4();
  a2[3] = sub_2489C330C(&qword_254463768);
  a2[4] = sub_248A36158();
  sub_2489BE690(a2);
  sub_2489F5DEC(&qword_254463778, &qword_254463780);
  sub_2489F5DEC(&qword_2544643F8, &qword_254464400);
  sub_248A36454(&qword_254464410, 255, v17);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v15, v12);
}

uint64_t sub_248A346BC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19[1] = a1;
  v3 = sub_2489C330C(&qword_254464400);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2489C330C(&qword_254463B30);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2489C330C(&qword_254463980);
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F5DEC(&qword_254463B28, &qword_254463B30);
  sub_248A44DC0();
  v22 = type metadata accessor for CoreParameterRecord();
  sub_248A36454(&qword_254464678, 255, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  v23 = v16;
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_248A452AC();
  v17 = (void (*)(uint64_t))MEMORY[0x24BDEAAB0];
  sub_248A44DB4();
  a2[3] = sub_2489C330C(&qword_254463968);
  a2[4] = sub_248A36204();
  sub_2489BE690(a2);
  sub_2489F5DEC(&qword_254463978, &qword_254463980);
  sub_2489F5DEC(&qword_2544643F8, &qword_254464400);
  sub_248A36454(&qword_254464410, 255, v17);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v15, v12);
}

uint64_t sub_248A3495C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19[1] = a1;
  v3 = sub_2489C330C(&qword_254464400);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2489C330C(&qword_2544640D0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2489C330C(&qword_254463F08);
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2489F5DEC(&qword_2544640C8, &qword_2544640D0);
  sub_248A44DC0();
  v22 = type metadata accessor for CoreTipRecord();
  sub_248A36454(&qword_2544646D0, 255, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  v23 = v16;
  swift_getKeyPath();
  sub_248A44D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_248A452AC();
  v17 = (void (*)(uint64_t))MEMORY[0x24BDEAAB0];
  sub_248A44DB4();
  a2[3] = sub_2489C330C(&qword_254463EC0);
  a2[4] = sub_248A362B0();
  sub_2489BE690(a2);
  sub_2489F5DEC(&qword_254463F00, &qword_254463F08);
  sub_2489F5DEC(&qword_2544643F8, &qword_254464400);
  sub_248A36454(&qword_254464410, 255, v17);
  sub_248A44CF4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v15, v12);
}

