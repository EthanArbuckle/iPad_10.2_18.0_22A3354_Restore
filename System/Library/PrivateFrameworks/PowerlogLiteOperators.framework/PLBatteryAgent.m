@implementation PLBatteryAgent

id __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_6(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = CFSTR("VacVoltageLimit");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", *(unsigned int *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void __32__PLBatteryAgent_logFedDetails___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a2;
  objc_msgSend(v5, "stringWithFormat:", CFSTR("USBCCharging%d"), a3);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], v9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v7, v6);

  objc_msgSend(*(id *)(a1 + 32), "logEntry:", v8);
}

- (void)refreshEABatteryStatusTriggeredByConnectionEvent:(BOOL)a3
{
  _BOOL8 v3;
  _BOOL4 v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v3 = a3;
  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
  {
    v5 = -[PLBatteryAgent isEABatteryConnectedNow](self, "isEABatteryConnectedNow");
    -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v5)
    {
      objc_msgSend(v6, "addObject:", CFSTR("1452-5013"));

      -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "addObject:", CFSTR("1452-5016"));

      -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "addObject:", CFSTR("1452-5017"));

    }
    else
    {
      objc_msgSend(v6, "removeObject:", CFSTR("1452-5013"));

      -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObject:", CFSTR("1452-5016"));

      -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObject:", CFSTR("1452-5017"));

      -[PLBatteryAgent setEABatteryLevel:](self, "setEABatteryLevel:", -1.0);
    }
    if (!-[PLBatteryAgent isEAPencilConnectedNow](self, "isEAPencilConnectedNow"))
    {
      -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "removeObject:", CFSTR("76-546"));

    }
    -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "count");

    if (v14)
      -[PLBatteryAgent setupEALoggingTriggeredByConnectionEvent:](self, "setupEALoggingTriggeredByConnectionEvent:", v3);
    else
      -[PLBatteryAgent cancelEALogging](self, "cancelEALogging");
  }
}

- (NSMutableArray)trackedAccessories
{
  return (NSMutableArray *)objc_getProperty(self, a2, 664, 1);
}

- (void)setEABatteryLevel:(double)a3
{
  self->_EABatteryLevel = a3;
}

- (void)checkChargingInfoChange:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  _BOOL4 v16;
  void *v17;
  void *v18;
  NSDate *v19;
  NSDate *lastTimePenaltyBoxIntervalUpdated;
  NSDate *v21;
  NSDate *lastTimeInPenaltyBox;
  int v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (!v4)
    goto LABEL_28;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  objc_msgSend(v4, "objectForKey:", CFSTR("AppleRawAdapterDetails"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v25;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v25 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
        objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("FamilyCode"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        if (v12)
        {
          objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("FamilyCode"));
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "addObject:", v13);

        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
    }
    while (v8);
  }

  v14 = -[PLBatteryAgent calculateConnectedState:](self, "calculateConnectedState:", v5);
  v23 = -[PLBatteryAgent calculateChargingState:](self, "calculateChargingState:", v4);
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ChargerData"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = -[PLBatteryAgent checkForPenaltyBox:](self, "checkForPenaltyBox:", v15);
  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v17;
  if (v16)
  {
    if (self->_lastTimePenaltyBoxIntervalUpdated)
    {
      objc_msgSend(v17, "timeIntervalSinceDate:");
      -[PLBatteryAgent logPenaltyBoxDurationToAggd:](self, "logPenaltyBoxDurationToAggd:");
      v19 = 0;
    }
    else
    {
      v19 = v17;
    }
    lastTimePenaltyBoxIntervalUpdated = self->_lastTimePenaltyBoxIntervalUpdated;
    self->_lastTimePenaltyBoxIntervalUpdated = v19;

    if (self->_inPenaltyBox)
    {
      v21 = v18;
    }
    else
    {
      if (!self->_lastTimeInPenaltyBox)
        goto LABEL_20;
      objc_msgSend(v18, "timeIntervalSinceDate:");
      MEMORY[0x1D179B7F4](CFSTR("com.apple.power.state.penaltybox"));
      AnalyticsSendEventLazy();
      v21 = 0;
    }
    lastTimeInPenaltyBox = self->_lastTimeInPenaltyBox;
    self->_lastTimeInPenaltyBox = v21;

  }
LABEL_20:
  if (v14 != self->_prevConnectedState || v23 != self->_prevChargingState)
  {
    if (self->_lastTimeChargingInfoUpdated)
    {
      objc_msgSend(v18, "timeIntervalSinceDate:");
      -[PLBatteryAgent logChargingTimeToAggd:](self, "logChargingTimeToAggd:");
    }
    if (self->_lastTimePenaltyBoxIntervalUpdated)
    {
      objc_msgSend(v18, "timeIntervalSinceDate:");
      -[PLBatteryAgent logPenaltyBoxDurationToAggd:](self, "logPenaltyBoxDurationToAggd:");
      objc_storeStrong((id *)&self->_lastTimePenaltyBoxIntervalUpdated, v18);
    }
    self->_prevConnectedState = v14;
    self->_prevChargingState = v23;
    objc_storeStrong((id *)&self->_lastTimeChargingInfoUpdated, v18);
  }

LABEL_28:
}

- (BOOL)checkForPenaltyBox:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  __int16 v8;
  _BOOL4 v9;
  BOOL v10;

  v4 = a3;
  v5 = v4;
  if (!v4)
    goto LABEL_4;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("NotChargingReason"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v6)
    goto LABEL_4;
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("NotChargingReason"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "intValue");

  v9 = (v8 & 0x180) == 256;
  if (self->_inPenaltyBox != v9)
  {
    self->_inPenaltyBox = v9;
    v10 = 1;
  }
  else
  {
LABEL_4:
    v10 = 0;
  }

  return v10;
}

- (int)calculateConnectedState:(id)a3
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t i;
  int v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v3);
        v9 = objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * i), "intValue");
        switch(v9)
        {
          case -536723453:
            v6 |= 2u;
            break;
          case -536723452:
          case -536723451:
            goto LABEL_9;
          case -536723450:
            v6 |= 1u;
            break;
          case -536723449:
            v6 |= 8u;
            break;
          case -536723448:
            v6 |= 0x10u;
            break;
          default:
            if (v9)
LABEL_9:
              v6 |= 4u;
            break;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (int)calculateChargingState:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  int v7;
  int v8;

  objc_msgSend(a3, "objectForKey:", CFSTR("AdapterDetails"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("FamilyCode"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "intValue");

    v7 = v6 + 536723453;
    v8 = 2;
    switch(v7)
    {
      case 0:
        break;
      case 3:
        v8 = 1;
        break;
      case 4:
        v8 = 8;
        break;
      case 5:
        v8 = 16;
        break;
      default:
        v8 = 4;
        break;
    }
  }
  else
  {
    v8 = -1;
  }

  return v8;
}

- (BOOL)modifiedExternalChargerEntry:(id)a3
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  BOOL v17;
  id obj;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  objc_msgSend(v3, "keys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (!v4)
    goto LABEL_16;
  v5 = v4;
  v6 = *(_QWORD *)v22;
  do
  {
    for (i = 0; i != v5; ++i)
    {
      if (*(_QWORD *)v22 != v6)
        objc_enumerationMutation(obj);
      v8 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * i);
      objc_msgSend(v3, "objectForKeyedSubscript:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (v9)
      {

      }
      else
      {
        -[PLEntry objectForKeyedSubscript:](self->_lastChargerEntry, "objectForKeyedSubscript:", v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v10)
          continue;
      }
      objc_msgSend(v3, "objectForKeyedSubscript:", v8);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        -[PLEntry objectForKeyedSubscript:](self->_lastChargerEntry, "objectForKeyedSubscript:", v8);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_opt_respondsToSelector();

        if ((v13 & 1) != 0)
        {
          objc_msgSend(v3, "objectForKeyedSubscript:", v8);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLEntry objectForKeyedSubscript:](self->_lastChargerEntry, "objectForKeyedSubscript:", v8);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = objc_msgSend(v14, "compare:", v15);

          if (v16)
          {
            v17 = 1;
            goto LABEL_17;
          }
        }
      }
      else
      {

      }
    }
    v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  }
  while (v5);
LABEL_16:
  v17 = 0;
LABEL_17:

  return v17;
}

- (void)handleCameraStreaming:(BOOL)a3 withProperties:(id)a4
{
  id v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  _BOOL4 v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  void *v14;
  void *v15;
  PLBatteryAgent *v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  double v23;
  _DWORD v24[2];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  PLLogCommon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    LOWORD(v24[0]) = 0;
    _os_log_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_INFO, "Start Camera Streaming Interval Tracking Section", (uint8_t *)v24, 2u);
  }

  PLLogCommon();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = -[PLBatteryAgent cameraStreamingActive](self, "cameraStreamingActive");
    v24[0] = 67109120;
    v24[1] = v9;
    _os_log_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_INFO, "Camera Streaming State: %d", (uint8_t *)v24, 8u);
  }

  if (!-[PLBatteryAgent cameraStreamingActive](self, "cameraStreamingActive") || !a3)
  {
    PLLogCommon();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      LOWORD(v24[0]) = 0;
      _os_log_impl(&dword_1CAF47000, v18, OS_LOG_TYPE_INFO, "Camera Streaming not active OR device not plugged in", (uint8_t *)v24, 2u);
    }

    objc_msgSend(v6, "entryDate");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 4, 0, v19);

    objc_msgSend(v6, "entryDate");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = self;
    v17 = 6;
    goto LABEL_14;
  }
  v10 = -[PLBatteryAgent tlcIncreased](self, "tlcIncreased");
  PLLogCommon();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);
  if (v10)
  {
    if (v12)
    {
      LOWORD(v24[0]) = 0;
      _os_log_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_INFO, "Open WTLC, close TLC, close camera streaming", (uint8_t *)v24, 2u);
    }

    objc_msgSend(v6, "entryDate");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 6, 1, v13);

    objc_msgSend(v6, "entryDate");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 4, 0, v14);

    objc_msgSend(v6, "entryDate");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = self;
    v17 = 3;
LABEL_14:
    v20 = 0;
LABEL_15:
    -[PLBatteryAgent updateIntervalForType:withState:andTime:](v16, "updateIntervalForType:withState:andTime:", v17, v20, v15);

    goto LABEL_16;
  }
  if (v12)
  {
    LOWORD(v24[0]) = 0;
    _os_log_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_INFO, "Close WTLC, close TLC, open camera streaming", (uint8_t *)v24, 2u);
  }

  objc_msgSend(v6, "entryDate");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 6, 0, v21);

  objc_msgSend(v6, "entryDate");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 3, 0, v22);

  -[PLBatteryAgent batteryLevelPercent](self, "batteryLevelPercent");
  if (v23 >= 75.0)
  {
    objc_msgSend(v6, "entryDate");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = self;
    v17 = 4;
    v20 = 1;
    goto LABEL_15;
  }
LABEL_16:

}

- (void)updateIntervalForType:(signed __int16)a3 withState:(BOOL)a4 andTime:(id)a5
{
  -[PLBatteryAgent updateIntervalForType:withState:andTime:selectedChargedLimit:](self, "updateIntervalForType:withState:andTime:selectedChargedLimit:", a3, a4, a5, 0);
}

- (NSMutableDictionary)openChargingIntervals
{
  return (NSMutableDictionary *)objc_getProperty(self, a2, 672, 1);
}

- (BOOL)cameraStreamingActive
{
  return self->_cameraStreamingActive;
}

- (NSNumber)deviceIsPluggedIn
{
  return (NSNumber *)objc_getProperty(self, a2, 176, 1);
}

- (NSDate)previousPortControllerRead
{
  return (NSDate *)objc_getProperty(self, a2, 424, 1);
}

- (PLIOKitOperatorComposition)magsafeIOService
{
  return (PLIOKitOperatorComposition *)objc_getProperty(self, a2, 520, 1);
}

- (BOOL)lifetimeDataLogged
{
  return self->_lifetimeDataLogged;
}

- (NSNumber)lastTLCCounter
{
  return (NSNumber *)objc_getProperty(self, a2, 688, 1);
}

- (BOOL)hasAppleSmartBattery
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __38__PLBatteryAgent_hasAppleSmartBattery__block_invoke;
  block[3] = &unk_1E85780C8;
  block[4] = self;
  if (qword_1ED887630 != -1)
    dispatch_once(&qword_1ED887630, block);
  return byte_1ED887569;
}

- (BOOL)tlcIncreased
{
  return self->_tlcIncreased;
}

- (BOOL)shouldQueryForAccessory
{
  return self->_shouldQueryForAccessory;
}

- (void)setTlcIncreased:(BOOL)a3
{
  self->_tlcIncreased = a3;
}

- (void)setRawBatteryVoltageVolt:(double)a3
{
  self->_rawBatteryVoltageVolt = a3;
}

- (void)setLastTLCCounter:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 688);
}

- (void)setLastChargerEntry:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 512);
}

- (void)setDeviceIsPluggedIn:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 176);
}

- (void)setBatteryLevelPercent:(double)a3
{
  self->_batteryLevelPercent = a3;
}

- (id)parseBatterySerialNumber:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v4 = a3;
  v5 = (void *)objc_opt_new();
  if (v4)
  {
    if (objc_msgSend(v4, "length") == 18)
    {
      objc_msgSend(v4, "substringWithRange:", 0, 3);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v6, CFSTR("vendor"));

      objc_msgSend(v4, "substringWithRange:", 3, 3);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v7, CFSTR("dom"));

      objc_msgSend(v4, "substringWithRange:", 6, 5);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v8, CFSTR("sequence"));

      objc_msgSend(v4, "substringWithRange:", 11, 7);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v9, CFSTR("eeee_code"));

      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("dom"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = -[PLBatteryAgent customConvertBase34ToBase10:](self, "customConvertBase34ToBase10:", v10);

      objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", (double)v11 * 86400.0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_alloc(MEMORY[0x1E0C99D48]);
      v14 = (void *)objc_msgSend(v13, "initWithCalendarIdentifier:", *MEMORY[0x1E0C99760]);
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v12, CFSTR("SNDate"));
      objc_msgSend(MEMORY[0x1E0C99E80], "timeZoneWithAbbreviation:", CFSTR("UTC"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setTimeZone:", v15);

      objc_msgSend(v14, "components:fromDate:", 24576, v12);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_msgSend(v16, "valueForComponent:", 0x2000);
      v18 = objc_msgSend(v16, "valueForComponent:", 0x4000);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "stringValue");
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v20, "substringFromIndex:", objc_msgSend(v20, "length") - 1);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v21, CFSTR("year"));

      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v17);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "stringValue");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v23, CFSTR("week"));

LABEL_9:
      goto LABEL_10;
    }
    if (objc_msgSend(v4, "length") == 17)
    {
      objc_msgSend(v4, "substringWithRange:", 3, 1);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v24, CFSTR("year"));

      objc_msgSend(v4, "substringWithRange:", 4, 2);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v25, CFSTR("week"));

      v26 = v4;
      v27 = 11;
LABEL_8:
      objc_msgSend(v26, "substringWithRange:", v27, 4);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v12, CFSTR("eeee_code"));
      goto LABEL_9;
    }
    if (objc_msgSend(v4, "length") == 12)
    {
      v26 = v4;
      v27 = 8;
      goto LABEL_8;
    }
  }
LABEL_10:

  return v5;
}

- (void)logPowerOutDetails:(id)a3
{
  void *v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  uint64_t v9;
  double v10;
  double v11;
  NSObject *v12;
  NSObject *v13;
  _QWORD v14[5];
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (a3)
  {
    objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("PowerOutDetails"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    PLLogCommon();
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
    if (v4)
    {
      if (v6)
      {
        *(_DWORD *)buf = 138412290;
        v16 = v4;
        _os_log_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_INFO, "Logging powerout details: %@", buf, 0xCu);
      }

      v14[0] = MEMORY[0x1E0C809B0];
      v14[1] = 3221225472;
      v14[2] = __37__PLBatteryAgent_logPowerOutDetails___block_invoke;
      v14[3] = &unk_1E857F7A8;
      v14[4] = self;
      objc_msgSend(v4, "enumerateObjectsUsingBlock:", v14);
    }
    else
    {
      if (v6)
      {
        -[PLBatteryAgent powerOutTotalPower](self, "powerOutTotalPower");
        v8 = v7;
        -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
        *(_DWORD *)buf = 134218240;
        v16 = v8;
        v17 = 2048;
        v18 = v9;
        _os_log_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_INFO, "Total Power: %f  Total Count: %f", buf, 0x16u);
      }

      -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
      if (v10 <= 0.0 || (-[PLBatteryAgent powerOutTotalPower](self, "powerOutTotalPower"), v11 <= 100.0))
      {
        PLLogCommon();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "No need to create power out event", buf, 2u);
        }

      }
      else
      {
        PLLogCommon();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_DEBUG, "Values have been accumulated above threshold but no new data incoming", buf, 2u);
        }

        -[PLBatteryAgent flushPowerOut](self, "flushPowerOut");
      }
    }

  }
}

- (double)powerOutTotalCount
{
  return self->_powerOutTotalCount;
}

- (double)powerOutTotalPower
{
  return self->_powerOutTotalPower;
}

- (void)logFedDetails:(id)a3
{
  void *v4;
  id v5;
  _QWORD v6[5];

  if (a3)
  {
    objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("FedDetails"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      v6[1] = 3221225472;
      v6[2] = __32__PLBatteryAgent_logFedDetails___block_invoke;
      v6[3] = &unk_1E857F7A8;
      v6[4] = self;
      v5 = v4;
      v6[0] = MEMORY[0x1E0C809B0];
      objc_msgSend(v4, "enumerateObjectsUsingBlock:", v6);
      v4 = v5;
    }

  }
}

- (void)logEventPointChargingInfoWithChargingData:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  NSObject *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  _BOOL4 v59;
  uint64_t block;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  void *v63;
  uint64_t v64;
  uint8_t buf[4];
  void *v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (v4)
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("ChargingInfo"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v5);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", self->_prevConnectedState);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v7, CFSTR("Connected"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", self->_prevChargingState);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v8, CFSTR("Charging"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("DriverState"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v9, CFSTR("DriverState"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("DriverStatusBits"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v10, CFSTR("DriverStatusBits"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("FirmwareStatus"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v11, CFSTR("FirmwareStatus"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Frequency"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, CFSTR("Frequency"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("RectifierCurrent"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v13, CFSTR("RectifierCurrent"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("RectifierVoltage"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v14, CFSTR("RectifierVoltage"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerTarget"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v15, CFSTR("PowerTarget"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("VoltageTarget"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v16, CFSTR("VoltageTarget"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerBudget"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v17, CFSTR("PowerBudget"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TxGain1"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v18, CFSTR("TxGain1"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TxGain2"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v19, CFSTR("TxGain2"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TxVersion"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v20, CFSTR("TxVersion"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("SignalStrength"));
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v21, CFSTR("SignalStrength"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("NotCloakReason"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v22, CFSTR("NotCloakReason"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ModDepth"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v23, CFSTR("ModDepth"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("HighFreq"));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v24, CFSTR("HighFreq"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CloakReason"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v25, CFSTR("CloakReason"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("InductiveFWMode"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v26, CFSTR("InductiveFWMode"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("OVPCount"));
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v27, CFSTR("OVPCount"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("MagnetAttach"));
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v28, CFSTR("MagnetAttach"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PTxType"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v29, CFSTR("PTxType"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerNegotiable"));
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v30, CFSTR("PowerNegotiable"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerLimitReason"));
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v31, CFSTR("PowerLimitReason"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerPotential"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v32, CFSTR("PowerPotential"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Prect"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v33, CFSTR("Prect"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("IlimTarget"));
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v34, CFSTR("IlimTarget"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("IlimHeadroom"));
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v35, CFSTR("IlimHeadroom"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TxGain3"));
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v36, CFSTR("TxGain3"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TxGain4"));
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v37, CFSTR("TxGain4"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerProfile"));
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v38, CFSTR("PowerProfile"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerProfSwitch"));
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v39, CFSTR("PowerProfSwitch"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TxKest"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v40, CFSTR("TxKest"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("RxQippVer"));
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v41, CFSTR("RxQippVer"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("DplossStat"));
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v42, CFSTR("DplossStat"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("MainCurrent"));
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v43, CFSTR("MainCurrent"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("AuthFodStatus"));
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v44, CFSTR("AuthFodStatus"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("InductiveCoexStatus"));
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v45, CFSTR("InductiveCoexStatus"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("VMID"));
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v46, CFSTR("VMID"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("PowerConverterStatus"));
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v47, CFSTR("PowerConverterStatus"));

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CommStatus"));
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v48, CFSTR("CommStatus"));

    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v49 = objc_opt_class();
      block = MEMORY[0x1E0C809B0];
      v61 = 3221225472;
      v62 = __60__PLBatteryAgent_logEventPointChargingInfoWithChargingData___block_invoke;
      v63 = &__block_descriptor_40_e5_v8__0lu32l8;
      v64 = v49;
      if (qword_1ED887718 != -1)
        dispatch_once(&qword_1ED887718, &block);
      if (byte_1ED887586)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Charging Data: %@"), v4, block, v61, v62, v63, v64);
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        v51 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v52, "lastPathComponent");
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventPointChargingInfoWithChargingData:]");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v51, "logMessage:fromFile:fromFunction:fromLineNumber:", v50, v53, v54, 5192);

        PLLogCommon();
        v55 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v66 = v50;
          _os_log_debug_impl(&dword_1CAF47000, v55, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    if (!self->_entryChargingOld
      || (-[PLBatteryAgent entryChargingOld](self, "entryChargingOld"),
          v56 = (void *)objc_claimAutoreleasedReturnValue(),
          v57 = objc_msgSend(v6, "compare:", v56),
          v56,
          v57))
    {
      -[PLOperator logEntry:](self, "logEntry:", v6);
    }
    -[PLBatteryAgent setEntryChargingOld:](self, "setEntryChargingOld:", v6);
    if ((self->_prevChargingState & 0x1B) != 0
      || (objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("DriverState")),
          v58 = (void *)objc_claimAutoreleasedReturnValue(),
          v59 = -[PLBatteryAgent driverActive:](self, "driverActive:", v58),
          v58,
          v59))
    {
      -[PLBatteryAgent logChargingParametersToAggd:](self, "logChargingParametersToAggd:", v4);
    }

  }
}

- (void)setEntryChargingOld:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 744);
}

- (void)logEventPointBatteryPanicShutdown:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("I2CLog"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6 && objc_msgSend(v6, "count"))
    {
      objc_msgSend(MEMORY[0x1E0D7FFA0], "objectForKey:", CFSTR("LastPanicData"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("I2CLogData"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v8 || (objc_msgSend(v8, "isEqualToData:", v9) & 1) == 0)
      {
        +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("BatteryPanicShutdown"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v10);
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("I2CLog"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("I2CLogData"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "setObject:forKeyedSubscript:", v13, CFSTR("I2CLogData"));

        -[PLOperator logEntry:](self, "logEntry:", v11);
        objc_msgSend(MEMORY[0x1E0D800B8], "sharedCore");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "storage");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "flushCachesWithReason:", CFSTR("PanicShutdown"));

        v16 = v5;
        AnalyticsSendEventLazy();
        objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", v9, CFSTR("LastPanicData"), 1);

      }
    }

  }
}

- (void)logCurrentAccumulatorWithRawData:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD v18[4];
  id v19;
  _QWORD block[5];

  v4 = a3;
  if (v4)
  {
    v17 = v4;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v4 = v17;
    if (v5)
    {
      +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("CurrentAccumulator"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLOperator timeIntervalSinceLastLogForEntryKey:](self, "timeIntervalSinceLastLogForEntryKey:", v6);
      v8 = v7;
      v9 = MEMORY[0x1E0C809B0];
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __51__PLBatteryAgent_logCurrentAccumulatorWithRawData___block_invoke;
      block[3] = &unk_1E85780C8;
      block[4] = self;
      if (qword_1ED887838 != -1)
        dispatch_once(&qword_1ED887838, block);
      if (v8 > *(double *)&qword_1ED887840)
      {
        objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("BatteryData"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v6);
        objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("CellCurrentAccumulator"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v18[0] = v9;
        v18[1] = 3221225472;
        v18[2] = __51__PLBatteryAgent_logCurrentAccumulatorWithRawData___block_invoke_2;
        v18[3] = &unk_1E857F760;
        v19 = v11;
        v13 = v11;
        objc_msgSend(v12, "enumerateObjectsUsingBlock:", v18);
        objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("PackCurrentAccumulator"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v14, CFSTR("CurrentAccumulator"));

        objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("PackCurrentAccumulatorCount"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v15, CFSTR("CurrentAccumulatorCount"));

        objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("CellCurrentAccumulatorCount"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v16, CFSTR("CellCurrentAccumulatorCount"));

        -[PLBatteryAgent accountGaugePowerFromCurrentAccumulatorEntry:](self, "accountGaugePowerFromCurrentAccumulatorEntry:", v13);
        -[PLOperator logEntry:](self, "logEntry:", v13);

      }
      v4 = v17;
    }
  }

}

- (void)logAdapterInfo:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;

  objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("PowerTelemetryData"));
  v18 = (id)objc_claimAutoreleasedReturnValue();
  if (v18)
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("Adapter"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v4);
    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("AccumulatedAdapterEfficiencyLoss"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v6, CFSTR("AccumulatedAdapterEfficiencyLoss"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("AccumulatedSystemLoad"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v7, CFSTR("AccumulatedSystemLoad"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("AccumulatedSystemPowerIn"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v8, CFSTR("AccumulatedSystemPowerIn"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("AdapterEfficiencyLoss"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v9, CFSTR("AdapterEfficiencyLoss"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("SystemLoad"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v10, CFSTR("SystemLoad"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("SystemLoadAccumulatorCount"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v11, CFSTR("SystemLoadAccumulatorCount"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("SystemPowerIn"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v12, CFSTR("SystemPowerIn"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("AccumulatedAdapterEfficiencyLoss"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v13, CFSTR("AccumulatedAdapterEfficiencyLoss"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("SystemPowerInAccumulatorCount"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v14, CFSTR("SystemPowerInAccumulatorCount"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("SystemVoltageIn"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v15, CFSTR("SystemInputVoltage"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("SystemCurrentIn"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v16, CFSTR("SystemInputCurrent"));

    objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("PowerTelemetryErrorCount"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v17, CFSTR("PowerTelemetryErrorCount"));

    -[PLOperator logEntry:](self, "logEntry:", v5);
  }

}

- (PLEntry)lastChargerEntry
{
  return (PLEntry *)objc_getProperty(self, a2, 512, 1);
}

- (BOOL)isPingPongCharging
{
  return self->_isPingPongCharging;
}

- (BOOL)isFirstTimeCheckingPingPong
{
  return self->_isFirstTimeCheckingPingPong;
}

- (PLEntry)entryChargingOld
{
  return (PLEntry *)objc_getProperty(self, a2, 744, 1);
}

- (BOOL)driverActive:(id)a3
{
  id v3;
  void *v4;
  BOOL v5;

  v3 = a3;
  v4 = v3;
  v5 = v3 && objc_msgSend(v3, "intValue") == 3;

  return v5;
}

- (PLIOKitOperatorComposition)chargerIOService
{
  return (PLIOKitOperatorComposition *)objc_getProperty(self, a2, 504, 1);
}

- (NSNumber)TLCOverrideValue
{
  return (NSNumber *)objc_getProperty(self, a2, 704, 1);
}

- (double)EABatteryLevel
{
  return self->_EABatteryLevel;
}

+ (BOOL)supportsAccConnectionLogging
{
  if (qword_1ED887660 != -1)
    dispatch_once(&qword_1ED887660, &__block_literal_global_2358);
  return byte_1ED88756F;
}

+ (BOOL)hasWirelessCharger
{
  if (qword_1ED8875C0 != -1)
    dispatch_once(&qword_1ED8875C0, &__block_literal_global_37);
  return _MergedGlobals_3;
}

+ (BOOL)hasChargingInfoLogging
{
  if (qword_1ED887638 != -1)
    dispatch_once(&qword_1ED887638, &__block_literal_global_2302);
  return byte_1ED88756A;
}

+ (id)connectStateStringToEnum:(id)a3
{
  uint64_t v3;

  v3 = objc_msgSend(&unk_1E86509D8, "indexOfObject:", a3);
  if (v3 == 0x7FFFFFFFFFFFFFFFLL)
    return &unk_1E8633B70;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v3 + 1);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (void)logAdapterDetails:(id)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  id v12;

  if (a3)
  {
    objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("AdapterDetails"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v4)
    {
LABEL_19:

      return;
    }
    v12 = v4;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Watts"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "intValue");

    objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("Manufacturer"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent lastAdapterPower](self, "lastAdapterPower");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
    {
      if (!(_DWORD)v6)
        goto LABEL_18;
      goto LABEL_17;
    }
    if ((_DWORD)v6)
    {
      -[PLBatteryAgent lastAdapterPower](self, "lastAdapterPower");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v8, "intValue") != (_DWORD)v6)
      {

LABEL_17:
        -[PLBatteryAgent logAdapterDetailsEntry:](self, "logAdapterDetailsEntry:", v12);
        goto LABEL_18;
      }
      if (!v7)
      {

LABEL_18:
        -[PLBatteryAgent setLastAdapterManufacturer:](self, "setLastAdapterManufacturer:", v7);
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v6);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLBatteryAgent setLastAdapterPower:](self, "setLastAdapterPower:", v11);

        v4 = v12;
        goto LABEL_19;
      }
    }
    else if (!v7)
    {
      goto LABEL_18;
    }
    -[PLBatteryAgent lastAdapterManufacturer](self, "lastAdapterManufacturer");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "isEqualToString:", v7);

    if ((_DWORD)v6)
    if ((v10 & 1) != 0)
      goto LABEL_18;
    goto LABEL_17;
  }
}

- (NSNumber)lastAdapterPower
{
  return (NSNumber *)objc_getProperty(self, a2, 408, 1);
}

- (void)setLastAdapterPower:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 408);
}

- (void)setLastAdapterManufacturer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 416);
}

- (id)logEventBackwardBatteryWithRawData:(id)a3
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int lifetimeMaxRa;
  _BOOL8 v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  int presentChemicalWeightedRa;
  int v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int v30;
  int presentWeightedRa;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  int v38;
  int presentBatteryHealthMetric;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  int v44;
  int presentPeakPerformanceCapacity;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  int v51;
  int presentOCVCount;
  void *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  int v57;
  int presentOCV;
  void *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  int v63;
  int presentRaUpdateDisqualified;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  int v69;
  int presentQmaxUpdateDisqualified;
  void *v71;
  uint64_t v72;
  void *v73;
  void *v74;
  int v75;
  int presentTimeSinceLastOCV;
  void *v77;
  void *v78;
  void *v79;
  uint64_t v80;
  void *v81;
  id v82;
  void *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  int v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  int v109;
  void *v110;
  void *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  int v117;
  void *v118;
  void *v119;
  void *v120;
  NSObject *v121;
  void *v123;
  uint8_t buf[8];
  uint64_t v125;
  uint64_t v126;
  id (*v127)(uint64_t);
  void *v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  id (*v132)(uint64_t);
  void *v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  id (*v137)(uint64_t);
  void *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  id (*v142)(uint64_t);
  void *v143;
  id v144;
  _QWORD v145[5];
  id v146;

  v4 = a3;
  if (!v4)
  {
    v16 = 0;
    goto LABEL_92;
  }
  v5 = -[PLEventBackwardBatteryEntry initEntryWithRawData:]([PLEventBackwardBatteryEntry alloc], "initEntryWithRawData:", v4);
  -[PLBatteryAgent presentMaxRaFromRawData:](self, "presentMaxRaFromRawData:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v123 = v6;
  if (v6)
  {
    v7 = v6;
    if ((int)objc_msgSend(v6, "intValue") >= 1 && objc_msgSend(v7, "intValue") != self->_presentMaxRa)
    {
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v7, CFSTR("PresentMaxRa0-8"));
      self->_presentMaxRa = objc_msgSend(v7, "intValue");
      objc_msgSend(v4, "objectForKey:", CFSTR("BatteryData"));
      v8 = objc_claimAutoreleasedReturnValue();
      if (v8)
      {
        v9 = (void *)v8;
        objc_msgSend(v4, "objectForKey:", CFSTR("BatteryData"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "objectForKey:", CFSTR("LifetimeData"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();

        if (v11)
        {
          objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("MaximumRa0-8"));
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = v12;
          lifetimeMaxRa = self->_lifetimeMaxRa;
          v15 = lifetimeMaxRa != -1;
          if (lifetimeMaxRa == -1 || v12 && objc_msgSend(v12, "intValue") != self->_lifetimeMaxRa)
            self->_lifetimeMaxRa = objc_msgSend(v13, "intValue");
          else
            v15 = 0;
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v15);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "setObject:forKeyedSubscript:", v17, CFSTR("LifetimeMaxRa0-8Updated"));

        }
      }
    }
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("ChemicalWeightedRa"));
  v18 = objc_claimAutoreleasedReturnValue();
  if (v18
    && (v19 = (void *)v18,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("ChemicalWeightedRa")),
        v20 = (void *)objc_claimAutoreleasedReturnValue(),
        v21 = objc_msgSend(v20, "intValue"),
        presentChemicalWeightedRa = self->_presentChemicalWeightedRa,
        v20,
        v19,
        v21 == presentChemicalWeightedRa))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("ChemicalWeightedRa"));
    v23 = 0;
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("ChemicalWeightedRa"));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentChemicalWeightedRa = objc_msgSend(v24, "intValue");

    ADClientSetValueForScalarKey();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", -[PLBatteryAgent presentChemicalWeightedRa](self, "presentChemicalWeightedRa"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent lastBatteryConfigEntry](self, "lastBatteryConfigEntry");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "setObject:forKeyedSubscript:", v25, CFSTR("ChemicalWeightedRa"));

    v23 = 1;
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("WeightedRa"));
  v27 = objc_claimAutoreleasedReturnValue();
  if (v27
    && (v28 = (void *)v27,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("WeightedRa")),
        v29 = (void *)objc_claimAutoreleasedReturnValue(),
        v30 = objc_msgSend(v29, "intValue"),
        presentWeightedRa = self->_presentWeightedRa,
        v29,
        v28,
        v30 == presentWeightedRa))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("WeightedRa"));
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("WeightedRa"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentWeightedRa = objc_msgSend(v32, "intValue");

    ADClientSetValueForScalarKey();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", -[PLBatteryAgent presentWeightedRa](self, "presentWeightedRa"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent lastBatteryConfigEntry](self, "lastBatteryConfigEntry");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "setObject:forKeyedSubscript:", v33, CFSTR("WeightedRa"));

    v23 = 1;
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryHealthMetric"));
  v35 = objc_claimAutoreleasedReturnValue();
  if (v35
    && (v36 = (void *)v35,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryHealthMetric")),
        v37 = (void *)objc_claimAutoreleasedReturnValue(),
        v38 = objc_msgSend(v37, "intValue"),
        presentBatteryHealthMetric = self->_presentBatteryHealthMetric,
        v37,
        v36,
        v38 == presentBatteryHealthMetric))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("BatteryHealthMetric"));
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryHealthMetric"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentBatteryHealthMetric = objc_msgSend(v40, "intValue");

    ADClientSetValueForScalarKey();
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PeakPerformanceCapacity"));
  v41 = objc_claimAutoreleasedReturnValue();
  if (!v41
    || (v42 = (void *)v41,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PeakPerformanceCapacity")),
        v43 = (void *)objc_claimAutoreleasedReturnValue(),
        v44 = objc_msgSend(v43, "intValue"),
        presentPeakPerformanceCapacity = self->_presentPeakPerformanceCapacity,
        v43,
        v42,
        v44 != presentPeakPerformanceCapacity))
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PeakPerformanceCapacity"));
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentPeakPerformanceCapacity = objc_msgSend(v46, "intValue");

    ADClientSetValueForScalarKey();
    if (!v23)
      goto LABEL_32;
    goto LABEL_31;
  }
  objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("PeakPerformanceCapacity"));
  if (v23)
  {
LABEL_31:
    -[PLBatteryAgent lastBatteryConfigEntry](self, "lastBatteryConfigEntry");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent logBatteryConfigToCA:](self, "logBatteryConfigToCA:", v47);

  }
LABEL_32:
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("OCVCount"));
  v48 = objc_claimAutoreleasedReturnValue();
  if (v48
    && (v49 = (void *)v48,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("OCVCount")),
        v50 = (void *)objc_claimAutoreleasedReturnValue(),
        v51 = objc_msgSend(v50, "intValue"),
        presentOCVCount = self->_presentOCVCount,
        v50,
        v49,
        v51 == presentOCVCount))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("OCVCount"));
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("OCVCount"));
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentOCVCount = objc_msgSend(v53, "intValue");

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("OCV"));
  v54 = objc_claimAutoreleasedReturnValue();
  if (v54
    && (v55 = (void *)v54,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("OCV")),
        v56 = (void *)objc_claimAutoreleasedReturnValue(),
        v57 = objc_msgSend(v56, "intValue"),
        presentOCV = self->_presentOCV,
        v56,
        v55,
        v57 == presentOCV))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("OCV"));
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("OCV"));
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentOCV = objc_msgSend(v59, "intValue");

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("RaUpdateDisqualified"));
  v60 = objc_claimAutoreleasedReturnValue();
  if (v60
    && (v61 = (void *)v60,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("RaUpdateDisqualified")),
        v62 = (void *)objc_claimAutoreleasedReturnValue(),
        v63 = objc_msgSend(v62, "intValue"),
        presentRaUpdateDisqualified = self->_presentRaUpdateDisqualified,
        v62,
        v61,
        v63 == presentRaUpdateDisqualified))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("RaUpdateDisqualified"));
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("RaUpdateDisqualified"));
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentRaUpdateDisqualified = objc_msgSend(v65, "intValue");

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("QmaxUpdateDisqualified"));
  v66 = objc_claimAutoreleasedReturnValue();
  if (v66
    && (v67 = (void *)v66,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("QmaxUpdateDisqualified")),
        v68 = (void *)objc_claimAutoreleasedReturnValue(),
        v69 = objc_msgSend(v68, "intValue"),
        presentQmaxUpdateDisqualified = self->_presentQmaxUpdateDisqualified,
        v68,
        v67,
        v69 == presentQmaxUpdateDisqualified))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("QmaxUpdateDisqualified"));
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("QmaxUpdateDisqualified"));
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentQmaxUpdateDisqualified = objc_msgSend(v71, "intValue");

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("TimeSinceLastOCV"));
  v72 = objc_claimAutoreleasedReturnValue();
  if (v72
    && (v73 = (void *)v72,
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("TimeSinceLastOCV")),
        v74 = (void *)objc_claimAutoreleasedReturnValue(),
        v75 = objc_msgSend(v74, "intValue"),
        presentTimeSinceLastOCV = self->_presentTimeSinceLastOCV,
        v74,
        v73,
        v75 == presentTimeSinceLastOCV))
  {
    objc_msgSend(v5, "setObject:forKeyedSubscript:", 0, CFSTR("TimeSinceLastOCV"));
  }
  else
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("TimeSinceLastOCV"));
    v77 = (void *)objc_claimAutoreleasedReturnValue();
    self->_presentTimeSinceLastOCV = objc_msgSend(v77, "intValue");

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("ITMiscStatus"));
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent parseITMiscStatusCounters:](self, "parseITMiscStatusCounters:", v78);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v80 = MEMORY[0x1E0C809B0];
  if (v79)
  {
    -[PLBatteryAgent lastITMiscStatus](self, "lastITMiscStatus");
    v81 = (void *)objc_claimAutoreleasedReturnValue();

    if (v81)
    {
      v145[0] = v80;
      v145[1] = 3221225472;
      v145[2] = __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke;
      v145[3] = &unk_1E8579A48;
      v145[4] = self;
      v82 = (id)objc_opt_new();
      v146 = v82;
      objc_msgSend(v79, "enumerateKeysAndObjectsUsingBlock:", v145);
      if (objc_msgSend(v82, "count"))
      {
        v140 = v80;
        v141 = 3221225472;
        v142 = __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_2;
        v143 = &unk_1E8578178;
        v144 = v82;
        AnalyticsSendEventLazy();

      }
    }
    -[PLBatteryAgent setLastITMiscStatus:](self, "setLastITMiscStatus:", v79);
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryCellDisconnectCount"));
  v83 = (void *)objc_claimAutoreleasedReturnValue();

  if (v83)
  {
    -[PLBatteryAgent prevBatteryCellDisconnectCount](self, "prevBatteryCellDisconnectCount");
    v84 = objc_claimAutoreleasedReturnValue();
    if (!v84)
      goto LABEL_61;
    v85 = (void *)v84;
    -[PLBatteryAgent prevBatteryCellDisconnectCount](self, "prevBatteryCellDisconnectCount");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryCellDisconnectCount"));
    v87 = (void *)objc_claimAutoreleasedReturnValue();

    if (v86 != v87)
    {
LABEL_61:
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryCellDisconnectCount"));
      v88 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v88, "intValue");
      ADClientSetValueForScalarKey();

      v135 = v80;
      v136 = 3221225472;
      v137 = __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_3;
      v138 = &unk_1E8578178;
      v139 = v5;
      AnalyticsSendEventLazy();

    }
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryCellDisconnectCount"));
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setPrevBatteryCellDisconnectCount:](self, "setPrevBatteryCellDisconnectCount:", v89);

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("GaugeResetCounter"));
  v90 = (void *)objc_claimAutoreleasedReturnValue();

  if (v90)
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("GaugeResetCounter"));
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    v92 = objc_msgSend(v91, "intValue");

    -[PLBatteryAgent prevGGResetCount](self, "prevGGResetCount");
    v93 = (void *)objc_claimAutoreleasedReturnValue();

    if (v93)
    {
      -[PLBatteryAgent prevGGResetCount](self, "prevGGResetCount");
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      v95 = (void *)objc_msgSend(v94, "intValue");
    }
    else
    {
      +[PLEventBackwardBatteryEntry entryKey](PLEventBackwardBatteryEntry, "entryKey");
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLOperator storage](self, "storage");
      v96 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v96, "lastEntryForKey:", v94);
      v97 = (void *)objc_claimAutoreleasedReturnValue();

      if (v97)
      {
        objc_msgSend(v97, "objectForKeyedSubscript:", CFSTR("GaugeResetCounter"));
        v95 = (void *)objc_claimAutoreleasedReturnValue();

        if (v95)
        {
          objc_msgSend(v97, "objectForKeyedSubscript:", CFSTR("GaugeResetCounter"));
          v98 = (void *)objc_claimAutoreleasedReturnValue();
          v95 = (void *)objc_msgSend(v98, "intValue");

        }
      }
      else
      {
        v95 = 0;
      }

      v80 = MEMORY[0x1E0C809B0];
    }

    v99 = (v92 - (_DWORD)v95);
    if ((int)v99 >= 1)
    {
      MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.GaugeResetCounter"), v99);
      v130 = v80;
      v131 = 3221225472;
      v132 = __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_4;
      v133 = &__block_descriptor_36_e19___NSDictionary_8__0l;
      v134 = v99;
      AnalyticsSendEventLazy();
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("GaugeResetCounter"));
      v100 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent setPrevGGResetCount:](self, "setPrevGGResetCount:", v100);

    }
    -[PLBatteryAgent prevGGResetCount](self, "prevGGResetCount");
    v101 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v101)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v95);
      v102 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent setPrevGGResetCount:](self, "setPrevGGResetCount:", v102);

    }
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("DOD0"));
  v103 = (void *)objc_claimAutoreleasedReturnValue();

  if (v103)
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("DOD0"));
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    v105 = objc_msgSend(v104, "intValue");

    -[PLBatteryAgent lastDOD0](self, "lastDOD0");
    v106 = objc_claimAutoreleasedReturnValue();
    if (v106)
    {
      v107 = (void *)v106;
      -[PLBatteryAgent lastDOD0](self, "lastDOD0");
      v108 = (void *)objc_claimAutoreleasedReturnValue();
      v109 = objc_msgSend(v108, "intValue");

      if (v109 != (_DWORD)v105)
      {
        MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.DOD0Updated"), 1);
        AnalyticsSendEventLazy();
      }
    }
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v105);
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setLastDOD0:](self, "setLastDOD0:", v110);

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("VacVoltageLimit"));
  v111 = (void *)objc_claimAutoreleasedReturnValue();

  if (v111)
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("VacVoltageLimit"));
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    v113 = objc_msgSend(v112, "intValue");

    -[PLBatteryAgent lastVacVoltageLimit](self, "lastVacVoltageLimit");
    v114 = objc_claimAutoreleasedReturnValue();
    if (v114)
    {
      v115 = (void *)v114;
      -[PLBatteryAgent lastVacVoltageLimit](self, "lastVacVoltageLimit");
      v116 = (void *)objc_claimAutoreleasedReturnValue();
      v117 = objc_msgSend(v116, "intValue");

      if (v117 != (_DWORD)v113)
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v113);
        v118 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLBatteryAgent setLastVacVoltageLimit:](self, "setLastVacVoltageLimit:", v118);

      }
    }
    v125 = v80;
    v126 = 3221225472;
    v127 = __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_6;
    v128 = &__block_descriptor_36_e19___NSDictionary_8__0l;
    v129 = v113;
    AnalyticsSendEventLazy();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v113);
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setLastVacVoltageLimit:](self, "setLastVacVoltageLimit:", v119);

  }
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("CurrentSenseMonitorStatus"));
  v120 = (void *)objc_claimAutoreleasedReturnValue();

  if (v120)
  {
    if (-[PLBatteryAgent csmOverrideValue](self, "csmOverrideValue"))
    {
      PLLogCommon();
      v121 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v121, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_1CAF47000, v121, OS_LOG_TYPE_DEBUG, "csm: overriding value", buf, 2u);
      }

      objc_msgSend(v5, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("CurrentSenseMonitorStatus"));
    }
    -[PLBatteryAgent updateCurrentSenseMonitorStatusWithEntry:](self, "updateCurrentSenseMonitorStatusWithEntry:", v5);
  }
  -[PLOperator logEntry:](self, "logEntry:", v5);
  -[PLBatteryAgent logBatteryEntry:](self, "logBatteryEntry:", v5);
  v16 = v5;

LABEL_92:
  return v16;
}

void __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = a2;
  v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "lastITMiscStatus");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", v13);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "intValue");

    v9 = objc_msgSend(v5, "intValue");
    v10 = v9 - v8;
    if (v9 >= v8)
      v11 = v10;
    else
      v11 = v10 + 4;
    if ((int)v11 >= 1)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v12, v13);

      MEMORY[0x1D179B7DC](objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("com.apple.power.battery.ITMiscStatus.%@.count"), v13), v11);
    }
  }

}

- (NSDictionary)lastITMiscStatus
{
  return (NSDictionary *)objc_getProperty(self, a2, 200, 1);
}

- (NSNumber)prevGGResetCount
{
  return (NSNumber *)objc_getProperty(self, a2, 768, 1);
}

- (NSNumber)prevBatteryCellDisconnectCount
{
  return (NSNumber *)objc_getProperty(self, a2, 776, 1);
}

- (NSNumber)lastVacVoltageLimit
{
  return (NSNumber *)objc_getProperty(self, a2, 320, 1);
}

- (NSNumber)lastDOD0
{
  return (NSNumber *)objc_getProperty(self, a2, 312, 1);
}

- (void)setPrevBatteryCellDisconnectCount:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 776);
}

- (void)setLastITMiscStatus:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 200);
}

- (void)setLastDOD0:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 312);
}

- (id)presentMaxRaFromRawData:(id)a3
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  int v16;
  id v17;
  void *v18;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", -2147483647);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("RaTableRaw"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "firstObject");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent parseRawRaTableData:](self, "parseRawRaTableData:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v9, "count") == 15)
    {
      v20 = v7;
      v23 = 0u;
      v24 = 0u;
      v21 = 0u;
      v22 = 0u;
      objc_msgSend(v9, "subarrayWithRange:", 0, 8);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v22;
        do
        {
          for (i = 0; i != v12; ++i)
          {
            if (*(_QWORD *)v22 != v13)
              objc_enumerationMutation(v10);
            v15 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
            v16 = objc_msgSend(v15, "intValue");
            if (v16 > (int)objc_msgSend(v5, "intValue"))
            {
              v17 = v15;

              v5 = v17;
            }
          }
          v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
        }
        while (v12);
      }

      v5 = v5;
      v18 = v5;
      v7 = v20;
    }
    else
    {
      v18 = 0;
    }

  }
  else
  {
    v18 = 0;
  }

  return v18;
}

- (id)parseRawRaTableData:(id)a3
{
  id v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  id v12;
  unsigned int v13;
  void *v14;

  v3 = a3;
  v4 = (void *)objc_opt_new();
  if (v3)
  {
    v5 = objc_msgSend(v3, "length");
    if (v5 >= 2)
    {
      v6 = v5;
      v7 = objc_msgSend(objc_retainAutorelease(v3), "bytes");
      if (v6 >= 4)
      {
        v8 = v6 >> 1;
        if (v6 >> 1 <= 2)
          v8 = 2;
        v9 = v8 - 1;
        v10 = (unsigned __int8 *)(v7 + 1);
        do
        {
          v11 = *(v10 - 1);
          v12 = objc_alloc(MEMORY[0x1E0CB37E8]);
          v13 = *v10;
          v10 += 2;
          v14 = (void *)objc_msgSend(v12, "initWithUnsignedLong:", v13 | (unint64_t)(v11 << 8));
          objc_msgSend(v4, "addObject:", v14);

          --v9;
        }
        while (v9);
      }
    }
  }

  return v4;
}

- (void)logBatteryEntry:(id)a3
{
  id v4;
  void *v5;
  id v6;

  v4 = a3;
  objc_msgSend(v4, "dictionary");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "entryDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[PLOperator logForSubsystem:category:data:date:](self, "logForSubsystem:category:data:date:", CFSTR("BatteryMetrics"), CFSTR("Battery"), v6, v5);
}

- (id)parseITMiscStatusCounters:(id)a3
{
  unsigned int v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[8];
  _QWORD v15[9];

  v15[8] = *MEMORY[0x1E0C80C00];
  if (!a3)
    return 0;
  v3 = objc_msgSend(a3, "unsignedShortValue");
  v14[0] = CFSTR("QmaxDisqualified");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v3 >> 14);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v4;
  v14[1] = CFSTR("QmaxDOD0");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (v3 >> 12) & 3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v5;
  v14[2] = CFSTR("DOD0Update");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (v3 >> 10) & 3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = v6;
  v14[3] = CFSTR("QmaxAtEOC");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (v3 >> 8) & 3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[3] = v7;
  v14[4] = CFSTR("FastQmaxUpdate");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v3 >> 6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v15[4] = v8;
  v14[5] = CFSTR("QmaxUpdate");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (v3 >> 4) & 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[5] = v9;
  v14[6] = CFSTR("RaUpdate");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (v3 >> 2) & 3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v15[6] = v10;
  v14[7] = CFSTR("ITSimulation");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v3 & 3);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v15[7] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

- (void)setLastVacVoltageLimit:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 320);
}

- (BOOL)isEABatteryConnectedNow
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  char v9;
  BOOL v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent getIOPSDevices](self, "getIOPSDevices");
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        -[PLBatteryAgent getBaseIdentifierFromDevice:](self, "getBaseIdentifierFromDevice:", *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * i), (_QWORD)v12);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v8, "isEqualToString:", CFSTR("1452-5013")) & 1) != 0
          || (objc_msgSend(v8, "isEqualToString:", CFSTR("1452-5016")) & 1) != 0)
        {

LABEL_13:
          v10 = 1;
          goto LABEL_15;
        }
        v9 = objc_msgSend(v8, "isEqualToString:", CFSTR("1452-5017"));

        if ((v9 & 1) != 0)
          goto LABEL_13;
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      v10 = 0;
      if (v5)
        continue;
      break;
    }
  }
  else
  {
    v10 = 0;
  }
LABEL_15:

  return v10;
}

- (BOOL)isEAPencilConnectedNow
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  char v9;
  BOOL v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent getIOPSDevices](self, "getIOPSDevices");
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        -[PLBatteryAgent getBaseIdentifierFromDevice:](self, "getBaseIdentifierFromDevice:", *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * i), (_QWORD)v12);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "isEqualToString:", CFSTR("76-546"));

        if ((v9 & 1) != 0)
        {
          v10 = 1;
          goto LABEL_11;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v5)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_11:

  return v10;
}

- (id)getIOPSDevices
{
  void *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  const void *v11;
  const void *v12;
  const __CFArray *v13;
  const __CFArray *v14;
  CFIndex Count;
  CFIndex v16;
  CFIndex v17;
  const void *ValueAtIndex;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  const void *v35;
  void *v36;
  _QWORD v37[5];
  _QWORD block[5];
  _QWORD v39[5];
  uint8_t buf[4];
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 0x1E0D7F000uLL;
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v4 = objc_opt_class();
    v39[0] = MEMORY[0x1E0C809B0];
    v39[1] = 3221225472;
    v39[2] = __32__PLBatteryAgent_getIOPSDevices__block_invoke;
    v39[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v39[4] = v4;
    if (qword_1ED887668 != -1)
      dispatch_once(&qword_1ED887668, v39);
    if (byte_1ED887570)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("check Connected devices ..."));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "lastPathComponent");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent getIOPSDevices]");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "logMessage:fromFile:fromFunction:fromLineNumber:", v5, v8, v9, 3949);

      PLLogCommon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v41 = v5;
        _os_log_debug_impl(&dword_1CAF47000, v10, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
  {
    v11 = (const void *)IOPSCopyPowerSourcesByType();
    if (!v11)
      return v2;
    v12 = v11;
    v13 = IOPSCopyPowerSourcesList(v11);
    if (v13)
    {
      v14 = v13;
      Count = CFArrayGetCount(v13);
      if (Count >= 1)
      {
        v16 = Count;
        v17 = 0;
        v36 = v2;
        v35 = v12;
        do
        {
          ValueAtIndex = CFArrayGetValueAtIndex(v14, v17);
          if (ValueAtIndex)
          {
            IOPSGetPowerSourceDescription(v12, ValueAtIndex);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(*(id *)(v3 + 4000), "debugEnabled"))
            {
              v20 = objc_opt_class();
              block[0] = MEMORY[0x1E0C809B0];
              block[1] = 3221225472;
              block[2] = __32__PLBatteryAgent_getIOPSDevices__block_invoke_2365;
              block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
              block[4] = v20;
              if (qword_1ED887670 != -1)
                dispatch_once(&qword_1ED887670, block);
              if (byte_1ED887571)
              {
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s-%d: powerSourceDescription=%@"), "-[PLBatteryAgent getIOPSDevices]", 3969, v19);
                v21 = (void *)objc_claimAutoreleasedReturnValue();
                v22 = (void *)MEMORY[0x1E0D7FF98];
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                v23 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v23, "lastPathComponent");
                v24 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent getIOPSDevices]");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v22, "logMessage:fromFile:fromFunction:fromLineNumber:", v21, v24, v25, 3969);

                PLLogCommon();
                v26 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
                {
                  *(_DWORD *)buf = 138412290;
                  v41 = v21;
                  _os_log_debug_impl(&dword_1CAF47000, v26, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                }

                v2 = v36;
                v3 = 0x1E0D7F000;
                v12 = v35;
              }
            }
            objc_msgSend(v2, "addObject:", v19);

          }
          ++v17;
        }
        while (v16 != v17);
      }
      CFRelease(v14);
    }
    CFRelease(v12);
  }
  if (objc_msgSend(*(id *)(v3 + 4000), "debugEnabled"))
  {
    v27 = objc_opt_class();
    v37[0] = MEMORY[0x1E0C809B0];
    v37[1] = 3221225472;
    v37[2] = __32__PLBatteryAgent_getIOPSDevices__block_invoke_2370;
    v37[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v37[4] = v27;
    if (qword_1ED887678 != -1)
      dispatch_once(&qword_1ED887678, v37);
    if (byte_1ED887572)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Connected devices=%@"), v2);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "lastPathComponent");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent getIOPSDevices]");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "logMessage:fromFile:fromFunction:fromLineNumber:", v28, v31, v32, 3983);

      PLLogCommon();
      v33 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v41 = v28;
        _os_log_debug_impl(&dword_1CAF47000, v33, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  return v2;
}

- (id)getBaseIdentifierFromDevice:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  _QWORD block[5];
  uint8_t buf[4];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Vendor ID");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKey:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "intValue");

    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Product ID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKey:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "intValue");

    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v10 = objc_opt_class();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __46__PLBatteryAgent_getBaseIdentifierFromDevice___block_invoke;
      block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      block[4] = v10;
      if (qword_1ED887680 != -1)
        dispatch_once(&qword_1ED887680, block);
      if (byte_1ED887573)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s-%d: vendorID=%d, productID=%d"), "-[PLBatteryAgent getBaseIdentifierFromDevice:]", 3994, v6, v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "lastPathComponent");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent getBaseIdentifierFromDevice:]");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "logMessage:fromFile:fromFunction:fromLineNumber:", v11, v14, v15, 3994);

        PLLogCommon();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v21 = v11;
          _os_log_debug_impl(&dword_1CAF47000, v16, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    v17 = 0;
    if ((_DWORD)v6 != 0xFFFF && (_DWORD)v6 && (_DWORD)v9 && (_DWORD)v9 != 0xFFFF)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%d-%d"), v6, v9);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    v17 = 0;
  }

  return v17;
}

+ (BOOL)hasExternalAccessory
{
  return 1;
}

- (void)handleTLCNotification:(id)a3 externalConnected:(BOOL)a4
{
  _BOOL8 v4;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  NSObject *v13;
  int v14;
  double v15;
  uint64_t v16;

  v4 = a4;
  v16 = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent lastTLCEntryStartTime](self, "lastTLCEntryStartTime", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent lastTLCEntryStartTime](self, "lastTLCEntryStartTime");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "timeIntervalSinceDate:", v8);
    v10 = v9;

  }
  else
  {
    v10 = 0.0;
  }
  if (-[PLBatteryAgent demoMode](self, "demoMode"))
  {
    objc_msgSend(MEMORY[0x1E0D7FFA0], "objectForKey:", CFSTR("BUICTL_TLCAggregatedCounter"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v11)
    {
      v10 = (double)(int)objc_msgSend(v11, "intValue");
      PLLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v14 = 134217984;
        v15 = v10;
        _os_log_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEFAULT, "Overriding TLC duration from BUICTL to: %f", (uint8_t *)&v14, 0xCu);
      }

    }
  }
  -[PLBatteryAgent showOrHideTLCNotification:timeInTLC:](self, "showOrHideTLCNotification:timeInTLC:", v4, v10);
}

- (NSDate)lastTLCEntryStartTime
{
  return (NSDate *)objc_getProperty(self, a2, 528, 1);
}

- (void)showOrHideTLCNotification:(BOOL)a3 timeInTLC:(double)a4
{
  _BOOL4 v5;
  NSObject *v7;
  NSObject *v8;
  id v9;
  double v10;
  char v11;
  _BOOL4 v12;
  NSObject *v13;
  const char *v14;
  BOOL v15;
  NSObject *v16;
  _BOOL4 v17;
  uint64_t v18;
  _BOOL4 v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE v34[10];
  __int16 v35;
  double v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  _BOOL4 v40;
  uint64_t v41;

  v5 = a3;
  v41 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    v17 = -[PLBatteryAgent isTLCNotificationSurfaced](self, "isTLCNotificationSurfaced");
    -[PLBatteryAgent batteryLevelPercent](self, "batteryLevelPercent");
    v33 = 67110144;
    *(_DWORD *)v34 = v5;
    *(_WORD *)&v34[4] = 1024;
    *(_DWORD *)&v34[6] = v17;
    v35 = 2048;
    v36 = a4;
    v37 = 2048;
    v38 = v18;
    v39 = 1024;
    v40 = -[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged");
    _os_log_debug_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_DEBUG, "TLC: External Connected: %d  TLC notification surfaced: %d  TLC aggregated time: %f   Battery Level: %f  OBC Engaged: %d", (uint8_t *)&v33, 0x28u);
  }

  PLLogCommon();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    v19 = -[PLBatteryAgent cleanEnergyChargingEngaged](self, "cleanEnergyChargingEngaged");
    v33 = 67109120;
    *(_DWORD *)v34 = v19;
    _os_log_debug_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_DEBUG, "TLC: CEC Engaged: %d", (uint8_t *)&v33, 8u);
  }

  v9 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  -[PLBatteryAgent batteryLevelPercent](self, "batteryLevelPercent");
  v11 = v10 >= 95.0 || !v5;
  if (a4 < 960.0
    || (v11 & 1) != 0
    || -[PLBatteryAgent isTLCNotificationSurfaced](self, "isTLCNotificationSurfaced")
    || -[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged"))
  {
    if (-[PLBatteryAgent isTLCNotificationSurfaced](self, "isTLCNotificationSurfaced"))
    {
      if ((v11 & 1) != 0)
      {
        v12 = 1;
      }
      else
      {
        v15 = -[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged");
        v12 = 1;
        if (a4 >= 960.0 && !v15 && !-[PLBatteryAgent cleanEnergyChargingEngaged](self, "cleanEnergyChargingEngaged"))
        {
          if (-[PLBatteryAgent fixedChargingEngaged](self, "fixedChargingEngaged"))
            v12 = -[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged");
          else
            v12 = 0;
        }
      }
      PLLogCommon();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      {
        v33 = 67109120;
        *(_DWORD *)v34 = v12;
        _os_log_debug_impl(&dword_1CAF47000, v20, OS_LOG_TYPE_DEBUG, "TLC: Removal Conditions Satisfied: %d", (uint8_t *)&v33, 8u);
      }

      PLLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      v21 = os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG);
      if (v12)
      {
        if (v21)
        {
          LOWORD(v33) = 0;
          _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "TLC: aggD --> helperD to hide TLC notification", (uint8_t *)&v33, 2u);
        }

        objc_msgSend(v9, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAA0], CFSTR("ShowTLCNotification"));
LABEL_33:
        AnalyticsSendEventLazy();
        PLLogCommon();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          v33 = 138412290;
          *(_QWORD *)v34 = v9;
          _os_log_debug_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_DEBUG, "Sending Query Payload to Notification Service: %@", (uint8_t *)&v33, 0xCu);
        }

        PLQueryRegistered();
        v23 = objc_claimAutoreleasedReturnValue();
        v13 = v23;
        if (v23
          && (-[NSObject objectForKeyedSubscript:](v23, "objectForKeyedSubscript:", CFSTR("TLCNotificationState")),
              v24 = (void *)objc_claimAutoreleasedReturnValue(),
              v24,
              v24))
        {
          PLLogCommon();
          v25 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
          {
            v33 = 138412290;
            *(_QWORD *)v34 = v13;
            _os_log_debug_impl(&dword_1CAF47000, v25, OS_LOG_TYPE_DEBUG, "TLC: Entire response from Notification Service: %@", (uint8_t *)&v33, 0xCu);
          }

          -[NSObject objectForKeyedSubscript:](v13, "objectForKeyedSubscript:", CFSTR("TLCNotificationState"));
          v26 = objc_claimAutoreleasedReturnValue();
          PLLogCommon();
          v27 = objc_claimAutoreleasedReturnValue();
          v28 = v27;
          if (v26)
          {
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
            {
              v31 = -[NSObject BOOLValue](v26, "BOOLValue");
              v33 = 67109120;
              *(_DWORD *)v34 = v31;
              _os_log_debug_impl(&dword_1CAF47000, v28, OS_LOG_TYPE_DEBUG, "TLC: Reading response from Notification Service: %d", (uint8_t *)&v33, 8u);
            }

            -[PLBatteryAgent setIsTLCNotificationSurfaced:](self, "setIsTLCNotificationSurfaced:", -[NSObject BOOLValue](v26, "BOOLValue"));
            PLLogCommon();
            v29 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
            {
              v32 = -[NSObject BOOLValue](v26, "BOOLValue");
              v33 = 67109120;
              *(_DWORD *)v34 = v32;
              _os_log_debug_impl(&dword_1CAF47000, v29, OS_LOG_TYPE_DEBUG, "TLC: Writing %d response to defaults", (uint8_t *)&v33, 8u);
            }

            objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", v26, CFSTR("kPLDefaultTLCNotificationSurfaced"), 1);
            PLLogCommon();
            v28 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
            {
              v30 = objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:", CFSTR("kPLDefaultTLCNotificationSurfaced"));
              v33 = 67109120;
              *(_DWORD *)v34 = v30;
              _os_log_debug_impl(&dword_1CAF47000, v28, OS_LOG_TYPE_DEBUG, "TLC: Reading Notification Surfaced Default Value: %d", (uint8_t *)&v33, 8u);
            }
          }
          else if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
          {
            v33 = 138412290;
            *(_QWORD *)v34 = 0;
            _os_log_error_impl(&dword_1CAF47000, v28, OS_LOG_TYPE_ERROR, "TLC: Invalid Notification Surfaced Boolean: %@", (uint8_t *)&v33, 0xCu);
          }

        }
        else
        {
          PLLogCommon();
          v26 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
          {
            v33 = 138412290;
            *(_QWORD *)v34 = v13;
            _os_log_debug_impl(&dword_1CAF47000, v26, OS_LOG_TYPE_DEBUG, "TLC: Invalid response from Notification Service: %@", (uint8_t *)&v33, 0xCu);
          }
        }

        goto LABEL_55;
      }
      if (v21)
      {
        LOWORD(v33) = 0;
        v14 = "TLC: removal conditions not met, notification should remain";
        goto LABEL_48;
      }
    }
    else
    {
      PLLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v33) = 0;
        v14 = "TLC conditions not met OR TLC notification already surfaced";
LABEL_48:
        _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, v14, (uint8_t *)&v33, 2u);
      }
    }
LABEL_55:

    goto LABEL_56;
  }
  if (!-[PLBatteryAgent cleanEnergyChargingEngaged](self, "cleanEnergyChargingEngaged"))
  {
    PLLogCommon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v33) = 0;
      _os_log_debug_impl(&dword_1CAF47000, v16, OS_LOG_TYPE_DEBUG, "TLC: aggD --> helperD to show TLC notification", (uint8_t *)&v33, 2u);
    }

    objc_msgSend(v9, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], CFSTR("ShowTLCNotification"));
    goto LABEL_33;
  }
LABEL_56:

}

- (BOOL)isTLCNotificationSurfaced
{
  return self->_isTLCNotificationSurfaced;
}

- (BOOL)demoMode
{
  return self->_demoMode;
}

- (double)batteryLevelPercent
{
  return self->_batteryLevelPercent;
}

- (void)cancelEALogging
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  uint64_t v25;
  uint64_t block;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t v30;
  uint8_t buf[4];
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v3 = objc_opt_class();
    block = MEMORY[0x1E0C809B0];
    v27 = 3221225472;
    v28 = __33__PLBatteryAgent_cancelEALogging__block_invoke;
    v29 = &__block_descriptor_40_e5_v8__0lu32l8;
    v30 = v3;
    if (qword_1ED887650 != -1)
      dispatch_once(&qword_1ED887650, &block);
    if (byte_1ED88756D)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("In Cancel EA Logging"));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "lastPathComponent");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent cancelEALogging]");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "logMessage:fromFile:fromFunction:fromLineNumber:", v4, v7, v8, 3875);

      PLLogCommon();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v32 = v4;
        _os_log_debug_impl(&dword_1CAF47000, v9, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  -[PLBatteryAgent EABatteryTimer](self, "EABatteryTimer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    -[PLBatteryAgent logEABatteryConnectedTimeToAnalyticsWithEAConnectionState:](self, "logEABatteryConnectedTimeToAnalyticsWithEAConnectionState:", 1);
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v11 = objc_opt_class();
      v21 = MEMORY[0x1E0C809B0];
      v22 = 3221225472;
      v23 = __33__PLBatteryAgent_cancelEALogging__block_invoke_2355;
      v24 = &__block_descriptor_40_e5_v8__0lu32l8;
      v25 = v11;
      if (qword_1ED887658 != -1)
        dispatch_once(&qword_1ED887658, &v21);
      if (byte_1ED88756E)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("In Cancel EA Logging: Cancelled timer"), v21, v22, v23, v24, v25);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "lastPathComponent");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent cancelEALogging]");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "logMessage:fromFile:fromFunction:fromLineNumber:", v12, v15, v16, 3879);

        PLLogCommon();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v32 = v12;
          _os_log_debug_impl(&dword_1CAF47000, v17, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    -[PLBatteryAgent EABatteryTimer](self, "EABatteryTimer", v21, v22, v23, v24, v25, block, v27, v28, v29, v30);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "setTimerActive:", 0);

    -[PLBatteryAgent EABatteryTimer](self, "EABatteryTimer");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "invalidate");

    -[PLBatteryAgent setEABatteryTimer:](self, "setEABatteryTimer:", 0);
    -[PLBatteryAgent significantBatteryChangeTimer](self, "significantBatteryChangeTimer");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "cancel");

    -[PLBatteryAgent setLastkIOPSAppleBatteryCaseCumulativeCurrentKey:](self, "setLastkIOPSAppleBatteryCaseCumulativeCurrentKey:", 0);
  }
}

- (PLTimer)EABatteryTimer
{
  return (PLTimer *)objc_getProperty(self, a2, 216, 1);
}

+ (BOOL)hasLightning
{
  return 1;
}

uint64_t __36__PLBatteryAgent_hasWirelessCharger__block_invoke()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  _MergedGlobals_3 = result;
  return result;
}

+ (BOOL)supportsFixedLimitCharging
{
  if (qword_1ED8875C8 != -1)
    dispatch_once(&qword_1ED8875C8, &__block_literal_global_1160);
  return byte_1ED887561;
}

uint64_t __44__PLBatteryAgent_supportsFixedLimitCharging__block_invoke()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  byte_1ED887561 = result;
  return result;
}

+ (BOOL)supportsxFlags
{
  if (qword_1ED8875D0 != -1)
    dispatch_once(&qword_1ED8875D0, &__block_literal_global_1163);
  return byte_1ED887562;
}

uint64_t __32__PLBatteryAgent_supportsxFlags__block_invoke()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  byte_1ED887562 = result;
  return result;
}

+ (BOOL)supportsSmartCharging
{
  return objc_msgSend(MEMORY[0x1E0D80020], "isiPhone");
}

+ (BOOL)supportsCleanEnergyCharging
{
  return objc_msgSend(MEMORY[0x1E0D80020], "isiPhone");
}

+ (void)load
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)&OBJC_METACLASS___PLBatteryAgent;
  objc_msgSendSuper2(&v2, sel_load);
}

+ (id)entryEventIntervalDefinitions
{
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[2];
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v7[0] = CFSTR("GasGauge");
  objc_msgSend(a1, "entryEventIntervalDefinitionGasGauge");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[1] = CFSTR("Charging");
  v8[0] = v3;
  objc_msgSend(a1, "entryEventIntervalDefinitionCharging");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[1] = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, v7, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

+ (id)entryEventIntervalDefinitionGasGauge
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[11];
  _QWORD v31[11];
  uint64_t v32;
  void *v33;
  _QWORD v34[2];
  _QWORD v35[4];

  v35[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80078], "hasGasGauge"))
    return MEMORY[0x1E0C9AA70];
  v34[0] = *MEMORY[0x1E0D80298];
  v32 = *MEMORY[0x1E0D80318];
  v33 = &unk_1E8653300;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v35[0] = v27;
  v34[1] = *MEMORY[0x1E0D802F0];
  v30[0] = CFSTR("timestampEnd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_DateFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v25;
  v30[1] = CFSTR("AvgCurrent");
  v2 = *MEMORY[0x1E0D80360];
  v28[0] = *MEMORY[0x1E0D80358];
  v28[1] = v2;
  v29[0] = &unk_1E8633B28;
  v29[1] = CFSTR("mA");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 2);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v24;
  v30[2] = CFSTR("MinCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "commonTypeDict_IntegerFormat_withUnit_mA");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v22;
  v30[3] = CFSTR("MaxCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "commonTypeDict_IntegerFormat_withUnit_mA");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v20;
  v30[4] = CFSTR("MinCurrentOffset");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat_withUnit_s");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v18;
  v30[5] = CFSTR("MaxCurrentOffset");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat_withUnit_s");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v16;
  v30[6] = CFSTR("Readings");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v31[6] = v14;
  v30[7] = CFSTR("AvgPower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_RealFormat_withUnit_mW");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v31[7] = v4;
  v30[8] = CFSTR("TotalEnergy");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_RealFormat_withUnit_mWhr");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v31[8] = v6;
  v30[9] = CFSTR("OverAllEnergy");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_RealFormat_withUnit_mWhr");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v31[9] = v8;
  v30[10] = CFSTR("OverAllPower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_RealFormat_withUnit_mWhr");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v31[10] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 11);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v35[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v35, v34, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventIntervalDefinitionCharging
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v13[3];
  _QWORD v14[3];
  _QWORD v15[3];
  _QWORD v16[3];
  _QWORD v17[2];
  _QWORD v18[3];

  v18[2] = *MEMORY[0x1E0C80C00];
  v17[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80340];
  v15[0] = *MEMORY[0x1E0D80318];
  v15[1] = v2;
  v16[0] = &unk_1E8653310;
  v16[1] = &unk_1E8633B40;
  v15[2] = *MEMORY[0x1E0D80338];
  v16[2] = &unk_1E8653320;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = v3;
  v17[1] = *MEMORY[0x1E0D802F0];
  v13[0] = CFSTR("timestampEnd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_DateFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v5;
  v13[1] = CFSTR("intervalType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v7;
  v13[2] = CFSTR("chargeLimitTargetSoC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14[2] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v18[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, v17, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventNoneDefinitions
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v6[2];
  _QWORD v7[3];

  v7[2] = *MEMORY[0x1E0C80C00];
  v6[0] = CFSTR("BatteryConfig");
  +[PLBatteryAgent entryEventNoneDefinitionBatteryConfig](PLBatteryAgent, "entryEventNoneDefinitionBatteryConfig");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6[1] = CFSTR("UserType");
  v7[0] = v2;
  +[PLBatteryAgent entryEventNoneDefinitionUserType](PLBatteryAgent, "entryEventNoneDefinitionUserType");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v7, v6, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

+ (id)entryEventNoneDefinitionBatteryConfig
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  void *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  void *v213;
  void *v214;
  void *v215;
  void *v216;
  void *v217;
  void *v218;
  void *v219;
  void *v220;
  void *v221;
  void *v222;
  void *v223;
  void *v224;
  void *v225;
  void *v226;
  void *v227;
  void *v228;
  void *v229;
  void *v230;
  void *v231;
  void *v232;
  void *v233;
  void *v234;
  void *v235;
  void *v236;
  void *v237;
  void *v238;
  _QWORD v239[2];
  _QWORD v240[2];
  _QWORD v241[2];
  _QWORD v242[2];
  _QWORD v243[2];
  _QWORD v244[2];
  _QWORD v245[116];
  _QWORD v246[116];
  _QWORD v247[3];
  _QWORD v248[3];
  _QWORD v249[2];
  _QWORD v250[4];

  v250[2] = *MEMORY[0x1E0C80C00];
  v249[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80340];
  v247[0] = *MEMORY[0x1E0D80318];
  v247[1] = v2;
  v248[0] = &unk_1E8653330;
  v248[1] = &unk_1E8633B40;
  v247[2] = *MEMORY[0x1E0D80338];
  v248[2] = &unk_1E8653340;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v248, v247, 3);
  v238 = (void *)objc_claimAutoreleasedReturnValue();
  v250[0] = v238;
  v249[1] = *MEMORY[0x1E0D802F0];
  v245[0] = CFSTR("QmaxCell0");
  v4 = *MEMORY[0x1E0D802E8];
  v243[0] = *MEMORY[0x1E0D80358];
  v3 = v243[0];
  v243[1] = v4;
  v244[0] = &unk_1E8633B58;
  v244[1] = &unk_1E86509A8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v244, v243, 2);
  v237 = (void *)objc_claimAutoreleasedReturnValue();
  v246[0] = v237;
  v245[1] = CFSTR("Flags");
  v241[0] = v3;
  v241[1] = v4;
  v242[0] = &unk_1E8633B58;
  v242[1] = &unk_1E86509C0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v242, v241, 2);
  v236 = (void *)objc_claimAutoreleasedReturnValue();
  v246[1] = v236;
  v245[2] = CFSTR("NominalChargeCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v235 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v235, "commonTypeDict_IntegerFormat");
  v234 = (void *)objc_claimAutoreleasedReturnValue();
  v246[2] = v234;
  v245[3] = CFSTR("AppleRawMaxCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v233 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v233, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v232 = (void *)objc_claimAutoreleasedReturnValue();
  v246[3] = v232;
  v245[4] = CFSTR("TotalOperatingTime");
  v5 = *MEMORY[0x1E0D80360];
  v239[0] = v3;
  v239[1] = v5;
  v240[0] = &unk_1E8633B58;
  v240[1] = CFSTR("hr");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v240, v239, 2);
  v231 = (void *)objc_claimAutoreleasedReturnValue();
  v246[4] = v231;
  v245[5] = CFSTR("AverageTemperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v230 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v230, "commonTypeDict_IntegerFormat");
  v229 = (void *)objc_claimAutoreleasedReturnValue();
  v246[5] = v229;
  v245[6] = CFSTR("CycleCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v228 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v228, "commonTypeDict_IntegerFormat");
  v227 = (void *)objc_claimAutoreleasedReturnValue();
  v246[6] = v227;
  v245[7] = CFSTR("CycleCountLastQmax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v226 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v226, "commonTypeDict_IntegerFormat");
  v225 = (void *)objc_claimAutoreleasedReturnValue();
  v246[7] = v225;
  v245[8] = CFSTR("EEEECode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v224 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v224, "commonTypeDict_StringFormat");
  v223 = (void *)objc_claimAutoreleasedReturnValue();
  v246[8] = v223;
  v245[9] = CFSTR("FlashWriteCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v222 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v222, "commonTypeDict_IntegerFormat");
  v221 = (void *)objc_claimAutoreleasedReturnValue();
  v246[9] = v221;
  v245[10] = CFSTR("HighAvgCurrentLastRun");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v220 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v220, "commonTypeDict_IntegerFormat");
  v219 = (void *)objc_claimAutoreleasedReturnValue();
  v246[10] = v219;
  v245[11] = CFSTR("ITMiscStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v218 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v218, "commonTypeDict_IntegerFormat");
  v217 = (void *)objc_claimAutoreleasedReturnValue();
  v246[11] = v217;
  v245[12] = CFSTR("ITSimulationCounter");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v216 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v216, "commonTypeDict_IntegerFormat");
  v215 = (void *)objc_claimAutoreleasedReturnValue();
  v246[12] = v215;
  v245[13] = CFSTR("LifetimeUPOCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v214 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v214, "commonTypeDict_IntegerFormat");
  v213 = (void *)objc_claimAutoreleasedReturnValue();
  v246[13] = v213;
  v245[14] = CFSTR("LowAvgCurrentLastRun");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v212 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v212, "commonTypeDict_IntegerFormat");
  v211 = (void *)objc_claimAutoreleasedReturnValue();
  v246[14] = v211;
  v245[15] = CFSTR("MaximumDeltaVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v210 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v210, "commonTypeDict_IntegerFormat");
  v209 = (void *)objc_claimAutoreleasedReturnValue();
  v246[15] = v209;
  v245[16] = CFSTR("MinimumDeltaVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v208 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v208, "commonTypeDict_IntegerFormat");
  v207 = (void *)objc_claimAutoreleasedReturnValue();
  v246[16] = v207;
  v245[17] = CFSTR("MaximumFCC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v206 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v206, "commonTypeDict_IntegerFormat");
  v205 = (void *)objc_claimAutoreleasedReturnValue();
  v246[17] = v205;
  v245[18] = CFSTR("MinimumFCC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v204 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v204, "commonTypeDict_IntegerFormat");
  v203 = (void *)objc_claimAutoreleasedReturnValue();
  v246[18] = v203;
  v245[19] = CFSTR("MaximumPackVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v202 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v202, "commonTypeDict_IntegerFormat");
  v201 = (void *)objc_claimAutoreleasedReturnValue();
  v246[19] = v201;
  v245[20] = CFSTR("MinimumPackVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v200 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v200, "commonTypeDict_IntegerFormat");
  v199 = (void *)objc_claimAutoreleasedReturnValue();
  v246[20] = v199;
  v245[21] = CFSTR("MaximumQmax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v198 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v198, "commonTypeDict_IntegerFormat");
  v197 = (void *)objc_claimAutoreleasedReturnValue();
  v246[21] = v197;
  v245[22] = CFSTR("MinimumQmax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v196 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v196, "commonTypeDict_IntegerFormat");
  v195 = (void *)objc_claimAutoreleasedReturnValue();
  v246[22] = v195;
  v245[23] = CFSTR("MaximumRa0-8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v194 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v194, "commonTypeDict_IntegerFormat");
  v193 = (void *)objc_claimAutoreleasedReturnValue();
  v246[23] = v193;
  v245[24] = CFSTR("MinimumRa0-8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v192 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v192, "commonTypeDict_IntegerFormat");
  v191 = (void *)objc_claimAutoreleasedReturnValue();
  v246[24] = v191;
  v245[25] = CFSTR("MaximumTemperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v190, "commonTypeDict_IntegerFormat");
  v189 = (void *)objc_claimAutoreleasedReturnValue();
  v246[25] = v189;
  v245[26] = CFSTR("MinimumTemperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v188 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v188, "commonTypeDict_IntegerFormat");
  v187 = (void *)objc_claimAutoreleasedReturnValue();
  v246[26] = v187;
  v245[27] = CFSTR("MaximumCapacityPercent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v186 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v186, "commonTypeDict_IntegerFormat");
  v185 = (void *)objc_claimAutoreleasedReturnValue();
  v246[27] = v185;
  v245[28] = CFSTR("MaximumChargeCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v184 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v184, "commonTypeDict_IntegerFormat");
  v183 = (void *)objc_claimAutoreleasedReturnValue();
  v246[28] = v183;
  v245[29] = CFSTR("MaximumDischargeCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v182 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v182, "commonTypeDict_IntegerFormat");
  v181 = (void *)objc_claimAutoreleasedReturnValue();
  v246[29] = v181;
  v245[30] = CFSTR("MaximumOverChargedCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v180 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v180, "commonTypeDict_IntegerFormat");
  v179 = (void *)objc_claimAutoreleasedReturnValue();
  v246[30] = v179;
  v245[31] = CFSTR("MaximumOverDischargedCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v178 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v178, "commonTypeDict_IntegerFormat");
  v177 = (void *)objc_claimAutoreleasedReturnValue();
  v246[31] = v177;
  v245[32] = CFSTR("OriginalBattery");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v176 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v176, "commonTypeDict_BoolFormat");
  v175 = (void *)objc_claimAutoreleasedReturnValue();
  v246[32] = v175;
  v245[33] = CFSTR("RaTable_1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v174 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v174, "commonTypeDict_IntegerFormat");
  v173 = (void *)objc_claimAutoreleasedReturnValue();
  v246[33] = v173;
  v245[34] = CFSTR("RaTable_2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v172 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v172, "commonTypeDict_IntegerFormat");
  v171 = (void *)objc_claimAutoreleasedReturnValue();
  v246[34] = v171;
  v245[35] = CFSTR("RaTable_3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v170 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v170, "commonTypeDict_IntegerFormat");
  v169 = (void *)objc_claimAutoreleasedReturnValue();
  v246[35] = v169;
  v245[36] = CFSTR("RaTable_4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v168 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v168, "commonTypeDict_IntegerFormat");
  v167 = (void *)objc_claimAutoreleasedReturnValue();
  v246[36] = v167;
  v245[37] = CFSTR("RaTable_5");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v166 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v166, "commonTypeDict_IntegerFormat");
  v165 = (void *)objc_claimAutoreleasedReturnValue();
  v246[37] = v165;
  v245[38] = CFSTR("RaTable_6");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v164 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v164, "commonTypeDict_IntegerFormat");
  v163 = (void *)objc_claimAutoreleasedReturnValue();
  v246[38] = v163;
  v245[39] = CFSTR("RaTable_7");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v162 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v162, "commonTypeDict_IntegerFormat");
  v161 = (void *)objc_claimAutoreleasedReturnValue();
  v246[39] = v161;
  v245[40] = CFSTR("RaTable_8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v160 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v160, "commonTypeDict_IntegerFormat");
  v159 = (void *)objc_claimAutoreleasedReturnValue();
  v246[40] = v159;
  v245[41] = CFSTR("RaTable_9");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v158 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v158, "commonTypeDict_IntegerFormat");
  v157 = (void *)objc_claimAutoreleasedReturnValue();
  v246[41] = v157;
  v245[42] = CFSTR("RaTable_10");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v156 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v156, "commonTypeDict_IntegerFormat");
  v155 = (void *)objc_claimAutoreleasedReturnValue();
  v246[42] = v155;
  v245[43] = CFSTR("RaTable_11");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v154, "commonTypeDict_IntegerFormat");
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  v246[43] = v153;
  v245[44] = CFSTR("RaTable_12");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v152 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v152, "commonTypeDict_IntegerFormat");
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  v246[44] = v151;
  v245[45] = CFSTR("RaTable_13");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v150 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v150, "commonTypeDict_IntegerFormat");
  v149 = (void *)objc_claimAutoreleasedReturnValue();
  v246[45] = v149;
  v245[46] = CFSTR("RaTable_14");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v148 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v148, "commonTypeDict_IntegerFormat");
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  v246[46] = v147;
  v245[47] = CFSTR("RaTable_15");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v146, "commonTypeDict_IntegerFormat");
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  v246[47] = v145;
  v245[48] = CFSTR("RaUpdateCounter");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v144 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v144, "commonTypeDict_IntegerFormat");
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  v246[48] = v143;
  v245[49] = CFSTR("RDISCnt");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v142, "commonTypeDict_IntegerFormat");
  v141 = (void *)objc_claimAutoreleasedReturnValue();
  v246[49] = v141;
  v245[50] = CFSTR("TemperatureSamples");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v140, "commonTypeDict_IntegerFormat");
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  v246[50] = v139;
  v245[51] = CFSTR("TimeAbove95Perc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v138, "commonTypeDict_IntegerFormat");
  v137 = (void *)objc_claimAutoreleasedReturnValue();
  v246[51] = v137;
  v245[52] = CFSTR("UpdateTime");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v136, "commonTypeDict_IntegerFormat");
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  v246[52] = v135;
  v245[53] = CFSTR("WeekMfd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v134 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v134, "commonTypeDict_IntegerFormat");
  v133 = (void *)objc_claimAutoreleasedReturnValue();
  v246[53] = v133;
  v245[54] = CFSTR("Wom_1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v132, "commonTypeDict_IntegerFormat");
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  v246[54] = v131;
  v245[55] = CFSTR("Wom_2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v130, "commonTypeDict_IntegerFormat");
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  v246[55] = v129;
  v245[56] = CFSTR("LastUPOTimestamp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v128, "commonTypeDict_IntegerFormat");
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  v246[56] = v127;
  v245[57] = CFSTR("ChemicalWeightedRa");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v126, "commonTypeDict_IntegerFormat");
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  v246[57] = v125;
  v245[58] = CFSTR("WeightedRa");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v124, "commonTypeDict_IntegerFormat");
  v123 = (void *)objc_claimAutoreleasedReturnValue();
  v246[58] = v123;
  v245[59] = CFSTR("DOFU");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v122 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v122, "commonTypeDict_IntegerFormat");
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  v246[59] = v121;
  v245[60] = CFSTR("BatteryHealthMetric");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v120, "commonTypeDict_IntegerFormat");
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  v246[60] = v119;
  v245[61] = CFSTR("PeakPerformanceCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v118, "commonTypeDict_IntegerFormat");
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  v246[61] = v117;
  v245[62] = CFSTR("ServiceOption");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v116, "commonTypeDict_IntegerFormat");
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  v246[62] = v115;
  v245[63] = CFSTR("QmaxUpdSuccessCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v114, "commonTypeDict_IntegerFormat");
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  v246[63] = v113;
  v245[64] = CFSTR("QmaxUpdFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v112, "commonTypeDict_IntegerFormat");
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  v246[64] = v111;
  v245[65] = CFSTR("MinimumRa8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v110, "commonTypeDict_IntegerFormat");
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  v246[65] = v109;
  v245[66] = CFSTR("MaximumRa8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v108, "commonTypeDict_IntegerFormat");
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  v246[66] = v107;
  v245[67] = CFSTR("TimeAbove95PercRange1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v106, "commonTypeDict_IntegerFormat");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  v246[67] = v105;
  v245[68] = CFSTR("TimeAbove95PercRange2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v104, "commonTypeDict_IntegerFormat");
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  v246[68] = v103;
  v245[69] = CFSTR("TimeAbove95PercRange3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v102, "commonTypeDict_IntegerFormat");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  v246[69] = v101;
  v245[70] = CFSTR("ResetCnt");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v100, "commonTypeDict_IntegerFormat");
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  v246[70] = v99;
  v245[71] = CFSTR("DailyMaxSoc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v98, "commonTypeDict_IntegerFormat");
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  v246[71] = v97;
  v245[72] = CFSTR("DailyMinSoc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v96, "commonTypeDict_IntegerFormat");
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v246[72] = v95;
  v245[73] = CFSTR("KioskModeHighSocDays");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v94, "commonTypeDict_IntegerFormat");
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  v246[73] = v93;
  v245[74] = CFSTR("KioskModeLastHighSocHours");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v92, "commonTypeDict_IntegerFormat");
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  v246[74] = v91;
  v245[75] = CFSTR("xFlags");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v90, "commonTypeDict_IntegerFormat");
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  v246[75] = v89;
  v245[76] = CFSTR("GasGaugeFirmwareVersion");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v88, "commonTypeDict_IntegerFormat");
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  v246[76] = v87;
  v245[77] = CFSTR("batteryServiceFlags");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v86, "commonTypeDict_IntegerFormat");
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  v246[77] = v85;
  v245[78] = CFSTR("BatterySerialChanged");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v84, "commonTypeDict_IntegerFormat");
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  v246[78] = v83;
  v245[79] = CFSTR("ResetDataComms");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v82, "commonTypeDict_IntegerFormat");
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  v246[79] = v81;
  v245[80] = CFSTR("ResetDataFirmware");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v80, "commonTypeDict_IntegerFormat");
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v246[80] = v79;
  v245[81] = CFSTR("ResetDataHardware");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v78, "commonTypeDict_IntegerFormat");
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  v246[81] = v77;
  v245[82] = CFSTR("ResetDataSoftware");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v76, "commonTypeDict_IntegerFormat");
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  v246[82] = v75;
  v245[83] = CFSTR("ResetDataWatchDog");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v74, "commonTypeDict_IntegerFormat");
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  v246[83] = v73;
  v245[84] = CFSTR("ResetDataSwWatchDog");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v72, "commonTypeDict_IntegerFormat");
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  v246[84] = v71;
  v245[85] = CFSTR("ResetDataHardFault");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v70, "commonTypeDict_IntegerFormat");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  v246[85] = v69;
  v245[86] = CFSTR("ResetDataCorruption");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v68, "commonTypeDict_IntegerFormat");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v246[86] = v67;
  v245[87] = CFSTR("AlgoChemID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v66, "commonTypeDict_IntegerFormat");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  v246[87] = v65;
  v245[88] = CFSTR("ServiceOption");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v64, "commonTypeDict_IntegerFormat");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v246[88] = v63;
  v245[89] = CFSTR("GGUpdateStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v62, "commonTypeDict_IntegerFormat");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v246[89] = v61;
  v245[90] = CFSTR("GGUpdateError");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v60, "commonTypeDict_IntegerFormat");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v246[90] = v59;
  v245[91] = CFSTR("GGUpdatePhase");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v58, "commonTypeDict_IntegerFormat");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v246[91] = v57;
  v245[92] = CFSTR("GGUpdateErrorPhase");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v56, "commonTypeDict_IntegerFormat");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v246[92] = v55;
  v245[93] = CFSTR("GGUpdateSubclassID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "commonTypeDict_IntegerFormat");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v246[93] = v53;
  v245[94] = CFSTR("GGUpdateBlock");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "commonTypeDict_IntegerFormat");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v246[94] = v51;
  v245[95] = CFSTR("NCCMin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "commonTypeDict_IntegerFormat");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v246[95] = v49;
  v245[96] = CFSTR("NCCMax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "commonTypeDict_IntegerFormat");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v246[96] = v47;
  v245[97] = CFSTR("TimeAtHighSoc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "commonTypeDict_RawDataFormat");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v246[97] = v45;
  v245[98] = CFSTR("LowVoltageResidencyCounters");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "commonTypeDict_RawDataFormat");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v246[98] = v43;
  v245[99] = CFSTR("ncc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "commonTypeDict_IntegerFormat");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v246[99] = v41;
  v245[100] = CFSTR("nccAlt");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "commonTypeDict_IntegerFormat");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v246[100] = v39;
  v245[101] = CFSTR("vact");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "commonTypeDict_BoolFormat");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v246[101] = v37;
  v245[102] = CFSTR("DataFlashWriteCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "commonTypeDict_IntegerFormat");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v246[102] = v35;
  v245[103] = CFSTR("calibrationFlags");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "commonTypeDict_IntegerFormat");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v246[103] = v33;
  v245[104] = CFSTR("filteredNCC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "commonTypeDict_IntegerFormat");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v246[104] = v31;
  v245[105] = CFSTR("exitTotalOperatingTime");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "commonTypeDict_IntegerFormat");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v246[105] = v29;
  v245[106] = CFSTR("svcTotalOperatingTime");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v246[106] = v27;
  v245[107] = CFSTR("LastResetReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v246[107] = v25;
  v245[108] = CFSTR("LifeTimeOCVRestCounter");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v246[108] = v23;
  v245[109] = CFSTR("LifeTimeQmaxUpdateCounter");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v246[109] = v21;
  v245[110] = CFSTR("LifeTimeOCVRestCounterHsp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v246[110] = v19;
  v245[111] = CFSTR("LifeTimeQmaxUpdateCounterHsp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v246[111] = v17;
  v245[112] = CFSTR("VacVoltageLimit");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v246[112] = v7;
  v245[113] = CFSTR("FlashWearLevelData");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_RawDataFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v246[113] = v9;
  v245[114] = CFSTR("CommunicationError");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "commonTypeDict_IntegerFormat");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v246[114] = v11;
  v245[115] = CFSTR("CoProcError");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v246[115] = v13;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v246, v245, 116);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v250[1] = v14;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v250, v249, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

+ (id)entryEventNoneDefinitionUserType
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  const __CFString *v9;
  void *v10;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  v13[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80330];
  v11[0] = *MEMORY[0x1E0D80318];
  v11[1] = v2;
  v12[0] = &unk_1E8653350;
  v12[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v3;
  v13[1] = *MEMORY[0x1E0D802F0];
  v9 = CFSTR("UserType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v10, &v9, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

+ (id)entryEventPointDefinitions
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[15];
  _QWORD v21[17];

  v21[15] = *MEMORY[0x1E0C80C00];
  v20[0] = CFSTR("BatteryShutdown");
  objc_msgSend(a1, "entryEventPointDefinitionBatteryShutdown");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = v19;
  v20[1] = CFSTR("BatteryPanicShutdown");
  objc_msgSend(a1, "entryEventPointDefinitionBatteryPanicShutdown");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v21[1] = v18;
  v20[2] = CFSTR("TrapInfo");
  objc_msgSend(a1, "entryEventPointDefinitionBatteryTrapInfo");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v21[2] = v17;
  v20[3] = CFSTR("ChargingInfo");
  objc_msgSend(a1, "entryEventPointDefinitionChargingInfo");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v21[3] = v16;
  v20[4] = CFSTR("EABatteryConfig");
  objc_msgSend(a1, "entryEventPointDefinitionEABatteryConfig");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v21[4] = v15;
  v20[5] = CFSTR("EAPencilConnect");
  +[PLBatteryAgent entryEventPointDefinitionEAPencil](PLBatteryAgent, "entryEventPointDefinitionEAPencil");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v21[5] = v14;
  v20[6] = CFSTR("BatteryUILogging");
  objc_msgSend(a1, "entryEventPointDefinitionBatteryUILogging");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v21[6] = v3;
  v20[7] = CFSTR("BatteryUIVisit");
  objc_msgSend(a1, "entryEventPointDefinitionBatteryUIVisit");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v21[7] = v4;
  v20[8] = CFSTR("PPMDebug");
  objc_msgSend(a1, "entryEventPointDefinitionPPMDebug");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v21[8] = v5;
  v20[9] = CFSTR("PPMClientMetrics");
  objc_msgSend(a1, "entryEventPointDefinitionPPMClientMetrics");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v21[9] = v6;
  v20[10] = CFSTR("UPOStepper");
  objc_msgSend(a1, "entryEventPointDefinitionUPOStepper");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v21[10] = v7;
  v20[11] = CFSTR("BatterySample");
  objc_msgSend(a1, "entryEventPointDefinitionBatterySample");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v21[11] = v8;
  v20[12] = CFSTR("CPMSControlState");
  objc_msgSend(a1, "entryEventPointDefinitionCPMSControlState");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v21[12] = v9;
  v20[13] = CFSTR("CPMSClientState");
  objc_msgSend(a1, "entryEventPointDefinitionCPMSClientState");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v21[13] = v10;
  v20[14] = CFSTR("GasGaugeReconnect");
  objc_msgSend(a1, "entryEventPointDefinitionGasGaugeReconnect");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v21[14] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 15);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (BOOL)shouldLogCPMS
{
  if (qword_1ED8875D8 != -1)
    dispatch_once(&qword_1ED8875D8, &__block_literal_global_1230);
  return byte_1ED887563;
}

uint64_t __31__PLBatteryAgent_shouldLogCPMS__block_invoke()
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D09930], "isCPMSSupported");
  byte_1ED887563 = result;
  return result;
}

+ (id)entryEventPointDefinitionCPMSControlState
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  _QWORD v77[35];
  _QWORD v78[35];
  _QWORD v79[2];
  _QWORD v80[2];
  _QWORD v81[2];
  _QWORD v82[4];

  v82[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent shouldLogCPMS](PLBatteryAgent, "shouldLogCPMS"))
    return MEMORY[0x1E0C9AA70];
  v81[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80288];
  v79[0] = *MEMORY[0x1E0D80318];
  v79[1] = v2;
  v80[0] = &unk_1E8653360;
  v80[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v80, v79, 2);
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v82[0] = v76;
  v81[1] = *MEMORY[0x1E0D802F0];
  v77[0] = CFSTR("mode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v75, "commonTypeDict_IntegerFormat");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v78[0] = v74;
  v77[1] = CFSTR("source");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v73, "commonTypeDict_IntegerFormat");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v78[1] = v72;
  v77[2] = CFSTR("flags");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v71, "commonTypeDict_IntegerFormat");
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v78[2] = v70;
  v77[3] = CFSTR("reason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v69, "commonTypeDict_IntegerFormat");
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  v78[3] = v68;
  v77[4] = CFSTR("droopCE");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v67, "commonTypeDict_IntegerFormat");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v78[4] = v66;
  v77[5] = CFSTR("zeroSumCE");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v65, "commonTypeDict_IntegerFormat");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v78[5] = v64;
  v77[6] = CFSTR("undroopCE");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v63, "commonTypeDict_IntegerFormat");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v78[6] = v62;
  v77[7] = CFSTR("brownoutRiskEngaged");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v61, "commonTypeDict_BoolFormat");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v78[7] = v60;
  v77[8] = CFSTR("brownoutRiskSysCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v59, "commonTypeDict_IntegerFormat");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v78[8] = v58;
  v77[9] = CFSTR("brownoutRiskPu");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "commonTypeDict_IntegerFormat");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v78[9] = v56;
  v77[10] = CFSTR("peakPowerPressureLevel");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v55, "commonTypeDict_IntegerFormat");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v78[10] = v54;
  v77[11] = CFSTR("servoCE0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "commonTypeDict_IntegerFormat");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v78[11] = v52;
  v77[12] = CFSTR("servoCE1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "commonTypeDict_IntegerFormat");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v78[12] = v50;
  v77[13] = CFSTR("servoCE2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "commonTypeDict_IntegerFormat");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v78[13] = v48;
  v77[14] = CFSTR("servoCE3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "commonTypeDict_IntegerFormat");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v78[14] = v46;
  v77[15] = CFSTR("servoCE4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "commonTypeDict_IntegerFormat");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v78[15] = v44;
  v77[16] = CFSTR("servoCE5");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "commonTypeDict_IntegerFormat");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v78[16] = v42;
  v77[17] = CFSTR("servoCE6");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "commonTypeDict_IntegerFormat");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v78[17] = v40;
  v77[18] = CFSTR("battPC0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "commonTypeDict_IntegerFormat");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v78[18] = v38;
  v77[19] = CFSTR("battPC1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "commonTypeDict_IntegerFormat");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v78[19] = v36;
  v77[20] = CFSTR("battPC2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "commonTypeDict_IntegerFormat");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v78[20] = v34;
  v77[21] = CFSTR("battPC3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "commonTypeDict_IntegerFormat");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v78[21] = v32;
  v77[22] = CFSTR("battPC4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "commonTypeDict_IntegerFormat");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v78[22] = v30;
  v77[23] = CFSTR("battPC5");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "commonTypeDict_IntegerFormat");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v78[23] = v28;
  v77[24] = CFSTR("battPC6");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "commonTypeDict_IntegerFormat");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v78[24] = v26;
  v77[25] = CFSTR("battPC7");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "commonTypeDict_IntegerFormat");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v78[25] = v24;
  v77[26] = CFSTR("sysCap0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "commonTypeDict_IntegerFormat");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v78[26] = v22;
  v77[27] = CFSTR("sysCap1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "commonTypeDict_IntegerFormat");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v78[27] = v20;
  v77[28] = CFSTR("sysCap2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v78[28] = v18;
  v77[29] = CFSTR("remCapCE0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v78[29] = v16;
  v77[30] = CFSTR("remCapCE1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v78[30] = v14;
  v77[31] = CFSTR("remCapCE2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v78[31] = v4;
  v77[32] = CFSTR("remCapCE3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v78[32] = v6;
  v77[33] = CFSTR("remCapCE4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v78[33] = v8;
  v77[34] = CFSTR("remCapCE5");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v78[34] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v78, v77, 35);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v82[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v82, v81, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventPointDefinitionCPMSClientState
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v21[7];
  _QWORD v22[7];
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[4];

  v26[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent shouldLogCPMS](PLBatteryAgent, "shouldLogCPMS"))
    return MEMORY[0x1E0C9AA70];
  v25[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80288];
  v23[0] = *MEMORY[0x1E0D80318];
  v23[1] = v2;
  v24[0] = &unk_1E8653350;
  v24[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, v23, 2);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v26[0] = v20;
  v25[1] = *MEMORY[0x1E0D802F0];
  v21[0] = CFSTR("client");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = v18;
  v21[1] = CFSTR("req0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v22[1] = v16;
  v21[2] = CFSTR("req1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v22[2] = v14;
  v21[3] = CFSTR("req2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v22[3] = v4;
  v21[4] = CFSTR("grant0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v22[4] = v6;
  v21[5] = CFSTR("grant1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v22[5] = v8;
  v21[6] = CFSTR("grant2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v22[6] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v22, v21, 7);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v26[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (BOOL)shouldLogPPMDebugDetail
{
  if (qword_1ED8875E0 != -1)
    dispatch_once(&qword_1ED8875E0, &__block_literal_global_1233);
  return byte_1ED887564;
}

uint64_t __41__PLBatteryAgent_shouldLogPPMDebugDetail__block_invoke()
{
  uint64_t result;

  if ((objc_msgSend(MEMORY[0x1E0D7FFA0], "taskMode") & 1) != 0)
    result = 1;
  else
    result = objc_msgSend(MEMORY[0x1E0D7FFA0], "fullMode");
  byte_1ED887564 = result;
  return result;
}

+ (id)entryEventForwardDefinitionIOPMUBootLPMLog
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[12];
  _QWORD v31[12];
  uint64_t v32;
  void *v33;
  _QWORD v34[2];
  _QWORD v35[4];

  v35[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "hasLPEM"))
    return MEMORY[0x1E0C9AA70];
  v34[0] = *MEMORY[0x1E0D80298];
  v32 = *MEMORY[0x1E0D80318];
  v33 = &unk_1E8653370;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v35[0] = v29;
  v34[1] = *MEMORY[0x1E0D802F0];
  v30[0] = CFSTR("TMS0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v27;
  v30[1] = CFSTR("CAPA");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v25;
  v30[2] = CFSTR("CCCs");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v23;
  v30[3] = CFSTR("PDD0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v21;
  v30[4] = CFSTR("PDDc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v19;
  v30[5] = CFSTR("GGTm");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v17;
  v30[6] = CFSTR("VOLT");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v31[6] = v15;
  v30[7] = CFSTR("STAT");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v31[7] = v13;
  v30[8] = CFSTR("TMSc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v31[8] = v3;
  v30[9] = CFSTR("CCCu");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v31[9] = v5;
  v30[10] = CFSTR("CurrentTimeRTC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_RealFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v31[10] = v7;
  v30[11] = CFSTR("BTLC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v31[11] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v35[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v35, v34, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventForwardDefinitionMobileChargeMode
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[5];
  _QWORD v17[5];
  uint64_t v18;
  void *v19;
  _QWORD v20[2];
  _QWORD v21[4];

  v21[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPhone"))
    return MEMORY[0x1E0C9AA70];
  v20[0] = *MEMORY[0x1E0D80298];
  v18 = *MEMORY[0x1E0D80318];
  v19 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = v15;
  v20[1] = *MEMORY[0x1E0D802F0];
  v16[0] = CFSTR("mcmCurrentState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v13;
  v16[1] = CFSTR("isChargePackConnected");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v3;
  v16[2] = CFSTR("mcmToppedOffInThisChargeSession");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v17[2] = v5;
  v16[3] = CFSTR("mcmForbidsCharging");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17[3] = v7;
  v16[4] = CFSTR("batteryLevel");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17[4] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v17, v16, 5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v21[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventPointDefinitionPPMDebug
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  _QWORD v58[26];
  _QWORD v59[26];
  uint64_t v60;
  void *v61;
  _QWORD v62[2];
  _QWORD v63[4];

  v63[2] = *MEMORY[0x1E0C80C00];
  v62[0] = *MEMORY[0x1E0D80298];
  v60 = *MEMORY[0x1E0D80318];
  v61 = &unk_1E8653310;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v61, &v60, 1);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v63[0] = v57;
  v62[1] = *MEMORY[0x1E0D802F0];
  v58[0] = CFSTR("TStamp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v56, "commonTypeDict_DateFormat");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v59[0] = v55;
  v58[1] = CFSTR("BaselineSysCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "commonTypeDict_IntegerFormat");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v59[1] = v53;
  v58[2] = CFSTR("ModeledSysCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "commonTypeDict_IntegerFormat");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v59[2] = v51;
  v58[3] = CFSTR("NetSysCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "commonTypeDict_IntegerFormat");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v59[3] = v49;
  v58[4] = CFSTR("OverrideSysCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "commonTypeDict_IntegerFormat");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v59[4] = v47;
  v58[5] = CFSTR("ProactiveSysCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "commonTypeDict_IntegerFormat");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v59[5] = v45;
  v58[6] = CFSTR("TotalDemandAdj");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "commonTypeDict_IntegerFormat");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v59[6] = v43;
  v58[7] = CFSTR("TotalDemandRaw");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "commonTypeDict_IntegerFormat");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v59[7] = v41;
  v58[8] = CFSTR("baselineR0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "commonTypeDict_IntegerFormat");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v59[8] = v39;
  v58[9] = CFSTR("baselineR1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "commonTypeDict_IntegerFormat");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v59[9] = v37;
  v58[10] = CFSTR("baselineR2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "commonTypeDict_IntegerFormat");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v59[10] = v35;
  v58[11] = CFSTR("baselineR3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "commonTypeDict_IntegerFormat");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v59[11] = v33;
  v58[12] = CFSTR("avgRdcRatio");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "commonTypeDict_RealFormat");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v59[12] = v31;
  v58[13] = CFSTR("R0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "commonTypeDict_IntegerFormat");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v59[13] = v29;
  v58[14] = CFSTR("R1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v59[14] = v27;
  v58[15] = CFSTR("R2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v59[15] = v25;
  v58[16] = CFSTR("R3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v59[16] = v23;
  v58[17] = CFSTR("Iss");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v59[17] = v21;
  v58[18] = CFSTR("outputFlag");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v59[18] = v19;
  v58[19] = CFSTR("Ps");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v59[19] = v17;
  v58[20] = CFSTR("Pb");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v59[20] = v15;
  v58[21] = CFSTR("Pp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v59[21] = v13;
  v58[22] = CFSTR("mPb");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v59[22] = v3;
  v58[23] = CFSTR("mPp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v59[23] = v5;
  v58[24] = CFSTR("Vgg");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v59[24] = v7;
  v58[25] = CFSTR("DroopCtrlEff");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v59[25] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v59, v58, 26);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v63[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v63, v62, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventPointDefinitionPPMClientMetrics
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[7];
  _QWORD v21[7];
  uint64_t v22;
  void *v23;
  _QWORD v24[2];
  _QWORD v25[4];

  v25[2] = *MEMORY[0x1E0C80C00];
  v24[0] = *MEMORY[0x1E0D80298];
  v22 = *MEMORY[0x1E0D80318];
  v23 = &unk_1E8653310;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = v19;
  v24[1] = *MEMORY[0x1E0D802F0];
  v20[0] = CFSTR("TStamp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_DateFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = v17;
  v20[1] = CFSTR("Client");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v21[1] = v15;
  v20[2] = CFSTR("Idx");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v21[2] = v13;
  v20[3] = CFSTR("Bdg");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v21[3] = v3;
  v20[4] = CFSTR("Car");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v21[4] = v5;
  v20[5] = CFSTR("Pwr");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v21[5] = v7;
  v20[6] = CFSTR("reqBdg");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v21[6] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v25, v24, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventPointDefinitionGasGaugeReconnect
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  const __CFString *v9;
  void *v10;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80078], "hasGasGauge"))
    return MEMORY[0x1E0C9AA70];
  v13[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80330];
  v11[0] = *MEMORY[0x1E0D80318];
  v11[1] = v2;
  v12[0] = &unk_1E8653350;
  v12[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v3;
  v13[1] = *MEMORY[0x1E0D802F0];
  v9 = CFSTR("Reason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_StringFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v10, &v9, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

+ (id)entryEventPointDefinitionEAPencil
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  const __CFString *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[2];
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPad"))
    return MEMORY[0x1E0C9AA70];
  v12[0] = *MEMORY[0x1E0D80298];
  v10 = *MEMORY[0x1E0D80318];
  v11 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v2;
  v12[1] = *MEMORY[0x1E0D802F0];
  v8 = CFSTR("isPhysicallyAttached");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_BoolFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)entryEventPointDefinitionBatteryShutdown
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  _QWORD v155[74];
  _QWORD v156[74];
  _QWORD v157[3];
  _QWORD v158[3];
  _QWORD v159[2];
  _QWORD v160[4];

  v160[2] = *MEMORY[0x1E0C80C00];
  v159[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80340];
  v157[0] = *MEMORY[0x1E0D80318];
  v157[1] = v2;
  v158[0] = &unk_1E8653380;
  v158[1] = &unk_1E8633B40;
  v157[2] = *MEMORY[0x1E0D80338];
  v158[2] = &unk_1E8653340;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v158, v157, 3);
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  v160[0] = v154;
  v159[1] = *MEMORY[0x1E0D802F0];
  v155[0] = CFSTR("BatteryShutdownTimestamp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v153, "commonTypeDict_DateFormat");
  v152 = (void *)objc_claimAutoreleasedReturnValue();
  v156[0] = v152;
  v155[1] = CFSTR("UISOC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v151, "commonTypeDict_RealFormat");
  v150 = (void *)objc_claimAutoreleasedReturnValue();
  v156[1] = v150;
  v155[2] = CFSTR("Temperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v149 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v149, "commonTypeDict_IntegerFormat");
  v148 = (void *)objc_claimAutoreleasedReturnValue();
  v156[2] = v148;
  v155[3] = CFSTR("PresentDOD");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v147, "commonTypeDict_IntegerFormat");
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  v156[3] = v146;
  v155[4] = CFSTR("MaximumRa0-8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v145, "commonTypeDict_IntegerFormat");
  v144 = (void *)objc_claimAutoreleasedReturnValue();
  v156[4] = v144;
  v155[5] = CFSTR("NominalChargeCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v143, "commonTypeDict_IntegerFormat");
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  v156[5] = v142;
  v155[6] = CFSTR("NominalChargeCapacityPrevious");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v141 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v141, "commonTypeDict_IntegerFormat");
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  v156[6] = v140;
  v155[7] = CFSTR("FullChargeCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v139, "commonTypeDict_IntegerFormat");
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  v156[7] = v138;
  v155[8] = CFSTR("FullChargeCapacityPrevious");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v137 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v137, "commonTypeDict_IntegerFormat");
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  v156[8] = v136;
  v155[9] = CFSTR("RemainingCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v135, "commonTypeDict_IntegerFormat");
  v134 = (void *)objc_claimAutoreleasedReturnValue();
  v156[9] = v134;
  v155[10] = CFSTR("RemainingCapacityPrevious");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v133 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v133, "commonTypeDict_IntegerFormat");
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  v156[10] = v132;
  v155[11] = CFSTR("CycleCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v131, "commonTypeDict_IntegerFormat");
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v156[11] = v130;
  v155[12] = CFSTR("MaximumDischargeCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v129, "commonTypeDict_IntegerFormat");
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  v156[12] = v128;
  v155[13] = CFSTR("TimeAbove95Perc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v127, "commonTypeDict_IntegerFormat");
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  v156[13] = v126;
  v155[14] = CFSTR("Voltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v125, "commonTypeDict_IntegerFormat");
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v156[14] = v124;
  v155[15] = CFSTR("VoltagePrevious");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v123 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v123, "commonTypeDict_IntegerFormat");
  v122 = (void *)objc_claimAutoreleasedReturnValue();
  v156[15] = v122;
  v155[16] = CFSTR("AverageCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v121, "commonTypeDict_IntegerFormat");
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  v156[16] = v120;
  v155[17] = CFSTR("AverageCurrentPrevious");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v119, "commonTypeDict_IntegerFormat");
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v156[17] = v118;
  v155[18] = CFSTR("CycleCountLastQmax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v117, "commonTypeDict_IntegerFormat");
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  v156[18] = v116;
  v155[19] = CFSTR("ResScale");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "commonTypeDict_IntegerFormat");
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  v156[19] = v114;
  v155[20] = CFSTR("Qstart");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v113, "commonTypeDict_IntegerFormat");
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v156[20] = v112;
  v155[21] = CFSTR("PassedCharge");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v111, "commonTypeDict_IntegerFormat");
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  v156[21] = v110;
  v155[22] = CFSTR("TimeSinceWake");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v109, "commonTypeDict_IntegerFormat");
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  v156[22] = v108;
  v155[23] = CFSTR("DOD0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v107, "commonTypeDict_IntegerFormat");
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  v156[23] = v106;
  v155[24] = CFSTR("DLOG_0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v105, "commonTypeDict_IntegerFormat");
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  v156[24] = v104;
  v155[25] = CFSTR("DLOG_1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v103, "commonTypeDict_IntegerFormat");
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  v156[25] = v102;
  v155[26] = CFSTR("DLOG_2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v101, "commonTypeDict_IntegerFormat");
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  v156[26] = v100;
  v155[27] = CFSTR("DLOG_3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v99, "commonTypeDict_IntegerFormat");
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  v156[27] = v98;
  v155[28] = CFSTR("DLOG_4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v97, "commonTypeDict_IntegerFormat");
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  v156[28] = v96;
  v155[29] = CFSTR("DLOG_5");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v95, "commonTypeDict_IntegerFormat");
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  v156[29] = v94;
  v155[30] = CFSTR("DLOG_6");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v93, "commonTypeDict_IntegerFormat");
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  v156[30] = v92;
  v155[31] = CFSTR("DLOG_7");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v91, "commonTypeDict_IntegerFormat");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  v156[31] = v90;
  v155[32] = CFSTR("DLOG_8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v89, "commonTypeDict_IntegerFormat");
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  v156[32] = v88;
  v155[33] = CFSTR("DLOG_9");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v87, "commonTypeDict_IntegerFormat");
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v156[33] = v86;
  v155[34] = CFSTR("DLOG_10");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v85, "commonTypeDict_IntegerFormat");
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  v156[34] = v84;
  v155[35] = CFSTR("DLOG_11");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v83, "commonTypeDict_IntegerFormat");
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v156[35] = v82;
  v155[36] = CFSTR("DLOG_12");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v81, "commonTypeDict_IntegerFormat");
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v156[36] = v80;
  v155[37] = CFSTR("DLOG_13");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v79, "commonTypeDict_IntegerFormat");
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  v156[37] = v78;
  v155[38] = CFSTR("DLOG_14");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v77, "commonTypeDict_IntegerFormat");
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v156[38] = v76;
  v155[39] = CFSTR("DLOG_15");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v75, "commonTypeDict_IntegerFormat");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v156[39] = v74;
  v155[40] = CFSTR("DLOG_16");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v73, "commonTypeDict_IntegerFormat");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v156[40] = v72;
  v155[41] = CFSTR("DLOG_17");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v71, "commonTypeDict_IntegerFormat");
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v156[41] = v70;
  v155[42] = CFSTR("DLOG_18");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v69, "commonTypeDict_IntegerFormat");
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  v156[42] = v68;
  v155[43] = CFSTR("DLOG_19");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v67, "commonTypeDict_IntegerFormat");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v156[43] = v66;
  v155[44] = CFSTR("RaTable_1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v65, "commonTypeDict_IntegerFormat");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v156[44] = v64;
  v155[45] = CFSTR("RaTable_2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v63, "commonTypeDict_IntegerFormat");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v156[45] = v62;
  v155[46] = CFSTR("RaTable_3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v61, "commonTypeDict_IntegerFormat");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v156[46] = v60;
  v155[47] = CFSTR("RaTable_4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v59, "commonTypeDict_IntegerFormat");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v156[47] = v58;
  v155[48] = CFSTR("RaTable_5");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "commonTypeDict_IntegerFormat");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v156[48] = v56;
  v155[49] = CFSTR("RaTable_6");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v55, "commonTypeDict_IntegerFormat");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v156[49] = v54;
  v155[50] = CFSTR("RaTable_7");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "commonTypeDict_IntegerFormat");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v156[50] = v52;
  v155[51] = CFSTR("RaTable_8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "commonTypeDict_IntegerFormat");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v156[51] = v50;
  v155[52] = CFSTR("RaTable_9");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "commonTypeDict_IntegerFormat");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v156[52] = v48;
  v155[53] = CFSTR("RaTable_10");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "commonTypeDict_IntegerFormat");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v156[53] = v46;
  v155[54] = CFSTR("RaTable_11");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "commonTypeDict_IntegerFormat");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v156[54] = v44;
  v155[55] = CFSTR("RaTable_12");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "commonTypeDict_IntegerFormat");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v156[55] = v42;
  v155[56] = CFSTR("RaTable_13");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "commonTypeDict_IntegerFormat");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v156[56] = v40;
  v155[57] = CFSTR("RaTable_14");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "commonTypeDict_IntegerFormat");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v156[57] = v38;
  v155[58] = CFSTR("RaTable_15");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "commonTypeDict_IntegerFormat");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v156[58] = v36;
  v155[59] = CFSTR("RSS");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "commonTypeDict_IntegerFormat");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v156[59] = v34;
  v155[60] = CFSTR("LowBatteryLog");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "commonTypeDict_StringFormat");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v156[60] = v32;
  v155[61] = CFSTR("UpoReboot");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "commonTypeDict_BoolFormat");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v156[61] = v30;
  v155[62] = CFSTR("DataError");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "commonTypeDict_IntegerFormat");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v156[62] = v28;
  v155[63] = CFSTR("FilteredCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "commonTypeDict_IntegerFormat");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v156[63] = v26;
  v155[64] = CFSTR("ShutdownVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "commonTypeDict_IntegerFormat");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v156[64] = v24;
  v155[65] = CFSTR("SOCFThreshold");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "commonTypeDict_IntegerFormat");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v156[65] = v22;
  v155[66] = CFSTR("ShutdownSoc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "commonTypeDict_IntegerFormat");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v156[66] = v20;
  v155[67] = CFSTR("LPEMMode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v156[67] = v18;
  v155[68] = CFSTR("SOCAlarm");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v156[68] = v16;
  v155[69] = CFSTR("SWRemcap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v156[69] = v14;
  v155[70] = CFSTR("SocSoc2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v156[70] = v4;
  v155[71] = CFSTR("SWFcc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v156[71] = v6;
  v155[72] = CFSTR("DynamicSOCVcut");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v156[72] = v8;
  v155[73] = CFSTR("DataCriticalFlagsKey");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v156[73] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v156, v155, 74);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v160[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v160, v159, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventPointDefinitionBatteryPanicShutdown
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  const __CFString *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[2];
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  v12[0] = *MEMORY[0x1E0D80298];
  v10 = *MEMORY[0x1E0D80318];
  v11 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v2;
  v12[1] = *MEMORY[0x1E0D802F0];
  v8 = CFSTR("I2CLogData");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_RawDataFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)entryEventPointDefinitionBatteryTrapInfo
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD v26[10];
  _QWORD v27[10];
  uint64_t v28;
  void *v29;
  _QWORD v30[2];
  _QWORD v31[4];

  v31[2] = *MEMORY[0x1E0C80C00];
  v30[0] = *MEMORY[0x1E0D80298];
  v28 = *MEMORY[0x1E0D80318];
  v29 = &unk_1E8653310;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v25;
  v30[1] = *MEMORY[0x1E0D802F0];
  v26[0] = CFSTR("TimeOnCharger");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v23;
  v26[1] = CFSTR("CloakEntryCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v27[1] = v21;
  v26[2] = CFSTR("PrechargeCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v27[2] = v19;
  v26[3] = CFSTR("AverageBattVirtualTemp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v27[3] = v17;
  v26[4] = CFSTR("AverageBattSkinTemp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v27[4] = v15;
  v26[5] = CFSTR("StartBatteryCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v27[5] = v13;
  v26[6] = CFSTR("StartBatteryVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v27[6] = v3;
  v26[7] = CFSTR("VbusType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_BoolFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v27[7] = v5;
  v26[8] = CFSTR("AdapterType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_BoolFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v27[8] = v7;
  v26[9] = CFSTR("WirelessChargingMode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_BoolFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v27[9] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, v26, 10);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventPointDefinitionBatteryUILogging
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[3];

  v16[2] = *MEMORY[0x1E0C80C00];
  v15[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80300];
  v13[0] = *MEMORY[0x1E0D80318];
  v13[1] = v2;
  v14[0] = &unk_1E8653310;
  v14[1] = MEMORY[0x1E0C9AAA0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = v3;
  v15[1] = *MEMORY[0x1E0D802F0];
  v11[0] = CFSTR("Rbattx");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11[1] = CFSTR("Rbattxy");
  v12[0] = v5;
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v12[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v16[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

+ (id)entryEventPointDefinitionBatteryUIVisit
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  const __CFString *v10;
  void *v11;
  _QWORD v12[4];
  _QWORD v13[4];
  _QWORD v14[2];
  _QWORD v15[3];

  v15[2] = *MEMORY[0x1E0C80C00];
  v14[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80300];
  v12[0] = *MEMORY[0x1E0D80318];
  v12[1] = v2;
  v13[0] = &unk_1E8653350;
  v13[1] = MEMORY[0x1E0C9AAA0];
  v3 = *MEMORY[0x1E0D80338];
  v12[2] = *MEMORY[0x1E0D80340];
  v12[3] = v3;
  v13[2] = &unk_1E8633B40;
  v13[3] = &unk_1E8653320;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v4;
  v14[1] = *MEMORY[0x1E0D802F0];
  v10 = CFSTR("Visit");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)entryEventPointDefinitionChargingInfo
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  _QWORD v91[42];
  _QWORD v92[42];
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[4];

  v96[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent hasChargingInfoLogging](PLBatteryAgent, "hasChargingInfoLogging"))
    return MEMORY[0x1E0C9AA70];
  v95[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80300];
  v93[0] = *MEMORY[0x1E0D80318];
  v93[1] = v2;
  v94[0] = &unk_1E8653390;
  v94[1] = MEMORY[0x1E0C9AAA0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v94, v93, 2);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  v96[0] = v90;
  v95[1] = *MEMORY[0x1E0D802F0];
  v91[0] = CFSTR("Connected");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v89, "commonTypeDict_IntegerFormat");
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  v92[0] = v88;
  v91[1] = CFSTR("Charging");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v87, "commonTypeDict_IntegerFormat");
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v92[1] = v86;
  v91[2] = CFSTR("DriverState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v85, "commonTypeDict_IntegerFormat");
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  v92[2] = v84;
  v91[3] = CFSTR("DriverStatusBits");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v83, "commonTypeDict_IntegerFormat");
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v92[3] = v82;
  v91[4] = CFSTR("FirmwareStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v81, "commonTypeDict_IntegerFormat");
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v92[4] = v80;
  v91[5] = CFSTR("Frequency");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v79, "commonTypeDict_IntegerFormat");
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  v92[5] = v78;
  v91[6] = CFSTR("RectifierCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v77, "commonTypeDict_IntegerFormat");
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v92[6] = v76;
  v91[7] = CFSTR("RectifierVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v75, "commonTypeDict_IntegerFormat");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v92[7] = v74;
  v91[8] = CFSTR("PowerTarget");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v73, "commonTypeDict_IntegerFormat");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v92[8] = v72;
  v91[9] = CFSTR("VoltageTarget");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v71, "commonTypeDict_IntegerFormat");
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v92[9] = v70;
  v91[10] = CFSTR("PowerBudget");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v69, "commonTypeDict_IntegerFormat");
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  v92[10] = v68;
  v91[11] = CFSTR("TxGain1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v67, "commonTypeDict_IntegerFormat");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v92[11] = v66;
  v91[12] = CFSTR("TxGain2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v65, "commonTypeDict_IntegerFormat");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v92[12] = v64;
  v91[13] = CFSTR("TxVersion");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v63, "commonTypeDict_IntegerFormat");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v92[13] = v62;
  v91[14] = CFSTR("SignalStrength");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v61, "commonTypeDict_IntegerFormat");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v92[14] = v60;
  v91[15] = CFSTR("NotCloakReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v59, "commonTypeDict_IntegerFormat");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v92[15] = v58;
  v91[16] = CFSTR("ModDepth");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "commonTypeDict_IntegerFormat");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v92[16] = v56;
  v91[17] = CFSTR("HighFreq");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v55, "commonTypeDict_BoolFormat");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v92[17] = v54;
  v91[18] = CFSTR("CloakReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "commonTypeDict_IntegerFormat");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v92[18] = v52;
  v91[19] = CFSTR("InductiveFWMode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "commonTypeDict_IntegerFormat");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v92[19] = v50;
  v91[20] = CFSTR("OVPCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "commonTypeDict_IntegerFormat");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v92[20] = v48;
  v91[21] = CFSTR("MagnetAttach");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "commonTypeDict_BoolFormat");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v92[21] = v46;
  v91[22] = CFSTR("PTxType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "commonTypeDict_IntegerFormat");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v92[22] = v44;
  v91[23] = CFSTR("PowerNegotiable");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "commonTypeDict_IntegerFormat");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v92[23] = v42;
  v91[24] = CFSTR("PowerPotential");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "commonTypeDict_IntegerFormat");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v92[24] = v40;
  v91[25] = CFSTR("PowerLimitReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "commonTypeDict_IntegerFormat");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v92[25] = v38;
  v91[26] = CFSTR("Prect");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "commonTypeDict_IntegerFormat");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v92[26] = v36;
  v91[27] = CFSTR("IlimTarget");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "commonTypeDict_IntegerFormat");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v92[27] = v34;
  v91[28] = CFSTR("IlimHeadroom");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "commonTypeDict_IntegerFormat");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v92[28] = v32;
  v91[29] = CFSTR("TxGain3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "commonTypeDict_IntegerFormat");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v92[29] = v30;
  v91[30] = CFSTR("TxGain4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "commonTypeDict_IntegerFormat");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v92[30] = v28;
  v91[31] = CFSTR("PowerProfile");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "commonTypeDict_IntegerFormat");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v92[31] = v26;
  v91[32] = CFSTR("PowerProfSwitch");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "commonTypeDict_IntegerFormat");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v92[32] = v24;
  v91[33] = CFSTR("TxKest");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "commonTypeDict_IntegerFormat");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v92[33] = v22;
  v91[34] = CFSTR("RxQippVer");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "commonTypeDict_IntegerFormat");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v92[34] = v20;
  v91[35] = CFSTR("DplossStat");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v92[35] = v18;
  v91[36] = CFSTR("MainCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v92[36] = v16;
  v91[37] = CFSTR("AuthFodStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v92[37] = v14;
  v91[38] = CFSTR("InductiveCoexStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v92[38] = v4;
  v91[39] = CFSTR("VMID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v92[39] = v6;
  v91[40] = CFSTR("PowerConverterStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v92[40] = v8;
  v91[41] = CFSTR("CommStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v92[41] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v92, v91, 42);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v96[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v96, v95, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventPointDefinitionUPOStepper
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[6];
  _QWORD v20[6];
  _QWORD v21[3];
  _QWORD v22[3];
  _QWORD v23[2];
  _QWORD v24[4];

  v24[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPhone"))
    return MEMORY[0x1E0C9AA70];
  v23[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80340];
  v21[0] = *MEMORY[0x1E0D80318];
  v21[1] = v2;
  v22[0] = &unk_1E8653350;
  v22[1] = &unk_1E8633B40;
  v21[2] = *MEMORY[0x1E0D80338];
  v22[2] = &unk_1E8653340;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v22, v21, 3);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = v18;
  v23[1] = *MEMORY[0x1E0D802F0];
  v19[0] = CFSTR("mitigatedUPOCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = v16;
  v19[1] = CFSTR("mitigationState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v20[1] = v14;
  v19[2] = CFSTR("BatteryShutdownTimestamp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_DateFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v20[2] = v4;
  v19[3] = CFSTR("timeWindow");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v20[3] = v6;
  v19[4] = CFSTR("trueRa");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v20[4] = v8;
  v19[5] = CFSTR("virtualRa");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v20[5] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v20, v19, 6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v24[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, v23, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventPointDefinitionBatterySample
{
  return (id)MEMORY[0x1E0C9AA70];
}

+ (id)entryEventForwardDefinitions
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[25];
  _QWORD v31[27];

  v31[25] = *MEMORY[0x1E0C80C00];
  v30[0] = CFSTR("ExternalCharger");
  +[PLBatteryAgent entryEventForwardDefinitionExternalCharger](PLBatteryAgent, "entryEventForwardDefinitionExternalCharger");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v29;
  v30[1] = CFSTR("EAPencilStats");
  +[PLBatteryAgent entryEventForwardDefinitionEAPencil](PLBatteryAgent, "entryEventForwardDefinitionEAPencil");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v28;
  v30[2] = CFSTR("LightningConnectorStatus");
  +[PLBatteryAgent entryEventForwardDefinitionLightningConnectorStatus](PLBatteryAgent, "entryEventForwardDefinitionLightningConnectorStatus");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v27;
  v30[3] = CFSTR("UPOStepper");
  +[PLBatteryAgent entryEventForwardDefinitionUPOStepper](PLBatteryAgent, "entryEventForwardDefinitionUPOStepper");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v26;
  v30[4] = CFSTR("MitigationState");
  +[PLBatteryAgent entryEventForwardDefinitionMitigationState](PLBatteryAgent, "entryEventForwardDefinitionMitigationState");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v25;
  v30[5] = CFSTR("IOPMUBootLPMLog");
  objc_msgSend(a1, "entryEventForwardDefinitionIOPMUBootLPMLog");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v24;
  v30[6] = CFSTR("SmartCharging");
  +[PLBatteryAgent entryEventForwardDefinitionSmartCharging](PLBatteryAgent, "entryEventForwardDefinitionSmartCharging");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v31[6] = v23;
  v30[7] = CFSTR("CleanEnergyCharging");
  +[PLBatteryAgent entryEventForwardDefinitionCleanEnergyCharging](PLBatteryAgent, "entryEventForwardDefinitionCleanEnergyCharging");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v31[7] = v22;
  v30[8] = CFSTR("EAPencilCharging");
  +[PLBatteryAgent entryEventForwardDefinitionEAPencilCharging](PLBatteryAgent, "entryEventForwardDefinitionEAPencilCharging");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v31[8] = v21;
  v30[9] = CFSTR("USBCCharging0");
  +[PLBatteryAgent entryEventForwardDefinitionUSBCCharging](PLBatteryAgent, "entryEventForwardDefinitionUSBCCharging");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v31[9] = v20;
  v30[10] = CFSTR("USBCCharging1");
  +[PLBatteryAgent entryEventForwardDefinitionUSBCCharging](PLBatteryAgent, "entryEventForwardDefinitionUSBCCharging");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v31[10] = v19;
  v30[11] = CFSTR("USBCCharging2");
  +[PLBatteryAgent entryEventForwardDefinitionUSBCCharging](PLBatteryAgent, "entryEventForwardDefinitionUSBCCharging");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v31[11] = v18;
  v30[12] = CFSTR("USBCCharging3");
  +[PLBatteryAgent entryEventForwardDefinitionUSBCCharging](PLBatteryAgent, "entryEventForwardDefinitionUSBCCharging");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v31[12] = v17;
  v30[13] = CFSTR("PortControllerInfo0");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerInfo](PLBatteryAgent, "entryEventForwardDefinitionPortControllerInfo");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v31[13] = v16;
  v30[14] = CFSTR("PortControllerInfo1");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerInfo](PLBatteryAgent, "entryEventForwardDefinitionPortControllerInfo");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v31[14] = v15;
  v30[15] = CFSTR("PortControllerInfo2");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerInfo](PLBatteryAgent, "entryEventForwardDefinitionPortControllerInfo");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v31[15] = v3;
  v30[16] = CFSTR("PortControllerInfo3");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerInfo](PLBatteryAgent, "entryEventForwardDefinitionPortControllerInfo");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v31[16] = v4;
  v30[17] = CFSTR("PortControllerBuffer0");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerBuffer](PLBatteryAgent, "entryEventForwardDefinitionPortControllerBuffer");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v31[17] = v5;
  v30[18] = CFSTR("PortControllerBuffer1");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerBuffer](PLBatteryAgent, "entryEventForwardDefinitionPortControllerBuffer");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v31[18] = v6;
  v30[19] = CFSTR("PortControllerBuffer2");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerBuffer](PLBatteryAgent, "entryEventForwardDefinitionPortControllerBuffer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v31[19] = v7;
  v30[20] = CFSTR("PortControllerBuffer3");
  +[PLBatteryAgent entryEventForwardDefinitionPortControllerBuffer](PLBatteryAgent, "entryEventForwardDefinitionPortControllerBuffer");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v31[20] = v8;
  v30[21] = CFSTR("BatteryCalibration0Baseline");
  objc_msgSend(a1, "entryEventForwardDefinitionCalibration0");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v31[21] = v9;
  v30[22] = CFSTR("Calibration0Info");
  objc_msgSend(a1, "entryEventForwardDefinitionCalibration0Info");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v31[22] = v10;
  v30[23] = CFSTR("MobileChargeMode");
  +[PLBatteryAgent entryEventForwardDefinitionMobileChargeMode](PLBatteryAgent, "entryEventForwardDefinitionMobileChargeMode");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v31[23] = v11;
  v30[24] = CFSTR("AdapterDetails");
  +[PLBatteryAgent entryEventForwardDefinitionAdapterDetails](PLBatteryAgent, "entryEventForwardDefinitionAdapterDetails");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v31[24] = v12;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 25);
  v14 = (id)objc_claimAutoreleasedReturnValue();

  return v14;
}

+ (id)entryEventForwardDefinitionCalibration0
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  _QWORD v74[34];
  _QWORD v75[34];
  uint64_t v76;
  void *v77;
  _QWORD v78[2];
  _QWORD v79[4];

  v79[2] = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0D80020], "isiPhone") & 1) == 0
    && !objc_msgSend(MEMORY[0x1E0D80020], "isWatch"))
  {
    return MEMORY[0x1E0C9AA70];
  }
  v78[0] = *MEMORY[0x1E0D80298];
  v76 = *MEMORY[0x1E0D80318];
  v77 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v77, &v76, 1);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  v79[0] = v73;
  v78[1] = *MEMORY[0x1E0D802F0];
  v74[0] = CFSTR("AlgoChemID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v72, "commonTypeDict_IntegerFormat");
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  v75[0] = v71;
  v74[1] = CFSTR("AppleRawMaxCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v70, "commonTypeDict_IntegerFormat");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  v75[1] = v69;
  v74[2] = CFSTR("batteryServiceFlags");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v68, "commonTypeDict_IntegerFormat");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v75[2] = v67;
  v74[3] = CFSTR("CycleCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v66, "commonTypeDict_IntegerFormat");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  v75[3] = v65;
  v74[4] = CFSTR("epoch");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v64, "commonTypeDict_IntegerFormat");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v75[4] = v63;
  v74[5] = CFSTR("GasGaugeFirmwareVersion");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v62, "commonTypeDict_IntegerFormat");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v75[5] = v61;
  v74[6] = CFSTR("LifetimeUPOCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v60, "commonTypeDict_IntegerFormat");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v75[6] = v59;
  v74[7] = CFSTR("MaximumCapacityPercent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v58, "commonTypeDict_IntegerFormat");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v75[7] = v57;
  v74[8] = CFSTR("MaximumFCC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v56, "commonTypeDict_IntegerFormat");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v75[8] = v55;
  v74[9] = CFSTR("MinimumFCC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "commonTypeDict_IntegerFormat");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v75[9] = v53;
  v74[10] = CFSTR("MaximumQmax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "commonTypeDict_IntegerFormat");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v75[10] = v51;
  v74[11] = CFSTR("MinimumQmax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "commonTypeDict_IntegerFormat");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v75[11] = v49;
  v74[12] = CFSTR("NCCMin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "commonTypeDict_IntegerFormat");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v75[12] = v47;
  v74[13] = CFSTR("NCCMax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "commonTypeDict_IntegerFormat");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v75[13] = v45;
  v74[14] = CFSTR("NominalChargeCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "commonTypeDict_IntegerFormat");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v75[14] = v43;
  v74[15] = CFSTR("Qmax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "commonTypeDict_IntegerFormat");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v75[15] = v41;
  v74[16] = CFSTR("Ra00");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "commonTypeDict_IntegerFormat");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v75[16] = v39;
  v74[17] = CFSTR("Ra01");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "commonTypeDict_IntegerFormat");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v75[17] = v37;
  v74[18] = CFSTR("Ra02");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "commonTypeDict_IntegerFormat");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v75[18] = v35;
  v74[19] = CFSTR("Ra03");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "commonTypeDict_IntegerFormat");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v75[19] = v33;
  v74[20] = CFSTR("Ra04");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "commonTypeDict_IntegerFormat");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v75[20] = v31;
  v74[21] = CFSTR("Ra05");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "commonTypeDict_IntegerFormat");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v75[21] = v29;
  v74[22] = CFSTR("Ra06");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v75[22] = v27;
  v74[23] = CFSTR("Ra07");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v75[23] = v25;
  v74[24] = CFSTR("Ra08");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v75[24] = v23;
  v74[25] = CFSTR("Ra09");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v75[25] = v21;
  v74[26] = CFSTR("Ra10");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v75[26] = v19;
  v74[27] = CFSTR("Ra11");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v75[27] = v17;
  v74[28] = CFSTR("Ra12");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v75[28] = v15;
  v74[29] = CFSTR("Ra13");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v75[29] = v13;
  v74[30] = CFSTR("Ra14");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v75[30] = v3;
  v74[31] = CFSTR("TotalOperatingTime");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v75[31] = v5;
  v74[32] = CFSTR("WeightedRa");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v75[32] = v7;
  v74[33] = CFSTR("TimeAtHighSoc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_StringFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v75[33] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v75, v74, 34);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v79[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v79, v78, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventForwardDefinitionCalibration0Info
{
  return (id)MEMORY[0x1E0C9AA70];
}

+ (id)entryEventForwardDefinitionEAPencilCharging
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  _QWORD v14[4];
  _QWORD v15[4];
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPad"))
    return MEMORY[0x1E0C9AA70];
  v18[0] = *MEMORY[0x1E0D80298];
  v16 = *MEMORY[0x1E0D80318];
  v17 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v13;
  v18[1] = *MEMORY[0x1E0D802F0];
  v14[0] = CFSTR("IOAccessoryDetect");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v3;
  v14[1] = CFSTR("IOAccessoryPowerMode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v5;
  v14[2] = CFSTR("IOAccessoryActivePowerMode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = v7;
  v14[3] = CFSTR("Pencil");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_BoolFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[3] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventForwardDefinitionUSBCCharging
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD v31[12];
  _QWORD v32[12];
  _QWORD v33[2];
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[4];

  v36[2] = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0D80020], "isiPad") & 1) == 0
    && (objc_msgSend(MEMORY[0x1E0D80020], "isiPhone") & 1) == 0
    && !objc_msgSend(MEMORY[0x1E0D80020], "isMac"))
  {
    return MEMORY[0x1E0C9AA70];
  }
  v35[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D802B8];
  v33[0] = *MEMORY[0x1E0D80318];
  v33[1] = v2;
  v34[0] = &unk_1E8653310;
  v34[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v34, v33, 2);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = v30;
  v35[1] = *MEMORY[0x1E0D802F0];
  v31[0] = CFSTR("FedDualRolePower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "commonTypeDict_BoolFormat");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v32[0] = v28;
  v31[1] = CFSTR("FedPortPowerRole");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "commonTypeDict_BoolFormat");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v32[1] = v26;
  v31[2] = CFSTR("FedRemainingCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "commonTypeDict_IntegerFormat");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v32[2] = v24;
  v31[3] = CFSTR("FedExternalConnected");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "commonTypeDict_BoolFormat");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v32[3] = v22;
  v31[4] = CFSTR("FedDesignCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "commonTypeDict_IntegerFormat");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v32[4] = v20;
  v31[5] = CFSTR("FedProductID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v32[5] = v18;
  v31[6] = CFSTR("FedVendorID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v32[6] = v16;
  v31[7] = CFSTR("FedStateOfCharge");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v32[7] = v14;
  v31[8] = CFSTR("FedPdSpecRevision");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v32[8] = v4;
  v31[9] = CFSTR("FedPwrPolicySt");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v32[9] = v6;
  v31[10] = CFSTR("FedSnkConfReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v32[10] = v8;
  v31[11] = CFSTR("FedSrcConfReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v32[11] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v32, v31, 12);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v36[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v36, v35, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventForwardDefinitionPortControllerInfo
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  _QWORD v155[74];
  _QWORD v156[74];
  _QWORD v157[2];
  _QWORD v158[2];
  _QWORD v159[2];
  _QWORD v160[4];

  v160[2] = *MEMORY[0x1E0C80C00];
  v159[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D802B8];
  v157[0] = *MEMORY[0x1E0D80318];
  v157[1] = v2;
  v158[0] = &unk_1E8653360;
  v158[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v158, v157, 2);
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  v160[0] = v154;
  v159[1] = *MEMORY[0x1E0D802F0];
  v155[0] = CFSTR("PortControllerPortPDO0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v153, "commonTypeDict_IntegerFormat");
  v152 = (void *)objc_claimAutoreleasedReturnValue();
  v156[0] = v152;
  v155[1] = CFSTR("PortControllerPortPDO1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v151, "commonTypeDict_IntegerFormat");
  v150 = (void *)objc_claimAutoreleasedReturnValue();
  v156[1] = v150;
  v155[2] = CFSTR("PortControllerPortPDO2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v149 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v149, "commonTypeDict_IntegerFormat");
  v148 = (void *)objc_claimAutoreleasedReturnValue();
  v156[2] = v148;
  v155[3] = CFSTR("PortControllerPortPDO3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v147, "commonTypeDict_IntegerFormat");
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  v156[3] = v146;
  v155[4] = CFSTR("PortControllerPortPDO4");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v145, "commonTypeDict_IntegerFormat");
  v144 = (void *)objc_claimAutoreleasedReturnValue();
  v156[4] = v144;
  v155[5] = CFSTR("PortControllerPortPDO5");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v143, "commonTypeDict_IntegerFormat");
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  v156[5] = v142;
  v155[6] = CFSTR("PortControllerPortPDO6");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v141 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v141, "commonTypeDict_IntegerFormat");
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  v156[6] = v140;
  v155[7] = CFSTR("PortControllerPortPDO7");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v139, "commonTypeDict_IntegerFormat");
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  v156[7] = v138;
  v155[8] = CFSTR("PortControllerPortPDO8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v137 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v137, "commonTypeDict_IntegerFormat");
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  v156[8] = v136;
  v155[9] = CFSTR("PortControllerPortPDO9");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v135, "commonTypeDict_IntegerFormat");
  v134 = (void *)objc_claimAutoreleasedReturnValue();
  v156[9] = v134;
  v155[10] = CFSTR("PortControllerPortPDO10");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v133 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v133, "commonTypeDict_IntegerFormat");
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  v156[10] = v132;
  v155[11] = CFSTR("PortControllerPortPDO11");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v131, "commonTypeDict_IntegerFormat");
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v156[11] = v130;
  v155[12] = CFSTR("PortControllerPortPDO12");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v129, "commonTypeDict_IntegerFormat");
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  v156[12] = v128;
  v155[13] = CFSTR("PortControllerPortPDO13");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v127, "commonTypeDict_IntegerFormat");
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  v156[13] = v126;
  v155[14] = CFSTR("PortControllerPortPDO14");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v125, "commonTypeDict_IntegerFormat");
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v156[14] = v124;
  v155[15] = CFSTR("PortControllerPortMode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v123 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v123, "commonTypeDict_IntegerFormat");
  v122 = (void *)objc_claimAutoreleasedReturnValue();
  v156[15] = v122;
  v155[16] = CFSTR("PortControllerFwVersion");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v121, "commonTypeDict_IntegerFormat");
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  v156[16] = v120;
  v155[17] = CFSTR("PortControllerElectionFailReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v119, "commonTypeDict_IntegerFormat");
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v156[17] = v118;
  v155[18] = CFSTR("PortControllerActiveContractRdo");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v117, "commonTypeDict_IntegerFormat");
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  v156[18] = v116;
  v155[19] = CFSTR("PortControllerDnSt");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v115, "commonTypeDict_IntegerFormat");
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  v156[19] = v114;
  v155[20] = CFSTR("PortControllerFetStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v113, "commonTypeDict_IntegerFormat");
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v156[20] = v112;
  v155[21] = CFSTR("PortControllerPowerState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v111, "commonTypeDict_IntegerFormat");
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  v156[21] = v110;
  v155[22] = CFSTR("PortControllerUvdmStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v109, "commonTypeDict_IntegerFormat");
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  v156[22] = v108;
  v155[23] = CFSTR("PortControllerSrcTypes");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v107, "commonTypeDict_IntegerFormat");
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  v156[23] = v106;
  v155[24] = CFSTR("PortControllerLoserReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v105, "commonTypeDict_IntegerFormat");
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  v156[24] = v104;
  v155[25] = CFSTR("PortControllerNPDOs");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v103, "commonTypeDict_IntegerFormat");
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  v156[25] = v102;
  v155[26] = CFSTR("PortControllerNEprPDOs");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v101, "commonTypeDict_IntegerFormat");
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  v156[26] = v100;
  v155[27] = CFSTR("PortControllerPDst");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v99, "commonTypeDict_IntegerFormat");
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  v156[27] = v98;
  v155[28] = CFSTR("PortControllerCapMismatch");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v97, "commonTypeDict_IntegerFormat");
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  v156[28] = v96;
  v155[29] = CFSTR("PortControllerSrdoCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v95, "commonTypeDict_IntegerFormat");
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  v156[29] = v94;
  v155[30] = CFSTR("PortControllerSrdoRetryCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v93, "commonTypeDict_IntegerFormat");
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  v156[30] = v92;
  v155[31] = CFSTR("PortControllerSrdyCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v91, "commonTypeDict_IntegerFormat");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  v156[31] = v90;
  v155[32] = CFSTR("PortControllerSrdyRejectCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v89, "commonTypeDict_IntegerFormat");
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  v156[32] = v88;
  v155[33] = CFSTR("PortControllerShortDetectCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v87, "commonTypeDict_IntegerFormat");
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v156[33] = v86;
  v155[34] = CFSTR("PortControllerSrdoRejectCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v85, "commonTypeDict_IntegerFormat");
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  v156[34] = v84;
  v155[35] = CFSTR("PortControllerVdoFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v83, "commonTypeDict_IntegerFormat");
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v156[35] = v82;
  v155[36] = CFSTR("PortControllerI2cErrCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v81, "commonTypeDict_IntegerFormat");
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v156[36] = v80;
  v155[37] = CFSTR("PortControllerSurpriseAckCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v79, "commonTypeDict_IntegerFormat");
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  v156[37] = v78;
  v155[38] = CFSTR("PortControllerSurpriseNackCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v77, "commonTypeDict_IntegerFormat");
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v156[38] = v76;
  v155[39] = CFSTR("PortControllerStuckCmdCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v75, "commonTypeDict_IntegerFormat");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v156[39] = v74;
  v155[40] = CFSTR("PortControllerWakeFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v73, "commonTypeDict_IntegerFormat");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v156[40] = v72;
  v155[41] = CFSTR("PortControllerAttachCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v71, "commonTypeDict_IntegerFormat");
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v156[41] = v70;
  v155[42] = CFSTR("PortControllerDetachCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v69, "commonTypeDict_IntegerFormat");
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  v156[42] = v68;
  v155[43] = CFSTR("PortControllerPwrRoleSwapFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v67, "commonTypeDict_IntegerFormat");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v156[43] = v66;
  v155[44] = CFSTR("PortControllerPwrRoleSwapCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v65, "commonTypeDict_IntegerFormat");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v156[44] = v64;
  v155[45] = CFSTR("PortControllerDataRoleSwapFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v63, "commonTypeDict_IntegerFormat");
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v156[45] = v62;
  v155[46] = CFSTR("PortControllerDataRoleSwapCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v61, "commonTypeDict_IntegerFormat");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v156[46] = v60;
  v155[47] = CFSTR("PortControllerInpFetEnFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v59, "commonTypeDict_IntegerFormat");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v156[47] = v58;
  v155[48] = CFSTR("PortControllerHardResetCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "commonTypeDict_IntegerFormat");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v156[48] = v56;
  v155[49] = CFSTR("PortControllerIrqCntAppLd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v55, "commonTypeDict_IntegerFormat");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v156[49] = v54;
  v155[50] = CFSTR("PortControllerIrqCntHrdRst");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v53, "commonTypeDict_IntegerFormat");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v156[50] = v52;
  v155[51] = CFSTR("PortControllerIrqCntPlg");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "commonTypeDict_IntegerFormat");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v156[51] = v50;
  v155[52] = CFSTR("PortControllerIrqCntStsUpd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "commonTypeDict_IntegerFormat");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v156[52] = v48;
  v155[53] = CFSTR("PortControllerIrqCntPwrStsUpd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "commonTypeDict_IntegerFormat");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v156[53] = v46;
  v155[54] = CFSTR("PortControllerIrqCntRxSrcCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "commonTypeDict_IntegerFormat");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v156[54] = v44;
  v155[55] = CFSTR("PortControllerIrqCntPdStsUpd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "commonTypeDict_IntegerFormat");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v156[55] = v42;
  v155[56] = CFSTR("PortControllerIrqCntRxIdSop");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "commonTypeDict_IntegerFormat");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v156[56] = v40;
  v155[57] = CFSTR("PortControllerIrqCntUvdmEnum");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "commonTypeDict_IntegerFormat");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v156[57] = v38;
  v155[58] = CFSTR("PortControllerIrqCntUvdmStsUpd");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "commonTypeDict_IntegerFormat");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v156[58] = v36;
  v155[59] = CFSTR("PortControllerIrqCntUsb2Plg");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "commonTypeDict_IntegerFormat");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v156[59] = v34;
  v155[60] = CFSTR("PortControllerIrqCntUsb2Wak");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "commonTypeDict_IntegerFormat");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v156[60] = v32;
  v155[61] = CFSTR("PortControllerIrqCntConSrc");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "commonTypeDict_IntegerFormat");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v156[61] = v30;
  v155[62] = CFSTR("PortControllerIrqCntRxSnkCap");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "commonTypeDict_IntegerFormat");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v156[62] = v28;
  v155[63] = CFSTR("PortControllerIrqCntRxRdo");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "commonTypeDict_IntegerFormat");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v156[63] = v26;
  v155[64] = CFSTR("PortControllerIrqCntAlert");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "commonTypeDict_IntegerFormat");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v156[64] = v24;
  v155[65] = CFSTR("PortControllerIrqCntldcm");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "commonTypeDict_IntegerFormat");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v156[65] = v22;
  v155[66] = CFSTR("PortControllerBootFlags");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "commonTypeDict_IntegerFormat");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v156[66] = v20;
  v155[67] = CFSTR("PortControllerSlpWakDisTime");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v156[67] = v18;
  v155[68] = CFSTR("PortControllerSlpWakDisCause");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v156[68] = v16;
  v155[69] = CFSTR("PortControllerSlpWakIsSleepEnabled");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v156[69] = v14;
  v155[70] = CFSTR("PortControllerWakeCmdFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v156[70] = v4;
  v155[71] = CFSTR("PortControllerSleepCmdFailCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v156[71] = v6;
  v155[72] = CFSTR("PortControllerWakeTimeoutCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v156[72] = v8;
  v155[73] = CFSTR("PortControllerPortControllerIrqCntWakeAck");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v156[73] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v156, v155, 74);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v160[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v160, v159, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventForwardDefinitionPortControllerBuffer
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  const __CFString *v9;
  void *v10;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0D80020], "isiPad") & 1) == 0
    && (objc_msgSend(MEMORY[0x1E0D80020], "isiPhone") & 1) == 0
    && !objc_msgSend(MEMORY[0x1E0D80020], "isMac"))
  {
    return MEMORY[0x1E0C9AA70];
  }
  v13[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D802B8];
  v11[0] = *MEMORY[0x1E0D80318];
  v11[1] = v2;
  v12[0] = &unk_1E8653350;
  v12[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v3;
  v13[1] = *MEMORY[0x1E0D802F0];
  v9 = CFSTR("PortControllerEvtBuffer");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_RawDataFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v10, &v9, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

+ (id)entryEventForwardDefinitionEAPencil
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD v24[9];
  _QWORD v25[9];
  uint64_t v26;
  void *v27;
  _QWORD v28[2];
  _QWORD v29[4];

  v29[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPad"))
    return MEMORY[0x1E0C9AA70];
  v28[0] = *MEMORY[0x1E0D80298];
  v26 = *MEMORY[0x1E0D80318];
  v27 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v27, &v26, 1);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v29[0] = v23;
  v28[1] = *MEMORY[0x1E0D802F0];
  v24[0] = CFSTR("Is Present");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = v21;
  v24[1] = CFSTR("Power Source State");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_StringFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = v19;
  v24[2] = CFSTR("Max Capacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v25[2] = v17;
  v24[3] = CFSTR("Current Capacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v25[3] = v15;
  v24[4] = CFSTR("Transport Type");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_StringFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v25[4] = v13;
  v24[5] = CFSTR("Is Charging");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v25[5] = v3;
  v24[6] = CFSTR("Power Source ID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v25[6] = v5;
  v24[7] = CFSTR("Type");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_StringFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v25[7] = v7;
  v24[8] = CFSTR("Temperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v25[8] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v25, v24, 9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v29[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventForwardDefinitionLightningConnectorStatus
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  const __CFString *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[2];
  _QWORD v13[3];

  v13[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent hasLightning](PLBatteryAgent, "hasLightning"))
    return MEMORY[0x1E0C9AA70];
  v12[0] = *MEMORY[0x1E0D80298];
  v10 = *MEMORY[0x1E0D80318];
  v11 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v2;
  v12[1] = *MEMORY[0x1E0D802F0];
  v8 = CFSTR("IOAccessoryPowerMode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

+ (id)entryEventForwardDefinitionExternalCharger
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD v28[11];
  _QWORD v29[11];
  uint64_t v30;
  void *v31;
  _QWORD v32[2];
  _QWORD v33[4];

  v33[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent hasWirelessCharger](PLBatteryAgent, "hasWirelessCharger"))
    return MEMORY[0x1E0C9AA70];
  v32[0] = *MEMORY[0x1E0D80298];
  v30 = *MEMORY[0x1E0D80318];
  v31 = &unk_1E86533A0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = v27;
  v32[1] = *MEMORY[0x1E0D802F0];
  v28[0] = CFSTR("ConnectState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v29[0] = v25;
  v28[1] = CFSTR("ResetCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v29[1] = v23;
  v28[2] = CFSTR("EEEECode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_StringFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v29[2] = v21;
  v28[3] = CFSTR("Cloaked");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_BoolFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v29[3] = v19;
  v28[4] = CFSTR("FWStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v29[4] = v17;
  v28[5] = CFSTR("LinkEfficiency");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v29[5] = v15;
  v28[6] = CFSTR("CloakReason");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v29[6] = v13;
  v28[7] = CFSTR("DeviceInfoChipVariant");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v29[7] = v3;
  v28[8] = CFSTR("DeviceInfoRegionCode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v29[8] = v5;
  v28[9] = CFSTR("PuckClassification");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v29[9] = v7;
  v28[10] = CFSTR("HFPolicy");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_RawDataFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v29[10] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, v28, 11);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v33[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v33, v32, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventForwardDefinitionUPOStepper
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  _QWORD v14[4];
  _QWORD v15[4];
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPhone"))
    return MEMORY[0x1E0C9AA70];
  v18[0] = *MEMORY[0x1E0D80298];
  v16 = *MEMORY[0x1E0D80318];
  v17 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v13;
  v18[1] = *MEMORY[0x1E0D802F0];
  v14[0] = CFSTR("RAv");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v3;
  v14[1] = CFSTR("VirtualRADelta");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v5;
  v14[2] = CFSTR("MitigationState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = v7;
  v14[3] = CFSTR("RAvTimeWindow");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[3] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventForwardDefinitionMitigationState
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[2];
  _QWORD v11[2];
  uint64_t v12;
  void *v13;
  _QWORD v14[2];
  _QWORD v15[3];

  v15[2] = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPhone"))
    return MEMORY[0x1E0C9AA70];
  v14[0] = *MEMORY[0x1E0D80298];
  v12 = *MEMORY[0x1E0D80318];
  v13 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v2;
  v14[1] = *MEMORY[0x1E0D802F0];
  v10[0] = CFSTR("MitigationState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10[1] = CFSTR("MitigationDisabled");
  v11[0] = v4;
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_BoolFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, v10, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

+ (id)entryEventForwardDefinitionSmartCharging
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  _QWORD v36[15];
  _QWORD v37[15];
  uint64_t v38;
  void *v39;
  _QWORD v40[2];
  _QWORD v41[4];

  v41[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent supportsSmartCharging](PLBatteryAgent, "supportsSmartCharging")
    && !+[PLBatteryAgent supportsFixedLimitCharging](PLBatteryAgent, "supportsFixedLimitCharging"))
  {
    return MEMORY[0x1E0C9AA70];
  }
  v40[0] = *MEMORY[0x1E0D80298];
  v38 = *MEMORY[0x1E0D80318];
  v39 = &unk_1E86533B0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v39, &v38, 1);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v41[0] = v35;
  v40[1] = *MEMORY[0x1E0D802F0];
  v36[0] = CFSTR("status");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "commonTypeDict_IntegerFormat");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v37[0] = v33;
  v36[1] = CFSTR("checkpoint");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "commonTypeDict_IntegerFormat");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v37[1] = v31;
  v36[2] = CFSTR("decisionMaker");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "commonTypeDict_IntegerFormat");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v37[2] = v29;
  v36[3] = CFSTR("decisionTime");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v37[3] = v27;
  v36[4] = CFSTR("timeTillTopOff");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v37[4] = v25;
  v36[5] = CFSTR("modelVersion");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_RealFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v37[5] = v23;
  v36[6] = CFSTR("engagementModelVersion");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_RealFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v37[6] = v21;
  v36[7] = CFSTR("engagementProbability");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v37[7] = v19;
  v36[8] = CFSTR("durationPrediction");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v37[8] = v17;
  v36[9] = CFSTR("state");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v37[9] = v15;
  v36[10] = CFSTR("isEngaged");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_BoolFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v37[10] = v13;
  v36[11] = CFSTR("isLimited");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_BoolFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v37[11] = v3;
  v36[12] = CFSTR("isFixed");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_BoolFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v37[12] = v5;
  v36[13] = CFSTR("chargeLimitTargetSoC");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v37[13] = v7;
  v36[14] = CFSTR("recommendedChargeLimit");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v37[14] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v37, v36, 15);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v41[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v41, v40, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventForwardDefinitionCleanEnergyCharging
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[3];
  _QWORD v13[3];
  uint64_t v14;
  void *v15;
  _QWORD v16[2];
  _QWORD v17[3];

  v17[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent supportsCleanEnergyCharging](PLBatteryAgent, "supportsCleanEnergyCharging"))
    return MEMORY[0x1E0C9AA70];
  v16[0] = *MEMORY[0x1E0D80298];
  v14 = *MEMORY[0x1E0D80318];
  v15 = &unk_1E8653310;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v15, &v14, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v2;
  v16[1] = *MEMORY[0x1E0D802F0];
  v12[0] = CFSTR("status");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_IntegerFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v4;
  v12[1] = CFSTR("isPaused");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_BoolFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = v6;
  v12[2] = CFSTR("cecState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13[2] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v17, v16, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

+ (id)entryEventForwardDefinitionAdapterDetails
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[5];
  _QWORD v17[5];
  uint64_t v18;
  void *v19;
  _QWORD v20[2];
  _QWORD v21[4];

  v21[2] = *MEMORY[0x1E0C80C00];
  v20[0] = *MEMORY[0x1E0D80298];
  v18 = *MEMORY[0x1E0D80318];
  v19 = &unk_1E8653310;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = v15;
  v20[1] = *MEMORY[0x1E0D802F0];
  v16[0] = CFSTR("Manufacturer");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_StringFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v13;
  v16[1] = CFSTR("Model");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_StringFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v3;
  v16[2] = CFSTR("Watts");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v17[2] = v5;
  v16[3] = CFSTR("isWireless");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_BoolFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17[3] = v7;
  v16[4] = CFSTR("AdapterPowerTier");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17[4] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v17, v16, 5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v21[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitions
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[14];
  _QWORD v19[16];

  v19[14] = *MEMORY[0x1E0C80C00];
  v18[0] = CFSTR("Battery");
  +[PLBatteryAgent entryEventBackwardDefinitionBattery](PLBatteryAgent, "entryEventBackwardDefinitionBattery");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v17;
  v18[1] = CFSTR("EABattery");
  +[PLBatteryAgent entryEventBackwardDefinitionEABattery](PLBatteryAgent, "entryEventBackwardDefinitionEABattery");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v16;
  v18[2] = CFSTR("BatteryUI");
  +[PLBatteryAgent entryEventBackwardDefinitionBatteryUI](PLBatteryAgent, "entryEventBackwardDefinitionBatteryUI");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v19[2] = v15;
  v18[3] = CFSTR("CurrentAccumulator");
  +[PLBatteryAgent entryEventBackwardDefinitionCurrentAccumulator](PLBatteryAgent, "entryEventBackwardDefinitionCurrentAccumulator");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v19[3] = v14;
  v18[4] = CFSTR("ChargingHeatMapA");
  +[PLBatteryAgent entryEventBackwardDefinitionChargingHeatMapA](PLBatteryAgent, "entryEventBackwardDefinitionChargingHeatMapA");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[4] = v13;
  v18[5] = CFSTR("ChargingHeatMapB");
  +[PLBatteryAgent entryEventBackwardDefinitionChargingHeatMapB](PLBatteryAgent, "entryEventBackwardDefinitionChargingHeatMapB");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v19[5] = v2;
  v18[6] = CFSTR("DischargingHeatMap");
  +[PLBatteryAgent entryEventBackwardDefinitionDischargingHeatMap](PLBatteryAgent, "entryEventBackwardDefinitionDischargingHeatMap");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v19[6] = v3;
  v18[7] = CFSTR("KioskMode");
  +[PLBatteryAgent entryEventBackwardDefinitionKioskMode](PLBatteryAgent, "entryEventBackwardDefinitionKioskMode");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v19[7] = v4;
  v18[8] = CFSTR("BTM");
  +[PLBatteryAgent entryEventBackwardDefinitionBTM](PLBatteryAgent, "entryEventBackwardDefinitionBTM");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v19[8] = v5;
  v18[9] = CFSTR("TrustedBatteryHealth");
  +[PLBatteryAgent entryEventBackwardDefinitionTrustedBatteryHealth](PLBatteryAgent, "entryEventBackwardDefinitionTrustedBatteryHealth");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v19[9] = v6;
  v18[10] = CFSTR("Adapter");
  +[PLBatteryAgent entryEventBackwardDefinitionAdapter](PLBatteryAgent, "entryEventBackwardDefinitionAdapter");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v19[10] = v7;
  v18[11] = CFSTR("PowerOut0");
  +[PLBatteryAgent entryEventBackwardDefinitionPowerOut](PLBatteryAgent, "entryEventBackwardDefinitionPowerOut");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v19[11] = v8;
  v18[12] = CFSTR("PowerOut1");
  +[PLBatteryAgent entryEventBackwardDefinitionPowerOut](PLBatteryAgent, "entryEventBackwardDefinitionPowerOut");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v19[12] = v9;
  v18[13] = CFSTR("ChargingLimit");
  +[PLBatteryAgent entryEventBackwardDefinitionChargingLimit](PLBatteryAgent, "entryEventBackwardDefinitionChargingLimit");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[13] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 14);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionBattery
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  _QWORD v131[2];
  _QWORD v132[2];
  _QWORD v133[2];
  _QWORD v134[2];
  _QWORD v135[2];
  _QWORD v136[2];
  _QWORD v137[2];
  _QWORD v138[2];
  _QWORD v139[2];
  _QWORD v140[2];
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD v144[2];
  _QWORD v145[2];
  _QWORD v146[2];
  _QWORD v147[2];
  _QWORD v148[2];
  _QWORD v149[2];
  _QWORD v150[2];
  _QWORD v151[2];
  _QWORD v152[2];
  _QWORD v153[2];
  _QWORD v154[2];
  _QWORD v155[2];
  _QWORD v156[2];
  _QWORD v157[2];
  _QWORD v158[2];
  _QWORD v159[2];
  _QWORD v160[2];
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[2];
  _QWORD v164[2];
  _QWORD v165[2];
  _QWORD v166[2];
  _QWORD v167[2];
  _QWORD v168[2];
  _QWORD v169[2];
  _QWORD v170[2];
  _QWORD v171[2];
  _QWORD v172[2];
  _QWORD v173[2];
  _QWORD v174[2];
  _QWORD v175[2];
  _QWORD v176[2];
  _QWORD v177[2];
  _QWORD v178[2];
  _QWORD v179[2];
  _QWORD v180[2];
  _QWORD v181[2];
  _QWORD v182[2];
  _QWORD v183[2];
  _QWORD v184[2];
  _QWORD v185[2];
  _QWORD v186[2];
  _QWORD v187[2];
  _QWORD v188[2];
  _QWORD v189[2];
  _QWORD v190[2];
  _QWORD v191[2];
  _QWORD v192[2];
  _QWORD v193[2];
  _QWORD v194[2];
  _QWORD v195[2];
  _QWORD v196[2];
  _QWORD v197[2];
  _QWORD v198[2];
  _QWORD v199[2];
  _QWORD v200[2];
  _QWORD v201[2];
  _QWORD v202[2];
  _QWORD v203[2];
  _QWORD v204[2];
  _QWORD v205[2];
  _QWORD v206[2];
  _QWORD v207[2];
  _QWORD v208[2];
  _QWORD v209[2];
  _QWORD v210[2];
  _QWORD v211[2];
  _QWORD v212[2];
  _QWORD v213[2];
  _QWORD v214[2];
  _QWORD v215[2];
  _QWORD v216[2];
  _QWORD v217[2];
  _QWORD v218[2];
  _QWORD v219[2];
  _QWORD v220[2];
  _QWORD v221[2];
  _QWORD v222[2];
  _QWORD v223[2];
  _QWORD v224[2];
  _QWORD v225[2];
  _QWORD v226[2];
  _QWORD v227[2];
  _QWORD v228[2];
  _QWORD v229[2];
  _QWORD v230[2];
  _QWORD v231[2];
  _QWORD v232[2];
  _QWORD v233[2];
  _QWORD v234[2];
  _QWORD v235[2];
  _QWORD v236[3];
  _QWORD v237[3];
  _QWORD v238[2];
  _QWORD v239[2];
  _QWORD v240[2];
  _QWORD v241[2];
  _QWORD v242[2];
  _QWORD v243[2];
  _QWORD v244[2];
  _QWORD v245[2];
  _QWORD v246[2];
  _QWORD v247[2];
  _QWORD v248[3];
  _QWORD v249[3];
  _QWORD v250[3];
  _QWORD v251[3];
  _QWORD v252[2];
  _QWORD v253[2];
  _QWORD v254[2];
  _QWORD v255[2];
  _QWORD v256[2];
  _QWORD v257[2];
  _QWORD v258[2];
  _QWORD v259[2];
  _QWORD v260[3];
  _QWORD v261[3];
  _QWORD v262[3];
  _QWORD v263[3];
  _QWORD v264[2];
  _QWORD v265[2];
  _QWORD v266[3];
  _QWORD v267[3];
  _QWORD v268[2];
  uint64_t v269;
  _QWORD v270[3];
  _QWORD v271[93];
  _QWORD v272[93];
  _QWORD v273[54];
  _QWORD v274[3];
  _QWORD v275[3];
  _QWORD v276[2];
  _QWORD v277[4];

  v277[2] = *MEMORY[0x1E0C80C00];
  v276[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80288];
  v274[0] = *MEMORY[0x1E0D80318];
  v274[1] = v2;
  v3 = MEMORY[0x1E0C9AAB0];
  v275[0] = &unk_1E86533C0;
  v275[1] = MEMORY[0x1E0C9AAB0];
  v274[2] = *MEMORY[0x1E0D80320];
  v273[0] = CFSTR("Level");
  v273[1] = CFSTR("RawLevel");
  v273[2] = CFSTR("AtCriticalLevel");
  v273[3] = CFSTR("Voltage");
  v273[4] = CFSTR("AppleRawBatteryVoltage");
  v273[5] = CFSTR("AdapterVoltage");
  v273[6] = CFSTR("InstantAmperage");
  v273[7] = CFSTR("FullAvailableCapacity");
  v273[8] = CFSTR("CurrentCapacity");
  v273[9] = CFSTR("AppleRawCurrentCapacity");
  v273[10] = CFSTR("MaxCapacity");
  v273[11] = CFSTR("AppleRawMaxCapacity");
  v273[12] = CFSTR("DesignCapacity");
  v273[13] = CFSTR("CycleCount");
  v273[14] = CFSTR("ChargeStatus");
  v273[15] = CFSTR("IsCharging");
  v273[16] = CFSTR("FullyCharged");
  v273[17] = CFSTR("Amperage");
  v273[18] = CFSTR("Temperature");
  v273[19] = CFSTR("AdapterInfo");
  v273[20] = CFSTR("ExternalConnected");
  v273[21] = CFSTR("ChemID");
  v273[22] = CFSTR("AbsoluteCapacity");
  v273[23] = CFSTR("PresentDOD");
  v273[24] = CFSTR("QmaxCell0");
  v273[25] = CFSTR("QmaxCell1");
  v273[26] = CFSTR("QmaxCell2");
  v273[27] = CFSTR("AbsoluteLevel");
  v273[28] = CFSTR("PMUConfiguration");
  v273[29] = CFSTR("DOD0");
  v273[30] = CFSTR("DOD1");
  v273[31] = CFSTR("DOD2");
  v273[32] = CFSTR("PassedCharge");
  v273[33] = CFSTR("Qstart");
  v273[34] = CFSTR("ResScale");
  v273[35] = CFSTR("RSS");
  v273[36] = CFSTR("ITMiscStatus");
  v273[37] = CFSTR("PresentMaxRa0-8");
  v273[38] = CFSTR("LifetimeMaxRa0-8Updated");
  v273[39] = CFSTR("Flags");
  v273[40] = CFSTR("BatteryCellDisconnectCount");
  v273[41] = CFSTR("GaugeResetCounter");
  v273[42] = CFSTR("ChemicalWeightedRa");
  v273[43] = CFSTR("WeightedRa");
  v273[44] = CFSTR("BatteryHealthMetric");
  v273[45] = CFSTR("PeakPerformanceCapacity");
  v273[46] = CFSTR("QmaxDisqualificationReason");
  v273[47] = CFSTR("SimRate");
  v273[48] = CFSTR("ChargeAccum");
  v273[49] = CFSTR("FilteredCurrent");
  v273[50] = CFSTR("VacVoltageLimit");
  v273[51] = CFSTR("KioskModeHighSocSeconds");
  v273[52] = CFSTR("KioskModeMode");
  v273[53] = CFSTR("CurrentSenseMonitorStatus");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v273, 54);
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v275[2] = v130;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v275, v274, 3);
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  v276[1] = *MEMORY[0x1E0D802F0];
  v277[0] = v129;
  v271[0] = CFSTR("Level");
  v5 = *MEMORY[0x1E0D80360];
  v268[0] = *MEMORY[0x1E0D80358];
  v4 = v268[0];
  v268[1] = v5;
  v270[0] = &unk_1E8633B28;
  v270[1] = CFSTR("%");
  v269 = *MEMORY[0x1E0D80290];
  v6 = v269;
  v270[2] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v270, v268, 3);
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  v272[0] = v128;
  v271[1] = CFSTR("RawLevel");
  v266[0] = v4;
  v266[1] = v5;
  v267[0] = &unk_1E8633B28;
  v267[1] = CFSTR("%");
  v266[2] = v6;
  v267[2] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v267, v266, 3);
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  v272[1] = v127;
  v271[2] = CFSTR("AtCriticalLevel");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v126, "commonTypeDict_BoolFormat");
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  v272[2] = v125;
  v271[3] = CFSTR("Voltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v124, "commonTypeDict_IntegerFormat_withUnit_mV");
  v123 = (void *)objc_claimAutoreleasedReturnValue();
  v272[3] = v123;
  v271[4] = CFSTR("AppleRawBatteryVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v122 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v122, "commonTypeDict_IntegerFormat_withUnit_mV");
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  v272[4] = v121;
  v271[5] = CFSTR("AdapterVoltage");
  v7 = *MEMORY[0x1E0D802E8];
  v264[0] = v4;
  v264[1] = v7;
  v265[0] = &unk_1E8633B58;
  v265[1] = &unk_1E86509F0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v265, v264, 2);
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  v272[5] = v120;
  v271[6] = CFSTR("InstantAmperage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v119, "commonTypeDict_IntegerFormat_withUnit_mA");
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v272[6] = v118;
  v271[7] = CFSTR("FullAvailableCapacity");
  v262[0] = v4;
  v262[1] = v5;
  v263[0] = &unk_1E8633B58;
  v263[1] = CFSTR("mAh");
  v262[2] = v7;
  v263[2] = &unk_1E8650A08;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v263, v262, 3);
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  v272[7] = v117;
  v271[8] = CFSTR("CurrentCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v116, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  v272[8] = v115;
  v271[9] = CFSTR("AppleRawCurrentCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v114, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  v272[9] = v113;
  v271[10] = CFSTR("MaxCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v112, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  v272[10] = v111;
  v271[11] = CFSTR("AppleRawMaxCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v110, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  v272[11] = v109;
  v271[12] = CFSTR("DesignCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v108, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  v272[12] = v107;
  v271[13] = CFSTR("CycleCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v106, "commonTypeDict_IntegerFormat");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  v272[13] = v105;
  v271[14] = CFSTR("ChargeStatus");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v104, "commonTypeDict_StringFormat");
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  v272[14] = v103;
  v271[15] = CFSTR("IsCharging");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v102, "commonTypeDict_BoolFormat");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  v272[15] = v101;
  v271[16] = CFSTR("FullyCharged");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v100, "commonTypeDict_BoolFormat");
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  v272[16] = v99;
  v271[17] = CFSTR("ChargingCurrent");
  v260[0] = v4;
  v260[1] = v5;
  v261[0] = &unk_1E8633B58;
  v261[1] = CFSTR("mA");
  v260[2] = v7;
  v261[2] = &unk_1E8650A20;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v261, v260, 3);
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  v272[17] = v98;
  v271[18] = CFSTR("NotChargingReason");
  v258[0] = v4;
  v258[1] = v7;
  v259[0] = &unk_1E8633B58;
  v259[1] = &unk_1E8650A38;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v259, v258, 2);
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  v272[18] = v97;
  v271[19] = CFSTR("ChargerAlert");
  v256[0] = v4;
  v256[1] = v7;
  v257[0] = &unk_1E8633B58;
  v257[1] = &unk_1E8650A50;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v257, v256, 2);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  v272[19] = v96;
  v271[20] = CFSTR("ChargerStatus");
  v254[0] = v4;
  v254[1] = v7;
  v255[0] = &unk_1E8633B58;
  v255[1] = &unk_1E8650A68;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v255, v254, 2);
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v272[20] = v95;
  v271[21] = CFSTR("ChargingVoltage");
  v252[0] = v4;
  v252[1] = v7;
  v253[0] = &unk_1E8633B58;
  v253[1] = &unk_1E8650A80;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v253, v252, 2);
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  v272[21] = v94;
  v271[22] = CFSTR("Amperage");
  v250[0] = v4;
  v250[1] = v5;
  v251[0] = &unk_1E8633B58;
  v251[1] = CFSTR("mA");
  v250[2] = v7;
  v251[2] = &unk_1E8650A98;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v251, v250, 3);
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  v272[22] = v93;
  v271[23] = CFSTR("Temperature");
  v248[0] = v4;
  v248[1] = v5;
  v249[0] = &unk_1E8633B28;
  v249[1] = CFSTR("C");
  v248[2] = v6;
  v249[2] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v249, v248, 3);
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  v272[23] = v92;
  v271[24] = CFSTR("AdapterInfo");
  v246[0] = v4;
  v246[1] = v7;
  v247[0] = &unk_1E8633B58;
  v247[1] = &unk_1E8650AB0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v247, v246, 2);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  v272[24] = v91;
  v271[25] = CFSTR("ExternalConnected");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v90, "commonTypeDict_BoolFormat");
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  v272[25] = v89;
  v271[26] = CFSTR("NominalChargeCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v88, "commonTypeDict_IntegerFormat");
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  v272[26] = v87;
  v271[27] = CFSTR("ChemID");
  v244[0] = v4;
  v244[1] = v7;
  v245[0] = &unk_1E8633B58;
  v245[1] = &unk_1E8650AC8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v245, v244, 2);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v272[27] = v86;
  v271[28] = CFSTR("AbsoluteCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v85, "commonTypeDict_IntegerFormat");
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  v272[28] = v84;
  v271[29] = CFSTR("PresentDOD");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v83, "commonTypeDict_IntegerFormat");
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v272[29] = v82;
  v271[30] = CFSTR("QmaxCell0");
  v242[0] = v4;
  v242[1] = v6;
  v243[0] = &unk_1E8633B58;
  v243[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v243, v242, 2);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  v272[30] = v81;
  v271[31] = CFSTR("QmaxCell1");
  v240[0] = v4;
  v240[1] = v6;
  v241[0] = &unk_1E8633B58;
  v241[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v241, v240, 2);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v272[31] = v80;
  v271[32] = CFSTR("QmaxCell2");
  v238[0] = v4;
  v238[1] = v6;
  v239[0] = &unk_1E8633B58;
  v239[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v239, v238, 2);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v272[32] = v79;
  v271[33] = CFSTR("AbsoluteLevel");
  v236[0] = v4;
  v236[1] = v5;
  v237[0] = &unk_1E8633B28;
  v237[1] = CFSTR("%");
  v236[2] = v6;
  v237[2] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v237, v236, 3);
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  v272[33] = v78;
  v271[34] = CFSTR("PMUConfiguration");
  v234[0] = v4;
  v234[1] = v7;
  v235[0] = &unk_1E8633B58;
  v235[1] = &unk_1E8650AE0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v235, v234, 2);
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  v272[34] = v77;
  v271[35] = CFSTR("DOD0");
  v232[0] = v4;
  v232[1] = v6;
  v233[0] = &unk_1E8633B58;
  v233[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v233, v232, 2);
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v272[35] = v76;
  v271[36] = CFSTR("DOD1");
  v230[0] = v4;
  v230[1] = v6;
  v231[0] = &unk_1E8633B58;
  v231[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v231, v230, 2);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  v272[36] = v75;
  v271[37] = CFSTR("DOD2");
  v228[0] = v4;
  v228[1] = v6;
  v229[0] = &unk_1E8633B58;
  v229[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v229, v228, 2);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  v272[37] = v74;
  v271[38] = CFSTR("PassedCharge");
  v226[0] = v4;
  v226[1] = v7;
  v227[0] = &unk_1E8633B58;
  v227[1] = &unk_1E8650AF8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v227, v226, 2);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  v272[38] = v73;
  v271[39] = CFSTR("Qstart");
  v224[0] = v4;
  v224[1] = v7;
  v225[0] = &unk_1E8633B58;
  v225[1] = &unk_1E8650B10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v225, v224, 2);
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  v272[39] = v72;
  v271[40] = CFSTR("ResScale");
  v222[0] = v4;
  v222[1] = v7;
  v223[0] = &unk_1E8633B58;
  v223[1] = &unk_1E8650B28;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v223, v222, 2);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  v272[40] = v71;
  v271[41] = CFSTR("RSS");
  v220[0] = v4;
  v220[1] = v7;
  v221[0] = &unk_1E8633B58;
  v221[1] = &unk_1E8650B40;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v221, v220, 2);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v272[41] = v70;
  v271[42] = CFSTR("ITMiscStatus");
  v219[0] = &unk_1E8633B58;
  v218[0] = v4;
  v218[1] = v7;
  v217[0] = CFSTR("BatteryData");
  v217[1] = CFSTR("ITMiscStatus");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v217, 2);
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  v219[1] = v69;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v219, v218, 2);
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  v272[42] = v68;
  v271[43] = CFSTR("PresentMaxRa0-8");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v67, "commonTypeDict_IntegerFormat");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v272[43] = v66;
  v271[44] = CFSTR("LifetimeMaxRa0-8Updated");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v65, "commonTypeDict_BoolFormat");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v272[44] = v64;
  v271[45] = CFSTR("Flags");
  v215[0] = v4;
  v215[1] = v7;
  v216[0] = &unk_1E8633B58;
  v216[1] = &unk_1E8650B58;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v216, v215, 2);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  v272[45] = v63;
  v271[46] = CFSTR("BatteryCellDisconnectCount");
  v213[0] = v4;
  v213[1] = v7;
  v214[0] = &unk_1E8633B58;
  v214[1] = &unk_1E8650B70;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v214, v213, 2);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v272[46] = v62;
  v271[47] = CFSTR("GaugeResetCounter");
  v211[0] = v4;
  v211[1] = v7;
  v212[0] = &unk_1E8633B58;
  v212[1] = &unk_1E8650B88;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v212, v211, 2);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v272[47] = v61;
  v271[48] = CFSTR("ChemicalWeightedRa");
  v209[0] = v4;
  v209[1] = v7;
  v210[0] = &unk_1E8633B58;
  v210[1] = &unk_1E8650BA0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v210, v209, 2);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v272[48] = v60;
  v271[49] = CFSTR("WeightedRa");
  v207[0] = v4;
  v207[1] = v6;
  v208[0] = &unk_1E8633B58;
  v208[1] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v208, v207, 2);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v272[49] = v59;
  v271[50] = CFSTR("BatteryHealthMetric");
  v205[0] = v4;
  v205[1] = v7;
  v206[0] = &unk_1E8633B58;
  v206[1] = &unk_1E8650BB8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v206, v205, 2);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v272[50] = v58;
  v271[51] = CFSTR("PeakPerformanceCapacity");
  v203[0] = v4;
  v203[1] = v7;
  v204[0] = &unk_1E8633B58;
  v204[1] = &unk_1E8650BD0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v204, v203, 2);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v272[51] = v57;
  v271[52] = CFSTR("QmaxDisqualificationReason");
  v201[0] = v4;
  v201[1] = v7;
  v202[0] = &unk_1E8633B58;
  v202[1] = &unk_1E8650BE8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v202, v201, 2);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v272[52] = v56;
  v271[53] = CFSTR("SimRate");
  v199[0] = v4;
  v199[1] = v7;
  v200[0] = &unk_1E8633B58;
  v200[1] = &unk_1E8650C00;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v200, v199, 2);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v272[53] = v55;
  v271[54] = CFSTR("ChargeAccum");
  v197[0] = v4;
  v197[1] = v7;
  v198[0] = &unk_1E8633B58;
  v198[1] = &unk_1E8650C18;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v198, v197, 2);
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v272[54] = v54;
  v271[55] = CFSTR("FilteredCurrent");
  v195[0] = v4;
  v195[1] = v7;
  v196[0] = &unk_1E8633B58;
  v196[1] = &unk_1E8650C30;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v196, v195, 2);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v272[55] = v53;
  v271[56] = CFSTR("VacVoltageLimit");
  v193[0] = v4;
  v193[1] = v7;
  v194[0] = &unk_1E8633B58;
  v194[1] = &unk_1E8650C48;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v194, v193, 2);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v272[56] = v52;
  v271[57] = CFSTR("KioskModeHighSocSeconds");
  v191[0] = v4;
  v191[1] = v7;
  v192[0] = &unk_1E8633B58;
  v192[1] = &unk_1E8650C60;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v192, v191, 2);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v272[57] = v51;
  v271[58] = CFSTR("KioskModeMode");
  v189[0] = v4;
  v189[1] = v7;
  v190[0] = &unk_1E8633B58;
  v190[1] = &unk_1E8650C78;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v190, v189, 2);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v272[58] = v50;
  v271[59] = CFSTR("CurrentSenseMonitorStatus");
  v187[0] = v4;
  v187[1] = v7;
  v188[0] = &unk_1E8633B58;
  v188[1] = &unk_1E8650C90;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v188, v187, 2);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v272[59] = v49;
  v271[60] = CFSTR("AdapterPower");
  v185[0] = v4;
  v185[1] = v7;
  v186[0] = &unk_1E8633B28;
  v186[1] = &unk_1E8650CA8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v186, v185, 2);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v272[60] = v48;
  v271[61] = CFSTR("SystemPower");
  v183[0] = v4;
  v183[1] = v7;
  v184[0] = &unk_1E8633B28;
  v184[1] = &unk_1E8650CC0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v184, v183, 2);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v272[61] = v47;
  v271[62] = CFSTR("PMUConfigured");
  v181[0] = v4;
  v181[1] = v7;
  v182[0] = &unk_1E8633B28;
  v182[1] = &unk_1E8650CD8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v182, v181, 2);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v272[62] = v46;
  v271[63] = CFSTR("VirtualTemperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "commonTypeDict_IntegerFormat");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v272[63] = v44;
  v271[64] = CFSTR("SWRemCap");
  v179[0] = v4;
  v179[1] = v7;
  v180[0] = &unk_1E8633B58;
  v180[1] = &unk_1E8650CF0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v180, v179, 2);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v272[64] = v43;
  v271[65] = CFSTR("SWRawFCC");
  v177[0] = v4;
  v177[1] = v7;
  v178[0] = &unk_1E8633B58;
  v178[1] = &unk_1E8650D08;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v178, v177, 2);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v272[65] = v42;
  v271[66] = CFSTR("SWRawSOC");
  v175[0] = v4;
  v175[1] = v7;
  v176[0] = &unk_1E8633B58;
  v176[1] = &unk_1E8650D20;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v176, v175, 2);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v272[66] = v41;
  v271[67] = CFSTR("OCVCount");
  v173[0] = v4;
  v173[1] = v7;
  v174[0] = &unk_1E8633B58;
  v174[1] = &unk_1E8650D38;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v174, v173, 2);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v272[67] = v40;
  v271[68] = CFSTR("OCV");
  v171[0] = v4;
  v171[1] = v7;
  v172[0] = &unk_1E8633B58;
  v172[1] = &unk_1E8650D50;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v172, v171, 2);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v272[68] = v39;
  v271[69] = CFSTR("RaUpdateDisqualified");
  v169[0] = v4;
  v169[1] = v7;
  v170[0] = &unk_1E8633B58;
  v170[1] = &unk_1E8650D68;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v170, v169, 2);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v272[69] = v38;
  v271[70] = CFSTR("QmaxUpdateDisqualified");
  v167[0] = v4;
  v167[1] = v7;
  v168[0] = &unk_1E8633B58;
  v168[1] = &unk_1E8650D80;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v168, v167, 2);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v272[70] = v37;
  v271[71] = CFSTR("TimeSinceLastOCV");
  v165[0] = v4;
  v165[1] = v7;
  v166[0] = &unk_1E8633B58;
  v166[1] = &unk_1E8650D98;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v166, v165, 2);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v272[71] = v36;
  v271[72] = CFSTR("LPEMMode");
  v163[0] = v4;
  v163[1] = v7;
  v164[0] = &unk_1E8633B58;
  v164[1] = &unk_1E8650DB0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v164, v163, 2);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v272[72] = v35;
  v271[73] = CFSTR("InductiveFWMode");
  v161[0] = v4;
  v161[1] = v7;
  v162[0] = &unk_1E8633B58;
  v162[1] = &unk_1E8650DC8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v162, v161, 2);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v272[73] = v34;
  v271[74] = CFSTR("Port1FilteredPower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "commonTypeDict_IntegerFormat");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v272[74] = v32;
  v271[75] = CFSTR("Port1Current");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "commonTypeDict_IntegerFormat");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v272[75] = v30;
  v271[76] = CFSTR("Port1Voltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "commonTypeDict_IntegerFormat");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v272[76] = v28;
  v271[77] = CFSTR("Port1Power");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "commonTypeDict_IntegerFormat");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v272[77] = v26;
  v271[78] = CFSTR("ChargerRegisterStatus");
  v159[0] = v4;
  v159[1] = v7;
  v160[0] = &unk_1E8633B88;
  v160[1] = &unk_1E8650DE0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v160, v159, 2);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v272[78] = v25;
  v271[79] = CFSTR("SOCFThreshold");
  v157[0] = v4;
  v157[1] = v7;
  v158[0] = &unk_1E8633B58;
  v158[1] = &unk_1E8650DF8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v158, v157, 2);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v272[79] = v24;
  v271[80] = CFSTR("SOCAlarm");
  v155[0] = v4;
  v155[1] = v7;
  v156[0] = &unk_1E8633B58;
  v156[1] = &unk_1E8650E10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v156, v155, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v272[80] = v23;
  v271[81] = CFSTR("DynamicEntryStatus");
  v153[0] = v4;
  v153[1] = v7;
  v154[0] = &unk_1E8633B58;
  v154[1] = &unk_1E8650E28;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v154, v153, 2);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v272[81] = v22;
  v271[82] = CFSTR("ShallowDischargeLevels");
  v151[0] = v4;
  v151[1] = v7;
  v152[0] = &unk_1E8633B58;
  v152[1] = &unk_1E8650E40;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v152, v151, 2);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v272[82] = v21;
  v271[83] = CFSTR("ShallowDischargeScore");
  v149[0] = v4;
  v149[1] = v7;
  v150[0] = &unk_1E8633B58;
  v150[1] = &unk_1E8650E58;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v150, v149, 2);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v272[83] = v20;
  v271[84] = CFSTR("ShallowDischargeFlag");
  v147[0] = v4;
  v147[1] = v7;
  v148[0] = &unk_1E8633B58;
  v148[1] = &unk_1E8650E70;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v148, v147, 2);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v272[84] = v19;
  v271[85] = CFSTR("TLCDuration");
  v145[0] = v4;
  v145[1] = v7;
  v146[0] = &unk_1E8633B58;
  v146[1] = &unk_1E8650E88;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v146, v145, 2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v272[85] = v18;
  v271[86] = CFSTR("AverageAmperage");
  v143[0] = v4;
  v143[1] = v7;
  v144[0] = &unk_1E8633B58;
  v144[1] = &unk_1E8650EA0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v144, v143, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v272[86] = v8;
  v271[87] = CFSTR("DODatEOC");
  v141[0] = v4;
  v141[1] = v7;
  v142[0] = &unk_1E8633B58;
  v142[1] = &unk_1E8650EB8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v142, v141, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v272[87] = v9;
  v271[88] = CFSTR("SOC1Voltage");
  v139[0] = v4;
  v139[1] = v7;
  v140[0] = &unk_1E8633B58;
  v140[1] = &unk_1E8650ED0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v140, v139, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v272[88] = v10;
  v271[89] = CFSTR("ChargerInhibitReason");
  v137[0] = v4;
  v137[1] = v7;
  v138[0] = &unk_1E8633B58;
  v138[1] = &unk_1E8650EE8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v138, v137, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v272[89] = v11;
  v271[90] = CFSTR("Dod0AtQualifiedQmax");
  v135[0] = v4;
  v135[1] = v7;
  v136[0] = &unk_1E8633B58;
  v136[1] = &unk_1E8650F00;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v136, v135, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v272[90] = v12;
  v271[91] = CFSTR("SlowChargingReason");
  v133[0] = v4;
  v133[1] = v7;
  v134[0] = &unk_1E8633B58;
  v134[1] = &unk_1E8650F18;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v134, v133, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v272[91] = v13;
  v271[92] = CFSTR("BatteryRsenseOpenCount");
  v131[0] = v4;
  v131[1] = v7;
  v132[0] = &unk_1E8633B58;
  v132[1] = &unk_1E8650F30;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v132, v131, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v272[92] = v14;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v272, v271, 93);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v277[1] = v15;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v277, v276, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  return v16;
}

+ (id)entryEventBackwardDefinitionBatteryUI
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[3];
  _QWORD v16[3];
  _QWORD v17[2];
  _QWORD v18[3];

  v18[2] = *MEMORY[0x1E0C80C00];
  v17[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80340];
  v15[0] = *MEMORY[0x1E0D80318];
  v15[1] = v2;
  v16[0] = &unk_1E8653310;
  v16[1] = &unk_1E8633B40;
  v15[2] = *MEMORY[0x1E0D80338];
  v16[2] = &unk_1E8653320;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = v3;
  v17[1] = *MEMORY[0x1E0D802F0];
  v13[0] = CFSTR("Level");
  v4 = *MEMORY[0x1E0D80360];
  v11[0] = *MEMORY[0x1E0D80358];
  v11[1] = v4;
  v12[0] = &unk_1E8633B28;
  v12[1] = CFSTR("%");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v13[1] = CFSTR("IsCharging");
  v14[0] = v5;
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_BoolFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v18[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, v17, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

+ (id)entryEventBackwardDefinitionEABattery
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[2];
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  _QWORD v78[2];
  _QWORD v79[2];
  _QWORD v80[2];
  _QWORD v81[2];
  _QWORD v82[30];
  _QWORD v83[30];
  uint64_t v84;
  void *v85;
  _QWORD v86[2];
  _QWORD v87[4];

  v87[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
    return MEMORY[0x1E0C9AA70];
  v86[0] = *MEMORY[0x1E0D80298];
  v84 = *MEMORY[0x1E0D80318];
  v85 = &unk_1E86533D0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v85, &v84, 1);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v87[0] = v55;
  v86[1] = *MEMORY[0x1E0D802F0];
  v82[0] = CFSTR("Battery Case Available Current");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "commonTypeDict_IntegerFormat");
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v83[0] = v53;
  v82[1] = CFSTR("Is Present");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "commonTypeDict_IntegerFormat");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v83[1] = v51;
  v82[2] = CFSTR("Power Source State");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "commonTypeDict_StringFormat");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v83[2] = v49;
  v82[3] = CFSTR("Name");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "commonTypeDict_StringFormat");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v83[3] = v47;
  v82[4] = CFSTR("Max Capacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v83[4] = v45;
  v82[5] = CFSTR("Current");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "commonTypeDict_IntegerFormat_withUnit_mA");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v83[5] = v43;
  v82[6] = CFSTR("Voltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "commonTypeDict_IntegerFormat_withUnit_mV");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v83[6] = v41;
  v82[7] = CFSTR("Current Capacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v83[7] = v39;
  v82[8] = CFSTR("Transport Type");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "commonTypeDict_StringFormat");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v83[8] = v37;
  v82[9] = CFSTR("Is Charging");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "commonTypeDict_IntegerFormat");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v83[9] = v35;
  v82[10] = CFSTR("Power Source ID");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "commonTypeDict_IntegerFormat");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v83[10] = v33;
  v82[11] = CFSTR("Time to Empty");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "commonTypeDict_IntegerFormat");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v83[11] = v31;
  v82[12] = CFSTR("Type");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "commonTypeDict_StringFormat");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v83[12] = v29;
  v82[13] = CFSTR("Temperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v83[13] = v27;
  v82[14] = CFSTR("AppleRawCurrentCapacity");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat_withUnit_mAh");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v83[14] = v25;
  v82[15] = CFSTR("Battery Case Cumulative Current");
  v3 = *MEMORY[0x1E0D80360];
  v80[0] = *MEMORY[0x1E0D80358];
  v2 = v80[0];
  v80[1] = v3;
  v81[0] = &unk_1E8633B58;
  v81[1] = CFSTR("As");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v81, v80, 2);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v83[15] = v24;
  v82[16] = CFSTR("IncomingVoltage");
  v4 = *MEMORY[0x1E0D802E8];
  v78[0] = v2;
  v78[1] = v4;
  v79[0] = &unk_1E8633B58;
  v79[1] = &unk_1E8650F48;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v79, v78, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v83[16] = v23;
  v82[17] = CFSTR("IncomingCurrent");
  v76[0] = v2;
  v76[1] = v4;
  v77[0] = &unk_1E8633B58;
  v77[1] = &unk_1E8650F60;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v77, v76, 2);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v83[17] = v22;
  v82[18] = CFSTR("Cell0Voltage");
  v74[0] = v2;
  v74[1] = v4;
  v75[0] = &unk_1E8633B58;
  v75[1] = &unk_1E8650F78;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v75, v74, 2);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v83[18] = v21;
  v82[19] = CFSTR("Cell1Voltage");
  v72[0] = v2;
  v72[1] = v4;
  v73[0] = &unk_1E8633B58;
  v73[1] = &unk_1E8650F90;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v73, v72, 2);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v83[19] = v20;
  v82[20] = CFSTR("PowerStatus");
  v70[0] = v2;
  v70[1] = v4;
  v71[0] = &unk_1E8633B58;
  v71[1] = &unk_1E8650FA8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v71, v70, 2);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v83[20] = v19;
  v82[21] = CFSTR("ChargingStatus");
  v68[0] = v2;
  v68[1] = v4;
  v69[0] = &unk_1E8633B58;
  v69[1] = &unk_1E8650FC0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v69, v68, 2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v83[21] = v18;
  v82[22] = CFSTR("InductiveStatus");
  v66[0] = v2;
  v66[1] = v4;
  v67[0] = &unk_1E8633B58;
  v67[1] = &unk_1E8650FD8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v67, v66, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v83[22] = v17;
  v82[23] = CFSTR("FamilyCode");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v83[23] = v15;
  v82[24] = CFSTR("AvailablePower");
  v64[0] = v2;
  v64[1] = v4;
  v65[0] = &unk_1E8633B58;
  v65[1] = &unk_1E8650FF0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v65, v64, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v83[24] = v14;
  v82[25] = CFSTR("RxPowerLimit");
  v62[0] = v2;
  v62[1] = v4;
  v63[0] = &unk_1E8633B58;
  v63[1] = &unk_1E8651008;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v63, v62, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v83[25] = v5;
  v82[26] = CFSTR("ChargingCurrent");
  v60[0] = v2;
  v60[1] = v4;
  v61[0] = &unk_1E8633B58;
  v61[1] = &unk_1E8651020;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v61, v60, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v83[26] = v6;
  v82[27] = CFSTR("CycleCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v83[27] = v8;
  v82[28] = CFSTR("NominalChargeCapacity");
  v58[0] = v2;
  v58[1] = v4;
  v59[0] = &unk_1E8633B58;
  v59[1] = &unk_1E8651038;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v59, v58, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v83[28] = v9;
  v82[29] = CFSTR("ChargingVoltage");
  v56[0] = v2;
  v56[1] = v4;
  v57[0] = &unk_1E8633B58;
  v57[1] = &unk_1E8651050;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v57, v56, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v83[29] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v83, v82, 30);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v87[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v87, v86, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventPointDefinitionEABatteryConfig
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[2];
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  _QWORD v48[2];
  _QWORD v49[2];
  _QWORD v50[2];
  _QWORD v51[2];
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[2];
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  _QWORD v78[2];
  _QWORD v79[2];
  _QWORD v80[2];
  _QWORD v81[2];
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[2];
  _QWORD v85[2];
  _QWORD v86[26];
  _QWORD v87[26];
  uint64_t v88;
  void *v89;
  _QWORD v90[2];
  _QWORD v91[4];

  v91[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent supportsAccConnectionLogging](PLBatteryAgent, "supportsAccConnectionLogging"))
    return MEMORY[0x1E0C9AA70];
  v90[0] = *MEMORY[0x1E0D80298];
  v88 = *MEMORY[0x1E0D80318];
  v89 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v89, &v88, 1);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v91[0] = v33;
  v90[1] = *MEMORY[0x1E0D802F0];
  v86[0] = CFSTR("AttachCountType0");
  v3 = *MEMORY[0x1E0D802E8];
  v84[0] = *MEMORY[0x1E0D80358];
  v2 = v84[0];
  v84[1] = v3;
  v85[0] = &unk_1E8633B58;
  v85[1] = &unk_1E8651068;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v85, v84, 2);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v87[0] = v32;
  v86[1] = CFSTR("AttachCountType1");
  v82[0] = v2;
  v82[1] = v3;
  v83[0] = &unk_1E8633B58;
  v83[1] = &unk_1E8651080;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v83, v82, 2);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v87[1] = v31;
  v86[2] = CFSTR("AttachCountType2");
  v80[0] = v2;
  v80[1] = v3;
  v81[0] = &unk_1E8633B58;
  v81[1] = &unk_1E8651098;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v81, v80, 2);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v87[2] = v30;
  v86[3] = CFSTR("AttachCountAdapter5");
  v78[0] = v2;
  v78[1] = v3;
  v79[0] = &unk_1E8633B58;
  v79[1] = &unk_1E86510B0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v79, v78, 2);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v87[3] = v29;
  v86[4] = CFSTR("AttachCountAdapter7");
  v76[0] = v2;
  v76[1] = v3;
  v77[0] = &unk_1E8633B58;
  v77[1] = &unk_1E86510C8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v77, v76, 2);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v87[4] = v28;
  v86[5] = CFSTR("AttachCountAdapter10");
  v74[0] = v2;
  v74[1] = v3;
  v75[0] = &unk_1E8633B58;
  v75[1] = &unk_1E86510E0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v75, v74, 2);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v87[5] = v27;
  v86[6] = CFSTR("AttachCountAdapter12");
  v72[0] = v2;
  v72[1] = v3;
  v73[0] = &unk_1E8633B58;
  v73[1] = &unk_1E86510F8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v73, v72, 2);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v87[6] = v26;
  v86[7] = CFSTR("AttachCountAdapter15");
  v70[0] = v2;
  v70[1] = v3;
  v71[0] = &unk_1E8633B58;
  v71[1] = &unk_1E8651110;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v71, v70, 2);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v87[7] = v25;
  v86[8] = CFSTR("AttachCountAdapter18");
  v68[0] = v2;
  v68[1] = v3;
  v69[0] = &unk_1E8633B58;
  v69[1] = &unk_1E8651128;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v69, v68, 2);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v87[8] = v24;
  v86[9] = CFSTR("AttachCountAdapter20");
  v66[0] = v2;
  v66[1] = v3;
  v67[0] = &unk_1E8633B58;
  v67[1] = &unk_1E8651140;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v67, v66, 2);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v87[9] = v23;
  v86[10] = CFSTR("QmaxCell0");
  v64[0] = v2;
  v64[1] = v3;
  v65[0] = &unk_1E8633B58;
  v65[1] = &unk_1E8651158;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v65, v64, 2);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v87[10] = v22;
  v86[11] = CFSTR("QmaxCell1");
  v62[0] = v2;
  v62[1] = v3;
  v63[0] = &unk_1E8633B58;
  v63[1] = &unk_1E8651170;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v63, v62, 2);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v87[11] = v21;
  v86[12] = CFSTR("MaximumTemperature");
  v60[0] = v2;
  v60[1] = v3;
  v61[0] = &unk_1E8633B58;
  v61[1] = &unk_1E8651188;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v61, v60, 2);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v87[12] = v20;
  v86[13] = CFSTR("MinimumTemperature");
  v58[0] = v2;
  v58[1] = v3;
  v59[0] = &unk_1E8633B58;
  v59[1] = &unk_1E86511A0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v59, v58, 2);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v87[13] = v19;
  v86[14] = CFSTR("MaximumVoltageCell0");
  v56[0] = v2;
  v56[1] = v3;
  v57[0] = &unk_1E8633B58;
  v57[1] = &unk_1E86511B8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v57, v56, 2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v87[14] = v18;
  v86[15] = CFSTR("MaximumVoltageCell1");
  v54[0] = v2;
  v54[1] = v3;
  v55[0] = &unk_1E8633B58;
  v55[1] = &unk_1E86511D0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v55, v54, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v87[15] = v17;
  v86[16] = CFSTR("MinimumVoltageCell0");
  v52[0] = v2;
  v52[1] = v3;
  v53[0] = &unk_1E8633B58;
  v53[1] = &unk_1E86511E8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v53, v52, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v87[16] = v16;
  v86[17] = CFSTR("MinimumVoltageCell1");
  v50[0] = v2;
  v50[1] = v3;
  v51[0] = &unk_1E8633B58;
  v51[1] = &unk_1E8651200;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v51, v50, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v87[17] = v15;
  v86[18] = CFSTR("MaximumChargeCurrent");
  v48[0] = v2;
  v48[1] = v3;
  v49[0] = &unk_1E8633B58;
  v49[1] = &unk_1E8651218;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v49, v48, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v87[18] = v14;
  v86[19] = CFSTR("MaximumDischargeCurrent");
  v46[0] = v2;
  v46[1] = v3;
  v47[0] = &unk_1E8633B58;
  v47[1] = &unk_1E8651230;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v47, v46, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v87[19] = v4;
  v86[20] = CFSTR("TimeBelowLowTemperature");
  v44[0] = v2;
  v44[1] = v3;
  v45[0] = &unk_1E8633B58;
  v45[1] = &unk_1E8651248;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v45, v44, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v87[20] = v5;
  v86[21] = CFSTR("TimeAboveLowTemperature");
  v42[0] = v2;
  v42[1] = v3;
  v43[0] = &unk_1E8633B58;
  v43[1] = &unk_1E8651260;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v43, v42, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v87[21] = v6;
  v86[22] = CFSTR("TimeAboveMedTemperature");
  v40[0] = v2;
  v40[1] = v3;
  v41[0] = &unk_1E8633B58;
  v41[1] = &unk_1E8651278;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v41, v40, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v87[22] = v7;
  v86[23] = CFSTR("TimeAboveHighTemperature");
  v38[0] = v2;
  v38[1] = v3;
  v39[0] = &unk_1E8633B58;
  v39[1] = &unk_1E8651290;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v39, v38, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v87[23] = v8;
  v86[24] = CFSTR("TotalOperatingTime");
  v36[0] = v2;
  v36[1] = v3;
  v37[0] = &unk_1E8633B58;
  v37[1] = &unk_1E86512A8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v37, v36, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v87[24] = v9;
  v86[25] = CFSTR("KioskModeCount");
  v34[0] = v2;
  v34[1] = v3;
  v35[0] = &unk_1E8633B58;
  v35[1] = &unk_1E86512C0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v35, v34, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v87[25] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v87, v86, 26);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v91[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v91, v90, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventBackwardDefinitionBTM
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v23[8];
  _QWORD v24[8];
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[4];

  v28[2] = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent shouldLogBTM](PLBatteryAgent, "shouldLogBTM"))
    return MEMORY[0x1E0C9AA70];
  v27[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80288];
  v25[0] = *MEMORY[0x1E0D80318];
  v25[1] = v2;
  v26[0] = &unk_1E86533A0;
  v26[1] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = v22;
  v27[1] = *MEMORY[0x1E0D802F0];
  v23[0] = CFSTR("BTMProperty_TimestampforImax1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "commonTypeDict_DateFormat");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = v20;
  v23[1] = CFSTR("BTMProperty_OCVforImax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "commonTypeDict_IntegerFormat");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v24[1] = v18;
  v23[2] = CFSTR("BTMProperty_Imax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "commonTypeDict_IntegerFormat");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v24[2] = v16;
  v23[3] = CFSTR("BTMProperty_VforImax");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "commonTypeDict_IntegerFormat");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v24[3] = v14;
  v23[4] = CFSTR("BTMProperty_TimestampforVmin1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "commonTypeDict_DateFormat");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v24[4] = v4;
  v23[5] = CFSTR("BTMProperty_OCVforVmin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "commonTypeDict_IntegerFormat");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v24[5] = v6;
  v23[6] = CFSTR("BTMProperty_Vmin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "commonTypeDict_IntegerFormat");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v24[6] = v8;
  v23[7] = CFSTR("BTMProperty_IforVmin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "commonTypeDict_IntegerFormat");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v24[7] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, v23, 8);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v28[1] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v28, v27, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)entryEventBackwardDefinitionTrustedBatteryHealth
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  _QWORD v14[4];
  _QWORD v15[4];
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x1E0C80C00];
  v18[0] = *MEMORY[0x1E0D80298];
  v16 = *MEMORY[0x1E0D80318];
  v17 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v13;
  v18[1] = *MEMORY[0x1E0D802F0];
  v14[0] = CFSTR("TrustedDataEnabled");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v3;
  v14[1] = CFSTR("TrustedDataFailedTimestamp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_DateFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v5;
  v14[2] = CFSTR("TrustedDataTimestamp");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_DateFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = v7;
  v14[3] = CFSTR("TrustedDataFailedCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[3] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionAdapter
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[12];
  _QWORD v31[12];
  uint64_t v32;
  void *v33;
  _QWORD v34[2];
  _QWORD v35[4];

  v35[2] = *MEMORY[0x1E0C80C00];
  v34[0] = *MEMORY[0x1E0D80298];
  v32 = *MEMORY[0x1E0D80318];
  v33 = &unk_1E8653310;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v35[0] = v29;
  v34[1] = *MEMORY[0x1E0D802F0];
  v30[0] = CFSTR("AccumulatedAdapterEfficiencyLoss");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v27;
  v30[1] = CFSTR("AccumulatedSystemLoad");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v25;
  v30[2] = CFSTR("AccumulatedSystemPowerIn");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v31[2] = v23;
  v30[3] = CFSTR("AdapterEfficiencyLoss");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v21;
  v30[4] = CFSTR("AdapterEfficiencyLossAccumulatorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v19;
  v30[5] = CFSTR("SystemLoad");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v17;
  v30[6] = CFSTR("SystemLoadAccumulatorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v31[6] = v15;
  v30[7] = CFSTR("SystemPowerIn");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v31[7] = v13;
  v30[8] = CFSTR("SystemPowerInAccumulatorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v31[8] = v3;
  v30[9] = CFSTR("SystemInputVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v31[9] = v5;
  v30[10] = CFSTR("SystemInputCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v31[10] = v7;
  v30[11] = CFSTR("PowerTelemetryErrorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v31[11] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v35[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v35, v34, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionPowerOut
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  _QWORD v52[23];
  _QWORD v53[23];
  uint64_t v54;
  void *v55;
  _QWORD v56[2];
  _QWORD v57[4];

  v57[2] = *MEMORY[0x1E0C80C00];
  v56[0] = *MEMORY[0x1E0D80298];
  v54 = *MEMORY[0x1E0D80318];
  v55 = &unk_1E8653360;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v55, &v54, 1);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v57[0] = v51;
  v56[1] = *MEMORY[0x1E0D802F0];
  v52[0] = CFSTR("FilteredPower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v50, "commonTypeDict_IntegerFormat");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v53[0] = v49;
  v52[1] = CFSTR("Current");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "commonTypeDict_IntegerFormat");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v53[1] = v47;
  v52[2] = CFSTR("AdapterVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "commonTypeDict_IntegerFormat");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v53[2] = v45;
  v52[3] = CFSTR("Watts");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "commonTypeDict_IntegerFormat");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v53[3] = v43;
  v52[4] = CFSTR("ConfiguredCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "commonTypeDict_IntegerFormat");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v53[4] = v41;
  v52[5] = CFSTR("ConfiguredVoltage");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "commonTypeDict_IntegerFormat");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v53[5] = v39;
  v52[6] = CFSTR("AccumulatedPower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "commonTypeDict_IntegerFormat");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v53[6] = v37;
  v52[7] = CFSTR("AccumulatorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "commonTypeDict_IntegerFormat");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v53[7] = v35;
  v52[8] = CFSTR("AccumulatorErrorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "commonTypeDict_IntegerFormat");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v53[8] = v33;
  v52[9] = CFSTR("PortType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "commonTypeDict_IntegerFormat");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v53[9] = v31;
  v52[10] = CFSTR("PortIndex");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "commonTypeDict_IntegerFormat");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v53[10] = v29;
  v52[11] = CFSTR("VConnAccumulatedPower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "commonTypeDict_IntegerFormat");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v53[11] = v27;
  v52[12] = CFSTR("VConnMaxCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "commonTypeDict_IntegerFormat");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v53[12] = v25;
  v52[13] = CFSTR("VConnCurrent");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v53[13] = v23;
  v52[14] = CFSTR("VConnAccumulatorErrorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v53[14] = v21;
  v52[15] = CFSTR("VConnAccumulatorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v53[15] = v19;
  v52[16] = CFSTR("VConnPower");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v53[16] = v17;
  v52[17] = CFSTR("CPMSBudget");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v53[17] = v15;
  v52[18] = CFSTR("PowerState");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v53[18] = v13;
  v52[19] = CFSTR("PDPowermW");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v53[19] = v3;
  v52[20] = CFSTR("USBSleepPoolPowermW");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v53[20] = v5;
  v52[21] = CFSTR("USBWakePoolPowermW");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v53[21] = v7;
  v52[22] = CFSTR("NumLDCMCollisions");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v53[22] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v53, v52, 23);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v57[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v57, v56, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionCurrentAccumulator
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[5];
  _QWORD v17[5];
  uint64_t v18;
  void *v19;
  _QWORD v20[2];
  _QWORD v21[4];

  v21[2] = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0D80020], "isiOS") & 1) == 0
    && !objc_msgSend(MEMORY[0x1E0D80020], "isWatch"))
  {
    return MEMORY[0x1E0C9AA70];
  }
  v20[0] = *MEMORY[0x1E0D80298];
  v18 = *MEMORY[0x1E0D80318];
  v19 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = v15;
  v20[1] = *MEMORY[0x1E0D802F0];
  v16[0] = CFSTR("CurrentAccumulator");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v13;
  v16[1] = CFSTR("CurrentAccumulatorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v3;
  v16[2] = CFSTR("Cell1CurrentAccumulator");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v17[2] = v5;
  v16[3] = CFSTR("Cell2CurrentAccumulator");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17[3] = v7;
  v16[4] = CFSTR("CellCurrentAccumulatorCount");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17[4] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v17, v16, 5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v21[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v21, v20, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionChargingHeatMapA
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  _QWORD v14[4];
  _QWORD v15[4];
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x1E0C80C00];
  v18[0] = *MEMORY[0x1E0D80298];
  v16 = *MEMORY[0x1E0D80318];
  v17 = &unk_1E86533A0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v13;
  v18[1] = *MEMORY[0x1E0D802F0];
  v14[0] = CFSTR("Temperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v3;
  v14[1] = CFSTR("Bin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v5;
  v14[2] = CFSTR("TimeInMinutes");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = v7;
  v14[3] = CFSTR("HeatMapType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[3] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionChargingHeatMapB
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  _QWORD v14[4];
  _QWORD v15[4];
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x1E0C80C00];
  v18[0] = *MEMORY[0x1E0D80298];
  v16 = *MEMORY[0x1E0D80318];
  v17 = &unk_1E86533A0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v13;
  v18[1] = *MEMORY[0x1E0D802F0];
  v14[0] = CFSTR("Temperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v3;
  v14[1] = CFSTR("Bin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v5;
  v14[2] = CFSTR("TimeInMinutes");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = v7;
  v14[3] = CFSTR("HeatMapType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[3] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionDischargingHeatMap
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  _QWORD v14[4];
  _QWORD v15[4];
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x1E0C80C00];
  v18[0] = *MEMORY[0x1E0D80298];
  v16 = *MEMORY[0x1E0D80318];
  v17 = &unk_1E86533A0;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v13;
  v18[1] = *MEMORY[0x1E0D802F0];
  v14[0] = CFSTR("Temperature");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = v3;
  v14[1] = CFSTR("Bin");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v15[1] = v5;
  v14[2] = CFSTR("TimeInMinutes");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15[2] = v7;
  v14[3] = CFSTR("HeatMapType");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[3] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionKioskMode
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD v26[10];
  _QWORD v27[10];
  uint64_t v28;
  void *v29;
  _QWORD v30[2];
  _QWORD v31[4];

  v31[2] = *MEMORY[0x1E0C80C00];
  v30[0] = *MEMORY[0x1E0D80298];
  v28 = *MEMORY[0x1E0D80318];
  v29 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v31[0] = v25;
  v30[1] = *MEMORY[0x1E0D802F0];
  v26[0] = CFSTR("KioskModeEntries");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "commonTypeDict_IntegerFormat");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v23;
  v26[1] = CFSTR("KioskModeExits");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "commonTypeDict_IntegerFormat");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v27[1] = v21;
  v26[2] = CFSTR("KioskModeResidency0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "commonTypeDict_IntegerFormat");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v27[2] = v19;
  v26[3] = CFSTR("KioskModeResidency1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "commonTypeDict_IntegerFormat");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v27[3] = v17;
  v26[4] = CFSTR("KioskModeResidency2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v27[4] = v15;
  v26[5] = CFSTR("KioskModeResidency3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v27[5] = v13;
  v26[6] = CFSTR("KioskModeHighSocResidency0");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_IntegerFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v27[6] = v3;
  v26[7] = CFSTR("KioskModeHighSocResidency1");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v27[7] = v5;
  v26[8] = CFSTR("KioskModeHighSocResidency2");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v27[8] = v7;
  v26[9] = CFSTR("KioskModeHighSocResidency3");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v27[9] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, v26, 10);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v31[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryEventBackwardDefinitionChargingLimit
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[6];
  _QWORD v19[6];
  uint64_t v20;
  void *v21;
  _QWORD v22[2];
  _QWORD v23[4];

  v23[2] = *MEMORY[0x1E0C80C00];
  v22[0] = *MEMORY[0x1E0D80298];
  v20 = *MEMORY[0x1E0D80318];
  v21 = &unk_1E8653350;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v23[0] = v17;
  v22[1] = *MEMORY[0x1E0D802F0];
  v18[0] = CFSTR("lastDOD0Update");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "commonTypeDict_IntegerFormat");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = v15;
  v18[1] = CFSTR("lastFullChargeDate");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "commonTypeDict_IntegerFormat");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = v13;
  v18[2] = CFSTR("lastFullChargeReq");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "commonTypeDict_BoolFormat");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v19[2] = v3;
  v18[3] = CFSTR("lastQMaxUpdate");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v19[3] = v5;
  v18[4] = CFSTR("lastQualQMaxDate");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v19[4] = v7;
  v18[5] = CFSTR("lastQualQmaxDODValue");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "commonTypeDict_IntegerFormat");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v19[5] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v23[1] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, v22, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

+ (id)entryAggregateDefinitions
{
  void *v2;
  void *v3;
  const __CFString *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v5 = CFSTR("UILevel");
  +[PLBatteryAgent entryAggregateDefinitionUILevel](PLBatteryAgent, "entryAggregateDefinitionUILevel");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v2;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

+ (id)entryAggregateDefinitionUILevel
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[2];
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[3];
  _QWORD v22[3];
  _QWORD v23[4];
  _QWORD v24[6];

  v24[4] = *MEMORY[0x1E0C80C00];
  v23[0] = *MEMORY[0x1E0D80298];
  v2 = *MEMORY[0x1E0D80340];
  v21[0] = *MEMORY[0x1E0D80318];
  v21[1] = v2;
  v22[0] = &unk_1E8653310;
  v22[1] = &unk_1E8633B40;
  v21[2] = *MEMORY[0x1E0D80338];
  v22[2] = &unk_1E8653320;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v22, v21, 3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v24[0] = v3;
  v23[1] = *MEMORY[0x1E0D802F0];
  v19[0] = CFSTR("Level");
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "commonTypeDict_IntegerFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = CFSTR("energyConsumed");
  v20[0] = v5;
  objc_msgSend(MEMORY[0x1E0D7FFB8], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "commonTypeDict_IntegerFormat");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v20[1] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v20, v19, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v24[1] = v8;
  v23[2] = *MEMORY[0x1E0D80228];
  v17 = &unk_1E86533E0;
  v15 = *MEMORY[0x1E0D80220];
  v16 = &unk_1E8653320;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v16, &v15, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v18, &v17, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v24[2] = v10;
  v23[3] = *MEMORY[0x1E0D80238];
  v14[0] = CFSTR("Level");
  v14[1] = CFSTR("energyConsumed");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v24[3] = v11;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, v23, 4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

+ (id)defaults
{
  return &unk_1E864CD78;
}

- (void)updateLastChargeLevel:(int)a3 withTimestamp:(double)a4
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *(_QWORD *)&a3;
  v5 = (void *)MEMORY[0x1E0D7FFA0];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setObject:forKey:saveToDisk:", v6, CFSTR("lastChargingTimestamp"), 1);

  v7 = (void *)MEMORY[0x1E0D7FFA0];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v4);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setObject:forKey:saveToDisk:", v8, CFSTR("lastChargingValue"), 1);

}

- (PLBatteryAgent)init
{
  PLBatteryAgent *v3;
  PLBatteryAgent *v4;
  NSNumber *lastkIOPSAppleBatteryCaseCumulativeCurrentKey;
  uint64_t v6;
  NSNumber *mitigatedUPOCount;
  PLEntry *lastBatteryConfigEntry;
  NSNumber *lastDOD0;
  NSNumber *lastVacVoltageLimit;
  NSNumber *lastAdapterPower;
  NSString *lastAdapterManufacturer;
  uint64_t v13;
  NSMutableArray *trackedAccessories;
  uint64_t v15;
  PLIOKitOperatorComposition *chargerIOService;
  uint64_t v17;
  PLIOKitOperatorComposition *magsafeIOService;
  NSObject *v19;
  NSObject *v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  PLBatteryAgent *v25;
  NSObject *v27;
  id v28;
  uint64_t v29;
  PLIOKitOperatorComposition *v30;
  PLIOKitOperatorComposition *iokitPowerSource;
  PLTimer *v32;
  id v33;
  void *v34;
  void *v35;
  PLBatteryAgent *v36;
  uint64_t v37;
  PLTimer *gasGaugeTimer;
  void *v39;
  _BOOL4 v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  NSObject *v50;
  NSObject *v51;
  NSString *v52;
  NSString *entryKeyEABattery;
  NSString *v54;
  NSString *entryKeyEAPencilStats;
  __CFNotificationCenter *DarwinNotifyCenter;
  _BOOL4 v57;
  void *v58;
  _BOOL4 v59;
  _BOOL4 v60;
  void *v61;
  _QWORD block[5];
  _QWORD v63[4];
  PLBatteryAgent *v64;
  _QWORD v65[4];
  PLBatteryAgent *v66;
  objc_super v67;
  uint8_t buf[4];
  _BYTE v69[10];
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0D80078], "hasBattery") & 1) != 0)
  {
    if ((objc_msgSend(MEMORY[0x1E0D80078], "isPowerlogHelperd") & 1) == 0)
    {
      v67.receiver = self;
      v67.super_class = (Class)PLBatteryAgent;
      v3 = -[PLAgent init](&v67, sel_init);
      v4 = v3;
      if (!v3)
      {
LABEL_59:
        self = v4;
        v25 = self;
        goto LABEL_30;
      }
      v3->_lastUILevel = 0;
      v3->_presentMaxRa = -1;
      v3->_lifetimeMaxRa = -1;
      v3->_EAEnergyDrained = 0.0;
      v3->_EABatteryLevel = -1.0;
      lastkIOPSAppleBatteryCaseCumulativeCurrentKey = v3->_lastkIOPSAppleBatteryCaseCumulativeCurrentKey;
      v3->_lastkIOPSAppleBatteryCaseCumulativeCurrentKey = 0;

      v4->_isFirstTimeCheckingPingPong = 1;
      v4->_presentMaxRa = -1;
      v4->_lifetimeMaxRa = -1;
      v4->_prevConnectedState = 0;
      v4->_prevChargingState = 0;
      v4->_inPenaltyBox = 0;
      -[PLBatteryAgent getMitigatedUPOCountDefault](v4, "getMitigatedUPOCountDefault");
      v6 = objc_claimAutoreleasedReturnValue();
      mitigatedUPOCount = v4->_mitigatedUPOCount;
      v4->_mitigatedUPOCount = (NSNumber *)v6;

      v4->_lifetimeDataLogged = 0;
      v4->_ppmEventLoggingCount = 0;
      lastBatteryConfigEntry = v4->_lastBatteryConfigEntry;
      v4->_lastBatteryConfigEntry = 0;

      lastDOD0 = v4->_lastDOD0;
      v4->_lastDOD0 = 0;

      lastVacVoltageLimit = v4->_lastVacVoltageLimit;
      v4->_lastVacVoltageLimit = 0;

      v4->_presentOCVCount = -1;
      v4->_presentOCV = -1;
      v4->_presentRaUpdateDisqualified = -1;
      v4->_presentQmaxUpdateDisqualified = -1;
      v4->_presentTimeSinceLastOCV = -1;
      v4->_shouldQueryForAccessory = 0;
      v4->_prevAccumulatorCount = 0.0;
      v4->_prevAccumulatorErrorCount = 0.0;
      v4->_prevAccumulatedPower = 0.0;
      v4->_deltaAccumulatorCount = 0.0;
      v4->_deltaAccumulatorErrorCount = 0.0;
      v4->_deltaAccumulatedPower = 0.0;
      v4->_powerOutTotalCount = 0.0;
      v4->_powerOutTotalPower = 0.0;
      v4->_filteredPower = 0.0;
      lastAdapterPower = v4->_lastAdapterPower;
      v4->_lastAdapterPower = 0;

      lastAdapterManufacturer = v4->_lastAdapterManufacturer;
      v4->_lastAdapterManufacturer = 0;

      -[PLBatteryAgent setupCSMLogging](v4, "setupCSMLogging");
      if (objc_msgSend(MEMORY[0x1E0D80078], "hasGasGauge"))
        v4->_gasGaugeConsecutiveEmptyEntriesCount = 0;
      if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
      {
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v13 = objc_claimAutoreleasedReturnValue();
        trackedAccessories = v4->_trackedAccessories;
        v4->_trackedAccessories = (NSMutableArray *)v13;

        v4->_priIOAccessoryPowerMode = -1;
      }
      if (+[PLBatteryAgent hasWirelessCharger](PLBatteryAgent, "hasWirelessCharger"))
      {
        v15 = objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFE8]), "initWithOperator:forService:withBlock:", v4, CFSTR("AppleC26Charger"), &__block_literal_global_2213);
        chargerIOService = v4->_chargerIOService;
        v4->_chargerIOService = (PLIOKitOperatorComposition *)v15;

        if (+[PLBatteryAgent supportsAccConnectionLogging](PLBatteryAgent, "supportsAccConnectionLogging"))
        {
          v17 = objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFE8]), "initWithOperator:forService:", 0, CFSTR("IOAccessoryDock0PinBuiltin"));
          magsafeIOService = v4->_magsafeIOService;
          v4->_magsafeIOService = (PLIOKitOperatorComposition *)v17;

          PLLogCommon();
          v19 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
          {
            -[PLIOKitOperatorComposition serviceName](v4->_magsafeIOService, "serviceName");
            v61 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            *(_QWORD *)v69 = v61;
            _os_log_debug_impl(&dword_1CAF47000, v19, OS_LOG_TYPE_DEBUG, "connected to IOKit: %@", buf, 0xCu);

          }
          -[PLBatteryAgent setShouldLogEABatteryConfig:](v4, "setShouldLogEABatteryConfig:", 1);
        }
        -[PLBatteryAgent setLastChargerEntry:](v4, "setLastChargerEntry:", 0);
      }
      if (+[PLBatteryAgent hasChargingInfoLogging](PLBatteryAgent, "hasChargingInfoLogging"))
      {
        v4->_prevConnectedState = 0;
        v4->_prevChargingState = 0;
        v4->_inPenaltyBox = 0;
      }
      if (objc_msgSend(MEMORY[0x1E0D80078], "deviceRebooted"))
        objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", 0, CFSTR("LastPanicData"), 1);
      PLLogCommon();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_1CAF47000, v20, OS_LOG_TYPE_DEBUG, "TLC: Initializing TLC notification defaults", buf, 2u);
      }

      -[PLBatteryAgent setIsTLCNotificationSurfaced:](v4, "setIsTLCNotificationSurfaced:", objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:ifNotSet:", CFSTR("kPLDefaultTLCNotificationSurfaced"), 0));
      PLLogCommon();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
      {
        v57 = -[PLBatteryAgent isTLCNotificationSurfaced](v4, "isTLCNotificationSurfaced");
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)v69 = v57;
        _os_log_debug_impl(&dword_1CAF47000, v21, OS_LOG_TYPE_DEBUG, "TLC: Notification Surfaced Value at Bootup: %d", buf, 8u);
      }

      -[PLBatteryAgent setSmartChargingEngaged:](v4, "setSmartChargingEngaged:", 0);
      -[PLBatteryAgent setCleanEnergyChargingEngaged:](v4, "setCleanEnergyChargingEngaged:", 0);
      -[PLBatteryAgent setLastTLCEntryStartTime:](v4, "setLastTLCEntryStartTime:", 0);
      PLLogCommon();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      {
        -[PLBatteryAgent lastTLCEntryStartTime](v4, "lastTLCEntryStartTime");
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v69 = v58;
        _os_log_debug_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_DEBUG, "TLC: Last TLC Entry Start Time at Bootup: %@", buf, 0xCu);

      }
      if (objc_msgSend(MEMORY[0x1E0D7FFA0], "objectExistsForKey:", CFSTR("BUI_DEMO_MODE")))
        v23 = objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:", CFSTR("BUI_DEMO_MODE"));
      else
        v23 = 0;
      -[PLBatteryAgent setDemoMode:](v4, "setDemoMode:", v23);
      PLLogCommon();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
      {
        v59 = -[PLBatteryAgent isTLCNotificationSurfaced](v4, "isTLCNotificationSurfaced");
        v60 = -[PLBatteryAgent demoMode](v4, "demoMode");
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)v69 = v59;
        *(_WORD *)&v69[4] = 1024;
        *(_DWORD *)&v69[6] = v60;
        _os_log_debug_impl(&dword_1CAF47000, v27, OS_LOG_TYPE_DEBUG, "TLC: isTLCNotificationSurfaced: %d  BUI Demo Mode: %d", buf, 0xEu);
      }

      v28 = objc_alloc(MEMORY[0x1E0D7FFE8]);
      v29 = MEMORY[0x1E0C809B0];
      v65[0] = MEMORY[0x1E0C809B0];
      v65[1] = 3221225472;
      v65[2] = __22__PLBatteryAgent_init__block_invoke_2222;
      v65[3] = &unk_1E857B1E0;
      self = v4;
      v66 = self;
      v30 = (PLIOKitOperatorComposition *)objc_msgSend(v28, "initWithOperator:forService:withBlock:", self, CFSTR("IOPMPowerSource"), v65);
      iokitPowerSource = self->_iokitPowerSource;
      self->_iokitPowerSource = v30;

      if (self->_iokitPowerSource)
      {
        if (objc_msgSend(MEMORY[0x1E0D80078], "hasGasGauge")
          && !-[PLBatteryAgent hasAppleSmartBattery](self, "hasAppleSmartBattery"))
        {
          v33 = objc_alloc(MEMORY[0x1E0D80070]);
          objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceNow:", 20.0);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLOperator workQueue](self, "workQueue");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          v63[0] = v29;
          v63[1] = 3221225472;
          v63[2] = __22__PLBatteryAgent_init__block_invoke_2272;
          v63[3] = &unk_1E8578078;
          v36 = self;
          v64 = v36;
          v37 = objc_msgSend(v33, "initWithFireDate:withInterval:withTolerance:repeats:withUserInfo:withQueue:withBlock:", v34, 1, 0, v35, v63, 20.0, 0.0);
          gasGaugeTimer = v36->_gasGaugeTimer;
          v36->_gasGaugeTimer = (PLTimer *)v37;

          -[PLBatteryAgent setAllowGasGaugeRead:](v36, "setAllowGasGaugeRead:", 0);
          -[PLBatteryAgent gasGaugeOpenAndStartLogging](v36, "gasGaugeOpenAndStartLogging");

        }
        else
        {
          v32 = self->_gasGaugeTimer;
          self->_gasGaugeTimer = 0;

          -[PLBatteryAgent setAllowGasGaugeRead:](self, "setAllowGasGaugeRead:", 0);
        }
        if (-[PLOperator isDebugEnabled](self, "isDebugEnabled"))
        {
          objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v39, "addObserver:selector:name:object:", self, sel_fakeLogEntry_, CFSTR("PLBatteryAgent.fakeLogEntry"), 0);

        }
        v40 = +[PLBatteryAgent supportsAccConnectionLogging](PLBatteryAgent, "supportsAccConnectionLogging");
        objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        v42 = v41;
        if (v40)
        {
          objc_msgSend(v41, "addObserver:selector:name:object:", self, sel_accessoryConnectionEventNotification_, CFSTR("PLCAAccessoryAttachedNotification"), 0);

          objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v43, "addObserver:selector:name:object:", self, sel_accessoryDisconnectEventNotification_, CFSTR("PLCAAccessoryDetachedNotification"), 0);
        }
        else
        {
          objc_msgSend(v41, "addObserver:selector:name:object:", self, sel_accessoryConnected_, *MEMORY[0x1E0CAA618], 0);

          objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v44, "addObserver:selector:name:object:", self, sel_accessoryDisconnected_, *MEMORY[0x1E0CAA620], 0);

          objc_msgSend(MEMORY[0x1E0CAA650], "sharedAccessoryManager");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v43, "registerForLocalNotifications");
        }

        if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
        {
          if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
          {
            block[0] = v29;
            block[1] = 3221225472;
            block[2] = __22__PLBatteryAgent_init__block_invoke_2_2291;
            block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
            block[4] = objc_opt_class();
            if (qword_1ED887628 != -1)
              dispatch_once(&qword_1ED887628, block);
            if (byte_1ED887568)
            {
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Notification registered"));
              v45 = (void *)objc_claimAutoreleasedReturnValue();
              v46 = (void *)MEMORY[0x1E0D7FF98];
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
              v47 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v47, "lastPathComponent");
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent init]");
              v49 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v46, "logMessage:fromFile:fromFunction:fromLineNumber:", v45, v48, v49, 3623);

              PLLogCommon();
              v50 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v50, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)buf = 138412290;
                *(_QWORD *)v69 = v45;
                _os_log_debug_impl(&dword_1CAF47000, v50, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
              }

            }
          }
          PLLogCommon();
          v51 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v51, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)buf = 0;
            _os_log_debug_impl(&dword_1CAF47000, v51, OS_LOG_TYPE_DEBUG, "[BATTERY] init EA Battery", buf, 2u);
          }

          -[PLBatteryAgent refreshEABatteryStatusTriggeredByConnectionEvent:](self, "refreshEABatteryStatusTriggeredByConnectionEvent:", 0);
          +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("EABattery"));
          v52 = (NSString *)objc_claimAutoreleasedReturnValue();
          entryKeyEABattery = self->_entryKeyEABattery;
          self->_entryKeyEABattery = v52;

          +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("EAPencilStats"));
          v54 = (NSString *)objc_claimAutoreleasedReturnValue();
          entryKeyEAPencilStats = self->_entryKeyEAPencilStats;
          self->_entryKeyEAPencilStats = v54;

        }
        if (-[PLOperator isDebugEnabled](self, "isDebugEnabled"))
        {
          DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
          CFNotificationCenterAddObserver(DarwinNotifyCenter, self, (CFNotificationCallback)pushConfigToAggd, CFSTR("com.apple.powerlogd.PLBatteryAgent.pushConfigToAggd"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
        }

        goto LABEL_59;
      }

    }
  }
  else
  {
    PLLogCommon();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CAF47000, v24, OS_LOG_TYPE_DEFAULT, "no battery detected", buf, 2u);
    }

  }
  v25 = 0;
LABEL_30:

  return v25;
}

void __22__PLBatteryAgent_init__block_invoke_2222(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  void *v6;
  double v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  double v11;
  int v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  id v24;
  NSObject *v25;
  const __CFString *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  NSObject *v38;
  double v39;
  double v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  double v48;
  double v49;
  NSObject *v50;
  void *v51;
  void *v52;
  double v53;
  double v54;
  void *v55;
  double v56;
  _BOOL8 v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  _UNKNOWN **v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  int v86;
  uint64_t v87;
  double v88;
  double v89;
  void *v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  int v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  NSObject *v101;
  uint64_t v102;
  NSObject *v103;
  int v104;
  void *v105;
  _BOOL8 v106;
  void *v107;
  void *v108;
  uint64_t v109;
  void *v110;
  void *v111;
  int v112;
  NSObject *v113;
  _BOOL4 v114;
  int v115;
  void *v116;
  NSObject *v117;
  void *v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  void *v122;
  void *v123;
  double v124;
  double v125;
  _QWORD *v126;
  double v127;
  void *v128;
  void *v129;
  void *v130;
  uint64_t v131;
  void *v132;
  void *v133;
  int v134;
  void *v135;
  double v136;
  double v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  int v142;
  void *v143;
  double v144;
  double v145;
  void *v146;
  void *v147;
  NSObject *v148;
  int v149;
  uint64_t v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  double v155;
  double v156;
  void *v157;
  double v158;
  double v159;
  double v160;
  void *v161;
  void *v162;
  void *v163;
  double v164;
  int v165;
  uint64_t v166;
  _QWORD *v167;
  void *v168;
  uint64_t v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  NSObject *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  NSObject *v180;
  void *v181;
  void *v182;
  unsigned int v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  _QWORD v188[5];
  _QWORD block[4];
  id v190;
  _QWORD v191[5];
  _QWORD v192[4];
  id v193;
  _QWORD v194[4];
  id v195;
  _QWORD v196[4];
  id v197;
  id v198;
  _QWORD v199[5];
  _QWORD v200[4];
  id v201;
  uint8_t buf[4];
  id v203;
  __int16 v204;
  void *v205;
  uint64_t v206;

  v206 = *MEMORY[0x1E0C80C00];
  if (a3 == -536723200)
  {
    v5 = *(void **)(a1 + 32);
    +[PLEventBackwardBatteryEntry entryKey](PLEventBackwardBatteryEntry, "entryKey");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "timeIntervalSinceLastLogForEntryKey:", v6);
    v8 = v7;
    v9 = MEMORY[0x1E0C809B0];
    v200[0] = MEMORY[0x1E0C809B0];
    v200[1] = 3221225472;
    v200[2] = __22__PLBatteryAgent_init__block_invoke_2;
    v200[3] = &unk_1E85780C8;
    v201 = *(id *)(a1 + 32);
    v10 = v200;
    if (qword_1ED8875E8 != -1)
      dispatch_once(&qword_1ED8875E8, v10);

    v11 = *(double *)&qword_1ED8875F0;
    v12 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
    if (v8 > v11)
    {
      if (v12)
      {
        v199[0] = v9;
        v199[1] = 3221225472;
        v199[2] = __22__PLBatteryAgent_init__block_invoke_3;
        v199[3] = &__block_descriptor_40_e5_v8__0lu32l8;
        v199[4] = objc_opt_class();
        v13 = v199;
        if (qword_1ED8875F8 != -1)
          dispatch_once(&qword_1ED8875F8, v13);

        if (byte_1ED887565)
        {
          v14 = (void *)MEMORY[0x1E0CB3940];
          v15 = *(void **)(a1 + 32);
          +[PLEventBackwardBatteryEntry entryKey](PLEventBackwardBatteryEntry, "entryKey");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "timeIntervalSinceLastLogForEntryKey:", v16);
          objc_msgSend(v14, "stringWithFormat:", CFSTR("kIOPMMessageBatteryStatusHasChanged ok for ratelimit %f"), v17);
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          v19 = (void *)MEMORY[0x1E0D7FF98];
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "lastPathComponent");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent init]_block_invoke");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "logMessage:fromFile:fromFunction:fromLineNumber:", v18, v21, v22, 3318);

          PLLogCommon();
          v23 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 138412290;
            v203 = v18;
            _os_log_debug_impl(&dword_1CAF47000, v23, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
          }

        }
      }
      objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", a2);
      v24 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "logEventBackwardBatteryWithRawData:", v24);
      v25 = objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(*(id *)(a1 + 32), "hasAppleSmartBattery"))
        v26 = CFSTR("ChargerStatus");
      else
        v26 = CFSTR("ChargerRegisterStatus");
      -[NSObject setObject:forKeyedSubscript:](v25, "setObject:forKeyedSubscript:", 0, v26);
      objc_msgSend(*(id *)(a1 + 32), "sampleBatteryEntryWithRawData:andProperties:", v24, v25);
      if ((objc_msgSend(*(id *)(a1 + 32), "lifetimeDataLogged") & 1) != 0
        || (objc_msgSend(*(id *)(a1 + 32), "shouldWaitForLifetimeDataWithRawData:", v24) & 1) != 0)
      {
        if ((objc_msgSend(*(id *)(a1 + 32), "lifetimeDataLogged") & 1) != 0)
        {
LABEL_36:
          objc_msgSend(*(id *)(a1 + 32), "logAdapterInfo:", v24);
          objc_msgSend(*(id *)(a1 + 32), "logPowerOutDetails:", v24);
          objc_msgSend(*(id *)(a1 + 32), "logAdapterDetails:", v24);
          objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
          v186 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 32), "previousPortControllerRead");
          v45 = objc_claimAutoreleasedReturnValue();
          if (!v45
            || (v46 = (void *)v45,
                objc_msgSend(*(id *)(a1 + 32), "previousPortControllerRead"),
                v47 = (void *)objc_claimAutoreleasedReturnValue(),
                objc_msgSend(v186, "timeIntervalSinceDate:", v47),
                v49 = v48,
                v47,
                v46,
                v49 >= 600.0))
          {
            objc_msgSend(*(id *)(a1 + 32), "setPreviousPortControllerRead:", v186);
            PLLogCommon();
            v50 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v50, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              v203 = v186;
              _os_log_debug_impl(&dword_1CAF47000, v50, OS_LOG_TYPE_DEBUG, "PortControlInfo is sampled at %@", buf, 0xCu);
            }

            objc_msgSend(*(id *)(a1 + 32), "logPortControllerInfo:", v24);
          }
          objc_msgSend(*(id *)(a1 + 32), "logFedDetails:", v24);
          objc_msgSend(*(id *)(a1 + 32), "logEventPointBatteryPanicShutdown:", v24);
          -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("ExternalConnected"));
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v51, "BOOLValue"))
          {
            -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("CurrentCapacity"));
            v52 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v52, "doubleValue");
            v54 = v53 * 100.0;
            -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("MaxCapacity"));
            v55 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v55, "doubleValue");
            v57 = v54 / v56 > 95.0;

          }
          else
          {
            v57 = 0;
          }

          if ((objc_msgSend(*(id *)(a1 + 32), "isFirstTimeCheckingPingPong") & 1) != 0
            || v57 != objc_msgSend(*(id *)(a1 + 32), "isPingPongCharging"))
          {
            v58 = (void *)MEMORY[0x1E0C9AA60];
            if (v57)
              v58 = &unk_1E86512D8;
            v59 = v58;
            objc_msgSend(MEMORY[0x1E0D7FED8], "sharedInstance");
            v60 = (void *)objc_claimAutoreleasedReturnValue();
            -[NSObject entryDate](v25, "entryDate");
            v61 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v60, "createQualificationEventForwardWithQualificationID:withChildNodeNames:withStartDate:", 7, v59, v61);

            objc_msgSend(*(id *)(a1 + 32), "setIsPingPongCharging:", v57);
            objc_msgSend(*(id *)(a1 + 32), "setIsFirstTimeCheckingPingPong:", 0);

          }
          v62 = &off_1E8575000;
          v183 = a2;
          if (+[PLBatteryAgent hasWirelessCharger](PLBatteryAgent, "hasWirelessCharger"))
          {
            objc_msgSend(*(id *)(a1 + 32), "chargerIOService");
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v63, "properties");
            v64 = (void *)objc_claimAutoreleasedReturnValue();

            if (v64)
            {
              objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("ConnectState"));
              v65 = (void *)objc_claimAutoreleasedReturnValue();

              if (v65)
              {
                +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("ExternalCharger"));
                v66 = (void *)objc_claimAutoreleasedReturnValue();
                v67 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v66);
                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("DeviceInfoInterfaceSerialNumber"));
                v68 = (void *)objc_claimAutoreleasedReturnValue();
                if (!v68)
                {
                  objc_msgSend(*(id *)(a1 + 32), "magsafeIOService");
                  v68 = (void *)objc_claimAutoreleasedReturnValue();

                  if (v68)
                  {
                    objc_msgSend(*(id *)(a1 + 32), "magsafeIOService");
                    v69 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v69, "properties");
                    v70 = (void *)objc_claimAutoreleasedReturnValue();

                    objc_msgSend(v70, "objectForKeyedSubscript:", CFSTR("IOAccessoryAccessorySerialNumber"));
                    v68 = (void *)objc_claimAutoreleasedReturnValue();

                  }
                }
                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("ConnectState"));
                v71 = (void *)objc_claimAutoreleasedReturnValue();
                +[PLBatteryAgent connectStateStringToEnum:](PLBatteryAgent, "connectStateStringToEnum:", v71);
                v72 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v72, CFSTR("ConnectState"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("ResetCount"));
                v73 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v73, CFSTR("ResetCount"));

                objc_msgSend(*(id *)(a1 + 32), "parseBatterySerialNumber:", v68);
                v74 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v74, "objectForKeyedSubscript:", CFSTR("eeee_code"));
                v75 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v75, CFSTR("EEEECode"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("Cloaked"));
                v76 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v76, CFSTR("Cloaked"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("FWStatus"));
                v77 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v77, CFSTR("FWStatus"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("LinkEfficiency"));
                v78 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v78, CFSTR("LinkEfficiency"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("CloakReason"));
                v79 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v79, CFSTR("CloakReason"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("DeviceInfoChipVariant"));
                v80 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v80, CFSTR("DeviceInfoChipVariant"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("DeviceInfoRegionCode"));
                v81 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v81, CFSTR("DeviceInfoRegionCode"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("PuckClassification"));
                v82 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v82, CFSTR("PuckClassification"));

                objc_msgSend(v64, "objectForKeyedSubscript:", CFSTR("HFPolicy"));
                v83 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "setObject:forKeyedSubscript:", v83, CFSTR("HFPolicy"));

                objc_msgSend(*(id *)(a1 + 32), "lastChargerEntry");
                v84 = objc_claimAutoreleasedReturnValue();
                if (!v84
                  || (v85 = (void *)v84,
                      v86 = objc_msgSend(*(id *)(a1 + 32), "modifiedExternalChargerEntry:", v67),
                      v85,
                      v86))
                {
                  objc_msgSend(*(id *)(a1 + 32), "logEntry:", v67);
                }
                objc_msgSend(*(id *)(a1 + 32), "setLastChargerEntry:", v67);

                v62 = &off_1E8575000;
              }
            }

          }
          v87 = *MEMORY[0x1E0D80370];
          +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("BatteryUI"));
          v185 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 32), "EABatteryLevel");
          v89 = v88;
          -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("ExternalConnected"));
          v90 = (void *)objc_claimAutoreleasedReturnValue();
          v91 = objc_msgSend(v90, "BOOLValue");
          if (v89 >= 1.0)
            v92 = 1;
          else
            v92 = v91;

          objc_msgSend(*(id *)(a1 + 32), "deviceIsPluggedIn");
          v93 = objc_claimAutoreleasedReturnValue();
          if (!v93
            || (v94 = (void *)v93,
                objc_msgSend(*(id *)(a1 + 32), "deviceIsPluggedIn"),
                v95 = (void *)objc_claimAutoreleasedReturnValue(),
                v96 = objc_msgSend(v95, "BOOLValue"),
                v95,
                v94,
                (_DWORD)v92 != v96))
          {
            v97 = *(void **)(a1 + 32);
            -[NSObject entryDate](v25, "entryDate");
            v98 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v97, "updateIntervalForType:withState:andTime:", 1, v92, v98);

          }
          -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("TimeChargingThermallyLimited"));
          v99 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(a1 + 32), "TLCOverrideValue");
          v100 = (void *)objc_claimAutoreleasedReturnValue();

          if (v100)
          {
            PLLogCommon();
            v101 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v101, OS_LOG_TYPE_DEBUG))
            {
              objc_msgSend(*(id *)(a1 + 32), "TLCOverrideValue");
              v182 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138412546;
              v203 = v99;
              v204 = 2112;
              v205 = v182;
              _os_log_debug_impl(&dword_1CAF47000, v101, OS_LOG_TYPE_DEBUG, "TLC: override %@ -> %@", buf, 0x16u);

            }
            objc_msgSend(*(id *)(a1 + 32), "TLCOverrideValue");
            v102 = objc_claimAutoreleasedReturnValue();

            v99 = (void *)v102;
          }
          PLLogCommon();
          v103 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v103, OS_LOG_TYPE_DEBUG))
          {
            objc_msgSend(*(id *)(a1 + 32), "lastTLCCounter");
            v181 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412546;
            v203 = v181;
            v204 = 2112;
            v205 = v99;
            _os_log_debug_impl(&dword_1CAF47000, v103, OS_LOG_TYPE_DEBUG, "TLC: was:%@ now:%@", buf, 0x16u);

          }
          v104 = objc_msgSend(v99, "intValue");
          objc_msgSend(*(id *)(a1 + 32), "lastTLCCounter");
          v105 = (void *)objc_claimAutoreleasedReturnValue();
          v106 = v104 > (int)objc_msgSend(v105, "intValue");

          objc_msgSend(*(id *)(a1 + 32), "setTlcIncreased:", v106);
          if (objc_msgSend(MEMORY[0x1E0D7FFF8], "supportsSlowCharging"))
          {
            -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("AdapterPowerTier"));
            v107 = (void *)objc_claimAutoreleasedReturnValue();

            if (v107)
            {
              -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("AdapterPowerTier"));
              v184 = (void *)objc_claimAutoreleasedReturnValue();
            }
            else
            {
              v184 = &unk_1E8633BB8;
            }
          }
          else
          {
            v184 = 0;
          }
          objc_msgSend(*(id *)(a1 + 32), "handleCameraStreaming:withProperties:", v92, v25);
          objc_msgSend(*(id *)(a1 + 32), "lastTLCCounter");
          v108 = (void *)objc_claimAutoreleasedReturnValue();

          v187 = v99;
          if (v108)
          {
            v109 = objc_msgSend(*(id *)(a1 + 32), "tlcIncreased");
            v110 = *(void **)(a1 + 32);
            -[NSObject entryDate](v25, "entryDate");
            v111 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v110, "updateIntervalForType:withState:andTime:", 3, v109, v111);

            v99 = v187;
          }
          v112 = _os_feature_enabled_impl();
          PLLogCommon();
          v113 = objc_claimAutoreleasedReturnValue();
          v114 = os_log_type_enabled(v113, OS_LOG_TYPE_DEBUG);
          if (v112)
          {
            if (v114)
            {
              *(_WORD *)buf = 0;
              _os_log_debug_impl(&dword_1CAF47000, v113, OS_LOG_TYPE_DEBUG, "\"bui_tlc_notif_iOS\" feature flag is enabled.", buf, 2u);
            }

            objc_msgSend(*(id *)(a1 + 32), "handleTLCNotification:externalConnected:", v24, v92);
          }
          else
          {
            if (v114)
            {
              *(_WORD *)buf = 0;
              _os_log_debug_impl(&dword_1CAF47000, v113, OS_LOG_TYPE_DEBUG, "\"bui_tlc_notif_iOS\" feature flag is disabled.", buf, 2u);
            }

          }
          objc_msgSend(*(id *)(a1 + 32), "setLastTLCCounter:", v99);
          if (!objc_msgSend(MEMORY[0x1E0D7FFF8], "supportsSlowCharging"))
          {
LABEL_95:
            objc_msgSend(*(id *)(a1 + 32), "deviceIsPluggedIn");
            v121 = objc_claimAutoreleasedReturnValue();
            if (v121)
            {
              v122 = (void *)v121;
              objc_msgSend(*(id *)(a1 + 32), "deviceIsPluggedIn");
              v123 = (void *)objc_claimAutoreleasedReturnValue();
              if ((_DWORD)v92 == objc_msgSend(v123, "BOOLValue"))
              {
                objc_msgSend(*(id *)(a1 + 32), "timeIntervalSinceLastLogForEntryKey:", v185);
                v125 = v124;
                v192[0] = MEMORY[0x1E0C809B0];
                v192[1] = 3221225472;
                v192[2] = __22__PLBatteryAgent_init__block_invoke_2255;
                v192[3] = &unk_1E85780C8;
                v193 = *(id *)(a1 + 32);
                v126 = v192;
                if (qword_1ED887608 != -1)
                  dispatch_once(&qword_1ED887608, v126);

                v127 = *(double *)&qword_1ED887610;
                v128 = v187;
                if (v125 <= v127)
                  goto LABEL_114;
              }
              else
              {

              }
            }
            v129 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v185);
            -[NSObject objectForKeyedSubscript:](v25, "objectForKeyedSubscript:", CFSTR("Level"));
            v130 = (void *)objc_claimAutoreleasedReturnValue();
            v131 = objc_msgSend(v130, "intValue");

            objc_msgSend(*(id *)(a1 + 32), "deviceIsPluggedIn");
            v132 = (void *)objc_claimAutoreleasedReturnValue();

            if (v132)
            {
              if ((v92 & 1) == 0)
              {
                objc_msgSend(*(id *)(a1 + 32), "deviceIsPluggedIn");
                v133 = (void *)objc_claimAutoreleasedReturnValue();
                v134 = objc_msgSend(v133, "BOOLValue");

                if (v134)
                {
                  objc_msgSend(v129, "entryDate");
                  v135 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v135, "timeIntervalSince1970");
                  v137 = v136;

                  objc_msgSend(*(id *)(a1 + 32), "updateLastChargeLevel:withTimestamp:", v131, v137);
                }
              }
            }
            else
            {
              objc_msgSend((id)objc_opt_class(), "entryKeyForType:andName:", v87, CFSTR("BatteryUI"));
              v138 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(*(id *)(a1 + 32), "storage");
              v139 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v139, "lastEntryForKey:", v138);
              v140 = (void *)objc_claimAutoreleasedReturnValue();

              if (v140)
              {
                objc_msgSend(v140, "objectForKeyedSubscript:", CFSTR("IsCharging"));
                v141 = (void *)objc_claimAutoreleasedReturnValue();
                v142 = objc_msgSend(v141, "BOOLValue");

                if (((v142 ^ 1 | v92) & 1) == 0)
                {
                  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
                  v143 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v143, "timeIntervalSince1970");
                  v145 = v144;

                  objc_msgSend(*(id *)(a1 + 32), "updateLastChargeLevel:withTimestamp:", v131, v145);
                }
              }

              v62 = &off_1E8575000;
            }
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v131);
            v146 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v129, "setObject:forKeyedSubscript:", v146, CFSTR("Level"));

            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v92);
            v147 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v129, "setObject:forKeyedSubscript:", v147, CFSTR("IsCharging"));

            PLLogCommon();
            v148 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v148, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_1CAF47000, v148, OS_LOG_TYPE_DEFAULT, "Updating level and plugged in status", buf, 2u);
            }

            objc_msgSend(*(id *)(a1 + 32), "logEntry:", v129);
            v149 = objc_msgSend(*(id *)(a1 + 32), "lastUILevel");
            v150 = (v149 - v131);
            if (v149 - (int)v131 >= 0)
            {
              +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80368], CFSTR("UILevel"));
              v151 = (void *)objc_claimAutoreleasedReturnValue();
              v152 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v151);
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v150);
              v153 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v152, "setObject:forKeyedSubscript:", v153, CFSTR("Level"));

              objc_msgSend(*(id *)(a1 + 32), "logEntry:", v152);
              v62 = &off_1E8575000;

            }
            objc_msgSend(*(id *)(a1 + 32), "setLastUILevel:", v131);

            v128 = v187;
LABEL_114:
            objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("CurrentCapacity"));
            v154 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v154, "doubleValue");
            v156 = v155;

            objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("MaxCapacity"));
            v157 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v157, "doubleValue");
            v159 = v158;

            v160 = 0.0;
            if (v159 > 0.0)
              v160 = v156 * 100.0 / v159;
            objc_msgSend(*(id *)(a1 + 32), "setBatteryLevelPercent:", v160);
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v92);
            v161 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(*(id *)(a1 + 32), "setDeviceIsPluggedIn:", v161);

            v162 = *(void **)(a1 + 32);
            objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("Voltage"));
            v163 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v163, "doubleValue");
            objc_msgSend(v162, "setRawBatteryVoltageVolt:", v164 / 1000.0);

            v165 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
            v166 = MEMORY[0x1E0C809B0];
            if (v165)
            {
              v191[0] = MEMORY[0x1E0C809B0];
              v191[1] = 3221225472;
              v191[2] = __22__PLBatteryAgent_init__block_invoke_2258;
              v191[3] = &__block_descriptor_40_e5_v8__0lu32l8;
              v191[4] = objc_opt_class();
              v167 = v191;
              if (qword_1ED887618 != -1)
                dispatch_once(&qword_1ED887618, v167);

              if (byte_1ED887566)
              {
                v168 = (void *)MEMORY[0x1E0CB3940];
                objc_msgSend(*(id *)(a1 + 32), "rawBatteryVoltageVolt");
                objc_msgSend(v168, "stringWithFormat:", CFSTR("rawBatteryVoltageVolt: %f"), v169);
                v170 = (void *)objc_claimAutoreleasedReturnValue();
                v171 = (void *)MEMORY[0x1E0D7FF98];
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                v172 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v172, "lastPathComponent");
                v173 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent init]_block_invoke_2");
                v174 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v171, "logMessage:fromFile:fromFunction:fromLineNumber:", v170, v173, v174, 3561);

                PLLogCommon();
                v175 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v175, OS_LOG_TYPE_DEBUG))
                {
                  *(_DWORD *)buf = 138412290;
                  v203 = v170;
                  _os_log_debug_impl(&dword_1CAF47000, v175, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                }

                v62 = &off_1E8575000;
                v128 = v187;
              }
            }
            if (objc_msgSend(*(id *)(a1 + 32), "hasAppleSmartBattery"))
              objc_msgSend(*(id *)(a1 + 32), "logCurrentAccumulatorWithRawData:", v24);
            if (objc_msgSend(v62[344], "hasChargingInfoLogging"))
            {
              objc_msgSend(*(id *)(a1 + 32), "checkChargingInfoChange:", v24);
              objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:forKey:", v183, CFSTR("ChargingParameters"));
              v176 = (void *)objc_claimAutoreleasedReturnValue();
              v177 = (void *)objc_msgSend(v176, "mutableCopy");

              objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("InductiveData"));
              v178 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v178, "objectForKeyedSubscript:", CFSTR("FirmwareMode"));
              v179 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v177, "setObject:forKeyedSubscript:", v179, CFSTR("InductiveFWMode"));

              v128 = v187;
              objc_msgSend(*(id *)(a1 + 32), "logEventPointChargingInfoWithChargingData:", v177);

            }
            if (objc_msgSend(v62[344], "supportsAccConnectionLogging"))
            {
              if (objc_msgSend(*(id *)(a1 + 32), "shouldQueryForAccessory"))
              {
                objc_msgSend(*(id *)(a1 + 32), "workQueue");
                v180 = objc_claimAutoreleasedReturnValue();
                block[0] = v166;
                block[1] = 3221225472;
                block[2] = __22__PLBatteryAgent_init__block_invoke_2264;
                block[3] = &unk_1E85780C8;
                v190 = *(id *)(a1 + 32);
                dispatch_async(v180, block);

              }
            }

LABEL_131:
            return;
          }
          v115 = objc_msgSend(v184, "intValue");
          if (v115 == 1)
          {
            v116 = *(void **)(a1 + 32);
            -[NSObject entryDate](v25, "entryDate");
            v117 = objc_claimAutoreleasedReturnValue();
            v118 = v116;
            v119 = 1;
          }
          else
          {
            if ((v115 & 0xFFFFFFFD) != 0)
            {
              PLLogCommon();
              v117 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v117, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412290;
                v203 = v184;
                _os_log_error_impl(&dword_1CAF47000, v117, OS_LOG_TYPE_ERROR, "Invalid value for PLkIOPMPSAdapterDetailsPowerTierKey, currentSlowChargingState=%@", buf, 0xCu);
              }
              goto LABEL_94;
            }
            v120 = *(void **)(a1 + 32);
            -[NSObject entryDate](v25, "entryDate");
            v117 = objc_claimAutoreleasedReturnValue();
            v118 = v120;
            v119 = 0;
          }
          objc_msgSend(v118, "updateIntervalForType:withState:andTime:", 9, v119, v117);
LABEL_94:

          goto LABEL_95;
        }
        PLLogCommon();
        v27 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_1CAF47000, v27, OS_LOG_TYPE_DEBUG, "Lifetime data deferred", buf, 2u);
        }
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0D7FFA0], "objectForKey:", CFSTR("overrideBatteryData"));
        v27 = objc_claimAutoreleasedReturnValue();
        if (v27)
        {
          objc_msgSend(*(id *)(a1 + 32), "overrideBatteryData:withPath:", v24, v27);
          v36 = objc_claimAutoreleasedReturnValue();

          v24 = (id)v36;
        }
        v196[0] = v9;
        v196[1] = 3221225472;
        v196[2] = __22__PLBatteryAgent_init__block_invoke_2232;
        v196[3] = &unk_1E85791E0;
        v197 = *(id *)(a1 + 32);
        v24 = v24;
        v198 = v24;
        v37 = v196;
        if (qword_1ED887600 != -1)
          dispatch_once(&qword_1ED887600, v37);

        PLLogCommon();
        v38 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_1CAF47000, v38, OS_LOG_TYPE_DEBUG, "Lifetime data logged", buf, 2u);
        }

        objc_msgSend(*(id *)(a1 + 32), "setLifetimeDataLogged:", 1);
        if (objc_msgSend(MEMORY[0x1E0D80078], "deviceRebooted"))
          objc_msgSend(*(id *)(a1 + 32), "logEventPointBatteryTrapInfo:", v24);
        objc_msgSend(*(id *)(a1 + 32), "defaultDoubleForKey:", CFSTR("AggdTimerBatteryConfig"));
        v40 = v39;
        v41 = objc_alloc(MEMORY[0x1E0D80070]);
        objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDateWithTimeIntervalSinceNow:", v40);
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "workQueue");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        v194[0] = v9;
        v194[1] = 3221225472;
        v194[2] = __22__PLBatteryAgent_init__block_invoke_2235;
        v194[3] = &unk_1E8578078;
        v195 = *(id *)(a1 + 32);
        v44 = (void *)objc_msgSend(v41, "initWithFireDate:withInterval:withTolerance:repeats:withUserInfo:withQueue:withBlock:", v42, 1, 0, v43, v194, v40, 0.0);
        objc_msgSend(*(id *)(a1 + 32), "setPeriodicAggdTimer:", v44);

      }
      goto LABEL_36;
    }
    if (v12)
    {
      v188[0] = v9;
      v188[1] = 3221225472;
      v188[2] = __22__PLBatteryAgent_init__block_invoke_2269;
      v188[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v188[4] = objc_opt_class();
      if (qword_1ED887620 != -1)
        dispatch_once(&qword_1ED887620, v188);
      if (byte_1ED887567)
      {
        v28 = (void *)MEMORY[0x1E0CB3940];
        v29 = *(void **)(a1 + 32);
        +[PLEventBackwardBatteryEntry entryKey](PLEventBackwardBatteryEntry, "entryKey");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "timeIntervalSinceLastLogForEntryKey:", v30);
        objc_msgSend(v28, "stringWithFormat:", CFSTR("kIOPMMessageBatteryStatusHasChanged ignored due to ratelimit %f"), v31);
        v24 = (id)objc_claimAutoreleasedReturnValue();

        v32 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "lastPathComponent");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent init]_block_invoke_2");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v32, "logMessage:fromFile:fromFunction:fromLineNumber:", v24, v34, v35, 3589);

        PLLogCommon();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v203 = v24;
          _os_log_debug_impl(&dword_1CAF47000, v25, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }
        goto LABEL_131;
      }
    }
  }
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "defaultDoubleForKey:", CFSTR("RateLimiterBattery"));
  qword_1ED8875F0 = v2;
  return result;
}

uint64_t __22__PLBatteryAgent_init__block_invoke_3(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887565 = result;
  return result;
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2232(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEventNoneBatteryConfigWithRawData:", *(_QWORD *)(a1 + 40));
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2235(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "aggdTimerFired");
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2255(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "defaultDoubleForKey:", CFSTR("RateLimiterBatteryUI"));
  qword_1ED887610 = v2;
  return result;
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2258(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887566 = result;
  return result;
}

void __22__PLBatteryAgent_init__block_invoke_2264(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  int v4;
  NSObject *v5;
  uint8_t v6[16];
  uint8_t buf[16];

  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_DEBUG, "[EABattery]: checking for accessory", buf, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "refreshEABatteryStatusTriggeredByConnectionEvent:", 1);
  objc_msgSend(*(id *)(a1 + 32), "trackedAccessories");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "containsObject:", CFSTR("1452-5017"));

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "setShouldQueryForAccessory:", 0);
    PLLogCommon();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v6 = 0;
      _os_log_debug_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_DEBUG, "[EABattery]: accessory found", v6, 2u);
    }

  }
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2269(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887567 = result;
  return result;
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2272(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEventIntervalGasGauge");
}

uint64_t __22__PLBatteryAgent_init__block_invoke_2_2291(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887568 = result;
  return result;
}

- (void)dealloc
{
  void *v3;
  void *v4;
  void *v5;
  objc_super v6;

  if ((objc_msgSend(MEMORY[0x1E0D80078], "isPowerlogHelperd") & 1) == 0)
  {
    -[PLBatteryAgent gasGaugeStopLoggingAndClose](self, "gasGaugeStopLoggingAndClose");
    if (!+[PLBatteryAgent supportsAccConnectionLogging](PLBatteryAgent, "supportsAccConnectionLogging"))
    {
      objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "removeObserver:name:object:", self, *MEMORY[0x1E0CAA618], 0);

      objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "removeObserver:name:object:", self, *MEMORY[0x1E0CAA620], 0);

      objc_msgSend(MEMORY[0x1E0CAA650], "sharedAccessoryManager");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "unregisterForLocalNotifications");

    }
  }
  v6.receiver = self;
  v6.super_class = (Class)PLBatteryAgent;
  -[PLAgent dealloc](&v6, sel_dealloc);
}

void __38__PLBatteryAgent_hasAppleSmartBattery__block_invoke(uint64_t a1)
{
  void *v1;
  __CFString *v2;

  objc_msgSend(*(id *)(a1 + 32), "iokitPowerSource");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (__CFString *)IOObjectCopyClass(objc_msgSend(v1, "service"));

  byte_1ED887569 = -[__CFString isEqualToString:](v2, "isEqualToString:", CFSTR("AppleSmartBattery"));
}

uint64_t __40__PLBatteryAgent_hasChargingInfoLogging__block_invoke()
{
  uint64_t result;
  char v1;

  byte_1ED88756A = 0;
  if (objc_msgSend(MEMORY[0x1E0D80020], "isWatch")
    && (objc_msgSend(MEMORY[0x1E0D80020], "kPLDeviceClassIsOneOf:", 200007, 200008, 200009, 200010, 0) & 1) == 0)
  {
    byte_1ED88756A = 1;
  }
  result = +[PLBatteryAgent hasWirelessCharger](PLBatteryAgent, "hasWirelessCharger");
  if ((_DWORD)result)
  {
    result = objc_msgSend(MEMORY[0x1E0D80020], "isiOS");
    if (byte_1ED88756A)
      v1 = 1;
    else
      v1 = result;
  }
  else
  {
    v1 = 0;
  }
  byte_1ED88756A = v1;
  return result;
}

void *__54__PLBatteryAgent_showOrHideTLCNotification_timeInTLC___block_invoke()
{
  return &unk_1E864CDA0;
}

void *__54__PLBatteryAgent_showOrHideTLCNotification_timeInTLC___block_invoke_2320()
{
  return &unk_1E864CDC8;
}

- (void)setupEALoggingTriggeredByConnectionEvent:(BOOL)a3
{
  _BOOL4 v3;
  int v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  void *v34;
  uint64_t v35;
  _QWORD v36[5];
  _QWORD v37[5];
  _QWORD block[5];
  uint8_t buf[4];
  void *v40;
  uint64_t v41;

  v3 = a3;
  v41 = *MEMORY[0x1E0C80C00];
  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
  {
    v5 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
    v6 = MEMORY[0x1E0C809B0];
    if (v5)
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke;
      block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      block[4] = objc_opt_class();
      if (qword_1ED887640 != -1)
        dispatch_once(&qword_1ED887640, block);
      if (byte_1ED88756B)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("In Setup EA Logging"));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "lastPathComponent");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent setupEALoggingTriggeredByConnectionEvent:]");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "logMessage:fromFile:fromFunction:fromLineNumber:", v7, v10, v11, 3843);

        PLLogCommon();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v40 = v7;
          _os_log_debug_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    if (v3)
    {
      PLLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "[BATTERY] log new connection count", buf, 2u);
      }

      -[PLBatteryAgent logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp:](self, "logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp:", 1);
    }
    -[PLBatteryAgent EABatteryTimer](self, "EABatteryTimer");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v14)
    {
      -[PLBatteryAgent logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp:](self, "logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp:", 0);
      v15 = objc_alloc(MEMORY[0x1E0D80070]);
      objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceNow:", 20.0);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLOperator workQueue](self, "workQueue");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v37[0] = v6;
      v37[1] = 3221225472;
      v37[2] = __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke_2339;
      v37[3] = &unk_1E8578078;
      v37[4] = self;
      v18 = (void *)objc_msgSend(v15, "initWithFireDate:withInterval:withTolerance:repeats:withUserInfo:withQueue:withBlock:", v16, 1, 0, v17, v37, 20.0, 0.0);
      -[PLBatteryAgent setEABatteryTimer:](self, "setEABatteryTimer:", v18);

      -[PLOperator defaultDoubleForKey:](self, "defaultDoubleForKey:", CFSTR("B244SBCInterval"));
      v20 = v19;
      v21 = (void *)MEMORY[0x1E0D80000];
      objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDateWithTimeIntervalSinceNow:");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLOperator workQueue](self, "workQueue");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v36[0] = v6;
      v36[1] = 3221225472;
      v36[2] = __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke_2;
      v36[3] = &unk_1E85793E0;
      v36[4] = self;
      objc_msgSend(v21, "scheduledTimerWithMonotonicFireDate:withInterval:withQueue:withBlock:", v22, v23, v36, v20);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent setSignificantBatteryChangeTimer:](self, "setSignificantBatteryChangeTimer:", v24);

    }
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v31 = v6;
      v32 = 3221225472;
      v33 = __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke_3;
      v34 = &__block_descriptor_40_e5_v8__0lu32l8;
      v35 = objc_opt_class();
      if (qword_1ED887648 != -1)
        dispatch_once(&qword_1ED887648, &v31);
      if (byte_1ED88756C)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("In Setup EA Logging: Done"), v31, v32, v33, v34, v35);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "lastPathComponent");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent setupEALoggingTriggeredByConnectionEvent:]");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "logMessage:fromFile:fromFunction:fromLineNumber:", v25, v28, v29, 3869);

        PLLogCommon();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v40 = v25;
          _os_log_debug_impl(&dword_1CAF47000, v30, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
  }
}

uint64_t __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88756B = result;
  return result;
}

uint64_t __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke_2339(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEABatteryStatistics");
}

void __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke_2(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v1 = (void *)MEMORY[0x1E0D80078];
  v2 = *(_QWORD *)(a1 + 32);
  v5 = CFSTR("entry");
  objc_msgSend(MEMORY[0x1E0C99E38], "null");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "postNotificationName:object:userInfo:", CFSTR("PLBatteryAgent_EventBackward_Battery.filtered.Level_0_1.Level_7_1800.Level_8_300"), v2, v4);

}

uint64_t __59__PLBatteryAgent_setupEALoggingTriggeredByConnectionEvent___block_invoke_3(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88756C = result;
  return result;
}

uint64_t __33__PLBatteryAgent_cancelEALogging__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88756D = result;
  return result;
}

uint64_t __33__PLBatteryAgent_cancelEALogging__block_invoke_2355(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88756E = result;
  return result;
}

- (void)accessoryDisconnected:(id)a3
{
  id v4;
  NSObject *v5;
  _QWORD v6[5];
  id v7;

  v4 = a3;
  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
  {
    -[PLOperator workQueue](self, "workQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __40__PLBatteryAgent_accessoryDisconnected___block_invoke;
    v6[3] = &unk_1E85791E0;
    v6[4] = self;
    v7 = v4;
    dispatch_async(v5, v6);

  }
}

uint64_t __40__PLBatteryAgent_accessoryDisconnected___block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "detectEAPencilConnectionWithNotification:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "refreshEABatteryStatusTriggeredByConnectionEvent:", 1);
}

- (void)accessoryConnected:(id)a3
{
  id v4;
  NSObject *v5;
  _QWORD v6[5];
  id v7;

  v4 = a3;
  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
  {
    -[PLOperator workQueue](self, "workQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __37__PLBatteryAgent_accessoryConnected___block_invoke;
    v6[3] = &unk_1E85791E0;
    v6[4] = self;
    v7 = v4;
    dispatch_async(v5, v6);

  }
}

uint64_t __37__PLBatteryAgent_accessoryConnected___block_invoke(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  objc_msgSend(*(id *)(a1 + 32), "detectEAPencilConnectionWithNotification:", *(_QWORD *)(a1 + 40));
  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_DEFAULT, "[BATTERY] EA connected!", v4, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "refreshEABatteryStatusTriggeredByConnectionEvent:", 1);
}

uint64_t __46__PLBatteryAgent_supportsAccConnectionLogging__block_invoke()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  byte_1ED88756F = result;
  return result;
}

- (void)accessoryConnectionEventNotification:(id)a3
{
  NSObject *v4;
  _QWORD block[5];

  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory", a3))
  {
    -[PLOperator workQueue](self, "workQueue");
    v4 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __55__PLBatteryAgent_accessoryConnectionEventNotification___block_invoke;
    block[3] = &unk_1E85780C8;
    block[4] = self;
    dispatch_async(v4, block);

  }
}

uint64_t __55__PLBatteryAgent_accessoryConnectionEventNotification___block_invoke(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_DEFAULT, "[EABattery]: accessory connect", v4, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "setShouldQueryForAccessory:", 1);
  return objc_msgSend(*(id *)(a1 + 32), "setShouldLogEABatteryConfig:", 1);
}

- (void)accessoryDisconnectEventNotification:(id)a3
{
  NSObject *v4;
  _QWORD block[5];

  if (+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory", a3))
  {
    -[PLOperator workQueue](self, "workQueue");
    v4 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __55__PLBatteryAgent_accessoryDisconnectEventNotification___block_invoke;
    block[3] = &unk_1E85780C8;
    block[4] = self;
    dispatch_async(v4, block);

  }
}

uint64_t __55__PLBatteryAgent_accessoryDisconnectEventNotification___block_invoke(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_DEFAULT, "[EABattery]: accessory disconnect", v4, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "setShouldQueryForAccessory:", 0);
}

uint64_t __32__PLBatteryAgent_getIOPSDevices__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887570 = result;
  return result;
}

uint64_t __32__PLBatteryAgent_getIOPSDevices__block_invoke_2365(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887571 = result;
  return result;
}

uint64_t __32__PLBatteryAgent_getIOPSDevices__block_invoke_2370(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887572 = result;
  return result;
}

uint64_t __46__PLBatteryAgent_getBaseIdentifierFromDevice___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887573 = result;
  return result;
}

- (void)logEABatteryStatistics
{
  void *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  void *v12;
  int v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  void *v22;
  int v23;
  NSObject *v24;
  double v25;
  void *v26;
  void *v27;
  double v28;
  double v29;
  void *v30;
  double v31;
  double v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint8_t buf[4];
  double v44;
  __int16 v45;
  int v46;
  _BYTE v47[128];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  if (!+[PLBatteryAgent hasExternalAccessory](PLBatteryAgent, "hasExternalAccessory"))
    return;
  -[PLBatteryAgent getIOPSDevices](self, "getIOPSDevices");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v39, v47, 16);
  if (!v4)
    goto LABEL_26;
  v6 = v4;
  v7 = 0;
  v8 = *(_QWORD *)v40;
  *(_QWORD *)&v5 = 134218240;
  v38 = v5;
  do
  {
    for (i = 0; i != v6; ++i)
    {
      if (*(_QWORD *)v40 != v8)
        objc_enumerationMutation(v3);
      v10 = *(_QWORD *)(*((_QWORD *)&v39 + 1) + 8 * i);
      -[PLBatteryAgent getBaseIdentifierFromDevice:](self, "getBaseIdentifierFromDevice:", v10, v38);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "containsObject:", v11);

      if (v13)
      {
        if (objc_msgSend(v11, "isEqualToString:", CFSTR("76-546")))
        {
          v14 = objc_alloc(MEMORY[0x1E0D7FFB0]);
          -[PLBatteryAgent entryKeyEAPencilStats](self, "entryKeyEAPencilStats");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = (void *)objc_msgSend(v14, "initWithEntryKey:withRawData:", v15, v10);

          -[PLOperator logEntry:](self, "logEntry:", v16);
          goto LABEL_21;
        }
        if ((objc_msgSend(v11, "isEqualToString:", CFSTR("1452-5013")) & 1) != 0
          || (objc_msgSend(v11, "isEqualToString:", CFSTR("1452-5016")) & 1) != 0
          || objc_msgSend(v11, "isEqualToString:", CFSTR("1452-5017")))
        {
          v17 = objc_alloc(MEMORY[0x1E0D7FFB0]);
          -[PLBatteryAgent entryKeyEABattery](self, "entryKeyEABattery");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = (void *)objc_msgSend(v17, "initWithEntryKey:withRawData:", v18, v10);

          -[PLOperator logEntry:](self, "logEntry:", v16);
          -[PLBatteryAgent logEABatteryConfig:](self, "logEABatteryConfig:", v10);
          objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("Current Capacity"));
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "doubleValue");
          v21 = v20;

          objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("Max Capacity"));
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          v23 = objc_msgSend(v22, "intValue");

          PLLogCommon();
          v24 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = v38;
            v44 = v21;
            v45 = 1024;
            v46 = v23;
            _os_log_debug_impl(&dword_1CAF47000, v24, OS_LOG_TYPE_DEBUG, "EALevel: %f / %d", buf, 0x12u);
          }

          if (v23 < 1)
            v25 = -1.0;
          else
            v25 = v21 / (double)v23 * 100.0;
          -[PLBatteryAgent setEABatteryLevel:](self, "setEABatteryLevel:", v25);
          -[PLBatteryAgent lastkIOPSAppleBatteryCaseCumulativeCurrentKey](self, "lastkIOPSAppleBatteryCaseCumulativeCurrentKey");
          v26 = (void *)objc_claimAutoreleasedReturnValue();

          if (v26)
          {
            -[PLBatteryAgent lastkIOPSAppleBatteryCaseCumulativeCurrentKey](self, "lastkIOPSAppleBatteryCaseCumulativeCurrentKey");
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "doubleValue");
            v29 = v28;
            objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("Battery Case Cumulative Current"));
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v30, "doubleValue");
            v32 = v29 - v31;
            objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("Voltage"));
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v33, "doubleValue");
            v35 = v32 * v34 / 3600.0;

            -[PLBatteryAgent EAEnergyDrained](self, "EAEnergyDrained");
            -[PLBatteryAgent setEAEnergyDrained:](self, "setEAEnergyDrained:", v35 + v36);
          }
          objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("Battery Case Cumulative Current"));
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLBatteryAgent setLastkIOPSAppleBatteryCaseCumulativeCurrentKey:](self, "setLastkIOPSAppleBatteryCaseCumulativeCurrentKey:", v37);

          -[PLBatteryAgent logEABatteryConnectedTimeToAnalyticsWithEAConnectionState:](self, "logEABatteryConnectedTimeToAnalyticsWithEAConnectionState:", 0);
LABEL_21:

        }
        v7 = 1;
      }

    }
    v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v39, v47, 16);
  }
  while (v6);
  if ((v7 & 1) == 0)
LABEL_26:
    -[PLBatteryAgent refreshEABatteryStatusTriggeredByConnectionEvent:](self, "refreshEABatteryStatusTriggeredByConnectionEvent:", 0);

}

- (void)logEABatteryConfigToCA:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id obj;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "definedKeys");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v5, "mutableCopy");

  v17 = (void *)objc_opt_new();
  objc_msgSend(v6, "addObjectsFromArray:", &unk_1E86512F0);
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  obj = v6;
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v20 != v9)
          objc_enumerationMutation(obj);
        v11 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * i);
        -[PLBatteryAgent setAggdIntegerValueFromEntry:forKey:withPrefix:](self, "setAggdIntegerValueFromEntry:forKey:withPrefix:", v4, v11, CFSTR("com.apple.power.battery.eabatteryconfig."));
        objc_msgSend(v4, "objectForKeyedSubscript:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = v11;
        if (objc_msgSend(v13, "rangeOfString:", CFSTR("-")) != 0x7FFFFFFFFFFFFFFFLL)
        {
          objc_msgSend(v13, "stringByReplacingOccurrencesOfString:withString:", CFSTR("-"), CFSTR("_"));
          v14 = objc_claimAutoreleasedReturnValue();

          v13 = (id)v14;
        }
        if (v12)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v12, "integerValue"));
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "setValue:forKey:", v15, v13);

          }
        }

      }
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v8);
  }

  v16 = v17;
  AnalyticsSendEventLazy();

}

id __41__PLBatteryAgent_logEABatteryConfigToCA___block_invoke(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

- (void)logEABatteryConfig:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t block;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  void *v20;
  uint64_t v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (-[PLBatteryAgent shouldLogEABatteryConfig](self, "shouldLogEABatteryConfig"))
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Debug Information"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
      {
        v6 = objc_opt_class();
        block = MEMORY[0x1E0C809B0];
        v18 = 3221225472;
        v19 = __37__PLBatteryAgent_logEABatteryConfig___block_invoke;
        v20 = &__block_descriptor_40_e5_v8__0lu32l8;
        v21 = v6;
        if (qword_1ED887688 != -1)
          dispatch_once(&qword_1ED887688, &block);
        if (byte_1ED887574)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("The payload is %@"), v4, block, v18, v19, v20, v21);
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          v8 = (void *)MEMORY[0x1E0D7FF98];
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "lastPathComponent");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEABatteryConfig:]");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "logMessage:fromFile:fromFunction:fromLineNumber:", v7, v10, v11, 4111);

          PLLogCommon();
          v12 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 138412290;
            v23 = v7;
            _os_log_debug_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
          }

        }
      }
      +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("EABatteryConfig"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v13, v4);
      -[PLOperator logEntry:](self, "logEntry:", v14);
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Nominal Capacity"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v15, CFSTR("NominalChargeCapacity"));

      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CycleCount"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v16, CFSTR("CycleCount"));

      -[PLBatteryAgent logEABatteryConfigToCA:](self, "logEABatteryConfigToCA:", v14);
      -[PLBatteryAgent setShouldLogEABatteryConfig:](self, "setShouldLogEABatteryConfig:", 0);

    }
  }

}

uint64_t __37__PLBatteryAgent_logEABatteryConfig___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887574 = result;
  return result;
}

- (void)logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  NSObject *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint8_t v23[16];
  uint8_t v24[16];
  uint8_t v25[16];
  uint8_t buf[16];

  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent setLastEABatteryConnectedTime:](self, "setLastEABatteryConnectedTime:", v5);

  PLLogCommon();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "[BATTERY] logEABatteryConnectedEventToAnalytics", buf, 2u);
  }

  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D7FFA0], "doubleForKey:ifNotSet:", CFSTR("LastEABatteryConnectCountLogTimestamp"), 0.0);
  v9 = v8;
  objc_msgSend(v7, "timeIntervalSince1970");
  v11 = v10;
  if (v9 == 0.0 || v3)
  {
    PLLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v25 = 0;
      _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "[BATTERY] No recorded last EA Battery connect time", v25, 2u);
    }

    goto LABEL_14;
  }
  if (v10 - v9 >= 86400.0)
  {
LABEL_14:
    v15 = (void *)MEMORY[0x1E0D7FFA0];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v11);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setObject:forKey:saveToDisk:", v16, CFSTR("LastEABatteryConnectCountLogTimestamp"), 1);

    -[PLBatteryAgent eaBatteryConnectCountTimer](self, "eaBatteryConnectCountTimer");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      -[PLBatteryAgent eaBatteryConnectCountTimer](self, "eaBatteryConnectCountTimer");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "invalidate");

      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "dateByAddingTimeInterval:", 86400.0);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent eaBatteryConnectCountTimer](self, "eaBatteryConnectCountTimer");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "setFireDate:", v20);

    }
    else
    {
      -[PLBatteryAgent createTimerForEABatteryCountLogging](self, "createTimerForEABatteryCountLogging");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent setEaBatteryConnectCountTimer:](self, "setEaBatteryConnectCountTimer:", v19);
    }

    PLLogCommon();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v23 = 0;
      _os_log_debug_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_DEBUG, "[BATTERY] log EA connect count", v23, 2u);
    }

    MEMORY[0x1D179B7DC](CFSTR("com.apple.powerlog.EABattery.connected"), 1);
    AnalyticsSendEventLazy();
    goto LABEL_20;
  }
  PLLogCommon();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v24 = 0;
    _os_log_debug_impl(&dword_1CAF47000, v14, OS_LOG_TYPE_DEBUG, "[BATTERY] Last EA Battery connect time too recent", v24, 2u);
  }

LABEL_20:
}

void *__78__PLBatteryAgent_logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp___block_invoke()
{
  return &unk_1E864CDF0;
}

- (void)logEABatteryConnectedTimeToAnalyticsWithEAConnectionState:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  char v13;
  NSObject *v14;
  uint8_t buf[16];

  v3 = a3;
  -[PLBatteryAgent lastEABatteryConnectedTime](self, "lastEABatteryConnectedTime");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    PLLogCommon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "[BATTERY] logEABatteryConnectedTimeToAnalyticsWithEAConnectionState", buf, 2u);
    }

    objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent lastEABatteryConnectedTime](self, "lastEABatteryConnectedTime");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "timeIntervalSinceDate:", v8);
    v10 = v9;

    if (v3)
    {
      -[PLBatteryAgent setLastEABatteryConnectedTime:](self, "setLastEABatteryConnectedTime:", 0);
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent setLastEABatteryConnectedTime:](self, "setLastEABatteryConnectedTime:", v11);

    }
    -[PLBatteryAgent deviceIsPluggedIn](self, "deviceIsPluggedIn");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "BOOLValue");

    if ((v13 & 1) == 0)
    {
      PLLogCommon();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_1CAF47000, v14, OS_LOG_TYPE_DEBUG, "[BATTERY] log EA connection time", buf, 2u);
      }

      MEMORY[0x1D179B7DC](CFSTR("com.apple.powerlog.EABattery.connectedTime"), (uint64_t)v10);
      AnalyticsSendEventLazy();
    }

  }
}

id __76__PLBatteryAgent_logEABatteryConnectedTimeToAnalyticsWithEAConnectionState___block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = CFSTR("timeConnected");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

- (id)createTimerForEABatteryCountLogging
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[5];

  v3 = objc_alloc(MEMORY[0x1E0D80070]);
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dateByAddingTimeInterval:", 86400.0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLOperator workQueue](self, "workQueue");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __53__PLBatteryAgent_createTimerForEABatteryCountLogging__block_invoke;
  v9[3] = &unk_1E8578078;
  v9[4] = self;
  v7 = (void *)objc_msgSend(v3, "initWithFireDate:withInterval:withTolerance:repeats:withUserInfo:withQueue:withBlock:", v5, 1, 0, v6, v9, 86400.0, 1.0);

  return v7;
}

uint64_t __53__PLBatteryAgent_createTimerForEABatteryCountLogging__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEABatteryConnectedEventToAnalyticsIgnoreLastLogTimestamp:", 0);
}

- (BOOL)isUPOEntry:(id)a3
{
  id v3;
  BOOL v4;
  void *v5;
  int v6;
  void *v7;
  int v8;

  v3 = a3;
  if ((objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:ifNotSet:", CFSTR("UPO_Debug"), 0) & 1) != 0)
  {
    v4 = 1;
  }
  else if (v3)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("UISOC"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "intValue");

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("Temperature"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "intValue");

    v4 = v6 > 10 && v8 > 0;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (void)detectEAPencilConnectionWithNotification:(id)a3
{
  void *v4;
  void *v5;
  int v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  objc_msgSend(a3, "userInfo");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKey:", CFSTR("EAAccessoryKey"));
  v14 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "name");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isEqualToString:", CFSTR("Apple Pencil"));

  v7 = v14;
  if (v6)
  {
    v8 = objc_msgSend(v14, "isConnected");
    -[PLBatteryAgent trackedAccessories](self, "trackedAccessories");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v9;
    if ((_DWORD)v8)
      objc_msgSend(v9, "addObject:", CFSTR("76-546"));
    else
      objc_msgSend(v9, "removeObject:", CFSTR("76-546"));

    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("EAPencilConnect"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v11);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v8);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v13, CFSTR("isPhysicallyAttached"));

    -[PLOperator logEntry:](self, "logEntry:", v12);
    v7 = v14;
  }

}

- (void)initOperatorDependancies
{
  int v3;
  uint64_t v4;
  void *v5;
  void *v6;
  PLEntryNotificationOperatorComposition *v7;
  PLEntryNotificationOperatorComposition *canSleepEntryNotifications;
  PLEntryNotificationOperatorComposition *v9;
  PLEntryNotificationOperatorComposition *wakeEntryNotifications;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  unint64_t v22;
  PLIOKitOperatorComposition *v23;
  PLIOKitOperatorComposition *ioAccessoryManager;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  PLEntryNotificationOperatorComposition *v31;
  PLEntryNotificationOperatorComposition *batteryLevelChanged;
  unint64_t v33;
  PLXPCListenerOperatorComposition *v34;
  PLXPCListenerOperatorComposition *UPOStepperListener;
  NSObject *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  NSObject *v44;
  NSObject *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  NSObject *v53;
  uint64_t state;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  NSObject *v62;
  id v63;
  PLIOKitOperatorComposition *v64;
  PLIOKitOperatorComposition *iokitPPM;
  id v66;
  void *v67;
  unint64_t v68;
  void *v69;
  PLTimer *v70;
  PLTimer *ppmEventThresholdTimer;
  id v72;
  PLXPCListenerOperatorComposition *v73;
  PLXPCListenerOperatorComposition *mobileChargeModeListener;
  PLNSNotificationOperatorComposition *v75;
  PLNSNotificationOperatorComposition *thermalMonitorListener;
  id v77;
  void *v78;
  void *v79;
  __IOHIDManager *v80;
  __IOHIDManager *v81;
  NSObject *v82;
  void *v83;
  unint64_t v84;
  void *v85;
  const __CFDictionary *v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  id v94;
  void *v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  NSObject *v100;
  uint32_t v101;
  NSObject *v102;
  uint32_t v103;
  uint32_t v104;
  NSObject *v105;
  void *v106;
  _QWORD v107[5];
  _QWORD v108[5];
  _QWORD v109[5];
  _QWORD v110[5];
  _QWORD v111[5];
  _QWORD v112[5];
  _QWORD v113[5];
  _QWORD v114[5];
  _QWORD v115[5];
  _QWORD v116[5];
  _QWORD v117[5];
  _QWORD v118[5];
  _QWORD v119[5];
  _QWORD v120[5];
  _QWORD handler[5];
  int out_token[2];
  _QWORD v123[5];
  _QWORD v124[5];
  _QWORD block[5];
  _QWORD v126[5];
  _QWORD v127[5];
  _QWORD v128[5];
  _QWORD v129[5];
  _QWORD v130[5];
  _QWORD v131[3];
  _QWORD v132[3];
  uint64_t state64[2];
  _BYTE v134[24];
  uint64_t v135;

  v135 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0D80020], "isDeviceClass:", 101001) & 1) == 0)
    -[PLBatteryAgent logEventPointBatteryShutdown](self, "logEventPointBatteryShutdown");
  if (objc_msgSend(MEMORY[0x1E0D80020], "isiPhone"))
    -[PLBatteryAgent logEventPointUPOStepper](self, "logEventPointUPOStepper");
  v3 = objc_msgSend(MEMORY[0x1E0D80078], "hasGasGauge");
  v4 = MEMORY[0x1E0C809B0];
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0D80030], "sharedSemaphoreForKey:", *MEMORY[0x1E0D80218]);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setCanSleepSemaphore:](self, "setCanSleepSemaphore:", v5);

    -[PLBatteryAgent canSleepSemaphore](self, "canSleepSemaphore");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "signalInterestByObject:", self);

    v130[0] = v4;
    v130[1] = 3221225472;
    v130[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke;
    v130[3] = &unk_1E8577F48;
    v130[4] = self;
    objc_msgSend(MEMORY[0x1E0D7FFC8], "canSleepEntryNotificationWithOperator:withBlock:", self, v130);
    v7 = (PLEntryNotificationOperatorComposition *)objc_claimAutoreleasedReturnValue();
    canSleepEntryNotifications = self->_canSleepEntryNotifications;
    self->_canSleepEntryNotifications = v7;

    v129[0] = v4;
    v129[1] = 3221225472;
    v129[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2426;
    v129[3] = &unk_1E8577F48;
    v129[4] = self;
    objc_msgSend(MEMORY[0x1E0D7FFC8], "wakeEntryNotificationWithOperator:withBlock:", self, v129);
    v9 = (PLEntryNotificationOperatorComposition *)objc_claimAutoreleasedReturnValue();
    wakeEntryNotifications = self->_wakeEntryNotifications;
    self->_wakeEntryNotifications = v9;

    -[PLBatteryAgent setAllowGasGaugeRead:](self, "setAllowGasGaugeRead:", 1);
  }
  v11 = objc_alloc(MEMORY[0x1E0D80098]);
  dispatch_get_global_queue(-32768, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(v11, "initWithWorkQueue:withRegistration:withBlock:", v12, &unk_1E864CE18, &__block_literal_global_2440);

  -[PLBatteryAgent setBatteryInfoResponder:](self, "setBatteryInfoResponder:", v13);
  v128[0] = v4;
  v128[1] = 3221225472;
  v128[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2459;
  v128[3] = &unk_1E8577F70;
  v128[4] = self;
  v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D80098]), "initWithWorkQueue:withRegistration:withBlock:", v12, &unk_1E864CE40, v128);
  -[PLBatteryAgent setBatteryConfigResponder:](self, "setBatteryConfigResponder:", v14);

  v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D80098]), "initWithWorkQueue:withRegistration:withBlock:", v12, &unk_1E864CE68, &__block_literal_global_2471);
  -[PLBatteryAgent setBatteryUPOStepperResponder:](self, "setBatteryUPOStepperResponder:", v15);

  v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D80098]), "initWithWorkQueue:withRegistration:withBlock:", v12, &unk_1E864CE90, &__block_literal_global_2477);
  -[PLBatteryAgent setBatteryShutdownDataResponder:](self, "setBatteryShutdownDataResponder:", v16);

  v17 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D80098]), "initWithWorkQueue:withRegistration:withBlock:", v12, &unk_1E864CEB8, &__block_literal_global_2483);
  -[PLBatteryAgent setBatteryTemperatureResponder:](self, "setBatteryTemperatureResponder:", v17);

  v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D80098]), "initWithWorkQueue:withRegistration:withBlock:", v12, &unk_1E864CEE0, &__block_literal_global_2491);
  -[PLBatteryAgent setBatteryDischargeCurrentResponder:](self, "setBatteryDischargeCurrentResponder:", v18);

  v19 = objc_alloc(MEMORY[0x1E0D80098]);
  -[PLOperator workQueue](self, "workQueue");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v127[0] = v4;
  v127[1] = 3221225472;
  v127[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2502;
  v127[3] = &unk_1E8577F70;
  v127[4] = self;
  v21 = (void *)objc_msgSend(v19, "initWithWorkQueue:withRegistration:withBlock:", v20, &unk_1E864CF08, v127);
  -[PLBatteryAgent setBatteryChargingStateResponder:](self, "setBatteryChargingStateResponder:", v21);

  v22 = 0x1E0D7F000uLL;
  v126[0] = v4;
  v126[1] = 3221225472;
  v126[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2514;
  v126[3] = &unk_1E857B1E0;
  v126[4] = self;
  v23 = (PLIOKitOperatorComposition *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFE8]), "initWithOperator:forServiceClass:withBlock:", self, CFSTR("IOAccessoryManager"), v126);
  ioAccessoryManager = self->_ioAccessoryManager;
  self->_ioAccessoryManager = v23;

  if (!self->_ioAccessoryManager && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    block[0] = v4;
    block[1] = 3221225472;
    block[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2522;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = objc_opt_class();
    if (qword_1ED8876B0 != -1)
      dispatch_once(&qword_1ED8876B0, block);
    if (byte_1ED887579)
    {
      v106 = v13;
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Could not register IOAccessoryManager callback"));
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "lastPathComponent");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "logMessage:fromFile:fromFunction:fromLineNumber:", v25, v28, v29, 4528);

      PLLogCommon();
      v30 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)v134 = 138412290;
        *(_QWORD *)&v134[4] = v25;
        _os_log_debug_impl(&dword_1CAF47000, v30, OS_LOG_TYPE_DEBUG, "%@", v134, 0xCu);
      }

      v13 = v106;
      v22 = 0x1E0D7F000;
    }
  }
  -[PLBatteryAgent logEventBackwardTrustedBatteryHealth](self, "logEventBackwardTrustedBatteryHealth");
  -[PLBatteryAgent logEventBackwardHeatMap](self, "logEventBackwardHeatMap");
  -[PLBatteryAgent logEventBackwardKioskMode](self, "logEventBackwardKioskMode");
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "taskMode"))
    -[PLBatteryAgent logEventNoneBatteryConfigCycleCountData](self, "logEventNoneBatteryConfigCycleCountData");
  v124[0] = v4;
  v124[1] = 3221225472;
  v124[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2525;
  v124[3] = &unk_1E8577F48;
  v124[4] = self;
  objc_msgSend(MEMORY[0x1E0D7FFC8], "significantBatteryChangeNotificationWithOperator:withBlock:", self, v124);
  v31 = (PLEntryNotificationOperatorComposition *)objc_claimAutoreleasedReturnValue();
  batteryLevelChanged = self->_batteryLevelChanged;
  self->_batteryLevelChanged = v31;

  v33 = 0x1E0D80000uLL;
  v123[0] = v4;
  v123[1] = 3221225472;
  v123[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2531;
  v123[3] = &unk_1E8578610;
  v123[4] = self;
  v34 = (PLXPCListenerOperatorComposition *)objc_msgSend(objc_alloc(MEMORY[0x1E0D80090]), "initWithOperator:withRegistration:withBlock:", self, &unk_1E864CF30, v123);
  UPOStepperListener = self->_UPOStepperListener;
  self->_UPOStepperListener = v34;

  if (objc_msgSend(MEMORY[0x1E0D80020], "isiPhone"))
  {
    state64[0] = 0;
    *(_QWORD *)out_token = 0;
    -[PLOperator workQueue](self, "workQueue");
    v36 = objc_claimAutoreleasedReturnValue();
    handler[0] = v4;
    handler[1] = 3221225472;
    handler[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2537;
    handler[3] = &unk_1E857F4E0;
    handler[4] = self;
    v37 = notify_register_dispatch("com.apple.thermalmonitor.ageAwareMitigationState", &out_token[1], v36, handler);

    if ((_DWORD)v37 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v120[0] = v4;
      v120[1] = 3221225472;
      v120[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2541;
      v120[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v120[4] = objc_opt_class();
      if (qword_1ED8876C0 != -1)
        dispatch_once(&qword_1ED8876C0, v120);
      if (byte_1ED88757B)
      {
        v38 = v13;
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("notify_register_dispatch failed %d %s"), v37, "com.apple.thermalmonitor.ageAwareMitigationState");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        v40 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "lastPathComponent");
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "logMessage:fromFile:fromFunction:fromLineNumber:", v39, v42, v43, 4573);

        PLLogCommon();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)v134 = 138412290;
          *(_QWORD *)&v134[4] = v39;
          _os_log_debug_impl(&dword_1CAF47000, v44, OS_LOG_TYPE_DEBUG, "%@", v134, 0xCu);
        }

        v13 = v38;
      }
    }
    -[PLOperator workQueue](self, "workQueue");
    v45 = objc_claimAutoreleasedReturnValue();
    v119[0] = v4;
    v119[1] = 3221225472;
    v119[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2545;
    v119[3] = &unk_1E857F4E0;
    v119[4] = self;
    v46 = notify_register_dispatch("com.apple.thermalmonitor.ageAwareMitigationsDisabled", out_token, v45, v119);

    if ((_DWORD)v46 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v118[0] = v4;
      v118[1] = 3221225472;
      v118[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2548;
      v118[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v118[4] = objc_opt_class();
      if (qword_1ED8876C8 != -1)
        dispatch_once(&qword_1ED8876C8, v118);
      if (byte_1ED88757C)
      {
        v47 = v13;
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("notify_register_dispatch failed %d %s"), v46, "com.apple.thermalmonitor.ageAwareMitigationsDisabled");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        v49 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v50, "lastPathComponent");
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v49, "logMessage:fromFile:fromFunction:fromLineNumber:", v48, v51, v52, 4580);

        PLLogCommon();
        v53 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v53, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)v134 = 138412290;
          *(_QWORD *)&v134[4] = v48;
          _os_log_debug_impl(&dword_1CAF47000, v53, OS_LOG_TYPE_DEBUG, "%@", v134, 0xCu);
        }

        v13 = v47;
      }
    }
    state = notify_get_state(out_token[1], state64);
    if ((_DWORD)state)
    {
      v55 = state;
      v33 = 0x1E0D80000;
      if (!objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
        goto LABEL_44;
      v117[0] = v4;
      v117[1] = 3221225472;
      v117[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2551;
      v117[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v117[4] = objc_opt_class();
      if (qword_1ED8876D0 != -1)
        dispatch_once(&qword_1ED8876D0, v117);
      if (!byte_1ED88757D)
        goto LABEL_44;
      v56 = v13;
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("notify_get_state failed %d %s"), v55, "com.apple.thermalmonitor.ageAwareMitigationState");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      v58 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v59, "lastPathComponent");
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v58, "logMessage:fromFile:fromFunction:fromLineNumber:", v57, v60, v61, 4587);

      PLLogCommon();
      v62 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v62, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)v134 = 138412290;
        *(_QWORD *)&v134[4] = v57;
        _os_log_debug_impl(&dword_1CAF47000, v62, OS_LOG_TYPE_DEBUG, "%@", v134, 0xCu);
      }

      v13 = v56;
    }
    else
    {
      -[PLBatteryAgent logEventForwardMitigationStateWithState:userDisabled:](self, "logEventForwardMitigationStateWithState:userDisabled:", state64[0], 0);
    }
    v33 = 0x1E0D80000uLL;
LABEL_44:
    v22 = 0x1E0D7F000uLL;
  }
  if (+[PLBatteryAgent shouldLogCPMS](PLBatteryAgent, "shouldLogCPMS")
    || +[PLBatteryAgent shouldLogPPMDebugDetail](PLBatteryAgent, "shouldLogPPMDebugDetail"))
  {
    v63 = objc_alloc(*(Class *)(v22 + 4072));
    v116[0] = v4;
    v116[1] = 3221225472;
    v116[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2556;
    v116[3] = &unk_1E857B1E0;
    v116[4] = self;
    v64 = (PLIOKitOperatorComposition *)objc_msgSend(v63, "initWithOperator:forService:withBlock:", self, CFSTR("ApplePPM"), v116);
    iokitPPM = self->_iokitPPM;
    self->_iokitPPM = v64;

  }
  if (self->_iokitPPM
    && +[PLBatteryAgent shouldLogPPMDebugDetail](PLBatteryAgent, "shouldLogPPMDebugDetail")
    && !+[PLBatteryAgent shouldLogCPMS](PLBatteryAgent, "shouldLogCPMS"))
  {
    v66 = objc_alloc(MEMORY[0x1E0D80070]);
    objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceNow:", 3600.0);
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLOperator workQueue](self, "workQueue");
    v68 = v33;
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    v115[0] = v4;
    v115[1] = 3221225472;
    v115[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2562;
    v115[3] = &unk_1E8578078;
    v115[4] = self;
    v70 = (PLTimer *)objc_msgSend(v66, "initWithFireDate:withInterval:withTolerance:repeats:withUserInfo:withQueue:withBlock:", v67, 1, 0, v69, v115, 3600.0, 0.0);
    ppmEventThresholdTimer = self->_ppmEventThresholdTimer;
    self->_ppmEventThresholdTimer = v70;

    v33 = v68;
  }
  -[PLBatteryAgent logEventForwardLPEM](self, "logEventForwardLPEM");
  -[PLBatteryAgent initSmartChargingLogging](self, "initSmartChargingLogging");
  -[PLBatteryAgent initCleanEnergyChargingLogging](self, "initCleanEnergyChargingLogging");
  -[PLBatteryAgent initializeChargingStateIntervals](self, "initializeChargingStateIntervals");
  v72 = objc_alloc(*(Class *)(v33 + 144));
  v114[0] = v4;
  v114[1] = 3221225472;
  v114[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2572;
  v114[3] = &unk_1E8578610;
  v114[4] = self;
  v73 = (PLXPCListenerOperatorComposition *)objc_msgSend(v72, "initWithOperator:withRegistration:withBlock:", self, &unk_1E864CF58, v114);
  mobileChargeModeListener = self->_mobileChargeModeListener;
  self->_mobileChargeModeListener = v73;

  v75 = (PLNSNotificationOperatorComposition *)objc_msgSend(objc_alloc(MEMORY[0x1E0D80010]), "initWithOperator:forNotification:withBlock:", self, CFSTR("PLThermalMonitorNotification"), &__block_literal_global_2577);
  thermalMonitorListener = self->_thermalMonitorListener;
  self->_thermalMonitorListener = v75;

  if (+[PLBatteryAgent shouldLogCPMS](PLBatteryAgent, "shouldLogCPMS"))
  {
    v77 = objc_alloc(MEMORY[0x1E0D7FF80]);
    -[PLOperator workQueue](self, "workQueue");
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    v113[0] = v4;
    v113[1] = 3221225472;
    v113[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2581;
    v113[3] = &unk_1E8577F48;
    v113[4] = self;
    v79 = (void *)objc_msgSend(v77, "initWithWorkQueue:forNotification:requireState:withBlock:", v78, CFSTR("com.apple.powerlogd.logCPMS"), 0, v113);
    -[PLBatteryAgent setCpmsDebugNotification:](self, "setCpmsDebugNotification:", v79);

    -[PLBatteryAgent logCPMSSnapshotWithTrigger:](self, "logCPMSSnapshotWithTrigger:", 2);
  }
  if (+[PLBatteryAgent shouldLogBTM](PLBatteryAgent, "shouldLogBTM"))
  {
    v80 = IOHIDManagerCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], 0);
    self->_BTMmanager = v80;
    if (v80)
    {
      v81 = v80;
      -[PLOperator workQueue](self, "workQueue");
      v82 = objc_claimAutoreleasedReturnValue();
      IOHIDManagerSetDispatchQueue(v81, v82);

      v132[0] = CFSTR("AppleBTM");
      v131[0] = CFSTR("IOClass");
      v131[1] = CFSTR("DeviceUsagePage");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 65280);
      v83 = (void *)objc_claimAutoreleasedReturnValue();
      v132[1] = v83;
      v131[2] = CFSTR("DeviceUsage");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 72);
      v84 = v33;
      v85 = (void *)objc_claimAutoreleasedReturnValue();
      v132[2] = v85;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v132, v131, 3);
      v86 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

      v33 = v84;
      IOHIDManagerSetDeviceMatching(self->_BTMmanager, v86);
      IOHIDManagerActivate(self->_BTMmanager);
    }
    else
    {
      PLLogCommon();
      v86 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled((os_log_t)v86, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v134 = 0;
        _os_log_error_impl(&dword_1CAF47000, (os_log_t)v86, OS_LOG_TYPE_ERROR, "manager is not existent", v134, 2u);
      }
    }

  }
  if (_os_feature_enabled_impl())
  {
    v87 = objc_alloc(*(Class *)(v33 + 144));
    v112[0] = v4;
    v112[1] = 3221225472;
    v112[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2597;
    v112[3] = &unk_1E8578610;
    v112[4] = self;
    v88 = (void *)objc_msgSend(v87, "initWithOperator:withRegistration:withBlock:", self, &unk_1E864CF80, v112);
    -[PLBatteryAgent setBdcAMAListener:](self, "setBdcAMAListener:", v88);

  }
  v89 = objc_alloc(*(Class *)(v33 + 144));
  v111[0] = v4;
  v111[1] = 3221225472;
  v111[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2603;
  v111[3] = &unk_1E8578610;
  v111[4] = self;
  v90 = (void *)objc_msgSend(v89, "initWithOperator:withRegistration:withBlock:", self, &unk_1E864CFA8, v111);
  -[PLBatteryAgent setAcamSBCListener:](self, "setAcamSBCListener:", v90);

  v91 = objc_alloc(MEMORY[0x1E0D7FF80]);
  -[PLOperator workQueue](self, "workQueue");
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  v110[0] = v4;
  v110[1] = 3221225472;
  v110[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_3_2606;
  v110[3] = &unk_1E8577F48;
  v110[4] = self;
  v93 = (void *)objc_msgSend(v91, "initWithWorkQueue:forNotification:requireState:withBlock:", v92, CFSTR("com.apple.powerlogd.logBatteryUIVisit"), 0, v110);
  -[PLBatteryAgent setBatteryUIVisitNotification:](self, "setBatteryUIVisitNotification:", v93);

  v94 = objc_alloc(MEMORY[0x1E0D7FF80]);
  -[PLOperator workQueue](self, "workQueue");
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  v109[0] = v4;
  v109[1] = 3221225472;
  v109[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_4_2609;
  v109[3] = &unk_1E8577F48;
  v109[4] = self;
  v96 = (void *)objc_msgSend(v94, "initWithWorkQueue:forNotification:requireState:withBlock:", v95, CFSTR("com.apple.powerlogd.logBatteryHealthUIVisit"), 0, v109);
  -[PLBatteryAgent setBatteryHealthUIVisitNotification:](self, "setBatteryHealthUIVisitNotification:", v96);

  v97 = objc_alloc(MEMORY[0x1E0D7FF80]);
  -[PLOperator workQueue](self, "workQueue");
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  v108[0] = v4;
  v108[1] = 3221225472;
  v108[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_5_2612;
  v108[3] = &unk_1E8577F48;
  v108[4] = self;
  v99 = (void *)objc_msgSend(v97, "initWithWorkQueue:forNotification:requireState:withBlock:", v98, CFSTR("com.apple.powerlogd.logBatteryChargingUIVisit"), 0, v108);
  -[PLBatteryAgent setBatteryChargingUIVisitNotification:](self, "setBatteryChargingUIVisitNotification:", v99);

  *(_QWORD *)v134 = 0;
  out_token[1] = 0;
  -[PLOperator workQueue](self, "workQueue");
  v100 = objc_claimAutoreleasedReturnValue();
  v107[0] = v4;
  v107[1] = 3221225472;
  v107[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_6_2614;
  v107[3] = &unk_1E857F4E0;
  v107[4] = self;
  v101 = notify_register_dispatch("com.apple.system.powersources.gaugingmitigation", &out_token[1], v100, v107);

  if (v101)
  {
    PLLogCommon();
    v102 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR))
    {
      LODWORD(state64[0]) = 67109120;
      HIDWORD(state64[0]) = v101;
      _os_log_error_impl(&dword_1CAF47000, v102, OS_LOG_TYPE_ERROR, "Failed to register for gauging mitigation notification, ret = %d", (uint8_t *)state64, 8u);
    }

  }
  v103 = notify_get_state(out_token[1], (uint64_t *)v134);
  if (v103)
  {
    v104 = v103;
    PLLogCommon();
    v105 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR))
    {
      LODWORD(state64[0]) = 67109120;
      HIDWORD(state64[0]) = v104;
      _os_log_error_impl(&dword_1CAF47000, v105, OS_LOG_TYPE_ERROR, "Failed to get initial mitigation state, ret = %d", (uint8_t *)state64, 8u);
    }

  }
  else if ((v134[0] & 1) != 0)
  {
    -[PLBatteryAgent logEventBackwardChargingLimit](self, "logEventBackwardChargingLimit");
  }

}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke(uint64_t a1)
{
  int v2;
  uint64_t v3;
  __CFString *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  uint64_t v23;
  _QWORD block[4];
  const __CFString *v25;
  uint64_t v26;
  uint8_t buf[4];
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
  v3 = MEMORY[0x1E0C809B0];
  if (v2)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2;
    block[3] = &unk_1E8578738;
    v25 = CFSTR("GasGauge");
    v26 = objc_opt_class();
    if (qword_1ED887690 == -1)
    {
      v4 = CFSTR("GasGauge");
    }
    else
    {
      dispatch_once(&qword_1ED887690, block);
      v4 = (__CFString *)v25;
    }
    v5 = byte_1ED887575;

    if (v5)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Blocking GasGauge reads"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "lastPathComponent");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]_block_invoke");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 4312);

      PLLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v28 = v6;
        _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "setAllowGasGaugeRead:", 0);
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v19 = v3;
    v20 = 3221225472;
    v21 = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2421;
    v22 = &__block_descriptor_40_e5_v8__0lu32l8;
    v23 = objc_opt_class();
    if (qword_1ED887698 != -1)
      dispatch_once(&qword_1ED887698, &v19);
    if (byte_1ED887576)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ signaling done"), *(_QWORD *)(a1 + 32), v19, v20, v21, v22, v23);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "lastPathComponent");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]_block_invoke_2");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "logMessage:fromFile:fromFunction:fromLineNumber:", v12, v15, v16, 4314);

      PLLogCommon();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v28 = v12;
        _os_log_debug_impl(&dword_1CAF47000, v17, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "canSleepSemaphore");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "signalDoneByObject:", *(_QWORD *)(a1 + 32));

}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
  byte_1ED887575 = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2421(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887576 = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2426(uint64_t a1)
{
  uint64_t v2;
  __CFString *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  void *v15;
  const __CFString *v16;
  uint64_t v17;
  uint8_t buf[4];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v2 = objc_opt_class();
    v12 = MEMORY[0x1E0C809B0];
    v14 = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2427;
    v15 = &unk_1E8578738;
    v13 = 3221225472;
    v16 = CFSTR("GasGauge");
    v17 = v2;
    if (qword_1ED8876A0 == -1)
    {
      v3 = CFSTR("GasGauge");
    }
    else
    {
      dispatch_once(&qword_1ED8876A0, &v12);
      v3 = (__CFString *)v16;
    }
    v4 = byte_1ED887577;

    if (v4)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Opening GasGauge reads"), v12, v13, v14, v15);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "lastPathComponent");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]_block_invoke");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "logMessage:fromFile:fromFunction:fromLineNumber:", v5, v8, v9, 4318);

      PLLogCommon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v19 = v5;
        _os_log_debug_impl(&dword_1CAF47000, v10, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "setAllowGasGaugeRead:", 1, v12, v13, v14, v15);
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2427(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
  byte_1ED887577 = result;
  return result;
}

id __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2438()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id obj;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD v30[3];
  _QWORD v31[3];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D80028], "sharedSQLiteConnection");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "performQuery:", CFSTR("SELECT ID, CycleCount FROM PLBatteryAgent_EventBackward_Battery GROUP BY CycleCount;"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  obj = v1;
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = *(_QWORD *)v27;
    do
    {
      v8 = 0;
      v9 = v6;
      do
      {
        if (*(_QWORD *)v27 != v7)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * v8);
        objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("CycleCount"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v6 = objc_msgSend(v11, "integerValue");

        v12 = v6 - v9;
        if (v6 - v9 < 0)
          v12 = v9 - v6;
        if (v12 > 5)
          v5 = v4;
        objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("ID"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v4 = objc_msgSend(v13, "longLongValue");

        ++v8;
        v9 = v6;
      }
      while (v3 != v8);
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v3);
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(MEMORY[0x1E0D80028], "sharedSQLiteConnection");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("select MAX(AppleRawMaxCapacity) AS Max, MIN(AppleRawMaxCapacity) AS Min, AVG(AppleRawMaxCapacity) AS Avg from PLBatteryAgent_EventBackward_Battery where ID > %lld"), v5);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "performQuery:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v16, "count"))
  {
    v30[0] = CFSTR("fullChargeCapacityMax");
    objc_msgSend(v16, "objectAtIndexedSubscript:", 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("Max"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v31[0] = v18;
    v30[1] = CFSTR("fullChargeCapacityMin");
    objc_msgSend(v16, "objectAtIndexedSubscript:", 0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("Min"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v31[1] = v20;
    v30[2] = CFSTR("fullChargeCapacityAvg");
    objc_msgSend(v16, "objectAtIndexedSubscript:", 0);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("Avg"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v31[2] = v22;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 3);
    v23 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v23 = 0;
  }

  return v23;
}

id __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2459(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;
  _QWORD v25[2];
  _QWORD v26[3];

  v26[2] = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80388], CFSTR("BatteryConfig"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D800B8], "sharedCore");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "storage");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "entriesForKey:", v11);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v19 = 0;
  v20 = &v19;
  v21 = 0x3032000000;
  v22 = __Block_byref_object_copy__11;
  v23 = __Block_byref_object_dispose__11;
  v24 = (id)objc_opt_new();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2461;
  v18[3] = &unk_1E857F438;
  v18[4] = &v19;
  objc_msgSend(v14, "enumerateObjectsUsingBlock:", v18);
  v25[0] = CFSTR("dataReady");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "lifetimeDataLogged"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = CFSTR("BatteryConfig");
  v26[0] = v15;
  v26[1] = v20[5];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  _Block_object_dispose(&v19, 8);
  return v16;
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2461(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  objc_msgSend(a2, "dictionary");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

id __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2470(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v23;
  _QWORD v24[5];
  _QWORD v25[5];
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t);
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  _QWORD v38[2];
  _QWORD v39[4];

  v39[2] = *MEMORY[0x1E0C80C00];
  v23 = a3;
  v7 = a4;
  v8 = a5;
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("UPOStepper"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D800B8], "sharedCore");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "storage");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "entriesForKey:", v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("UPOStepper"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D800B8], "sharedCore");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "storage");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "entriesForKey:", v13);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v32 = 0;
  v33 = &v32;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__11;
  v36 = __Block_byref_object_dispose__11;
  v37 = (id)objc_opt_new();
  v26 = 0;
  v27 = &v26;
  v28 = 0x3032000000;
  v29 = __Block_byref_object_copy__11;
  v30 = __Block_byref_object_dispose__11;
  v17 = (void *)objc_opt_new();
  v18 = MEMORY[0x1E0C809B0];
  v31 = v17;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_3;
  v25[3] = &unk_1E857F438;
  v25[4] = &v26;
  objc_msgSend(v12, "enumerateObjectsUsingBlock:", v25);
  v24[0] = v18;
  v24[1] = 3221225472;
  v24[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_4;
  v24[3] = &unk_1E857F438;
  v24[4] = &v32;
  objc_msgSend(v16, "enumerateObjectsUsingBlock:", v24);
  v19 = v27[5];
  v38[0] = CFSTR("State");
  v38[1] = CFSTR("Metrics");
  v20 = v33[5];
  v39[0] = v19;
  v39[1] = v20;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v39, v38, 2);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  _Block_object_dispose(&v26, 8);

  _Block_object_dispose(&v32, 8);
  return v21;
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_3(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  objc_msgSend(a2, "dictionary");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_4(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  objc_msgSend(a2, "dictionary");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v3);

}

id __42__PLBatteryAgent_initOperatorDependancies__block_invoke_5()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  const __CFString *v20;
  void *v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("BatteryShutdown"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D800B8], "sharedCore");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "storage");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "entriesForKey:", v0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = (void *)objc_opt_new();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v22, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v17;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v17 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v9), "dictionary", (_QWORD)v16);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("BatteryShutdownTimestamp"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = v11;
        if (v11)
        {
          objc_msgSend(v11, "convertFromMonotonicToSystem");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "setObject:forKeyedSubscript:", v13, CFSTR("BatteryShutdownTimestamp"));

        }
        objc_msgSend(v4, "addObject:", v10);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v22, 16);
    }
    while (v7);
  }

  v20 = CFSTR("BatteryShutdownData");
  v21 = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

id __42__PLBatteryAgent_initOperatorDependancies__block_invoke_6()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("Battery"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("SELECT MIN(%@) TemperatureMin, MAX(%@) TemperatureMax, AVG(%@) TemperatureAvg FROM %@;"),
    CFSTR("Temperature"),
    CFSTR("Temperature"),
    CFSTR("Temperature"),
    v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D80028], "sharedSQLiteConnection");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "performQuery:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v3, "objectAtIndexedSubscript:", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id __42__PLBatteryAgent_initOperatorDependancies__block_invoke_7()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  const __CFString *v6;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("Battery"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("                                           SELECT AmperageBucket, COUNT(*) NumSamples                                           FROM(                                          SELECT %@, -ROUND(%@/%f + 0.5)*%f AmperageBucket                                           FROM %@                                           WHERE %@ <= -%f AND timestamp > (-%f +(                                          SELECT MAX(timestamp)                                            FROM %@                                          ))                                          )                                           GROUP BY AmperageBucket                                           ORDER BY AmperageBucket;"),
    CFSTR("InstantAmperage"),
    CFSTR("InstantAmperage"),
    0x4049000000000000,
    0x4049000000000000,
    v0,
    CFSTR("InstantAmperage"),
    0x4054000000000000,
    0x40F5180000000000,
    v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = CFSTR("DischargeCurrentHist");
  objc_msgSend(MEMORY[0x1E0D80028], "sharedSQLiteConnection");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "performQuery:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v7, &v6, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2502(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSObject *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  double v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  void *v27;
  _QWORD v29[2];
  _QWORD v30[2];
  uint8_t buf[4];
  NSObject *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v6 = a5;
  PLLogCommon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v32 = v6;
    _os_log_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_DEFAULT, "[BatteryQueryForChargingState] Received query with payload=%@!", buf, 0xCu);
  }

  if (v6
    && (-[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("StartEpochTime")),
        v8 = (void *)objc_claimAutoreleasedReturnValue(),
        v8,
        v8))
  {
    v9 = (void *)MEMORY[0x1E0C99D68];
    -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("StartEpochTime"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "doubleValue");
    objc_msgSend(v9, "dateWithTimeIntervalSince1970:");
    v11 = objc_claimAutoreleasedReturnValue();

    -[NSObject convertFromSystemToMonotonic](v11, "convertFromSystemToMonotonic");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "timeIntervalSinceNow");
    if (v13 >= -3600.0)
    {
      +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("Battery"));
      v14 = objc_claimAutoreleasedReturnValue();
      v16 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v12, "timeIntervalSince1970");
      objc_msgSend(v16, "stringWithFormat:", CFSTR("SELECT timestamp, %@, %@ FROM %@ where timestamp > %f"), CFSTR("ExternalConnected"), CFSTR("IsCharging"), v14, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D80028], "sharedSQLiteConnection");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "performQuery:", v18);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v20, "count"))
      {
        objc_msgSend(MEMORY[0x1E0D80048], "entryKeyForType:andName:", *MEMORY[0x1E0D80378], *MEMORY[0x1E0D803D8]);
        v21 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "storage");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "lastEntryForKey:", v21);
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v23, "objectForKeyedSubscript:", *MEMORY[0x1E0D803E0]);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "doubleValue");
        v26 = v25;

        v29[0] = CFSTR("Result");
        v29[1] = CFSTR("TimeOffset");
        v30[0] = v20;
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v26);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v30[1] = v27;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v30, v29, 2);
        v15 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        PLLogCommon();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_1CAF47000, v21, OS_LOG_TYPE_ERROR, "[BatteryQueryForChargingState] No entries found", buf, 2u);
        }
        v15 = 0;
      }

    }
    else
    {
      PLLogCommon();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v32 = v11;
        v33 = 2112;
        v34 = v12;
        _os_log_error_impl(&dword_1CAF47000, v14, OS_LOG_TYPE_ERROR, "[BatteryQueryForChargingState] Invalid StartDate=%@, MonotonicStartDate=%@", buf, 0x16u);
      }
      v15 = 0;
    }

  }
  else
  {
    PLLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_ERROR, "[BatteryQueryForChargingState] Invalid payload!", buf, 2u);
    }
    v15 = 0;
  }

  return v15;
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2514(uint64_t a1, uint64_t a2, int a3)
{
  void *v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  _QWORD block[5];
  uint8_t buf[4];
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend(MEMORY[0x1E0D80020], "isiPad"))
    goto LABEL_10;
  if ((a3 + 469794800) < 2)
  {
LABEL_5:
    objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", a2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v6)
      goto LABEL_25;
    v30 = v6;
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("IOAccessoryPrimaryDevicePort"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "intValue");

    if (v8 == 257)
    {
      +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("EAPencilCharging"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v9, v30);
      objc_msgSend(v30, "objectForKeyedSubscript:", CFSTR("IOAccessoryID"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "intValue");

      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v12 == 71);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v13, CFSTR("Pencil"));

      objc_msgSend(*(id *)(a1 + 32), "logEntry:", v10);
      v6 = v30;
      goto LABEL_25;
    }

LABEL_10:
    if (a3 != -469794799)
    {
      if (a3 != -469794798)
        return;
      goto LABEL_12;
    }
    if (objc_msgSend(*(id *)(a1 + 32), "priIOAccessoryPowerMode") == 1)
      return;
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("LightningConnectorStatus"));
    v31 = (id)objc_claimAutoreleasedReturnValue();
    v26 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v31);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 1);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "setObject:forKeyedSubscript:", v27, CFSTR("IOAccessoryPowerMode"));

    objc_msgSend(*(id *)(a1 + 32), "logEntry:", v26);
    v28 = *(void **)(a1 + 32);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", 1);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setPriIOAccessoryPowerMode:", objc_msgSend(v29, "intValue"));

    v6 = v31;
LABEL_25:

    return;
  }
  if (a3 != -469794798)
  {
    if (a3 != -536870608)
      return;
    goto LABEL_5;
  }
LABEL_12:
  objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", a2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("IOAccessoryActivePowerMode"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "intValue");
  if (v16 != objc_msgSend(*(id *)(a1 + 32), "priIOAccessoryPowerMode"))
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("LightningConnectorStatus"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v17);
    objc_msgSend(v18, "setObject:forKeyedSubscript:", v15, CFSTR("IOAccessoryPowerMode"));
    objc_msgSend(*(id *)(a1 + 32), "logEntry:", v18);
    objc_msgSend(*(id *)(a1 + 32), "setPriIOAccessoryPowerMode:", objc_msgSend(v15, "intValue"));
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v19 = objc_opt_class();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2519;
      block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      block[4] = v19;
      if (qword_1ED8876A8 != -1)
        dispatch_once(&qword_1ED8876A8, block);
      if (byte_1ED887578)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("IOAccessoryPowerMode: %d"), objc_msgSend(*(id *)(a1 + 32), "priIOAccessoryPowerMode"));
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "lastPathComponent");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]_block_invoke");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "logMessage:fromFile:fromFunction:fromLineNumber:", v20, v23, v24, 4518);

        PLLogCommon();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v34 = v20;
          _os_log_debug_impl(&dword_1CAF47000, v25, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }

  }
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2519(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887578 = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2522(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887579 = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2525(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v4 = 0;
    _os_log_debug_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_DEBUG, "SBC trigger occurred", v4, 2u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "handleSBC");
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2531(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t block;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v6 = a5;
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v7 = objc_opt_class();
    block = MEMORY[0x1E0C809B0];
    v15 = 3221225472;
    v16 = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2532;
    v17 = &__block_descriptor_40_e5_v8__0lu32l8;
    v18 = v7;
    if (qword_1ED8876B8 != -1)
      dispatch_once(&qword_1ED8876B8, &block);
    if (byte_1ED88757A)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("UPOStepper Callback %@"), v6, block, v15, v16, v17, v18);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "lastPathComponent");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]_block_invoke");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "logMessage:fromFile:fromFunction:fromLineNumber:", v8, v11, v12, 4558);

      PLLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v8;
        _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "logEventForwardUPOStepperWithPayload:", v6);

}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2532(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88757A = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2537(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleMitigationStateCallback:", a2);
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2541(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88757B = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2545(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEventForwardMitigationStateWithState:userDisabled:", 0, 1);
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2548(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88757C = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2551(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88757D = result;
  return result;
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2556(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  const char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t block;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  uint64_t v17;
  uint8_t buf[4];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v5 = objc_opt_class();
    block = MEMORY[0x1E0C809B0];
    v14 = 3221225472;
    v15 = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2557;
    v16 = &__block_descriptor_40_e5_v8__0lu32l8;
    v17 = v5;
    if (qword_1ED8876D8 != -1)
      dispatch_once(&qword_1ED8876D8, &block);
    if (byte_1ED88757E)
    {
      v6 = "NOT ";
      if (a3 == -528318208)
        v6 = "";
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Message recieved from ApplePPM (messageType = %skIOApplePPMMessagePowerlogTrigger"), v6, block, v14, v15, v16, v17);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "lastPathComponent");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]_block_invoke");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "logMessage:fromFile:fromFunction:fromLineNumber:", v7, v10, v11, 4594);

      PLLogCommon();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v19 = v7;
        _os_log_debug_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  if (a3 == -528318208)
    objc_msgSend(*(id *)(a1 + 32), "handlePPMCallback");
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2557(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88757E = result;
  return result;
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2562(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _QWORD block[5];
  uint8_t buf[4];
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "setPpmEventLoggingCount:", 0);
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v2 = objc_opt_class();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2563;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = v2;
    if (qword_1ED8876E0 != -1)
      dispatch_once(&qword_1ED8876E0, block);
    if (byte_1ED88757F)
    {
      v3 = (void *)MEMORY[0x1E0CB3940];
      v4 = objc_msgSend(*(id *)(a1 + 32), "ppmEventLoggingCount");
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "stringWithFormat:", CFSTR("PPMEvent count reset to %ld at %@"), v4, v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      v7 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "lastPathComponent");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initOperatorDependancies]_block_invoke");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 4606);

      PLLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v6;
        _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2563(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88757F = result;
  return result;
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2572(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  NSObject *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v6 = a5;
  PLLogCommon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    v8 = 138412290;
    v9 = v6;
    _os_log_debug_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_DEBUG, "MCM callback %@", (uint8_t *)&v8, 0xCu);
  }

  objc_msgSend(*(id *)(a1 + 32), "logEventForwardMobileChargeMode:", v6);
}

void __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2576(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  PLLogCommon();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_debug_impl(&dword_1CAF47000, v3, OS_LOG_TYPE_DEBUG, "Notification from ThermalMonitor: %@", (uint8_t *)&v4, 0xCu);
  }

}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2581(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logCPMSSnapshotWithTrigger:", 912265);
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2597(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleBDCAMALogging:", a5);
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_2_2603(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleOnDeviceACAMSBC:", a5);
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_3_2606(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEventPointBatteryUIVisit");
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_4_2609(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEventPointBatteryHealthUIVisit");
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_5_2612(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "logEventPointBatteryChargingUIVisit");
}

uint64_t __42__PLBatteryAgent_initOperatorDependancies__block_invoke_6_2614(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleGaugingMitigationStateCallback:", a2);
}

+ (BOOL)shouldLogBTM
{
  if (qword_1ED8876E8 != -1)
    dispatch_once(&qword_1ED8876E8, &__block_literal_global_2615);
  return byte_1ED887580;
}

uint64_t __30__PLBatteryAgent_shouldLogBTM__block_invoke()
{
  uint64_t result;
  BOOL v1;

  result = objc_msgSend(MEMORY[0x1E0D80020], "isiPhone");
  if ((_DWORD)result)
  {
    result = objc_msgSend(MEMORY[0x1E0D80020], "kPLDeviceClass");
    v1 = (int)result > 102033;
  }
  else
  {
    v1 = 0;
  }
  byte_1ED887580 = v1;
  return result;
}

- (void)handleSBC
{
  if (+[PLBatteryAgent shouldLogBTM](PLBatteryAgent, "shouldLogBTM") && self->_BTMmanager)
    -[PLBatteryAgent logBTM](self, "logBTM");
  if (+[PLBatteryAgent shouldLogCPMS](PLBatteryAgent, "shouldLogCPMS"))
    -[PLBatteryAgent logCPMSSnapshotWithTrigger:](self, "logCPMSSnapshotWithTrigger:", 0);
  else
    -[PLBatteryAgent logPPMDebug](self, "logPPMDebug");
}

- (void)handlePPMCallback
{
  uint64_t v3;
  __CFString *v4;
  int v5;
  void *v6;
  int64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t block;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  const __CFString *v23;
  char v24;
  uint8_t buf[4];
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  if (+[PLBatteryAgent shouldLogCPMS](PLBatteryAgent, "shouldLogCPMS"))
  {
    -[PLBatteryAgent logCPMSSnapshotWithTrigger:](self, "logCPMSSnapshotWithTrigger:", 1);
  }
  else
  {
    v3 = MEMORY[0x1E0C809B0];
    block = MEMORY[0x1E0C809B0];
    v21 = __35__PLBatteryAgent_handlePPMCallback__block_invoke;
    v22 = &unk_1E8579C80;
    v20 = 3221225472;
    v23 = CFSTR("disablePPMEventThreshold");
    v24 = 0;
    if (qword_1ED8876F0 == -1)
    {
      v4 = CFSTR("disablePPMEventThreshold");
    }
    else
    {
      dispatch_once(&qword_1ED8876F0, &block);
      v4 = (__CFString *)v23;
    }
    v5 = byte_1ED887581;

    if (v5 || -[PLBatteryAgent ppmEventLoggingCount](self, "ppmEventLoggingCount") <= 49)
    {
      -[PLBatteryAgent logPPMDebug](self, "logPPMDebug");
      -[PLBatteryAgent setPpmEventLoggingCount:](self, "setPpmEventLoggingCount:", -[PLBatteryAgent ppmEventLoggingCount](self, "ppmEventLoggingCount") + 1);
      if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
      {
        v14 = v3;
        v15 = 3221225472;
        v16 = __35__PLBatteryAgent_handlePPMCallback__block_invoke_2;
        v17 = &__block_descriptor_40_e5_v8__0lu32l8;
        v18 = objc_opt_class();
        if (qword_1ED8876F8 != -1)
          dispatch_once(&qword_1ED8876F8, &v14);
        if (byte_1ED887582)
        {
          v6 = (void *)MEMORY[0x1E0CB3940];
          v7 = -[PLBatteryAgent ppmEventLoggingCount](self, "ppmEventLoggingCount");
          objc_msgSend(v6, "stringWithFormat:", CFSTR("PPMDebug logging at PPMEvent count %ld"), v7, v14, v15, v16, v17, v18, block, v20, v21, v22);
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = (void *)MEMORY[0x1E0D7FF98];
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "lastPathComponent");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent handlePPMCallback]");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "logMessage:fromFile:fromFunction:fromLineNumber:", v8, v11, v12, 4765);

          PLLogCommon();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 138412290;
            v26 = v8;
            _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
          }

        }
      }
    }
  }
}

uint64_t __35__PLBatteryAgent_handlePPMCallback__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:ifNotSet:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  byte_1ED887581 = result;
  return result;
}

uint64_t __35__PLBatteryAgent_handlePPMCallback__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887582 = result;
  return result;
}

- (void)handleBDCAMALogging:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  id v17;
  uint64_t v18;
  _QWORD v19[4];
  id v20;
  PLBatteryAgent *v21;
  id v22;
  uint8_t buf[4];
  double v24;
  __int16 v25;
  NSObject *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = v4;
  if (v4
    && (objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("StartTimestamp")),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        v6,
        v6))
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("StartTimestamp"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "doubleValue");
    v9 = v8 * 1000.0 / 1000000000.0;

    objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", v9);
    v10 = objc_claimAutoreleasedReturnValue();
    -[NSObject convertFromSystemToMonotonic](v10, "convertFromSystemToMonotonic");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "allKeys");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v12, "mutableCopy");

    objc_msgSend(v13, "removeObject:", CFSTR("StartTimestamp"));
    PLLogCommon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218498;
      v24 = v9;
      v25 = 2112;
      v26 = v10;
      v27 = 2112;
      v28 = v11;
      _os_log_impl(&dword_1CAF47000, v14, OS_LOG_TYPE_DEFAULT, "[BDC_AMA] StartTimestamp = %f StartDate = %@ StartDateMonotonic = %@", buf, 0x20u);
    }

    objc_msgSend(v13, "sortedArrayUsingComparator:", &__block_literal_global_2624);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    PLLogCommon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    {
      v18 = objc_msgSend(v15, "count");
      *(_DWORD *)buf = 134217984;
      v24 = *(double *)&v18;
      _os_log_debug_impl(&dword_1CAF47000, v16, OS_LOG_TYPE_DEBUG, "[BDC_AMA] #Samples = %lu", buf, 0xCu);
    }

    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __38__PLBatteryAgent_handleBDCAMALogging___block_invoke_2625;
    v19[3] = &unk_1E8579230;
    v20 = v11;
    v21 = self;
    v22 = v5;
    v17 = v11;
    objc_msgSend(v15, "enumerateObjectsUsingBlock:", v19);

  }
  else
  {
    PLLogCommon();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v24 = *(double *)&v5;
      _os_log_error_impl(&dword_1CAF47000, v10, OS_LOG_TYPE_ERROR, "[BDC_AMA] Expected date keys not found in payload %@!", buf, 0xCu);
    }
  }

}

uint64_t __38__PLBatteryAgent_handleBDCAMALogging___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

void __38__PLBatteryAgent_handleBDCAMALogging___block_invoke_2625(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "dateByAddingTimeInterval:", (double)objc_msgSend(v4, "integerValue"));
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v5 = *(void **)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "logForSubsystem:category:data:date:", CFSTR("BatteryDataCollection"), CFSTR("BDC_AMA"), v6, v7);
}

- (void)handleOnDeviceACAMSBC:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  _QWORD v10[4];
  id v11;
  PLBatteryAgent *v12;
  uint8_t buf[16];

  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "allKeys");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(v6, "mutableCopy");

    objc_msgSend(v7, "sortedArrayUsingComparator:", &__block_literal_global_2631);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __40__PLBatteryAgent_handleOnDeviceACAMSBC___block_invoke_2;
    v10[3] = &unk_1E857F588;
    v11 = v5;
    v12 = self;
    objc_msgSend(v8, "enumerateObjectsUsingBlock:", v10);

  }
  else
  {
    PLLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_1CAF47000, v9, OS_LOG_TYPE_ERROR, "[OnDeviceACAMSBC] No payload found!", buf, 2u);
    }

  }
}

uint64_t __40__PLBatteryAgent_handleOnDeviceACAMSBC___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

void __40__PLBatteryAgent_handleOnDeviceACAMSBC___block_invoke_2(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)MEMORY[0x1E0C99D68];
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("timeSinceLastSBC"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "doubleValue");
  objc_msgSend(v4, "dateWithTimeIntervalSince1970:");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "convertFromSystemToMonotonic");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  PLLogCommon();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    v9 = 138412546;
    v10 = v3;
    v11 = 2112;
    v12 = v7;
    _os_log_debug_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_DEBUG, "Logging ACAMSBC Entry: %@ at %@", (uint8_t *)&v9, 0x16u);
  }

  objc_msgSend(*(id *)(a1 + 40), "logForSubsystem:category:data:date:", CFSTR("BatteryIntelligence"), CFSTR("OnDeviceACAMSBC"), v3, v7);
}

- (void)log
{
  -[PLBatteryAgent logEventBackwardBattery](self, "logEventBackwardBattery");
  -[PLBatteryAgent logEventIntervalGasGauge](self, "logEventIntervalGasGauge");
  -[PLBatteryAgent logEABatteryStatistics](self, "logEABatteryStatistics");
  -[PLBatteryAgent logEventNoneUserType](self, "logEventNoneUserType");
}

- (void)fakeLogEntry:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  _QWORD v8[5];
  id v9;

  objc_msgSend(a3, "userInfo");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("entry"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      -[PLOperator workQueue](self, "workQueue");
      v7 = objc_claimAutoreleasedReturnValue();
      v8[0] = MEMORY[0x1E0C809B0];
      v8[1] = 3221225472;
      v8[2] = __31__PLBatteryAgent_fakeLogEntry___block_invoke;
      v8[3] = &unk_1E85791E0;
      v8[4] = self;
      v9 = v6;
      dispatch_async(v7, v8);

    }
  }

}

void __31__PLBatteryAgent_fakeLogEntry___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t block;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  uint8_t buf[4];
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1D179C2E0]();
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v3 = objc_opt_class();
    block = MEMORY[0x1E0C809B0];
    v11 = 3221225472;
    v12 = __31__PLBatteryAgent_fakeLogEntry___block_invoke_2;
    v13 = &__block_descriptor_40_e5_v8__0lu32l8;
    v14 = v3;
    if (qword_1ED887700 != -1)
      dispatch_once(&qword_1ED887700, &block);
    if (byte_1ED887583)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("logging fake entry=%@"), *(_QWORD *)(a1 + 40), block, v11, v12, v13, v14);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "lastPathComponent");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent fakeLogEntry:]_block_invoke");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "logMessage:fromFile:fromFunction:fromLineNumber:", v4, v7, v8, 4874);

      PLLogCommon();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v16 = v4;
        _os_log_debug_impl(&dword_1CAF47000, v9, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "logEntry:", *(_QWORD *)(a1 + 40));
  objc_autoreleasePoolPop(v2);
}

uint64_t __31__PLBatteryAgent_fakeLogEntry___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887583 = result;
  return result;
}

- (void)logEventPointUPOStepper
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  -[PLBatteryAgent getUPOStepperData](self, "getUPOStepperData");
  v16 = (id)objc_claimAutoreleasedReturnValue();
  if (v16)
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("UPOStepper"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("upoMetrics"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v3, v4);
    v6 = (void *)MEMORY[0x1E0C99D68];
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("timestamp"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "doubleValue");
    objc_msgSend(v6, "dateWithTimeIntervalSince1970:");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v8, "convertFromSystemToMonotonic");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v9, CFSTR("BatteryShutdownTimestamp"));

    objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("mitigatedUPOCount"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v10, CFSTR("mitigatedUPOCount"));

    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("mitigatedUPOCount"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "intValue");
    ADClientSetValueForScalarKey();

    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("mitigationState"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "intValue");
    ADClientSetValueForScalarKey();

    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("timeWindow"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "intValue");
    ADClientSetValueForScalarKey();

    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("trueRa"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "intValue");
    ADClientSetValueForScalarKey();

    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("virtualRa"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "intValue");
    ADClientSetValueForScalarKey();

    -[PLOperator logEntry:](self, "logEntry:", v5);
  }

}

- (void)logEventPointBatteryUIVisit
{
  void *v3;
  id v4;

  if ((objc_msgSend(MEMORY[0x1E0D7FFA0], "objectExistsForKey:", CFSTR("BUIVisitDefaultKey")) & 1) == 0)
    objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", MEMORY[0x1E0C9AAB0], CFSTR("BUIVisitDefaultKey"), 1);
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("BatteryUIVisit"));
  v4 = (id)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v4);
  objc_msgSend(v3, "setObject:forKeyedSubscript:", &unk_1E8633C48, CFSTR("Visit"));
  -[PLOperator logEntry:](self, "logEntry:", v3);

}

- (void)logEventPointBatteryHealthUIVisit
{
  void *v3;
  id v4;

  if ((objc_msgSend(MEMORY[0x1E0D7FFA0], "objectExistsForKey:", CFSTR("BUIVisitDefaultKey")) & 1) == 0)
    objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", MEMORY[0x1E0C9AAB0], CFSTR("BUIVisitDefaultKey"), 1);
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("BatteryUIVisit"));
  v4 = (id)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v4);
  objc_msgSend(v3, "setObject:forKeyedSubscript:", &unk_1E8633C60, CFSTR("Visit"));
  -[PLOperator logEntry:](self, "logEntry:", v3);

}

- (void)logEventPointBatteryChargingUIVisit
{
  void *v3;
  id v4;

  if ((objc_msgSend(MEMORY[0x1E0D7FFA0], "objectExistsForKey:", CFSTR("BUIVisitDefaultKey")) & 1) == 0)
    objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", MEMORY[0x1E0C9AAB0], CFSTR("BUIVisitDefaultKey"), 1);
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("BatteryUIVisit"));
  v4 = (id)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v4);
  objc_msgSend(v3, "setObject:forKeyedSubscript:", &unk_1E8633C78, CFSTR("Visit"));
  -[PLOperator logEntry:](self, "logEntry:", v3);

}

- (void)logEventForwardLPEM
{
  void *v3;
  CFMutableDictionaryRef v4;
  __CFDictionary *v5;
  const __CFAllocator *v6;
  CFDictionaryRef v7;
  CFDictionaryRef v8;
  uint64_t MatchingService;
  io_object_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _BOOL4 v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  void *values;
  _DWORD valuePtr[3];

  if (objc_msgSend(MEMORY[0x1E0D80020], "hasLPEM"))
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("IOPMUBootLPMLog"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = IOServiceMatching("IOService");
    if (v4)
    {
      v5 = v4;
      valuePtr[0] = 0;
      v6 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
      values = CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], kCFNumberSInt32Type, valuePtr);
      v7 = CFDictionaryCreate(v6, (const void **)logEventForwardLPEM_dictKey, (const void **)&values, 1, MEMORY[0x1E0C9B390], MEMORY[0x1E0C9B3A0]);
      if (v7)
      {
        v8 = v7;
        CFDictionarySetValue(v5, CFSTR("IOPropertyMatch"), v7);
        CFRelease(v8);
        MatchingService = IOServiceGetMatchingService(*MEMORY[0x1E0CBBAB8], v5);
        if ((_DWORD)MatchingService)
        {
          v10 = MatchingService;
          objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", MatchingService);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = v11;
          if (v11)
          {
            objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
            v13 = (void *)objc_claimAutoreleasedReturnValue();

            if (v13)
            {
              objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("TMS0"));
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              v16 = objc_msgSend(v15, "unsignedIntegerValue");

              objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("TMSc"));
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              v19 = objc_msgSend(v18, "unsignedIntegerValue");

              -[PLOperator storage](self, "storage");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v20, "lastEntryForKey:", v3);
              v21 = (void *)objc_claimAutoreleasedReturnValue();

              if (v21)
              {
                objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("TMS0"));
                v22 = (void *)objc_claimAutoreleasedReturnValue();
                if (objc_msgSend(v22, "unsignedIntegerValue") == v16)
                {
                  objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("TMSc"));
                  v23 = (void *)objc_claimAutoreleasedReturnValue();
                  v24 = objc_msgSend(v23, "unsignedIntegerValue") != v19;

                }
                else
                {
                  v24 = 1;
                }

              }
              else
              {
                v24 = 1;
              }
              if (v16 && v19 && v24)
              {
                v25 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v3);
                v26 = (void *)MEMORY[0x1E0CB37E8];
                objc_msgSend(MEMORY[0x1E0D80068], "sharedInstance");
                v27 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v27, "currentTimeFromTimeReference:toTimeReference:", 2, 2);
                v74 = v21;
                v28 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v28, "timeIntervalSince1970");
                objc_msgSend(v26, "numberWithDouble:");
                v75 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v29 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("TMS0"));
                v30 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v30, CFSTR("TMS0"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v31 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v31, "objectForKeyedSubscript:", CFSTR("CAPA"));
                v32 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v32, CFSTR("CAPA"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v33 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v33, "objectForKeyedSubscript:", CFSTR("CCCs"));
                v34 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v34, CFSTR("CCCs"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v35 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v35, "objectForKeyedSubscript:", CFSTR("PDD0"));
                v36 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v36, CFSTR("PDD0"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v37 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v37, "objectForKeyedSubscript:", CFSTR("PDDc"));
                v38 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v38, CFSTR("PDDc"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v39 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v39, "objectForKeyedSubscript:", CFSTR("GGTm"));
                v40 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v40, CFSTR("GGTm"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v41 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v41, "objectForKeyedSubscript:", CFSTR("VOLT"));
                v42 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v42, CFSTR("VOLT"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v43 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v43, "objectForKeyedSubscript:", CFSTR("STAT"));
                v44 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v44, CFSTR("STAT"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v45 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v45, "objectForKeyedSubscript:", CFSTR("TMSc"));
                v46 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v46, CFSTR("TMSc"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v47 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v47, "objectForKeyedSubscript:", CFSTR("CCCu"));
                v48 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v48, CFSTR("CCCu"));

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v49 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v49, "objectForKeyedSubscript:", CFSTR("BTLC"));
                v50 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "setObject:forKeyedSubscript:", v50, CFSTR("BTLC"));

                objc_msgSend(v25, "setObject:forKeyedSubscript:", v75, CFSTR("CurrentTimeRTC"));
                -[PLOperator logEntry:](self, "logEntry:", v25);
                ADClientSetValueForScalarKey();
                objc_msgSend(v75, "longLongValue");
                ADClientSetValueForScalarKey();
                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v51 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v51, "objectForKeyedSubscript:", CFSTR("CAPA"));
                v52 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v52, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v53 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v53, "objectForKeyedSubscript:", CFSTR("CCCs"));
                v54 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v54, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v55 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v55, "objectForKeyedSubscript:", CFSTR("PDD0"));
                v56 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v56, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v57 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v57, "objectForKeyedSubscript:", CFSTR("PDDc"));
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v58, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v59 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v59, "objectForKeyedSubscript:", CFSTR("GGTm"));
                v60 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v60, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v61 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v61, "objectForKeyedSubscript:", CFSTR("VOLT"));
                v62 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v62, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v63 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v63, "objectForKeyedSubscript:", CFSTR("STAT"));
                v64 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v64, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v65 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v65, "objectForKeyedSubscript:", CFSTR("CCCu"));
                v66 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v66, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v67 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "objectForKeyedSubscript:", CFSTR("BTLC"));
                v68 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v68, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v69 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v69, "objectForKeyedSubscript:", CFSTR("CCCn"));
                v70 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v70, "unsignedLongLongValue");
                ADClientSetValueForScalarKey();

                objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
                v71 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v71, "objectForKeyedSubscript:", CFSTR("STAT"));
                v72 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v72, "unsignedCharValue");

                v21 = v74;
                ADClientSetValueForScalarKey();
                ADClientSetValueForScalarKey();
                ADClientSetValueForScalarKey();
                v76 = v12;
                v73 = v75;
                AnalyticsSendEventLazy();

              }
            }
          }
          IOObjectRelease(v10);

        }
      }
      else
      {
        CFRelease(v5);
      }
    }

  }
}

id __37__PLBatteryAgent_logEventForwardLPEM__block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  _QWORD v47[15];
  _QWORD v48[17];

  v48[15] = *MEMORY[0x1E0C80C00];
  v47[0] = CFSTR("tmsdiff");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", *(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 56));
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v48[0] = v46;
  v47[1] = CFSTR("tmsdifftms0");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", *(_QWORD *)(a1 + 48) - objc_msgSend(*(id *)(a1 + 32), "longLongValue"));
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v48[1] = v45;
  v47[2] = CFSTR("capa");
  v2 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "objectForKeyedSubscript:", CFSTR("CAPA"));
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "numberWithUnsignedLongLong:", objc_msgSend(v43, "unsignedLongLongValue"));
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v48[2] = v42;
  v47[3] = CFSTR("cccs");
  v3 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "objectForKeyedSubscript:", CFSTR("CCCs"));
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "numberWithUnsignedLongLong:", objc_msgSend(v40, "unsignedLongLongValue"));
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v48[3] = v39;
  v47[4] = CFSTR("pdd0");
  v4 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v38, "objectForKeyedSubscript:", CFSTR("PDD0"));
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "numberWithUnsignedLongLong:", objc_msgSend(v37, "unsignedLongLongValue"));
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v48[4] = v36;
  v47[5] = CFSTR("pddc");
  v5 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "objectForKeyedSubscript:", CFSTR("PDDc"));
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "numberWithUnsignedLongLong:", objc_msgSend(v34, "unsignedLongLongValue"));
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v48[5] = v33;
  v47[6] = CFSTR("ggtm");
  v6 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "objectForKeyedSubscript:", CFSTR("GGTm"));
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "numberWithUnsignedLongLong:", objc_msgSend(v31, "unsignedLongLongValue"));
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v48[6] = v30;
  v47[7] = CFSTR("volt");
  v7 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("VOLT"));
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "numberWithUnsignedLongLong:", objc_msgSend(v28, "unsignedLongLongValue"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v48[7] = v27;
  v47[8] = CFSTR("stat");
  v8 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("STAT"));
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "numberWithUnsignedLongLong:", objc_msgSend(v25, "unsignedLongLongValue"));
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v48[8] = v24;
  v47[9] = CFSTR("cccu");
  v9 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("CCCu"));
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "numberWithUnsignedLongLong:", objc_msgSend(v22, "unsignedLongLongValue"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v48[9] = v10;
  v47[10] = CFSTR("btlc");
  v11 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("BTLC"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "numberWithUnsignedLongLong:", objc_msgSend(v13, "unsignedLongLongValue"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v48[10] = v14;
  v47[11] = CFSTR("cccn");
  objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("IOPMUBootLPMLog"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("CCCn"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v48[11] = v16;
  v47[12] = CFSTR("uvlo0");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", (*(unsigned __int8 *)(a1 + 102) >> 2) & 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v48[12] = v17;
  v47[13] = CFSTR("uvlo1");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", (*(unsigned __int8 *)(a1 + 102) >> 3) & 1);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v48[13] = v18;
  v47[14] = CFSTR("uvlo2");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", (*(unsigned __int8 *)(a1 + 102) >> 4) & 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v48[14] = v19;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v48, v47, 15);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  return v20;
}

- (id)getPPMDebugData
{
  mach_port_t v2;
  const __CFDictionary *v3;
  uint64_t MatchingService;
  void *v5;

  v2 = *MEMORY[0x1E0CBBAB8];
  v3 = IOServiceMatching("ApplePPM");
  MatchingService = IOServiceGetMatchingService(v2, v3);
  if ((_DWORD)MatchingService)
  {
    objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", MatchingService);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

- (void)logPPMDebug
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  _QWORD v71[2];

  v71[1] = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent getPPMDebugData](self, "getPPMDebugData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = *MEMORY[0x1E0D80390];
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("PPMDebug"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", v4, CFSTR("PPMClientMetrics"));
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("PPMVector"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6 && objc_msgSend(v6, "count"))
    {
      v68 = v3;
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("PPMBatteryModel"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v67 = v5;
      v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v5);
      v10 = (void *)MEMORY[0x1E0C99D68];
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TStamp"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "doubleValue");
      objc_msgSend(v10, "dateWithTimeIntervalSince1970:", v12 / 1000000000.0);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "convertFromSystemToMonotonic");
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v9, "setObject:forKeyedSubscript:", v14, CFSTR("TStamp"));
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("BaselineSysCap"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "objectAtIndex:", 0);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v16, CFSTR("BaselineSysCap"));

      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("ModeledSysCap"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "objectAtIndex:", 0);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v18, CFSTR("ModeledSysCap"));

      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("NetSysCap"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "objectAtIndex:", 0);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v20, CFSTR("NetSysCap"));

      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("OverrideSysCap"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "objectAtIndex:", 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v22, CFSTR("OverrideSysCap"));

      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("ProactiveSysCap"));
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "objectAtIndex:", 0);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v24, CFSTR("ProactiveSysCap"));

      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TotalDemandAdj"));
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "objectAtIndex:", 0);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v26, CFSTR("TotalDemandAdj"));

      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TotalDemandRaw"));
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "objectAtIndex:", 0);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v28, CFSTR("TotalDemandRaw"));

      if (v8)
      {
        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("baselineR0"));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v29, CFSTR("baselineR0"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("baselineR1"));
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v30, CFSTR("baselineR1"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("baselineR2"));
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v31, CFSTR("baselineR2"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("baselineR3"));
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v32, CFSTR("baselineR3"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("avgRdcRatio"));
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v33, CFSTR("avgRdcRatio"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("R0"));
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v34, CFSTR("R0"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("R1"));
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v35, CFSTR("R1"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("R2"));
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v36, CFSTR("R2"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("R3"));
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v37, CFSTR("R3"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("Iss"));
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v38, CFSTR("Iss"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("outputFlag"));
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v39, CFSTR("outputFlag"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("Ps"));
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v40, CFSTR("Ps"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("Pb"));
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v41, CFSTR("Pb"));

        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("Pp"));
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v42, CFSTR("Pp"));

        if (+[PLBatteryAgent shouldLogPPMDebugDetail](PLBatteryAgent, "shouldLogPPMDebugDetail"))
        {
          objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("mPb"));
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "setObject:forKeyedSubscript:", v43, CFSTR("mPb"));

          objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("mPp"));
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "setObject:forKeyedSubscript:", v44, CFSTR("mPp"));

          objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("Vgg"));
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "setObject:forKeyedSubscript:", v45, CFSTR("Vgg"));

          objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("DroopCtrlEff"));
          v46 = (void *)objc_claimAutoreleasedReturnValue();

          if (v46)
          {
            objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("DroopCtrlEff"));
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v47, "objectAtIndex:", 0);
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v9, "setObject:forKeyedSubscript:", v48, CFSTR("DroopCtrlEff"));

          }
        }
      }
      v66 = v8;
      v65 = v9;
      -[PLOperator logEntry:](self, "logEntry:", v9);
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      v50 = 0;
      do
      {
        v51 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v69);
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Client%d"), v50);
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "objectForKeyedSubscript:", v52);
        v53 = (void *)objc_claimAutoreleasedReturnValue();

        if (v53)
        {
          v54 = v7;
          objc_msgSend(v7, "objectForKeyedSubscript:", v52);
          v55 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "setObject:forKeyedSubscript:", v14, CFSTR("TStamp"));
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v50);
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "setObject:forKeyedSubscript:", v56, CFSTR("Client"));

          objc_msgSend(v55, "objectForKeyedSubscript:", CFSTR("Car"));
          v57 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v57, "objectAtIndex:", 0);
          v58 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "setObject:forKeyedSubscript:", v58, CFSTR("Car"));

          objc_msgSend(v55, "objectForKeyedSubscript:", CFSTR("Pwr"));
          v59 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v59, "objectAtIndex:", 0);
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "setObject:forKeyedSubscript:", v60, CFSTR("Pwr"));

          objc_msgSend(v55, "objectForKeyedSubscript:", CFSTR("Idx"));
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "setObject:forKeyedSubscript:", v61, CFSTR("Idx"));

          objc_msgSend(v55, "objectForKeyedSubscript:", CFSTR("Bdg"));
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "setObject:forKeyedSubscript:", v62, CFSTR("Bdg"));

          if (+[PLBatteryAgent shouldLogPPMDebugDetail](PLBatteryAgent, "shouldLogPPMDebugDetail"))
          {
            objc_msgSend(v55, "objectForKeyedSubscript:", CFSTR("reqBdg"));
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v51, "setObject:forKeyedSubscript:", v63, CFSTR("reqBdg"));

          }
          objc_msgSend(v49, "addObject:", v51);

          v7 = v54;
        }

        v50 = (v50 + 1);
      }
      while ((_DWORD)v50 != 20);
      v70 = v69;
      v71[0] = v49;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v71, &v70, 1);
      v64 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLOperator logEntries:withGroupID:](self, "logEntries:withGroupID:", v64, v69);

      v5 = v67;
      v3 = v68;
    }

  }
}

- (void)logEventIntervalGasGauge
{
  _BOOL4 v3;
  int v4;
  uint64_t v5;
  __CFString *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  __CFString *v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  const __CFString *v27;
  uint64_t v28;
  _QWORD block[4];
  const __CFString *v30;
  uint64_t v31;
  uint8_t buf[4];
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v3 = -[PLBatteryAgent allowGasGaugeRead](self, "allowGasGaugeRead");
  v4 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
  if (v3)
  {
    if (v4)
    {
      v5 = objc_opt_class();
      block[0] = MEMORY[0x1E0C809B0];
      block[2] = __42__PLBatteryAgent_logEventIntervalGasGauge__block_invoke;
      block[3] = &unk_1E8578738;
      block[1] = 3221225472;
      v30 = CFSTR("GasGauge");
      v31 = v5;
      if (qword_1ED887708 == -1)
      {
        v6 = CFSTR("GasGauge");
      }
      else
      {
        dispatch_once(&qword_1ED887708, block);
        v6 = (__CFString *)v30;
      }
      v7 = byte_1ED887584;

      if (v7)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("reading the GasGauge"));
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "lastPathComponent");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventIntervalGasGauge]");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "logMessage:fromFile:fromFunction:fromLineNumber:", v8, v11, v12, 5137);

        PLLogCommon();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v33 = v8;
          _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    -[PLBatteryAgent gasGaugeRead](self, "gasGaugeRead");
  }
  else if (v4)
  {
    v14 = objc_opt_class();
    v23 = MEMORY[0x1E0C809B0];
    v25 = __42__PLBatteryAgent_logEventIntervalGasGauge__block_invoke_2737;
    v26 = &unk_1E8578738;
    v24 = 3221225472;
    v27 = CFSTR("GasGauge");
    v28 = v14;
    if (qword_1ED887710 == -1)
    {
      v15 = CFSTR("GasGauge");
    }
    else
    {
      dispatch_once(&qword_1ED887710, &v23);
      v15 = (__CFString *)v27;
    }
    v16 = byte_1ED887585;

    if (v16)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("no reading the GasGauge allowed!"), v23, v24, v25, v26);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "lastPathComponent");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventIntervalGasGauge]");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "logMessage:fromFile:fromFunction:fromLineNumber:", v17, v20, v21, 5140);

      PLLogCommon();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v33 = v17;
        _os_log_debug_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
}

uint64_t __42__PLBatteryAgent_logEventIntervalGasGauge__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
  byte_1ED887584 = result;
  return result;
}

uint64_t __42__PLBatteryAgent_logEventIntervalGasGauge__block_invoke_2737(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
  byte_1ED887585 = result;
  return result;
}

uint64_t __60__PLBatteryAgent_logEventPointChargingInfoWithChargingData___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887586 = result;
  return result;
}

- (void)logChargingParametersToAggd:(id)a3
{
  id v4;
  int prevChargingState;
  const __CFString *v6;
  const __CFString *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  id v25;

  v4 = a3;
  if (v4)
  {
    prevChargingState = self->_prevChargingState;
    if (prevChargingState == 8)
      v6 = CFSTR("com.apple.power.state.b3.rectifierVoltage");
    else
      v6 = CFSTR("com.apple.power.state.rectifierVoltage");
    if (prevChargingState == 8)
      v7 = CFSTR("com.apple.power.state.b3.rectifierCurrent");
    else
      v7 = CFSTR("com.apple.power.state.rectifierCurrent");
    v8 = (void *)objc_opt_new();
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Frequency"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      if (prevChargingState == 8)
        v10 = CFSTR("com.apple.power.state.b3.frequency");
      else
        v10 = CFSTR("com.apple.power.state.frequency");
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Frequency"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "doubleValue");
      v13 = v12;

      MEMORY[0x1D179B7F4](v10, v13);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v14, CFSTR("Frequency"));

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("RectifierCurrent"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("RectifierCurrent"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "doubleValue");
      v18 = v17;

      MEMORY[0x1D179B7F4](v7, v18);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v19, CFSTR("RectifierCurrent"));

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("RectifierVoltage"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    if (v20)
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("RectifierVoltage"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "doubleValue");
      v23 = v22;

      MEMORY[0x1D179B7F4](v6, v23);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v24, CFSTR("RectifierVoltage"));

    }
    if (objc_msgSend(v8, "count"))
    {
      v25 = v8;
      AnalyticsSendEventLazy();

    }
  }

}

id __46__PLBatteryAgent_logChargingParametersToAggd___block_invoke(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id __42__PLBatteryAgent_checkChargingInfoChange___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", &unk_1E8633C90, CFSTR("State"));
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("Duration"));

  return v2;
}

- (void)logPenaltyBoxDurationToAggd:(double)a3
{
  const __CFString *v4;

  switch(self->_prevConnectedState)
  {
    case 1:
      if (self->_prevChargingState == 1)
        goto LABEL_10;
      goto LABEL_16;
    case 2:
      if (self->_prevChargingState != 2)
        goto LABEL_16;
      goto LABEL_10;
    case 4:
      if (self->_prevChargingState != 4)
        goto LABEL_16;
      v4 = CFSTR("com.apple.power.state.a.penaltybox");
      break;
    case 5:
    case 6:
      if (self->_prevChargingState != 4)
        goto LABEL_16;
      goto LABEL_13;
    case 8:
      if (self->_prevChargingState != 8)
        goto LABEL_16;
      MEMORY[0x1D179B7F4](CFSTR("com.apple.power.state.e.penaltybox"), a2, a3);
LABEL_10:
      v4 = CFSTR("com.apple.power.state.b.penaltybox");
      break;
    case 0xC:
      if (self->_prevChargingState != 4)
        goto LABEL_16;
      MEMORY[0x1D179B7F4](CFSTR("com.apple.power.state.f.penaltybox"), a2, a3);
LABEL_13:
      v4 = CFSTR("com.apple.power.state.c.penaltybox");
      break;
    default:
LABEL_16:
      v4 = CFSTR("com.apple.power.state.d.penaltybox");
      break;
  }
  MEMORY[0x1D179B7F4](v4, a3);
  AnalyticsSendEventLazy();
}

id __46__PLBatteryAgent_logPenaltyBoxDurationToAggd___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(*(id *)(a1 + 32), "prevConnectedState"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("State"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, CFSTR("Duration"));

  return v2;
}

- (void)logChargingTimeToAggd:(double)a3
{
  const __CFString *v3;

  switch(self->_prevConnectedState)
  {
    case 1:
      if (self->_prevChargingState == 1)
      {
        v3 = CFSTR("com.apple.power.state.b2.chargetime");
        goto LABEL_14;
      }
      break;
    case 2:
      if (self->_prevChargingState == 2)
      {
        v3 = CFSTR("com.apple.power.state.b1.chargetime");
        goto LABEL_14;
      }
      break;
    case 5:
      if (self->_prevChargingState == 4)
      {
        v3 = CFSTR("com.apple.power.state.c2.chargetime");
        goto LABEL_14;
      }
      break;
    case 6:
      if (self->_prevChargingState == 4)
      {
        v3 = CFSTR("com.apple.power.state.c1.chargetime");
        goto LABEL_14;
      }
      break;
    case 8:
      if (self->_prevChargingState == 8)
      {
        v3 = CFSTR("com.apple.power.state.b3.chargetime");
        goto LABEL_14;
      }
      break;
    case 0xC:
      if (self->_prevChargingState == 4)
      {
        v3 = CFSTR("com.apple.power.state.c3.chargetime");
LABEL_14:
        MEMORY[0x1D179B7F4](objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", v3), a3);
        AnalyticsSendEventLazy();
      }
      break;
    default:
      return;
  }
}

id __40__PLBatteryAgent_logChargingTimeToAggd___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(*(id *)(a1 + 32), "prevConnectedState"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("State"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, CFSTR("Duration"));

  return v2;
}

- (void)logEventForwardCalibration0withData:(id)a3
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      v12 = 138412290;
      v13 = v4;
      _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "calibration data %@", (uint8_t *)&v12, 0xCu);
    }

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("baseline"));
    v6 = objc_claimAutoreleasedReturnValue();

    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("BatteryCalibration0Baseline"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v7, v6);
    -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("Battery Service State"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v9, CFSTR("batteryServiceRecommended"));

    -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("Maximum Capacity Percent"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v10, CFSTR("MaximumCapacityPercent"));

    -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("Battery Service Flags"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v11, CFSTR("batteryServiceFlags"));

    -[PLOperator logEntry:](self, "logEntry:", v8);
    -[PLBatteryAgent logBaselineToAggD:](self, "logBaselineToAggD:", v8);
    -[PLBatteryAgent logBaselineToCA:](self, "logBaselineToCA:", v8);

  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v12) = 0;
    _os_log_error_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_ERROR, "failed to read calibration data", (uint8_t *)&v12, 2u);
  }

}

- (void)logEventForwardCalibration0InfowithData:(id)a3
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  double v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  int v39;
  id v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      v39 = 138412290;
      v40 = v4;
      _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "calibration0Info data %@", (uint8_t *)&v39, 0xCu);
    }

    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("Calibration0Info"));
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v6);
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status0"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status0"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("correction"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v10, CFSTR("status0correction"));

      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status0"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("status"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v12, CFSTR("status0status"));

      v13 = (void *)MEMORY[0x1E0CB37E8];
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status0"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("epoch"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "doubleValue");
      objc_msgSend(v13, "numberWithDouble:", round(v16 / 1800.0) * 3600.0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v17, CFSTR("status0epoch"));

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status1"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    if (v18)
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status1"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("correction"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v20, CFSTR("status1correction"));

      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status1"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("status"));
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v22, CFSTR("status1status"));

      v23 = (void *)MEMORY[0x1E0CB37E8];
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("status1"));
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("epoch"));
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "doubleValue");
      objc_msgSend(v23, "numberWithDouble:", round(v26 / 1800.0) * 3600.0);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v27, CFSTR("status1epoch"));

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("postCalibrationSnapshot"));
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    if (v28)
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("postCalibrationSnapshot"));
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("ncc"));
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v30, CFSTR("ncc"));

      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("postCalibrationSnapshot"));
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "objectForKeyedSubscript:", CFSTR("nccAlt"));
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v32, CFSTR("nccAlt"));

      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("postCalibrationSnapshot"));
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "objectForKeyedSubscript:", CFSTR("Battery Service State"));
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v34, CFSTR("batteryServiceRecommended"));

      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("postCalibrationSnapshot"));
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v35, "objectForKeyedSubscript:", CFSTR("Maximum Capacity Percent"));
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v36, CFSTR("MaximumCapacityPercent"));

      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("postCalibrationSnapshot"));
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "objectForKeyedSubscript:", CFSTR("Battery Service Flags"));
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setObject:forKeyedSubscript:", v38, CFSTR("batteryServiceFlags"));

    }
    -[PLOperator logEntry:](self, "logEntry:", v7);

  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v39) = 0;
    _os_log_error_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_ERROR, "failed to read calibration0Info data", (uint8_t *)&v39, 2u);
  }

}

- (void)logEventForwardUPOStepperWithPayload:(id)a3
{
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;

  v4 = *MEMORY[0x1E0D80378];
  v5 = a3;
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", v4, CFSTR("UPOStepper"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v6, v5);

  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("RAv"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "intValue");
  ADClientSetValueForScalarKey();

  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("VirtualRADelta"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "intValue");
  ADClientSetValueForScalarKey();

  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MitigationState"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "intValue");
  ADClientSetValueForScalarKey();

  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("RAvTimeWindow"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "intValue");
  ADClientSetValueForScalarKey();

  v14 = v7;
  v12 = v7;
  AnalyticsSendEventLazy();
  -[PLOperator logEntry:](self, "logEntry:", v12);
  -[PLOperator storage](self, "storage");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "flushCachesWithReason:", CFSTR("UPOStepper"));

}

id __55__PLBatteryAgent_logEventForwardUPOStepperWithPayload___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v2 = (void *)objc_opt_new();
  v3 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("RAv"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "numberWithInt:", objc_msgSend(v4, "intValue"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("RAv"));

  v6 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("RAv"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "numberWithInt:", objc_msgSend(v7, "intValue"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v8, CFSTR("VirtualRaDelta"));

  v9 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("MitigationState"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "numberWithInt:", objc_msgSend(v10, "intValue"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v11, CFSTR("MitigationState"));

  v12 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("RAvTimeWindow"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "numberWithInt:", objc_msgSend(v13, "intValue"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v14, CFSTR("RAvTimeWindow"));

  return v2;
}

- (void)createFixedChargingIntervals:(id)a3
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL8 v12;
  PLBatteryAgent *v13;
  uint64_t v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  _DWORD v19[2];
  __int16 v20;
  _BOOL4 v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    v19[0] = 67109376;
    v19[1] = -[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged");
    v20 = 1024;
    v21 = -[PLBatteryAgent fixedChargingEngaged](self, "fixedChargingEngaged");
    _os_log_debug_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_DEBUG, "Smart Charging: %d, Fixed Charging: %d", (uint8_t *)v19, 0xEu);
  }

  if (!+[PLBatteryAgent supportsFixedLimitCharging](PLBatteryAgent, "supportsFixedLimitCharging"))
  {
    if (-[PLBatteryAgent fixedChargingEngaged](self, "fixedChargingEngaged"))
    {
      PLLogCommon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        LOWORD(v19[0]) = 0;
        _os_log_error_impl(&dword_1CAF47000, v10, OS_LOG_TYPE_ERROR, "Fixed Charging true for unsupported device", (uint8_t *)v19, 2u);
      }

    }
    PLLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v19[0]) = 0;
      _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "Unsupported device, just update OBC interval", (uint8_t *)v19, 2u);
    }

    v12 = -[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged");
    objc_msgSend(v4, "entryDate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = self;
    v14 = v12;
    goto LABEL_24;
  }
  if (!-[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged")
    || !-[PLBatteryAgent fixedChargingEngaged](self, "fixedChargingEngaged"))
  {
    if (-[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged")
      && !-[PLBatteryAgent fixedChargingEngaged](self, "fixedChargingEngaged"))
    {
      PLLogCommon();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v19[0]) = 0;
        _os_log_debug_impl(&dword_1CAF47000, v17, OS_LOG_TYPE_DEBUG, "Open only OBC interval, close fixed", (uint8_t *)v19, 2u);
      }

      objc_msgSend(v4, "entryDate");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 8, 0, v18);

      objc_msgSend(v4, "entryDate");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = self;
      v14 = 1;
    }
    else
    {
      PLLogCommon();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v19[0]) = 0;
        _os_log_debug_impl(&dword_1CAF47000, v15, OS_LOG_TYPE_DEBUG, "Close fixed and OBC intervals", (uint8_t *)v19, 2u);
      }

      objc_msgSend(v4, "entryDate");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 8, 0, v16);

      objc_msgSend(v4, "entryDate");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = self;
      v14 = 0;
    }
LABEL_24:
    -[PLBatteryAgent updateIntervalForType:withState:andTime:](v13, "updateIntervalForType:withState:andTime:", 2, v14, v8);
    goto LABEL_25;
  }
  PLLogCommon();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v19[0]) = 0;
    _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "Open only fixed interval, close OBC", (uint8_t *)v19, 2u);
  }

  objc_msgSend(v4, "entryDate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 2, 0, v7);

  objc_msgSend(v4, "entryDate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("chargeLimitTargetSoC"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent updateIntervalForType:withState:andTime:selectedChargedLimit:](self, "updateIntervalForType:withState:andTime:selectedChargedLimit:", 8, 1, v8, v9);

LABEL_25:
}

- (void)logEventForwardMitigationStateWithState:(unint64_t)a3 userDisabled:(BOOL)a4
{
  _BOOL8 v4;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v4 = a4;
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("MitigationState"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v7);
  if (!v4)
  {
    -[PLBatteryAgent setMitigationStateDefault:](self, "setMitigationStateDefault:", a3);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", a3);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v9, CFSTR("MitigationState"));

    ADClientSetValueForScalarKey();
    AnalyticsSendEventLazy();
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forKeyedSubscript:", v10, CFSTR("MitigationDisabled"));

  -[PLOperator logEntry:](self, "logEntry:", v8);
}

id __71__PLBatteryAgent_logEventForwardMitigationStateWithState_userDisabled___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("MitigationState"));

  return v2;
}

- (void)logEventForwardSmartChargingWithPayload:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  double v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  NSObject *v31;
  _BOOL4 v32;
  void *v33;
  NSObject *v34;
  void *v35;
  int v36;
  NSObject *v37;
  _BOOL4 v38;
  int v39;
  _BOOL4 v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  if (v4)
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("SmartCharging"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v5, v4);
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("decisionTime"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v8 = (void *)MEMORY[0x1E0CB37E8];
      objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("decisionTime"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "convertFromSystemToMonotonic");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "timeIntervalSince1970");
      objc_msgSend(v8, "numberWithInt:", (int)v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, CFSTR("decisionTime"));

    }
    else
    {
      objc_msgSend(v6, "setObject:forKeyedSubscript:", &unk_1E8633B70, CFSTR("decisionTime"));
    }

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("engagementProbability"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("engagementProbability"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        v15 = (void *)MEMORY[0x1E0CB37E8];
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("engagementProbability"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "doubleValue");
        objc_msgSend(v15, "numberWithInt:", (int)(v17 * 100.0));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "setObject:forKeyedSubscript:", v18, CFSTR("engagementProbability"));

      }
      else
      {
        objc_msgSend(v6, "setObject:forKeyedSubscript:", &unk_1E8633B70, CFSTR("engagementProbability"));
      }

    }
    else
    {
      objc_msgSend(v6, "setObject:forKeyedSubscript:", &unk_1E8633B70, CFSTR("engagementProbability"));
    }

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("durationPrediction"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (v19)
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("durationPrediction"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        v21 = (void *)MEMORY[0x1E0CB37E8];
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("durationPrediction"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "doubleValue");
        objc_msgSend(v21, "numberWithInt:", (int)(v23 * 10.0));
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "setObject:forKeyedSubscript:", v24, CFSTR("durationPrediction"));

      }
      else
      {
        objc_msgSend(v6, "setObject:forKeyedSubscript:", &unk_1E8633B70, CFSTR("durationPrediction"));
      }

    }
    else
    {
      objc_msgSend(v6, "setObject:forKeyedSubscript:", &unk_1E8633B70, CFSTR("durationPrediction"));
    }

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("state"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v25, CFSTR("state"));

    PLLogCommon();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v39) = 0;
      _os_log_impl(&dword_1CAF47000, v26, OS_LOG_TYPE_DEFAULT, "Logging smart charging", (uint8_t *)&v39, 2u);
    }

    -[PLOperator logEntry:](self, "logEntry:", v6);
    objc_msgSend(v6, "dictionary");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "entryDate");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLOperator logForSubsystem:category:data:date:](self, "logForSubsystem:category:data:date:", CFSTR("BatteryMetrics"), CFSTR("SmartCharging"), v27, v28);

    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("isManuallyChargeLimited"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v29, CFSTR("isFixed"));

    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("isEngaged"));
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setSmartChargingEngaged:](self, "setSmartChargingEngaged:", objc_msgSend(v30, "BOOLValue"));

    PLLogCommon();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
    {
      v32 = -[PLBatteryAgent smartChargingEngaged](self, "smartChargingEngaged");
      v39 = 67109120;
      v40 = v32;
      _os_log_impl(&dword_1CAF47000, v31, OS_LOG_TYPE_INFO, "Smart Charging State: %d", (uint8_t *)&v39, 8u);
    }

    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("isFixed"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setFixedChargingEngaged:](self, "setFixedChargingEngaged:", objc_msgSend(v33, "intValue") == 1);

    PLLogCommon();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("isFixed"));
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v36 = objc_msgSend(v35, "intValue");
      v39 = 67109120;
      v40 = v36;
      _os_log_impl(&dword_1CAF47000, v34, OS_LOG_TYPE_INFO, "Fixed limit enum: %d", (uint8_t *)&v39, 8u);

    }
    PLLogCommon();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      v38 = -[PLBatteryAgent fixedChargingEngaged](self, "fixedChargingEngaged");
      v39 = 67109120;
      v40 = v38;
      _os_log_impl(&dword_1CAF47000, v37, OS_LOG_TYPE_INFO, "Fixed limit State: %d", (uint8_t *)&v39, 8u);
    }

    -[PLBatteryAgent createFixedChargingIntervals:](self, "createFixedChargingIntervals:", v6);
  }

}

- (void)logEventForwardCleanEnergyChargingWithPayload:(id)a3
{
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  _BOOL8 v12;
  void *v13;
  uint8_t v14[16];

  if (a3)
  {
    v4 = *MEMORY[0x1E0D80378];
    v5 = a3;
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", v4, CFSTR("CleanEnergyCharging"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v6, v5);

    PLLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_DEFAULT, "Logging clean charging", v14, 2u);
    }

    -[PLOperator logEntry:](self, "logEntry:", v7);
    objc_msgSend(v7, "dictionary");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "entryDate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLOperator logForSubsystem:category:data:date:](self, "logForSubsystem:category:data:date:", CFSTR("EnergyMetrics"), CFSTR("CleanEnergyCharging"), v9, v10);

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("isPaused"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setCleanEnergyChargingEngaged:](self, "setCleanEnergyChargingEngaged:", objc_msgSend(v11, "BOOLValue"));

    v12 = -[PLBatteryAgent cleanEnergyChargingEngaged](self, "cleanEnergyChargingEngaged");
    objc_msgSend(v7, "entryDate");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent updateIntervalForType:withState:andTime:](self, "updateIntervalForType:withState:andTime:", 7, v12, v13);

  }
}

- (void)logEventForwardMobileChargeMode:(id)a3
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v4 = *MEMORY[0x1E0D80378];
  v5 = a3;
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", v4, CFSTR("MobileChargeMode"));
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v7, v5);

  -[PLOperator logEntry:](self, "logEntry:", v6);
}

- (void)logEventBackwardTrustedBatteryHealth
{
  NSObject *v2;
  uint8_t v3[8];
  CFTypeRef cf;

  cf = 0;
  if (IOPSCopyPowerSourcesByTypePrecise())
  {
    PLLogCommon();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v3 = 0;
      _os_log_error_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_ERROR, "Failed to retrieve power sources Internal.", v3, 2u);
    }

    if (cf)
      CFRelease(cf);
  }
}

- (id)dateNoEarlierThan:(unint64_t)a3 since:(id)a4 withDelta:(id)a5
{
  id v7;
  id v8;
  double v9;
  int v10;
  NSObject *v11;
  id v12;
  void *v13;
  _DWORD v15[2];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  objc_msgSend(v7, "timeIntervalSinceDate:", v8);
  if ((unint64_t)(v9 / 86400.0) <= a3)
  {
    v12 = v8;
  }
  else
  {
    v10 = (int)((double)a3 * 86400.0);
    PLLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      v15[0] = 67109120;
      v15[1] = v10;
      _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "offset of day to go backward is %d", (uint8_t *)v15, 8u);
    }

    objc_msgSend(v7, "dateByAddingTimeInterval:", (double)-v10);
    v12 = (id)objc_claimAutoreleasedReturnValue();
  }
  v13 = v12;

  return v13;
}

- (void)logEventBackwardHeatMap
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  _QWORD v28[10];
  _QWORD v29[10];
  _QWORD block[10];
  uint8_t buf[4];
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  -[PLOperator workQueue](self, "workQueue");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = MEMORY[0x1E0C809B0];
  block[5] = MEMORY[0x1E0C809B0];
  block[6] = 3221225472;
  block[7] = __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke;
  block[8] = &unk_1E857AAF8;
  block[9] = self;
  v5 = IOPMCopyBatteryHeatMap();

  if ((_DWORD)v5 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    block[0] = v4;
    block[1] = 3221225472;
    block[2] = __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = objc_opt_class();
    if (qword_1ED887720 != -1)
      dispatch_once(&qword_1ED887720, block);
    if (byte_1ED887587)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("ChargingA Heat Map Error: %x"), v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "lastPathComponent");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventBackwardHeatMap]");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 5784);

      PLLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v32 = v6;
        _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  -[PLOperator workQueue](self, "workQueue");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v29[5] = v4;
  v29[6] = 3221225472;
  v29[7] = __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2828;
  v29[8] = &unk_1E857AAF8;
  v29[9] = self;
  v13 = IOPMCopyBatteryHeatMap();

  if ((_DWORD)v13 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v29[0] = v4;
    v29[1] = 3221225472;
    v29[2] = __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2_2831;
    v29[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v29[4] = objc_opt_class();
    if (qword_1ED887728 != -1)
      dispatch_once(&qword_1ED887728, v29);
    if (byte_1ED887588)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("ChargingB Heat Map Error: %x"), v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "lastPathComponent");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventBackwardHeatMap]");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "logMessage:fromFile:fromFunction:fromLineNumber:", v14, v17, v18, 5790);

      PLLogCommon();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v32 = v14;
        _os_log_debug_impl(&dword_1CAF47000, v19, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  -[PLOperator workQueue](self, "workQueue");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v28[5] = v4;
  v28[6] = 3221225472;
  v28[7] = __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2834;
  v28[8] = &unk_1E857AAF8;
  v28[9] = self;
  v21 = IOPMCopyBatteryHeatMap();

  if ((_DWORD)v21 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v28[0] = v4;
    v28[1] = 3221225472;
    v28[2] = __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2_2837;
    v28[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v28[4] = objc_opt_class();
    if (qword_1ED887730 != -1)
      dispatch_once(&qword_1ED887730, v28);
    if (byte_1ED887589)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Discharging Heat Map Error: %x"), v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "lastPathComponent");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventBackwardHeatMap]");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "logMessage:fromFile:fromFunction:fromLineNumber:", v22, v25, v26, 5796);

      PLLogCommon();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v32 = v22;
        _os_log_debug_impl(&dword_1CAF47000, v27, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
}

void __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke(uint64_t a1, void *a2)
{
  objc_msgSend(*(id *)(a1 + 32), "logEventBackwardHeatMapCallback:andHeatMapType:", a2, 0);

}

uint64_t __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887587 = result;
  return result;
}

void __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2828(uint64_t a1, void *a2)
{
  objc_msgSend(*(id *)(a1 + 32), "logEventBackwardHeatMapCallback:andHeatMapType:", a2, 1);

}

uint64_t __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2_2831(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887588 = result;
  return result;
}

void __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2834(uint64_t a1, void *a2)
{
  objc_msgSend(*(id *)(a1 + 32), "logEventBackwardHeatMapCallback:andHeatMapType:", a2, 2);

}

uint64_t __41__PLBatteryAgent_logEventBackwardHeatMap__block_invoke_2_2837(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887589 = result;
  return result;
}

- (void)logEventBackwardHeatMapCallback:(id)a3 andHeatMapType:(int64_t)a4
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  const __CFString *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t i;
  void *v23;
  uint64_t v24;
  __CFString *v25;
  int v26;
  int v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  NSObject *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __CFString *v44;
  uint64_t v45;
  void *v47;
  __CFString *v48;
  void *v49;
  const __CFString *v50;
  __CFString *v51;
  _QWORD block[4];
  const __CFString *v53;
  char v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint8_t buf[4];
  const __CFString *v60;
  __int16 v61;
  __CFString *v62;
  _BYTE v63[128];
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("batteryHeatMapData"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("HeatMapType"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("HeatMapType"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (int)objc_msgSend(v8, "intValue");

    }
    else
    {
      v9 = 0;
    }

    v10 = &unk_1E8651350;
    if (v9 == 1)
      v10 = &unk_1E8651338;
    v49 = v10;
    if (v9 == 1)
      v11 = CFSTR("SoC");
    else
      v11 = CFSTR("voltage");
    if (v9 == 1)
      v12 = CFSTR("com.apple.power.battery.heatmap.soc");
    else
      v12 = CFSTR("com.apple.power.battery.heatmap.voltage");
    v50 = v12;
    v51 = (__CFString *)v11;
    objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = v9;
    if ((unint64_t)a4 > 2)
    {
      v48 = 0;
      v44 = 0;
    }
    else
    {
      v48 = off_1E857F910[a4];
      v44 = off_1E857F928[a4];
    }
    v57 = 0u;
    v58 = 0u;
    v56 = 0u;
    v55 = 0u;
    v13 = v6;
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v55, v63, 16);
    if (v14)
    {
      v15 = v14;
      v16 = MEMORY[0x1E0C809B0];
      v41 = *(_QWORD *)v56;
      v43 = *MEMORY[0x1E0D80370];
      v39 = v13;
      do
      {
        v17 = 0;
        v40 = v15;
        do
        {
          if (*(_QWORD *)v56 != v41)
            objc_enumerationMutation(v13);
          v42 = v17;
          v18 = *(_QWORD *)(*((_QWORD *)&v55 + 1) + 8 * v17);
          v19 = objc_msgSend(&unk_1E8651308, "indexOfObject:", v18);
          if (v19 != 0x7FFFFFFFFFFFFFFFLL)
          {
            v20 = v19;
            objc_msgSend(v13, "objectForKey:", v18);
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            for (i = 0; i != 25; ++i)
            {
              objc_msgSend(v21, "objectAtIndex:", i);
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              v24 = objc_msgSend(v23, "intValue");

              if ((_DWORD)v24)
              {
                block[0] = v16;
                block[1] = 3221225472;
                block[2] = __65__PLBatteryAgent_logEventBackwardHeatMapCallback_andHeatMapType___block_invoke;
                block[3] = &unk_1E8579C80;
                v53 = CFSTR("forceLogBatteryHeatmap");
                v54 = 0;
                if (qword_1ED887738 == -1)
                {
                  v25 = CFSTR("forceLogBatteryHeatmap");
                }
                else
                {
                  dispatch_once(&qword_1ED887738, block);
                  v25 = (__CFString *)v53;
                }
                v26 = byte_1ED88758A;

                v27 = objc_msgSend(MEMORY[0x1E0D7FFA0], "taskMode");
                if (v26 || v27)
                {
                  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", v43, v44);
                  v28 = (void *)objc_claimAutoreleasedReturnValue();
                  v29 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v28);
                  objc_msgSend(v29, "setEntryDate:", v47);
                  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v20);
                  v30 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v29, "setObject:forKeyedSubscript:", v30, CFSTR("Temperature"));

                  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", i);
                  v31 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v29, "setObject:forKeyedSubscript:", v31, CFSTR("Bin"));

                  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v45);
                  v32 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v29, "setObject:forKeyedSubscript:", v32, CFSTR("HeatMapType"));

                  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v24);
                  v33 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v29, "setObject:forKeyedSubscript:", v33, CFSTR("TimeInMinutes"));

                  -[PLOperator logEntry:](self, "logEntry:", v29);
                }
                PLLogCommon();
                v34 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
                {
                  *(_DWORD *)buf = 138412546;
                  v60 = v50;
                  v61 = 2112;
                  v62 = v51;
                  _os_log_debug_impl(&dword_1CAF47000, v34, OS_LOG_TYPE_DEBUG, "Sending CA event %@ with field %@", buf, 0x16u);
                }

                AnalyticsSendEventLazy();
                v35 = (void *)MEMORY[0x1E0CB3940];
                objc_msgSend(&unk_1E8651320, "objectAtIndexedSubscript:", v20);
                v36 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v49, "objectAtIndexedSubscript:", i);
                v37 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v35, "stringWithFormat:", CFSTR("%@.%@.%@"), v48, v36, v37);
                v38 = (void *)objc_claimAutoreleasedReturnValue();

                ADClientSetValueForScalarKey();
              }
            }

            v13 = v39;
            v15 = v40;
          }
          v17 = v42 + 1;
        }
        while (v42 + 1 != v15);
        v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v55, v63, 16);
      }
      while (v15);
    }

  }
}

uint64_t __65__PLBatteryAgent_logEventBackwardHeatMapCallback_andHeatMapType___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:ifNotSet:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  byte_1ED88758A = result;
  return result;
}

id __65__PLBatteryAgent_logEventBackwardHeatMapCallback_andHeatMapType___block_invoke_3006(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("action"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, CFSTR("temperature"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", *(unsigned int *)(a1 + 64));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, *(_QWORD *)(a1 + 32));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", *(unsigned int *)(a1 + 68));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v6, CFSTR("timeSpent"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", *(_QWORD *)(a1 + 56));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v7, CFSTR("version"));

  return v2;
}

- (void)logEventBackwardKioskMode
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _QWORD block[10];
  uint8_t buf[4];
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  -[PLOperator workQueue](self, "workQueue");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = MEMORY[0x1E0C809B0];
  block[5] = MEMORY[0x1E0C809B0];
  block[6] = 3221225472;
  block[7] = __43__PLBatteryAgent_logEventBackwardKioskMode__block_invoke;
  block[8] = &unk_1E857AAF8;
  block[9] = self;
  v5 = IOPMCopyKioskModeData();

  if ((_DWORD)v5 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    block[0] = v4;
    block[1] = 3221225472;
    block[2] = __43__PLBatteryAgent_logEventBackwardKioskMode__block_invoke_2;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = objc_opt_class();
    if (qword_1ED887740 != -1)
      dispatch_once(&qword_1ED887740, block);
    if (byte_1ED88758B)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Kiosk Mode Lifetime Data Error: %x"), v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "lastPathComponent");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventBackwardKioskMode]");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 5916);

      PLLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v6;
        _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
}

void __43__PLBatteryAgent_logEventBackwardKioskMode__block_invoke(uint64_t a1, void *a2)
{
  objc_msgSend(*(id *)(a1 + 32), "logEventBackwardKioskModeCallback:", a2);

}

uint64_t __43__PLBatteryAgent_logEventBackwardKioskMode__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88758B = result;
  return result;
}

- (void)logEventBackwardKioskModeCallback:(id)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  uint64_t block;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if (a3)
  {
    objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("batteryKioskModeData"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v5 = objc_opt_class();
      block = MEMORY[0x1E0C809B0];
      v15 = 3221225472;
      v16 = __52__PLBatteryAgent_logEventBackwardKioskModeCallback___block_invoke;
      v17 = &__block_descriptor_40_e5_v8__0lu32l8;
      v18 = v5;
      if (qword_1ED887748 != -1)
        dispatch_once(&qword_1ED887748, &block);
      if (byte_1ED88758C)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Kiosk Mode callback: %@"), v4, block, v15, v16, v17, v18);
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "lastPathComponent");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventBackwardKioskModeCallback:]");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 5925);

        PLLogCommon();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v20 = v6;
          _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    if (v4)
    {
      +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("KioskMode"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v12, v4);
      -[PLOperator logEntry:](self, "logEntry:", v13);
      -[PLBatteryAgent logKioskModeEntryToCA:](self, "logKioskModeEntryToCA:", v13);
      -[PLBatteryAgent logKioskModeEntryToAggd:](self, "logKioskModeEntryToAggd:", v13);

    }
  }
}

uint64_t __52__PLBatteryAgent_logEventBackwardKioskModeCallback___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88758C = result;
  return result;
}

- (void)logEventBackwardBattery
{
  void *v3;
  id v4;
  id v5;

  -[PLBatteryAgent iokitPowerSource](self, "iokitPowerSource");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "properties");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[PLBatteryAgent logEventBackwardBatteryWithRawData:](self, "logEventBackwardBatteryWithRawData:", v3);

}

id __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_2(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_3(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)objc_opt_new();
  v3 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("BatteryCellDisconnectCount"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "numberWithInt:", objc_msgSend(v4, "intValue"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("value"));

  return v2;
}

id __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_4(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", *(unsigned int *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("value"));

  return v2;
}

id __53__PLBatteryAgent_logEventBackwardBatteryWithRawData___block_invoke_5()
{
  void *v0;

  v0 = (void *)objc_opt_new();
  objc_msgSend(v0, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("DOD0Count"));
  return v0;
}

- (id)getGaugingMitigationDict
{
  int State;
  int v3;
  NSObject *v4;
  id v5;
  uint8_t buf[4];
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  State = IOPSGaugingMitigationGetState();
  if (State)
  {
    v3 = State;
    PLLogCommon();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      LODWORD(v8) = v3;
      _os_log_error_impl(&dword_1CAF47000, v4, OS_LOG_TYPE_ERROR, "Failed to get gauging mitigation state dictionary, ret = %x", buf, 8u);
    }
    v5 = 0;
  }
  else
  {
    v5 = 0;
    CFRelease(v5);
    PLLogCommon();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v8 = v5;
      _os_log_debug_impl(&dword_1CAF47000, v4, OS_LOG_TYPE_DEBUG, "Gauging mitigation state dictionary: %@", buf, 0xCu);
    }
  }

  return v5;
}

- (void)logEventBackwardChargingLimit
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  unint64_t v8;
  void *v9;
  double v10;
  unint64_t v11;
  void *v12;
  double v13;
  unint64_t v14;
  void *v15;
  double v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  void *v26;
  PLBatteryAgent *v27;
  uint8_t buf[4];
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent getGaugingMitigationDict](self, "getGaugingMitigationDict");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v27 = self;
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("ChargingLimit"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v26);
    objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("lastDOD0Update"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "timeIntervalSinceDate:", v6);
    v8 = (unint64_t)(v7 / 86400.0);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("lastFullChargeDate"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "timeIntervalSinceDate:", v9);
    v11 = (unint64_t)(v10 / 86400.0);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("lastQMaxUpdate"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "timeIntervalSinceDate:", v12);
    v14 = (unint64_t)(v13 / 86400.0);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("lastQualQMaxDate"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "timeIntervalSinceDate:", v15);
    v17 = (unint64_t)(v16 / 86400.0);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v8);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v18, CFSTR("lastDOD0Update"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v11);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v19, CFSTR("lastFullChargeDate"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v14);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v20, CFSTR("lastQMaxUpdate"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v17);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v21, CFSTR("lastQualQMaxDate"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("lastFullChargeReq"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v22, CFSTR("lastFullChargeReq"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("lastQualQmaxDODValue"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v23, CFSTR("lastQualQmaxDODValue"));

    PLLogCommon();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v4, "dictionary");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v29 = v25;
      _os_log_debug_impl(&dword_1CAF47000, v24, OS_LOG_TYPE_DEBUG, "Logging current mitigation state: %@", buf, 0xCu);

    }
    -[PLOperator logEntry:](v27, "logEntry:", v4);

  }
}

- (void)logEventNoneUserType
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  if ((objc_msgSend(MEMORY[0x1E0D7FFA0], "liteMode") & 1) == 0)
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80388], CFSTR("UserType"));
    v7 = (id)objc_claimAutoreleasedReturnValue();
    v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v7);
    v4 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(MEMORY[0x1E0D65028], "predictor");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "numberWithInteger:", objc_msgSend(v5, "historicalClassification"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKeyedSubscript:", v6, CFSTR("UserType"));

    -[PLOperator logEntry:](self, "logEntry:", v3);
  }
}

- (int)batteryLifetimeUPOCount
{
  CFMutableDictionaryRef v2;
  CFMutableDictionaryRef v3;
  const __CFAllocator *v4;
  CFDictionaryRef v5;
  CFDictionaryRef v6;
  uint64_t MatchingService;
  io_object_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  CFNumberRef v15;
  int valuePtr;

  v2 = IOServiceMatching("IOService");
  if (!v2)
    return -1;
  v3 = v2;
  valuePtr = 0;
  v4 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v15 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], kCFNumberSInt32Type, &valuePtr);
  v5 = CFDictionaryCreate(v4, (const void **)&batteryLifetimeUPOCount_tmp, (const void **)&v15, 1, MEMORY[0x1E0C9B390], MEMORY[0x1E0C9B3A0]);
  if (!v5)
  {
    CFRelease(v3);
    return -1;
  }
  v6 = v5;
  CFDictionarySetValue(v3, CFSTR("IOPropertyMatch"), v5);
  CFRelease(v6);
  MatchingService = IOServiceGetMatchingService(*MEMORY[0x1E0CBBAB8], v3);
  if (!(_DWORD)MatchingService)
    return -1;
  v8 = MatchingService;
  objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", MatchingService);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v9
    && (objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("IOPMUBootUPOCounter")),
        v11 = (void *)objc_claimAutoreleasedReturnValue(),
        v11,
        v11))
  {
    objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("IOPMUBootUPOCounter"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "intValue");

  }
  else
  {
    v13 = -1;
  }
  IOObjectRelease(v8);

  return v13;
}

- (id)lowBatteryLogPath
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD v16[4];
  id v17;
  __CFString *v18;
  __CFString *v19;
  _QWORD *v20;
  uint64_t *v21;
  _QWORD v22[5];
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;

  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__11;
  v28 = __Block_byref_object_dispose__11;
  v29 = 0;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contentsOfDirectoryAtPath:error:", CFSTR("/var/mobile/Library/Logs/CrashReporter/"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = (void *)MEMORY[0x1E0CB3880];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.*%@%@"), CFSTR("LowBatteryLog-"), CFSTR(".ips"), CFSTR("(\\.synced)?"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "predicateWithFormat:", CFSTR("SELF MATCHES[c] %@"), v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v3, "filteredArrayUsingPredicate:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v7 && objc_msgSend(v7, "count"))
    {
      v22[0] = 0;
      v22[1] = v22;
      v22[2] = 0x3032000000;
      v22[3] = __Block_byref_object_copy__11;
      v22[4] = __Block_byref_object_dispose__11;
      v23 = 0;
      v16[0] = MEMORY[0x1E0C809B0];
      v16[1] = 3221225472;
      v16[2] = __35__PLBatteryAgent_lowBatteryLogPath__block_invoke;
      v16[3] = &unk_1E857F640;
      v9 = v8;
      v17 = v9;
      v18 = CFSTR("LowBatteryLog-");
      v19 = CFSTR("yyyy-MM-dd-HHmmss");
      v20 = v22;
      v21 = &v24;
      objc_msgSend(v9, "enumerateObjectsUsingBlock:", v16);
      if (!v25[5])
      {
        objc_msgSend(v9, "objectAtIndexedSubscript:", objc_msgSend(v9, "count") - 1);
        v10 = objc_claimAutoreleasedReturnValue();
        v11 = (void *)v25[5];
        v25[5] = v10;

      }
      _Block_object_dispose(v22, 8);

    }
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@%@"), CFSTR("/var/mobile/Library/Logs/CrashReporter/"), v25[5]);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)v25[5];
    v25[5] = v12;

  }
  v14 = (id)v25[5];

  _Block_object_dispose(&v24, 8);
  return v14;
}

void __35__PLBatteryAgent_lowBatteryLogPath__block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id obj;

  objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(obj, "length");
  if (v2 == 42 || v2 == 35)
  {
    objc_msgSend(obj, "substringWithRange:", objc_msgSend(*(id *)(a1 + 40), "length"), objc_msgSend(*(id *)(a1 + 48), "length"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_alloc_init(MEMORY[0x1E0CB3578]);
    objc_msgSend(v4, "setDateFormat:", *(_QWORD *)(a1 + 48));
    objc_msgSend(v4, "dateFromString:", v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "dateByAddingTimeInterval:", -86400.0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v5, "compare:", v7);

      if (v8 == 1)
      {
        v9 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        if (!v9 || objc_msgSend(v9, "compare:", v5) == -1)
        {
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), obj);
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v5);
        }
      }
    }

  }
}

- (id)lowBatteryLogString
{
  void *v2;
  void *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char v8;
  void *v9;

  -[PLBatteryAgent lowBatteryLogPath](self, "lowBatteryLogPath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithContentsOfFile:encoding:error:", v2, 4, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "componentsSeparatedByString:", CFSTR("\n"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (char *)objc_msgSend(v4, "count");
    if (v5)
    {
      v6 = 0;
      while (1)
      {
        objc_msgSend(v4, "objectAtIndexedSubscript:", v6);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v7, "hasPrefix:", CFSTR("Date:"));

        if ((v8 & 1) != 0)
          break;
        if (v5 == (char *)++v6)
        {
          v5 = 0;
          goto LABEL_9;
        }
      }
      objc_msgSend(v4, "subarrayWithRange:", v6, &v5[-v6]);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "componentsJoinedByString:", CFSTR("\n"));
      v5 = (char *)objc_claimAutoreleasedReturnValue();

    }
LABEL_9:

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

- (id)isOriginalBattery
{
  _BOOL4 v2;
  int v3;
  void *v4;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _QWORD block[5];
  uint8_t buf[4];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v2 = +[PLBatteryAgent supportsxFlags](PLBatteryAgent, "supportsxFlags");
  v3 = objc_msgSend(MEMORY[0x1E0D80020], "kPLDeviceClassIsOneOf:", 102027, 102028, 102029, 0);
  v4 = 0;
  if (!v2 || v3 != 0)
  {
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFF0]), "initWithGroup:andSubGroup:withChannelIDs:", CFSTR("Battery"), 0, &unk_1E8651368);
    objc_msgSend(v6, "currentValueForSimpleChannel:", CFSTR("BatteryIDChanged"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if (v7)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(v7, "BOOLValue") ^ 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
      {
        v9 = objc_opt_class();
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = __35__PLBatteryAgent_isOriginalBattery__block_invoke;
        block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
        block[4] = v9;
        if (qword_1ED887750 != -1)
          dispatch_once(&qword_1ED887750, block);
        if (byte_1ED88758D)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Could not determine original battery"));
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = (void *)MEMORY[0x1E0D7FF98];
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "lastPathComponent");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent isOriginalBattery]");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "logMessage:fromFile:fromFunction:fromLineNumber:", v10, v13, v14, 6368);

          PLLogCommon();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 138412290;
            v19 = v10;
            _os_log_debug_impl(&dword_1CAF47000, v15, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
          }

        }
      }
      v4 = 0;
    }

  }
  return v4;
}

uint64_t __35__PLBatteryAgent_isOriginalBattery__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88758D = result;
  return result;
}

- (unint64_t)customConvertBase34ToBase10:(id)a3
{
  id v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  void *v9;
  void *v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  NSObject *v15;
  _DWORD v17[4];
  _QWORD v18[24];
  _QWORD v19[26];

  v19[24] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v18[0] = &unk_1E8633CC0;
  v18[1] = &unk_1E8633CF0;
  v19[0] = &unk_1E8633CD8;
  v19[1] = &unk_1E8633D08;
  v18[2] = &unk_1E8633D20;
  v18[3] = &unk_1E8633D50;
  v19[2] = &unk_1E8633D38;
  v19[3] = &unk_1E8633D68;
  v18[4] = &unk_1E8633D80;
  v18[5] = &unk_1E8633DB0;
  v19[4] = &unk_1E8633D98;
  v19[5] = &unk_1E8633DC8;
  v18[6] = &unk_1E8633DE0;
  v18[7] = &unk_1E8633E10;
  v19[6] = &unk_1E8633DF8;
  v19[7] = &unk_1E8633E28;
  v18[8] = &unk_1E8633E40;
  v18[9] = &unk_1E8633E70;
  v19[8] = &unk_1E8633E58;
  v19[9] = &unk_1E8633E88;
  v18[10] = &unk_1E8633EA0;
  v18[11] = &unk_1E8633ED0;
  v19[10] = &unk_1E8633EB8;
  v19[11] = &unk_1E8633EE8;
  v18[12] = &unk_1E8633F00;
  v18[13] = &unk_1E8633F30;
  v19[12] = &unk_1E8633F18;
  v19[13] = &unk_1E8633F48;
  v18[14] = &unk_1E8633F60;
  v18[15] = &unk_1E8633F90;
  v19[14] = &unk_1E8633F78;
  v19[15] = &unk_1E8633FA8;
  v18[16] = &unk_1E8633FC0;
  v18[17] = &unk_1E8633FF0;
  v19[16] = &unk_1E8633FD8;
  v19[17] = &unk_1E8634008;
  v18[18] = &unk_1E8634020;
  v18[19] = &unk_1E8634050;
  v19[18] = &unk_1E8634038;
  v19[19] = &unk_1E8634068;
  v18[20] = &unk_1E8634080;
  v18[21] = &unk_1E86340B0;
  v19[20] = &unk_1E8634098;
  v19[21] = &unk_1E86340C8;
  v18[22] = &unk_1E86340E0;
  v18[23] = &unk_1E8634110;
  v19[22] = &unk_1E86340F8;
  v19[23] = &unk_1E8634128;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, v18, 24);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "isEqualToString:", CFSTR("000")) & 1) != 0)
  {
    v5 = 39304;
    goto LABEL_15;
  }
  if (!objc_msgSend(v3, "length"))
    goto LABEL_14;
  v6 = 0;
  v5 = 0;
  v7 = 2;
  while (1)
  {
    v8 = objc_msgSend(v3, "characterAtIndex:", v6);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedShort:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "objectForKey:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v10)
      break;
    v11 = pow(34.0, (double)v7);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedShort:", v8);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "objectForKeyedSubscript:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (double)v5 + v11 * (double)(int)objc_msgSend(v13, "intValue");

LABEL_9:
    v5 = (unint64_t)v14;
    ++v6;
    --v7;
    if (objc_msgSend(v3, "length") <= v6)
      goto LABEL_15;
  }
  if ((v8 - 48) <= 9)
  {
    v14 = (double)v5 + pow(34.0, (double)v7) * (double)((int)v8 - 48);
    goto LABEL_9;
  }
  PLLogCommon();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    v17[0] = 67109120;
    v17[1] = v8;
    _os_log_error_impl(&dword_1CAF47000, v15, OS_LOG_TYPE_ERROR, "SN parsed a digit %hu", (uint8_t *)v17, 8u);
  }

LABEL_14:
  v5 = 0;
LABEL_15:

  return v5;
}

- (id)weekOfManufacture:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;

  v4 = a3;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Serial"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5)
    goto LABEL_8;
  -[PLBatteryAgent parseBatterySerialNumber:](self, "parseBatterySerialNumber:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("year"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("week"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (!v7 || !v8)
  {

LABEL_8:
    v13 = &unk_1E8633B70;
    goto LABEL_9;
  }
  if (objc_msgSend(v8, "length") == 1)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("0%@"), v9);
    v10 = objc_claimAutoreleasedReturnValue();

    v9 = (void *)v10;
  }
  v11 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(v7, "stringByAppendingString:", v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "numberWithInteger:", objc_msgSend(v12, "integerValue"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_9:
  return v13;
}

- (id)batteryEEEECode:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  __CFString *v7;

  v4 = a3;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Serial"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[PLBatteryAgent parseBatterySerialNumber:](self, "parseBatterySerialNumber:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("eeee_code"));
    v7 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = &stru_1E8587D00;
  }

  return v7;
}

- (id)parseRawSafetyFaultCounter:(id)a3
{
  id v3;
  void *v4;
  id v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;

  v3 = a3;
  v4 = (void *)objc_opt_new();
  if (v3)
  {
    v5 = objc_retainAutorelease(v3);
    v6 = (unsigned __int8 *)objc_msgSend(v5, "bytes");
    v7 = objc_msgSend(v5, "length");
    v8 = (unint64_t)(2 * v7) >= 0x13 ? 19 : 2 * v7;
    if (v8)
    {
      v9 = 0;
      do
      {
        v11 = *v6++;
        v10 = v11;
        v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37E8]), "initWithUnsignedShort:", v11 & 0xF);
        objc_msgSend(v4, "addObject:", v12);
        v13 = v9 + 1;
        if (v9 + 1 < v8)
        {
          v14 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB37E8]), "initWithUnsignedShort:", v10 >> 4);

          objc_msgSend(v4, "addObject:", v14);
          v13 = v9 + 2;
          v12 = (void *)v14;
        }

        v9 = v13;
      }
      while (v13 < v8);
    }
  }

  return v4;
}

- (id)parseTimeAtHighSoc:(id)a3
{
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v5 = objc_msgSend(v3, "length");
    v6 = objc_msgSend(objc_retainAutorelease(v3), "bytes");
    if (v5 >= 4)
    {
      v7 = v6;
      v8 = 0;
      do
      {
        NSLog(CFSTR("bin %d: %u"), v8, *(unsigned int *)(v7 + 4 * v8));
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("bin%d"), v8);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *(unsigned int *)(v7 + 4 * v8));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setObject:forKeyedSubscript:", v10, v9);

        ++v8;
      }
      while (v5 >> 2 != v8);
    }
  }
  if (objc_msgSend(v4, "count"))
    v11 = v4;
  else
    v11 = 0;

  return v11;
}

- (id)parseLowVoltageResidencyCounters:(id)a3
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v12;

  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = objc_msgSend(v3, "length");
    v5 = objc_msgSend(objc_retainAutorelease(v3), "bytes");
    if (v4 >= 4)
    {
      v6 = v5;
      v7 = 0;
      do
      {
        NSLog(CFSTR("lowVoltageResidencyCounters bin %d: %u"), v7, *(unsigned int *)(v6 + 4 * v7));
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("bin%d"), v7);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", objc_msgSend(MEMORY[0x1E0D80078], "roundToSigFig:withSigFig:", *(unsigned int *)(v6 + 4 * v7), 2));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "setObject:forKeyedSubscript:", v9, v8);

        ++v7;
      }
      while (v4 >> 2 != v7);
    }
  }
  if (objc_msgSend(v12, "count"))
    v10 = v12;
  else
    v10 = 0;

  return v10;
}

- (id)parseFlashWearLevelData:(id)a3
{
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t i;
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  id v14;
  uint8_t buf[4];
  _DWORD v17[5];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v5 = objc_msgSend(v3, "length");
    v6 = objc_msgSend(objc_retainAutorelease(v3), "bytes");
    v7 = objc_msgSend(&unk_1E8651380, "count");
    v8 = v5 >> 2 >= v7 ? v7 : v5 >> 2;
    if (v8)
    {
      for (i = 0; i != v8; ++i)
      {
        PLLogCommon();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
        {
          v13 = *(_DWORD *)(v6 + 4 * i);
          *(_DWORD *)buf = 67109376;
          v17[0] = i;
          LOWORD(v17[1]) = 1024;
          *(_DWORD *)((char *)&v17[1] + 2) = v13;
          _os_log_debug_impl(&dword_1CAF47000, v10, OS_LOG_TYPE_DEBUG, "flashWearLevelData %d: %u", buf, 0xEu);
        }

        objc_msgSend(&unk_1E8651380, "objectAtIndexedSubscript:", i);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *(unsigned int *)(v6 + 4 * i));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setObject:forKeyedSubscript:", v12, v11);

      }
    }
  }
  if (objc_msgSend(v4, "count"))
    v14 = v4;
  else
    v14 = 0;

  return v14;
}

- (void)pushLowVoltageResidencyCountersToCA:(id)a3
{
  objc_msgSend(a3, "enumerateKeysAndObjectsUsingBlock:", &__block_literal_global_3188);
}

void __54__PLBatteryAgent_pushLowVoltageResidencyCountersToCA___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;

  v6 = a2;
  v7 = a3;
  v4 = v7;
  v5 = v6;
  AnalyticsSendEventLazy();

}

id __54__PLBatteryAgent_pushLowVoltageResidencyCountersToCA___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(*(id *)(a1 + 32), "substringFromIndex:", objc_msgSend(CFSTR("bin"), "length"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("bin"));

  objc_msgSend(v2, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 40), CFSTR("value"));
  return v2;
}

- (id)parseTimeAtHighSocHex:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  if (v4)
  {
    -[PLBatteryAgent dataFromHexString:](self, "dataFromHexString:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent parseTimeAtHighSoc:](self, "parseTimeAtHighSoc:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = 0;
  }
  if (objc_msgSend(v6, "count"))
    v7 = v6;
  else
    v7 = 0;

  return v7;
}

- (id)dataFromHexString:(id)a3
{
  id v3;
  void *v4;
  int v5;
  uint64_t v6;
  char __str[2];
  __int16 v9;

  v3 = a3;
  objc_msgSend(MEMORY[0x1E0C99DF0], "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 0;
  v5 = objc_msgSend(v3, "length");
  if (v5 >= 1)
  {
    v6 = 0;
    do
    {
      __str[0] = objc_msgSend(v3, "characterAtIndex:", v6);
      __str[1] = objc_msgSend(v3, "characterAtIndex:", v6 + 1);
      HIBYTE(v9) = strtol(__str, 0, 16);
      objc_msgSend(v4, "appendBytes:length:", (char *)&v9 + 1, 1);
      v6 += 2;
    }
    while ((int)v6 < v5);
  }

  return v4;
}

- (void)pushTimeAtHighSocToAggD:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v3 = (void *)MEMORY[0x1E0C99E08];
  v4 = a3;
  objc_msgSend(v3, "dictionary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __42__PLBatteryAgent_pushTimeAtHighSocToAggD___block_invoke;
  v7[3] = &unk_1E857B198;
  v6 = v5;
  v8 = v6;
  objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", v7);

  if (objc_msgSend(v6, "count"))
    MEMORY[0x1D179B7E8](0, v6);

}

void __42__PLBatteryAgent_pushTimeAtHighSocToAggD___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  objc_msgSend(CFSTR("com.apple.power.battery.TimeAtHighSoc."), "stringByAppendingString:", a2);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v5, v6);

}

- (void)pushTimeAtHighSocToCA:(id)a3
{
  objc_msgSend(a3, "enumerateKeysAndObjectsUsingBlock:", &__block_literal_global_3196);
}

void __40__PLBatteryAgent_pushTimeAtHighSocToCA___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;

  v6 = a2;
  v7 = a3;
  v4 = v7;
  v5 = v6;
  AnalyticsSendEventLazy();

}

id __40__PLBatteryAgent_pushTimeAtHighSocToCA___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(*(id *)(a1 + 32), "substringFromIndex:", objc_msgSend(CFSTR("bin"), "length"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("bin"));

  objc_msgSend(v2, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 40), CFSTR("value"));
  return v2;
}

- (void)pushFlashWearLevelDataToCA:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("factory"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("usr"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("log"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("bdc"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4 && v5 && v6 && v7)
  {
    PLLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      v14 = v4;
      v15 = 2112;
      v16 = v5;
      v17 = 2112;
      v18 = v6;
      v19 = 2112;
      v20 = v7;
      _os_log_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_INFO, "Pushing FlashWearLevelData to CA - factory:%@ usr:%@ log:%@ bdc:%@", buf, 0x2Au);
    }

    v9 = v4;
    v10 = v5;
    v11 = v6;
    v12 = v7;
    AnalyticsSendEventLazy();

  }
}

id __45__PLBatteryAgent_pushFlashWearLevelDataToCA___block_invoke(_QWORD *a1)
{
  void *v2;

  v2 = (void *)objc_opt_new();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", a1[4], CFSTR("factory"));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", a1[5], CFSTR("usr"));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", a1[6], CFSTR("log"));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", a1[7], CFSTR("bdc"));
  return v2;
}

- (id)getUPOStepperData
{
  void *v3;
  const __CFString *v4;
  const __CFString *v5;
  void *v6;
  CFPropertyListRef v7;
  void *v8;
  BOOL v9;
  void *v10;
  id v11;

  v3 = (void *)objc_opt_new();
  v4 = (const __CFString *)*MEMORY[0x1E0C9B240];
  v5 = (const __CFString *)*MEMORY[0x1E0C9B250];
  v6 = (void *)CFPreferencesCopyValue(CFSTR("mitigatedUPOCount"), CFSTR("com.apple.thermalmonitor.upostepper.metrics"), (CFStringRef)*MEMORY[0x1E0C9B240], (CFStringRef)*MEMORY[0x1E0C9B250]);
  v7 = CFPreferencesCopyValue(CFSTR("upoMetrics"), CFSTR("com.apple.thermalmonitor.upostepper.metrics"), v4, v5);
  v8 = (void *)v7;
  if (v6)
    v9 = v7 == 0;
  else
    v9 = 1;
  if (v9)
  {
    v11 = 0;
  }
  else
  {
    objc_msgSend(v3, "setObject:forKeyedSubscript:", v6, CFSTR("mitigatedUPOCount"));
    objc_msgSend(v8, "lastObject");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKeyedSubscript:", v10, CFSTR("upoMetrics"));

    -[PLBatteryAgent setMitigatedUPOCountDefault:](self, "setMitigatedUPOCountDefault:", v6);
    v11 = v3;
  }

  return v11;
}

- (void)setMitigatedUPOCountDefault:(id)a3
{
  id v4;

  objc_storeStrong((id *)&self->_mitigatedUPOCount, a3);
  v4 = a3;
  objc_msgSend(MEMORY[0x1E0D80078], "containerPath");
  _CFPreferencesSetValueWithContainer();
  objc_msgSend(MEMORY[0x1E0D80078], "containerPath");

  _CFPreferencesAppSynchronizeWithContainer();
}

- (id)getMitigatedUPOCountDefault
{
  objc_msgSend(MEMORY[0x1E0D80078], "containerPath");
  return (id)_CFPreferencesCopyValueWithContainer();
}

- (id)getBatteryShutdownData
{
  mach_port_t v2;
  const __CFDictionary *v3;

  v2 = *MEMORY[0x1E0CBBAB8];
  v3 = IOServiceMatching("IOPMPowerSource");
  return (id)objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", IOServiceGetMatchingService(v2, v3));
}

- (void)setAggdIntegerValueFromEntry:(id)a3 forKey:(id)a4 withPrefix:(id)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *v11;
  int v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v7 = a4;
  v8 = a5;
  objc_msgSend(a3, "objectForKeyedSubscript:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v8, "stringByAppendingString:", v7);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      PLLogBH();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        v12 = 138412546;
        v13 = v10;
        v14 = 2112;
        v15 = v9;
        _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "Logging battery data to aggd - key:\"%@\", value:%@", (uint8_t *)&v12, 0x16u);
      }

      objc_msgSend(v9, "integerValue");
      ADClientSetValueForScalarKey();

    }
  }

}

- (void)logBatteryShutdownToCA:(id)a3
{
  id v4;
  void *v5;
  int v6;
  void *v7;
  int v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const __CFString *v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  const __CFString *v18;
  id v19;
  PLBatteryAgent *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v24 = (void *)objc_opt_new();
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("DataError"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = v5;
  if (v5)
  {
    v6 = objc_msgSend(v5, "intValue");
    MEMORY[0x1D179B7DC](CFSTR("com.apple.power.batteryshutdown.Count"), 1);
    if (v6)
      goto LABEL_7;
  }
  else
  {
    MEMORY[0x1D179B7DC](CFSTR("com.apple.power.batteryshutdown.Count"), 1);
  }
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("UISOC"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "intValue");

  if (v8 >= 11)
  {
    MEMORY[0x1D179B7DC](CFSTR("com.apple.power.batteryshutdown.UPOCount"), 1);
    objc_msgSend(v24, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("UPOCount"));
  }
LABEL_7:
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  objc_msgSend(v4, "definedKeys");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v26;
    v13 = CFSTR("LowBatteryLog");
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v26 != v12)
          objc_enumerationMutation(v9);
        v15 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        if ((objc_msgSend(v15, "isEqualToString:", CFSTR("BatteryShutdownTimestamp")) & 1) == 0
          && (objc_msgSend(v15, "isEqualToString:", v13) & 1) == 0)
        {
          objc_msgSend(v4, "objectForKeyedSubscript:", v15);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          if (v16)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v17 = v9;
              v18 = v13;
              v19 = v4;
              v20 = self;
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v16, "integerValue"));
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v24, "setValue:forKey:", v21, v15);

              self = v20;
              v4 = v19;
              v13 = v18;
              v9 = v17;
            }
          }
          -[PLBatteryAgent setAggdIntegerValueFromEntry:forKey:withPrefix:](self, "setAggdIntegerValueFromEntry:forKey:withPrefix:", v4, v15, CFSTR("com.apple.power.batteryshutdown."));

        }
      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v11);
  }

  v22 = v24;
  AnalyticsSendEventLazy();

}

id __41__PLBatteryAgent_logBatteryShutdownToCA___block_invoke(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

- (void)aggdTimerFired
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD block[5];
  uint8_t buf[4];
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v3 = objc_opt_class();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __32__PLBatteryAgent_aggdTimerFired__block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = v3;
    if (qword_1ED887758 != -1)
      dispatch_once(&qword_1ED887758, block);
    if (byte_1ED88758E)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Aggd Timer Fired"));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "lastPathComponent");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent aggdTimerFired]");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "logMessage:fromFile:fromFunction:fromLineNumber:", v4, v7, v8, 6901);

      PLLogCommon();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v18 = v4;
        _os_log_debug_impl(&dword_1CAF47000, v9, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  -[PLBatteryAgent lastBatteryConfigEntry](self, "lastBatteryConfigEntry");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    -[PLBatteryAgent lastBatteryConfigEntry](self, "lastBatteryConfigEntry");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent logBatteryConfigToAggd:](self, "logBatteryConfigToAggd:", v11);

    -[PLBatteryAgent lastBatteryConfigEntry](self, "lastBatteryConfigEntry");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent logBatteryConfigToCA:](self, "logBatteryConfigToCA:", v12);

    -[PLBatteryAgent lastBatteryConfigEntry](self, "lastBatteryConfigEntry");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("xFlags"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v15 = v14;
        AnalyticsSendEventLazy();

      }
    }

  }
}

uint64_t __32__PLBatteryAgent_aggdTimerFired__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88758E = result;
  return result;
}

id __32__PLBatteryAgent_aggdTimerFired__block_invoke_3218(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = CFSTR("flags");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(*(id *)(a1 + 32), "integerValue"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

- (void)logBatteryConfigToAggd:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  _QWORD v19[25];

  v19[24] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "definedKeys");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(v6, "mutableCopy");

    v19[0] = CFSTR("RSS");
    v19[1] = CFSTR("ChemID");
    v19[2] = CFSTR("QmaxCell0");
    v19[3] = CFSTR("KioskModeHighSocSeconds");
    v19[4] = CFSTR("NominalChargeCapacity");
    v19[5] = CFSTR("SafetyEvent0");
    v19[6] = CFSTR("SafetyEvent1");
    v19[7] = CFSTR("SafetyEvent2");
    v19[8] = CFSTR("SafetyEvent3");
    v19[9] = CFSTR("SafetyEvent4");
    v19[10] = CFSTR("SafetyEvent5");
    v19[11] = CFSTR("SafetyEvent6");
    v19[12] = CFSTR("SafetyEvent7");
    v19[13] = CFSTR("SafetyEvent8");
    v19[14] = CFSTR("SafetyEvent9");
    v19[15] = CFSTR("SafetyEvent10");
    v19[16] = CFSTR("SafetyEvent11");
    v19[17] = CFSTR("SafetyEvent12");
    v19[18] = CFSTR("SafetyEvent13");
    v19[19] = CFSTR("SafetyEvent14");
    v19[20] = CFSTR("SafetyEvent15");
    v19[21] = CFSTR("SafetyEvent16");
    v19[22] = CFSTR("SafetyEvent17");
    v19[23] = CFSTR("SafetyEvent18");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 24);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "addObjectsFromArray:", v8);
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v9 = v7;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v15;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v15 != v12)
            objc_enumerationMutation(v9);
          -[PLBatteryAgent setAggdIntegerValueFromEntry:forKey:withPrefix:](self, "setAggdIntegerValueFromEntry:forKey:withPrefix:", v5, *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v13++), CFSTR("com.apple.power.battery."), (_QWORD)v14);
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v11);
    }

  }
}

- (void)logBatteryConfigToCA:(id)a3
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  id v26;
  id obj;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint8_t buf[4];
  void *v33;
  _BYTE v34[128];
  _QWORD v35[28];

  v35[26] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  PLLogCommon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_1CAF47000, v4, OS_LOG_TYPE_DEBUG, "In logBatteryConfigtoCA", buf, 2u);
  }

  if (v3)
  {
    v26 = v3;
    objc_msgSend(v3, "definedKeys");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(v5, "mutableCopy");

    PLLogCommon();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_DEBUG, "Copied Keys", buf, 2u);
    }

    v24 = (void *)objc_opt_new();
    PLLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_DEBUG, "Created dictionary", buf, 2u);
    }

    v35[0] = CFSTR("RSS");
    v35[1] = CFSTR("ChemID");
    v35[2] = CFSTR("QmaxCell0");
    v35[3] = CFSTR("KioskModeHighSocSeconds");
    v35[4] = CFSTR("LastUPOSystemTimestamp");
    v35[5] = CFSTR("NominalChargeCapacity");
    v35[6] = CFSTR("SafetyEvent0");
    v35[7] = CFSTR("SafetyEvent1");
    v35[8] = CFSTR("SafetyEvent2");
    v35[9] = CFSTR("SafetyEvent3");
    v35[10] = CFSTR("SafetyEvent4");
    v35[11] = CFSTR("SafetyEvent5");
    v35[12] = CFSTR("SafetyEvent6");
    v35[13] = CFSTR("SafetyEvent7");
    v35[14] = CFSTR("SafetyEvent8");
    v35[15] = CFSTR("SafetyEvent9");
    v35[16] = CFSTR("SafetyEvent10");
    v35[17] = CFSTR("SafetyEvent11");
    v35[18] = CFSTR("SafetyEvent12");
    v35[19] = CFSTR("SafetyEvent13");
    v35[20] = CFSTR("SafetyEvent14");
    v35[21] = CFSTR("SafetyEvent15");
    v35[22] = CFSTR("SafetyEvent16");
    v35[23] = CFSTR("SafetyEvent17");
    v35[24] = CFSTR("SafetyEvent18");
    v35[25] = CFSTR("LTDataCorruptionOffset");
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v35, 26);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObjectsFromArray:");
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    obj = v6;
    v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v34, 16);
    v3 = v26;
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v29;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v29 != v11)
            objc_enumerationMutation(obj);
          v13 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * v12);
          PLLogCommon();
          v14 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 138412290;
            v33 = v13;
            _os_log_debug_impl(&dword_1CAF47000, v14, OS_LOG_TYPE_DEBUG, "In logBatteryConfigtoCA. Adding key %@", buf, 0xCu);
          }

          objc_msgSend(v3, "objectForKeyedSubscript:", v13);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v13, "isEqualToString:", CFSTR("DOFU")))
          {
            -[PLBatteryAgent serialNumber](self, "serialNumber");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLBatteryAgent ApplyPolicyToDOFU:forSerial:](self, "ApplyPolicyToDOFU:forSerial:", v15, v16);
            v17 = objc_claimAutoreleasedReturnValue();

            v15 = (void *)v17;
            v3 = v26;
          }
          v18 = v13;
          if (objc_msgSend(v18, "rangeOfString:", CFSTR("-")) != 0x7FFFFFFFFFFFFFFFLL)
          {
            objc_msgSend(v18, "stringByReplacingOccurrencesOfString:withString:", CFSTR("-"), CFSTR("_"));
            v19 = objc_claimAutoreleasedReturnValue();

            v18 = (id)v19;
          }
          if (v15)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              objc_msgSend(v24, "setValue:forKey:", v15, v18);
          }

          ++v12;
        }
        while (v10 != v12);
        v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v34, 16);
      }
      while (v10);
    }

    PLLogCommon();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_1CAF47000, v20, OS_LOG_TYPE_DEBUG, "In logBatteryConfigtoCA. Sending to CA", buf, 2u);
    }

    v21 = v24;
    AnalyticsSendEventLazy();
    PLLogCommon();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_DEFAULT, "In logBatteryConfigtoCA. Sent to CA", buf, 2u);
    }

  }
}

id __39__PLBatteryAgent_logBatteryConfigToCA___block_invoke(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

- (void)logBaselineToAggD:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  _QWORD v14[5];
  id v15;

  v4 = a3;
  objc_msgSend(v4, "definedKeys");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = MEMORY[0x1E0C809B0];
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __36__PLBatteryAgent_logBaselineToAggD___block_invoke;
  v14[3] = &unk_1E857B3F0;
  v14[4] = self;
  v11 = v4;
  v15 = v11;
  objc_msgSend(v5, "enumerateObjectsUsingBlock:", v14);
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("TimeAtHighSoc"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent parseTimeAtHighSocHex:](self, "parseTimeAtHighSocHex:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v12[0] = v6;
  v12[1] = 3221225472;
  v12[2] = __36__PLBatteryAgent_logBaselineToAggD___block_invoke_2;
  v12[3] = &unk_1E857B198;
  v10 = v7;
  v13 = v10;
  objc_msgSend(v9, "enumerateKeysAndObjectsUsingBlock:", v12);
  if (objc_msgSend(v10, "count"))
    MEMORY[0x1D179B7E8](0, v10);

}

uint64_t __36__PLBatteryAgent_logBaselineToAggD___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAggdIntegerValueFromEntry:forKey:withPrefix:", *(_QWORD *)(a1 + 40), a2, CFSTR("com.apple.power.battery.calibration0.baseline."));
}

void __36__PLBatteryAgent_logBaselineToAggD___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  objc_msgSend(CFSTR("com.apple.power.battery.calibration0.baseline.TimeAtHighSoc."), "stringByAppendingString:", a2);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v5, v6);

}

- (void)logBaselineToCA:(id)a3
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  id v16;
  void *v17;
  void *v18;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t buf[4];
  void *v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  objc_msgSend(v3, "definedKeys");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (void *)objc_opt_new();
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v22;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v22 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * v9);
        PLLogCommon();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v26 = v10;
          _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "In logBaselinetoCA. Adding key %@", buf, 0xCu);
        }

        objc_msgSend(v3, "objectForKeyedSubscript:", v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = v10;
        if (objc_msgSend(v13, "rangeOfString:", CFSTR("-")) != 0x7FFFFFFFFFFFFFFFLL)
        {
          objc_msgSend(v13, "stringByReplacingOccurrencesOfString:withString:", CFSTR("-"), CFSTR("_"));
          v14 = objc_claimAutoreleasedReturnValue();

          v13 = (id)v14;
        }
        if (v12)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            objc_msgSend(v20, "setObject:forKeyedSubscript:", v12, v13);
        }

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
    }
    while (v7);
  }

  PLLogCommon();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_1CAF47000, v15, OS_LOG_TYPE_DEBUG, "In logBaselinetoCA. Sending to CA", buf, 2u);
  }

  v16 = v20;
  AnalyticsSendEventLazy();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("TimeAtHighSoc"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent parseTimeAtHighSocHex:](self, "parseTimeAtHighSocHex:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v18, "enumerateKeysAndObjectsUsingBlock:", &__block_literal_global_3230);
}

id __34__PLBatteryAgent_logBaselineToCA___block_invoke(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void __34__PLBatteryAgent_logBaselineToCA___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;

  v6 = a2;
  v7 = a3;
  v4 = v7;
  v5 = v6;
  AnalyticsSendEventLazy();

}

id __34__PLBatteryAgent_logBaselineToCA___block_invoke_3(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(*(id *)(a1 + 32), "substringFromIndex:", objc_msgSend(CFSTR("bin"), "length"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("bin"));

  objc_msgSend(v2, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 40), CFSTR("value"));
  return v2;
}

- (void)logKioskModeEntryToAggd:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  id v7;
  _QWORD v8[5];
  id v9;
  uint8_t buf[16];

  v4 = a3;
  PLLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_DEBUG, "In log KioskMode aggd", buf, 2u);
  }

  objc_msgSend(v4, "definedKeys");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __42__PLBatteryAgent_logKioskModeEntryToAggd___block_invoke;
  v8[3] = &unk_1E857B3F0;
  v8[4] = self;
  v9 = v4;
  v7 = v4;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v8);

}

uint64_t __42__PLBatteryAgent_logKioskModeEntryToAggd___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAggdIntegerValueFromEntry:forKey:withPrefix:", *(_QWORD *)(a1 + 40), a2, CFSTR("com.apple.power.battery."));
}

- (void)logKioskModeEntryToCA:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  id v12;

  v3 = a3;
  v4 = (void *)objc_opt_new();
  objc_msgSend(v3, "definedKeys");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __40__PLBatteryAgent_logKioskModeEntryToCA___block_invoke;
  v10[3] = &unk_1E857B3F0;
  v11 = v3;
  v6 = v4;
  v12 = v6;
  v7 = v3;
  objc_msgSend(v5, "enumerateObjectsUsingBlock:", v10);

  v9 = v6;
  v8 = v6;
  AnalyticsSendEventLazy();

}

void __40__PLBatteryAgent_logKioskModeEntryToCA___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v3;
  v5 = v8;
  if (objc_msgSend(v8, "rangeOfString:", CFSTR("-")) != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v8, "stringByReplacingOccurrencesOfString:withString:", CFSTR("-"), CFSTR("_"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  if (v4)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v6 = *(void **)(a1 + 40);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v4, "integerValue"));
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setValue:forKey:", v7, v5);

    }
  }

}

id __40__PLBatteryAgent_logKioskModeEntryToCA___block_invoke_2(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

- (void)logFlashAgingToCA:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v3 = a3;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("LifetimeData"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("FlashEraseCounter"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("LifetimeData"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("FlashFailureCounter"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    objc_msgSend(v9, "unsignedIntValue");
    v10 = v6;
    AnalyticsSendEventLazy();

  }
}

id __36__PLBatteryAgent_logFlashAgingToCA___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v6[3];
  _QWORD v7[4];

  v7[3] = *MEMORY[0x1E0C80C00];
  v7[0] = *(_QWORD *)(a1 + 32);
  v6[0] = CFSTR("dnvd_flash_erase_counters");
  v6[1] = CFSTR("flash_failure_counters");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedShort:", *(unsigned __int16 *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v7[1] = v2;
  v6[2] = CFSTR("last_flash_failure_error");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedShort:", *(unsigned __int16 *)(a1 + 42));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[2] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v7, v6, 3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (void)logSlowChargingReasonToCA:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = a3;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ChargerData"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ChargerData"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("SlowChargingReason"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      v7 = v6;
      AnalyticsSendEventLazy();

    }
  }

}

id __44__PLBatteryAgent_logSlowChargingReasonToCA___block_invoke(uint64_t a1)
{
  uint64_t v1;
  const __CFString *v3;
  _QWORD v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(a1 + 32);
  v3 = CFSTR("slow_charging_reason");
  v4[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, &v3, 1);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (void)logkBatteryRsenseOpenCountToCA:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = a3;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BatteryRsenseOpenCount"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      v7 = v6;
      AnalyticsSendEventLazy();

    }
  }

}

id __49__PLBatteryAgent_logkBatteryRsenseOpenCountToCA___block_invoke(uint64_t a1)
{
  uint64_t v1;
  const __CFString *v3;
  _QWORD v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(a1 + 32);
  v3 = CFSTR("battery_Rsense_opencount");
  v4[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, &v3, 1);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)ApplyPolicyToDOFU:(id)a3 forSerial:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  int v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  double v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  double v20;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  v7 = v6;
  v8 = 0;
  if (a3 && v6)
  {
    v9 = objc_msgSend(a3, "intValue");
    if (v9)
    {
      v10 = v9;
      -[PLBatteryAgent parseBatterySerialNumber:](self, "parseBatterySerialNumber:", v7);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (v11)
      {
        objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("SNDate"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = v13;
        if (v13)
        {
          v15 = v10;
          objc_msgSend(v13, "timeIntervalSince1970");
          v17 = v10 - (uint64_t)(int)v16;
          PLLogCommon();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
          {
            v22 = 134217984;
            v23 = v17;
            _os_log_debug_impl(&dword_1CAF47000, v18, OS_LOG_TYPE_DEBUG, "diff of the DOFU and SN is %ld", (uint8_t *)&v22, 0xCu);
          }

          if (v17 < 0)
          {
            PLLogCommon();
            v19 = objc_claimAutoreleasedReturnValue();
            v17 = -v17;
            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              v22 = 134217984;
              v23 = v17;
              _os_log_error_impl(&dword_1CAF47000, v19, OS_LOG_TYPE_ERROR, "diff of the DOFU and SN is negative with the value of %ld", (uint8_t *)&v22, 0xCu);
            }

          }
          v20 = dbl_1CB3891D0[(double)v17 / 604800.0 > 52.0];
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", floor((double)v15 / v20) * v20);
          v8 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v8 = 0;
        }

      }
      else
      {
        v8 = 0;
      }

    }
    else
    {
      v8 = 0;
    }
  }

  return v8;
}

- (void)logEventPointBatteryShutdown
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  unint64_t i;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  id v79;
  const __CFString *v80;
  _QWORD v81[3];

  v81[1] = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent getBatteryShutdownData](self, "getBatteryShutdownData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v79 = v2;
  if (v2)
  {
    objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("BatteryShutdownReason"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v3;
    if (v3 && objc_msgSend(v3, "count"))
    {
      +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("BatteryShutdown"));
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v76);
      objc_msgSend(MEMORY[0x1E0D7FFA0], "objectForKey:", CFSTR("LastShutdownSystemTimestamp"));
      v77 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownTimestamp"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
      {
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownTimestamp"));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "doubleValue");
        v9 = v8;

      }
      else
      {
        v9 = 0.0;
      }

      if (!v77 || (objc_msgSend(v77, "doubleValue"), v10 != v9))
      {
        objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", v9);
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v73, "convertFromSystemToMonotonic");
        v75 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v75, "timeIntervalSince1970");
        v12 = v11;
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v75, CFSTR("BatteryShutdownTimestamp"));
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownUISoc"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v13, CFSTR("UISOC"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownTemperature"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v14, CFSTR("Temperature"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownPresentDOD"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v15, CFSTR("PresentDOD"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownMaxRa08"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v16, CFSTR("MaximumRa0-8"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownNominalChargeCapacity"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v17, CFSTR("NominalChargeCapacity"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownPrevNominalChargeCapacity"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v18, CFSTR("NominalChargeCapacityPrevious"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownFullChargeCapacity"));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v19, CFSTR("FullChargeCapacity"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownPrevFullChargeCapacity"));
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v20, CFSTR("FullChargeCapacityPrevious"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownRemainingCapacity"));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v21, CFSTR("RemainingCapacity"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownPrevRemainingCapacity"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v22, CFSTR("RemainingCapacityPrevious"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownCycleCount"));
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v23, CFSTR("CycleCount"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownMaxDischargeCurrent"));
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v24, CFSTR("MaximumDischargeCurrent"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownTimeAbove95"));
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v25, CFSTR("TimeAbove95Perc"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownVoltage"));
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v26, CFSTR("Voltage"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownPrevVoltage"));
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v27, CFSTR("VoltagePrevious"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownAverageCurrent"));
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v28, CFSTR("AverageCurrent"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownPrevAverageCurrent"));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v29, CFSTR("AverageCurrentPrevious"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownCycleCountLastQmax"));
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v30, CFSTR("CycleCountLastQmax"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownResScale"));
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v31, CFSTR("ResScale"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownQstart"));
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v32, CFSTR("Qstart"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownPassedCharge"));
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v33, CFSTR("PassedCharge"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownDOD0"));
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v34, CFSTR("DOD0"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("timeSinceAwake"));
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v35, CFSTR("TimeSinceWake"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownRSS"));
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v36, CFSTR("RSS"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownUpoReboot"));
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v37, CFSTR("UpoReboot"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownDataError"));
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v38, CFSTR("DataError"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownFilteredCurrent"));
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v39, CFSTR("FilteredCurrent"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownDynSdVoltage"));
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v40, CFSTR("ShutdownVoltage"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownLpemSocfThresh"));
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v41, CFSTR("SOCFThreshold"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownDynSdSoc"));
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v42, CFSTR("ShutdownSoc"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownLPEMMode"));
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v43, CFSTR("LPEMMode"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownSocAlarm"));
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v44, CFSTR("SOCAlarm"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownSWRemcap"));
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v45, CFSTR("SWRemcap"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownSocSoc2"));
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v46, CFSTR("SocSoc2"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownSWFcc"));
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v47, CFSTR("SWFcc"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownDynamicSOCVcut"));
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v48, CFSTR("DynamicSOCVcut"));

        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutdownDataCriticalFlagsKey"));
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKeyedSubscript:", v49, CFSTR("DataCriticalFlagsKey"));

        -[PLBatteryAgent lowBatteryLogString](self, "lowBatteryLogString");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        if (v50)
          objc_msgSend(v5, "setObject:forKeyedSubscript:", v50, CFSTR("LowBatteryLog"));
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownDLog"));
        v74 = (id)objc_claimAutoreleasedReturnValue();
        if (v74)
        {
          v51 = objc_msgSend(v74, "length");
          if (v51 >= 2)
          {
            v52 = objc_msgSend(objc_retainAutorelease(v74), "bytes");
            v53 = 0;
            v54 = 0;
            v55 = (v51 >> 1) + 1;
            do
            {
              v56 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37E8]), "initWithUnsignedLong:", *(unsigned __int16 *)(v52 + 2 * v53));

              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("DLOG_%d"), v53);
              v57 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v5, "setObject:forKeyedSubscript:", v56, v57);

              ++v53;
              v54 = v56;
            }
            while (v55 != v53);

          }
        }
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ShutDownRaTableRaw"));
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLBatteryAgent parseRawRaTableData:](self, "parseRawRaTableData:", v58);
        v59 = (void *)objc_claimAutoreleasedReturnValue();
        for (i = 0; objc_msgSend(v59, "count") > i; ++i)
        {
          objc_msgSend(v59, "objectAtIndexedSubscript:", i);
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("RaTable_%d"), i + 1);
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "setObject:forKeyedSubscript:", v61, v62);

        }
        -[PLOperator logEntry:](self, "logEntry:", v5);
        v80 = CFSTR("BatteryShutdownTimestamp");
        objc_msgSend(v5, "objectForKeyedSubscript:");
        v63 = (void *)objc_claimAutoreleasedReturnValue();
        v81[0] = v63;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v81, &v80, 1);
        v64 = (void *)objc_claimAutoreleasedReturnValue();

        -[PLOperator logForSubsystem:category:data:](self, "logForSubsystem:category:data:", CFSTR("BatteryMetrics"), CFSTR("BatteryShutdown"), v64);
        objc_msgSend(MEMORY[0x1E0D800B8], "sharedCore");
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v65, "storage");
        v66 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v66, "flushCachesWithReason:", CFSTR("BatteryShutdownReason"));

        -[PLBatteryAgent logBatteryShutdownToCA:](self, "logBatteryShutdownToCA:", v5);
        v67 = (void *)MEMORY[0x1E0D7FFA0];
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v9);
        v68 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v67, "setObject:forKey:saveToDisk:", v68, CFSTR("LastShutdownSystemTimestamp"), 1);

        if (-[PLBatteryAgent isUPOEntry:](self, "isUPOEntry:", v5))
        {
          v69 = (void *)MEMORY[0x1E0D7FFA0];
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v12);
          v70 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v69, "setObject:forKey:saveToDisk:", v70, CFSTR("LastUPOTimestamp"), 1);

          v71 = (void *)MEMORY[0x1E0D7FFA0];
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v9);
          v72 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v71, "setObject:forKey:saveToDisk:", v72, CFSTR("LastUPOSystemTimestamp"), 1);

        }
      }

    }
    v2 = v79;
  }

}

uint64_t __46__PLBatteryAgent_logEventPointBatteryShutdown__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88758F = result;
  return result;
}

id __52__PLBatteryAgent_logEventPointBatteryPanicShutdown___block_invoke(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  const __CFString *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v5 = CFSTR("I2CLogData");
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("I2CLog"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("I2CLogData"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v2;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v6, &v5, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

uint64_t __52__PLBatteryAgent_logEventPointBatteryPanicShutdown___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887590 = result;
  return result;
}

- (void)logEventPointBatteryTrapInfo:(id)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  if (a3)
  {
    objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("DeadBatteryBootData"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4;
    if (v4)
    {
      v19 = v4;
      v6 = objc_msgSend(v4, "count");
      v5 = v19;
      if (v6)
      {
        +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("TrapInfo"));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v7);
        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("TimeOnCharger"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v9, CFSTR("TimeOnCharger"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("CloakEntryCount"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v10, CFSTR("CloakEntryCount"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("PrechargeCount"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v11, CFSTR("PrechargeCount"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("AverageBattVirtualTemp"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v12, CFSTR("AverageBattVirtualTemp"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("AverageBattSkinTemp"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v13, CFSTR("AverageBattSkinTemp"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("StartBatteryCapacity"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v14, CFSTR("StartBatteryCapacity"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("StartBatteryVoltage"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v15, CFSTR("StartBatteryVoltage"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("VbusType"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v16, CFSTR("VbusType"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("AdapterType"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v17, CFSTR("AdapterType"));

        objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("WirelessChargingMode"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v18, CFSTR("WirelessChargingMode"));

        -[PLOperator logEntry:](self, "logEntry:", v8);
        v5 = v19;
      }
    }

  }
}

- (void)logEventNoneBatteryConfigWithRawData:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  void *v39;
  NSObject *v40;
  void *v41;
  void *v42;
  void *v43;
  NSObject *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  unsigned __int8 *v72;
  void *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  NSObject *v89;
  void *v90;
  uint64_t v91;
  void *v92;
  NSObject *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  unint64_t i;
  void *v110;
  void *v111;
  void *v112;
  NSObject *v113;
  void *v114;
  NSObject *v115;
  unint64_t j;
  void *v117;
  void *v118;
  void *v119;
  NSObject *v120;
  uint64_t v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  BOOL v128;
  void *v129;
  void *v130;
  double v131;
  double v132;
  NSObject *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  _BOOL8 v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  double v170;
  double v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  NSObject *v182;
  int64_t v183;
  void *v184;
  double v185;
  double v186;
  uint64_t v187;
  _QWORD *v188;
  void *v189;
  void *v190;
  void *v191;
  NSObject *v192;
  id v193;
  void *v194;
  void *v195;
  void *v196;
  NSObject *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  id v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  id v208;
  void *v209;
  void *v210;
  unint64_t v211;
  void *v212;
  void *v213;
  _QWORD v215[5];
  id v216;
  int64_t v217;
  _QWORD v218[5];
  uint8_t buf[4];
  id v220;
  __int16 v221;
  void *v222;
  const __CFString *v223;
  void *v224;
  const __CFString *v225;
  _QWORD v226[4];

  v226[1] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  if (v3 && (objc_msgSend(MEMORY[0x1E0D80020], "isDeviceClass:", 101001) & 1) == 0)
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80388], CFSTR("BatteryConfig"));
    v209 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v209);
    objc_msgSend(v3, "objectForKey:", CFSTR("BatteryData"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v5
      || (objc_msgSend(v3, "objectForKey:", CFSTR("BatteryData")),
          v6 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(v6, "objectForKey:", CFSTR("LifetimeData")),
          v7 = (id)objc_claimAutoreleasedReturnValue(),
          v7,
          v6,
          v5,
          !v7))
    {
      if (!objc_msgSend(MEMORY[0x1E0D80020], "isMac"))
      {
LABEL_83:

        goto LABEL_84;
      }
      v7 = 0;
    }
    +[PLEventBackwardBatteryEntry populateQmaxForEntry:withRawData:](PLEventBackwardBatteryEntry, "populateQmaxForEntry:withRawData:", v4, v3);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("Flags"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v9, CFSTR("Flags"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("NominalChargeCapacity"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v10, CFSTR("NominalChargeCapacity"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("AppleRawMaxCapacity"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v11, CFSTR("AppleRawMaxCapacity"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TotalOperatingTime"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v12, CFSTR("TotalOperatingTime"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("AverageTemperature"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v13, CFSTR("AverageTemperature"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("CycleCountLastQmax"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v14, CFSTR("CycleCountLastQmax"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("FlashWriteCount"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v15, CFSTR("FlashWriteCount"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("HighAvgCurrentLastRun"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v16, CFSTR("HighAvgCurrentLastRun"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("LowAvgCurrentLastRun"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v17, CFSTR("LowAvgCurrentLastRun"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumDeltaVoltage"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v18, CFSTR("MaximumDeltaVoltage"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MinimumDeltaVoltage"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v19, CFSTR("MinimumDeltaVoltage"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumFCC"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v20, CFSTR("MaximumFCC"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MinimumFCC"));
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v21, CFSTR("MinimumFCC"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumPackVoltage"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v22, CFSTR("MaximumPackVoltage"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MinimumPackVoltage"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v23, CFSTR("MinimumPackVoltage"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumQmax"));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v24, CFSTR("MaximumQmax"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MinimumQmax"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v25, CFSTR("MinimumQmax"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumRa0-8"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v26, CFSTR("MaximumRa0-8"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MinimumRa0-8"));
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v27, CFSTR("MinimumRa0-8"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumTemperature"));
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v28, CFSTR("MaximumTemperature"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MinimumTemperature"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v29, CFSTR("MinimumTemperature"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumChargeCurrent"));
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v30, CFSTR("MaximumChargeCurrent"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumDischargeCurrent"));
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v31, CFSTR("MaximumDischargeCurrent"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumOverChargedCapacity"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v32, CFSTR("MaximumOverChargedCapacity"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumOverDischargedCapacity"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v33, CFSTR("MaximumOverDischargedCapacity"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("RDISCnt"));
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v34, CFSTR("RDISCnt"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TemperatureSamples"));
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v35, CFSTR("TemperatureSamples"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TimeAbove95Perc"));
    v36 = (void *)objc_claimAutoreleasedReturnValue();

    if (v36)
    {
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TimeAbove95Perc"));
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v37, CFSTR("TimeAbove95Perc"));

      PLLogCommon();
      v38 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TimeAbove95Perc"));
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v220 = v39;
        _os_log_debug_impl(&dword_1CAF47000, v38, OS_LOG_TYPE_DEBUG, "collected TA95%% %@", buf, 0xCu);

      }
    }
    else
    {
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TimeAtHighSoc"));
      v38 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v38, CFSTR("TimeAtHighSoc"));
      PLLogCommon();
      v40 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("TimeAtHighSoc"));
        v201 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v220 = v201;
        _os_log_debug_impl(&dword_1CAF47000, v40, OS_LOG_TYPE_DEBUG, "collected TAHighSoc: %@", buf, 0xCu);

      }
      -[PLBatteryAgent parseTimeAtHighSoc:](self, "parseTimeAtHighSoc:", v38);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent pushTimeAtHighSocToAggD:](self, "pushTimeAtHighSocToAggD:", v41);
      -[PLBatteryAgent pushTimeAtHighSocToCA:](self, "pushTimeAtHighSocToCA:", v41);

    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TimeAbove95Perc"));
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v42, CFSTR("TimeAbove95Perc"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("LowVoltageResidencyCounters"));
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v43, CFSTR("LowVoltageResidencyCounters"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("LowVoltageResidencyCounters"));
    v207 = (void *)objc_claimAutoreleasedReturnValue();
    if (v207)
    {
      PLLogCommon();
      v44 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("LowVoltageResidencyCounters"));
        v199 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v220 = v199;
        _os_log_debug_impl(&dword_1CAF47000, v44, OS_LOG_TYPE_DEBUG, "collected LowVoltageResidencyCounters: %@", buf, 0xCu);

      }
      -[PLBatteryAgent parseLowVoltageResidencyCounters:](self, "parseLowVoltageResidencyCounters:", v207);
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent pushLowVoltageResidencyCountersToCA:](self, "pushLowVoltageResidencyCountersToCA:", v45);

    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("UpdateTime"));
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v46, CFSTR("UpdateTime"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("QmaxUpdSuccessCount"));
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v47, CFSTR("QmaxUpdSuccessCount"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("QmaxUpdFailCount"));
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v48, CFSTR("QmaxUpdFailCount"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MinimumRa8"));
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v49, CFSTR("MinimumRa8"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("MaximumRa8"));
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v50, CFSTR("MaximumRa8"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TimeAbove95PercRange1"));
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v51, CFSTR("TimeAbove95PercRange1"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TimeAbove95PercRange2"));
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v52, CFSTR("TimeAbove95PercRange2"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("TimeAbove95PercRange3"));
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v53, CFSTR("TimeAbove95PercRange3"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("ResetCnt"));
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v54, CFSTR("ResetCnt"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("NCCMin"));
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v55, CFSTR("NCCMin"));

    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("NCCMax"));
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v56, CFSTR("NCCMax"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "objectForKeyedSubscript:", CFSTR("DataFlashWriteCount"));
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v58, CFSTR("DataFlashWriteCount"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v59, "objectForKeyedSubscript:", CFSTR("ResetDataComms"));
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v60, CFSTR("ResetDataComms"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v61, "objectForKeyedSubscript:", CFSTR("ResetDataFirmware"));
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v62, CFSTR("ResetDataFirmware"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v63, "objectForKeyedSubscript:", CFSTR("ResetDataHardware"));
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v64, CFSTR("ResetDataHardware"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v65, "objectForKeyedSubscript:", CFSTR("ResetDataSoftware"));
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v66, CFSTR("ResetDataSoftware"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v67, "objectForKeyedSubscript:", CFSTR("ResetDataWatchDog"));
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v68, CFSTR("ResetDataWatchDog"));

    if (objc_msgSend(MEMORY[0x1E0D80020], "isiPhone")
      && (int)objc_msgSend(MEMORY[0x1E0D80020], "kPLDeviceClass") > 102037)
    {
      objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v69, "objectForKeyedSubscript:", CFSTR("ResetData"));
      v70 = (void *)objc_claimAutoreleasedReturnValue();

      v71 = objc_retainAutorelease(v70);
      v72 = (unsigned __int8 *)objc_msgSend(v71, "bytes");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", v72[12]);
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v73, CFSTR("ResetDataSwWatchDog"));

      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", v72[14]);
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v74, CFSTR("ResetDataHardFault"));

      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", v72[16]);
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v75, CFSTR("ResetDataCorruption"));

      v76 = 16;
    }
    else
    {
      v76 = 10;
    }
    v211 = v76;
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v77 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v77, "objectForKeyedSubscript:", CFSTR("CycleCount"));
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v78, CFSTR("CycleCount"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ITSimulationCounter"));
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v79, CFSTR("ITSimulationCounter"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("RaUpdateCounter"));
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v80, CFSTR("RaUpdateCounter"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v81, "objectForKeyedSubscript:", CFSTR("ITMiscStatus"));
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v82, CFSTR("ITMiscStatus"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("GasGaugeFirmwareVersion"));
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v83, CFSTR("GasGaugeFirmwareVersion"));

    v225 = CFSTR("GasGaugeFirmwareVersion");
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("GasGaugeFirmwareVersion"));
    v84 = objc_claimAutoreleasedReturnValue();
    v226[0] = v84;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v226, &v225, 1);
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "entryDate");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLOperator logForSubsystem:category:data:date:](self, "logForSubsystem:category:data:date:", CFSTR("BatteryMetrics"), CFSTR("BatteryConfig"), v85, v86);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("FlashWearLevelData"));
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v84) = v87 == 0;

    if ((v84 & 1) == 0)
    {
      objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("FlashWearLevelData"));
      v88 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v88, CFSTR("FlashWearLevelData"));
      PLLogCommon();
      v89 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v89, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("FlashWearLevelData"));
        v200 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v220 = v200;
        _os_log_debug_impl(&dword_1CAF47000, v89, OS_LOG_TYPE_DEBUG, "collected flashWearLevelDataRaw: %@", buf, 0xCu);

      }
      -[PLBatteryAgent parseFlashWearLevelData:](self, "parseFlashWearLevelData:", v88);
      v90 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent pushFlashWearLevelDataToCA:](self, "pushFlashWearLevelDataToCA:", v90);

    }
    v91 = -[PLBatteryAgent getBatteryMaximumCapacityPercent](self, "getBatteryMaximumCapacityPercent");
    if ((int)v91 >= 1)
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v91);
      v92 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v92, CFSTR("MaximumCapacityPercent"));

      PLLogBH();
      v93 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v93, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v220) = v91;
        _os_log_impl(&dword_1CAF47000, v93, OS_LOG_TYPE_INFO, "Maximum Capacity: %d", buf, 8u);
      }

    }
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v94 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v94, "objectForKeyedSubscript:", CFSTR("AlgoChemID"));
    v95 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v95, CFSTR("AlgoChemID"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ChargerData"));
    v96 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v96, "objectForKeyedSubscript:", CFSTR("VacVoltageLimit"));
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v97, CFSTR("VacVoltageLimit"));

    -[PLBatteryAgent getBatteryCalibration0Data](self, "getBatteryCalibration0Data");
    v213 = (void *)objc_claimAutoreleasedReturnValue();
    if (v213)
    {
      -[PLBatteryAgent logEventForwardCalibration0withData:](self, "logEventForwardCalibration0withData:", v213);
      objc_msgSend(v213, "objectForKeyedSubscript:", CFSTR("calibrationFlags"));
      v98 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v98, CFSTR("calibrationFlags"));

      objc_msgSend(v213, "objectForKeyedSubscript:", CFSTR("filteredNCC"));
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v99, CFSTR("filteredNCC"));

      objc_msgSend(v213, "objectForKeyedSubscript:", CFSTR("exitTotalOperatingTime"));
      v100 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v100, CFSTR("exitTotalOperatingTime"));

      objc_msgSend(v213, "objectForKeyedSubscript:", CFSTR("svcTotalOperatingTime"));
      v101 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v101, CFSTR("svcTotalOperatingTime"));

    }
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v102 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v102, "objectForKeyedSubscript:", CFSTR("RSS"));
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v103, CFSTR("RSS"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v104, "objectForKeyedSubscript:", CFSTR("ChemID"));
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v105, CFSTR("ChemID"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v106, "objectForKeyedSubscript:", CFSTR("RaTableRaw"));
    v206 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v206, "count"))
    {
      objc_msgSend(v206, "objectAtIndexedSubscript:", 0);
      v107 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLBatteryAgent parseRawRaTableData:](self, "parseRawRaTableData:", v107);
      v108 = (void *)objc_claimAutoreleasedReturnValue();
      for (i = 0; objc_msgSend(v108, "count") > i; ++i)
      {
        objc_msgSend(v108, "objectAtIndexedSubscript:", i);
        v110 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("RaTable_%d"), i + 1);
        v111 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setObject:forKeyedSubscript:", v110, v111);

      }
    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("LTDataCorruptionOffset"));
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v112, CFSTR("LTDataCorruptionOffset"));

    PLLogCommon();
    v113 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v113, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("LTDataCorruptionOffset"));
      v198 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v220 = v198;
      _os_log_debug_impl(&dword_1CAF47000, v113, OS_LOG_TYPE_DEBUG, "DataCorruptionOffset: %@", buf, 0xCu);

    }
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("SafetyFaultCounter"));
    v205 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent parseRawSafetyFaultCounter:](self, "parseRawSafetyFaultCounter:");
    v114 = (void *)objc_claimAutoreleasedReturnValue();
    PLLogBH();
    v115 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v115, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v220 = v205;
      _os_log_debug_impl(&dword_1CAF47000, v115, OS_LOG_TYPE_DEBUG, "SafetyFaultCounter: %@", buf, 0xCu);
    }

    for (j = 0; objc_msgSend(v114, "count") > j; ++j)
    {
      objc_msgSend(v114, "objectAtIndexedSubscript:", j);
      v117 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("SafetyEvent%d"), j);
      v118 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v117, v118);

    }
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v119, "objectForKeyedSubscript:", CFSTR("ResetData"));
    v208 = (id)objc_claimAutoreleasedReturnValue();

    PLLogBH();
    v120 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v120, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v220 = v208;
      _os_log_debug_impl(&dword_1CAF47000, v120, OS_LOG_TYPE_DEBUG, "ResetData: %@", buf, 0xCu);
    }

    if (v208 && objc_msgSend(v208, "length") > v211)
    {
      v121 = objc_msgSend(objc_retainAutorelease(v208), "bytes");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", *(unsigned __int8 *)(v121 + v211));
      v122 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v122, CFSTR("LastResetReason"));

    }
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", -[PLBatteryAgent batteryLifetimeUPOCount](self, "batteryLifetimeUPOCount"));
    v123 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v123, CFSTR("LifetimeUPOCount"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("Serial"));
    v124 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setSerialNumber:](self, "setSerialNumber:", v124);

    -[PLBatteryAgent weekOfManufacture:](self, "weekOfManufacture:", v3);
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v125, CFSTR("WeekMfd"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v126 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v126, "objectForKeyedSubscript:", CFSTR("DateOfFirstUse"));
    v127 = (void *)objc_claimAutoreleasedReturnValue();
    v128 = v127 == 0;

    if (!v128)
    {
      objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
      v129 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v129, "objectForKeyedSubscript:", CFSTR("DateOfFirstUse"));
      v130 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v130, "doubleValue");
      v132 = v131;

      if (v132 == 0.0)
      {
        objc_msgSend(v4, "setObject:forKeyedSubscript:", 0, CFSTR("DOFU"));
      }
      else
      {
        PLLogCommon();
        v133 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v133, OS_LOG_TYPE_DEBUG))
        {
          objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", v132);
          v202 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v220 = v202;
          _os_log_debug_impl(&dword_1CAF47000, v133, OS_LOG_TYPE_DEBUG, "DOFU is %@", buf, 0xCu);

        }
        v134 = (void *)MEMORY[0x1E0CB37E8];
        objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", v132);
        v135 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v135, "timeIntervalSince1970");
        objc_msgSend(v134, "numberWithDouble:");
        v136 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setObject:forKeyedSubscript:", v136, CFSTR("DOFU"));

      }
      v223 = CFSTR("DOFU");
      objc_msgSend(v4, "objectForKeyedSubscript:");
      v137 = (void *)objc_claimAutoreleasedReturnValue();
      if (v137)
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("DOFU"));
      else
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v132);
      v138 = (void *)objc_claimAutoreleasedReturnValue();
      v224 = v138;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v224, &v223, 1);
      v139 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "entryDate");
      v140 = (void *)objc_claimAutoreleasedReturnValue();
      -[PLOperator logForSubsystem:category:data:date:](self, "logForSubsystem:category:data:date:", CFSTR("BatteryMetrics"), CFSTR("BatteryConfig"), v139, v140);

    }
    -[PLBatteryAgent batteryEEEECode:](self, "batteryEEEECode:", v3);
    v141 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v141, CFSTR("EEEECode"));

    -[PLBatteryAgent isOriginalBattery](self, "isOriginalBattery");
    v142 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v142, CFSTR("OriginalBattery"));

    v143 = -[PLBatteryAgent batterySerialChanged:](self, "batterySerialChanged:", v3);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v143);
    v144 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v144, CFSTR("BatterySerialChanged"));

    if (v143)
      MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.newSerial"), 1);
    +[PLEventBackwardBatteryEntry populateCellWOMForEntry:withRawData:](PLEventBackwardBatteryEntry, "populateCellWOMForEntry:withRawData:", v4, v3);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v145 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v145, "objectForKeyedSubscript:", CFSTR("DailyMaxSoc"));
    v146 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v146, CFSTR("DailyMaxSoc"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v147 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v147, "objectForKeyedSubscript:", CFSTR("DailyMinSoc"));
    v148 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v148, CFSTR("DailyMinSoc"));

    objc_msgSend(v3, "objectForKey:", CFSTR("KioskMode"));
    v212 = (void *)objc_claimAutoreleasedReturnValue();
    if (v212)
    {
      objc_msgSend(v212, "objectForKeyedSubscript:", CFSTR("KioskModeHighSocDays"));
      v149 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v149, CFSTR("KioskModeHighSocDays"));

      objc_msgSend(v212, "objectForKeyedSubscript:", CFSTR("KioskModeLastHighSocHours"));
      v150 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v150, CFSTR("KioskModeLastHighSocHours"));

      objc_msgSend(v212, "objectForKeyedSubscript:", CFSTR("KioskModeHighSocSeconds"));
      v151 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v151, CFSTR("KioskModeHighSocSeconds"));

    }
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("GgDataFlashUpdate"));
    v210 = (void *)objc_claimAutoreleasedReturnValue();
    if (v210)
    {
      objc_msgSend(v210, "objectForKeyedSubscript:", CFSTR("Status"));
      v152 = (void *)objc_claimAutoreleasedReturnValue();
      if (v152)
      {
        objc_msgSend(v4, "setObject:forKeyedSubscript:", v152, CFSTR("GGUpdateStatus"));
        if (objc_msgSend(v152, "intValue") - 3 <= 0xFFFFFFFD)
        {
          objc_msgSend(v210, "objectForKeyedSubscript:", CFSTR("Error"));
          v153 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "setObject:forKeyedSubscript:", v153, CFSTR("GGUpdateError"));

          objc_msgSend(v210, "objectForKeyedSubscript:", CFSTR("Phase"));
          v154 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "setObject:forKeyedSubscript:", v154, CFSTR("GGUpdatePhase"));

          objc_msgSend(v210, "objectForKeyedSubscript:", CFSTR("ErrorPhase"));
          v155 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "setObject:forKeyedSubscript:", v155, CFSTR("GGUpdateErrorPhase"));

          objc_msgSend(v210, "objectForKeyedSubscript:", CFSTR("SubclassId"));
          v156 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "setObject:forKeyedSubscript:", v156, CFSTR("GGUpdateSubclassID"));

          objc_msgSend(v210, "objectForKeyedSubscript:", CFSTR("Block"));
          v157 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "setObject:forKeyedSubscript:", v157, CFSTR("GGUpdateBlock"));

        }
      }

    }
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v158 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v158, "objectForKeyedSubscript:", CFSTR("LifetimeData"));
    v159 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v159, "objectForKeyedSubscript:", CFSTR("LTOCVRestCounter"));
    v160 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v160, CFSTR("LifeTimeOCVRestCounter"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v161 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v161, "objectForKeyedSubscript:", CFSTR("LifetimeData"));
    v162 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v162, "objectForKeyedSubscript:", CFSTR("LTQmaxUpdateCounter"));
    v163 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v163, CFSTR("LifeTimeQmaxUpdateCounter"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v164 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v164, "objectForKeyedSubscript:", CFSTR("LifetimeData"));
    v165 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v165, "objectForKeyedSubscript:", CFSTR("LTOCVRestCounterHsp"));
    v166 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v166, CFSTR("LifeTimeOCVRestCounterHsp"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v167 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v167, "objectForKeyedSubscript:", CFSTR("LifetimeData"));
    v168 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v168, "objectForKeyedSubscript:", CFSTR("LTQmaxUpdateCounterHsp"));
    v169 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v169, CFSTR("LifeTimeQmaxUpdateCounterHsp"));

    objc_msgSend(MEMORY[0x1E0D7FFA0], "doubleForKey:ifNotSet:", CFSTR("LastUPOSystemTimestamp"), 0.0);
    v171 = v170;
    ADClientSetValueForScalarKey();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v171);
    v172 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v172, CFSTR("LastUPOSystemTimestamp"));

    objc_msgSend(MEMORY[0x1E0D7FFA0], "doubleForKey:ifNotSet:", CFSTR("LastUPOTimestamp"), 0.0);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:");
    v173 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v173, CFSTR("LastUPOTimestamp"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v174 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v174, "objectForKeyedSubscript:", CFSTR("ChemicalWeightedRa"));
    v175 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v175, CFSTR("ChemicalWeightedRa"));

    +[PLEventBackwardBatteryEntry populatewRaForEntry:withRawData:](PLEventBackwardBatteryEntry, "populatewRaForEntry:withRawData:", v4, v3);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v176 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v176, "objectForKeyedSubscript:", CFSTR("BatteryHealthMetric"));
    v177 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v177, CFSTR("BatteryHealthMetric"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
    v178 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v178, "objectForKeyedSubscript:", CFSTR("PeakPerformanceCapacity"));
    v179 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v179, CFSTR("PeakPerformanceCapacity"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", -[PLBatteryAgent getBatteryHealthServiceState](self, "getBatteryHealthServiceState"));
    v180 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", -[PLBatteryAgent getBatteryHealthServiceFlags](self, "getBatteryHealthServiceFlags"));
    v181 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v180, CFSTR("ServiceOption"));
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v181, CFSTR("batteryServiceFlags"));
    objc_msgSend(v180, "intValue");
    ADClientSetValueForScalarKey();
    objc_msgSend(v181, "intValue");
    ADClientSetValueForScalarKey();
    PLLogBH();
    v182 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v182, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      v220 = v180;
      v221 = 2112;
      v222 = v181;
      _os_log_impl(&dword_1CAF47000, v182, OS_LOG_TYPE_INFO, "BH State: %@. Flags: %@", buf, 0x16u);
    }

    -[PLBatteryAgent logAuthFail:](self, "logAuthFail:", v4);
    if (+[PLBatteryAgent supportsxFlags](PLBatteryAgent, "supportsxFlags"))
    {
      v183 = -[PLBatteryAgent xFlags](self, "xFlags");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v183);
      v184 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setObject:forKeyedSubscript:", v184, CFSTR("xFlags"));

      if ((v183 & 0x2B) != 0)
      {
        -[PLOperator defaultDoubleForKey:](self, "defaultDoubleForKey:", CFSTR("xFlagsRetryTimerInterval"));
        v186 = v185;
        if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
        {
          v187 = objc_opt_class();
          v218[0] = MEMORY[0x1E0C809B0];
          v218[1] = 3221225472;
          v218[2] = __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke;
          v218[3] = &__block_descriptor_40_e5_v8__0lu32l8;
          v218[4] = v187;
          v188 = v218;
          if (qword_1ED887770 != -1)
            dispatch_once(&qword_1ED887770, v188);

          if (byte_1ED887591)
          {
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("xFlags indicate error, will retry in %.1f seconds"), *(_QWORD *)&v186);
            v204 = (void *)objc_claimAutoreleasedReturnValue();
            v203 = (void *)MEMORY[0x1E0D7FF98];
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
            v189 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v189, "lastPathComponent");
            v190 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventNoneBatteryConfigWithRawData:]");
            v191 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v203, "logMessage:fromFile:fromFunction:fromLineNumber:", v204, v190, v191, 7799);

            PLLogCommon();
            v192 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v192, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              v220 = v204;
              _os_log_debug_impl(&dword_1CAF47000, v192, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
            }

          }
        }
        v193 = objc_alloc(MEMORY[0x1E0D80070]);
        objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDateWithTimeIntervalSinceNow:", v186);
        v194 = (void *)objc_claimAutoreleasedReturnValue();
        -[PLOperator workQueue](self, "workQueue");
        v195 = (void *)objc_claimAutoreleasedReturnValue();
        v215[0] = MEMORY[0x1E0C809B0];
        v215[1] = 3221225472;
        v215[2] = __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3383;
        v215[3] = &unk_1E857F738;
        v215[4] = self;
        v217 = v183;
        v216 = v4;
        v196 = (void *)objc_msgSend(v193, "initWithFireDate:withInterval:withTolerance:repeats:withUserInfo:withQueue:withBlock:", v194, 0, 0, v195, v215, v186, 6.0e10);
        -[PLBatteryAgent setXFlagsRetryTimer:](self, "setXFlagsRetryTimer:", v196);

      }
      else
      {
        AnalyticsSendEventLazy();
      }
    }
    -[PLOperator logEntry:](self, "logEntry:", v4);
    -[PLBatteryAgent setLastBatteryConfigEntry:](self, "setLastBatteryConfigEntry:", v4);
    PLLogCommon();
    v197 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v197, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_1CAF47000, v197, OS_LOG_TYPE_DEBUG, "About to push data to CA", buf, 2u);
    }

    -[PLBatteryAgent logBatteryConfigToCA:](self, "logBatteryConfigToCA:", v4);
    -[PLBatteryAgent logBatteryConfigToAggd:](self, "logBatteryConfigToAggd:", v4);
    -[PLBatteryAgent logWatchdogDebugDumpToCA:](self, "logWatchdogDebugDumpToCA:", v3);
    -[PLBatteryAgent logFlashAgingToCA:](self, "logFlashAgingToCA:", v3);
    -[PLBatteryAgent logShallowChargingToCA:](self, "logShallowChargingToCA:", v3);
    -[PLBatteryAgent logSlowChargingReasonToCA:](self, "logSlowChargingReasonToCA:", v3);
    -[PLBatteryAgent logkBatteryRsenseOpenCountToCA:](self, "logkBatteryRsenseOpenCountToCA:", v3);

    goto LABEL_83;
  }
LABEL_84:

}

uint64_t __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887591 = result;
  return result;
}

void __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3383(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  _QWORD v13[5];
  id v14;
  uint64_t v15;
  _QWORD block[5];
  uint8_t buf[4];
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(*(id *)(a1 + 32), "xFlags");
  v3 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
  v4 = MEMORY[0x1E0C809B0];
  if (v3)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_2;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = objc_opt_class();
    if (qword_1ED887778 != -1)
      dispatch_once(&qword_1ED887778, block);
    if (byte_1ED887592)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("xFlags retry value: %ld, previously: %ld"), v2, *(_QWORD *)(a1 + 48));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "lastPathComponent");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventNoneBatteryConfigWithRawData:]_block_invoke");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "logMessage:fromFile:fromFunction:fromLineNumber:", v5, v8, v9, 7808);

      PLLogCommon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v18 = v5;
        _os_log_debug_impl(&dword_1CAF47000, v10, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  if (v2 == *(_QWORD *)(a1 + 48))
  {
    AnalyticsSendEventLazy();
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "storage");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v13[0] = v4;
    v13[1] = 3221225472;
    v13[2] = __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3386;
    v13[3] = &unk_1E857B418;
    v12 = *(void **)(a1 + 40);
    v13[4] = *(_QWORD *)(a1 + 32);
    v14 = v12;
    v15 = v2;
    objc_msgSend(v11, "updateEntry:withBlock:", v14, v13);

  }
}

uint64_t __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887592 = result;
  return result;
}

uint64_t __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3386(uint64_t a1)
{
  int v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  uint64_t v12;
  _QWORD block[5];
  uint8_t buf[4];
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
  v3 = MEMORY[0x1E0C809B0];
  if (v2)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_2_3387;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = objc_opt_class();
    if (qword_1ED887780 != -1)
      dispatch_once(&qword_1ED887780, block);
    if (byte_1ED887593)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Updating xFlags value in powerlog and aggd"));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "lastPathComponent");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventNoneBatteryConfigWithRawData:]_block_invoke");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "logMessage:fromFile:fromFunction:fromLineNumber:", v4, v7, v8, 7813);

      PLLogCommon();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v15 = v4;
        _os_log_debug_impl(&dword_1CAF47000, v9, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", *(_QWORD *)(a1 + 48));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v10, CFSTR("xFlags"));

  objc_msgSend(*(id *)(a1 + 32), "setAggdIntegerValueFromEntry:forKey:withPrefix:", *(_QWORD *)(a1 + 40), CFSTR("xFlags"), CFSTR("com.apple.power.battery."));
  v12 = *(_QWORD *)(a1 + 48);
  AnalyticsSendEventLazy();
  return objc_msgSend(*(id *)(a1 + 32), "setLastBatteryConfigEntry:", *(_QWORD *)(a1 + 40), v3, 3221225472, __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3390, &__block_descriptor_40_e19___NSDictionary_8__0l, v12);
}

uint64_t __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_2_3387(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887593 = result;
  return result;
}

id __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3390(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = CFSTR("flags");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", *(_QWORD *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_2_3391(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = CFSTR("flags");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", *(_QWORD *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = CFSTR("flags");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", *(_QWORD *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

uint64_t __55__PLBatteryAgent_logEventNoneBatteryConfigWithRawData___block_invoke_3394(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887594 = result;
  return result;
}

- (void)logEventNoneBatteryConfigCycleCountData
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _QWORD block[10];
  uint8_t buf[4];
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  -[PLOperator workQueue](self, "workQueue");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = MEMORY[0x1E0C809B0];
  block[5] = MEMORY[0x1E0C809B0];
  block[6] = 3221225472;
  block[7] = __57__PLBatteryAgent_logEventNoneBatteryConfigCycleCountData__block_invoke;
  block[8] = &unk_1E857AAF8;
  block[9] = self;
  v5 = IOPMCopyCycleCountData();

  if ((_DWORD)v5 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    block[0] = v4;
    block[1] = 3221225472;
    block[2] = __57__PLBatteryAgent_logEventNoneBatteryConfigCycleCountData__block_invoke_2;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = objc_opt_class();
    if (qword_1ED887790 != -1)
      dispatch_once(&qword_1ED887790, block);
    if (byte_1ED887595)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Battery Config Cycle Count Data Error: %x"), v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "lastPathComponent");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent logEventNoneBatteryConfigCycleCountData]");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 7920);

      PLLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v6;
        _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
}

void __57__PLBatteryAgent_logEventNoneBatteryConfigCycleCountData__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  id obj;
  uint64_t v48;
  void *v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "objectForKeyedSubscript:", CFSTR("batteryCycleCountData"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("Cycles"));
    v4 = objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      v5 = (void *)v4;
      +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80388], CFSTR("BatteryConfig"));
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      v51 = 0u;
      v52 = 0u;
      v53 = 0u;
      v54 = 0u;
      obj = v5;
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
      if (v6)
      {
        v7 = v6;
        v48 = *(_QWORD *)v52;
        do
        {
          for (i = 0; i != v7; ++i)
          {
            if (*(_QWORD *)v52 != v48)
              objc_enumerationMutation(obj);
            v9 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * i);
            v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v49);
            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("CycleCount"));
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, CFSTR("CycleCount"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("AppleRawMaxCapacity"));
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v12, CFSTR("AppleRawMaxCapacity"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("NominalChargeCapacity"));
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v13, CFSTR("NominalChargeCapacity"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Flags"));
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v14, CFSTR("Flags"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("QmaxCell0"));
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v15, CFSTR("QmaxCell0"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra00"));
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v16, CFSTR("RaTable_1"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra01"));
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v17, CFSTR("RaTable_2"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra02"));
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v18, CFSTR("RaTable_3"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra03"));
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v19, CFSTR("RaTable_4"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra04"));
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v20, CFSTR("RaTable_5"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra05"));
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v21, CFSTR("RaTable_6"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra06"));
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v22, CFSTR("RaTable_7"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra07"));
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v23, CFSTR("RaTable_8"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra08"));
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v24, CFSTR("RaTable_9"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra09"));
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v25, CFSTR("RaTable_10"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra10"));
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v26, CFSTR("RaTable_11"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra11"));
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v27, CFSTR("RaTable_12"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra12"));
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v28, CFSTR("RaTable_13"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra13"));
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v29, CFSTR("RaTable_14"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Ra14"));
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v30, CFSTR("RaTable_15"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Wom1"));
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v31, CFSTR("Wom_1"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("Wom2"));
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v32, CFSTR("Wom_2"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("MaximumTemperature"));
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v33, CFSTR("MaximumTemperature"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("MinimumTemperature"));
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v34, CFSTR("MinimumTemperature"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("MaximumPackVoltage"));
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v35, CFSTR("MaximumPackVoltage"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("MinimumPackVoltage"));
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v36, CFSTR("MinimumPackVoltage"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("MaximimChargeCurrent"));
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v37, CFSTR("MaximumChargeCurrent"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("MaximimDischargeCurrent"));
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v38, CFSTR("MaximumDischargeCurrent"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("MinimumFCC"));
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v39, CFSTR("MinimumFCC"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("LowAvgCurrentLastRun"));
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v40, CFSTR("LowAvgCurrentLastRun"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("HighAvgCurrentLastRun"));
            v41 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v41, CFSTR("HighAvgCurrentLastRun"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("AverageTemperature"));
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v42, CFSTR("AverageTemperature"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("RDISCnt"));
            v43 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v43, CFSTR("RDISCnt"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("CycleCountLastQmax"));
            v44 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v44, CFSTR("CycleCountLastQmax"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("TotalOperatingTime"));
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v45, CFSTR("TotalOperatingTime"));

            objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("TimeAbove95Perc"));
            v46 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "setObject:forKeyedSubscript:", v46, CFSTR("TimeAbove95Perc"));

            objc_msgSend(*(id *)(a1 + 32), "logEntry:", v10);
          }
          v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
        }
        while (v7);
      }

    }
  }

}

uint64_t __57__PLBatteryAgent_logEventNoneBatteryConfigCycleCountData__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887595 = result;
  return result;
}

- (BOOL)gasGaugeOpenAndStartLogging
{
  uint64_t v3;
  __CFString *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t started;
  uint64_t v16;
  uint64_t v17;
  __CFString *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  const __CFString *v31;
  uint64_t v32;
  _QWORD block[4];
  const __CFString *v34;
  uint64_t v35;
  uint8_t buf[4];
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  if (-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"))
  {
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v3 = objc_opt_class();
      block[0] = MEMORY[0x1E0C809B0];
      block[2] = __45__PLBatteryAgent_gasGaugeOpenAndStartLogging__block_invoke;
      block[3] = &unk_1E8578738;
      block[1] = 3221225472;
      v34 = CFSTR("GasGauge");
      v35 = v3;
      if (qword_1ED887798 == -1)
      {
        v4 = CFSTR("GasGauge");
      }
      else
      {
        dispatch_once(&qword_1ED887798, block);
        v4 = (__CFString *)v34;
      }
      v5 = byte_1ED887596;

      if (v5)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("GasGauge Open: already have a connection"));
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "lastPathComponent");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeOpenAndStartLogging]");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 7933);

        PLLogCommon();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v37 = v6;
          _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }
        v12 = 1;
LABEL_23:

        return v12;
      }
    }
    return 1;
  }
  else
  {
    -[PLBatteryAgent setGasGagueConnection:](self, "setGasGagueConnection:", gasgauge_open());
    if (-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"))
    {
      v13 = gasgauge_currentlog_interval((uint64_t)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"));
      v14 = gasgauge_currentlog_sleepinterval((uint64_t)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"));
      started = gasgauge_currentlog_start_collection((unsigned int *)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"), 2);
      v16 = started;
      if ((int)v13 < 2 || (int)v14 < 1 || (_DWORD)started)
      {
        gasgauge_close((_QWORD *)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"));
        -[PLBatteryAgent setGasGagueConnection:](self, "setGasGagueConnection:", 0);
        v12 = 0;
      }
      else
      {
        v12 = 1;
      }
    }
    else
    {
      v12 = 0;
      v14 = 4294967294;
      v16 = 4294967294;
      v13 = 4294967294;
    }
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v17 = objc_opt_class();
      v27 = MEMORY[0x1E0C809B0];
      v29 = __45__PLBatteryAgent_gasGaugeOpenAndStartLogging__block_invoke_3411;
      v30 = &unk_1E8578738;
      v28 = 3221225472;
      v31 = CFSTR("GasGauge");
      v32 = v17;
      if (qword_1ED8877A0 == -1)
      {
        v18 = CFSTR("GasGauge");
      }
      else
      {
        dispatch_once(&qword_1ED8877A0, &v27);
        v18 = (__CFString *)v31;
      }
      v19 = byte_1ED887597;

      if (v19)
      {
        v20 = (void *)MEMORY[0x1E0CB3940];
        NSStringFromBOOL();
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "stringWithFormat:", CFSTR("GasGauge Open: result=%@ gg_log_interval=%d gg_sleep_interval=%d gg_currentlog_start=%d"), v21, v13, v14, v16, v27, v28, v29, v30);
        v6 = (void *)objc_claimAutoreleasedReturnValue();

        v22 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "lastPathComponent");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeOpenAndStartLogging]");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v22, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v24, v25, 7958);

        PLLogCommon();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v37 = v6;
          _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }
        goto LABEL_23;
      }
    }
  }
  return v12;
}

uint64_t __45__PLBatteryAgent_gasGaugeOpenAndStartLogging__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
  byte_1ED887596 = result;
  return result;
}

uint64_t __45__PLBatteryAgent_gasGaugeOpenAndStartLogging__block_invoke_3411(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
  byte_1ED887597 = result;
  return result;
}

- (BOOL)gasGaugeStopLoggingAndClose
{
  if (-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"))
  {
    gasgauge_currentlog_stop((uint64_t)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"));
    gasgauge_close((_QWORD *)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"));
    -[PLBatteryAgent setGasGagueConnection:](self, "setGasGagueConnection:", 0);
  }
  return 1;
}

- (BOOL)givePluggedInFreePass
{
  PLBatteryAgent *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v2 = self;
  v3 = (void *)MEMORY[0x1E0D80078];
  -[PLBatteryAgent deviceIsPluggedIn](self, "deviceIsPluggedIn");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "BOOLValue");
  -[PLBatteryAgent batteryLevelPercent](v2, "batteryLevelPercent");
  LOBYTE(v2) = objc_msgSend(v3, "isPingPongChargingWith:andBatteryLevelPercent:", v5);

  return (char)v2;
}

- (void)addPowerMeasurementToAccounting:(double)a3 withStartDate:(id)a4 withEndDate:(id)a5
{
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  NSObject *v17;
  double v18;
  NSObject *v19;
  void *v20;
  int v21;
  double v22;
  __int16 v23;
  double v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v8 = a4;
  v9 = a5;
  objc_msgSend(MEMORY[0x1E0D7FED8], "sharedInstance");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "addPowerMeasurementEventIntervalWithPower:withStartDate:withEndDate:", v8, v9, a3);

  PLLogCommon();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    v21 = 134218498;
    v22 = a3;
    v23 = 2112;
    v24 = *(double *)&v8;
    v25 = 2112;
    v26 = v9;
    _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "added power %.2fmW for %@-%@", (uint8_t *)&v21, 0x20u);
  }

  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80368], CFSTR("UILevel"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v12);
  objc_msgSend(v9, "timeIntervalSinceDate:", v8);
  v15 = v14;
  v16 = v14 / 3600.0 * a3;
  PLLogCommon();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
  {
    v21 = 134218240;
    v22 = v16;
    v23 = 2048;
    v24 = v15;
    _os_log_debug_impl(&dword_1CAF47000, v17, OS_LOG_TYPE_DEBUG, "calculated energy %.2fmWh for %.2fs", (uint8_t *)&v21, 0x16u);
  }

  v18 = (double)(uint64_t)llround(v16 * 1000.0);
  PLLogCommon();
  v19 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
  {
    v21 = 134217984;
    v22 = v18;
    _os_log_debug_impl(&dword_1CAF47000, v19, OS_LOG_TYPE_DEBUG, "scaled to %.2fuWh", (uint8_t *)&v21, 0xCu);
  }

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v18);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setObject:forKeyedSubscript:", v20, CFSTR("energyConsumed"));

  -[PLOperator logEntry:](self, "logEntry:", v13);
}

- (void)gasGaugeRead
{
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  NSObject *v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  NSObject *v36;
  uint64_t *v37;
  int *v38;
  void **p_vtable;
  void **v40;
  double v41;
  double v42;
  uint64_t v43;
  _QWORD *v44;
  void **v45;
  void **v46;
  void *v47;
  double v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  NSObject *v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  NSObject *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  double v73;
  double v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  NSObject *v83;
  int v84;
  double v85;
  double v86;
  double v87;
  void *v88;
  void *v89;
  void *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  void *v94;
  uint64_t v95;
  id v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  double v104;
  double v105;
  double v106;
  void *v107;
  void *v108;
  int v109;
  uint64_t v110;
  _QWORD *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  NSObject *v117;
  _QWORD *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  NSObject *v126;
  _QWORD *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  NSObject *v136;
  _QWORD *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  NSObject *v146;
  _BOOL4 v147;
  double v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  int *v153;
  _QWORD v154[5];
  _QWORD block[5];
  _QWORD v156[5];
  _QWORD v157[5];
  _QWORD v158[5];
  _QWORD v159[5];
  _QWORD v160[5];
  _QWORD v161[5];
  _QWORD v162[5];
  _QWORD v163[5];
  _QWORD v164[5];
  _QWORD v165[5];
  uint64_t v166;
  _QWORD v167[5];
  uint8_t buf[4];
  void *v169;
  uint64_t v170;

  v170 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(MEMORY[0x1E0D80078], "hasGasGauge"))
  {
    -[PLBatteryAgent gasGaugeOpenAndStartLogging](self, "gasGaugeOpenAndStartLogging");
    v3 = 0x1E0D7F000uLL;
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v4 = objc_opt_class();
      v167[0] = MEMORY[0x1E0C809B0];
      v167[1] = 3221225472;
      v167[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke;
      v167[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v167[4] = v4;
      v5 = v167;
      if (qword_1ED8877C0 != -1)
        dispatch_once(&qword_1ED8877C0, v5);

      if (byte_1ED887598)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("gasGagueConnection=%p"), -[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"));
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "lastPathComponent");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "logMessage:fromFile:fromFunction:fromLineNumber:", v6, v9, v10, 8016);

        PLLogCommon();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v169 = v6;
          _os_log_debug_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    if (-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"))
    {
      v166 = -1;
      if (gasgauge_currentlog_entries((unsigned int *)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"), 0, (unint64_t *)&v166, 2)|| !v166)
      {
        v55 = -[PLBatteryAgent gasGaugeConsecutiveEmptyEntriesCount](self, "gasGaugeConsecutiveEmptyEntriesCount")+ 1;
        -[PLBatteryAgent setGasGaugeConsecutiveEmptyEntriesCount:](self, "setGasGaugeConsecutiveEmptyEntriesCount:", v55);
        v56 = (double)(int)v55;
        v57 = MEMORY[0x1E0C809B0];
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3464;
        block[3] = &unk_1E85780C8;
        block[4] = self;
        if (qword_1ED887820 != -1)
          dispatch_once(&qword_1ED887820, block);
        if (*(double *)&qword_1ED887828 <= v56
          && -[PLBatteryAgent allowGasGaugeRead](self, "allowGasGaugeRead", *(double *)&qword_1ED887828))
        {
          if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
          {
            v154[0] = v57;
            v154[1] = 3221225472;
            v154[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_2_3467;
            v154[3] = &__block_descriptor_40_e5_v8__0lu32l8;
            v154[4] = objc_opt_class();
            if (qword_1ED887830 != -1)
              dispatch_once(&qword_1ED887830, v154);
            if (byte_1ED8875A2)
            {
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Resetting the gasgauge connection"));
              v58 = (void *)objc_claimAutoreleasedReturnValue();
              v59 = (void *)MEMORY[0x1E0D7FF98];
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
              v60 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v60, "lastPathComponent");
              v61 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
              v62 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v59, "logMessage:fromFile:fromFunction:fromLineNumber:", v58, v61, v62, 8122);

              PLLogCommon();
              v63 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v63, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)buf = 138412290;
                v169 = v58;
                _os_log_debug_impl(&dword_1CAF47000, v63, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
              }

            }
          }
          +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("GasGaugeReconnect"));
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          v65 = (void *)MEMORY[0x1E0D7FFC0];
          -[PLOperator className](self, "className");
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          LODWORD(v65) = objc_msgSend(v65, "isEntryKeySetup:forOperatorName:", v64, v66);

          if ((_DWORD)v65)
          {
            v67 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v64);
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Consecutive Empty Entries %d"), -[PLBatteryAgent gasGaugeConsecutiveEmptyEntriesCount](self, "gasGaugeConsecutiveEmptyEntriesCount"));
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v67, "setObject:forKeyedSubscript:", v68, CFSTR("Reason"));

            -[PLOperator logEntry:](self, "logEntry:", v67);
          }
          -[PLBatteryAgent gasGaugeStopLoggingAndClose](self, "gasGaugeStopLoggingAndClose");
          -[PLBatteryAgent gasGaugeOpenAndStartLogging](self, "gasGaugeOpenAndStartLogging");
          -[PLBatteryAgent setGasGaugeConsecutiveEmptyEntriesCount:](self, "setGasGaugeConsecutiveEmptyEntriesCount:", 0);

        }
      }
      else
      {
        if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
        {
          v12 = objc_opt_class();
          v165[0] = MEMORY[0x1E0C809B0];
          v165[1] = 3221225472;
          v165[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3418;
          v165[3] = &__block_descriptor_40_e5_v8__0lu32l8;
          v165[4] = v12;
          v13 = v165;
          if (qword_1ED8877C8 != -1)
            dispatch_once(&qword_1ED8877C8, v13);

          if (byte_1ED887599)
          {
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("numReadings=%i"), v166);
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = (void *)MEMORY[0x1E0D7FF98];
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v16, "lastPathComponent");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "logMessage:fromFile:fromFunction:fromLineNumber:", v14, v17, v18, 8021);

            PLLogCommon();
            v19 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              v169 = v14;
              _os_log_debug_impl(&dword_1CAF47000, v19, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
            }

          }
        }
        v20 = (int *)malloc_type_malloc(24 * v166, 0x100004034E20058uLL);
        if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
        {
          v21 = objc_opt_class();
          v164[0] = MEMORY[0x1E0C809B0];
          v164[1] = 3221225472;
          v164[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3423;
          v164[3] = &__block_descriptor_40_e5_v8__0lu32l8;
          v164[4] = v21;
          v22 = v164;
          if (qword_1ED8877D0 != -1)
            dispatch_once(&qword_1ED8877D0, v22);

          if (byte_1ED88759A)
          {
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("logs=%p"), v20);
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            v24 = (void *)MEMORY[0x1E0D7FF98];
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v25, "lastPathComponent");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v24, "logMessage:fromFile:fromFunction:fromLineNumber:", v23, v26, v27, 8024);

            PLLogCommon();
            v28 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              v169 = v23;
              _os_log_debug_impl(&dword_1CAF47000, v28, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
            }

          }
        }
        if (v20)
        {
          if (!gasgauge_currentlog_entries((unsigned int *)-[PLBatteryAgent gasGagueConnection](self, "gasGagueConnection"), (uint64_t)v20, (unint64_t *)&v166, 2)&& v166)
          {
            if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
            {
              v29 = objc_opt_class();
              v163[0] = MEMORY[0x1E0C809B0];
              v163[1] = 3221225472;
              v163[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3428;
              v163[3] = &__block_descriptor_40_e5_v8__0lu32l8;
              v163[4] = v29;
              v30 = v163;
              if (qword_1ED8877D8 != -1)
                dispatch_once(&qword_1ED8877D8, v30);

              if (byte_1ED88759B)
              {
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("numReadings=%i, logs=%p"), v166, v20);
                v31 = (void *)objc_claimAutoreleasedReturnValue();
                v32 = (void *)MEMORY[0x1E0D7FF98];
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                v33 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v33, "lastPathComponent");
                v34 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
                v35 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v32, "logMessage:fromFile:fromFunction:fromLineNumber:", v31, v34, v35, 8028);

                PLLogCommon();
                v36 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG))
                {
                  *(_DWORD *)buf = 138412290;
                  v169 = v31;
                  _os_log_debug_impl(&dword_1CAF47000, v36, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                }

              }
            }
            +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80380], CFSTR("GasGauge"));
            v152 = (void *)objc_claimAutoreleasedReturnValue();
            v153 = v20;
            v37 = &qword_1ED887000;
            v38 = v20;
            if (v166 >= 1)
            {
              p_vtable = &OBJC_METACLASS___PLThermalMonitorService.vtable;
              v40 = &OBJC_METACLASS___PLThermalMonitorService.vtable;
              v38 = v20;
              do
              {
                v41 = (double)*v38;
                *(double *)&qword_1ED8877B0 = *(double *)&qword_1ED8877B0 + v41;
                -[PLBatteryAgent rawBatteryVoltageVolt](self, "rawBatteryVoltageVolt");
                *(double *)&qword_1ED8877B8 = *(double *)&qword_1ED8877B8 + v42 * v41 / -3600.0;
                if (objc_msgSend(*(id *)(v3 + 4000), "debugEnabled"))
                {
                  v43 = objc_opt_class();
                  v162[0] = MEMORY[0x1E0C809B0];
                  v162[1] = 3221225472;
                  v162[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3433;
                  v162[3] = &__block_descriptor_40_e5_v8__0lu32l8;
                  v162[4] = v43;
                  v44 = v162;
                  if (qword_1ED8877E0 != -1)
                    dispatch_once(&qword_1ED8877E0, v44);

                  if (byte_1ED88759C)
                  {
                    v45 = v40;
                    v46 = p_vtable;
                    v47 = (void *)MEMORY[0x1E0CB3940];
                    -[PLBatteryAgent rawBatteryVoltageVolt](self, "rawBatteryVoltageVolt");
                    objc_msgSend(v47, "stringWithFormat:", CFSTR("======================= Device Battery - Adding: %f"), v48 * -v41 / 3600.0);
                    v49 = (void *)objc_claimAutoreleasedReturnValue();
                    v50 = (void *)MEMORY[0x1E0D7FF98];
                    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                    v51 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v51, "lastPathComponent");
                    v52 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
                    v53 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v50, "logMessage:fromFile:fromFunction:fromLineNumber:", v49, v52, v53, 8037);

                    PLLogCommon();
                    v54 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEBUG))
                    {
                      *(_DWORD *)buf = 138412290;
                      v169 = v49;
                      _os_log_debug_impl(&dword_1CAF47000, v54, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                    }

                    v3 = 0x1E0D7F000;
                    v20 = v153;
                    v37 = &qword_1ED887000;
                    p_vtable = v46;
                    v40 = v45;
                  }
                }
                if (*((double *)p_vtable + 73) > v41)
                {
                  _MergedGlobals_2 = *(_QWORD *)&v41;
                  *(double *)&qword_1ED882258 = (double)v38[4] / 1000000.0 + (double)*((uint64_t *)v38 + 1);
                }
                if (*((double *)v40 + 74) < v41)
                {
                  qword_1ED882250 = *(_QWORD *)&v41;
                  *(double *)&qword_1ED882260 = (double)v38[4] / 1000000.0 + (double)*((uint64_t *)v38 + 1);
                }
                ++*((_DWORD *)v37 + 366);
                v38 += 6;
              }
              while (v38 < &v20[6 * v166]);
            }
            objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", (double)v20[4] / 1000000.0 + (double)*((uint64_t *)v20 + 1));
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v69, "convertFromSystemToMonotonic");
            v70 = (void *)objc_claimAutoreleasedReturnValue();

            if (!qword_1ED8877A8)
              objc_storeStrong((id *)&qword_1ED8877A8, v70);
            objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", (double)*(v38 - 2) / 1000000.0 + (double)*((uint64_t *)v38 - 2) + 1.0);
            v71 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v71, "convertFromSystemToMonotonic");
            v72 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v72, "timeIntervalSinceDate:", qword_1ED8877A8);
            v74 = v73;
            v75 = MEMORY[0x1E0C809B0];
            v161[0] = MEMORY[0x1E0C809B0];
            v161[1] = 3221225472;
            v161[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3437;
            v161[3] = &unk_1E85780C8;
            v161[4] = self;
            v76 = v161;
            if (qword_1ED8877E8 != -1)
              dispatch_once(&qword_1ED8877E8, v76);

            if (v74 > *(double *)&qword_1ED8877F0)
            {
              if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
              {
                v160[0] = v75;
                v160[1] = 3221225472;
                v160[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_2;
                v160[3] = &__block_descriptor_40_e5_v8__0lu32l8;
                v160[4] = objc_opt_class();
                v77 = v160;
                if (qword_1ED8877F8 != -1)
                  dispatch_once(&qword_1ED8877F8, v77);

                if (byte_1ED88759D)
                {
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("duration=%f"), *(_QWORD *)&v74);
                  v78 = (void *)objc_claimAutoreleasedReturnValue();
                  v79 = (void *)MEMORY[0x1E0D7FF98];
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                  v80 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v80, "lastPathComponent");
                  v81 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
                  v82 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v79, "logMessage:fromFile:fromFunction:fromLineNumber:", v78, v81, v82, 8064);

                  PLLogCommon();
                  v83 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v83, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)buf = 138412290;
                    v169 = v78;
                    _os_log_debug_impl(&dword_1CAF47000, v83, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                  }

                  v37 = &qword_1ED887000;
                }
              }
              v84 = *((_DWORD *)v37 + 366);
              v85 = 0.0;
              if (v84 >= 1)
                v85 = *(double *)&qword_1ED8877B0 / (double)v84;
              v87 = *(double *)&qword_1ED8877B8 / (v74 / 3600.0);
              v88 = (void *)MEMORY[0x1E0CB37E8];
              objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", *(double *)&qword_1ED882258);
              v89 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v89, "convertFromSystemToMonotonic");
              v90 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v90, "timeIntervalSinceDate:", qword_1ED8877A8);
              objc_msgSend(v88, "numberWithDouble:");
              v91 = objc_claimAutoreleasedReturnValue();

              v92 = (void *)MEMORY[0x1E0CB37E8];
              objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", *(double *)&qword_1ED882260);
              v93 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v93, "convertFromSystemToMonotonic");
              v94 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v94, "timeIntervalSinceDate:", qword_1ED8877A8);
              objc_msgSend(v92, "numberWithDouble:");
              v95 = objc_claimAutoreleasedReturnValue();

              v96 = objc_alloc(MEMORY[0x1E0D7FFB0]);
              v97 = (void *)objc_msgSend(v96, "initWithEntryKey:withDate:", v152, qword_1ED8877A8);
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v72, CFSTR("timestampEnd"));
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v85);
              v98 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v98, CFSTR("AvgCurrent"));

              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)&_MergedGlobals_2);
              v99 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v99, CFSTR("MinCurrent"));

              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)&qword_1ED882250);
              v100 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v100, CFSTR("MaxCurrent"));

              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", dword_1ED8875B8);
              v101 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v101, CFSTR("Readings"));

              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)&qword_1ED8877B8);
              v102 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v102, CFSTR("TotalEnergy"));

              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v87);
              v103 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v103, CFSTR("AvgPower"));

              v151 = (void *)v91;
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v91, CFSTR("MinCurrentOffset"));
              v150 = (void *)v95;
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v95, CFSTR("MaxCurrentOffset"));
              v104 = *(double *)&qword_1ED8877B8;
              -[PLBatteryAgent EAEnergyDrained](self, "EAEnergyDrained");
              v106 = fmax(v104 + v105, 0.0);
              v86 = v74 / 3600.0;
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v106);
              v107 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v107, CFSTR("OverAllEnergy"));

              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v106 / (v74 / 3600.0));
              v108 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v97, "setObject:forKeyedSubscript:", v108, CFSTR("OverAllPower"));

              -[PLOperator logEntry:](self, "logEntry:", v97);
              v109 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
              v110 = MEMORY[0x1E0C809B0];
              if (v109)
              {
                v159[0] = MEMORY[0x1E0C809B0];
                v159[1] = 3221225472;
                v159[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3444;
                v159[3] = &__block_descriptor_40_e5_v8__0lu32l8;
                v159[4] = objc_opt_class();
                v111 = v159;
                if (qword_1ED887800 != -1)
                  dispatch_once(&qword_1ED887800, v111);

                if (byte_1ED88759E)
                {
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("======================= Adding energy to accounting, duration: %f"), *(_QWORD *)&v74);
                  v112 = (void *)objc_claimAutoreleasedReturnValue();
                  v113 = (void *)MEMORY[0x1E0D7FF98];
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                  v114 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v114, "lastPathComponent");
                  v115 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
                  v116 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v113, "logMessage:fromFile:fromFunction:fromLineNumber:", v112, v115, v116, 8093);

                  PLLogCommon();
                  v117 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v117, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)buf = 138412290;
                    v169 = v112;
                    _os_log_debug_impl(&dword_1CAF47000, v117, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                  }

                  v110 = MEMORY[0x1E0C809B0];
                }
              }
              if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
              {
                v158[0] = v110;
                v158[1] = 3221225472;
                v158[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3449;
                v158[3] = &__block_descriptor_40_e5_v8__0lu32l8;
                v158[4] = objc_opt_class();
                v118 = v158;
                if (qword_1ED887808 != -1)
                  dispatch_once(&qword_1ED887808, v118);

                if (byte_1ED88759F)
                {
                  v119 = (void *)MEMORY[0x1E0CB3940];
                  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)&qword_1ED8877B8);
                  v120 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v119, "stringWithFormat:", CFSTR("======================= Local Battery: Energy drained %@"), v120);
                  v121 = (void *)objc_claimAutoreleasedReturnValue();

                  v122 = (void *)MEMORY[0x1E0D7FF98];
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                  v123 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v123, "lastPathComponent");
                  v124 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
                  v125 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v122, "logMessage:fromFile:fromFunction:fromLineNumber:", v121, v124, v125, 8094);

                  PLLogCommon();
                  v126 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v126, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)buf = 138412290;
                    v169 = v121;
                    _os_log_debug_impl(&dword_1CAF47000, v126, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                  }

                  v110 = MEMORY[0x1E0C809B0];
                }
              }
              if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
              {
                v157[0] = v110;
                v157[1] = 3221225472;
                v157[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3454;
                v157[3] = &__block_descriptor_40_e5_v8__0lu32l8;
                v157[4] = objc_opt_class();
                v127 = v157;
                if (qword_1ED887810 != -1)
                  dispatch_once(&qword_1ED887810, v127);

                if (byte_1ED8875A0)
                {
                  v128 = (void *)MEMORY[0x1E0CB3940];
                  v129 = (void *)MEMORY[0x1E0CB37E8];
                  -[PLBatteryAgent EAEnergyDrained](self, "EAEnergyDrained");
                  objc_msgSend(v129, "numberWithDouble:");
                  v130 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v128, "stringWithFormat:", CFSTR("======================= B244: Energy Drained %@"), v130);
                  v131 = (void *)objc_claimAutoreleasedReturnValue();

                  v132 = (void *)MEMORY[0x1E0D7FF98];
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                  v133 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v133, "lastPathComponent");
                  v134 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
                  v135 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v132, "logMessage:fromFile:fromFunction:fromLineNumber:", v131, v134, v135, 8095);

                  PLLogCommon();
                  v136 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v136, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)buf = 138412290;
                    v169 = v131;
                    _os_log_debug_impl(&dword_1CAF47000, v136, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                  }

                  v110 = MEMORY[0x1E0C809B0];
                }
              }
              if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
              {
                v156[0] = v110;
                v156[1] = 3221225472;
                v156[2] = __30__PLBatteryAgent_gasGaugeRead__block_invoke_3459;
                v156[3] = &__block_descriptor_40_e5_v8__0lu32l8;
                v156[4] = objc_opt_class();
                v137 = v156;
                if (qword_1ED887818 != -1)
                  dispatch_once(&qword_1ED887818, v137);

                if (byte_1ED8875A1)
                {
                  v138 = (void *)MEMORY[0x1E0CB3940];
                  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v106);
                  v139 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v106 / v86);
                  v140 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v138, "stringWithFormat:", CFSTR("======================= Overall Energy Drained %@, Power %@"), v139, v140);
                  v141 = (void *)objc_claimAutoreleasedReturnValue();

                  v142 = (void *)MEMORY[0x1E0D7FF98];
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
                  v143 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v143, "lastPathComponent");
                  v144 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent gasGaugeRead]");
                  v145 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v142, "logMessage:fromFile:fromFunction:fromLineNumber:", v141, v144, v145, 8096);

                  PLLogCommon();
                  v146 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v146, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)buf = 138412290;
                    v169 = v141;
                    _os_log_debug_impl(&dword_1CAF47000, v146, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
                  }

                }
              }
              v147 = -[PLBatteryAgent givePluggedInFreePass](self, "givePluggedInFreePass");
              v148 = 0.0;
              if (!v147)
                v148 = v106 / v86;
              -[PLBatteryAgent addPowerMeasurementToAccounting:withStartDate:withEndDate:](self, "addPowerMeasurementToAccounting:withStartDate:withEndDate:", qword_1ED8877A8, v72, v148);
              v149 = (void *)qword_1ED8877A8;
              qword_1ED8877A8 = 0;

              qword_1ED8877B0 = 0;
              qword_1ED8877B8 = 0;
              _MergedGlobals_2 = 0x7FEFFFFFFFFFFFFFLL;
              qword_1ED882250 = 0xFFEFFFFFFFFFFFFFLL;
              qword_1ED882258 = 0xBFF0000000000000;
              qword_1ED882260 = 0xBFF0000000000000;
              dword_1ED8875B8 = 0;
              -[PLBatteryAgent setEAEnergyDrained:](self, "setEAEnergyDrained:", 0.0);

            }
            v20 = v153;
          }
          free(v20);
        }
        -[PLBatteryAgent setGasGaugeConsecutiveEmptyEntriesCount:](self, "setGasGaugeConsecutiveEmptyEntriesCount:", 0);
      }
    }
  }
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887598 = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3418(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED887599 = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3423(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88759A = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3428(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88759B = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3433(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88759C = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3437(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "defaultDoubleForKey:", CFSTR("GasGaugeLogInterval"));
  qword_1ED8877F0 = v2;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88759D = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3444(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88759E = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3449(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED88759F = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3454(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A0 = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3459(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A1 = result;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_3464(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "defaultDoubleForKey:", CFSTR("GasGaugeConsecutiveEmptyEntriesCountThreshold"));
  qword_1ED887828 = v2;
  return result;
}

uint64_t __30__PLBatteryAgent_gasGaugeRead__block_invoke_2_3467(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A2 = result;
  return result;
}

uint64_t __51__PLBatteryAgent_logCurrentAccumulatorWithRawData___block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(a1 + 32), "defaultDoubleForKey:", CFSTR("RateLimiterCurrentAccumulator"));
  qword_1ED887840 = v2;
  return result;
}

void __51__PLBatteryAgent_logCurrentAccumulatorWithRawData___block_invoke_2(uint64_t a1, void *a2, int a3)
{
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v4 = (void *)MEMORY[0x1E0CB3940];
  v5 = (a3 + 1);
  v6 = a2;
  objc_msgSend(v4, "stringWithFormat:", CFSTR("Cell%dCurrentAccumulator"), v5);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v7);

}

- (void)accountGaugePowerFromCurrentAccumulatorEntry:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  int v25;
  double v26;
  double v27;
  double v28;
  _BOOL4 v29;
  void *v31;
  id v32;

  v4 = a3;
  if (v4)
  {
    v32 = v4;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CurrentAccumulator"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v32;
    if (v5)
    {
      objc_msgSend(v32, "objectForKeyedSubscript:", CFSTR("CurrentAccumulatorCount"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      v4 = v32;
      if (v6)
      {
        objc_msgSend(v32, "objectForKeyedSubscript:", CFSTR("CurrentAccumulator"));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v7, "intValue");

        objc_msgSend(v32, "objectForKeyedSubscript:", CFSTR("CurrentAccumulatorCount"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "intValue");

        v11 = (void *)MEMORY[0x1E0C99D68];
        objc_msgSend(v32, "objectForKeyedSubscript:", CFSTR("timestamp"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "doubleValue");
        objc_msgSend(v11, "dateWithTimeIntervalSince1970:");
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (!-[PLBatteryAgent previousCurrentAccumulator](self, "previousCurrentAccumulator")
          || !-[PLBatteryAgent previousCurrentAccumulatorCount](self, "previousCurrentAccumulatorCount")
          || (-[PLBatteryAgent previousCurrentAccumulatorDate](self, "previousCurrentAccumulatorDate"),
              v14 = (void *)objc_claimAutoreleasedReturnValue(),
              v14,
              !v14))
        {
          +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("CurrentAccumulator"));
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLOperator storage](self, "storage");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "lastEntryForKey:", v15);
          v17 = (void *)objc_claimAutoreleasedReturnValue();

          if (v17)
          {
            objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("CurrentAccumulator"));
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            if (v18)
            {
              objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("CurrentAccumulator"));
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              -[PLBatteryAgent setPreviousCurrentAccumulator:](self, "setPreviousCurrentAccumulator:", objc_msgSend(v19, "intValue"));

            }
            objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("CurrentAccumulatorCount"));
            v20 = (void *)objc_claimAutoreleasedReturnValue();

            if (v20)
            {
              objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("CurrentAccumulatorCount"));
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              -[PLBatteryAgent setPreviousCurrentAccumulatorCount:](self, "setPreviousCurrentAccumulatorCount:", objc_msgSend(v21, "intValue"));

            }
            v22 = (void *)MEMORY[0x1E0C99D68];
            objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("timestamp"));
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "doubleValue");
            objc_msgSend(v22, "dateWithTimeIntervalSince1970:");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLBatteryAgent setPreviousCurrentAccumulatorDate:](self, "setPreviousCurrentAccumulatorDate:", v24);

          }
          if (!-[PLBatteryAgent previousCurrentAccumulator](self, "previousCurrentAccumulator")
            || !-[PLBatteryAgent previousCurrentAccumulatorCount](self, "previousCurrentAccumulatorCount"))
          {
            -[PLBatteryAgent setPreviousCurrentAccumulator:](self, "setPreviousCurrentAccumulator:", v8);
            -[PLBatteryAgent setPreviousCurrentAccumulatorCount:](self, "setPreviousCurrentAccumulatorCount:", v10);
            -[PLBatteryAgent setPreviousCurrentAccumulatorDate:](self, "setPreviousCurrentAccumulatorDate:", v13);

LABEL_25:
            v4 = v32;
            goto LABEL_26;
          }

        }
        if ((int)v10 > -[PLBatteryAgent previousCurrentAccumulatorCount](self, "previousCurrentAccumulatorCount"))
        {
          v25 = -[PLBatteryAgent previousCurrentAccumulator](self, "previousCurrentAccumulator") - v8;
          v26 = (double)v25
              / (double)(int)(v10
                            - -[PLBatteryAgent previousCurrentAccumulatorCount](self, "previousCurrentAccumulatorCount"));
          -[PLBatteryAgent rawBatteryVoltageVolt](self, "rawBatteryVoltageVolt");
          v28 = v27 * v26;
          v29 = -[PLBatteryAgent givePluggedInFreePass](self, "givePluggedInFreePass");
          if (v28 <= 0.0 || v29)
            v28 = 0.0;
          -[PLBatteryAgent previousCurrentAccumulatorDate](self, "previousCurrentAccumulatorDate");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          -[PLBatteryAgent addPowerMeasurementToAccounting:withStartDate:withEndDate:](self, "addPowerMeasurementToAccounting:withStartDate:withEndDate:", v31, v13, v28);

        }
        -[PLBatteryAgent setPreviousCurrentAccumulator:](self, "setPreviousCurrentAccumulator:", v8);
        -[PLBatteryAgent setPreviousCurrentAccumulatorCount:](self, "setPreviousCurrentAccumulatorCount:", v10);
        -[PLBatteryAgent setPreviousCurrentAccumulatorDate:](self, "setPreviousCurrentAccumulatorDate:", v13);
        goto LABEL_25;
      }
    }
  }
LABEL_26:

}

- (BOOL)shouldWaitForLifetimeDataWithRawData:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  int v8;
  const char *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  if ((objc_msgSend(MEMORY[0x1E0D80020], "isWatch") & 1) != 0)
  {
LABEL_8:
    LOBYTE(v4) = 0;
    goto LABEL_9;
  }
  if ((objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:ifNotSet:", CFSTR("ForceFullGGUpdateOnBoot"), 1) & 1) == 0)
  {
    PLLogBH();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 136315138;
      v9 = "ForceFullGGUpdateOnBoot";
      _os_log_error_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_ERROR, "Bypassing %s", (uint8_t *)&v8, 0xCu);
    }

    goto LABEL_8;
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ForceFullGGUpdateOnBoot"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ForceFullGGUpdateOnBoot"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v4) = objc_msgSend(v5, "BOOLValue");

  }
LABEL_9:

  return (char)v4;
}

- (int64_t)xFlags
{
  void *v2;
  CFMutableDictionaryRef v3;
  const __CFDictionary *v4;
  BOOL v5;
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  void *v34;
  void *v35;
  char v36;
  int64_t v37;
  uint64_t v38;
  NSObject *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  NSObject *v44;
  uint64_t v46;
  NSObject *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  NSObject *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  int v60;
  uint64_t v61;
  NSObject *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  NSObject *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  NSObject *v74;
  NSObject *v75;
  uint64_t v76;
  NSObject *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  NSObject *v82;
  uint64_t v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  NSObject *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  NSObject *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  void *v98;
  uint64_t v99;
  _QWORD v100[5];
  _QWORD v101[5];
  _QWORD v102[5];
  _QWORD v103[5];
  _QWORD v104[5];
  _QWORD v105[5];
  _QWORD v106[5];
  _QWORD v107[5];
  _QWORD block[5];
  _QWORD v109[5];
  uint8_t buf[4];
  NSObject *v111;
  uint64_t v112;

  v112 = *MEMORY[0x1E0C80C00];
  v2 = IOServiceMatching("IOPMPowerSource");
  v3 = IOServiceMatching("AppleAuthCPRelay");
  v4 = v3;
  if (v3)
    v5 = v2 == 0;
  else
    v5 = 1;
  if (v5)
  {
    if (v3)
      CFRelease(v3);
    if (!v2)
      goto LABEL_43;
    CFRelease(v2);
LABEL_42:
    v2 = 0;
LABEL_43:
    v37 = 1;
    goto LABEL_44;
  }
  CFDictionarySetValue(v3, CFSTR("IOParentMatch"), v2);
  CFRelease(v2);
  objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", IOServiceGetMatchingService(*MEMORY[0x1E0CBBAB8], v4));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
  if (!v2)
  {
    if (v6)
    {
      v38 = objc_opt_class();
      v109[0] = MEMORY[0x1E0C809B0];
      v109[1] = 3221225472;
      v109[2] = __24__PLBatteryAgent_xFlags__block_invoke;
      v109[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v109[4] = v38;
      if (qword_1ED887848 != -1)
        dispatch_once(&qword_1ED887848, v109);
      if (byte_1ED8875A3)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unable to snapshot %s"), "AppleAuthCPRelay");
        v39 = objc_claimAutoreleasedReturnValue();
        v40 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "lastPathComponent");
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "logMessage:fromFile:fromFunction:fromLineNumber:", v39, v42, v43, 8253);

        PLLogCommon();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v111 = v39;
          _os_log_debug_impl(&dword_1CAF47000, v44, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
    goto LABEL_42;
  }
  if (v6)
  {
    v7 = objc_opt_class();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __24__PLBatteryAgent_xFlags__block_invoke_3491;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = v7;
    if (qword_1ED887850 != -1)
      dispatch_once(&qword_1ED887850, block);
    if (byte_1ED8875A4)
    {
      v8 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("isTrustedForUI"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "stringWithFormat:", CFSTR("isTrustedForUI: %@"), v9);
      v10 = objc_claimAutoreleasedReturnValue();

      v11 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "lastPathComponent");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "logMessage:fromFile:fromFunction:fromLineNumber:", v10, v13, v14, 8258);

      PLLogCommon();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v111 = v10;
        _os_log_debug_impl(&dword_1CAF47000, v15, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v16 = objc_opt_class();
    v107[0] = MEMORY[0x1E0C809B0];
    v107[1] = 3221225472;
    v107[2] = __24__PLBatteryAgent_xFlags__block_invoke_3498;
    v107[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v107[4] = v16;
    if (qword_1ED887858 != -1)
      dispatch_once(&qword_1ED887858, v107);
    if (byte_1ED8875A5)
    {
      v17 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("AuthPassed"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "stringWithFormat:", CFSTR("AuthPassed: %@"), v18);
      v19 = objc_claimAutoreleasedReturnValue();

      v20 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "lastPathComponent");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "logMessage:fromFile:fromFunction:fromLineNumber:", v19, v22, v23, 8259);

      PLLogCommon();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v111 = v19;
        _os_log_debug_impl(&dword_1CAF47000, v24, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v25 = objc_opt_class();
    v106[0] = MEMORY[0x1E0C809B0];
    v106[1] = 3221225472;
    v106[2] = __24__PLBatteryAgent_xFlags__block_invoke_3505;
    v106[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v106[4] = v25;
    if (qword_1ED887860 != -1)
      dispatch_once(&qword_1ED887860, v106);
    if (byte_1ED8875A6)
    {
      v26 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("FdrValidationStatus"));
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "stringWithFormat:", CFSTR("FDR Val St: %@"), v27);
      v28 = objc_claimAutoreleasedReturnValue();

      v29 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "lastPathComponent");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "logMessage:fromFile:fromFunction:fromLineNumber:", v28, v31, v32, 8260);

      PLLogCommon();
      v33 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v111 = v28;
        _os_log_debug_impl(&dword_1CAF47000, v33, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("isTrustedForUI"));
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  if (v34)
  {
    objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("isTrustedForUI"));
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = objc_msgSend(v35, "BOOLValue");

    if ((v36 & 1) != 0)
    {
      v37 = 4;
      goto LABEL_61;
    }
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v53 = objc_opt_class();
      v105[0] = MEMORY[0x1E0C809B0];
      v105[1] = 3221225472;
      v105[2] = __24__PLBatteryAgent_xFlags__block_invoke_3512;
      v105[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v105[4] = v53;
      if (qword_1ED887868 != -1)
        dispatch_once(&qword_1ED887868, v105);
      if (byte_1ED8875A7)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("isTrustedForUI failed"));
        v47 = objc_claimAutoreleasedReturnValue();
        v54 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v55, "lastPathComponent");
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
        v57 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v54, "logMessage:fromFile:fromFunction:fromLineNumber:", v47, v56, v57, 8267);

        PLLogCommon();
        v52 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v52, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v111 = v47;
          _os_log_debug_impl(&dword_1CAF47000, v52, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }
        v37 = 0;
LABEL_58:

        goto LABEL_61;
      }
    }
    v37 = 0;
  }
  else
  {
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v46 = objc_opt_class();
      v104[0] = MEMORY[0x1E0C809B0];
      v104[1] = 3221225472;
      v104[2] = __24__PLBatteryAgent_xFlags__block_invoke_3517;
      v104[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v104[4] = v46;
      if (qword_1ED887870 != -1)
        dispatch_once(&qword_1ED887870, v104);
      if (byte_1ED8875A8)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("isTrustedForUI missing"));
        v47 = objc_claimAutoreleasedReturnValue();
        v48 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v49, "lastPathComponent");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v48, "logMessage:fromFile:fromFunction:fromLineNumber:", v47, v50, v51, 8271);

        PLLogCommon();
        v52 = objc_claimAutoreleasedReturnValue();
        v37 = 2;
        if (os_log_type_enabled(v52, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v111 = v47;
          v37 = 2;
          _os_log_debug_impl(&dword_1CAF47000, v52, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }
        goto LABEL_58;
      }
    }
    v37 = 2;
  }
LABEL_61:
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("AuthPassed"));
  v58 = (void *)objc_claimAutoreleasedReturnValue();

  if (v58)
  {
    objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("AuthPassed"));
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    v60 = objc_msgSend(v59, "BOOLValue");

    if (v60)
    {
      v37 |= 0x10uLL;
      goto LABEL_76;
    }
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v68 = objc_opt_class();
      v103[0] = MEMORY[0x1E0C809B0];
      v103[1] = 3221225472;
      v103[2] = __24__PLBatteryAgent_xFlags__block_invoke_3522;
      v103[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v103[4] = v68;
      if (qword_1ED887878 != -1)
        dispatch_once(&qword_1ED887878, v103);
      if (byte_1ED8875A9)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Auth Failed"));
        v62 = objc_claimAutoreleasedReturnValue();
        v69 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v70 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v70, "lastPathComponent");
        v71 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
        v72 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v69, "logMessage:fromFile:fromFunction:fromLineNumber:", v62, v71, v72, 8279);

        PLLogCommon();
        v67 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v67, OS_LOG_TYPE_DEBUG))
          goto LABEL_75;
        *(_DWORD *)buf = 138412290;
        v111 = v62;
        goto LABEL_103;
      }
    }
  }
  else
  {
    v37 |= 8uLL;
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v61 = objc_opt_class();
      v102[0] = MEMORY[0x1E0C809B0];
      v102[1] = 3221225472;
      v102[2] = __24__PLBatteryAgent_xFlags__block_invoke_3527;
      v102[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      v102[4] = v61;
      if (qword_1ED887880 != -1)
        dispatch_once(&qword_1ED887880, v102);
      if (byte_1ED8875AA)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("AuthPassed missing"));
        v62 = objc_claimAutoreleasedReturnValue();
        v63 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v64, "lastPathComponent");
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
        v66 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v63, "logMessage:fromFile:fromFunction:fromLineNumber:", v62, v65, v66, 8283);

        PLLogCommon();
        v67 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v67, OS_LOG_TYPE_DEBUG))
        {
LABEL_75:

          goto LABEL_76;
        }
        *(_DWORD *)buf = 138412290;
        v111 = v62;
LABEL_103:
        _os_log_debug_impl(&dword_1CAF47000, v67, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        goto LABEL_75;
      }
    }
  }
LABEL_76:
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("FdrValidationStatus"));
  v73 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v73)
  {
    v37 |= 0x20uLL;
    if (!objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
      goto LABEL_95;
    v83 = objc_opt_class();
    v100[0] = MEMORY[0x1E0C809B0];
    v100[1] = 3221225472;
    v100[2] = __24__PLBatteryAgent_xFlags__block_invoke_3539;
    v100[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v100[4] = v83;
    if (qword_1ED887890 != -1)
      dispatch_once(&qword_1ED887890, v100);
    if (!byte_1ED8875AC)
      goto LABEL_95;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("FDR Validation Missing"));
    v75 = objc_claimAutoreleasedReturnValue();
    v84 = (void *)MEMORY[0x1E0D7FF98];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v85, "lastPathComponent");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v84, "logMessage:fromFile:fromFunction:fromLineNumber:", v75, v86, v87, 8296);

    PLLogCommon();
    v77 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v77, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v111 = v75;
      _os_log_debug_impl(&dword_1CAF47000, v77, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
    }
LABEL_93:

    goto LABEL_94;
  }
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("FdrValidationStatus"));
  v74 = objc_claimAutoreleasedReturnValue();
  v75 = v74;
  if (!v74 || !-[NSObject isEqualToString:](v74, "isEqualToString:", CFSTR("Pass")))
  {
    if (!objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
      goto LABEL_94;
    v76 = objc_opt_class();
    v101[0] = MEMORY[0x1E0C809B0];
    v101[1] = 3221225472;
    v101[2] = __24__PLBatteryAgent_xFlags__block_invoke_3534;
    v101[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v101[4] = v76;
    if (qword_1ED887888 != -1)
      dispatch_once(&qword_1ED887888, v101);
    if (!byte_1ED8875AB)
      goto LABEL_94;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("FDR Validation Failed: %@"), v75);
    v77 = objc_claimAutoreleasedReturnValue();
    v78 = (void *)MEMORY[0x1E0D7FF98];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v79, "lastPathComponent");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v78, "logMessage:fromFile:fromFunction:fromLineNumber:", v77, v80, v81, 8292);

    PLLogCommon();
    v82 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v82, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v111 = v77;
      _os_log_debug_impl(&dword_1CAF47000, v82, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
    }

    goto LABEL_93;
  }
  v37 |= 0x40uLL;
LABEL_94:

LABEL_95:
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v88 = objc_opt_class();
    v95 = MEMORY[0x1E0C809B0];
    v96 = 3221225472;
    v97 = __24__PLBatteryAgent_xFlags__block_invoke_3544;
    v98 = &__block_descriptor_40_e5_v8__0lu32l8;
    v99 = v88;
    if (qword_1ED887898 != -1)
      dispatch_once(&qword_1ED887898, &v95);
    if (byte_1ED8875AD)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Got auth flags: %ld"), v37, v95, v96, v97, v98, v99);
      v89 = objc_claimAutoreleasedReturnValue();
      v90 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v91 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v91, "lastPathComponent");
      v92 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent xFlags]");
      v93 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v90, "logMessage:fromFile:fromFunction:fromLineNumber:", v89, v92, v93, 8298);

      PLLogCommon();
      v94 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v94, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v111 = v89;
        _os_log_debug_impl(&dword_1CAF47000, v94, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
LABEL_44:

  return v37;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A3 = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3491(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A4 = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3498(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A5 = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3505(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A6 = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3512(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A7 = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3517(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A8 = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3522(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875A9 = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3527(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875AA = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3534(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875AB = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3539(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875AC = result;
  return result;
}

uint64_t __24__PLBatteryAgent_xFlags__block_invoke_3544(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875AD = result;
  return result;
}

- (void)setupCSMLogging
{
  NSDate *v3;
  NSDate *csmLastFlushMonotonicDate;
  double v5;
  NSObject *v6;
  NSObject *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  double csmFlushInterval;
  _QWORD v16[5];
  _QWORD v17[5];
  uint8_t buf[4];
  double v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
  v3 = (NSDate *)objc_claimAutoreleasedReturnValue();
  csmLastFlushMonotonicDate = self->_csmLastFlushMonotonicDate;
  self->_csmLastFlushMonotonicDate = v3;

  -[PLOperator defaultDoubleForKey:](self, "defaultDoubleForKey:", CFSTR("RateLimiterCSMAggdUpdate"));
  self->_csmFlushInterval = v5;
  PLLogCommon();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    csmFlushInterval = self->_csmFlushInterval;
    *(_DWORD *)buf = 134217984;
    v19 = csmFlushInterval;
    _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "csm: flush interval %f", buf, 0xCu);
  }

  self->_csmTotalCount = 0;
  self->_csmFailureCount = 0;
  self->_csmOverrideValue = 0;
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "BOOLForKey:ifNotSet:", CFSTR("PLDebugService_Enabled"), 0))
  {
    PLLogCommon();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_DEFAULT, "csm: enabling debug notifications", buf, 2u);
    }

    v8 = objc_alloc(MEMORY[0x1E0D7FF80]);
    -[PLOperator workQueue](self, "workQueue");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = MEMORY[0x1E0C809B0];
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __33__PLBatteryAgent_setupCSMLogging__block_invoke;
    v17[3] = &unk_1E8577F48;
    v17[4] = self;
    v11 = (void *)objc_msgSend(v8, "initWithWorkQueue:forNotification:requireState:withBlock:", v9, CFSTR("com.apple.powerlogd.csm.override"), 1, v17);
    -[PLBatteryAgent setCsmOverrideNotification:](self, "setCsmOverrideNotification:", v11);

    v12 = objc_alloc(MEMORY[0x1E0D7FF80]);
    -[PLOperator workQueue](self, "workQueue");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v16[0] = v10;
    v16[1] = 3221225472;
    v16[2] = __33__PLBatteryAgent_setupCSMLogging__block_invoke_3553;
    v16[3] = &unk_1E8577F48;
    v16[4] = self;
    v14 = (void *)objc_msgSend(v12, "initWithWorkQueue:forNotification:requireState:withBlock:", v13, CFSTR("com.apple.powerlogd.csm.flush"), 0, v16);
    -[PLBatteryAgent setCsmFlushNotification:](self, "setCsmFlushNotification:", v14);

  }
}

void __33__PLBatteryAgent_setupCSMLogging__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  NSObject *v4;
  int v5;
  _DWORD v6[2];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "objectForKeyedSubscript:");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setCsmOverrideValue:", objc_msgSend(v3, "intValue") != 0);
  PLLogCommon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = objc_msgSend(*(id *)(a1 + 32), "csmOverrideValue");
    v6[0] = 67109120;
    v6[1] = v5;
    _os_log_impl(&dword_1CAF47000, v4, OS_LOG_TYPE_DEFAULT, "csm: setting override %d", (uint8_t *)v6, 8u);
  }

}

void __33__PLBatteryAgent_setupCSMLogging__block_invoke_3553(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  uint8_t v5[16];

  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_DEFAULT, "csm: flushing due to notification", v5, 2u);
  }

  v3 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "flushCSMToAggdAtDate:", v4);

}

- (void)updateCurrentSenseMonitorStatusWithEntry:(id)a3
{
  id v4;
  void *v5;
  int v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v4 = a3;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CurrentSenseMonitorStatus"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "intValue");

  if (v6)
    -[PLBatteryAgent setCsmFailureCount:](self, "setCsmFailureCount:", -[PLBatteryAgent csmFailureCount](self, "csmFailureCount") + 1);
  -[PLBatteryAgent setCsmTotalCount:](self, "setCsmTotalCount:", -[PLBatteryAgent csmTotalCount](self, "csmTotalCount") + 1);
  objc_msgSend(v4, "entryDate");
  v11 = (id)objc_claimAutoreleasedReturnValue();

  -[PLBatteryAgent csmLastFlushMonotonicDate](self, "csmLastFlushMonotonicDate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "timeIntervalSinceDate:", v7);
  v9 = v8;

  -[PLBatteryAgent csmFlushInterval](self, "csmFlushInterval");
  if (v9 > v10)
    -[PLBatteryAgent flushCSMToAggdAtDate:](self, "flushCSMToAggdAtDate:", v11);

}

- (void)flushCSMToAggdAtDate:(id)a3
{
  id v4;
  int64_t v5;
  int64_t v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  uint8_t buf[4];
  int64_t v13;
  __int16 v14;
  int64_t v15;
  _QWORD v16[2];
  _QWORD v17[3];

  v17[2] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = -[PLBatteryAgent csmTotalCount](self, "csmTotalCount");
  v6 = -[PLBatteryAgent csmFailureCount](self, "csmFailureCount");
  v16[0] = CFSTR("com.apple.power.battery.csm.totalCount");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v16[1] = CFSTR("com.apple.power.battery.csm.failureCount");
  v17[0] = v7;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v17, v16, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  PLLogCommon();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134218240;
    v13 = v5;
    v14 = 2048;
    v15 = v6;
    _os_log_debug_impl(&dword_1CAF47000, v10, OS_LOG_TYPE_DEBUG, "csm: updating aggd with total %lld failures %lld", buf, 0x16u);
  }

  MEMORY[0x1D179B7E8](v9, 0);
  v11 = MEMORY[0x1E0C809B0];
  AnalyticsSendEventLazy();
  -[PLBatteryAgent setCsmTotalCount:](self, "setCsmTotalCount:", 0, v11, 3221225472, __39__PLBatteryAgent_flushCSMToAggdAtDate___block_invoke, &__block_descriptor_48_e19___NSDictionary_8__0l, v5, v6);
  -[PLBatteryAgent setCsmFailureCount:](self, "setCsmFailureCount:", 0);
  -[PLBatteryAgent setCsmLastFlushMonotonicDate:](self, "setCsmLastFlushMonotonicDate:", v4);

}

id __39__PLBatteryAgent_flushCSMToAggdAtDate___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("totalCount"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, CFSTR("failureCount"));

  return v2;
}

void __37__PLBatteryAgent_logPowerOutDetails___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  int v13;
  void *v14;
  int v15;
  double v16;
  double v17;
  void *v18;
  int v19;
  double v20;
  double v21;
  void *v22;
  int v23;
  int v24;
  double v25;
  double v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  uint8_t buf[4];
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("PortIndex"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "intValue");

  if (v5 >= 8)
  {
    PLLogCommon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_ERROR, "powerout is happening in an illegal port", buf, 2u);
    }

  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("PowerOut%d"), v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v8, v3);
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("AccumulatorCount"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (double)(int)objc_msgSend(v10, "intValue");
  objc_msgSend(*(id *)(a1 + 32), "prevAccumulatorCount");
  v13 = (int)(v11 - v12);

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("AccumulatorErrorCount"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "intValue");
  objc_msgSend(*(id *)(a1 + 32), "prevAccumulatorErrorCount");
  v17 = v16;

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("AccumulatedPower"));
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "intValue");
  objc_msgSend(*(id *)(a1 + 32), "prevAccumulatedPower");
  v21 = v20;

  v22 = *(void **)(a1 + 32);
  if (v13 < 0 || (v23 = (int)((double)v15 - v17), v23 < 0) || (v24 = (int)((double)v19 - v21), v24 < 0))
  {
    objc_msgSend(v22, "setDeltaAccumulatorCount:", 0.0);
    objc_msgSend(*(id *)(a1 + 32), "setDeltaAccumulatorErrorCount:", 0.0);
    objc_msgSend(*(id *)(a1 + 32), "setDeltaAccumulatedPower:", 0.0);
    objc_msgSend(*(id *)(a1 + 32), "setPowerOutTotalCount:", 0.0);
    objc_msgSend(*(id *)(a1 + 32), "setPowerOutTotalPower:", 0.0);
  }
  else
  {
    objc_msgSend(v22, "prevAccumulatorCount");
    if (v25 > 0.0)
    {
      objc_msgSend(*(id *)(a1 + 32), "prevAccumulatedPower");
      if (v26 > 0.0)
      {
        objc_msgSend(*(id *)(a1 + 32), "setDeltaAccumulatorCount:", (double)v13);
        objc_msgSend(*(id *)(a1 + 32), "setDeltaAccumulatorErrorCount:", (double)v23);
        objc_msgSend(*(id *)(a1 + 32), "setDeltaAccumulatedPower:", (double)v24);
      }
    }
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("AccumulatorCount"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setPrevAccumulatorCount:", (double)(int)objc_msgSend(v27, "intValue"));

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("AccumulatorErrorCount"));
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setPrevAccumulatorErrorCount:", (double)(int)objc_msgSend(v28, "intValue"));

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("AccumulatedPower"));
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setPrevAccumulatedPower:", (double)(int)objc_msgSend(v29, "intValue"));

  if (_os_feature_enabled_impl())
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("FilteredPower"));
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "setFilteredPower:", (double)(int)objc_msgSend(v30, "intValue"));

    PLLogCommon();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
    {
      objc_msgSend(*(id *)(a1 + 32), "filteredPower");
      *(_DWORD *)buf = 134217984;
      v34 = v32;
      _os_log_impl(&dword_1CAF47000, v31, OS_LOG_TYPE_INFO, "Filtered Power: %f", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "accountUSBCPowerOut");
  }
  objc_msgSend(*(id *)(a1 + 32), "logEntry:", v9);

}

- (void)logAdapterDetailsEntry:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  __CFString *v8;
  __CFString *v9;
  void *v10;
  const __CFString *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  const __CFString *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;

  v23 = a3;
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], CFSTR("AdapterDetails"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v4);
  objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("Watts"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "intValue");

  objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("Manufacturer"));
  v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("Model"));
  v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if ((-[__CFString isEqualToString:](v8, "isEqualToString:", CFSTR("Apple, Inc")) & 1) != 0
    || -[__CFString isEqualToString:](v8, "isEqualToString:", CFSTR("Apple Inc.")))
  {
    v10 = v5;
    v11 = v8;
  }
  else
  {
    v11 = &stru_1E8587D00;
    v10 = v5;
  }
  objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, CFSTR("Manufacturer"));
  v12 = -[__CFString length](v9, "length");
  objc_msgSend(MEMORY[0x1E0CB3500], "alphanumericCharacterSet");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[__CFString stringByTrimmingCharactersInSet:](v9, "stringByTrimmingCharactersInSet:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "isEqualToString:", &stru_1E8587D00);

  if (-[__CFString hasPrefix:](v9, "hasPrefix:", CFSTR("0x")) && v12 == 6 && v15)
  {
    v16 = v5;
    v17 = v9;
  }
  else
  {
    v17 = &stru_1E8587D00;
    v16 = v5;
  }
  objc_msgSend(v16, "setObject:forKeyedSubscript:", v17, CFSTR("Model"));
  objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("IsWireless"));
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "BOOLValue");

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setObject:forKeyedSubscript:", v20, CFSTR("isWireless"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v7);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setObject:forKeyedSubscript:", v21, CFSTR("Watts"));

  objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("AdapterPowerTier"));
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setObject:forKeyedSubscript:", v22, CFSTR("AdapterPowerTier"));

  -[PLOperator logEntry:](self, "logEntry:", v5);
  -[PLBatteryAgent logAdapterDetailsToCA:](self, "logAdapterDetailsToCA:", v5);

}

- (void)logAdapterDetailsToCA:(id)a3
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;
  void *v7;
  uint8_t buf[4];
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  PLLogCommon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    objc_msgSend(v3, "dictionary");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v9 = v5;
    _os_log_impl(&dword_1CAF47000, v4, OS_LOG_TYPE_INFO, "Pushing AdapterDetails to CA: %@", buf, 0xCu);

  }
  v7 = v3;
  v6 = v3;
  AnalyticsSendEventLazy();

}

id __40__PLBatteryAgent_logAdapterDetailsToCA___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = (void *)objc_opt_new();
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("Model"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("AdapterModel"));

  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("Manufacturer"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, CFSTR("Manufacturer"));

  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("isWireless"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("isWireless"));

  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("Watts"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v6, CFSTR("Watts"));

  return v2;
}

- (void)flushPowerOut
{
  double v3;
  double v4;
  double v5;
  double v6;
  NSObject *v7;
  void *v8;
  void *v9;
  double v10;
  NSObject *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  const __CFString *v20;
  void *v21;
  uint8_t buf[4];
  double v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent powerOutTotalPower](self, "powerOutTotalPower");
  v4 = v3;
  -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
  v6 = fmax(v4 / v5, 0.0);
  PLLogCommon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134217984;
    v23 = v6;
    _os_log_debug_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_DEBUG, "Avg power: %f", buf, 0xCu);
  }

  v8 = (void *)MEMORY[0x1E0CB37E8];
  -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
  objc_msgSend(v8, "numberWithDouble:");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent filteredPower](self, "filteredPower");
  if (v10 < 250.0 && -[PLBatteryAgent headphonesConnected](self, "headphonesConnected"))
  {
    PLLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CAF47000, v11, OS_LOG_TYPE_DEFAULT, "headphones connected", buf, 2u);
    }

    v12 = &unk_1E864CFF8;
    v9 = &unk_1E8633B70;
  }
  else
  {
    v12 = &unk_1E864CFD0;
  }
  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  PLLogCommon();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    v23 = *(double *)&v12;
    _os_log_impl(&dword_1CAF47000, v14, OS_LOG_TYPE_INFO, "Distribution Weight: %@", buf, 0xCu);
  }

  objc_msgSend(MEMORY[0x1E0D7FED8], "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "createPowerEventBackwardWithRootNodeID:withPower:withEndDate:", 61, v13, v6);

  objc_msgSend(MEMORY[0x1E0D7FED8], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "createDistributionEventForwardWithDistributionID:withChildNodeNameToWeight:withStartDate:", 49, v12, v13);

  v20 = CFSTR("time");
  v21 = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = (void *)MEMORY[0x1E0D80078];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("com.apple.PerfPowerServices.powerOut"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "postNotificationName:object:userInfo:", v19, self, v17);

  -[PLBatteryAgent setPowerOutTotalCount:](self, "setPowerOutTotalCount:", 0.0);
  -[PLBatteryAgent setPowerOutTotalPower:](self, "setPowerOutTotalPower:", 0.0);

}

- (void)accountUSBCPowerOut
{
  NSObject *v3;
  double v4;
  double v5;
  double v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  NSObject *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LOWORD(v29) = 0;
    _os_log_impl(&dword_1CAF47000, v3, OS_LOG_TYPE_INFO, "Accounting Power Out", (uint8_t *)&v29, 2u);
  }

  -[PLBatteryAgent deltaAccumulatedPower](self, "deltaAccumulatedPower");
  if (v4 >= 0.0
    && (-[PLBatteryAgent deltaAccumulatorCount](self, "deltaAccumulatorCount"), v5 >= 0.0)
    && (-[PLBatteryAgent deltaAccumulatorErrorCount](self, "deltaAccumulatorErrorCount"), v6 >= 0.0))
  {
    PLLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      -[PLBatteryAgent deltaAccumulatedPower](self, "deltaAccumulatedPower");
      v10 = v9;
      -[PLBatteryAgent deltaAccumulatorCount](self, "deltaAccumulatorCount");
      v12 = v11;
      -[PLBatteryAgent deltaAccumulatorErrorCount](self, "deltaAccumulatorErrorCount");
      v29 = 134218496;
      v30 = v10;
      v31 = 2048;
      v32 = v12;
      v33 = 2048;
      v34 = v13;
      _os_log_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_INFO, "Power Diff: %f   Count Diff: %f   Error Count Diff: %f", (uint8_t *)&v29, 0x20u);
    }

    -[PLBatteryAgent deltaAccumulatorCount](self, "deltaAccumulatorCount");
    v15 = v14;
    -[PLBatteryAgent deltaAccumulatorErrorCount](self, "deltaAccumulatorErrorCount");
    v17 = v15 + v16;
    -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
    -[PLBatteryAgent setPowerOutTotalCount:](self, "setPowerOutTotalCount:", v18 + v17);
    -[PLBatteryAgent deltaAccumulatedPower](self, "deltaAccumulatedPower");
    v20 = v19;
    -[PLBatteryAgent powerOutTotalPower](self, "powerOutTotalPower");
    -[PLBatteryAgent setPowerOutTotalPower:](self, "setPowerOutTotalPower:", v20 + v21);
    PLLogCommon();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      -[PLBatteryAgent powerOutTotalPower](self, "powerOutTotalPower");
      v24 = v23;
      -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
      v29 = 134218240;
      v30 = v24;
      v31 = 2048;
      v32 = v25;
      _os_log_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_INFO, "Total Power: %f   Total Count: %f", (uint8_t *)&v29, 0x16u);
    }

    -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
    if (v26 >= 300.0)
    {
      -[PLBatteryAgent flushPowerOut](self, "flushPowerOut");
    }
    else
    {
      PLLogCommon();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
      {
        -[PLBatteryAgent powerOutTotalCount](self, "powerOutTotalCount");
        v29 = 134217984;
        v30 = v28;
        _os_log_debug_impl(&dword_1CAF47000, v27, OS_LOG_TYPE_DEBUG, "Count did not meet threshold: %f", (uint8_t *)&v29, 0xCu);
      }

    }
  }
  else
  {
    PLLogCommon();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v29) = 0;
      _os_log_error_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_ERROR, "Invalid Power Out data", (uint8_t *)&v29, 2u);
    }

  }
}

- (void)logAuthFail:(id)a3
{
  id v3;
  CFMutableDictionaryRef v4;
  CFMutableDictionaryRef v5;
  __CFDictionary *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v3 = a3;
  v4 = IOServiceMatching("IOPMPowerSource");
  v5 = IOServiceMatching("AppleBatteryAuth");
  v6 = v5;
  if (v5 && v4)
    goto LABEL_7;
  if (v5)
    CFRelease(v5);
  if (v4)
  {
    CFRelease(v4);
LABEL_7:
    CFDictionarySetValue(v6, CFSTR("IOParentMatch"), v4);
    CFRelease(v4);
    goto LABEL_9;
  }
  CFDictionarySetValue(v6, CFSTR("IOParentMatch"), 0);
LABEL_9:
  objc_msgSend(MEMORY[0x1E0D7FFE8], "snapshotFromIOEntry:", IOServiceGetMatchingService(*MEMORY[0x1E0CBBAB8], v6));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("CommunicationError"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("CommunicationError"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v10, CFSTR("CommunicationError"));

    }
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("CoProcError"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11)
    {
      objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("CoProcError"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v12, CFSTR("CoProcError"));

    }
    v13 = v8;
    AnalyticsSendEventLazy();

  }
}

id __30__PLBatteryAgent_logAuthFail___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_opt_new();
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("CommunicationError"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("communication_error"));

  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("CoProcError"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, CFSTR("coprocerror"));

  return v2;
}

- (void)logPortControllerInfo:(id)a3
{
  void *v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  PLBatteryAgent *v12;
  _QWORD v13[4];
  id v14;
  PLBatteryAgent *v15;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if (a3)
  {
    objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("PortControllerInfo"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      PLLogCommon();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412546;
        v17 = v5;
        v18 = 2112;
        v19 = v4;
        _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "PortControllerInfo received at time:%@ is: %@", buf, 0x16u);
      }

      v7 = MEMORY[0x1E0C809B0];
      v13[0] = MEMORY[0x1E0C809B0];
      v13[1] = 3221225472;
      v13[2] = __40__PLBatteryAgent_logPortControllerInfo___block_invoke;
      v13[3] = &unk_1E857F7D0;
      v8 = v5;
      v14 = v8;
      v15 = self;
      objc_msgSend(v4, "enumerateObjectsUsingBlock:", v13);
      v10[0] = v7;
      v10[1] = 3221225472;
      v10[2] = __40__PLBatteryAgent_logPortControllerInfo___block_invoke_3;
      v10[3] = &unk_1E857F7D0;
      v11 = v8;
      v12 = self;
      v9 = v8;
      objc_msgSend(v4, "enumerateObjectsUsingBlock:", v10);

    }
  }
}

void __40__PLBatteryAgent_logPortControllerInfo___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;

  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a2;
  objc_msgSend(v5, "stringWithFormat:", CFSTR("PortControllerInfo%d"), a3);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], v11);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withRawData:", v7, v6);
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("PortControllerPortPDO"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __40__PLBatteryAgent_logPortControllerInfo___block_invoke_2;
  v12[3] = &unk_1E8579E98;
  v13 = v8;
  v10 = v8;
  objc_msgSend(v9, "enumerateObjectsUsingBlock:", v12);

  objc_msgSend(v10, "setEntryDate:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "logEntry:", v10);
  objc_msgSend(*(id *)(a1 + 40), "logPortControllerInfoToCA:forPort:", v10, a3);

}

void __40__PLBatteryAgent_logPortControllerInfo___block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  id v7;

  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a2;
  objc_msgSend(v5, "stringWithFormat:", CFSTR("PortControllerPortPDO%d"), a3);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v7);

}

void __40__PLBatteryAgent_logPortControllerInfo___block_invoke_3(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("PortControllerBuffer%d"), a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80378], v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withDate:", v7, *(_QWORD *)(a1 + 32));
  PLLogCommon();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    v24 = *(_QWORD *)(a1 + 32);
    objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerEvtBuffer"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v27 = v24;
    v28 = 2112;
    v29 = v25;
    _os_log_debug_impl(&dword_1CAF47000, v9, OS_LOG_TYPE_DEBUG, "portControllerInfodict received at time:%@ is: %@", buf, 0x16u);

  }
  switch(a3)
  {
    case 0:
      v10 = *(_QWORD *)(a1 + 40);
      v11 = 432;
      goto LABEL_10;
    case 1:
      v12 = *(_QWORD *)(a1 + 40);
      if (*(_QWORD *)(v12 + 432))
      {
        v13 = *(void **)(v12 + 440);
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerEvtBuffer"));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v13) = objc_msgSend(v13, "isEqualToData:", v14);

        if ((v13 & 1) != 0)
          goto LABEL_15;
      }
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerEvtBuffer"));
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = *(_QWORD *)(a1 + 40);
      v17 = *(void **)(v16 + 440);
      *(_QWORD *)(v16 + 440) = v15;
      goto LABEL_13;
    case 2:
      v10 = *(_QWORD *)(a1 + 40);
      v11 = 448;
      goto LABEL_10;
    case 3:
      v10 = *(_QWORD *)(a1 + 40);
      v11 = 456;
LABEL_10:
      v18 = *(void **)(v10 + v11);
      if (v18)
      {
        objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerEvtBuffer"));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = objc_msgSend(v18, "isEqualToData:", v19);

        if ((v20 & 1) != 0)
          goto LABEL_15;
      }
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerEvtBuffer"));
      v21 = objc_claimAutoreleasedReturnValue();
      v22 = *(_QWORD *)(a1 + 40);
      v17 = *(void **)(v22 + v11);
      *(_QWORD *)(v22 + v11) = v21;
LABEL_13:

LABEL_14:
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerEvtBuffer"));
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setObject:forKeyedSubscript:", v23, CFSTR("PortControllerEvtBuffer"));

      objc_msgSend(*(id *)(a1 + 40), "logEntry:", v8);
LABEL_15:

      return;
    default:
      goto LABEL_14;
  }
}

- (void)logPortControllerInfoToCA:(id)a3 forPort:(int)a4
{
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  id v18;
  void *v19;
  uint8_t buf[4];
  int v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v4 = *(_QWORD *)&a4;
  v24 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = (void *)objc_opt_new();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerBootFlags"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "unsignedShortValue");

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v8 & 0x1F);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v9, CFSTR("DFUReason"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (v8 >> 5) & 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v10, CFSTR("TrustEvalStatus"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (v8 >> 6) & 0x1F);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v11, CFSTR("Img4DecodeStatus"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v8 >> 11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, CFSTR("Img4PropertyErrorCode"));

  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerPortMode"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v13, CFSTR("PortControllerPortMode"));

  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerSlpWakDisCause"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v14, CFSTR("PortControllerSlpWakDisCause"));

  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("PortControllerSlpWakIsSleepEnabled"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setObject:forKeyedSubscript:", v15, CFSTR("PortControllerSlpWakIsSleepEnabled"));
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v4);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v16, CFSTR("PortIndex"));

  PLLogCommon();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109378;
    v21 = v4;
    v22 = 2112;
    v23 = v6;
    _os_log_impl(&dword_1CAF47000, v17, OS_LOG_TYPE_INFO, "Pushing PortControllerInfo metrics for port %d to CA: %@", buf, 0x12u);
  }

  v19 = v6;
  v18 = v6;
  AnalyticsSendEventLazy();

}

id __52__PLBatteryAgent_logPortControllerInfoToCA_forPort___block_invoke(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

- (void)logWatchdogDebugDumpToCA:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  id v7;
  uint8_t buf[4];
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("BatteryData"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("WatchdogDebugDump"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0D7FFA0], "objectForKey:ifNotSet:", CFSTR("WatchdogDebugDump"), 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v5 || (objc_msgSend(v4, "isEqualToData:", v5) & 1) == 0)
    {
      PLLogCommon();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v9 = v4;
        _os_log_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_INFO, "pushing WatchDogDebug to CA :%@", buf, 0xCu);
      }

      v7 = v4;
      AnalyticsSendEventLazy();
      objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", v7, CFSTR("WatchdogDebugDump"), 1);

    }
  }

}

id __43__PLBatteryAgent_logWatchdogDebugDumpToCA___block_invoke(uint64_t a1)
{
  uint64_t v1;
  const __CFString *v3;
  _QWORD v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(a1 + 32);
  v3 = CFSTR("reset_data");
  v4[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v4, &v3, 1);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (void)handleGaugingMitigationStateCallback:(int)a3
{
  uint32_t state;
  uint32_t v5;
  NSObject *v6;
  uint64_t state64;
  uint8_t buf[4];
  uint32_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  state64 = 0;
  state = notify_get_state(a3, &state64);
  if (state)
  {
    v5 = state;
    PLLogCommon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      v9 = v5;
      _os_log_error_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_ERROR, "Failed to get current mitigation state, ret = %d", buf, 8u);
    }

  }
  else if ((state64 & 1) != 0)
  {
    -[PLBatteryAgent logEventBackwardChargingLimit](self, "logEventBackwardChargingLimit");
  }
}

- (void)handleMitigationStateCallback:(int)a3
{
  uint64_t state;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t block;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  uint64_t v17;
  uint64_t state64;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  state64 = 0;
  state = notify_get_state(a3, &state64);
  if ((_DWORD)state)
  {
    v5 = state;
    if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
    {
      v6 = objc_opt_class();
      block = MEMORY[0x1E0C809B0];
      v14 = 3221225472;
      v15 = __48__PLBatteryAgent_handleMitigationStateCallback___block_invoke;
      v16 = &__block_descriptor_40_e5_v8__0lu32l8;
      v17 = v6;
      if (qword_1ED8878A0 != -1)
        dispatch_once(&qword_1ED8878A0, &block);
      if (byte_1ED8875AE)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("notify_get_state failed %d %s"), v5, "com.apple.thermalmonitor.ageAwareMitigationState", block, v14, v15, v16, v17);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "lastPathComponent");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent handleMitigationStateCallback:]");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "logMessage:fromFile:fromFunction:fromLineNumber:", v7, v10, v11, 8915);

        PLLogCommon();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v20 = v7;
          _os_log_debug_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
        }

      }
    }
  }
  else
  {
    -[PLBatteryAgent logEventForwardMitigationStateWithState:userDisabled:](self, "logEventForwardMitigationStateWithState:userDisabled:", state64, 0);
  }
}

uint64_t __48__PLBatteryAgent_handleMitigationStateCallback___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875AE = result;
  return result;
}

- (void)setMitigationStateDefault:(unint64_t)a3
{
  void *v4;
  void *v5;
  void *v6;
  id v7;

  objc_msgSend(MEMORY[0x1E0D7FFA0], "objectForKey:ifNotSet:", CFSTR("perfManagementState"), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v4;
  if (!v4 || (int)objc_msgSend(v4, "intValue") != a3)
  {
    v5 = (void *)MEMORY[0x1E0D7FFA0];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", a3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKey:saveToDisk:", v6, CFSTR("perfManagementState"), 1);

  }
}

- (int)getMitigationDefaults
{
  void *v2;
  void *v3;
  int v4;

  objc_msgSend(MEMORY[0x1E0D80078], "containerPath");
  v2 = (void *)_CFPreferencesCopyValueWithContainer();
  v3 = v2;
  if (v2)
    v4 = objc_msgSend(v2, "intValue");
  else
    v4 = 0;

  return v4;
}

- (int)getBatteryHealthServiceState
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;

  v2 = (void *)IOPSCopyPowerSourcesByType();
  v3 = v2;
  if (v2
    && objc_msgSend(v2, "count")
    && (objc_msgSend(v3, "objectAtIndexedSubscript:", 0),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Battery Service State")),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v5,
        v4,
        v5))
  {
    objc_msgSend(v3, "objectAtIndexedSubscript:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("Battery Service State"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "intValue");

  }
  else
  {
    v8 = -1;
  }

  return v8;
}

- (int)getBatteryHealthServiceFlags
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;

  v2 = (void *)IOPSCopyPowerSourcesByType();
  v3 = v2;
  if (v2
    && objc_msgSend(v2, "count")
    && (objc_msgSend(v3, "objectAtIndexedSubscript:", 0),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Battery Service Flags")),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v5,
        v4,
        v5))
  {
    objc_msgSend(v3, "objectAtIndexedSubscript:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("Battery Service Flags"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "intValue");

  }
  else
  {
    v8 = 256;
  }

  return v8;
}

- (int)getBatteryMaximumCapacityPercent
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;

  v2 = (void *)IOPSCopyPowerSourcesByType();
  v3 = v2;
  if (v2
    && objc_msgSend(v2, "count")
    && (objc_msgSend(v3, "objectAtIndexedSubscript:", 0),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("Maximum Capacity Percent")),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v5,
        v4,
        v5))
  {
    objc_msgSend(v3, "objectAtIndexedSubscript:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("Maximum Capacity Percent"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "intValue");

  }
  else
  {
    v8 = -1;
  }

  return v8;
}

- (id)getBatteryCalibration0Data
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = (void *)IOPSCopyPowerSourcesByType();
  v3 = v2;
  if (v2
    && objc_msgSend(v2, "count")
    && (objc_msgSend(v3, "objectAtIndexedSubscript:", 0),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("calibration0")),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v5,
        v4,
        v5))
  {
    objc_msgSend(v3, "objectAtIndexedSubscript:", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("calibration0"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (BOOL)batterySerialChanged:(id)a3
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  char v8;
  _QWORD block[4];
  id v11;

  v3 = a3;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __39__PLBatteryAgent_batterySerialChanged___block_invoke;
  block[3] = &unk_1E85780C8;
  v11 = v3;
  v4 = qword_1ED8878A8;
  v5 = v3;
  v6 = v5;
  if (v4 == -1)
  {
    v7 = v5;
  }
  else
  {
    dispatch_once(&qword_1ED8878A8, block);
    v7 = v11;
  }
  v8 = byte_1ED8875AF;

  return v8;
}

void __39__PLBatteryAgent_batterySerialChanged___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  __CFString *v5;
  __CFString *v6;
  char v7;
  NSObject *v8;
  _DWORD v9[2];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D7FFA0], "objectForKey:ifNotSet:", CFSTR("BatterySerial"), &stru_1E8587D00);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("Serial"));
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)v3;
  if (v3)
    v5 = (__CFString *)v3;
  else
    v5 = &stru_1E8587D00;
  v6 = v5;

  if (v2 && (objc_msgSend(v2, "isEqualToString:", v6) & 1) != 0)
  {
    v7 = 0;
  }
  else
  {
    v7 = 1;
    objc_msgSend(MEMORY[0x1E0D7FFA0], "setObject:forKey:saveToDisk:", v6, CFSTR("BatterySerial"), 1);
  }
  byte_1ED8875AF = v7;
  PLLogBH();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 67109120;
    v9[1] = byte_1ED8875AF;
    _os_log_debug_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_DEBUG, "batterySerialChanged: %d", (uint8_t *)v9, 8u);
  }

}

- (id)overrideBatteryData:(id)a3 withPath:(id)a4
{
  id v5;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  PLBatteryAgent *v31;
  void *v32;
  NSObject *v33;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint8_t buf[4];
  NSObject *v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithContentsOfFile:", v6);
    v7 = objc_claimAutoreleasedReturnValue();
    PLLogBH();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v9)
      {
        *(_DWORD *)buf = 138412290;
        v43 = v7;
        _os_log_error_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_ERROR, "override battery data %@", buf, 0xCu);
      }

      -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("iopm"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = v10;
      if (v10 && objc_msgSend(v10, "intValue") == -1)
      {
        PLLogBH();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_ERROR, "raw data removed", buf, 2u);
        }
        v18 = 0;
      }
      else
      {
        v38 = v11;
        v12 = objc_msgSend(v5, "mutableCopy");
        objc_msgSend(v5, "objectForKey:", CFSTR("BatteryData"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = (void *)objc_msgSend(v13, "mutableCopy");

        objc_msgSend(v14, "objectForKey:", CFSTR("LifetimeData"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v40 = (void *)objc_msgSend(v15, "mutableCopy");

        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("MaximumRa0-8"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = v16;
        if (v16)
        {
          if (objc_msgSend(v16, "intValue") == -1)
            objc_msgSend(v40, "removeObjectForKey:", CFSTR("MaximumRa0-8"));
          else
            objc_msgSend(v40, "setObject:forKeyedSubscript:", v17, CFSTR("MaximumRa0-8"));
        }
        objc_msgSend(v14, "setObject:forKey:", v40, CFSTR("LifetimeData"));
        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("WeightedRa"));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = v19;
        if (v19)
        {
          if (objc_msgSend(v19, "intValue") == -1)
            objc_msgSend(v14, "removeObjectForKey:", CFSTR("WeightedRa"));
          else
            objc_msgSend(v14, "setObject:forKeyedSubscript:", v20, CFSTR("WeightedRa"));
        }
        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("ChemID"));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = v21;
        if (v21)
        {
          if (objc_msgSend(v21, "intValue") == -1)
            objc_msgSend(v14, "removeObjectForKey:", CFSTR("ChemID"));
          else
            objc_msgSend(v14, "setObject:forKeyedSubscript:", v22, CFSTR("ChemID"));
        }
        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("DesignCapacity"));
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        if (v39)
        {
          if (objc_msgSend(v39, "intValue") == -1)
            objc_msgSend(v14, "removeObjectForKey:", CFSTR("DesignCapacity"));
          else
            objc_msgSend(v14, "setObject:forKeyedSubscript:", v39, CFSTR("DesignCapacity"));
        }
        v37 = v17;
        -[NSObject setObject:forKey:](v12, "setObject:forKey:", v14, CFSTR("BatteryData"));
        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("NominalChargeCapacity"));
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = v23;
        if (v23)
        {
          if (objc_msgSend(v23, "intValue") == -1)
            -[NSObject removeObjectForKey:](v12, "removeObjectForKey:", CFSTR("NominalChargeCapacity"));
          else
            -[NSObject setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v24, CFSTR("NominalChargeCapacity"));
        }
        v36 = v20;
        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("BatteryCellDisconnectCount"));
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = v25;
        if (v25)
        {
          if (objc_msgSend(v25, "intValue") == -1)
            -[NSObject removeObjectForKey:](v12, "removeObjectForKey:", CFSTR("BatteryCellDisconnectCount"));
          else
            -[NSObject setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v26, CFSTR("BatteryCellDisconnectCount"));
        }
        v35 = v22;
        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("Serial"));
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v28 = v27;
        if (v27)
        {
          if (objc_msgSend(v27, "intValue") == -1)
            -[NSObject removeObjectForKey:](v12, "removeObjectForKey:", CFSTR("Serial"));
          else
            -[NSObject setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v28, CFSTR("Serial"));
        }
        -[NSObject objectForKey:](v7, "objectForKey:", CFSTR("mitigatedUPOCount"));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v30 = v29;
        if (v29)
        {
          if (objc_msgSend(v29, "intValue") == -1)
          {
            v31 = self;
            v32 = 0;
          }
          else
          {
            v31 = self;
            v32 = v30;
          }
          -[PLBatteryAgent setMitigatedUPOCount:](v31, "setMitigatedUPOCount:", v32);
        }
        PLLogBH();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v43 = v12;
          _os_log_error_impl(&dword_1CAF47000, v33, OS_LOG_TYPE_ERROR, "New raw data: %@", buf, 0xCu);
        }

        v18 = -[NSObject copy](v12, "copy");
        v11 = v38;
      }

    }
    else
    {
      if (v9)
      {
        *(_DWORD *)buf = 138412290;
        v43 = v6;
        _os_log_error_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_ERROR, "Invalid override dictionary at %@", buf, 0xCu);
      }

      v18 = v5;
    }

  }
  else
  {
    v18 = v5;
  }

  return v18;
}

- (int)deviceType
{
  int v2;
  NSObject *v3;
  _DWORD v5[2];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(MEMORY[0x1E0D80020], "kPLDeviceClass");
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "objectExistsForKey:", CFSTR("overrideDeviceType")))
  {
    v2 = objc_msgSend(MEMORY[0x1E0D7FFA0], "longForKey:", CFSTR("overrideDeviceType"));
    PLLogBH();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      v5[0] = 67109120;
      v5[1] = v2;
      _os_log_error_impl(&dword_1CAF47000, v3, OS_LOG_TYPE_ERROR, "overriding device type to %d", (uint8_t *)v5, 8u);
    }

  }
  return v2;
}

- (void)initCameraStreamingIntervalTracking
{
  void *v3;
  void *v4;
  NSObject *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD block[5];
  uint8_t buf[4];
  void *v30;
  _QWORD v31[4];

  v31[3] = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent setupAVSystemController](self, "setupAVSystemController");
  -[PLBatteryAgent avSystemController](self, "avSystemController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "attributeForKey:", *MEMORY[0x1E0D482F0]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent setCameraStreamingActive:](self, "setCameraStreamingActive:", objc_msgSend(v4, "BOOLValue"));

  PLLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v30) = -[PLBatteryAgent cameraStreamingActive](self, "cameraStreamingActive");
    _os_log_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_INFO, "Init Camera Streaming Active: %d", buf, 8u);
  }

  v6 = (uint64_t *)MEMORY[0x1E0D48200];
  v7 = (uint64_t *)MEMORY[0x1E0D48300];
  v8 = *MEMORY[0x1E0D48300];
  v31[0] = *MEMORY[0x1E0D48200];
  v31[1] = v8;
  v9 = (uint64_t *)MEMORY[0x1E0D47FD8];
  v31[2] = *MEMORY[0x1E0D47FD8];
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v31, 3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    -[PLBatteryAgent avSystemController](self, "avSystemController");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setAttribute:forKey:error:", v10, *MEMORY[0x1E0D48280], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = *v6;
    -[PLBatteryAgent avSystemController](self, "avSystemController");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "addObserver:selector:name:object:", self, sel_setupAVSystemController, v13, v14);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = *v7;
    -[PLBatteryAgent avSystemController](self, "avSystemController");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "addObserver:selector:name:object:", self, sel_handleCameraStreamingLogging_, v16, v17);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = *v9;
    -[PLBatteryAgent avSystemController](self, "avSystemController");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "addObserver:selector:name:object:", self, sel_handleHeadphoneConnected_, v19, v20);

    -[PLBatteryAgent avSystemController](self, "avSystemController");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "attributeForKey:", *MEMORY[0x1E0D47FC8]);
    v22 = objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent setHeadphonesConnected:](self, "setHeadphonesConnected:", -[NSObject BOOLValue](v22, "BOOLValue"));
LABEL_5:

    goto LABEL_12;
  }
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v23 = objc_opt_class();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __53__PLBatteryAgent_initCameraStreamingIntervalTracking__block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = v23;
    if (qword_1ED8878C0 != -1)
      dispatch_once(&qword_1ED8878C0, block);
    if (byte_1ED8875B0)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("No AV System Controller Notifications"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "lastPathComponent");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initCameraStreamingIntervalTracking]");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "logMessage:fromFile:fromFunction:fromLineNumber:", v21, v26, v27, 9219);

      PLLogCommon();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v30 = v21;
        _os_log_debug_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }
      goto LABEL_5;
    }
  }
LABEL_12:

}

uint64_t __53__PLBatteryAgent_initCameraStreamingIntervalTracking__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875B0 = result;
  return result;
}

- (void)setupAVSystemController
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _QWORD block[5];
  uint8_t buf[4];
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_1CAF47000, v3, OS_LOG_TYPE_INFO, "Setting up AV System Controller", buf, 2u);
  }

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *MEMORY[0x1E0D48200];
  -[PLBatteryAgent avSystemController](self, "avSystemController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "removeObserver:name:object:", self, v5, v6);

  objc_msgSend(MEMORY[0x1E0D48560], "sharedAVSystemController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent setAvSystemController:](self, "setAvSystemController:", v7);

  -[PLBatteryAgent avSystemController](self, "avSystemController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8 && objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v9 = objc_opt_class();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __41__PLBatteryAgent_setupAVSystemController__block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    block[4] = v9;
    if (qword_1ED8878C8 != -1)
      dispatch_once(&qword_1ED8878C8, block);
    if (byte_1ED8875B1)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("AV System Controller not available"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "lastPathComponent");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent setupAVSystemController]");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "logMessage:fromFile:fromFunction:fromLineNumber:", v10, v13, v14, 9235);

      PLLogCommon();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v18 = v10;
        _os_log_debug_impl(&dword_1CAF47000, v15, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
}

uint64_t __41__PLBatteryAgent_setupAVSystemController__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875B1 = result;
  return result;
}

- (void)handleCameraStreamingLogging:(id)a3
{
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL4 v11;
  const char *v12;
  NSObject *v13;
  uint32_t v14;
  int v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PLLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v15 = 138412290;
    v16 = v4;
    _os_log_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_INFO, "received notification: %@\n", (uint8_t *)&v15, 0xCu);
  }

  objc_msgSend(v4, "userInfo");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "objectForKey:", *MEMORY[0x1E0D48310]);
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      -[PLBatteryAgent setCameraStreamingActive:](self, "setCameraStreamingActive:", -[NSObject BOOLValue](v8, "BOOLValue"));
      PLLogCommon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        v11 = -[PLBatteryAgent cameraStreamingActive](self, "cameraStreamingActive");
        v15 = 67109120;
        LODWORD(v16) = v11;
        v12 = "cameraStreamingActive: %d\n";
        v13 = v10;
        v14 = 8;
LABEL_11:
        _os_log_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_INFO, v12, (uint8_t *)&v15, v14);
      }
    }
    else
    {
      PLLogCommon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        v15 = 138412290;
        v16 = v7;
        v12 = "userInfo misses feature status:%@\n";
        v13 = v10;
        v14 = 12;
        goto LABEL_11;
      }
    }

    goto LABEL_13;
  }
  PLLogCommon();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v15 = 138412290;
    v16 = v4;
    _os_log_impl(&dword_1CAF47000, v9, OS_LOG_TYPE_INFO, "notification misses userInfo dict:%@\n", (uint8_t *)&v15, 0xCu);
  }
LABEL_13:

}

- (void)handleHeadphoneConnected:(id)a3
{
  void *v4;
  void *v5;
  NSObject *v6;
  _DWORD v7[2];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  -[PLBatteryAgent flushPowerOut](self, "flushPowerOut", a3);
  -[PLBatteryAgent avSystemController](self, "avSystemController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "attributeForKey:", *MEMORY[0x1E0D47FC8]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent setHeadphonesConnected:](self, "setHeadphonesConnected:", objc_msgSend(v5, "BOOLValue"));

  PLLogCommon();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7[0] = 67109120;
    v7[1] = -[PLBatteryAgent headphonesConnected](self, "headphonesConnected");
    _os_log_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_INFO, "headphones connected = %d", (uint8_t *)v7, 8u);
  }

}

- (void)initSmartChargingLogging
{
  id v3;
  uint64_t v4;
  PLXPCListenerOperatorComposition *v5;
  PLXPCListenerOperatorComposition *smartChargingListener;
  dispatch_time_t v7;
  _QWORD v8[5];
  _QWORD v9[5];

  if (+[PLBatteryAgent supportsSmartCharging](PLBatteryAgent, "supportsSmartCharging")
    || +[PLBatteryAgent supportsFixedLimitCharging](PLBatteryAgent, "supportsFixedLimitCharging"))
  {
    v3 = objc_alloc(MEMORY[0x1E0D80090]);
    v4 = MEMORY[0x1E0C809B0];
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __42__PLBatteryAgent_initSmartChargingLogging__block_invoke;
    v9[3] = &unk_1E8578610;
    v9[4] = self;
    v5 = (PLXPCListenerOperatorComposition *)objc_msgSend(v3, "initWithOperator:withRegistration:withBlock:", self, &unk_1E864D020, v9);
    smartChargingListener = self->_smartChargingListener;
    self->_smartChargingListener = v5;

    v7 = dispatch_time(0, 60000000000);
    v8[0] = v4;
    v8[1] = 3221225472;
    v8[2] = __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_3660;
    v8[3] = &unk_1E85780C8;
    v8[4] = self;
    dispatch_after(v7, MEMORY[0x1E0C80D38], v8);
  }
}

void __42__PLBatteryAgent_initSmartChargingLogging__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t block;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v6 = a5;
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v7 = objc_opt_class();
    block = MEMORY[0x1E0C809B0];
    v15 = 3221225472;
    v16 = __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_2;
    v17 = &__block_descriptor_40_e5_v8__0lu32l8;
    v18 = v7;
    if (qword_1ED8878D0 != -1)
      dispatch_once(&qword_1ED8878D0, &block);
    if (byte_1ED8875B2)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Smart Charging Callback %@"), v6, block, v15, v16, v17, v18);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "lastPathComponent");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initSmartChargingLogging]_block_invoke");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "logMessage:fromFile:fromFunction:fromLineNumber:", v8, v11, v12, 9322);

      PLLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v8;
        _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "logEventForwardSmartChargingWithPayload:", v6);

}

uint64_t __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875B2 = result;
  return result;
}

void __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_3660()
{
  uint32_t v0;
  int v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[5];
  _QWORD block[5];
  uint8_t buf[4];
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v0 = notify_post("com.apple.perfpowerservices.reportobcanalytics");
  v1 = objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled");
  if (v0)
  {
    if (v1)
    {
      v2 = objc_opt_class();
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_2_3662;
      block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
      block[4] = v2;
      if (qword_1ED8878D8 != -1)
        dispatch_once(&qword_1ED8878D8, block);
      if (byte_1ED8875B3)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("failed to post %s"), "com.apple.perfpowerservices.reportobcanalytics");
        v3 = (void *)objc_claimAutoreleasedReturnValue();
        v4 = (void *)MEMORY[0x1E0D7FF98];
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "lastPathComponent");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initSmartChargingLogging]_block_invoke");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "logMessage:fromFile:fromFunction:fromLineNumber:", v3, v6, v7, 9330);

        PLLogCommon();
        v8 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v17 = v3;
LABEL_16:
          _os_log_debug_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
          goto LABEL_13;
        }
        goto LABEL_13;
      }
    }
  }
  else if (v1)
  {
    v9 = objc_opt_class();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_3667;
    v14[3] = &__block_descriptor_40_e5_v8__0lu32l8;
    v14[4] = v9;
    if (qword_1ED8878E0 != -1)
      dispatch_once(&qword_1ED8878E0, v14);
    if (byte_1ED8875B4)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("posted %s"), "com.apple.perfpowerservices.reportobcanalytics");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "lastPathComponent");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initSmartChargingLogging]_block_invoke_2");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "logMessage:fromFile:fromFunction:fromLineNumber:", v3, v12, v13, 9332);

      PLLogCommon();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v17 = v3;
        goto LABEL_16;
      }
LABEL_13:

    }
  }
}

uint64_t __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_2_3662(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875B3 = result;
  return result;
}

uint64_t __42__PLBatteryAgent_initSmartChargingLogging__block_invoke_3667(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875B4 = result;
  return result;
}

- (void)initCleanEnergyChargingLogging
{
  id v3;
  PLXPCListenerOperatorComposition *v4;
  PLXPCListenerOperatorComposition *cleanEnergyChargingListener;
  _QWORD v6[5];

  if (+[PLBatteryAgent supportsCleanEnergyCharging](PLBatteryAgent, "supportsCleanEnergyCharging"))
  {
    v3 = objc_alloc(MEMORY[0x1E0D80090]);
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __48__PLBatteryAgent_initCleanEnergyChargingLogging__block_invoke;
    v6[3] = &unk_1E8578610;
    v6[4] = self;
    v4 = (PLXPCListenerOperatorComposition *)objc_msgSend(v3, "initWithOperator:withRegistration:withBlock:", self, &unk_1E864D048, v6);
    cleanEnergyChargingListener = self->_cleanEnergyChargingListener;
    self->_cleanEnergyChargingListener = v4;

  }
}

void __48__PLBatteryAgent_initCleanEnergyChargingLogging__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t block;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v6 = a5;
  if (objc_msgSend(MEMORY[0x1E0D7FFA0], "debugEnabled"))
  {
    v7 = objc_opt_class();
    block = MEMORY[0x1E0C809B0];
    v15 = 3221225472;
    v16 = __48__PLBatteryAgent_initCleanEnergyChargingLogging__block_invoke_2;
    v17 = &__block_descriptor_40_e5_v8__0lu32l8;
    v18 = v7;
    if (qword_1ED8878E8 != -1)
      dispatch_once(&qword_1ED8878E8, &block);
    if (byte_1ED8875B5)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Clean Energy Charging Callback %@"), v6, block, v15, v16, v17, v18);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)MEMORY[0x1E0D7FF98];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/PerfPowerServices_Operators/Operators/Agents/Hardware/PLBatteryAgent.m");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "lastPathComponent");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "-[PLBatteryAgent initCleanEnergyChargingLogging]_block_invoke");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "logMessage:fromFile:fromFunction:fromLineNumber:", v8, v11, v12, 9361);

      PLLogCommon();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v8;
        _os_log_debug_impl(&dword_1CAF47000, v13, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
      }

    }
  }
  objc_msgSend(*(id *)(a1 + 32), "logEventForwardCleanEnergyChargingWithPayload:", v6);

}

uint64_t __48__PLBatteryAgent_initCleanEnergyChargingLogging__block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D7FFA0], "isClassDebugEnabled:", *(_QWORD *)(a1 + 32));
  byte_1ED8875B5 = result;
  return result;
}

- (void)initializeChargingStateIntervals
{
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  const char *v16;
  uint32_t v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD v31[5];
  _QWORD v32[4];
  NSObject *v33;
  __int16 v34;
  _QWORD v35[4];
  NSObject *v36;
  __int16 v37;
  _QWORD v38[4];
  NSObject *v39;
  __int16 v40;
  uint8_t buf[4];
  _BYTE v42[14];
  _QWORD v43[4];

  v43[1] = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_1CAF47000, v3, OS_LOG_TYPE_INFO, "Initializing Camera Streaming Interval Tracking", buf, 2u);
  }

  -[PLBatteryAgent initCameraStreamingIntervalTracking](self, "initCameraStreamingIntervalTracking");
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent setOpenChargingIntervals:](self, "setOpenChargingIntervals:", v4);

  objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80380], CFSTR("Charging"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PLBatteryAgent setChargingIntervalsEntryKey:](self, "setChargingIntervalsEntryKey:", v6);

  v7 = 0;
  v30 = v5;
  do
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@=%d"), CFSTR("intervalType"), v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLOperator storage](self, "storage");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PLBatteryAgent chargingIntervalsEntryKey](self, "chargingIntervalsEntryKey");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v43[0] = v8;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v43, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "lastEntryForKey:withFilters:", v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v12)
    {
      PLLogCommon();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        goto LABEL_9;
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)v42 = v7;
      v15 = v14;
      v16 = "no previous %d interval";
      v17 = 8;
      goto LABEL_25;
    }
    objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("timestampEnd"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      PLLogCommon();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        goto LABEL_9;
      *(_DWORD *)buf = 67109378;
      *(_DWORD *)v42 = v7;
      *(_WORD *)&v42[4] = 2112;
      *(_QWORD *)&v42[6] = v12;
      v15 = v14;
      v16 = "last %d interval closed: %@";
      v17 = 18;
LABEL_25:
      _os_log_debug_impl(&dword_1CAF47000, v15, OS_LOG_TYPE_DEBUG, v16, buf, v17);
      goto LABEL_9;
    }
    switch((unsigned __int16)v7)
    {
      case 6u:
        objc_msgSend(v12, "setObject:forKeyedSubscript:", v5, CFSTR("timestampEnd"));
        v32[0] = MEMORY[0x1E0C809B0];
        v32[1] = 3221225472;
        v32[2] = __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke_3680;
        v32[3] = &unk_1E857F818;
        v34 = 6;
        v33 = v12;
        -[PLOperator updateEntry:withBlock:](self, "updateEntry:withBlock:", v33, v32);
        v14 = v33;
        break;
      case 4u:
        objc_msgSend(v12, "setObject:forKeyedSubscript:", v5, CFSTR("timestampEnd"));
        v35[0] = MEMORY[0x1E0C809B0];
        v35[1] = 3221225472;
        v35[2] = __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke_3679;
        v35[3] = &unk_1E857F818;
        v37 = 4;
        v36 = v12;
        -[PLOperator updateEntry:withBlock:](self, "updateEntry:withBlock:", v36, v35);
        v14 = v36;
        break;
      case 3u:
        objc_msgSend(v12, "setObject:forKeyedSubscript:", v5, CFSTR("timestampEnd"));
        v38[0] = MEMORY[0x1E0C809B0];
        v38[1] = 3221225472;
        v38[2] = __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke;
        v38[3] = &unk_1E857F818;
        v40 = 3;
        v39 = v12;
        -[PLOperator updateEntry:withBlock:](self, "updateEntry:withBlock:", v39, v38);
        v14 = v39;
        break;
      default:
        PLLogCommon();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 67109378;
          *(_DWORD *)v42 = v7;
          *(_WORD *)&v42[4] = 2112;
          *(_QWORD *)&v42[6] = v12;
          _os_log_debug_impl(&dword_1CAF47000, v18, OS_LOG_TYPE_DEBUG, "open %d interval %@", buf, 0x12u);
        }

        -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", (__int16)v7);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "objectForKeyedSubscript:", v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();

        if (v21)
        {
          PLLogCommon();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109120;
            *(_DWORD *)v42 = v7;
            _os_log_error_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_ERROR, "multiple open %d intervals", buf, 8u);
          }

        }
        -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
        v14 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", (__int16)v7);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSObject setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v12, v23);

        v5 = v30;
        break;
    }
LABEL_9:

    v7 = (v7 + 1);
  }
  while ((_DWORD)v7 != 10);
  PLLogCommon();
  v24 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_msgSend(v25, "count");
    *(_DWORD *)buf = 134217984;
    *(_QWORD *)v42 = v26;
    _os_log_impl(&dword_1CAF47000, v24, OS_LOG_TYPE_DEFAULT, "initialized charging interval tracking, %lu open", buf, 0xCu);

    v5 = v30;
  }

  -[PLBatteryAgent setTLCOverrideValue:](self, "setTLCOverrideValue:", 0);
  if (objc_msgSend(MEMORY[0x1E0D80020], "internalBuild"))
  {
    v27 = objc_alloc(MEMORY[0x1E0D7FF80]);
    -[PLOperator workQueue](self, "workQueue");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v31[0] = MEMORY[0x1E0C809B0];
    v31[1] = 3221225472;
    v31[2] = __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke_3683;
    v31[3] = &unk_1E8577F48;
    v31[4] = self;
    v29 = (void *)objc_msgSend(v27, "initWithWorkQueue:forNotification:requireState:withBlock:", v28, CFSTR("com.apple.powerlogd.tlc.override"), 1, v31);
    -[PLBatteryAgent setTlcOverrideNotification:](self, "setTlcOverrideNotification:", v29);

    v5 = v30;
  }

}

void __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke(uint64_t a1)
{
  NSObject *v2;
  int v3;
  uint64_t v4;
  _DWORD v5[2];
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = *(__int16 *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 32);
    v5[0] = 67109378;
    v5[1] = v3;
    v6 = 2112;
    v7 = v4;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_INFO, "closed %d interval at init: %@", (uint8_t *)v5, 0x12u);
  }

}

void __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke_3679(uint64_t a1)
{
  NSObject *v2;
  int v3;
  uint64_t v4;
  _DWORD v5[2];
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = *(__int16 *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 32);
    v5[0] = 67109378;
    v5[1] = v3;
    v6 = 2112;
    v7 = v4;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_INFO, "closed %d interval at init: %@", (uint8_t *)v5, 0x12u);
  }

}

void __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke_3680(uint64_t a1)
{
  NSObject *v2;
  int v3;
  uint64_t v4;
  _DWORD v5[2];
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = *(__int16 *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 32);
    v5[0] = 67109378;
    v5[1] = v3;
    v6 = 2112;
    v7 = v4;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_INFO, "closed %d interval at init: %@", (uint8_t *)v5, 0x12u);
  }

}

void __50__PLBatteryAgent_initializeChargingStateIntervals__block_invoke_3683(uint64_t a1, void *a2)
{
  void *v3;
  NSObject *v4;
  NSObject *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "objectForKeyedSubscript:");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "intValue") == -1)
  {
    PLLogCommon();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v7) = 0;
      _os_log_debug_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_DEBUG, "tlc: clearing value", (uint8_t *)&v7, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "setTLCOverrideValue:", 0);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setTLCOverrideValue:", v3);
    PLLogCommon();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend(*(id *)(a1 + 32), "TLCOverrideValue");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138412290;
      v8 = v6;
      _os_log_debug_impl(&dword_1CAF47000, v4, OS_LOG_TYPE_DEBUG, "tlc: overriding value=%@", (uint8_t *)&v7, 0xCu);

    }
  }

}

- (void)updateIntervalForType:(signed __int16)a3 withState:(BOOL)a4 andTime:(id)a5 selectedChargedLimit:(id)a6
{
  _BOOL4 v7;
  uint64_t v8;
  id v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  NSObject *v28;
  NSObject *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  _QWORD v37[4];
  __int16 v38;
  uint8_t buf[4];
  int v40;
  __int16 v41;
  int v42;
  uint64_t v43;

  v7 = a4;
  v8 = a3;
  v43 = *MEMORY[0x1E0C80C00];
  v10 = a5;
  v11 = a6;
  PLLogCommon();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    v40 = v8;
    v41 = 1024;
    v42 = v7;
    _os_log_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_DEFAULT, "intervalType=%d state=%d", buf, 0xEu);
  }

  -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v8);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "objectForKeyedSubscript:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10)
    {
      if (v7)
      {
LABEL_6:
        if (v16)
        {
          PLLogCommon();
          v17 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 67109120;
            v40 = v8;
            _os_log_impl(&dword_1CAF47000, v17, OS_LOG_TYPE_INFO, "%d interval is already open", buf, 8u);
          }

          goto LABEL_29;
        }
        -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "objectForKeyedSubscript:", &unk_1E8633B28);
        v27 = (void *)objc_claimAutoreleasedReturnValue();

        if ((_DWORD)v8 != 3 || !v27)
        {
          v30 = objc_alloc(MEMORY[0x1E0D7FFB0]);
          -[PLBatteryAgent chargingIntervalsEntryKey](self, "chargingIntervalsEntryKey");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = (void *)objc_msgSend(v30, "initWithEntryKey:withDate:", v31, v10);

          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v8);
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "setObject:forKeyedSubscript:", v32, CFSTR("intervalType"));

          if ((_DWORD)v8 == 8 && v11)
            objc_msgSend(v16, "setObject:forKeyedSubscript:", v11, CFSTR("chargeLimitTargetSoC"));
          -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v8);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v33, "setObject:forKeyedSubscript:", v16, v34);

          -[PLOperator logEntry:](self, "logEntry:", v16);
          PLLogCommon();
          v35 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109120;
            v40 = v8;
            _os_log_impl(&dword_1CAF47000, v35, OS_LOG_TYPE_DEFAULT, "opened %d interval", buf, 8u);
          }

          if ((_DWORD)v8 == 3)
          {
            objc_msgSend(v16, "entryDate");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            -[PLBatteryAgent setLastTLCEntryStartTime:](self, "setLastTLCEntryStartTime:", v36);

          }
          goto LABEL_29;
        }
        PLLogCommon();
        v28 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 67109376;
          v40 = 6;
          v41 = 1024;
          v42 = 3;
          _os_log_impl(&dword_1CAF47000, v28, OS_LOG_TYPE_INFO, "%d interval is already open, not opening a %d interval", buf, 0xEu);
        }

LABEL_28:
        v16 = 0;
LABEL_29:

        goto LABEL_30;
      }
    }
    else
    {
      PLLogCommon();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_1CAF47000, v18, OS_LOG_TYPE_ERROR, "missing date", buf, 2u);
      }

      objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
      v10 = (id)objc_claimAutoreleasedReturnValue();
      if (v7)
        goto LABEL_6;
    }
    if (v16)
    {
      objc_msgSend(v16, "entryDate");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "laterDate:", v10);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "entryDate");
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      if (v20 == v21)
      {
        PLLogCommon();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_ERROR, "out of order date", buf, 2u);
        }

        objc_msgSend(MEMORY[0x1E0C99D68], "monotonicDate");
        v23 = objc_claimAutoreleasedReturnValue();

        v10 = (id)v23;
      }
      objc_msgSend(v16, "setObject:forKeyedSubscript:", v10, CFSTR("timestampEnd"));
      -[PLBatteryAgent openChargingIntervals](self, "openChargingIntervals");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithShort:", v8);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "setObject:forKeyedSubscript:", 0, v25);

      v37[0] = MEMORY[0x1E0C809B0];
      v37[1] = 3221225472;
      v37[2] = __79__PLBatteryAgent_updateIntervalForType_withState_andTime_selectedChargedLimit___block_invoke;
      v37[3] = &__block_descriptor_34_e5_v8__0l;
      v38 = v8;
      -[PLOperator updateEntry:withBlock:](self, "updateEntry:withBlock:", v16, v37);
      if ((_DWORD)v8 == 3)
        -[PLBatteryAgent setLastTLCEntryStartTime:](self, "setLastTLCEntryStartTime:", 0);
      goto LABEL_29;
    }
    PLLogCommon();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 67109120;
      v40 = v8;
      _os_log_impl(&dword_1CAF47000, v29, OS_LOG_TYPE_INFO, "failed to find open %d interval", buf, 8u);
    }

    goto LABEL_28;
  }
LABEL_30:

}

void __79__PLBatteryAgent_updateIntervalForType_withState_andTime_selectedChargedLimit___block_invoke(uint64_t a1)
{
  NSObject *v2;
  int v3;
  _DWORD v4[2];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(__int16 *)(a1 + 32);
    v4[0] = 67109120;
    v4[1] = v3;
    _os_log_impl(&dword_1CAF47000, v2, OS_LOG_TYPE_DEFAULT, "closed %d interval", (uint8_t *)v4, 8u);
  }

}

- (BOOL)shouldLogCPMSSnapshotWithReason:(unsigned __int8)a3 withTrigger:(int64_t)a4
{
  BOOL v4;

  if (a4)
    v4 = 1;
  else
    v4 = a3 == 0;
  if (a4 == 1)
    return a3 != 0;
  else
    return v4;
}

- (void)logCPMSSnapshotWithTrigger:(int64_t)a3
{
  NSObject *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v20;
  _QWORD v21[5];
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint8_t *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char v47;
  uint8_t buf[8];
  uint8_t *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  PLLogCommon();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&buf[4] = a3;
    _os_log_impl(&dword_1CAF47000, v4, OS_LOG_TYPE_INFO, "cpms: getting snapshots with trigger 0x%X", buf, 8u);
  }

  v5 = (void *)objc_msgSend(MEMORY[0x1E0D09948], "copyCPMSControlStateSnapshots");
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "sortedArrayUsingComparator:", &__block_literal_global_3687);
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = *MEMORY[0x1E0D80390];
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80390], CFSTR("CPMSControlState"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", v8, CFSTR("CPMSClientState"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_opt_new();
    v11 = (void *)objc_opt_new();
    *(_QWORD *)buf = 0;
    v49 = buf;
    v50 = 0x2020000000;
    v51 = 0;
    v44 = 0;
    v45 = &v44;
    v46 = 0x2020000000;
    v47 = 0;
    v40 = 0;
    v41 = &v40;
    v42 = 0x2020000000;
    v43 = 0;
    v36 = 0;
    v37 = &v36;
    v38 = 0x2020000000;
    v39 = 0;
    v32 = 0;
    v33 = &v32;
    v34 = 0x2020000000;
    v35 = 0;
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_2;
    v21[3] = &unk_1E857F8F0;
    v21[4] = self;
    v31 = a3;
    v22 = v9;
    v26 = &v44;
    v27 = &v40;
    v28 = &v36;
    v29 = &v32;
    v12 = v22;
    v30 = buf;
    v13 = v10;
    v23 = v13;
    v14 = v18;
    v24 = v14;
    v15 = v11;
    v25 = v15;
    -[NSObject enumerateObjectsUsingBlock:](v7, "enumerateObjectsUsingBlock:", v21);
    if (objc_msgSend(v13, "count") || objc_msgSend(v15, "count"))
    {
      v16 = (void *)objc_opt_new();
      if (objc_msgSend(v13, "count"))
        objc_msgSend(v16, "setObject:forKeyedSubscript:", v13, v12);
      if (objc_msgSend(v15, "count", v18))
        objc_msgSend(v16, "setObject:forKeyedSubscript:", v15, v14);
      -[PLOperator logEntries:withGroupID:](self, "logEntries:withGroupID:", v16, v12);

    }
    v17 = (void *)objc_opt_new();
    MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.cpms.count"), 1);
    objc_msgSend(v17, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("snapshotCount"));
    if (v49[24])
    {
      MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.cpms.fullMode"), 1);
      objc_msgSend(v17, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("fullModeCount"));
    }
    if (*((_BYTE *)v45 + 24))
    {
      MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.cpms.droopCE"), 1);
      objc_msgSend(v17, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("droopCECount"));
    }
    if (*((_BYTE *)v41 + 24))
    {
      MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.cpms.source.generic"), 1);
      objc_msgSend(v17, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("genericSourceCount"));
    }
    if (*((_BYTE *)v37 + 24))
    {
      MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.cpms.source.specific"), 1);
      objc_msgSend(v17, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("specificSourceCount"));
    }
    if (*((_BYTE *)v33 + 24))
    {
      MEMORY[0x1D179B7DC](CFSTR("com.apple.power.battery.cpms.source.safeharbor"), 1);
      objc_msgSend(v17, "setObject:forKeyedSubscript:", &unk_1E8633BD0, CFSTR("safeharborSourceCount"));
    }
    v20 = v17;
    AnalyticsSendEventLazy();

    _Block_object_dispose(&v32, 8);
    _Block_object_dispose(&v36, 8);
    _Block_object_dispose(&v40, 8);
    _Block_object_dispose(&v44, 8);
    _Block_object_dispose(buf, 8);

  }
  else
  {
    PLLogCommon();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_ERROR, "cpms: could not get snapshots", buf, 2u);
    }
  }

}

uint64_t __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v4 = a3;
  objc_msgSend(a2, "objectForKeyedSubscript:", CFSTR("timestamp"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("timestamp"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "compare:", v6);
  return v7;
}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;
  NSObject *v6;
  _BOOL4 v7;
  int v8;
  void *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  BOOL v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  id v25;
  void *v26;
  NSObject *v27;
  id v28;
  void *v29;
  float v30;
  float v31;
  void *v32;
  void *v33;
  float v34;
  float v35;
  void *v36;
  void *v37;
  float v38;
  float v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  NSObject *v46;
  id v47;
  void *v48;
  NSObject *v49;
  void *v50;
  NSObject *v51;
  uint64_t v52;
  void *v53;
  NSObject *v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  void *v65;
  _QWORD v66[4];
  id v67;
  _QWORD v68[4];
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  _QWORD v73[4];
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  _QWORD v78[4];
  NSObject *v79;
  _QWORD v80[4];
  id v81;
  _QWORD v82[4];
  id v83;
  _QWORD v84[4];
  id v85;
  uint8_t buf[4];
  int v87;
  __int16 v88;
  int v89;
  uint64_t v90;

  v90 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("reason"));
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend((id)v4, "intValue");

  LOBYTE(v4) = objc_msgSend(*(id *)(a1 + 32), "shouldLogCPMSSnapshotWithReason:withTrigger:", v5, *(_QWORD *)(a1 + 112));
  PLLogCommon();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG);
  if ((v4 & 1) != 0)
  {
    v8 = v5;
    if (v7)
    {
      v61 = *(_QWORD *)(a1 + 112);
      *(_DWORD *)buf = 67109376;
      v87 = v5;
      v88 = 1024;
      v89 = v61;
      _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "cpms: logging snapshot with reason %d and trigger 0x%X", buf, 0xEu);
    }

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("timestamp"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "unsignedLongLongValue");

    objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", (double)(v10 / 0x3B9ACA00));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "convertFromSystemToMonotonic");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withDate:", *(_QWORD *)(a1 + 40), v12);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("overrideFlags"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setObject:forKeyedSubscript:", v14, CFSTR("flags"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", v5);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setObject:forKeyedSubscript:", v15, CFSTR("reason"));

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) |= v8 == 2;
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("systemCapabilitySource"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v14) = objc_msgSend(v16, "intValue");

    LODWORD(v16) = v14;
    v17 = v14 == 0;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", v14);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setObject:forKeyedSubscript:", v18, CFSTR("source"));

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) |= (_DWORD)v16 == 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24) |= (_DWORD)v16 == 2;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 24) |= v17;
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("mode"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend(v19, "intValue");

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setObject:forKeyedSubscript:", v21, CFSTR("mode"));

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 24) |= (_DWORD)v20 == 2;
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("batteryPowerConsumption"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v22)
    {
      PLLogCommon();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_1CAF47000, v23, OS_LOG_TYPE_ERROR, "cpms: could not get power consumptions", buf, 2u);
      }

    }
    v24 = MEMORY[0x1E0C809B0];
    v84[0] = MEMORY[0x1E0C809B0];
    v84[1] = 3221225472;
    v84[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3688;
    v84[3] = &unk_1E857F760;
    v25 = v13;
    v85 = v25;
    objc_msgSend(v22, "enumerateObjectsUsingBlock:", v84);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("systemCapability"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v26)
    {
      PLLogCommon();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_1CAF47000, v27, OS_LOG_TYPE_ERROR, "cpms: could not get system capability", buf, 2u);
      }

    }
    v65 = v22;
    v82[0] = v24;
    v82[1] = 3221225472;
    v82[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3689;
    v82[3] = &unk_1E857F760;
    v28 = v25;
    v83 = v28;
    objc_msgSend(v26, "enumerateObjectsUsingBlock:", v82);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("droopCE"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "floatValue");
    v31 = v30;

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (int)(float)(v31 * 65535.0));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setObject:forKeyedSubscript:", v32, CFSTR("droopCE"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("zeroSumCE"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "floatValue");
    v35 = v34;

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (int)(float)(v35 * 65535.0));
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setObject:forKeyedSubscript:", v36, CFSTR("zeroSumCE"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("undroopCE"));
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "floatValue");
    v39 = v38;

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (int)(float)(v39 * 65535.0));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setObject:forKeyedSubscript:", v40, CFSTR("undroopCE"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("brownoutRiskNotificationEngaged"));
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setObject:forKeyedSubscript:", v41, CFSTR("brownoutRiskEngaged"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("brownoutRiskSysCap"));
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setObject:forKeyedSubscript:", v42, CFSTR("brownoutRiskSysCap"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("brownoutRiskPu"));
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setObject:forKeyedSubscript:", v43, CFSTR("brownoutRiskPu"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("peakPowerPressureLevel"));
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "setObject:forKeyedSubscript:", v44, CFSTR("peakPowerPressureLevel"));

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("servoCEs"));
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v45)
    {
      PLLogCommon();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_1CAF47000, v46, OS_LOG_TYPE_ERROR, "cpms: could not get servo control efforts", buf, 2u);
      }

    }
    v80[0] = v24;
    v80[1] = 3221225472;
    v80[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3690;
    v80[3] = &unk_1E857F760;
    v47 = v28;
    v81 = v47;
    objc_msgSend(v45, "enumerateObjectsUsingBlock:", v80);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("remCapCEFloors"));
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v48)
    {
      PLLogCommon();
      v49 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_1CAF47000, v49, OS_LOG_TYPE_ERROR, "cpms: could not get remCap control efforts", buf, 2u);
      }

    }
    v78[0] = v24;
    v78[1] = 3221225472;
    v78[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3691;
    v78[3] = &unk_1E857F760;
    v6 = v47;
    v79 = v6;
    objc_msgSend(v48, "enumerateObjectsUsingBlock:", v78);
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v6);
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("requestedBudgets"));
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v50)
    {
      PLLogCommon();
      v51 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_1CAF47000, v51, OS_LOG_TYPE_ERROR, "cpms: could not get client requested budgets", buf, 2u);
      }

    }
    v63 = v45;
    v52 = v24;
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("grantedBudgets"), v63);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v53)
    {
      PLLogCommon();
      v54 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_1CAF47000, v54, OS_LOG_TYPE_ERROR, "cpms: could not get client granted budgets", buf, 2u);
      }

    }
    v55 = (void *)objc_opt_new();
    v73[0] = v52;
    v73[1] = 3221225472;
    v73[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3692;
    v73[3] = &unk_1E857F8A0;
    v74 = *(id *)(a1 + 56);
    v56 = v12;
    v75 = v56;
    v57 = v55;
    v58 = *(_QWORD *)(a1 + 32);
    v76 = v57;
    v77 = v58;
    objc_msgSend(v50, "enumerateObjectsUsingBlock:", v73);
    v68[0] = v52;
    v68[1] = 3221225472;
    v68[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3693;
    v68[3] = &unk_1E857F8A0;
    v69 = v57;
    v70 = *(id *)(a1 + 56);
    v71 = v56;
    v72 = *(_QWORD *)(a1 + 32);
    v59 = v56;
    v60 = v57;
    objc_msgSend(v53, "enumerateObjectsUsingBlock:", v68);
    v66[0] = v52;
    v66[1] = 3221225472;
    v66[2] = __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3694;
    v66[3] = &unk_1E857F8C8;
    v67 = *(id *)(a1 + 64);
    objc_msgSend(v60, "enumerateKeysAndObjectsUsingBlock:", v66);

  }
  else if (v7)
  {
    v62 = *(_QWORD *)(a1 + 112);
    *(_DWORD *)buf = 67109376;
    v87 = v5;
    v88 = 1024;
    v89 = v62;
    _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "cpms: ignoring snapshot with reason %d and trigger 0x%X", buf, 0xEu);
  }

}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3688(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  id v7;

  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a2;
  objc_msgSend(v5, "stringWithFormat:", CFSTR("battPC%d"), a3);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v7);

}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3689(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  id v7;

  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a2;
  objc_msgSend(v5, "stringWithFormat:", CFSTR("sysCap%d"), a3);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v7);

}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3690(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  float v7;
  float v8;
  void *v9;
  id v10;

  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a2;
  objc_msgSend(v5, "stringWithFormat:", CFSTR("servoCE%d"), a3);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "floatValue");
  v8 = v7;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (int)(float)(v8 * 65535.0));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v9, v10);

}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3691(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  float v7;
  float v8;
  void *v9;
  id v10;

  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a2;
  objc_msgSend(v5, "stringWithFormat:", CFSTR("remCapCE%d"), a3);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "floatValue");
  v8 = v7;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", (int)(float)(v8 * 65535.0));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v9, v10);

}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3692(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("clientID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withDate:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v4, CFSTR("client"));
    objc_msgSend(*(id *)(a1 + 48), "setObject:forKeyedSubscript:", v5, v4);
    objc_msgSend(*(id *)(a1 + 56), "populateClientEntry:withBudget:withTemplate:", v5, v3, CFSTR("req%d"));

  }
  else
  {
    PLLogCommon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_error_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_ERROR, "cpms: could not get clientID for requested budget %@", (uint8_t *)&v7, 0xCu);
    }

  }
}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3693(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("clientID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v5)
    {
      v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:withDate:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
      objc_msgSend(v6, "setObject:forKeyedSubscript:", v4, CFSTR("client"));
      objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v4);

    }
    objc_msgSend(*(id *)(a1 + 56), "populateClientEntry:withBudget:withTemplate:", v5, v3, CFSTR("grant%d"));

  }
  else
  {
    PLLogCommon();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_error_impl(&dword_1CAF47000, v7, OS_LOG_TYPE_ERROR, "cpms: could not get clientID for granted budget %@", (uint8_t *)&v8, 0xCu);
    }

  }
}

void __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3694(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  objc_msgSend(*(id *)(a1 + 32), "addObject:", a3);
  PLLogCommon();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    v7 = 138412290;
    v8 = v5;
    _os_log_debug_impl(&dword_1CAF47000, v6, OS_LOG_TYPE_DEBUG, "cpms: adding entry for clientID %@", (uint8_t *)&v7, 0xCu);
  }

}

id __45__PLBatteryAgent_logCPMSSnapshotWithTrigger___block_invoke_3722(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

- (void)logBTM
{
  CFSetRef v3;
  CFSetRef v4;
  NSObject *v5;
  void *v6;
  const __CFSet *v7;
  __IOHIDDevice *v8;
  uint64_t v9;
  __IOHIDDevice *i;
  void *v11;
  NSObject *v12;
  io_service_t Service;
  kern_return_t RegistryEntryID;
  kern_return_t v15;
  NSObject *v16;
  IOReturn v17;
  IOReturn v18;
  _OWORD *v19;
  IOReturn Report;
  IOReturn v21;
  NSObject *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  const __CFString *v29;
  void *v30;
  IOReturn v31;
  NSObject *v32;
  NSObject *v33;
  uint64_t v34;
  CFIndex pReportLength;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  int v43;
  __int16 v44;
  int v45;
  __int16 v46;
  int v47;
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v3 = IOHIDManagerCopyDevices(self->_BTMmanager);
  v4 = v3;
  if (v3 && -[__CFSet count](v3, "count"))
  {
    +[PLOperator entryKeyForType:andName:](PLBatteryAgent, "entryKeyForType:andName:", *MEMORY[0x1E0D80370], CFSTR("BTM"));
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D7FFB0]), "initWithEntryKey:", v5);
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v7 = v4;
    v8 = (__IOHIDDevice *)-[__CFSet countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v36, v48, 16);
    if (v8)
    {
      v9 = *(_QWORD *)v37;
      while (2)
      {
        for (i = 0; i != v8; i = (__IOHIDDevice *)((char *)i + 1))
        {
          if (*(_QWORD *)v37 != v9)
            objc_enumerationMutation(v7);
          v11 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)i);
          if (v11)
          {
            v8 = v11;
            PLLogCommon();
            v12 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              v41 = (uint64_t)v8;
              _os_log_debug_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_DEBUG, "device in hand is :%@", buf, 0xCu);
            }

            goto LABEL_17;
          }
        }
        v8 = (__IOHIDDevice *)-[__CFSet countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v36, v48, 16);
        if (v8)
          continue;
        break;
      }
    }
LABEL_17:

    v34 = 0;
    Service = IOHIDDeviceGetService(v8);
    RegistryEntryID = IORegistryEntryGetRegistryEntryID(Service, &v34);
    if (RegistryEntryID)
    {
      v15 = RegistryEntryID;
      PLLogCommon();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v41) = v15;
        _os_log_debug_impl(&dword_1CAF47000, v16, OS_LOG_TYPE_DEBUG, "BTM: IORegistryEntryGetRegistryEntryID fails with error: %d", buf, 8u);
      }
    }
    else
    {
      v17 = IOHIDDeviceOpen(v8, 0);
      if (!v17)
      {
        pReportLength = 132;
        v19 = malloc_type_malloc(0x84uLL, 0xC648D720uLL);
        *v19 = 0u;
        v19[1] = 0u;
        v19[2] = 0u;
        v19[3] = 0u;
        v19[4] = 0u;
        v19[5] = 0u;
        v19[6] = 0u;
        v19[7] = 0u;
        *((_DWORD *)v19 + 32) = 0;
        Report = IOHIDDeviceGetReport(v8, kIOHIDReportTypeFeature, 2, (uint8_t *)v19, &pReportLength);
        if (Report)
        {
          v21 = Report;
          PLLogCommon();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 134218752;
            v41 = v34;
            v42 = 1024;
            v43 = 2;
            v44 = 1024;
            v45 = 2;
            v46 = 1024;
            v47 = v21;
            _os_log_error_impl(&dword_1CAF47000, v22, OS_LOG_TYPE_ERROR, "GetReport failed for device:0x%llx reportid:%d type:%d status:0x%x\n", buf, 0x1Eu);
          }

          free(v19);
        }
        else
        {
          v23 = 0;
          v24 = 0x1E0CB3000uLL;
          do
          {
            switch((int)v23)
            {
              case 18:
                objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", (double)(*(_QWORD *)((char *)v19 + 4 * v23) / 0xF4240uLL));
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v25, "convertFromSystemToMonotonic");
                v26 = (void *)objc_claimAutoreleasedReturnValue();

                v24 = 0x1E0CB3000;
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_TimestampforImax1");
                goto LABEL_40;
              case 20:
                objc_msgSend(*(id *)(v24 + 2024), "numberWithUnsignedInt:", *((unsigned int *)v19 + v23));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_OCVforImax");
                goto LABEL_40;
              case 21:
                objc_msgSend(*(id *)(v24 + 2024), "numberWithUnsignedInt:", *((unsigned int *)v19 + v23));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_Imax");
                goto LABEL_40;
              case 22:
                objc_msgSend(*(id *)(v24 + 2024), "numberWithUnsignedInt:", *((unsigned int *)v19 + v23));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_VforImax");
                goto LABEL_40;
              case 24:
                objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSince1970:", (double)(*(_QWORD *)((char *)v19 + 4 * v23) / 0xF4240uLL));
                v30 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v30, "convertFromSystemToMonotonic");
                v26 = (void *)objc_claimAutoreleasedReturnValue();

                v24 = 0x1E0CB3000;
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_TimestampforVmin1");
                goto LABEL_40;
              case 26:
                objc_msgSend(*(id *)(v24 + 2024), "numberWithUnsignedInt:", *((unsigned int *)v19 + v23));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_OCVforVmin");
                goto LABEL_40;
              case 27:
                objc_msgSend(*(id *)(v24 + 2024), "numberWithUnsignedInt:", *((unsigned int *)v19 + v23));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_Vmin");
                goto LABEL_40;
              case 28:
                objc_msgSend(*(id *)(v24 + 2024), "numberWithUnsignedInt:", *((unsigned int *)v19 + v23));
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                v27 = v6;
                v28 = v26;
                v29 = CFSTR("BTMProperty_IforVmin");
LABEL_40:
                objc_msgSend(v27, "setObject:forKeyedSubscript:", v28, v29, v34);

                break;
              default:
                break;
            }
            ++v23;
          }
          while (v23 != 33);
          *(_WORD *)v19 = 1282;
          *((_BYTE *)v19 + 2) = 0;
          v31 = IOHIDDeviceSetReport(v8, kIOHIDReportTypeFeature, 1, (const uint8_t *)v19, 3);
          PLLogCommon();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = v32;
          if (v31)
          {
            if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 134218752;
              v41 = v34;
              v42 = 1024;
              v43 = 1;
              v44 = 1024;
              v45 = 2;
              v46 = 1024;
              v47 = v31;
              _os_log_error_impl(&dword_1CAF47000, v33, OS_LOG_TYPE_ERROR, "SetReport failed for device:0x%llx reportid:%d type:%d status:0x%x\n", buf, 0x1Eu);
            }
          }
          else if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 134218752;
            v41 = v34;
            v42 = 1024;
            v43 = 1;
            v44 = 1024;
            v45 = 2;
            v46 = 1024;
            v47 = 3;
            _os_log_debug_impl(&dword_1CAF47000, v33, OS_LOG_TYPE_DEBUG, "SetReport device:0x%llx reportID:%d type:%d length:%d bytes:", buf, 0x1Eu);
          }

          IOHIDDeviceClose(v8, 0);
          free(v19);
          -[PLOperator logEntry:](self, "logEntry:", v6);
        }
        goto LABEL_24;
      }
      v18 = v17;
      PLLogCommon();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v41) = v18;
        _os_log_error_impl(&dword_1CAF47000, v16, OS_LOG_TYPE_ERROR, "Device is not opened with status:%d", buf, 8u);
      }
    }

LABEL_24:
    goto LABEL_25;
  }
  PLLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_error_impl(&dword_1CAF47000, v5, OS_LOG_TYPE_ERROR, "device is empty when logging BTM", buf, 2u);
  }
LABEL_25:

}

- (void)populateClientEntry:(id)a3 withBudget:(id)a4 withTemplate:(id)a5
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  NSObject *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v9 = a5;
  v10 = v9;
  if (v7 && v8 && v9)
  {
    objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("timescales"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      v13[0] = MEMORY[0x1E0C809B0];
      v13[1] = 3221225472;
      v13[2] = __62__PLBatteryAgent_populateClientEntry_withBudget_withTemplate___block_invoke;
      v13[3] = &unk_1E857F7D0;
      v14 = v10;
      v15 = v7;
      objc_msgSend(v11, "enumerateObjectsUsingBlock:", v13);

    }
    else
    {
      PLLogCommon();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v17 = v8;
        _os_log_error_impl(&dword_1CAF47000, v12, OS_LOG_TYPE_ERROR, "cpms: could not get timescale information for budget %@", buf, 0xCu);
      }

    }
  }

}

void __62__PLBatteryAgent_populateClientEntry_withBudget_withTemplate___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  uint8_t buf[4];
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("timescale"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", *(_QWORD *)(a1 + 32), objc_msgSend(v4, "intValue"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("level"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v7, v6);

  }
  else
  {
    PLLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v10 = v3;
      _os_log_error_impl(&dword_1CAF47000, v8, OS_LOG_TYPE_ERROR, "cpms: could not get timescale for %@", buf, 0xCu);
    }

  }
}

- (PLIOKitOperatorComposition)iokitPowerSource
{
  return (PLIOKitOperatorComposition *)objc_getProperty(self, a2, 144, 1);
}

- (PLIOKitOperatorComposition)iokitPPM
{
  return (PLIOKitOperatorComposition *)objc_getProperty(self, a2, 152, 1);
}

- (PLNSNotificationOperatorComposition)thermalMonitorListener
{
  return (PLNSNotificationOperatorComposition *)objc_getProperty(self, a2, 160, 1);
}

- (void)setThermalMonitorListener:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 160);
}

- (PLEntryNotificationOperatorComposition)batteryLevelChanged
{
  return (PLEntryNotificationOperatorComposition *)objc_getProperty(self, a2, 168, 1);
}

- (void)setBatteryLevelChanged:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 168);
}

- (double)rawBatteryVoltageVolt
{
  return self->_rawBatteryVoltageVolt;
}

- (int)presentMaxRa
{
  return self->_presentMaxRa;
}

- (void)setPresentMaxRa:(int)a3
{
  self->_presentMaxRa = a3;
}

- (int)lifetimeMaxRa
{
  return self->_lifetimeMaxRa;
}

- (void)setLifetimeMaxRa:(int)a3
{
  self->_lifetimeMaxRa = a3;
}

- (int)previousCurrentAccumulator
{
  return self->_previousCurrentAccumulator;
}

- (void)setPreviousCurrentAccumulator:(int)a3
{
  self->_previousCurrentAccumulator = a3;
}

- (int)previousCurrentAccumulatorCount
{
  return self->_previousCurrentAccumulatorCount;
}

- (void)setPreviousCurrentAccumulatorCount:(int)a3
{
  self->_previousCurrentAccumulatorCount = a3;
}

- (NSDate)previousCurrentAccumulatorDate
{
  return (NSDate *)objc_getProperty(self, a2, 208, 1);
}

- (void)setPreviousCurrentAccumulatorDate:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 208);
}

- (void)setEABatteryTimer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 216);
}

- (PLMonotonicTimer)significantBatteryChangeTimer
{
  return (PLMonotonicTimer *)objc_getProperty(self, a2, 224, 1);
}

- (void)setSignificantBatteryChangeTimer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 224);
}

- (NSString)entryKeyEABattery
{
  return (NSString *)objc_getProperty(self, a2, 232, 1);
}

- (NSString)entryKeyEAPencilStats
{
  return (NSString *)objc_getProperty(self, a2, 240, 1);
}

- (double)EAEnergyDrained
{
  return self->_EAEnergyDrained;
}

- (void)setEAEnergyDrained:(double)a3
{
  self->_EAEnergyDrained = a3;
}

- (NSNumber)lastkIOPSAppleBatteryCaseCumulativeCurrentKey
{
  return (NSNumber *)objc_getProperty(self, a2, 264, 1);
}

- (void)setLastkIOPSAppleBatteryCaseCumulativeCurrentKey:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 264);
}

- (NSDate)lastEABatteryConnectedTime
{
  return (NSDate *)objc_getProperty(self, a2, 272, 1);
}

- (void)setLastEABatteryConnectedTime:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 272);
}

- (PLTimer)eaBatteryConnectCountTimer
{
  return (PLTimer *)objc_getProperty(self, a2, 280, 1);
}

- (void)setEaBatteryConnectCountTimer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 280);
}

- (void)setIsPingPongCharging:(BOOL)a3
{
  self->_isPingPongCharging = a3;
}

- (void)setIsFirstTimeCheckingPingPong:(BOOL)a3
{
  self->_isFirstTimeCheckingPingPong = a3;
}

- (void)setLifetimeDataLogged:(BOOL)a3
{
  self->_lifetimeDataLogged = a3;
}

- (PLTimer)periodicAggdTimer
{
  return (PLTimer *)objc_getProperty(self, a2, 288, 1);
}

- (void)setPeriodicAggdTimer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 288);
}

- (PLTimer)xFlagsRetryTimer
{
  return (PLTimer *)objc_getProperty(self, a2, 296, 1);
}

- (void)setXFlagsRetryTimer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 296);
}

- (PLEntry)lastBatteryConfigEntry
{
  return (PLEntry *)objc_getProperty(self, a2, 304, 1);
}

- (void)setLastBatteryConfigEntry:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 304);
}

- (__IOHIDManager)BTMmanager
{
  return self->_BTMmanager;
}

- (void)setBTMmanager:(__IOHIDManager *)a3
{
  self->_BTMmanager = a3;
}

- (double)prevAccumulatorCount
{
  return self->_prevAccumulatorCount;
}

- (void)setPrevAccumulatorCount:(double)a3
{
  self->_prevAccumulatorCount = a3;
}

- (double)prevAccumulatorErrorCount
{
  return self->_prevAccumulatorErrorCount;
}

- (void)setPrevAccumulatorErrorCount:(double)a3
{
  self->_prevAccumulatorErrorCount = a3;
}

- (double)prevAccumulatedPower
{
  return self->_prevAccumulatedPower;
}

- (void)setPrevAccumulatedPower:(double)a3
{
  self->_prevAccumulatedPower = a3;
}

- (double)deltaAccumulatorCount
{
  return self->_deltaAccumulatorCount;
}

- (void)setDeltaAccumulatorCount:(double)a3
{
  self->_deltaAccumulatorCount = a3;
}

- (double)deltaAccumulatorErrorCount
{
  return self->_deltaAccumulatorErrorCount;
}

- (void)setDeltaAccumulatorErrorCount:(double)a3
{
  self->_deltaAccumulatorErrorCount = a3;
}

- (double)deltaAccumulatedPower
{
  return self->_deltaAccumulatedPower;
}

- (void)setDeltaAccumulatedPower:(double)a3
{
  self->_deltaAccumulatedPower = a3;
}

- (void)setPowerOutTotalCount:(double)a3
{
  self->_powerOutTotalCount = a3;
}

- (void)setPowerOutTotalPower:(double)a3
{
  self->_powerOutTotalPower = a3;
}

- (double)filteredPower
{
  return self->_filteredPower;
}

- (void)setFilteredPower:(double)a3
{
  self->_filteredPower = a3;
}

- (BOOL)headphonesConnected
{
  return self->_headphonesConnected;
}

- (void)setHeadphonesConnected:(BOOL)a3
{
  self->_headphonesConnected = a3;
}

- (NSString)lastAdapterManufacturer
{
  return (NSString *)objc_getProperty(self, a2, 416, 1);
}

- (void)setPreviousPortControllerRead:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 424);
}

- (NSData)previousPortBuffer1Read
{
  return (NSData *)objc_getProperty(self, a2, 432, 1);
}

- (void)setPreviousPortBuffer1Read:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 432);
}

- (NSData)previousPortBuffer2Read
{
  return (NSData *)objc_getProperty(self, a2, 440, 1);
}

- (void)setPreviousPortBuffer2Read:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 440);
}

- (NSData)previousPortBuffer3Read
{
  return (NSData *)objc_getProperty(self, a2, 448, 1);
}

- (void)setPreviousPortBuffer3Read:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 448);
}

- (NSData)previousPortBuffer4Read
{
  return (NSData *)objc_getProperty(self, a2, 456, 1);
}

- (void)setPreviousPortBuffer4Read:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 456);
}

- (NSString)serialNumber
{
  return (NSString *)objc_getProperty(self, a2, 464, 1);
}

- (void)setSerialNumber:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 464);
}

- (PLXPCResponderOperatorComposition)batteryInfoResponder
{
  return (PLXPCResponderOperatorComposition *)objc_getProperty(self, a2, 472, 1);
}

- (void)setBatteryInfoResponder:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 472);
}

- (PLXPCResponderOperatorComposition)batteryTemperatureResponder
{
  return (PLXPCResponderOperatorComposition *)objc_getProperty(self, a2, 480, 1);
}

- (void)setBatteryTemperatureResponder:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 480);
}

- (PLXPCResponderOperatorComposition)batteryDischargeCurrentResponder
{
  return (PLXPCResponderOperatorComposition *)objc_getProperty(self, a2, 488, 1);
}

- (void)setBatteryDischargeCurrentResponder:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 488);
}

- (PLXPCResponderOperatorComposition)batteryChargingStateResponder
{
  return (PLXPCResponderOperatorComposition *)objc_getProperty(self, a2, 496, 1);
}

- (void)setBatteryChargingStateResponder:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 496);
}

- (void)setChargerIOService:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 504);
}

- (void)setMagsafeIOService:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 520);
}

- (void)setIsTLCNotificationSurfaced:(BOOL)a3
{
  self->_isTLCNotificationSurfaced = a3;
}

- (BOOL)smartChargingEngaged
{
  return self->_smartChargingEngaged;
}

- (void)setSmartChargingEngaged:(BOOL)a3
{
  self->_smartChargingEngaged = a3;
}

- (void)setDemoMode:(BOOL)a3
{
  self->_demoMode = a3;
}

- (int)aggregatedTimeTLC
{
  return self->_aggregatedTimeTLC;
}

- (void)setAggregatedTimeTLC:(int)a3
{
  self->_aggregatedTimeTLC = a3;
}

- (void)setLastTLCEntryStartTime:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 528);
}

- (BOOL)fixedChargingEngaged
{
  return self->_fixedChargingEngaged;
}

- (void)setFixedChargingEngaged:(BOOL)a3
{
  self->_fixedChargingEngaged = a3;
}

- (BOOL)cleanEnergyChargingEngaged
{
  return self->_cleanEnergyChargingEngaged;
}

- (void)setCleanEnergyChargingEngaged:(BOOL)a3
{
  self->_cleanEnergyChargingEngaged = a3;
}

- (PLEntryNotificationOperatorComposition)canSleepEntryNotifications
{
  return (PLEntryNotificationOperatorComposition *)objc_getProperty(self, a2, 536, 1);
}

- (PLSemaphore)canSleepSemaphore
{
  return (PLSemaphore *)objc_getProperty(self, a2, 544, 1);
}

- (void)setCanSleepSemaphore:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 544);
}

- (PLEntryNotificationOperatorComposition)wakeEntryNotifications
{
  return (PLEntryNotificationOperatorComposition *)objc_getProperty(self, a2, 552, 1);
}

- (PLTimer)gasGaugeTimer
{
  return (PLTimer *)objc_getProperty(self, a2, 560, 1);
}

- (void)setGasGaugeTimer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 560);
}

- (NSDate)lastGasGaugeLogTime
{
  return (NSDate *)objc_getProperty(self, a2, 568, 1);
}

- (void)setLastGasGaugeLogTime:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 568);
}

- (int)gasGaugeConsecutiveEmptyEntriesCount
{
  return self->_gasGaugeConsecutiveEmptyEntriesCount;
}

- (void)setGasGaugeConsecutiveEmptyEntriesCount:(int)a3
{
  self->_gasGaugeConsecutiveEmptyEntriesCount = a3;
}

- (BOOL)allowGasGaugeRead
{
  return self->_allowGasGaugeRead;
}

- (void)setAllowGasGaugeRead:(BOOL)a3
{
  self->_allowGasGaugeRead = a3;
}

- (PLIOKitOperatorComposition)ioAccessoryManager
{
  return (PLIOKitOperatorComposition *)objc_getProperty(self, a2, 576, 1);
}

- (PLXPCResponderOperatorComposition)batteryShutdownDataResponder
{
  return (PLXPCResponderOperatorComposition *)objc_getProperty(self, a2, 584, 1);
}

- (void)setBatteryShutdownDataResponder:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 584);
}

- (PLXPCResponderOperatorComposition)batteryUPOStepperResponder
{
  return (PLXPCResponderOperatorComposition *)objc_getProperty(self, a2, 592, 1);
}

- (void)setBatteryUPOStepperResponder:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 592);
}

- (PLXPCResponderOperatorComposition)batteryConfigResponder
{
  return (PLXPCResponderOperatorComposition *)objc_getProperty(self, a2, 600, 1);
}

- (void)setBatteryConfigResponder:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 600);
}

- (PLXPCListenerOperatorComposition)UPOStepperListener
{
  return (PLXPCListenerOperatorComposition *)objc_getProperty(self, a2, 608, 1);
}

- (void)setUPOStepperListener:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 608);
}

- (PLXPCListenerOperatorComposition)smartChargingListener
{
  return (PLXPCListenerOperatorComposition *)objc_getProperty(self, a2, 616, 1);
}

- (void)setSmartChargingListener:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 616);
}

- (PLXPCListenerOperatorComposition)cleanEnergyChargingListener
{
  return (PLXPCListenerOperatorComposition *)objc_getProperty(self, a2, 624, 1);
}

- (void)setCleanEnergyChargingListener:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 624);
}

- (AVSystemController)avSystemController
{
  return (AVSystemController *)objc_getProperty(self, a2, 632, 1);
}

- (void)setAvSystemController:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 632);
}

- (void)setCameraStreamingActive:(BOOL)a3
{
  self->_cameraStreamingActive = a3;
}

- (PLXPCListenerOperatorComposition)mobileChargeModeListener
{
  return (PLXPCListenerOperatorComposition *)objc_getProperty(self, a2, 640, 1);
}

- (void)setMobileChargeModeListener:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 640);
}

- (PLXPCListenerOperatorComposition)bdcAMAListener
{
  return (PLXPCListenerOperatorComposition *)objc_getProperty(self, a2, 648, 1);
}

- (void)setBdcAMAListener:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 648);
}

- (PLXPCListenerOperatorComposition)acamSBCListener
{
  return (PLXPCListenerOperatorComposition *)objc_getProperty(self, a2, 656, 1);
}

- (void)setAcamSBCListener:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 656);
}

- (BOOL)shouldLogEABatteryConfig
{
  return self->_shouldLogEABatteryConfig;
}

- (void)setShouldLogEABatteryConfig:(BOOL)a3
{
  self->_shouldLogEABatteryConfig = a3;
}

- (void)setTrackedAccessories:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 664);
}

- (int)priIOAccessoryPowerMode
{
  return self->_priIOAccessoryPowerMode;
}

- (void)setPriIOAccessoryPowerMode:(int)a3
{
  self->_priIOAccessoryPowerMode = a3;
}

- (void)setShouldQueryForAccessory:(BOOL)a3
{
  self->_shouldQueryForAccessory = a3;
}

- (void)setOpenChargingIntervals:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 672);
}

- (NSString)chargingIntervalsEntryKey
{
  return (NSString *)objc_getProperty(self, a2, 680, 1);
}

- (void)setChargingIntervalsEntryKey:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 680);
}

- (PLCFNotificationOperatorComposition)tlcOverrideNotification
{
  return (PLCFNotificationOperatorComposition *)objc_getProperty(self, a2, 696, 1);
}

- (void)setTlcOverrideNotification:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 696);
}

- (void)setTLCOverrideValue:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 704);
}

- (PLCFNotificationOperatorComposition)batteryUIVisitNotification
{
  return (PLCFNotificationOperatorComposition *)objc_getProperty(self, a2, 712, 1);
}

- (void)setBatteryUIVisitNotification:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 712);
}

- (PLCFNotificationOperatorComposition)batteryHealthUIVisitNotification
{
  return (PLCFNotificationOperatorComposition *)objc_getProperty(self, a2, 720, 1);
}

- (void)setBatteryHealthUIVisitNotification:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 720);
}

- (PLCFNotificationOperatorComposition)batteryChargingUIVisitNotification
{
  return (PLCFNotificationOperatorComposition *)objc_getProperty(self, a2, 728, 1);
}

- (void)setBatteryChargingUIVisitNotification:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 728);
}

- (NSDate)lastTimeChargingInfoUpdated
{
  return (NSDate *)objc_getProperty(self, a2, 736, 1);
}

- (void)setLastTimeChargingInfoUpdated:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 736);
}

- (int)prevConnectedState
{
  return self->_prevConnectedState;
}

- (void)setPrevConnectedState:(int)a3
{
  self->_prevConnectedState = a3;
}

- (int)prevChargingState
{
  return self->_prevChargingState;
}

- (void)setPrevChargingState:(int)a3
{
  self->_prevChargingState = a3;
}

- (NSDate)lastTimePenaltyBoxIntervalUpdated
{
  return (NSDate *)objc_getProperty(self, a2, 752, 1);
}

- (void)setLastTimePenaltyBoxIntervalUpdated:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 752);
}

- (NSDate)lastTimeInPenaltyBox
{
  return (NSDate *)objc_getProperty(self, a2, 760, 1);
}

- (void)setLastTimeInPenaltyBox:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 760);
}

- (BOOL)inPenaltyBox
{
  return self->_inPenaltyBox;
}

- (void)setInPenaltyBox:(BOOL)a3
{
  self->_inPenaltyBox = a3;
}

- (void)setPrevGGResetCount:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 768);
}

- (int)presentChemicalWeightedRa
{
  return self->_presentChemicalWeightedRa;
}

- (void)setPresentChemicalWeightedRa:(int)a3
{
  self->_presentChemicalWeightedRa = a3;
}

- (int)presentWeightedRa
{
  return self->_presentWeightedRa;
}

- (void)setPresentWeightedRa:(int)a3
{
  self->_presentWeightedRa = a3;
}

- (int)presentBatteryHealthMetric
{
  return self->_presentBatteryHealthMetric;
}

- (void)setPresentBatteryHealthMetric:(int)a3
{
  self->_presentBatteryHealthMetric = a3;
}

- (int)presentPeakPerformanceCapacity
{
  return self->_presentPeakPerformanceCapacity;
}

- (void)setPresentPeakPerformanceCapacity:(int)a3
{
  self->_presentPeakPerformanceCapacity = a3;
}

- (int)presentOCVCount
{
  return self->_presentOCVCount;
}

- (void)setPresentOCVCount:(int)a3
{
  self->_presentOCVCount = a3;
}

- (int)presentOCV
{
  return self->_presentOCV;
}

- (void)setPresentOCV:(int)a3
{
  self->_presentOCV = a3;
}

- (int)presentRaUpdateDisqualified
{
  return self->_presentRaUpdateDisqualified;
}

- (void)setPresentRaUpdateDisqualified:(int)a3
{
  self->_presentRaUpdateDisqualified = a3;
}

- (int)presentQmaxUpdateDisqualified
{
  return self->_presentQmaxUpdateDisqualified;
}

- (void)setPresentQmaxUpdateDisqualified:(int)a3
{
  self->_presentQmaxUpdateDisqualified = a3;
}

- (int)presentTimeSinceLastOCV
{
  return self->_presentTimeSinceLastOCV;
}

- (void)setPresentTimeSinceLastOCV:(int)a3
{
  self->_presentTimeSinceLastOCV = a3;
}

- (NSNumber)mitigatedUPOCount
{
  return (NSNumber *)objc_getProperty(self, a2, 784, 1);
}

- (void)setMitigatedUPOCount:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 784);
}

- (BOOL)rejudgeBattery
{
  return self->_rejudgeBattery;
}

- (void)setRejudgeBattery:(BOOL)a3
{
  self->_rejudgeBattery = a3;
}

- (ggcontext)gasGagueConnection
{
  return self->_gasGagueConnection;
}

- (void)setGasGagueConnection:(ggcontext *)a3
{
  self->_gasGagueConnection = a3;
}

- (int)lastUILevel
{
  return self->_lastUILevel;
}

- (void)setLastUILevel:(int)a3
{
  self->_lastUILevel = a3;
}

- (int64_t)ppmEventLoggingCount
{
  return self->_ppmEventLoggingCount;
}

- (void)setPpmEventLoggingCount:(int64_t)a3
{
  self->_ppmEventLoggingCount = a3;
}

- (PLTimer)ppmEventThresholdTimer
{
  return (PLTimer *)objc_getProperty(self, a2, 808, 1);
}

- (void)setPpmEventThresholdTimer:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 808);
}

- (PLCFNotificationOperatorComposition)cpmsDebugNotification
{
  return (PLCFNotificationOperatorComposition *)objc_getProperty(self, a2, 816, 1);
}

- (void)setCpmsDebugNotification:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 816);
}

- (int64_t)csmTotalCount
{
  return self->_csmTotalCount;
}

- (void)setCsmTotalCount:(int64_t)a3
{
  self->_csmTotalCount = a3;
}

- (int64_t)csmFailureCount
{
  return self->_csmFailureCount;
}

- (void)setCsmFailureCount:(int64_t)a3
{
  self->_csmFailureCount = a3;
}

- (NSDate)csmLastFlushMonotonicDate
{
  return (NSDate *)objc_getProperty(self, a2, 840, 1);
}

- (void)setCsmLastFlushMonotonicDate:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 840);
}

- (double)csmFlushInterval
{
  return self->_csmFlushInterval;
}

- (void)setCsmFlushInterval:(double)a3
{
  self->_csmFlushInterval = a3;
}

- (PLCFNotificationOperatorComposition)csmFlushNotification
{
  return (PLCFNotificationOperatorComposition *)objc_getProperty(self, a2, 856, 1);
}

- (void)setCsmFlushNotification:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 856);
}

- (PLCFNotificationOperatorComposition)csmOverrideNotification
{
  return (PLCFNotificationOperatorComposition *)objc_getProperty(self, a2, 864, 1);
}

- (void)setCsmOverrideNotification:(id)a3
{
  objc_setProperty_atomic(self, a2, a3, 864);
}

- (BOOL)csmOverrideValue
{
  return self->_csmOverrideValue;
}

- (void)setCsmOverrideValue:(BOOL)a3
{
  self->_csmOverrideValue = a3;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_csmOverrideNotification, 0);
  objc_storeStrong((id *)&self->_csmFlushNotification, 0);
  objc_storeStrong((id *)&self->_csmLastFlushMonotonicDate, 0);
  objc_storeStrong((id *)&self->_cpmsDebugNotification, 0);
  objc_storeStrong((id *)&self->_ppmEventThresholdTimer, 0);
  objc_storeStrong((id *)&self->_mitigatedUPOCount, 0);
  objc_storeStrong((id *)&self->_prevBatteryCellDisconnectCount, 0);
  objc_storeStrong((id *)&self->_prevGGResetCount, 0);
  objc_storeStrong((id *)&self->_lastTimeInPenaltyBox, 0);
  objc_storeStrong((id *)&self->_lastTimePenaltyBoxIntervalUpdated, 0);
  objc_storeStrong((id *)&self->_entryChargingOld, 0);
  objc_storeStrong((id *)&self->_lastTimeChargingInfoUpdated, 0);
  objc_storeStrong((id *)&self->_batteryChargingUIVisitNotification, 0);
  objc_storeStrong((id *)&self->_batteryHealthUIVisitNotification, 0);
  objc_storeStrong((id *)&self->_batteryUIVisitNotification, 0);
  objc_storeStrong((id *)&self->_TLCOverrideValue, 0);
  objc_storeStrong((id *)&self->_tlcOverrideNotification, 0);
  objc_storeStrong((id *)&self->_lastTLCCounter, 0);
  objc_storeStrong((id *)&self->_chargingIntervalsEntryKey, 0);
  objc_storeStrong((id *)&self->_openChargingIntervals, 0);
  objc_storeStrong((id *)&self->_trackedAccessories, 0);
  objc_storeStrong((id *)&self->_acamSBCListener, 0);
  objc_storeStrong((id *)&self->_bdcAMAListener, 0);
  objc_storeStrong((id *)&self->_mobileChargeModeListener, 0);
  objc_storeStrong((id *)&self->_avSystemController, 0);
  objc_storeStrong((id *)&self->_cleanEnergyChargingListener, 0);
  objc_storeStrong((id *)&self->_smartChargingListener, 0);
  objc_storeStrong((id *)&self->_UPOStepperListener, 0);
  objc_storeStrong((id *)&self->_batteryConfigResponder, 0);
  objc_storeStrong((id *)&self->_batteryUPOStepperResponder, 0);
  objc_storeStrong((id *)&self->_batteryShutdownDataResponder, 0);
  objc_storeStrong((id *)&self->_ioAccessoryManager, 0);
  objc_storeStrong((id *)&self->_lastGasGaugeLogTime, 0);
  objc_storeStrong((id *)&self->_gasGaugeTimer, 0);
  objc_storeStrong((id *)&self->_wakeEntryNotifications, 0);
  objc_storeStrong((id *)&self->_canSleepSemaphore, 0);
  objc_storeStrong((id *)&self->_canSleepEntryNotifications, 0);
  objc_storeStrong((id *)&self->_lastTLCEntryStartTime, 0);
  objc_storeStrong((id *)&self->_magsafeIOService, 0);
  objc_storeStrong((id *)&self->_lastChargerEntry, 0);
  objc_storeStrong((id *)&self->_chargerIOService, 0);
  objc_storeStrong((id *)&self->_batteryChargingStateResponder, 0);
  objc_storeStrong((id *)&self->_batteryDischargeCurrentResponder, 0);
  objc_storeStrong((id *)&self->_batteryTemperatureResponder, 0);
  objc_storeStrong((id *)&self->_batteryInfoResponder, 0);
  objc_storeStrong((id *)&self->_serialNumber, 0);
  objc_storeStrong((id *)&self->_previousPortBuffer4Read, 0);
  objc_storeStrong((id *)&self->_previousPortBuffer3Read, 0);
  objc_storeStrong((id *)&self->_previousPortBuffer2Read, 0);
  objc_storeStrong((id *)&self->_previousPortBuffer1Read, 0);
  objc_storeStrong((id *)&self->_previousPortControllerRead, 0);
  objc_storeStrong((id *)&self->_lastAdapterManufacturer, 0);
  objc_storeStrong((id *)&self->_lastAdapterPower, 0);
  objc_storeStrong((id *)&self->_lastVacVoltageLimit, 0);
  objc_storeStrong((id *)&self->_lastDOD0, 0);
  objc_storeStrong((id *)&self->_lastBatteryConfigEntry, 0);
  objc_storeStrong((id *)&self->_xFlagsRetryTimer, 0);
  objc_storeStrong((id *)&self->_periodicAggdTimer, 0);
  objc_storeStrong((id *)&self->_eaBatteryConnectCountTimer, 0);
  objc_storeStrong((id *)&self->_lastEABatteryConnectedTime, 0);
  objc_storeStrong((id *)&self->_lastkIOPSAppleBatteryCaseCumulativeCurrentKey, 0);
  objc_storeStrong((id *)&self->_entryKeyEAPencilStats, 0);
  objc_storeStrong((id *)&self->_entryKeyEABattery, 0);
  objc_storeStrong((id *)&self->_significantBatteryChangeTimer, 0);
  objc_storeStrong((id *)&self->_EABatteryTimer, 0);
  objc_storeStrong((id *)&self->_previousCurrentAccumulatorDate, 0);
  objc_storeStrong((id *)&self->_lastITMiscStatus, 0);
  objc_storeStrong((id *)&self->_deviceIsPluggedIn, 0);
  objc_storeStrong((id *)&self->_batteryLevelChanged, 0);
  objc_storeStrong((id *)&self->_thermalMonitorListener, 0);
  objc_storeStrong((id *)&self->_iokitPPM, 0);
  objc_storeStrong((id *)&self->_iokitPowerSource, 0);
}

@end
